(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var3829 0)
(declare-sort var3447 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun getImplMethodName/-1836315809 (var3829) String)
(declare-fun hashCode/-467973558 (String) Int)
(declare-fun var3447-init () var3447)
(declare-fun <init>/875830710 (var3447 String) void)
(declare-const null-var3829 var3829)
(declare-const var633 var3829) ; Statement: r0 := @parameter0: java.lang.invoke.SerializedLambda 
(assert (not (= var633 null-var3829)))
(assert true)
(define-const var1111 String (getImplMethodName/-1836315809 var633)) ; Statement: r1 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: java.lang.String getImplMethodName()>() 
(define-const var3853 Int (- 1)) ; Statement: b8 = -1 
(assert true)
(define-const var2512 Int (hashCode/-467973558 var1111)) ; Statement: $i0 = virtualinvoke r1.<java.lang.String: int hashCode()>() 
 ; Statement: lookupswitch($i0) {     case -1766956304: goto $z41 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lambda$uncheck$a3c5d001$1");     case -706715036: goto $z40 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lambda$uncheck$5732f3b9$1");     case 55743573: goto $z39 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lambda$uncheck$2300d7df$1");     case 280508133: goto $z38 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lambda$uncheck$5b7ace8e$1");     case 419182489: goto $z37 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lambda$uncheck$e9066ec4$1");     case 1499146451: goto $z36 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lambda$uncheck$ad313ebc$1");     case 2106418934: goto $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lambda$uncheck$6c25eb8b$1");     default: goto tableswitch(b8) {     case 0: goto $i7 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 1: goto $i6 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 2: goto $i5 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 3: goto $i4 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 4: goto $i3 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 5: goto $i2 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 6: goto $i1 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     default: goto $r72 = new java.lang.IllegalArgumentException; }; } 
(assert (and (not (= var2512 2106418934)) (and (not (= var2512 1499146451)) (and (not (= var2512 419182489)) (and (not (= var2512 280508133)) (and (not (= var2512 55743573)) (and (not (= var2512 (- 706715036))) (and (not (= var2512 (- 1766956304))) true)))))))) ; Intersect: Negate: Cond: $i0 == 2106418934   and Intersect: Negate: Cond: $i0 == 1499146451   and Intersect: Negate: Cond: $i0 == 419182489   and Intersect: Negate: Cond: $i0 == 280508133   and Intersect: Negate: Cond: $i0 == 55743573   and Intersect: Negate: Cond: $i0 == -706715036   and Intersect: Negate: Cond: $i0 == -1766956304   and Non Conditional       
 ; Statement: tableswitch(b8) {     case 0: goto $i7 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 1: goto $i6 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 2: goto $i5 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 3: goto $i4 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 4: goto $i3 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 5: goto $i2 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 6: goto $i1 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     default: goto $r72 = new java.lang.IllegalArgumentException; } 
(assert (and (not (= var3853 6)) (and (not (= var3853 5)) (and (not (= var3853 4)) (and (not (= var3853 3)) (and (not (= var3853 2)) (and (not (= var3853 1)) (and (not (= var3853 0)) true)))))))) ; Intersect: Negate: Cond: b8 == 6   and Intersect: Negate: Cond: b8 == 5   and Intersect: Negate: Cond: b8 == 4   and Intersect: Negate: Cond: b8 == 3   and Intersect: Negate: Cond: b8 == 2   and Intersect: Negate: Cond: b8 == 1   and Intersect: Negate: Cond: b8 == 0   and Non Conditional       
(define-const var2535 var3447 var3447-init) ; Statement: $r72 = new java.lang.IllegalArgumentException 
(assert true)
;(assert (<init>/875830710 var2535 "Invalid lambda deserialization")) ; Statement: specialinvoke $r72.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid lambda deserialization") 

(declare-const var2535!1 var3447)
(declare-const var1623 String)
 ; Statement: throw $r72 
(check-sat)
(get-model)
(get-unsat-core)
; {getImplMethodName/-1836315809=([java.lang.invoke.SerializedLambda], java.lang.String), hashCode/-467973558=([java.lang.String], int), var3447-init=([], java.lang.IllegalArgumentException), <init>/875830710=([java.lang.IllegalArgumentException, java.lang.String], void)}
; {var3829=java.lang.invoke.SerializedLambda, var633=r0, var1111=r1, var3853=b8, var2512=$i0, var3447=java.lang.IllegalArgumentException, var2535=$r72, var1623="Invalid lambda deserialization"}
; {java.lang.invoke.SerializedLambda=var3829, r0=var633, r1=var1111, b8=var3853, $i0=var2512, java.lang.IllegalArgumentException=var3447, $r72=var2535, "Invalid lambda deserialization"=var1623}
;seq <java.lang.String: int hashCode()>
;cnt {"<java.lang.String: int hashCode()>": 1}
;stmts r0 := @parameter0: java.lang.invoke.SerializedLambda;	r1 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: java.lang.String getImplMethodName()>();	b8 = -1;	$i0 = virtualinvoke r1.<java.lang.String: int hashCode()>();	lookupswitch($i0) {     case -1766956304: goto $z41 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lambda$uncheck$a3c5d001$1");     case -706715036: goto $z40 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lambda$uncheck$5732f3b9$1");     case 55743573: goto $z39 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lambda$uncheck$2300d7df$1");     case 280508133: goto $z38 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lambda$uncheck$5b7ace8e$1");     case 419182489: goto $z37 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lambda$uncheck$e9066ec4$1");     case 1499146451: goto $z36 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lambda$uncheck$ad313ebc$1");     case 2106418934: goto $z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>("lambda$uncheck$6c25eb8b$1");     default: goto tableswitch(b8) {     case 0: goto $i7 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 1: goto $i6 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 2: goto $i5 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 3: goto $i4 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 4: goto $i3 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 5: goto $i2 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 6: goto $i1 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     default: goto $r72 = new java.lang.IllegalArgumentException; }; };	tableswitch(b8) {     case 0: goto $i7 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 1: goto $i6 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 2: goto $i5 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 3: goto $i4 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 4: goto $i3 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 5: goto $i2 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     case 6: goto $i1 = virtualinvoke r0.<java.lang.invoke.SerializedLambda: int getImplMethodKind()>();     default: goto $r72 = new java.lang.IllegalArgumentException; };	$r72 = new java.lang.IllegalArgumentException;	specialinvoke $r72.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid lambda deserialization");	throw $r72
;block_num 3