(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var1575 0)
(declare-sort var3929 0)
(declare-sort var1156 0)
(declare-sort var254 0)
(declare-sort var2778 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun var3929_defaultVisitorClass/-1441149525 () String)
(declare-fun var254_getNodeNames/-49238214 () var1156)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun var3929_visitorClass/-25171238 () String)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-fun println/-1226480079 (var1575 String) void)
(declare-fun var3929_getVisitorArgumentType/1105650101 () String)
(declare-fun var3929_getVisitorReturnType/1747350434 () String)
(define-fun is-whitespace ((char String)) Bool (< (str.to_code char) 33))
(define-fun-rec trim-left ((s String)) String (ite (= s "") "" (ite (is-whitespace (str.substr s 0 1)) (trim-left (str.substr s 1 (- (str.len s) 1))) s)))
(define-fun-rec trim-right ((s String)) String (ite (= s "") "" (ite (is-whitespace (str.substr s (- (str.len s) 1) 1)) (trim-right (str.substr s 0 (- (str.len s) 1))) s)))
(define-fun trim/-847153721 ((s String)) String (trim-right (trim-left s)))
(declare-fun var2778_getMulti/-1858061690 () Bool)
(declare-const null-var1575 var1575)
(declare-const var266 var1575) ; Statement: r2 := @parameter0: java.io.PrintWriter 
(assert (not (= var266 null-var1575)))
(define-const var2025 String var3929_defaultVisitorClass/-1441149525) ; Statement: r0 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String defaultVisitorClass()>() 
(define-const var1490 var1156 var254_getNodeNames/-49238214) ; Statement: r1 = staticinvoke <org.javacc.jjtree.ASTNodeDescriptor: java.util.List getNodeNames()>() 
(define-const var1307 String String-init) ; Statement: $r3 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var1307)) ; Statement: specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() 
(declare-const var1307!1 String)
(assert (= var1307!1 ""))
(assert true)
(define-const var80 String (append/672562846 var1307!1 "class ")) ; Statement: $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("class ") 
(declare-const var1307!2 String)
(assert (= var1307!2 (str.++ var1307!1 "class ")))
(assert true)
(define-const var3592 String (append/672562846 var80 var2025)) ; Statement: $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) 
(declare-const var80!1 String)
(assert (= var80!1 (str.++ var80 var2025)))
(assert true)
(define-const var3672 String (append/672562846 var3592 " : public ")) ; Statement: $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : public ") 
(declare-const var3592!1 String)
(assert (= var3592!1 (str.++ var3592 " : public ")))
(define-const var3839 String var3929_visitorClass/-25171238) ; Statement: $r6 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String visitorClass()>() 
(assert true)
(define-const var2357 String (append/672562846 var3672 var3839)) ; Statement: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) 
(declare-const var3672!1 String)
(assert (= var3672!1 (str.++ var3672 var3839)))
(assert true)
(define-const var2771 String (append/672562846 var2357 " {")) ; Statement: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {") 
(declare-const var2357!1 String)
(assert (= var2357!1 (str.++ var2357 " {")))
(assert true)
(define-const var599 String (toString/-2075883882 var2771)) ; Statement: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var266 var599)) ; Statement: virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r10) 

(declare-const var266!1 var1575)
(declare-const var599!1 String)
(define-const var2527 String var3929_getVisitorArgumentType/1105650101) ; Statement: r11 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String getVisitorArgumentType()>() 
(define-const var852 String var3929_getVisitorReturnType/1747350434) ; Statement: r12 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String getVisitorReturnType()>() 
(assert true)
;(assert (println/-1226480079 var266!1 "public:")) ; Statement: virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("public:") 

(declare-const var266!2 var1575)
(declare-const var1145 String)
(define-const var1323 String String-init) ; Statement: $r13 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var1323)) ; Statement: specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() 
(declare-const var1323!1 String)
(assert (= var1323!1 ""))
(assert true)
(define-const var683 String (append/672562846 var1323!1 "  virtual ")) ; Statement: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  virtual ") 
(declare-const var1323!2 String)
(assert (= var1323!2 (str.++ var1323!1 "  virtual ")))
(assert true)
(define-const var3803 String (append/672562846 var683 var852)) ; Statement: $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12) 
(declare-const var683!1 String)
(assert (= var683!1 (str.++ var683 var852)))
(assert true)
(define-const var1285 String (append/672562846 var3803 " defaultVisit(const SimpleNode *node, ")) ; Statement: $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" defaultVisit(const SimpleNode *node, ") 
(declare-const var3803!1 String)
(assert (= var3803!1 (str.++ var3803 " defaultVisit(const SimpleNode *node, ")))
(assert true)
(define-const var3665 String (append/672562846 var1285 var2527)) ; Statement: $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11) 
(declare-const var1285!1 String)
(assert (= var1285!1 (str.++ var1285 var2527)))
(assert true)
(define-const var1801 String (append/672562846 var3665 " data) = 0;")) ; Statement: $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data) = 0;") 
(declare-const var3665!1 String)
(assert (= var3665!1 (str.++ var3665 " data) = 0;")))
(assert true)
(define-const var3284 String (toString/-2075883882 var1801)) ; Statement: $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var266!2 var3284)) ; Statement: virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r19) 

(declare-const var266!3 var1575)
(declare-const var3284!1 String)
(define-const var353 String String-init) ; Statement: $r20 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var353)) ; Statement: specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() 
(declare-const var353!1 String)
(assert (= var353!1 ""))
(assert true)
(define-const var1958 String (append/672562846 var353!1 "  virtual ")) ; Statement: $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  virtual ") 
(declare-const var353!2 String)
(assert (= var353!2 (str.++ var353!1 "  virtual ")))
(assert true)
(define-const var679 String (append/672562846 var1958 var852)) ; Statement: $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12) 
(declare-const var1958!1 String)
(assert (= var1958!1 (str.++ var1958 var852)))
(assert true)
(define-const var3432 String (append/672562846 var679 " visit(const SimpleNode *node, ")) ; Statement: $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" visit(const SimpleNode *node, ") 
(declare-const var679!1 String)
(assert (= var679!1 (str.++ var679 " visit(const SimpleNode *node, ")))
(assert true)
(define-const var3967 String (append/672562846 var3432 var2527)) ; Statement: $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11) 
(declare-const var3432!1 String)
(assert (= var3432!1 (str.++ var3432 var2527)))
(assert true)
(define-const var3795 String (append/672562846 var3967 " data) {")) ; Statement: $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data) {") 
(declare-const var3967!1 String)
(assert (= var3967!1 (str.++ var3967 " data) {")))
(assert true)
(define-const var1927 String (toString/-2075883882 var3795)) ; Statement: $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var266!3 var1927)) ; Statement: virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r26) 

(declare-const var266!4 var1575)
(declare-const var1927!1 String)
(define-const var1426 String String-init) ; Statement: $r27 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var1426)) ; Statement: specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() 
(declare-const var1426!1 String)
(assert (= var1426!1 ""))
(assert true)
(define-const var1252 String (append/672562846 var1426!1 "    ")) ; Statement: $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ") 
(declare-const var1426!2 String)
(assert (= var1426!2 (str.++ var1426!1 "    ")))
(assert true)
(define-const var2458 String (trim/-847153721 var852)) ; Statement: $r28 = virtualinvoke r12.<java.lang.String: java.lang.String trim()>() 
(assert true)
(define-const var1904 Bool (= var2458 "void")) ; Statement: $z0 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("void") 
 ; Statement: if $z0 == 0 goto $r63 = "return " 
(assert (not (= (ite var1904 1 0) 0))) ; Negate: Cond: $z0 == 0  
(define-const var973 String "") ; Statement: $r63 = "" 
 ; Statement: goto [?= $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63)] 
(assert true) ; Non Conditional
(assert true)
(define-const var220 String (append/672562846 var1252 var973)) ; Statement: $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63) 
(declare-const var1252!1 String)
(assert (= var1252!1 (str.++ var1252 var973)))
(assert true)
(define-const var1078 String (append/672562846 var220 "defaultVisit(node, data);")) ; Statement: $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("defaultVisit(node, data);") 
(declare-const var220!1 String)
(assert (= var220!1 (str.++ var220 "defaultVisit(node, data);")))
(assert true)
(define-const var2281 String (toString/-2075883882 var1078)) ; Statement: $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var266!4 var2281)) ; Statement: virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r32) 

(declare-const var266!5 var1575)
(declare-const var2281!1 String)
(assert true)
;(assert (println/-1226480079 var266!5 "}")) ; Statement: virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("}") 

(declare-const var266!6 var1575)
(declare-const var2057 String)
(define-const var3021 Bool var2778_getMulti/-1858061690) ; Statement: $z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getMulti()>() 
 ; Statement: if $z1 == 0 goto $r33 = new java.lang.StringBuilder 
(assert (= (ite var3021 1 0) 0)) ; Cond: $z1 == 0 
(define-const var3482 String String-init) ; Statement: $r33 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var3482)) ; Statement: specialinvoke $r33.<java.lang.StringBuilder: void <init>()>() 
(declare-const var3482!1 String)
(assert (= var3482!1 ""))
(assert true)
(define-const var2114 String (append/672562846 var3482!1 "  ~")) ; Statement: $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ~") 
(declare-const var3482!2 String)
(assert (= var3482!2 (str.++ var3482!1 "  ~")))
(assert true)
(define-const var2099 String (append/672562846 var2114 var2025)) ; Statement: $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) 
(declare-const var2114!1 String)
(assert (= var2114!1 (str.++ var2114 var2025)))
(assert true)
(define-const var3090 String (append/672562846 var2099 "() { }")) ; Statement: $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() { }") 
(declare-const var2099!1 String)
(assert (= var2099!1 (str.++ var2099 "() { }")))
(assert true)
(define-const var1792 String (toString/-2075883882 var3090)) ; Statement: $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var266!6 var1792)) ; Statement: virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r37) 

(declare-const var266!7 var1575)
(declare-const var1792!1 String)
(assert true)
;(assert (println/-1226480079 var266!7 "};")) ; Statement: virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("};") 

(declare-const var266!8 var1575)
(declare-const var1209 String)
 ; Statement: return 
(check-sat)
(get-model)
(get-unsat-core)
; {var3929_defaultVisitorClass/-1441149525=([], java.lang.String), var254_getNodeNames/-49238214=([], java.util.List), String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), var3929_visitorClass/-25171238=([], java.lang.String), toString/-2075883882=([java.lang.StringBuilder], java.lang.String), println/-1226480079=([java.io.PrintWriter, java.lang.String], void), var3929_getVisitorArgumentType/1105650101=([], java.lang.String), var3929_getVisitorReturnType/1747350434=([], java.lang.String), trim/-847153721=([java.lang.String], java.lang.String), var2778_getMulti/-1858061690=([], boolean)}
; {var1575=java.io.PrintWriter, var266=r2, var3929=org.javacc.jjtree.CPPNodeFiles, var2025=r0, var1156=java.util.List, var254=org.javacc.jjtree.ASTNodeDescriptor, var1490=r1, var1307=$r3, var80=$r4, var3592=$r5, var3672=$r7, var3839=$r6, var2357=$r8, var2771=$r9, var599=$r10, var2527=r11, var852=r12, var1145="public:", var1323=$r13, var683=$r14, var3803=$r15, var1285=$r16, var3665=$r17, var1801=$r18, var3284=$r19, var353=$r20, var1958=$r21, var679=$r22, var3432=$r23, var3967=$r24, var3795=$r25, var1927=$r26, var1426=$r27, var1252=$r29, var2458=$r28, var1904=$z0, var973=$r63, var220=$r30, var1078=$r31, var2281=$r32, var2057="}", var2778=org.javacc.jjtree.JJTreeOptions, var3021=$z1, var3482=$r33, var2114=$r34, var2099=$r35, var3090=$r36, var1792=$r37, var1209="};"}
; {java.io.PrintWriter=var1575, r2=var266, org.javacc.jjtree.CPPNodeFiles=var3929, r0=var2025, java.util.List=var1156, org.javacc.jjtree.ASTNodeDescriptor=var254, r1=var1490, $r3=var1307, $r4=var80, $r5=var3592, $r7=var3672, $r6=var3839, $r8=var2357, $r9=var2771, $r10=var599, r11=var2527, r12=var852, "public:"=var1145, $r13=var1323, $r14=var683, $r15=var3803, $r16=var1285, $r17=var3665, $r18=var1801, $r19=var3284, $r20=var353, $r21=var1958, $r22=var679, $r23=var3432, $r24=var3967, $r25=var3795, $r26=var1927, $r27=var1426, $r29=var1252, $r28=var2458, $z0=var1904, $r63=var973, $r30=var220, $r31=var1078, $r32=var2281, "}"=var2057, org.javacc.jjtree.JJTreeOptions=var2778, $z1=var3021, $r33=var3482, $r34=var2114, $r35=var2099, $r36=var3090, $r37=var1792, "};"=var1209}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.String: java.lang.String trim()>;	<java.lang.String: boolean equals(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 5,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 21,"<java.lang.StringBuilder: java.lang.String toString()>": 5,"<java.lang.String: java.lang.String trim()>": 1,"<java.lang.String: boolean equals(java.lang.Object)>": 1}
;stmts r2 := @parameter0: java.io.PrintWriter;	r0 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String defaultVisitorClass()>();	r1 = staticinvoke <org.javacc.jjtree.ASTNodeDescriptor: java.util.List getNodeNames()>();	$r3 = new java.lang.StringBuilder;	specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();	$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("class ");	$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);	$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : public ");	$r6 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String visitorClass()>();	$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);	$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");	$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r10);	r11 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String getVisitorArgumentType()>();	r12 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String getVisitorReturnType()>();	virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("public:");	$r13 = new java.lang.StringBuilder;	specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();	$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  virtual ");	$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);	$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" defaultVisit(const SimpleNode *node, ");	$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);	$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data) = 0;");	$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r19);	$r20 = new java.lang.StringBuilder;	specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();	$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  virtual ");	$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);	$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" visit(const SimpleNode *node, ");	$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);	$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data) {");	$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r26);	$r27 = new java.lang.StringBuilder;	specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();	$r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");	$r28 = virtualinvoke r12.<java.lang.String: java.lang.String trim()>();	$z0 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("void");	if $z0 == 0 goto $r63 = "return ";	$r63 = "";	goto [?= $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63)];	$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);	$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("defaultVisit(node, data);");	$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r32);	virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("}");	$z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getMulti()>();	if $z1 == 0 goto $r33 = new java.lang.StringBuilder;	$r33 = new java.lang.StringBuilder;	specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();	$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ~");	$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);	$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() { }");	$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r37);	virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("};");	return
;block_num 4