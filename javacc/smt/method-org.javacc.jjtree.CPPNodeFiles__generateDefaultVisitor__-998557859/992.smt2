(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var3854 0)
(declare-sort var2568 0)
(declare-sort var2922 0)
(declare-sort var2639 0)
(declare-sort var3266 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun var2568_defaultVisitorClass/-1441149525 () String)
(declare-fun var2639_getNodeNames/-49238214 () var2922)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun var2568_visitorClass/-25171238 () String)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-fun println/-1226480079 (var3854 String) void)
(declare-fun var2568_getVisitorArgumentType/1105650101 () String)
(declare-fun var2568_getVisitorReturnType/1747350434 () String)
(define-fun is-whitespace ((char String)) Bool (< (str.to_code char) 33))
(define-fun-rec trim-left ((s String)) String (ite (= s "") "" (ite (is-whitespace (str.substr s 0 1)) (trim-left (str.substr s 1 (- (str.len s) 1))) s)))
(define-fun-rec trim-right ((s String)) String (ite (= s "") "" (ite (is-whitespace (str.substr s (- (str.len s) 1) 1)) (trim-right (str.substr s 0 (- (str.len s) 1))) s)))
(define-fun trim/-847153721 ((s String)) String (trim-right (trim-left s)))
(declare-fun var3266_getMulti/-1858061690 () Bool)
(declare-const null-var3854 var3854)
(declare-const var1426 var3854) ; Statement: r2 := @parameter0: java.io.PrintWriter 
(assert (not (= var1426 null-var3854)))
(define-const var3821 String var2568_defaultVisitorClass/-1441149525) ; Statement: r0 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String defaultVisitorClass()>() 
(define-const var1204 var2922 var2639_getNodeNames/-49238214) ; Statement: r1 = staticinvoke <org.javacc.jjtree.ASTNodeDescriptor: java.util.List getNodeNames()>() 
(define-const var2389 String String-init) ; Statement: $r3 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var2389)) ; Statement: specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() 
(declare-const var2389!1 String)
(assert (= var2389!1 ""))
(assert true)
(define-const var2666 String (append/672562846 var2389!1 "class ")) ; Statement: $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("class ") 
(declare-const var2389!2 String)
(assert (= var2389!2 (str.++ var2389!1 "class ")))
(assert true)
(define-const var1613 String (append/672562846 var2666 var3821)) ; Statement: $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) 
(declare-const var2666!1 String)
(assert (= var2666!1 (str.++ var2666 var3821)))
(assert true)
(define-const var3396 String (append/672562846 var1613 " : public ")) ; Statement: $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : public ") 
(declare-const var1613!1 String)
(assert (= var1613!1 (str.++ var1613 " : public ")))
(define-const var2076 String var2568_visitorClass/-25171238) ; Statement: $r6 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String visitorClass()>() 
(assert true)
(define-const var1081 String (append/672562846 var3396 var2076)) ; Statement: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) 
(declare-const var3396!1 String)
(assert (= var3396!1 (str.++ var3396 var2076)))
(assert true)
(define-const var2039 String (append/672562846 var1081 " {")) ; Statement: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {") 
(declare-const var1081!1 String)
(assert (= var1081!1 (str.++ var1081 " {")))
(assert true)
(define-const var880 String (toString/-2075883882 var2039)) ; Statement: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var1426 var880)) ; Statement: virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r10) 

(declare-const var1426!1 var3854)
(declare-const var880!1 String)
(define-const var2143 String var2568_getVisitorArgumentType/1105650101) ; Statement: r11 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String getVisitorArgumentType()>() 
(define-const var1456 String var2568_getVisitorReturnType/1747350434) ; Statement: r12 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String getVisitorReturnType()>() 
(assert true)
;(assert (println/-1226480079 var1426!1 "public:")) ; Statement: virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("public:") 

(declare-const var1426!2 var3854)
(declare-const var134 String)
(define-const var1365 String String-init) ; Statement: $r13 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var1365)) ; Statement: specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() 
(declare-const var1365!1 String)
(assert (= var1365!1 ""))
(assert true)
(define-const var1850 String (append/672562846 var1365!1 "  virtual ")) ; Statement: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  virtual ") 
(declare-const var1365!2 String)
(assert (= var1365!2 (str.++ var1365!1 "  virtual ")))
(assert true)
(define-const var1404 String (append/672562846 var1850 var1456)) ; Statement: $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12) 
(declare-const var1850!1 String)
(assert (= var1850!1 (str.++ var1850 var1456)))
(assert true)
(define-const var3249 String (append/672562846 var1404 " defaultVisit(const SimpleNode *node, ")) ; Statement: $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" defaultVisit(const SimpleNode *node, ") 
(declare-const var1404!1 String)
(assert (= var1404!1 (str.++ var1404 " defaultVisit(const SimpleNode *node, ")))
(assert true)
(define-const var3668 String (append/672562846 var3249 var2143)) ; Statement: $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11) 
(declare-const var3249!1 String)
(assert (= var3249!1 (str.++ var3249 var2143)))
(assert true)
(define-const var2285 String (append/672562846 var3668 " data) = 0;")) ; Statement: $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data) = 0;") 
(declare-const var3668!1 String)
(assert (= var3668!1 (str.++ var3668 " data) = 0;")))
(assert true)
(define-const var1925 String (toString/-2075883882 var2285)) ; Statement: $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var1426!2 var1925)) ; Statement: virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r19) 

(declare-const var1426!3 var3854)
(declare-const var1925!1 String)
(define-const var2193 String String-init) ; Statement: $r20 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var2193)) ; Statement: specialinvoke $r20.<java.lang.StringBuilder: void <init>()>() 
(declare-const var2193!1 String)
(assert (= var2193!1 ""))
(assert true)
(define-const var2206 String (append/672562846 var2193!1 "  virtual ")) ; Statement: $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  virtual ") 
(declare-const var2193!2 String)
(assert (= var2193!2 (str.++ var2193!1 "  virtual ")))
(assert true)
(define-const var3331 String (append/672562846 var2206 var1456)) ; Statement: $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12) 
(declare-const var2206!1 String)
(assert (= var2206!1 (str.++ var2206 var1456)))
(assert true)
(define-const var1220 String (append/672562846 var3331 " visit(const SimpleNode *node, ")) ; Statement: $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" visit(const SimpleNode *node, ") 
(declare-const var3331!1 String)
(assert (= var3331!1 (str.++ var3331 " visit(const SimpleNode *node, ")))
(assert true)
(define-const var3288 String (append/672562846 var1220 var2143)) ; Statement: $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11) 
(declare-const var1220!1 String)
(assert (= var1220!1 (str.++ var1220 var2143)))
(assert true)
(define-const var2954 String (append/672562846 var3288 " data) {")) ; Statement: $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data) {") 
(declare-const var3288!1 String)
(assert (= var3288!1 (str.++ var3288 " data) {")))
(assert true)
(define-const var1198 String (toString/-2075883882 var2954)) ; Statement: $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var1426!3 var1198)) ; Statement: virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r26) 

(declare-const var1426!4 var3854)
(declare-const var1198!1 String)
(define-const var3075 String String-init) ; Statement: $r27 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var3075)) ; Statement: specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() 
(declare-const var3075!1 String)
(assert (= var3075!1 ""))
(assert true)
(define-const var1316 String (append/672562846 var3075!1 "    ")) ; Statement: $r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ") 
(declare-const var3075!2 String)
(assert (= var3075!2 (str.++ var3075!1 "    ")))
(assert true)
(define-const var1002 String (trim/-847153721 var1456)) ; Statement: $r28 = virtualinvoke r12.<java.lang.String: java.lang.String trim()>() 
(assert true)
(define-const var1174 Bool (= var1002 "void")) ; Statement: $z0 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("void") 
 ; Statement: if $z0 == 0 goto $r63 = "return " 
(assert (= (ite var1174 1 0) 0)) ; Cond: $z0 == 0 
(define-const var1402 String "return ") ; Statement: $r63 = "return " 
(assert true) ; Non Conditional
(assert true)
(define-const var772 String (append/672562846 var1316 var1402)) ; Statement: $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63) 
(declare-const var1316!1 String)
(assert (= var1316!1 (str.++ var1316 var1402)))
(assert true)
(define-const var2699 String (append/672562846 var772 "defaultVisit(node, data);")) ; Statement: $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("defaultVisit(node, data);") 
(declare-const var772!1 String)
(assert (= var772!1 (str.++ var772 "defaultVisit(node, data);")))
(assert true)
(define-const var1038 String (toString/-2075883882 var2699)) ; Statement: $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var1426!4 var1038)) ; Statement: virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r32) 

(declare-const var1426!5 var3854)
(declare-const var1038!1 String)
(assert true)
;(assert (println/-1226480079 var1426!5 "}")) ; Statement: virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("}") 

(declare-const var1426!6 var3854)
(declare-const var2038 String)
(define-const var2330 Bool var3266_getMulti/-1858061690) ; Statement: $z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getMulti()>() 
 ; Statement: if $z1 == 0 goto $r33 = new java.lang.StringBuilder 
(assert (= (ite var2330 1 0) 0)) ; Cond: $z1 == 0 
(define-const var1309 String String-init) ; Statement: $r33 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var1309)) ; Statement: specialinvoke $r33.<java.lang.StringBuilder: void <init>()>() 
(declare-const var1309!1 String)
(assert (= var1309!1 ""))
(assert true)
(define-const var543 String (append/672562846 var1309!1 "  ~")) ; Statement: $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ~") 
(declare-const var1309!2 String)
(assert (= var1309!2 (str.++ var1309!1 "  ~")))
(assert true)
(define-const var3018 String (append/672562846 var543 var3821)) ; Statement: $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0) 
(declare-const var543!1 String)
(assert (= var543!1 (str.++ var543 var3821)))
(assert true)
(define-const var2286 String (append/672562846 var3018 "() { }")) ; Statement: $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() { }") 
(declare-const var3018!1 String)
(assert (= var3018!1 (str.++ var3018 "() { }")))
(assert true)
(define-const var3074 String (toString/-2075883882 var2286)) ; Statement: $r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var1426!6 var3074)) ; Statement: virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r37) 

(declare-const var1426!7 var3854)
(declare-const var3074!1 String)
(assert true)
;(assert (println/-1226480079 var1426!7 "};")) ; Statement: virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("};") 

(declare-const var1426!8 var3854)
(declare-const var2360 String)
 ; Statement: return 
(check-sat)
(get-model)
(get-unsat-core)
; {var2568_defaultVisitorClass/-1441149525=([], java.lang.String), var2639_getNodeNames/-49238214=([], java.util.List), String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), var2568_visitorClass/-25171238=([], java.lang.String), toString/-2075883882=([java.lang.StringBuilder], java.lang.String), println/-1226480079=([java.io.PrintWriter, java.lang.String], void), var2568_getVisitorArgumentType/1105650101=([], java.lang.String), var2568_getVisitorReturnType/1747350434=([], java.lang.String), trim/-847153721=([java.lang.String], java.lang.String), var3266_getMulti/-1858061690=([], boolean)}
; {var3854=java.io.PrintWriter, var1426=r2, var2568=org.javacc.jjtree.CPPNodeFiles, var3821=r0, var2922=java.util.List, var2639=org.javacc.jjtree.ASTNodeDescriptor, var1204=r1, var2389=$r3, var2666=$r4, var1613=$r5, var3396=$r7, var2076=$r6, var1081=$r8, var2039=$r9, var880=$r10, var2143=r11, var1456=r12, var134="public:", var1365=$r13, var1850=$r14, var1404=$r15, var3249=$r16, var3668=$r17, var2285=$r18, var1925=$r19, var2193=$r20, var2206=$r21, var3331=$r22, var1220=$r23, var3288=$r24, var2954=$r25, var1198=$r26, var3075=$r27, var1316=$r29, var1002=$r28, var1174=$z0, var1402=$r63, var772=$r30, var2699=$r31, var1038=$r32, var2038="}", var3266=org.javacc.jjtree.JJTreeOptions, var2330=$z1, var1309=$r33, var543=$r34, var3018=$r35, var2286=$r36, var3074=$r37, var2360="};"}
; {java.io.PrintWriter=var3854, r2=var1426, org.javacc.jjtree.CPPNodeFiles=var2568, r0=var3821, java.util.List=var2922, org.javacc.jjtree.ASTNodeDescriptor=var2639, r1=var1204, $r3=var2389, $r4=var2666, $r5=var1613, $r7=var3396, $r6=var2076, $r8=var1081, $r9=var2039, $r10=var880, r11=var2143, r12=var1456, "public:"=var134, $r13=var1365, $r14=var1850, $r15=var1404, $r16=var3249, $r17=var3668, $r18=var2285, $r19=var1925, $r20=var2193, $r21=var2206, $r22=var3331, $r23=var1220, $r24=var3288, $r25=var2954, $r26=var1198, $r27=var3075, $r29=var1316, $r28=var1002, $z0=var1174, $r63=var1402, $r30=var772, $r31=var2699, $r32=var1038, "}"=var2038, org.javacc.jjtree.JJTreeOptions=var3266, $z1=var2330, $r33=var1309, $r34=var543, $r35=var3018, $r36=var2286, $r37=var3074, "};"=var2360}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.String: java.lang.String trim()>;	<java.lang.String: boolean equals(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 5,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 21,"<java.lang.StringBuilder: java.lang.String toString()>": 5,"<java.lang.String: java.lang.String trim()>": 1,"<java.lang.String: boolean equals(java.lang.Object)>": 1}
;stmts r2 := @parameter0: java.io.PrintWriter;	r0 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String defaultVisitorClass()>();	r1 = staticinvoke <org.javacc.jjtree.ASTNodeDescriptor: java.util.List getNodeNames()>();	$r3 = new java.lang.StringBuilder;	specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();	$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("class ");	$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);	$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" : public ");	$r6 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String visitorClass()>();	$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);	$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" {");	$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r10);	r11 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String getVisitorArgumentType()>();	r12 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String getVisitorReturnType()>();	virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("public:");	$r13 = new java.lang.StringBuilder;	specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();	$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  virtual ");	$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);	$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" defaultVisit(const SimpleNode *node, ");	$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);	$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data) = 0;");	$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r19);	$r20 = new java.lang.StringBuilder;	specialinvoke $r20.<java.lang.StringBuilder: void <init>()>();	$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  virtual ");	$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12);	$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" visit(const SimpleNode *node, ");	$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11);	$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" data) {");	$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r26);	$r27 = new java.lang.StringBuilder;	specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();	$r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("    ");	$r28 = virtualinvoke r12.<java.lang.String: java.lang.String trim()>();	$z0 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>("void");	if $z0 == 0 goto $r63 = "return ";	$r63 = "return ";	$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63);	$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("defaultVisit(node, data);");	$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r32);	virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("}");	$z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getMulti()>();	if $z1 == 0 goto $r33 = new java.lang.StringBuilder;	$r33 = new java.lang.StringBuilder;	specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();	$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("  ~");	$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0);	$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("() { }");	$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r37);	virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>("};");	return
;block_num 4