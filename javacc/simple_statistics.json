[
    {
        "filename": "smt\\method-org.javacc.jjdoc.TextGenerator__productionStart__1237237053\\239.smt2",
        "z3": {
            "memory": 30052352,
            "run_time": 0.2220780849456787,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3773:\r\n  ;;   var3773!val!0 var3773!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3773!val!0 () var3773)\r\n  (declare-fun var3773!val!1 () var3773)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3773)) (or (= x var3773!val!0) (= x var3773!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3134:\r\n  ;;   var3134!val!0 var3134!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3134!val!0 () var3134)\r\n  (declare-fun var3134!val!1 () var3134)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3134)) (or (= x var3134!val!0) (= x var3134!val!1)))\r\n  ;; -----------\r\n  (define-fun var151 () String\r\n    (str.++ var741!1 \"\\t\" (getLhs/-759107248 var3310) \"\\t:=\\t\"))\r\n  (define-fun var573 () String\r\n    (str.++ var741!1 \"\\t\" (getLhs/-759107248 var3310)))\r\n  (define-fun var3180 () String\r\n    (getLhs/-759107248 var3310))\r\n  (define-fun var2666 () var124\r\n    (ostr/154848238 var1779))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1779 () var3773\r\n    var3773!val!0)\r\n  (define-fun null-var3134 () var3134\r\n    var3134!val!1)\r\n  (define-fun var3023 () String\r\n    (str.++ var741!1 \"\\t\" (getLhs/-759107248 var3310) \"\\t:=\\t\"))\r\n  (define-fun var741 () String\r\n    String-init)\r\n  (define-fun var2180 () String\r\n    (str.++ var741!1 \"\\t\"))\r\n  (define-fun null-var3773 () var3773\r\n    var3773!val!1)\r\n  (define-fun var3310 () var3134\r\n    var3134!val!0)\r\n  (define-fun var573!1 () String\r\n    \"\\t\\t:=\\t\")\r\n  (define-fun var741!1 () String\r\n    \"\")\r\n  (define-fun var2180!1 () String\r\n    \"\\t\")\r\n  (define-fun var741!2 () String\r\n    \"\\t\")\r\n  (define-fun var2666!1 () var124\r\n    var124!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var151!1 () String\r\n    \"\")\r\n  (define-fun getLhs/-759107248 ((x!0 var3134)) String\r\n    \"\")\r\n  (define-fun print/-2007916749 ((x!0 var124) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun ostr/154848238 ((x!0 var3773)) var124\r\n    var124!val!0)\r\n)\r\n(error \"line 53 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.092803955078125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3773 is 2\r\n; rep: (as @var3773_0 var3773)\r\n; rep: (as @var3773_1 var3773)\r\n; cardinality of var3134 is 2\r\n; rep: (as @var3134_0 var3134)\r\n; rep: (as @var3134_1 var3134)\r\n; cardinality of var124 is 1\r\n; rep: (as @var124_0 var124)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun ostr/154848238 ((BOUND_VARIABLE_551 var3773)) var124 (as @var124_0 var124))\r\n(define-fun String-init () String \"\")\r\n(define-fun getLhs/-759107248 ((BOUND_VARIABLE_554 var3134)) String \"\")\r\n(define-fun print/-2007916749 ((BOUND_VARIABLE_557 var124) (BOUND_VARIABLE_558 String)) void (as @void_0 void))\r\n(define-fun null-var3773 () var3773 (as @var3773_0 var3773))\r\n(define-fun null-var3134 () var3134 (as @var3134_0 var3134))\r\n(define-fun var1779 () var3773 (as @var3773_1 var3773))\r\n(define-fun var3310 () var3134 (as @var3134_1 var3134))\r\n(define-fun var741!1 () String \"\")\r\n(define-fun var741!2 () String \"\\u{5c}t\")\r\n(define-fun var2180!1 () String \"\\u{5c}t\")\r\n(define-fun var573!1 () String \"\\u{5c}t\\u{5c}t:=\\u{5c}t\")\r\n(define-fun var2666!1 () var124 (as @var124_0 var124))\r\n(define-fun var151!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33849344,
            "run_time": 0.09292721748352051,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3773:\n  ;;   var3773!val!0 var3773!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3773!val!0 () var3773)\n  (declare-fun var3773!val!1 () var3773)\n  ;; cardinality constraint:\n  (forall ((x var3773)) (or (= x var3773!val!0) (= x var3773!val!1)))\n  ;; -----------\n  ;; universe for var3134:\n  ;;   var3134!val!0 var3134!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3134!val!0 () var3134)\n  (declare-fun var3134!val!1 () var3134)\n  ;; cardinality constraint:\n  (forall ((x var3134)) (or (= x var3134!val!0) (= x var3134!val!1)))\n  ;; -----------\n  (define-fun var3180 () String\n    (getLhs/-759107248 var3310))\n  (define-fun var573 () String\n    (str.++ var741!1 \"\\t\" (getLhs/-759107248 var3310)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3023 () String\n    (str.++ var741!1 \"\\t\" (getLhs/-759107248 var3310) \"\\t:=\\t\"))\n  (define-fun var741 () String\n    String-init)\n  (define-fun var2666 () var124\n    (ostr/154848238 var1779))\n  (define-fun var1779 () var3773\n    var3773!val!0)\n  (define-fun null-var3134 () var3134\n    var3134!val!1)\n  (define-fun var2180 () String\n    (str.++ var741!1 \"\\t\"))\n  (define-fun var151 () String\n    (str.++ var741!1 \"\\t\" (getLhs/-759107248 var3310) \"\\t:=\\t\"))\n  (define-fun null-var3773 () var3773\n    var3773!val!1)\n  (define-fun var3310 () var3134\n    var3134!val!0)\n  (define-fun var573!1 () String\n    \"\\t\\t:=\\t\")\n  (define-fun var741!1 () String\n    \"\")\n  (define-fun var2180!1 () String\n    \"\\t\")\n  (define-fun var741!2 () String\n    \"\\t\")\n  (define-fun var2666!1 () var124\n    var124!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var151!1 () String\n    \"\")\n  (define-fun getLhs/-759107248 ((x!0 var3134)) String\n    \"\")\n  (define-fun print/-2007916749 ((x!0 var124) (x!1 String)) void\n    void!val!0)\n  (define-fun ostr/154848238 ((x!0 var3773)) var124\n    var124!val!0)\n)\n(error \"line 53 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165339136,
            "run_time": 2.3205463886260986,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3773/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjdoc.TextGenerator__productionStart__1237237053\\239.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var573!1 =\r\n     concat(all_22_4, \"\\u{5c}t:=\\u{5c}t\")\r\n   var2180!1 =\r\n     concat(\"\\u{5c}t\", all_19_3)\r\n   all_22_4 =\r\n     concat(\"\\u{5c}t\", all_19_3)\r\n\r\n1848ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjdoc.TextGenerator",
            "r3 := @parameter0: org.javacc.parser.NormalProduction",
            "$r2 = r0.<org.javacc.jjdoc.TextGenerator: java.io.PrintWriter ostr>",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\t\")",
            "$r4 = virtualinvoke r3.<org.javacc.parser.NormalProduction: java.lang.String getLhs()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\t:=\\t\")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r2.<java.io.PrintWriter: void print(java.lang.String)>($r8)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__insertCloseNodeCode__1158645843\\709.smt2",
        "z3": {
            "memory": 31846400,
            "run_time": 0.19688820838928223,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3109:\r\n  ;;   var3109!val!0 var3109!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3109!val!0 () var3109)\r\n  (declare-fun var3109!val!1 () var3109)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3109)) (or (= x var3109!val!0) (= x var3109!val!1)))\r\n  ;; -----------\r\n  ;; universe for var73:\r\n  ;;   var73!val!1 var73!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var73!val!1 () var73)\r\n  (declare-fun var73!val!0 () var73)\r\n  ;; cardinality constraint:\r\n  (forall ((x var73)) (or (= x var73!val!1) (= x var73!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3384:\r\n  ;;   var3384!val!0 var3384!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3384!val!0 () var3384)\r\n  (declare-fun var3384!val!1 () var3384)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3384)) (or (= x var3384!val!0) (= x var3384!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var73 () var73\r\n    var73!val!1)\r\n  (define-fun null-var3384 () var3384\r\n    var3384!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1468 () String\r\n    (str.++ var2321!1\r\n        var3536\r\n        (closeNode/1062269652\r\n          (node_descriptor/-576648796 var850)\r\n          (nodeVar/-576648796 var850))))\r\n  (define-fun var2909 () Bool\r\n    var2724_getTrackTokens/1877101562)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1447 () Bool\r\n    (usesCloseNodeVar/-1769174946 var850))\r\n  (define-fun var1152 () var73\r\n    var73!val!0)\r\n  (define-fun var2321 () String\r\n    String-init)\r\n  (define-fun var1047 () var1658\r\n    (node_descriptor/-576648796 var850))\r\n  (define-fun var3814 () String\r\n    (nodeVar/-576648796 var850))\r\n  (define-fun var1102 () Bool\r\n    var2724_getNodeScopeHook/893147786)\r\n  (define-fun var1756 () String\r\n    (closeNode/1062269652\r\n  (node_descriptor/-576648796 var850)\r\n  (nodeVar/-576648796 var850)))\r\n  (define-fun var1056 () String\r\n    (str.++ var2321!1 var3536))\r\n  (define-fun null-var3109 () var3109\r\n    var3109!val!1)\r\n  (define-fun var3536 () String\r\n    \"A\")\r\n  (define-fun var3430 () Bool\r\n    true)\r\n  (define-fun var705 () String\r\n    (str.++ var2321!1\r\n        var3536\r\n        (closeNode/1062269652\r\n          (node_descriptor/-576648796 var850)\r\n          (nodeVar/-576648796 var850))))\r\n  (define-fun var505 () var3384\r\n    var3384!val!0)\r\n  (define-fun var850 () var3109\r\n    var3109!val!0)\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var1056!1 () String\r\n    \"A\")\r\n  (define-fun var2321!2 () String\r\n    \"A\")\r\n  (define-fun var2321!1 () String\r\n    \"\")\r\n  (define-fun var2724_getTrackTokens/1877101562 () Bool\r\n    false)\r\n  (define-fun var2724_getNodeScopeHook/893147786 () Bool\r\n    false)\r\n  (define-fun var1468!1 () String\r\n    \"\")\r\n  (define-fun var505!1 () var3384\r\n    var3384!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun usesCloseNodeVar/-1769174946 ((x!0 var3109)) Bool\r\n    false)\r\n  (define-fun node_descriptor/-576648796 ((x!0 var3109)) var1658\r\n    var1658!val!0)\r\n  (define-fun nodeVar/-576648796 ((x!0 var3109)) String\r\n    \"\")\r\n  (define-fun closeNode/1062269652 ((x!0 var1658) (x!1 String)) String\r\n    \"\")\r\n  (define-fun println/1333914633 ((x!0 var3384) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 76 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1728512,
            "run_time": 0.029095888137817383,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var73 is 2\r\n; rep: (as @var73_0 var73)\r\n; rep: (as @var73_1 var73)\r\n; cardinality of var3109 is 2\r\n; rep: (as @var3109_0 var3109)\r\n; rep: (as @var3109_1 var3109)\r\n; cardinality of var3384 is 2\r\n; rep: (as @var3384_0 var3384)\r\n; rep: (as @var3384_1 var3384)\r\n; cardinality of var2513 is 1\r\n; rep: (as @var2513_0 var2513)\r\n; cardinality of var1658 is 1\r\n; rep: (as @var1658_0 var1658)\r\n; cardinality of var2724 is 1\r\n; rep: (as @var2724_0 var2724)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun node_descriptor/-576648796 ((BOUND_VARIABLE_744 var3109)) var1658 (as @var1658_0 var1658))\r\n(define-fun nodeVar/-576648796 ((BOUND_VARIABLE_747 var3109)) String \"\")\r\n(define-fun closeNode/1062269652 ((BOUND_VARIABLE_750 var1658) (BOUND_VARIABLE_751 String)) String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_754 var3384) (BOUND_VARIABLE_755 String)) void (as @void_0 void))\r\n(define-fun usesCloseNodeVar/-1769174946 ((_arg_1 var3109)) Bool false)\r\n(define-fun var2724_getNodeScopeHook/893147786 () Bool false)\r\n(define-fun var2724_getTrackTokens/1877101562 () Bool false)\r\n(define-fun null-var73 () var73 (as @var73_0 var73))\r\n(define-fun null-var3109 () var3109 (as @var3109_0 var3109))\r\n(define-fun null-var3384 () var3384 (as @var3384_0 var3384))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var1152 () var73 (as @var73_1 var73))\r\n(define-fun var850 () var3109 (as @var3109_1 var3109))\r\n(define-fun var505 () var3384 (as @var3384_1 var3384))\r\n(define-fun var3536 () String \"\")\r\n(define-fun var3430 () Bool false)\r\n(define-fun var2321!1 () String \"\")\r\n(define-fun var2321!2 () String \"\")\r\n(define-fun var1056!1 () String \"\")\r\n(define-fun var505!1 () var3384 (as @var3384_0 var3384))\r\n(define-fun var1468!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37433344,
            "run_time": 0.10976195335388184,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3109:\n  ;;   var3109!val!0 var3109!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3109!val!0 () var3109)\n  (declare-fun var3109!val!1 () var3109)\n  ;; cardinality constraint:\n  (forall ((x var3109)) (or (= x var3109!val!0) (= x var3109!val!1)))\n  ;; -----------\n  ;; universe for var73:\n  ;;   var73!val!1 var73!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var73!val!1 () var73)\n  (declare-fun var73!val!0 () var73)\n  ;; cardinality constraint:\n  (forall ((x var73)) (or (= x var73!val!1) (= x var73!val!0)))\n  ;; -----------\n  ;; universe for var3384:\n  ;;   var3384!val!0 var3384!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3384!val!0 () var3384)\n  (declare-fun var3384!val!1 () var3384)\n  ;; cardinality constraint:\n  (forall ((x var3384)) (or (= x var3384!val!0) (= x var3384!val!1)))\n  ;; -----------\n  (define-fun var2724_getNodeScopeHook/893147786 () Bool\n    false)\n  (define-fun var2724_getTrackTokens/1877101562 () Bool\n    false)\n  (define-fun var2321!1 () String\n    \"\")\n  (define-fun var2321!2 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1447 () Bool\n    (usesCloseNodeVar/-1769174946 var850))\n  (define-fun var1056!1 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2321 () String\n    String-init)\n  (define-fun var1756 () String\n    (closeNode/1062269652\n  (node_descriptor/-576648796 var850)\n  (nodeVar/-576648796 var850)))\n  (define-fun var1102 () Bool\n    var2724_getNodeScopeHook/893147786)\n  (define-fun var1152 () var73\n    var73!val!0)\n  (define-fun var850 () var3109\n    var3109!val!0)\n  (define-fun var1468 () String\n    (str.++ var2321!1\n        var3536\n        (closeNode/1062269652\n          (node_descriptor/-576648796 var850)\n          (nodeVar/-576648796 var850))))\n  (define-fun var505 () var3384\n    var3384!val!0)\n  (define-fun null-var3109 () var3109\n    var3109!val!1)\n  (define-fun var2909 () Bool\n    var2724_getTrackTokens/1877101562)\n  (define-fun var3430 () Bool\n    true)\n  (define-fun var1056 () String\n    (str.++ var2321!1 var3536))\n  (define-fun null-var73 () var73\n    var73!val!1)\n  (define-fun var3536 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var705 () String\n    (str.++ var2321!1\n        var3536\n        (closeNode/1062269652\n          (node_descriptor/-576648796 var850)\n          (nodeVar/-576648796 var850))))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-var3384 () var3384\n    var3384!val!1)\n  (define-fun var3814 () String\n    (nodeVar/-576648796 var850))\n  (define-fun var1047 () var1658\n    (node_descriptor/-576648796 var850))\n  (define-fun var1468!1 () String\n    \"\")\n  (define-fun var505!1 () var3384\n    var3384!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun usesCloseNodeVar/-1769174946 ((x!0 var3109)) Bool\n    false)\n  (define-fun node_descriptor/-576648796 ((x!0 var3109)) var1658\n    var1658!val!0)\n  (define-fun nodeVar/-576648796 ((x!0 var3109)) String\n    \"\")\n  (define-fun closeNode/1062269652 ((x!0 var1658) (x!1 String)) String\n    \"\")\n  (define-fun println/1333914633 ((x!0 var3384) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 76 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179437568,
            "run_time": 2.349891185760498,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3384/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPCodeGenerator__insertCloseNodeCode__1158645843\\709.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1056!1 =\r\n     concat(var3536, all_27_3)\r\n\r\n1850ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r37 := @this: org.javacc.jjtree.CPPCodeGenerator",
            "r0 := @parameter0: org.javacc.jjtree.NodeScope",
            "r4 := @parameter1: org.javacc.jjtree.IO",
            "r6 := @parameter2: java.lang.String",
            "z2 := @parameter3: boolean",
            "$r2 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r1 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "r3 = virtualinvoke $r2.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String closeNode(java.lang.String)>($r1)",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r9)",
            "$z0 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()",
            "if $z0 == 0 goto $z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeScopeHook()>()",
            "$z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeScopeHook()>()",
            "if $z3 == 0 goto $z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "$z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "if $z1 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjdoc.HTMLGenerator__println__-1852303283\\32.smt2",
        "z3": {
            "memory": 31719424,
            "run_time": 0.2776651382446289,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3770:\r\n  ;;   var3770!val!0 var3770!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3770!val!0 () var3770)\r\n  (declare-fun var3770!val!1 () var3770)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3770)) (or (= x var3770!val!0) (= x var3770!val!1)))\r\n  ;; -----------\r\n  (define-fun var866 () String\r\n    \"A\")\r\n  (define-fun var928 () String\r\n    (str.++ var2131!1 var866 \"\\n\"))\r\n  (define-fun null-var3770 () var3770\r\n    var3770!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1745 () String\r\n    (str.++ var2131!1 var866 \"\\n\"))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3358 () var3770\r\n    var3770!val!0)\r\n  (define-fun var2131 () String\r\n    String-init)\r\n  (define-fun var1978 () String\r\n    (str.++ var2131!1 var866))\r\n  (define-fun var2131!2 () String\r\n    \"A\")\r\n  (define-fun var2131!1 () String\r\n    \"\")\r\n  (define-fun var1978!1 () String\r\n    \"A\\n\")\r\n  (define-fun var3358!1 () var3770\r\n    var3770!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var928!1 () String\r\n    \"\")\r\n  (define-fun print/-855496625 ((x!0 var3770) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8388608,
            "run_time": 0.07642459869384766,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3770 is 2\r\n; rep: (as @var3770_0 var3770)\r\n; rep: (as @var3770_1 var3770)\r\n; cardinality of var3691 is 1\r\n; rep: (as @var3691_0 var3691)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun print/-855496625 ((BOUND_VARIABLE_586 var3770) (BOUND_VARIABLE_587 String)) void (as @void_0 void))\r\n(define-fun null-var3770 () var3770 (as @var3770_0 var3770))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3358 () var3770 (as @var3770_1 var3770))\r\n(define-fun var866 () String \"\")\r\n(define-fun var2131!1 () String \"\")\r\n(define-fun var2131!2 () String \"\")\r\n(define-fun var1978!1 () String \"\\u{5c}n\")\r\n(define-fun var3358!1 () var3770 (as @var3770_0 var3770))\r\n(define-fun var928!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36745216,
            "run_time": 0.13932204246520996,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3770:\n  ;;   var3770!val!0 var3770!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3770!val!0 () var3770)\n  (declare-fun var3770!val!1 () var3770)\n  ;; cardinality constraint:\n  (forall ((x var3770)) (or (= x var3770!val!0) (= x var3770!val!1)))\n  ;; -----------\n  (define-fun var1978!1 () String\n    \"\\u{0}\\u{0}\\n\")\n  (define-fun var2131!1 () String\n    \"\")\n  (define-fun var2131!2 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1978 () String\n    (str.++ var2131!1 var866))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2131 () String\n    String-init)\n  (define-fun null-var3770 () var3770\n    var3770!val!1)\n  (define-fun var3358 () var3770\n    var3770!val!0)\n  (define-fun var866 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var928 () String\n    (str.++ var2131!1 var866 \"\\n\"))\n  (define-fun var1745 () String\n    (str.++ var2131!1 var866 \"\\n\"))\n  (define-fun var3358!1 () var3770\n    var3770!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var928!1 () String\n    \"\")\n  (define-fun print/-855496625 ((x!0 var3770) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164470784,
            "run_time": 2.324355363845825,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3770/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjdoc.HTMLGenerator__println__-1852303283\\32.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1978!1 =\r\n     concat(var866, \"\\u{5c}n\")\r\n\r\n1819ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjdoc.HTMLGenerator",
            "r2 := @parameter0: java.lang.String",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\n\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void print(java.lang.String)>($r5)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.ASTNodeDescriptor__toString__376934213\\259.smt2",
        "z3": {
            "memory": 31404032,
            "run_time": 0.19292020797729492,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var72:\r\n  ;;   var72!val!1 var72!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var72!val!1 () var72)\r\n  (declare-fun var72!val!0 () var72)\r\n  ;; cardinality constraint:\r\n  (forall ((x var72)) (or (= x var72!val!1) (= x var72!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var72 () var72\r\n    var72!val!1)\r\n  (define-fun var2017 () String\r\n    (toString/2055603450 (cast-from-var72-to-var178 var2884)))\r\n  (define-fun var749 () String\r\n    String-init)\r\n  (define-fun var1397 () String\r\n    (str.++ var749!1 (toString/2055603450 (cast-from-var72-to-var178 var2884))))\r\n  (define-fun var2884 () var72\r\n    var72!val!0)\r\n  (define-fun var1281 () String\r\n    (str.++ var749!1\r\n        (toString/2055603450 (cast-from-var72-to-var178 var2884))\r\n        \": \"\r\n        (name/-1689018267 var2884)))\r\n  (define-fun var2392 () String\r\n    (name/-1689018267 var2884))\r\n  (define-fun var3228 () String\r\n    (str.++ var749!1\r\n        (toString/2055603450 (cast-from-var72-to-var178 var2884))\r\n        \": \"\r\n        (name/-1689018267 var2884)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2298 () String\r\n    (str.++ var749!1 (toString/2055603450 (cast-from-var72-to-var178 var2884)) \": \"))\r\n  (define-fun var502 () Bool\r\n    (faked/-1689018267 var2884))\r\n  (define-fun var1397!1 () String\r\n    \": \")\r\n  (define-fun var749!2 () String\r\n    \"\")\r\n  (define-fun var2298!1 () String\r\n    \": \")\r\n  (define-fun var749!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun faked/-1689018267 ((x!0 var72)) Bool\r\n    false)\r\n  (define-fun cast-from-var72-to-var178 ((x!0 var72)) var178\r\n    var178!val!0)\r\n  (define-fun toString/2055603450 ((x!0 var178)) String\r\n    \"\")\r\n  (define-fun name/-1689018267 ((x!0 var72)) String\r\n    \"\")\r\n)\r\n(error \"line 48 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1732608,
            "run_time": 0.030058622360229492,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var72 is 2\r\n; rep: (as @var72_0 var72)\r\n; rep: (as @var72_1 var72)\r\n; cardinality of var178 is 1\r\n; rep: (as @var178_0 var178)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun faked/-1689018267 ((_arg_1 var72)) Bool false)\r\n(define-fun String-init () String \"\")\r\n(define-fun toString/2055603450 ((BOUND_VARIABLE_576 var178)) String \"\")\r\n(define-fun cast-from-var72-to-var178 ((BOUND_VARIABLE_579 var72)) var178 (as @var178_0 var178))\r\n(define-fun name/-1689018267 ((BOUND_VARIABLE_582 var72)) String \"\")\r\n(define-fun null-var72 () var72 (as @var72_0 var72))\r\n(define-fun var2884 () var72 (as @var72_1 var72))\r\n(define-fun var749!1 () String \"\")\r\n(define-fun var749!2 () String \"\")\r\n(define-fun var1397!1 () String \": \")\r\n(define-fun var2298!1 () String \": \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35479552,
            "run_time": 0.12482166290283203,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var72:\n  ;;   var72!val!1 var72!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var72!val!1 () var72)\n  (declare-fun var72!val!0 () var72)\n  ;; cardinality constraint:\n  (forall ((x var72)) (or (= x var72!val!1) (= x var72!val!0)))\n  ;; -----------\n  (define-fun null-var72 () var72\n    var72!val!1)\n  (define-fun var2017 () String\n    (toString/2055603450 (cast-from-var72-to-var178 var2884)))\n  (define-fun var2392 () String\n    (name/-1689018267 var2884))\n  (define-fun var502 () Bool\n    (faked/-1689018267 var2884))\n  (define-fun var2884 () var72\n    var72!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2298 () String\n    (str.++ var749!1 (toString/2055603450 (cast-from-var72-to-var178 var2884)) \": \"))\n  (define-fun var749 () String\n    String-init)\n  (define-fun var3228 () String\n    (str.++ var749!1\n        (toString/2055603450 (cast-from-var72-to-var178 var2884))\n        \": \"\n        (name/-1689018267 var2884)))\n  (define-fun var1397 () String\n    (str.++ var749!1 (toString/2055603450 (cast-from-var72-to-var178 var2884))))\n  (define-fun var1281 () String\n    (str.++ var749!1\n        (toString/2055603450 (cast-from-var72-to-var178 var2884))\n        \": \"\n        (name/-1689018267 var2884)))\n  (define-fun var1397!1 () String\n    \": \")\n  (define-fun var749!2 () String\n    \"\")\n  (define-fun var2298!1 () String\n    \": \")\n  (define-fun var749!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun faked/-1689018267 ((x!0 var72)) Bool\n    false)\n  (define-fun cast-from-var72-to-var178 ((x!0 var72)) var178\n    var178!val!0)\n  (define-fun toString/2055603450 ((x!0 var178)) String\n    \"\")\n  (define-fun name/-1689018267 ((x!0 var72)) String\n    \"\")\n)\n(error \"line 48 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166318080,
            "run_time": 2.4574568271636963,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var72/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.ASTNodeDescriptor__toString__376934213\\259.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2298!1 =\r\n     concat(all_22_5, all_22_4)\r\n   var1397!1 =\r\n     concat(var749!2, \": \")\r\n   all_22_5 =\r\n     concat(var749!2, \": \")\r\n\r\n2008ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<org.javacc.jjtree.SimpleNode: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjtree.ASTNodeDescriptor",
            "$z0 = r0.<org.javacc.jjtree.ASTNodeDescriptor: boolean faked>",
            "if $z0 == 0 goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = specialinvoke r0.<org.javacc.jjtree.JJTreeNode: java.lang.String toString()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")",
            "$r4 = r0.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String name>",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjdoc.BNFGenerator__println__-1459746524\\70.smt2",
        "z3": {
            "memory": 31739904,
            "run_time": 0.3029141426086426,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var179:\r\n  ;;   var179!val!0 var179!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var179!val!0 () var179)\r\n  (declare-fun var179!val!1 () var179)\r\n  ;; cardinality constraint:\r\n  (forall ((x var179)) (or (= x var179!val!0) (= x var179!val!1)))\r\n  ;; -----------\r\n  (define-fun var1600 () String\r\n    (str.++ var2429!1 var3764 \"\\n\"))\r\n  (define-fun var37 () var179\r\n    var179!val!0)\r\n  (define-fun var2429 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var914 () String\r\n    (str.++ var2429!1 var3764 \"\\n\"))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun null-var179 () var179\r\n    var179!val!1)\r\n  (define-fun var3764 () String\r\n    \"A\")\r\n  (define-fun var970 () String\r\n    (str.++ var2429!1 var3764))\r\n  (define-fun var2429!2 () String\r\n    \"A\")\r\n  (define-fun var2429!1 () String\r\n    \"\")\r\n  (define-fun var970!1 () String\r\n    \"A\\n\")\r\n  (define-fun var37!1 () var179\r\n    var179!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1600!1 () String\r\n    \"\")\r\n  (define-fun print/-32742682 ((x!0 var179) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8200192,
            "run_time": 0.0774374008178711,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var179 is 2\r\n; rep: (as @var179_0 var179)\r\n; rep: (as @var179_1 var179)\r\n; cardinality of var3825 is 1\r\n; rep: (as @var3825_0 var3825)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun print/-32742682 ((BOUND_VARIABLE_586 var179) (BOUND_VARIABLE_587 String)) void (as @void_0 void))\r\n(define-fun null-var179 () var179 (as @var179_0 var179))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var37 () var179 (as @var179_1 var179))\r\n(define-fun var3764 () String \"\")\r\n(define-fun var2429!1 () String \"\")\r\n(define-fun var2429!2 () String \"\")\r\n(define-fun var970!1 () String \"\\u{5c}n\")\r\n(define-fun var37!1 () var179 (as @var179_0 var179))\r\n(define-fun var1600!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37281792,
            "run_time": 0.13932204246520996,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var179:\n  ;;   var179!val!0 var179!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var179!val!0 () var179)\n  (declare-fun var179!val!1 () var179)\n  ;; cardinality constraint:\n  (forall ((x var179)) (or (= x var179!val!0) (= x var179!val!1)))\n  ;; -----------\n  (define-fun var970!1 () String\n    \"\\u{0}\\u{0}\\n\")\n  (define-fun var2429!1 () String\n    \"\")\n  (define-fun var2429!2 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var179 () var179\n    var179!val!1)\n  (define-fun var37 () var179\n    var179!val!0)\n  (define-fun var3764 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var914 () String\n    (str.++ var2429!1 var3764 \"\\n\"))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1600 () String\n    (str.++ var2429!1 var3764 \"\\n\"))\n  (define-fun var970 () String\n    (str.++ var2429!1 var3764))\n  (define-fun var2429 () String\n    String-init)\n  (define-fun var37!1 () var179\n    var179!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1600!1 () String\n    \"\")\n  (define-fun print/-32742682 ((x!0 var179) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 174641152,
            "run_time": 2.3928582668304443,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var179/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjdoc.BNFGenerator__println__-1459746524\\70.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var970!1 =\r\n     concat(var3764, \"\\u{5c}n\")\r\n\r\n1914ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjdoc.BNFGenerator",
            "r2 := @parameter0: java.lang.String",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\n\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjdoc.BNFGenerator: void print(java.lang.String)>($r5)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-JavaCCInterpreter__main__-267076767\\22.smt2",
        "z3": {
            "memory": 31801344,
            "run_time": 0.11155414581298828,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3980:\r\n  ;;   var3980!val!0 var3980!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3980!val!0 () var3980)\r\n  (declare-fun var3980!val!1 () var3980)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3980)) (or (= x var3980!val!0) (= x var3980!val!1)))\r\n  ;; -----------\r\n  (define-fun var3494 () Int\r\n    (getLength-Arr-String-1 var2817))\r\n  (define-fun null-var3980 () var3980\r\n    var3980!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1453 () String\r\n    (append/-901862667\r\n  (str.++ var3080!1 \"Tokenized in: \")\r\n  (- var3076_currentTimeMillis/630293680 var3076_currentTimeMillis/630293680)))\r\n  (define-fun var789 () Int\r\n    (- (getLength-Arr-String-1 var2817) 2))\r\n  (define-fun var2817 () (Array Int String)\r\n    ((as const (Array Int String)) \"T\"))\r\n  (define-fun var3080 () String\r\n    String-init)\r\n  (define-fun null-__Array__Int__String__ () (Array Int String)\r\n    ((as const (Array Int String)) \"o\"))\r\n  (define-fun var3068 () String\r\n    (str.++ var3080!1 \"Tokenized in: \"))\r\n  (define-fun var3315 () Int\r\n    var3076_currentTimeMillis/630293680)\r\n  (define-fun var1096 () var3980\r\n    var3980!val!0)\r\n  (define-fun var3271 () String\r\n    \"\")\r\n  (define-fun var3438 () Int\r\n    var3076_currentTimeMillis/630293680)\r\n  (define-fun var2378 () var3892\r\n    var3892-init)\r\n  (define-fun var1572 () Int\r\n    (- var3076_currentTimeMillis/630293680 var3076_currentTimeMillis/630293680))\r\n  (define-fun var951 () String\r\n    \"\")\r\n  (define-fun var3068!1 () String\r\n    \"Tokenized in: \")\r\n  (define-fun var2546 () String\r\n    (append/-901862667\r\n  (str.++ var3080!1 \"Tokenized in: \")\r\n  (- var3076_currentTimeMillis/630293680 var3076_currentTimeMillis/630293680)))\r\n  (define-fun var2776 () var1259\r\n    var3076-err)\r\n  (define-fun var205 () Int\r\n    0)\r\n  (define-fun var3080!1 () String\r\n    \"\")\r\n  (define-fun var3080!2 () String\r\n    \"Tokenized in: \")\r\n  (define-fun var3892-init () var3892\r\n    var3892!val!0)\r\n  (define-fun var2546!1 () String\r\n    \"\")\r\n  (define-fun var951!1 () String\r\n    \"\")\r\n  (define-fun var2378!2 () var3892\r\n    var3892!val!0)\r\n  (define-fun var176_reInitAll/529526883 () void\r\n    void!val!0)\r\n  (define-fun var3076-err () var1259\r\n    var1259!val!0)\r\n  (define-fun var2378!1 () var3892\r\n    var3892!val!0)\r\n  (define-fun var2776!1 () var1259\r\n    var1259!val!0)\r\n  (define-fun var3271!1 () String\r\n    \"\")\r\n  (define-fun var3533 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3076_currentTimeMillis/630293680 () Int\r\n    0)\r\n  (define-fun getLength-Arr-String-1 ((x!0 (Array Int String))) Int\r\n    0)\r\n  (define-fun <init>/-1790459135 ((x!0 var3892)) void\r\n    void!val!0)\r\n  (define-fun append/-901862667 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun println/1773605060 ((x!0 var1259) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun runTokenizer/981280399 ((x!0 var3892) (x!1 String) (x!2 String)) void\r\n    void!val!0)\r\n  (define-fun var3076_exit/142839841 ((x!0 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 84 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10678272,
            "run_time": 0.030900001525878906,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var176 is 1\r\n; rep: (as @var176_0 var176)\r\n; cardinality of var3980 is 2\r\n; rep: (as @var3980_0 var3980)\r\n; rep: (as @var3980_1 var3980)\r\n; cardinality of var3076 is 1\r\n; rep: (as @var3076_0 var3076)\r\n; cardinality of var3892 is 1\r\n; rep: (as @var3892_0 var3892)\r\n; cardinality of var1259 is 1\r\n; rep: (as @var1259_0 var1259)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var176_reInitAll/529526883 () void (as @void_0 void))\r\n(define-fun getLength-Arr-String-1 ((_arg_1 (Array Int String))) Int 0)\r\n(define-fun var3076_exit/142839841 ((BOUND_VARIABLE_1068 Int)) void (as @void_0 void))\r\n(define-fun var3076_currentTimeMillis/630293680 () Int 0)\r\n(define-fun var3892-init () var3892 (as @var3892_0 var3892))\r\n(define-fun <init>/-1790459135 ((BOUND_VARIABLE_1071 var3892)) void (as @void_0 void))\r\n(define-fun runTokenizer/981280399 ((BOUND_VARIABLE_1074 var3892) (BOUND_VARIABLE_1075 String) (BOUND_VARIABLE_1076 String)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-901862667 ((BOUND_VARIABLE_1079 String) (BOUND_VARIABLE_1080 Int)) String \"\")\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_1083 var1259) (BOUND_VARIABLE_1084 String)) void (as @void_0 void))\r\n(define-fun null-__Array__Int__String__ () (Array Int String) (store ((as const (Array Int String)) \"A\") 0 \"Tokenized in: \"))\r\n(define-fun null-var3980 () var3980 (as @var3980_0 var3980))\r\n(define-fun var3076-err () var1259 (as @var1259_0 var1259))\r\n(define-fun var2817 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var1096 () var3980 (as @var3980_1 var3980))\r\n(define-fun var3533 () Int 0)\r\n(define-fun var2378!1 () var3892 (as @var3892_0 var3892))\r\n(define-fun var2378!2 () var3892 (as @var3892_0 var3892))\r\n(define-fun var951!1 () String \"\")\r\n(define-fun var3271!1 () String \"\")\r\n(define-fun var3080!1 () String \"\")\r\n(define-fun var3080!2 () String \"Tokenized in: \")\r\n(define-fun var3068!1 () String \"Tokenized in: \")\r\n(define-fun var2776!1 () var1259 (as @var1259_0 var1259))\r\n(define-fun var2546!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35827712,
            "run_time": 0.12161111831665039,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 83 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 84 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 189698048,
            "run_time": 2.6905059814453125,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3068!1 () String \"Tokenized in: \")\r\n  (define-fun var3080!2 () String \"Tokenized in: \")\r\n  (define-fun var3080!1 () String \"\")\r\n  (define-fun var1096 () var3980 var3980!10)\r\n  (define-fun var2817 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n  (define-fun null-var3980 () var3980 var3980!6)\r\n  (define-fun null-__Array__Int__String__ () (Array Int String) (store ((as const (Array Int String)) \"\") 0 \"\\u{0}\"))\r\n  (define-fun getLength-Arr-String-1 ((x!0 (Array Int String))) Int (ite (= x!0 ((as const (Array Int String)) \"\")) 2 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 10,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(long)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(long)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String[]",
            "staticinvoke <org.javacc.parser.Main: void reInitAll()>()",
            "i10 = 0",
            "$i0 = lengthof r0",
            "$i1 = $i0 - 2",
            "if i10 >= $i1 goto r24 = \"\"",
            "r24 = \"\"",
            "r25 = \"\"",
            "$r22 := @caughtexception",
            "staticinvoke <java.lang.System: void exit(int)>(1)",
            "$l11 = staticinvoke <java.lang.System: long currentTimeMillis()>()",
            "$r28 = new JavaCCInterpreter",
            "specialinvoke $r28.<JavaCCInterpreter: void <init>()>()",
            "virtualinvoke $r28.<JavaCCInterpreter: void runTokenizer(java.lang.String,java.lang.String)>(r25, r24)",
            "$r29 = <java.lang.System: java.io.PrintStream err>",
            "$r30 = new java.lang.StringBuilder",
            "specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()",
            "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Tokenized in: \")",
            "$l12 = staticinvoke <java.lang.System: long currentTimeMillis()>()",
            "$l13 = $l12 - $l11",
            "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13)",
            "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r29.<java.io.PrintStream: void println(java.lang.String)>($r33)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.ASTNodeDescriptor__getNodeType__-707025417\\287.smt2",
        "z3": {
            "memory": 31256576,
            "run_time": 0.20848393440246582,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1879:\r\n  ;;   var1879!val!0 var1879!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1879!val!0 () var1879)\r\n  (declare-fun var1879!val!1 () var1879)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1879)) (or (= x var1879!val!0) (= x var1879!val!1)))\r\n  ;; -----------\r\n  (define-fun var634 () String\r\n    (str.++ var203!1 var2156_getNodePrefix/-1263226158 (name/-1689018267 var1341)))\r\n  (define-fun var1628 () String\r\n    (name/-1689018267 var1341))\r\n  (define-fun var1341 () var1879\r\n    var1879!val!0)\r\n  (define-fun var203 () String\r\n    String-init)\r\n  (define-fun var46 () String\r\n    var2156_getNodePrefix/-1263226158)\r\n  (define-fun var1829 () String\r\n    (str.++ var203!1 var2156_getNodePrefix/-1263226158 (name/-1689018267 var1341)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var131 () Bool\r\n    var2156_getMulti/-1858061690)\r\n  (define-fun var1914 () String\r\n    (str.++ var203!1 var2156_getNodePrefix/-1263226158))\r\n  (define-fun null-var1879 () var1879\r\n    var1879!val!1)\r\n  (define-fun var203!1 () String\r\n    \"\")\r\n  (define-fun var2156_getMulti/-1858061690 () Bool\r\n    true)\r\n  (define-fun var2156_getNodePrefix/-1263226158 () String\r\n    \"\")\r\n  (define-fun var1914!1 () String\r\n    \"\")\r\n  (define-fun var203!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun name/-1689018267 ((x!0 var1879)) String\r\n    \"\")\r\n)\r\n(error \"line 42 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12029952,
            "run_time": 0.1080024242401123,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1879 is 2\r\n; rep: (as @var1879_0 var1879)\r\n; rep: (as @var1879_1 var1879)\r\n; cardinality of var2156 is 1\r\n; rep: (as @var2156_0 var2156)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2156_getMulti/-1858061690 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2156_getNodePrefix/-1263226158 () String \"\")\r\n(define-fun name/-1689018267 ((BOUND_VARIABLE_553 var1879)) String \"\")\r\n(define-fun null-var1879 () var1879 (as @var1879_0 var1879))\r\n(define-fun var1341 () var1879 (as @var1879_1 var1879))\r\n(define-fun var203!1 () String \"\")\r\n(define-fun var203!2 () String \"\")\r\n(define-fun var1914!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32661504,
            "run_time": 0.13932204246520996,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1879:\n  ;;   var1879!val!0 var1879!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1879!val!0 () var1879)\n  (declare-fun var1879!val!1 () var1879)\n  ;; cardinality constraint:\n  (forall ((x var1879)) (or (= x var1879!val!0) (= x var1879!val!1)))\n  ;; -----------\n  (define-fun var203 () String\n    String-init)\n  (define-fun var46 () String\n    var2156_getNodePrefix/-1263226158)\n  (define-fun var1628 () String\n    (name/-1689018267 var1341))\n  (define-fun var1341 () var1879\n    var1879!val!0)\n  (define-fun var1829 () String\n    (str.++ var203!1 var2156_getNodePrefix/-1263226158 (name/-1689018267 var1341)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1914 () String\n    (str.++ var203!1 var2156_getNodePrefix/-1263226158))\n  (define-fun var634 () String\n    (str.++ var203!1 var2156_getNodePrefix/-1263226158 (name/-1689018267 var1341)))\n  (define-fun null-var1879 () var1879\n    var1879!val!1)\n  (define-fun var131 () Bool\n    var2156_getMulti/-1858061690)\n  (define-fun var203!1 () String\n    \"\")\n  (define-fun var2156_getMulti/-1858061690 () Bool\n    true)\n  (define-fun var2156_getNodePrefix/-1263226158 () String\n    \"\")\n  (define-fun var1914!1 () String\n    \"\")\n  (define-fun var203!2 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun name/-1689018267 ((x!0 var1879)) String\n    \"\")\n)\n(error \"line 42 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 160989184,
            "run_time": 2.4093003273010254,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1879/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.ASTNodeDescriptor__getNodeType__-707025417\\287.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1914!1 =\r\n     concat(var2156_getNodePrefix/-1263226158, all_17_3)\r\n\r\n1955ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.jjtree.ASTNodeDescriptor",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getMulti()>()",
            "if $z0 == 0 goto return \"SimpleNode\"",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodePrefix()>()",
            "$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)",
            "$r3 = r2.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String name>",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JJTreeOptions__getJJTreeOutputDirectory__-709711143\\582.smt2",
        "z3": {
            "memory": 30208000,
            "run_time": 0.13888287544250488,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2526 () String\r\n    (var2462_stringValue/-689356382 \"JJTREE_OUTPUT_DIRECTORY\"))\r\n  (define-fun var3153 () Bool\r\n    (= \"\" (var2462_stringValue/-689356382 \"JJTREE_OUTPUT_DIRECTORY\")))\r\n  (define-fun var2341 () var354\r\n    var354-init)\r\n  (define-fun var2763 () var354\r\n    var2341!1)\r\n  (define-fun var3569 () String\r\n    \"\")\r\n  (define-fun var354-init () var354\r\n    var354!val!0)\r\n  (define-fun var2341!1 () var354\r\n    var354!val!0)\r\n  (define-fun var2526!1 () String\r\n    \"\")\r\n  (define-fun var2462_stringValue/-689356382 ((x!0 String)) String\r\n    \"A\")\r\n  (define-fun <init>/-1681595970 ((x!0 var354) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.03033280372619629,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2462 is 1\r\n; rep: (as @var2462_0 var2462)\r\n; cardinality of var354 is 1\r\n; rep: (as @var354_0 var354)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2462_stringValue/-689356382 ((_arg_1 String)) String \"JJTREE_OUTPUT_DIRECTORY\")\r\n(define-fun var354-init () var354 (as @var354_0 var354))\r\n(define-fun <init>/-1681595970 ((BOUND_VARIABLE_514 var354) (BOUND_VARIABLE_515 String)) void (as @void_0 void))\r\n(define-fun var2341!1 () var354 (as @var354_0 var354))\r\n(define-fun var2526!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36712448,
            "run_time": 0.10898923873901367,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 28 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175149056,
            "run_time": 2.4229159355163574,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun abbrev_7 ((x!0 Int)) String (ite (= x!0 0) \"\\u{0}\" \"\"))\r\n  (define-fun var2462_stringValue/-689356382 ((x!0 String)) String (ite (= x!0 \"JJTREE_OUTPUT_DIRECTORY\") \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String stringValue(java.lang.String)>(\"JJTREE_OUTPUT_DIRECTORY\")",
            "$r1 = \"\"",
            "$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0)",
            "if $z0 == 0 goto $r2 = new java.io.File",
            "$r2 = new java.io.File",
            "specialinvoke $r2.<java.io.File: void <init>(java.lang.String)>(r0)",
            "r3 = $r2",
            "return r3"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.IO__setInput__-502018844\\474.smt2",
        "z3": {
            "memory": 31305728,
            "run_time": 0.10467100143432617,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var821:\r\n  ;;   var821!val!1 var821!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var821!val!1 () var821)\r\n  (declare-fun var821!val!0 () var821)\r\n  ;; cardinality constraint:\r\n  (forall ((x var821)) (or (= x var821!val!1) (= x var821!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3028:\r\n  ;;   var3028!val!1 var3028!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3028!val!1 () var3028)\r\n  (declare-fun var3028!val!0 () var3028)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3028)) (or (= x var3028!val!1) (= x var3028!val!0)))\r\n  ;; -----------\r\n  (define-fun var1831 () String\r\n    String-init)\r\n  (define-fun var1012 () String\r\n    (str.++ var1831!1 \"File \" var3014))\r\n  (define-fun var525 () String\r\n    (str.++ var1831!1 \"File \" var3014 \" not found.\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var3028 () var3028\r\n    var3028!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3014 () String\r\n    \"A\")\r\n  (define-fun var2998 () String\r\n    (str.++ var1831!1 \"File \"))\r\n  (define-fun var3102 () var821\r\n    var821!val!0)\r\n  (define-fun var3139 () var357\r\n    var357-init)\r\n  (define-fun var3055 () var329\r\n    var329-init)\r\n  (define-fun null-var821 () var821\r\n    var821!val!1)\r\n  (define-fun var1905 () String\r\n    (str.++ var1831!1 \"File \" var3014 \" not found.\"))\r\n  (define-fun var1644 () var3028\r\n    var3028!val!0)\r\n  (define-fun var1831!1 () String\r\n    \"\")\r\n  (define-fun var2998!1 () String\r\n    \"File A\")\r\n  (define-fun var1012!1 () String\r\n    \"File A not found.\")\r\n  (define-fun var1831!2 () String\r\n    \"File \")\r\n  (define-fun var357-init () var357\r\n    var357!val!0)\r\n  (define-fun var329-init () var329\r\n    var329!val!0)\r\n  (define-fun var1905!1 () String\r\n    \"\")\r\n  (define-fun var3139!1 () var357\r\n    var357!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun <init>/-1208695669 ((x!0 var357) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 58 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8626176,
            "run_time": 0.04579663276672363,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var821 is 2\r\n; rep: (as @var821_0 var821)\r\n; rep: (as @var821_1 var821)\r\n; cardinality of var3550 is 1\r\n; rep: (as @var3550_0 var3550)\r\n; cardinality of var329 is 1\r\n; rep: (as @var329_0 var329)\r\n; cardinality of var3028 is 2\r\n; rep: (as @var3028_0 var3028)\r\n; rep: (as @var3028_1 var3028)\r\n; cardinality of var357 is 1\r\n; rep: (as @var357_0 var357)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var329-init () var329 (as @var329_0 var329))\r\n(define-fun var357-init () var357 (as @var357_0 var357))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1208695669 ((BOUND_VARIABLE_636 var357) (BOUND_VARIABLE_637 String)) void (as @void_0 void))\r\n(define-fun null-var821 () var821 (as @var821_0 var821))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3028 () var3028 (as @var3028_0 var3028))\r\n(define-fun var3102 () var821 (as @var821_1 var821))\r\n(define-fun var3014 () String \"\")\r\n(define-fun var1644 () var3028 (as @var3028_1 var3028))\r\n(define-fun var1831!1 () String \"\")\r\n(define-fun var1831!2 () String \"File \")\r\n(define-fun var2998!1 () String \"File \")\r\n(define-fun var1012!1 () String \"File  not found.\")\r\n(define-fun var3139!1 () var357 (as @var357_0 var357))\r\n(define-fun var1905!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36892672,
            "run_time": 0.13932204246520996,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var821:\n  ;;   var821!val!1 var821!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var821!val!1 () var821)\n  (declare-fun var821!val!0 () var821)\n  ;; cardinality constraint:\n  (forall ((x var821)) (or (= x var821!val!1) (= x var821!val!0)))\n  ;; -----------\n  ;; universe for var3028:\n  ;;   var3028!val!1 var3028!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3028!val!1 () var3028)\n  (declare-fun var3028!val!0 () var3028)\n  ;; cardinality constraint:\n  (forall ((x var3028)) (or (= x var3028!val!1) (= x var3028!val!0)))\n  ;; -----------\n  (define-fun var1831!2 () String\n    \"File \")\n  (define-fun var1012!1 () String\n    \"File \\u{0}\\u{0} not found.\")\n  (define-fun var2998!1 () String\n    \"File \\u{0}\\u{0}\")\n  (define-fun var1831!1 () String\n    \"\")\n  (define-fun var3139 () var357\n    var357-init)\n  (define-fun var1644 () var3028\n    var3028!val!0)\n  (define-fun null-var821 () var821\n    var821!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1831 () String\n    String-init)\n  (define-fun var2998 () String\n    (str.++ var1831!1 \"File \"))\n  (define-fun var1012 () String\n    (str.++ var1831!1 \"File \" var3014))\n  (define-fun null-var3028 () var3028\n    var3028!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3102 () var821\n    var821!val!0)\n  (define-fun var525 () String\n    (str.++ var1831!1 \"File \" var3014 \" not found.\"))\n  (define-fun var3014 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3055 () var329\n    var329-init)\n  (define-fun var1905 () String\n    (str.++ var1831!1 \"File \" var3014 \" not found.\"))\n  (define-fun var357-init () var357\n    var357!val!0)\n  (define-fun var329-init () var329\n    var329!val!0)\n  (define-fun var1905!1 () String\n    \"\")\n  (define-fun var3139!1 () var357\n    var357!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun <init>/-1208695669 ((x!0 var357) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 58 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176082944,
            "run_time": 2.488783359527588,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3028/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.IO__setInput__-502018844\\474.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1012!1 =\r\n     concat(all_26_4, \" not found.\")\r\n   var2998!1 =\r\n     concat(\"File \", var3014)\r\n   all_26_4 =\r\n     concat(\"File \", var3014)\r\n\r\n2011ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.jjtree.IO",
            "r1 := @parameter0: java.lang.String",
            "$r0 = new java.io.File",
            "$r28 := @caughtexception",
            "$r29 = new org.javacc.jjtree.JJTreeIOException",
            "$r30 = new java.lang.StringBuilder",
            "specialinvoke $r30.<java.lang.StringBuilder: void <init>()>()",
            "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"File \")",
            "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" not found.\")",
            "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r29.<org.javacc.jjtree.JJTreeIOException: void <init>(java.lang.String)>($r34)",
            "throw $r29"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.ASTGrammar__generate__2007955397\\101.smt2",
        "z3": {
            "memory": 31457280,
            "run_time": 0.21199750900268555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2317:\r\n  ;;   var2317!val!0 var2317!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2317!val!0 () var2317)\r\n  (declare-fun var2317!val!1 () var2317)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2317)) (or (= x var2317!val!0) (= x var2317!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2129:\r\n  ;;   var2129!val!1 var2129!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2129!val!1 () var2129)\r\n  (declare-fun var2129!val!0 () var2129)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2129)) (or (= x var2129!val!1) (= x var2129!val!0)))\r\n  ;; -----------\r\n  (define-fun var2888 () String\r\n    (str.++ var1187!1 \"opt:\" var2034_getOutputLanguage/-1523304050))\r\n  (define-fun var1831 () var2129\r\n    var2129!val!0)\r\n  (define-fun var3814 () Bool\r\n    (= var2034_getOutputLanguage/-1523304050 \"c++\"))\r\n  (define-fun var952 () Bool\r\n    var2034_isOutputLanguageJava/1735442213)\r\n  (define-fun var249 () String\r\n    (str.++ var1187!1 \"opt:\"))\r\n  (define-fun var3919 () String\r\n    (str.++ var3817!1\r\n        \"Language type not supported for JJTree : \"\r\n        var2034_getOutputLanguage/-1523304050))\r\n  (define-fun var2034_getOutputLanguage/-1523304050 () String\r\n    \"\")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3667 () String\r\n    var2034_getOutputLanguage/-1523304050)\r\n  (define-fun var3524 () String\r\n    (str.++ var1187!1 \"opt:\" var2034_getOutputLanguage/-1523304050))\r\n  (define-fun var314 () String\r\n    var2034_getOutputLanguage/-1523304050)\r\n  (define-fun var3155 () var1937\r\n    var2673-out)\r\n  (define-fun var1644 () String\r\n    (str.++ var3817!1\r\n        \"Language type not supported for JJTree : \"\r\n        var2034_getOutputLanguage/-1523304050))\r\n  (define-fun var232 () String\r\n    (str.++ var3817!1 \"Language type not supported for JJTree : \"))\r\n  (define-fun null-var2129 () var2129\r\n    var2129!val!1)\r\n  (define-fun var1187 () String\r\n    String-init)\r\n  (define-fun var2356 () var2317\r\n    var2317!val!0)\r\n  (define-fun null-var2317 () var2317\r\n    var2317!val!1)\r\n  (define-fun var501 () var936\r\n    var936-init)\r\n  (define-fun var3293 () String\r\n    var2034_getOutputLanguage/-1523304050)\r\n  (define-fun var3817 () String\r\n    String-init)\r\n  (define-fun var1187!2 () String\r\n    \"opt:\")\r\n  (define-fun var1187!1 () String\r\n    \"\")\r\n  (define-fun var3817!2 () String\r\n    \"Language type not supported for JJTree : \")\r\n  (define-fun var232!1 () String\r\n    \"Language type not supported for JJTree : \")\r\n  (define-fun var249!1 () String\r\n    \"opt:\")\r\n  (define-fun var3817!1 () String\r\n    \"\")\r\n  (define-fun var2034_isOutputLanguageJava/1735442213 () Bool\r\n    false)\r\n  (define-fun var3155!1 () var1937\r\n    var1937!val!0)\r\n  (define-fun var2673-out () var1937\r\n    var1937!val!0)\r\n  (define-fun var3524!1 () String\r\n    \"\")\r\n  (define-fun var501!1 () var936\r\n    var936!val!0)\r\n  (define-fun var936-init () var936\r\n    var936!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3919!1 () String\r\n    \"\")\r\n  (define-fun <init>/-1084991535 ((x!0 var936) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun println/1773605060 ((x!0 var1937) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 84 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.092803955078125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2317 is 2\r\n; rep: (as @var2317_0 var2317)\r\n; rep: (as @var2317_1 var2317)\r\n; cardinality of var2129 is 2\r\n; rep: (as @var2129_0 var2129)\r\n; rep: (as @var2129_1 var2129)\r\n; cardinality of var1937 is 1\r\n; rep: (as @var1937_0 var1937)\r\n; cardinality of var2673 is 1\r\n; rep: (as @var2673_0 var2673)\r\n; cardinality of var2034 is 1\r\n; rep: (as @var2034_0 var2034)\r\n; cardinality of var936 is 1\r\n; rep: (as @var936_0 var936)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2034_getOutputLanguage/-1523304050 () String \"\")\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_717 var1937) (BOUND_VARIABLE_718 String)) void (as @void_0 void))\r\n(define-fun var2034_isOutputLanguageJava/1735442213 () Bool false)\r\n(define-fun var936-init () var936 (as @var936_0 var936))\r\n(define-fun <init>/-1084991535 ((BOUND_VARIABLE_721 var936) (BOUND_VARIABLE_722 String)) void (as @void_0 void))\r\n(define-fun null-var2317 () var2317 (as @var2317_0 var2317))\r\n(define-fun null-var2129 () var2129 (as @var2129_0 var2129))\r\n(define-fun var2673-out () var1937 (as @var1937_0 var1937))\r\n(define-fun var2356 () var2317 (as @var2317_1 var2317))\r\n(define-fun var1831 () var2129 (as @var2129_1 var2129))\r\n(define-fun var1187!1 () String \"\")\r\n(define-fun var1187!2 () String \"opt:\")\r\n(define-fun var249!1 () String \"opt:\")\r\n(define-fun var3155!1 () var1937 (as @var1937_0 var1937))\r\n(define-fun var3524!1 () String \"\")\r\n(define-fun var3817!1 () String \"\")\r\n(define-fun var3817!2 () String \"Language type not supported for JJTree : \")\r\n(define-fun var232!1 () String \"Language type not supported for JJTree : \")\r\n(define-fun var501!1 () var936 (as @var936_0 var936))\r\n(define-fun var3919!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35196928,
            "run_time": 0.07747292518615723,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2317:\n  ;;   var2317!val!0 var2317!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2317!val!0 () var2317)\n  (declare-fun var2317!val!1 () var2317)\n  ;; cardinality constraint:\n  (forall ((x var2317)) (or (= x var2317!val!0) (= x var2317!val!1)))\n  ;; -----------\n  ;; universe for var2129:\n  ;;   var2129!val!1 var2129!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2129!val!1 () var2129)\n  (declare-fun var2129!val!0 () var2129)\n  ;; cardinality constraint:\n  (forall ((x var2129)) (or (= x var2129!val!1) (= x var2129!val!0)))\n  ;; -----------\n  (define-fun var249 () String\n    (str.++ var1187!1 \"opt:\"))\n  (define-fun var1831 () var2129\n    var2129!val!0)\n  (define-fun var3919 () String\n    (str.++ var3817!1\n        \"Language type not supported for JJTree : \"\n        var2034_getOutputLanguage/-1523304050))\n  (define-fun var3155 () var1937\n    var2673-out)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3667 () String\n    var2034_getOutputLanguage/-1523304050)\n  (define-fun var3524 () String\n    (str.++ var1187!1 \"opt:\" var2034_getOutputLanguage/-1523304050))\n  (define-fun var314 () String\n    var2034_getOutputLanguage/-1523304050)\n  (define-fun var1644 () String\n    (str.++ var3817!1\n        \"Language type not supported for JJTree : \"\n        var2034_getOutputLanguage/-1523304050))\n  (define-fun var2034_getOutputLanguage/-1523304050 () String\n    \"\")\n  (define-fun var501 () var936\n    var936-init)\n  (define-fun var232 () String\n    (str.++ var3817!1 \"Language type not supported for JJTree : \"))\n  (define-fun var1187 () String\n    String-init)\n  (define-fun var3814 () Bool\n    (= var2034_getOutputLanguage/-1523304050 \"c++\"))\n  (define-fun null-var2129 () var2129\n    var2129!val!1)\n  (define-fun var952 () Bool\n    var2034_isOutputLanguageJava/1735442213)\n  (define-fun var3293 () String\n    var2034_getOutputLanguage/-1523304050)\n  (define-fun var2356 () var2317\n    var2317!val!0)\n  (define-fun null-var2317 () var2317\n    var2317!val!1)\n  (define-fun var3817 () String\n    String-init)\n  (define-fun var2888 () String\n    (str.++ var1187!1 \"opt:\" var2034_getOutputLanguage/-1523304050))\n  (define-fun var1187!2 () String\n    \"opt:\")\n  (define-fun var1187!1 () String\n    \"\")\n  (define-fun var3817!2 () String\n    \"Language type not supported for JJTree : \")\n  (define-fun var232!1 () String\n    \"Language type not supported for JJTree : \")\n  (define-fun var249!1 () String\n    \"opt:\")\n  (define-fun var3817!1 () String\n    \"\")\n  (define-fun var2034_isOutputLanguageJava/1735442213 () Bool\n    false)\n  (define-fun var3155!1 () var1937\n    var1937!val!0)\n  (define-fun var2673-out () var1937\n    var1937!val!0)\n  (define-fun var3524!1 () String\n    \"\")\n  (define-fun var501!1 () var936\n    var936!val!0)\n  (define-fun var936-init () var936\n    var936!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3919!1 () String\n    \"\")\n  (define-fun <init>/-1084991535 ((x!0 var936) (x!1 String)) void\n    void!val!0)\n  (define-fun println/1773605060 ((x!0 var1937) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 84 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168251392,
            "run_time": 2.6430439949035645,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2129/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.ASTGrammar__generate__2007955397\\101.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var232!1 =\r\n     concat(\"Language type not supported for JJTree : \", var2034_getOutputLanguage/-1523304050)\r\n   var249!1 =\r\n     concat(\"opt:\", var2034_getOutputLanguage/-1523304050)\r\n\r\n2155ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r14 := @this: org.javacc.jjtree.ASTGrammar",
            "r15 := @parameter0: org.javacc.jjtree.IO",
            "$r1 = <java.lang.System: java.io.PrintStream out>",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"opt:\")",
            "$r2 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getOutputLanguage()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean isOutputLanguageJava()>()",
            "if $z0 == 0 goto $r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getOutputLanguage()>()",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getOutputLanguage()>()",
            "$z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"c++\")",
            "if $z1 == 0 goto $r7 = new java.lang.RuntimeException",
            "$r7 = new java.lang.RuntimeException",
            "$r8 = new java.lang.StringBuilder",
            "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Language type not supported for JJTree : \")",
            "$r9 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getOutputLanguage()>()",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r7.<java.lang.RuntimeException: void <init>(java.lang.String)>($r12)",
            "throw $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JavaCodeGenerator__insertCloseNodeAction__447784493\\717.smt2",
        "z3": {
            "memory": 31485952,
            "run_time": 0.09962344169616699,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2382:\r\n  ;;   var2382!val!0 var2382!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2382!val!0 () var2382)\r\n  (declare-fun var2382!val!1 () var2382)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2382)) (or (= x var2382!val!0) (= x var2382!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3016:\r\n  ;;   var3016!val!1 var3016!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3016!val!1 () var3016)\r\n  (declare-fun var3016!val!0 () var3016)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3016)) (or (= x var3016!val!1) (= x var3016!val!0)))\r\n  ;; -----------\r\n  ;; universe for var542:\r\n  ;;   var542!val!1 var542!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var542!val!1 () var542)\r\n  (declare-fun var542!val!0 () var542)\r\n  ;; cardinality constraint:\r\n  (forall ((x var542)) (or (= x var542!val!1) (= x var542!val!0)))\r\n  ;; -----------\r\n  (define-fun var3827 () String\r\n    String-init)\r\n  (define-fun null-var2382 () var2382\r\n    var2382!val!1)\r\n  (define-fun var2630 () String\r\n    (str.++ var3827!1 var13 \"  \"))\r\n  (define-fun var2248 () String\r\n    String-init)\r\n  (define-fun var1679 () String\r\n    (str.++ var2248!1 var13))\r\n  (define-fun var2470 () var542\r\n    var542!val!0)\r\n  (define-fun var1362 () String\r\n    (str.++ var1171!1 var13))\r\n  (define-fun var3725 () String\r\n    (str.++ var1171!1 var13 \"}\"))\r\n  (define-fun var1242 () String\r\n    (str.++ var1171!1 var13 \"}\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun null-var3016 () var3016\r\n    var3016!val!1)\r\n  (define-fun null-var542 () var542\r\n    var542!val!1)\r\n  (define-fun var2976 () String\r\n    (str.++ var3827!1 var13))\r\n  (define-fun var1171 () String\r\n    String-init)\r\n  (define-fun var3956 () String\r\n    (str.++ var3827!1 var13 \"  \"))\r\n  (define-fun var3212 () String\r\n    (str.++ var2248!1 var13 \"{\"))\r\n  (define-fun var3827!2 () String\r\n    \"A\")\r\n  (define-fun var574 () var3016\r\n    var3016!val!0)\r\n  (define-fun var2097 () var2382\r\n    var2382!val!0)\r\n  (define-fun var420 () String\r\n    (str.++ var2248!1 var13 \"{\"))\r\n  (define-fun var1171!2 () String\r\n    \"A\")\r\n  (define-fun var1679!1 () String\r\n    \"A{\")\r\n  (define-fun var2248!2 () String\r\n    \"A\")\r\n  (define-fun var3827!1 () String\r\n    \"\")\r\n  (define-fun var1362!1 () String\r\n    \"A}\")\r\n  (define-fun var1171!1 () String\r\n    \"\")\r\n  (define-fun var13 () String\r\n    \"A\")\r\n  (define-fun var2976!1 () String\r\n    \"A  \")\r\n  (define-fun var2248!1 () String\r\n    \"\")\r\n  (define-fun var2470!2 () var542\r\n    var542!val!1)\r\n  (define-fun var2470!3 () var542\r\n    var542!val!1)\r\n  (define-fun var2470!1 () var542\r\n    var542!val!1)\r\n  (define-fun var1242!1 () String\r\n    \"\")\r\n  (define-fun var574!1 () var3016\r\n    var3016!val!1)\r\n  (define-fun var1740 () Int\r\n    0)\r\n  (define-fun var2097!1 () var2382\r\n    var2382!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3956!1 () String\r\n    \"\")\r\n  (define-fun var420!1 () String\r\n    \"\")\r\n  (define-fun insertCloseNodeCode/-1396668384 ((x!0 var2382)\r\n   (x!1 var3016)\r\n   (x!2 var542)\r\n   (x!3 String)\r\n   (x!4 Bool)) void\r\n    void!val!0)\r\n  (define-fun println/1333914633 ((x!0 var542) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 95 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8142848,
            "run_time": 0.04579663276672363,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2382 is 2\r\n; rep: (as @var2382_0 var2382)\r\n; rep: (as @var2382_1 var2382)\r\n; cardinality of var3016 is 2\r\n; rep: (as @var3016_0 var3016)\r\n; rep: (as @var3016_1 var3016)\r\n; cardinality of var542 is 2\r\n; rep: (as @var542_0 var542)\r\n; rep: (as @var542_1 var542)\r\n; cardinality of var1840 is 1\r\n; rep: (as @var1840_0 var1840)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_743 var542) (BOUND_VARIABLE_744 String)) void (as @void_0 void))\r\n(define-fun insertCloseNodeCode/-1396668384 ((BOUND_VARIABLE_747 var2382) (BOUND_VARIABLE_748 var3016) (BOUND_VARIABLE_749 var542) (BOUND_VARIABLE_750 String) (BOUND_VARIABLE_751 Bool)) void (as @void_0 void))\r\n(define-fun null-var2382 () var2382 (as @var2382_0 var2382))\r\n(define-fun null-var3016 () var3016 (as @var3016_0 var3016))\r\n(define-fun null-var542 () var542 (as @var542_0 var542))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2097 () var2382 (as @var2382_1 var2382))\r\n(define-fun var574 () var3016 (as @var3016_1 var3016))\r\n(define-fun var2470 () var542 (as @var542_1 var542))\r\n(define-fun var13 () String \"\")\r\n(define-fun var2248!1 () String \"\")\r\n(define-fun var2248!2 () String \"\")\r\n(define-fun var1679!1 () String \"{\")\r\n(define-fun var2470!1 () var542 (as @var542_0 var542))\r\n(define-fun var420!1 () String \"\")\r\n(define-fun var3827!1 () String \"\")\r\n(define-fun var3827!2 () String \"\")\r\n(define-fun var2976!1 () String \"  \")\r\n(define-fun var2097!1 () var2382 (as @var2382_0 var2382))\r\n(define-fun var574!1 () var3016 (as @var3016_0 var3016))\r\n(define-fun var2470!2 () var542 (as @var542_0 var542))\r\n(define-fun var3956!1 () String \"\")\r\n(define-fun var1740 () Int 0)\r\n(define-fun var1171!1 () String \"\")\r\n(define-fun var1171!2 () String \"\")\r\n(define-fun var1362!1 () String \"}\")\r\n(define-fun var2470!3 () var542 (as @var542_0 var542))\r\n(define-fun var1242!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36679680,
            "run_time": 0.13932204246520996,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2382:\n  ;;   var2382!val!0 var2382!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2382!val!0 () var2382)\n  (declare-fun var2382!val!1 () var2382)\n  ;; cardinality constraint:\n  (forall ((x var2382)) (or (= x var2382!val!0) (= x var2382!val!1)))\n  ;; -----------\n  ;; universe for var3016:\n  ;;   var3016!val!1 var3016!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3016!val!1 () var3016)\n  (declare-fun var3016!val!0 () var3016)\n  ;; cardinality constraint:\n  (forall ((x var3016)) (or (= x var3016!val!1) (= x var3016!val!0)))\n  ;; -----------\n  ;; universe for var542:\n  ;;   var542!val!1 var542!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var542!val!1 () var542)\n  (declare-fun var542!val!0 () var542)\n  ;; cardinality constraint:\n  (forall ((x var542)) (or (= x var542!val!1) (= x var542!val!0)))\n  ;; -----------\n  (define-fun var2248!2 () String\n    \"\\u{0}\")\n  (define-fun var1679!1 () String\n    \"\\u{0}{\")\n  (define-fun var1171!2 () String\n    \"\\u{0}\")\n  (define-fun var2248!1 () String\n    \"\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2470 () var542\n    var542!val!0)\n  (define-fun var2976!1 () String\n    \"\\u{0}  \")\n  (define-fun var13 () String\n    \"\\u{0}\")\n  (define-fun var1679 () String\n    (str.++ var2248!1 var13))\n  (define-fun null-var542 () var542\n    var542!val!1)\n  (define-fun var1171!1 () String\n    \"\")\n  (define-fun var3956 () String\n    (str.++ var3827!1 var13 \"  \"))\n  (define-fun var1362!1 () String\n    \"\\u{0}}\")\n  (define-fun var3212 () String\n    (str.++ var2248!1 var13 \"{\"))\n  (define-fun var3827!1 () String\n    \"\")\n  (define-fun var574 () var3016\n    var3016!val!0)\n  (define-fun var1242 () String\n    (str.++ var1171!1 var13 \"}\"))\n  (define-fun var2097 () var2382\n    var2382!val!0)\n  (define-fun var3827 () String\n    String-init)\n  (define-fun var3725 () String\n    (str.++ var1171!1 var13 \"}\"))\n  (define-fun var3827!2 () String\n    \"\\u{0}\")\n  (define-fun var2976 () String\n    (str.++ var3827!1 var13))\n  (define-fun var2248 () String\n    String-init)\n  (define-fun null-var2382 () var2382\n    var2382!val!1)\n  (define-fun var420 () String\n    (str.++ var2248!1 var13 \"{\"))\n  (define-fun var1362 () String\n    (str.++ var1171!1 var13))\n  (define-fun var1171 () String\n    String-init)\n  (define-fun var2630 () String\n    (str.++ var3827!1 var13 \"  \"))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var3016 () var3016\n    var3016!val!1)\n  (define-fun var2470!2 () var542\n    var542!val!1)\n  (define-fun var2470!3 () var542\n    var542!val!1)\n  (define-fun var2470!1 () var542\n    var542!val!1)\n  (define-fun var1242!1 () String\n    \"\")\n  (define-fun var574!1 () var3016\n    var3016!val!1)\n  (define-fun var1740 () Int\n    0)\n  (define-fun var2097!1 () var2382\n    var2382!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3956!1 () String\n    \"\")\n  (define-fun var420!1 () String\n    \"\")\n  (define-fun insertCloseNodeCode/-1396668384 ((x!0 var2382)\n   (x!1 var3016)\n   (x!2 var542)\n   (x!3 String)\n   (x!4 Bool)) void\n    void!val!0)\n  (define-fun println/1333914633 ((x!0 var542) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 95 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169349120,
            "run_time": 2.5795347690582275,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2382/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JavaCodeGenerator__insertCloseNodeAction__447784493\\717.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1362!1 =\r\n     concat(var13, \"}\")\r\n   var2976!1 =\r\n     concat(var13, \"  \")\r\n   var1679!1 =\r\n     concat(var13, \"{\")\r\n\r\n2105ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 28,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r6 := @this: org.javacc.jjtree.JavaCodeGenerator",
            "r7 := @parameter0: org.javacc.jjtree.NodeScope",
            "r0 := @parameter1: org.javacc.jjtree.IO",
            "r2 := @parameter2: java.lang.String",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"{\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r5)",
            "$r8 = new java.lang.StringBuilder",
            "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  \")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r6.<org.javacc.jjtree.JavaCodeGenerator: void insertCloseNodeCode(org.javacc.jjtree.NodeScope,org.javacc.jjtree.IO,java.lang.String,boolean)>(r7, r0, $r11, 0)",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"}\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r15)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPNodeFiles__jjtreeASTIncludeFile__-1206213111\\389.smt2",
        "z3": {
            "memory": 31420416,
            "run_time": 0.09962344169616699,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var600 () String\r\n    String-init)\r\n  (define-fun var3498 () String\r\n    (str.++ var600!1 var3503 \".h\"))\r\n  (define-fun var1550 () var1563\r\n    var1563-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1073 () var1563\r\n    var1632_getJJTreeOutputDirectory/-709711143)\r\n  (define-fun var1224 () String\r\n    (str.++ var600!1 var3503 \".h\"))\r\n  (define-fun var3107 () String\r\n    (getAbsolutePath/-802773300 var1550!1))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3503 () String\r\n    \"A\")\r\n  (define-fun var243 () String\r\n    (str.++ var600!1 var3503))\r\n  (define-fun var600!2 () String\r\n    \"A\")\r\n  (define-fun var600!1 () String\r\n    \"\")\r\n  (define-fun var243!1 () String\r\n    \"A.h\")\r\n  (define-fun var1563-init () var1563\r\n    var1563!val!0)\r\n  (define-fun var1550!1 () var1563\r\n    var1563!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1073!1 () var1563\r\n    var1563!val!0)\r\n  (define-fun var1632_getJJTreeOutputDirectory/-709711143 () var1563\r\n    var1563!val!0)\r\n  (define-fun var3498!1 () String\r\n    \"\")\r\n  (define-fun getAbsolutePath/-802773300 ((x!0 var1563)) String\r\n    \"\")\r\n  (define-fun <init>/-1833447926 ((x!0 var1563) (x!1 var1563) (x!2 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 49 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8622080,
            "run_time": 0.04579663276672363,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3847 is 1\r\n; rep: (as @var3847_0 var3847)\r\n; cardinality of var1563 is 1\r\n; rep: (as @var1563_0 var1563)\r\n; cardinality of var1632 is 1\r\n; rep: (as @var1632_0 var1632)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1563-init () var1563 (as @var1563_0 var1563))\r\n(define-fun var1632_getJJTreeOutputDirectory/-709711143 () var1563 (as @var1563_0 var1563))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1833447926 ((BOUND_VARIABLE_600 var1563) (BOUND_VARIABLE_601 var1563) (BOUND_VARIABLE_602 String)) void (as @void_0 void))\r\n(define-fun getAbsolutePath/-802773300 ((BOUND_VARIABLE_605 var1563)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3503 () String \"\")\r\n(define-fun var600!1 () String \"\")\r\n(define-fun var600!2 () String \"\")\r\n(define-fun var243!1 () String \".h\")\r\n(define-fun var1550!1 () var1563 (as @var1563_0 var1563))\r\n(define-fun var1073!1 () var1563 (as @var1563_0 var1563))\r\n(define-fun var3498!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37277696,
            "run_time": 0.13932204246520996,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var243!1 () String\n    \"\\u{0}\\u{0}.h\")\n  (define-fun var600!1 () String\n    \"\")\n  (define-fun var600!2 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var243 () String\n    (str.++ var600!1 var3503))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3503 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1550 () var1563\n    var1563-init)\n  (define-fun var3107 () String\n    (getAbsolutePath/-802773300 var1550!1))\n  (define-fun var1073 () var1563\n    var1632_getJJTreeOutputDirectory/-709711143)\n  (define-fun var600 () String\n    String-init)\n  (define-fun var1224 () String\n    (str.++ var600!1 var3503 \".h\"))\n  (define-fun var3498 () String\n    (str.++ var600!1 var3503 \".h\"))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1563-init () var1563\n    var1563!val!0)\n  (define-fun var1550!1 () var1563\n    var1563!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1073!1 () var1563\n    var1563!val!0)\n  (define-fun var1632_getJJTreeOutputDirectory/-709711143 () var1563\n    var1563!val!0)\n  (define-fun var3498!1 () String\n    \"\")\n  (define-fun getAbsolutePath/-802773300 ((x!0 var1563)) String\n    \"\")\n  (define-fun <init>/-1833447926 ((x!0 var1563) (x!1 var1563) (x!2 String)) void\n    void!val!0)\n)\n(error \"line 49 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 188420096,
            "run_time": 2.6265528202056885,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var243!1 () String \".h\")\r\n  (define-fun var600!2 () String \"\")\r\n  (define-fun var600!1 () String \"\")\r\n  (define-fun var3503 () String \"\")\r\n  (define-fun null-String () String \"h\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.String",
            "$r0 = new java.io.File",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.io.File getJJTreeOutputDirectory()>()",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".h\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r5)",
            "$r7 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPNodeFiles__nodeConstants__-1553478071\\708.smt2",
        "z3": {
            "memory": 31326208,
            "run_time": 0.11518287658691406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1198!1 () String\r\n    \"\")\r\n  (define-fun var3842-parserName () String\r\n    \"\")\r\n  (define-fun var1281!1 () String\r\n    \"TreeConstants\")\r\n  (define-fun var1198!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1198 () String\r\n    String-init)\r\n  (define-fun var1281 () String\r\n    (str.++ var1198!1 var3842-parserName))\r\n  (define-fun var718 () String\r\n    var3842-parserName)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3224 () String\r\n    (str.++ var1198!1 var3842-parserName \"TreeConstants\"))\r\n  (define-fun var3204 () String\r\n    (str.++ var1198!1 var3842-parserName \"TreeConstants\"))\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11075584,
            "run_time": 0.03124070167541504,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3842 is 1\r\n; rep: (as @var3842_0 var3842)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var3842-parserName () String \"\")\r\n(define-fun var1198!1 () String \"\")\r\n(define-fun var1198!2 () String \"\")\r\n(define-fun var1281!1 () String \"TreeConstants\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32133120,
            "run_time": 0.13932204246520996,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1198!1 () String\n    \"\")\n  (define-fun var3842-parserName () String\n    \"\")\n  (define-fun var1281!1 () String\n    \"TreeConstants\")\n  (define-fun var1198!2 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1281 () String\n    (str.++ var1198!1 var3842-parserName))\n  (define-fun var718 () String\n    var3842-parserName)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3224 () String\n    (str.++ var1198!1 var3842-parserName \"TreeConstants\"))\n  (define-fun var3204 () String\n    (str.++ var1198!1 var3842-parserName \"TreeConstants\"))\n  (define-fun var1198 () String\n    String-init)\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 217731072,
            "run_time": 2.642120361328125,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1281!1 () String \"TreeConstants\")\r\n  (define-fun var1198!2 () String \"\")\r\n  (define-fun var1198!1 () String \"\")\r\n  (define-fun var3842-parserName () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r1 = <org.javacc.jjtree.JJTreeGlobals: java.lang.String parserName>",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"TreeConstants\")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JJTreeParserTokenManager__\u300ainit\u300b__-696492026\\2041.smt2",
        "z3": {
            "memory": 31281152,
            "run_time": 0.18174505233764648,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2203:\r\n  ;;   var2203!val!0 var2203!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2203!val!0 () var2203)\r\n  (declare-fun var2203!val!1 () var2203)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2203)) (or (= x var2203!val!0) (= x var2203!val!1)))\r\n  ;; -----------\r\n  ;; universe for var339:\r\n  ;;   var339!val!8 var339!val!1 var339!val!9 var339!val!4 var339!val!2 var339!val!3 var339!val!6 var339!val!0 var339!val!5 var339!val!7 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var339!val!8 () var339)\r\n  (declare-fun var339!val!1 () var339)\r\n  (declare-fun var339!val!9 () var339)\r\n  (declare-fun var339!val!4 () var339)\r\n  (declare-fun var339!val!2 () var339)\r\n  (declare-fun var339!val!3 () var339)\r\n  (declare-fun var339!val!6 () var339)\r\n  (declare-fun var339!val!0 () var339)\r\n  (declare-fun var339!val!5 () var339)\r\n  (declare-fun var339!val!7 () var339)\r\n  ;; cardinality constraint:\r\n  (forall ((x var339))\r\n          (or (= x var339!val!8)\r\n              (= x var339!val!1)\r\n              (= x var339!val!9)\r\n              (= x var339!val!4)\r\n              (= x var339!val!2)\r\n              (= x var339!val!3)\r\n              (= x var339!val!6)\r\n              (= x var339!val!0)\r\n              (= x var339!val!5)\r\n              (= x var339!val!7)))\r\n  ;; -----------\r\n  (define-fun var758!2 () var339\r\n    var339!val!3)\r\n  (define-fun var3085 () var3590\r\n    var2305-out)\r\n  (define-fun var627 () String\r\n    (jjimage/-1450700737 var758!5))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var2203 () var2203\r\n    var2203!val!1)\r\n  (define-fun var758 () var339\r\n    var339!val!0)\r\n  (define-fun var758!9 () var339\r\n    var339!val!2)\r\n  (define-fun var758!3 () var339\r\n    var339!val!4)\r\n  (define-fun var758!4 () var339\r\n    var339!val!5)\r\n  (define-fun var758!7 () var339\r\n    var339!val!8)\r\n  (define-fun var758!5 () var339\r\n    var339!val!6)\r\n  (define-fun var1002 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var3481 () String\r\n    String-init)\r\n  (define-fun null-var339 () var339\r\n    var339!val!1)\r\n  (define-fun var758!6 () var339\r\n    var339!val!7)\r\n  (define-fun var758!8 () var339\r\n    var339!val!9)\r\n  (define-fun var2095 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var2305-out () var3590\r\n    var3590!val!0)\r\n  (define-fun arr-Int-init () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var1158 () var2203\r\n    var2203!val!0)\r\n  (define-fun var3481!1 () String\r\n    \"\")\r\n  (define-fun var758!1 () var339\r\n    var339!val!8)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun jjstateSet/-1450700737 ((x!0 var339)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun jjimage/-1450700737 ((x!0 var339)) String\r\n    \"\")\r\n  (define-fun image/-1450700737 ((x!0 var339)) String\r\n    \"\")\r\n  (define-fun curLexState/-1450700737 ((x!0 var339)) Int\r\n    0)\r\n  (define-fun defaultLexState/-1450700737 ((x!0 var339)) Int\r\n    0)\r\n  (define-fun input_stream/-1450700737 ((x!0 var339)) var2203\r\n    var2203!val!0)\r\n  (define-fun jjrounds/-1450700737 ((x!0 var339)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun debugStream/-1450700737 ((x!0 var339)) var3590\r\n    var3590!val!0)\r\n  (define-fun cast-from-var339-to-var413 ((x!0 var339)) var413\r\n    var413!val!0)\r\n  (define-fun <init>/-279557996 ((x!0 var413)) void\r\n    void!val!0)\r\n)\r\n(error \"line 72 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.029344797134399414,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var339 is 10\r\n; rep: (as @var339_0 var339)\r\n; rep: (as @var339_1 var339)\r\n; rep: (as @var339_2 var339)\r\n; rep: (as @var339_3 var339)\r\n; rep: (as @var339_4 var339)\r\n; rep: (as @var339_5 var339)\r\n; rep: (as @var339_6 var339)\r\n; rep: (as @var339_7 var339)\r\n; rep: (as @var339_8 var339)\r\n; rep: (as @var339_9 var339)\r\n; cardinality of var2203 is 2\r\n; rep: (as @var2203_0 var2203)\r\n; rep: (as @var2203_1 var2203)\r\n; cardinality of var413 is 1\r\n; rep: (as @var413_0 var413)\r\n; cardinality of var3590 is 1\r\n; rep: (as @var3590_0 var3590)\r\n; cardinality of var2305 is 1\r\n; rep: (as @var2305_0 var2305)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun <init>/-279557996 ((BOUND_VARIABLE_691 var413)) void (as @void_0 void))\r\n(define-fun cast-from-var339-to-var413 ((BOUND_VARIABLE_694 var339)) var413 (as @var413_0 var413))\r\n(define-fun debugStream/-1450700737 ((BOUND_VARIABLE_697 var339)) var3590 (as @var3590_0 var3590))\r\n(define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun jjrounds/-1450700737 ((_arg_1 var339)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun jjstateSet/-1450700737 ((_arg_1 var339)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun String-init () String \"\")\r\n(define-fun jjimage/-1450700737 ((_arg_1 var339)) String \"\")\r\n(define-fun image/-1450700737 ((_arg_1 var339)) String \"\")\r\n(define-fun curLexState/-1450700737 ((_arg_1 var339)) Int 0)\r\n(define-fun defaultLexState/-1450700737 ((_arg_1 var339)) Int 0)\r\n(define-fun input_stream/-1450700737 ((_arg_1 var339)) var2203 (as @var2203_1 var2203))\r\n(define-fun null-var339 () var339 (as @var339_0 var339))\r\n(define-fun null-var2203 () var2203 (as @var2203_0 var2203))\r\n(define-fun var2305-out () var3590 (as @var3590_0 var3590))\r\n(define-fun var758 () var339 (as @var339_1 var339))\r\n(define-fun var1158 () var2203 (as @var2203_1 var2203))\r\n(define-fun var758!1 () var339 (as @var339_0 var339))\r\n(define-fun var758!2 () var339 (as @var339_2 var339))\r\n(define-fun var758!3 () var339 (as @var339_3 var339))\r\n(define-fun var758!4 () var339 (as @var339_4 var339))\r\n(define-fun var3481!1 () String \"\")\r\n(define-fun var758!5 () var339 (as @var339_5 var339))\r\n(define-fun var758!6 () var339 (as @var339_6 var339))\r\n(define-fun var758!7 () var339 (as @var339_7 var339))\r\n(define-fun var758!8 () var339 (as @var339_8 var339))\r\n(define-fun var758!9 () var339 (as @var339_9 var339))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36962304,
            "run_time": 0.10862255096435547,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 71 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 72 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173371392,
            "run_time": 2.6282126903533936,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var758!9 () var339 var339!28)\r\n  (define-fun var758!8 () var339 var339!26)\r\n  (define-fun var758!7 () var339 var339!24)\r\n  (define-fun var758!6 () var339 var339!22)\r\n  (define-fun var758!5 () var339 var339!20)\r\n  (define-fun var3481!1 () String \"\")\r\n  (define-fun var758!4 () var339 var339!18)\r\n  (define-fun var758!3 () var339 var339!16)\r\n  (define-fun var758!2 () var339 var339!14)\r\n  (define-fun var1158 () var2203 var2203!12)\r\n  (define-fun var758 () var339 var339!10)\r\n  (define-fun var2305-out () var3590 var3590!8)\r\n  (define-fun null-var2203 () var2203 var2203!6)\r\n  (define-fun null-var339 () var339 var339!4)\r\n  (define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun var2203!12 () var2203 (input_stream/-1450700737 var339!28))\r\n  (define-fun var3590!8 () var3590 (debugStream/-1450700737 var339!14))\r\n  (define-fun defaultLexState/-1450700737 ((x!0 var339)) Int (ite (= x!0 var339!26) 0 0))\r\n  (define-fun curLexState/-1450700737 ((x!0 var339)) Int (ite (= x!0 var339!24) 0 0))\r\n  (define-fun image/-1450700737 ((x!0 var339)) String (ite (= x!0 var339!22) \"\" \"\"))\r\n  (define-fun jjimage/-1450700737 ((x!0 var339)) String (ite (= x!0 var339!20) \"\" \"\"))\r\n  (define-fun jjstateSet/-1450700737 ((x!0 var339)) (Array Int Int) (ite (= x!0 var339!18) ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n  (define-fun jjrounds/-1450700737 ((x!0 var339)) (Array Int Int) (ite (= x!0 var339!16) ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 12,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjtree.JJTreeParserTokenManager",
            "r6 := @parameter0: org.javacc.jjtree.JavaCharStream",
            "specialinvoke r0.<java.lang.Object: void <init>()>()",
            "$r1 = <java.lang.System: java.io.PrintStream out>",
            "r0.<org.javacc.jjtree.JJTreeParserTokenManager: java.io.PrintStream debugStream> = $r1",
            "$r2 = newarray (int)[65]",
            "r0.<org.javacc.jjtree.JJTreeParserTokenManager: int[] jjrounds> = $r2",
            "$r3 = newarray (int)[130]",
            "r0.<org.javacc.jjtree.JJTreeParserTokenManager: int[] jjstateSet> = $r3",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "r0.<org.javacc.jjtree.JJTreeParserTokenManager: java.lang.StringBuilder jjimage> = $r4",
            "$r5 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: java.lang.StringBuilder jjimage>",
            "r0.<org.javacc.jjtree.JJTreeParserTokenManager: java.lang.StringBuilder image> = $r5",
            "r0.<org.javacc.jjtree.JJTreeParserTokenManager: int curLexState> = 0",
            "r0.<org.javacc.jjtree.JJTreeParserTokenManager: int defaultLexState> = 0",
            "r0.<org.javacc.jjtree.JJTreeParserTokenManager: org.javacc.jjtree.JavaCharStream input_stream> = r6",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.ASTNodeDescriptor__getNodeType__-707025417\\315.smt2",
        "z3": {
            "memory": 31469568,
            "run_time": 0.16313862800598145,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var712:\r\n  ;;   var712!val!0 var712!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var712!val!0 () var712)\r\n  (declare-fun var712!val!1 () var712)\r\n  ;; cardinality constraint:\r\n  (forall ((x var712)) (or (= x var712!val!0) (= x var712!val!1)))\r\n  ;; -----------\r\n  (define-fun var1278 () Bool\r\n    var2438_getMulti/-1858061690)\r\n  (define-fun var1778 () var712\r\n    var712!val!0)\r\n  (define-fun null-var712 () var712\r\n    var712!val!1)\r\n  (define-fun var2438_getMulti/-1858061690 () Bool\r\n    false)\r\n)\r\n(error \"line 19 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1744896,
            "run_time": 0.06258559226989746,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var712 is 2\r\n; rep: (as @var712_0 var712)\r\n; rep: (as @var712_1 var712)\r\n; cardinality of var2438 is 1\r\n; rep: (as @var2438_0 var2438)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2438_getMulti/-1858061690 () Bool false)\r\n(define-fun null-var712 () var712 (as @var712_0 var712))\r\n(define-fun var1778 () var712 (as @var712_1 var712))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33751040,
            "run_time": 0.12522339820861816,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var712:\n  ;;   var712!val!0 var712!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var712!val!0 () var712)\n  (declare-fun var712!val!1 () var712)\n  ;; cardinality constraint:\n  (forall ((x var712)) (or (= x var712!val!0) (= x var712!val!1)))\n  ;; -----------\n  (define-fun var1778 () var712\n    var712!val!0)\n  (define-fun null-var712 () var712\n    var712!val!1)\n  (define-fun var1278 () Bool\n    var2438_getMulti/-1858061690)\n  (define-fun var2438_getMulti/-1858061690 () Bool\n    false)\n)\n(error \"line 19 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 126558208,
            "run_time": 1.7403607368469238,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1778 () var712 var712!4)\r\n  (define-fun null-var712 () var712 var712!2)\r\n  (define-fun var2438_getMulti/-1858061690 () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 2,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r2 := @this: org.javacc.jjtree.ASTNodeDescriptor",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getMulti()>()",
            "if $z0 == 0 goto return \"SimpleNode\"",
            "return \"SimpleNode\""
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.IO__setInput__-502018844\\482.smt2",
        "z3": {
            "memory": 31137792,
            "run_time": 0.11527061462402344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1806:\r\n  ;;   var1806!val!1 var1806!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1806!val!1 () var1806)\r\n  (declare-fun var1806!val!0 () var1806)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1806)) (or (= x var1806!val!1) (= x var1806!val!0)))\r\n  ;; -----------\r\n  ;; universe for var251:\r\n  ;;   var251!val!1 var251!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var251!val!1 () var251)\r\n  (declare-fun var251!val!0 () var251)\r\n  ;; cardinality constraint:\r\n  (forall ((x var251)) (or (= x var251!val!1) (= x var251!val!0)))\r\n  ;; -----------\r\n  (define-fun var1324 () var251\r\n    var251!val!0)\r\n  (define-fun var853 () var1806\r\n    var1806!val!0)\r\n  (define-fun var1643 () var702\r\n    var702-init)\r\n  (define-fun var2378 () String\r\n    (toString/-1112415476 (cast-from-var1806-to-var589 var853)))\r\n  (define-fun null-var251 () var251\r\n    var251!val!1)\r\n  (define-fun var610 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-var1806 () var1806\r\n    var1806!val!1)\r\n  (define-fun var3121 () var1453\r\n    var1453-init)\r\n  (define-fun var1643!1 () var702\r\n    var702!val!0)\r\n  (define-fun var1453-init () var1453\r\n    var1453!val!0)\r\n  (define-fun var702-init () var702\r\n    var702!val!0)\r\n  (define-fun var2378!1 () String\r\n    \"\")\r\n  (define-fun cast-from-var1806-to-var589 ((x!0 var1806)) var589\r\n    var589!val!0)\r\n  (define-fun <init>/-1208695669 ((x!0 var702) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun toString/-1112415476 ((x!0 var589)) String\r\n    \"\")\r\n)\r\n(error \"line 40 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8716288,
            "run_time": 0.04662179946899414,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var251 is 2\r\n; rep: (as @var251_0 var251)\r\n; rep: (as @var251_1 var251)\r\n; cardinality of var1745 is 1\r\n; rep: (as @var1745_0 var1745)\r\n; cardinality of var1453 is 1\r\n; rep: (as @var1453_0 var1453)\r\n; cardinality of var1806 is 2\r\n; rep: (as @var1806_0 var1806)\r\n; rep: (as @var1806_1 var1806)\r\n; cardinality of var702 is 1\r\n; rep: (as @var702_0 var702)\r\n; cardinality of var589 is 1\r\n; rep: (as @var589_0 var589)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1453-init () var1453 (as @var1453_0 var1453))\r\n(define-fun var702-init () var702 (as @var702_0 var702))\r\n(define-fun toString/-1112415476 ((BOUND_VARIABLE_521 var589)) String \"\")\r\n(define-fun cast-from-var1806-to-var589 ((BOUND_VARIABLE_524 var1806)) var589 (as @var589_0 var589))\r\n(define-fun <init>/-1208695669 ((BOUND_VARIABLE_527 var702) (BOUND_VARIABLE_528 String)) void (as @void_0 void))\r\n(define-fun null-var251 () var251 (as @var251_0 var251))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1806 () var1806 (as @var1806_0 var1806))\r\n(define-fun var1324 () var251 (as @var251_1 var251))\r\n(define-fun var610 () String \"\")\r\n(define-fun var853 () var1806 (as @var1806_1 var1806))\r\n(define-fun var1643!1 () var702 (as @var702_0 var702))\r\n(define-fun var2378!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36614144,
            "run_time": 0.10958552360534668,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1806:\n  ;;   var1806!val!1 var1806!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1806!val!1 () var1806)\n  (declare-fun var1806!val!0 () var1806)\n  ;; cardinality constraint:\n  (forall ((x var1806)) (or (= x var1806!val!1) (= x var1806!val!0)))\n  ;; -----------\n  ;; universe for var251:\n  ;;   var251!val!1 var251!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var251!val!1 () var251)\n  (declare-fun var251!val!0 () var251)\n  ;; cardinality constraint:\n  (forall ((x var251)) (or (= x var251!val!1) (= x var251!val!0)))\n  ;; -----------\n  (define-fun var2378 () String\n    (toString/-1112415476 (cast-from-var1806-to-var589 var853)))\n  (define-fun var1324 () var251\n    var251!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var610 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var853 () var1806\n    var1806!val!0)\n  (define-fun var3121 () var1453\n    var1453-init)\n  (define-fun null-var251 () var251\n    var251!val!1)\n  (define-fun var1643 () var702\n    var702-init)\n  (define-fun null-var1806 () var1806\n    var1806!val!1)\n  (define-fun var1643!1 () var702\n    var702!val!0)\n  (define-fun var1453-init () var1453\n    var1453!val!0)\n  (define-fun var702-init () var702\n    var702!val!0)\n  (define-fun var2378!1 () String\n    \"\")\n  (define-fun cast-from-var1806-to-var589 ((x!0 var1806)) var589\n    var589!val!0)\n  (define-fun <init>/-1208695669 ((x!0 var702) (x!1 String)) void\n    void!val!0)\n  (define-fun toString/-1112415476 ((x!0 var589)) String\n    \"\")\n)\n(error \"line 40 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 157745152,
            "run_time": 1.8010637760162354,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var853 () var1806 var1806!8)\r\n  (define-fun var610 () String \"\\u{0}\")\r\n  (define-fun var1324 () var251 var251!6)\r\n  (define-fun null-var1806 () var1806 var1806!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var251 () var251 var251!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.Throwable: java.lang.String toString()>"
        ],
        "api_count": {},
        "jimple_statements": [
            "r2 := @this: org.javacc.jjtree.IO",
            "r1 := @parameter0: java.lang.String",
            "$r0 = new java.io.File",
            "$r25 := @caughtexception",
            "$r26 = new org.javacc.jjtree.JJTreeIOException",
            "$r27 = virtualinvoke $r25.<java.io.IOException: java.lang.String toString()>()",
            "specialinvoke $r26.<org.javacc.jjtree.JJTreeIOException: void <init>(java.lang.String)>($r27)",
            "throw $r26"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__closeJJTreeComment__367463215\\491.smt2",
        "z3": {
            "memory": 31764480,
            "run_time": 0.20949196815490723,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var204:\r\n  ;;   var204!val!1 var204!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var204!val!1 () var204)\r\n  (declare-fun var204!val!0 () var204)\r\n  ;; cardinality constraint:\r\n  (forall ((x var204)) (or (= x var204!val!1) (= x var204!val!0)))\r\n  ;; -----------\r\n  (define-fun var1526 () var204\r\n    var204!val!0)\r\n  (define-fun var1829 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3301 () String\r\n    (str.++ var1829!1 \"\" \"@egen*/\"))\r\n  (define-fun null-var204 () var204\r\n    var204!val!1)\r\n  (define-fun var776 () String\r\n    \"\")\r\n  (define-fun var1002 () Bool\r\n    (var2252_booleanValue/1280995494 \"IGNORE_ACTIONS\"))\r\n  (define-fun var1296 () String\r\n    (str.++ var1829!1 \"\" \"@egen*/\"))\r\n  (define-fun var1912 () String\r\n    (str.++ var1829!1 \"\"))\r\n  (define-fun var1912!1 () String\r\n    \"@egen*/\")\r\n  (define-fun var1829!1 () String\r\n    \"\")\r\n  (define-fun var1829!2 () String\r\n    \"\")\r\n  (define-fun var1526!1 () var204\r\n    var204!val!1)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1296!1 () String\r\n    \"\")\r\n  (define-fun var2252_booleanValue/1280995494 ((x!0 String)) Bool\r\n    true)\r\n  (define-fun print/-1652180213 ((x!0 var204) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 47 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1712128,
            "run_time": 0.06258559226989746,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var204 is 2\r\n; rep: (as @var204_0 var204)\r\n; rep: (as @var204_1 var204)\r\n; cardinality of var2252 is 1\r\n; rep: (as @var2252_0 var2252)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2252_booleanValue/1280995494 ((_arg_1 String)) Bool true)\r\n(define-fun print/-1652180213 ((BOUND_VARIABLE_573 var204) (BOUND_VARIABLE_574 String)) void (as @void_0 void))\r\n(define-fun null-var204 () var204 (as @var204_0 var204))\r\n(define-fun var1526 () var204 (as @var204_1 var204))\r\n(define-fun var1829!1 () String \"\")\r\n(define-fun var1829!2 () String \"\")\r\n(define-fun var1912!1 () String \"@egen*/\")\r\n(define-fun var1526!1 () var204 (as @var204_0 var204))\r\n(define-fun var1296!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35102720,
            "run_time": 0.12522339820861816,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var204:\n  ;;   var204!val!1 var204!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var204!val!1 () var204)\n  (declare-fun var204!val!0 () var204)\n  ;; cardinality constraint:\n  (forall ((x var204)) (or (= x var204!val!1) (= x var204!val!0)))\n  ;; -----------\n  (define-fun var1526 () var204\n    var204!val!0)\n  (define-fun var1002 () Bool\n    (var2252_booleanValue/1280995494 \"IGNORE_ACTIONS\"))\n  (define-fun var1829 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3301 () String\n    (str.++ var1829!1 \"\" \"@egen*/\"))\n  (define-fun var776 () String\n    \"\")\n  (define-fun null-var204 () var204\n    var204!val!1)\n  (define-fun var1296 () String\n    (str.++ var1829!1 \"\" \"@egen*/\"))\n  (define-fun var1912 () String\n    (str.++ var1829!1 \"\"))\n  (define-fun var1912!1 () String\n    \"@egen*/\")\n  (define-fun var1829!1 () String\n    \"\")\n  (define-fun var1829!2 () String\n    \"\")\n  (define-fun var1526!1 () var204\n    var204!val!1)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1296!1 () String\n    \"\")\n  (define-fun var2252_booleanValue/1280995494 ((x!0 String)) Bool\n    true)\n  (define-fun print/-1652180213 ((x!0 var204) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 47 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 178774016,
            "run_time": 2.2887954711914062,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1912!1 () String \"@egen*/\")\r\n  (define-fun var1829!2 () String \"\")\r\n  (define-fun var1829!1 () String \"\")\r\n  (define-fun var1526 () var204 var204!32)\r\n  (define-fun null-var204 () var204 var204!30)\r\n  (define-fun var2252_booleanValue/1280995494 ((x!0 String)) Bool (ite (= x!0 \"IGNORE_ACTIONS\") true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.jjtree.IO",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean booleanValue(java.lang.String)>(\"IGNORE_ACTIONS\")",
            "if $z0 == 0 goto $r5 = \"/*\"",
            "$r5 = \"\"",
            "goto [?= $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)]",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"@egen*/\")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void print(java.lang.String)>($r4)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjdoc.BNFGenerator__productionStart__-338184526\\355.smt2",
        "z3": {
            "memory": 31506432,
            "run_time": 0.18024563789367676,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3259:\r\n  ;;   var3259!val!0 var3259!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3259!val!0 () var3259)\r\n  (declare-fun var3259!val!1 () var3259)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3259)) (or (= x var3259!val!0) (= x var3259!val!1)))\r\n  ;; -----------\r\n  ;; universe for var92:\r\n  ;;   var92!val!1 var92!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var92!val!1 () var92)\r\n  (declare-fun var92!val!0 () var92)\r\n  ;; cardinality constraint:\r\n  (forall ((x var92)) (or (= x var92!val!1) (= x var92!val!0)))\r\n  ;; -----------\r\n  (define-fun var1204 () var92\r\n    var92!val!0)\r\n  (define-fun var2304 () String\r\n    (getLhs/-759107248 var1204))\r\n  (define-fun var1267 () var3259\r\n    var3259!val!0)\r\n  (define-fun var2803 () String\r\n    (str.++ var3616!1 (getLhs/-759107248 var1204) \" ::= \"))\r\n  (define-fun var1109 () String\r\n    (str.++ var3616!1 (getLhs/-759107248 var1204) \" ::= \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var444 () String\r\n    (str.++ var3616!1 (getLhs/-759107248 var1204)))\r\n  (define-fun null-var3259 () var3259\r\n    var3259!val!1)\r\n  (define-fun null-var92 () var92\r\n    var92!val!1)\r\n  (define-fun var3616 () String\r\n    String-init)\r\n  (define-fun var3616!1 () String\r\n    \"\")\r\n  (define-fun var444!1 () String\r\n    \" ::= \")\r\n  (define-fun var3616!2 () String\r\n    \"\")\r\n  (define-fun var1267!1 () var3259\r\n    var3259!val!0)\r\n  (define-fun var3778 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1267!2 () var3259\r\n    var3259!val!0)\r\n  (define-fun var1109!1 () String\r\n    \"\")\r\n  (define-fun getLhs/-759107248 ((x!0 var92)) String\r\n    \"\")\r\n  (define-fun println/-1459746524 ((x!0 var3259) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun print/-32742682 ((x!0 var3259) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 52 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1712128,
            "run_time": 0.06258559226989746,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3259 is 2\r\n; rep: (as @var3259_0 var3259)\r\n; rep: (as @var3259_1 var3259)\r\n; cardinality of var92 is 2\r\n; rep: (as @var92_0 var92)\r\n; rep: (as @var92_1 var92)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun println/-1459746524 ((BOUND_VARIABLE_519 var3259) (BOUND_VARIABLE_520 String)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun getLhs/-759107248 ((BOUND_VARIABLE_523 var92)) String \"\")\r\n(define-fun print/-32742682 ((BOUND_VARIABLE_526 var3259) (BOUND_VARIABLE_527 String)) void (as @void_0 void))\r\n(define-fun null-var3259 () var3259 (as @var3259_0 var3259))\r\n(define-fun null-var92 () var92 (as @var92_0 var92))\r\n(define-fun var1267 () var3259 (as @var3259_1 var3259))\r\n(define-fun var1204 () var92 (as @var92_1 var92))\r\n(define-fun var1267!1 () var3259 (as @var3259_0 var3259))\r\n(define-fun var3778 () String \"\")\r\n(define-fun var3616!1 () String \"\")\r\n(define-fun var3616!2 () String \"\")\r\n(define-fun var444!1 () String \" ::= \")\r\n(define-fun var1267!2 () var3259 (as @var3259_0 var3259))\r\n(define-fun var1109!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34234368,
            "run_time": 0.12522339820861816,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3259:\n  ;;   var3259!val!0 var3259!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3259!val!0 () var3259)\n  (declare-fun var3259!val!1 () var3259)\n  ;; cardinality constraint:\n  (forall ((x var3259)) (or (= x var3259!val!0) (= x var3259!val!1)))\n  ;; -----------\n  ;; universe for var92:\n  ;;   var92!val!1 var92!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var92!val!1 () var92)\n  (declare-fun var92!val!0 () var92)\n  ;; cardinality constraint:\n  (forall ((x var92)) (or (= x var92!val!1) (= x var92!val!0)))\n  ;; -----------\n  (define-fun var1204 () var92\n    var92!val!0)\n  (define-fun var1109 () String\n    (str.++ var3616!1 (getLhs/-759107248 var1204) \" ::= \"))\n  (define-fun var1267 () var3259\n    var3259!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var444 () String\n    (str.++ var3616!1 (getLhs/-759107248 var1204)))\n  (define-fun var3616 () String\n    String-init)\n  (define-fun null-var3259 () var3259\n    var3259!val!1)\n  (define-fun null-var92 () var92\n    var92!val!1)\n  (define-fun var2304 () String\n    (getLhs/-759107248 var1204))\n  (define-fun var2803 () String\n    (str.++ var3616!1 (getLhs/-759107248 var1204) \" ::= \"))\n  (define-fun var3616!1 () String\n    \"\")\n  (define-fun var444!1 () String\n    \" ::= \")\n  (define-fun var3616!2 () String\n    \"\")\n  (define-fun var1267!1 () var3259\n    var3259!val!0)\n  (define-fun var3778 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1267!2 () var3259\n    var3259!val!0)\n  (define-fun var1109!1 () String\n    \"\")\n  (define-fun getLhs/-759107248 ((x!0 var92)) String\n    \"\")\n  (define-fun println/-1459746524 ((x!0 var3259) (x!1 String)) void\n    void!val!0)\n  (define-fun print/-32742682 ((x!0 var3259) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 52 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164560896,
            "run_time": 2.3174448013305664,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3259/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjdoc.BNFGenerator__productionStart__-338184526\\355.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var444!1 =\r\n     concat(var3616!2, \" ::= \")\r\n\r\n1819ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjdoc.BNFGenerator",
            "r2 := @parameter0: org.javacc.parser.NormalProduction",
            "specialinvoke r0.<org.javacc.jjdoc.BNFGenerator: void println(java.lang.String)>(\"\")",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke r2.<org.javacc.parser.NormalProduction: java.lang.String getLhs()>()",
            "$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" ::= \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjdoc.BNFGenerator: void print(java.lang.String)>($r6)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjdoc.XTextGenerator__documentStart__342192210\\128.smt2",
        "z3": {
            "memory": 31956992,
            "run_time": 0.2919950485229492,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3602:\r\n  ;;   var3602!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3602!val!0 () var3602)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3602)) (= x var3602!val!0))\r\n  ;; -----------\r\n  ;; universe for var3437:\r\n  ;;   var3437!val!1 var3437!val!0 var3437!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3437!val!1 () var3437)\r\n  (declare-fun var3437!val!0 () var3437)\r\n  (declare-fun var3437!val!2 () var3437)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3437))\r\n          (or (= x var3437!val!1) (= x var3437!val!0) (= x var3437!val!2)))\r\n  ;; -----------\r\n  ;; universe for var1111:\r\n  ;;   var1111!val!1 var1111!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1111!val!1 () var1111)\r\n  (declare-fun var1111!val!0 () var1111)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1111)) (or (= x var1111!val!1) (= x var1111!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var3437 () var3437\r\n    var3437!val!1)\r\n  (define-fun var3637 () String\r\n    var1271-input_file)\r\n  (define-fun var3791 () String\r\n    (str.++ var3722!1 \"grammar \"))\r\n  (define-fun var2243 () var3602\r\n    (create_output_stream/1597595382 (cast-from-var3437-to-var1111 var106)))\r\n  (define-fun var1957 () String\r\n    (str.++ var3722!1\r\n        \"grammar \"\r\n        var1271-input_file\r\n        \" with org.eclipse.xtext.common.Terminals\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1419 () String\r\n    (str.++ var3722!1\r\n        \"grammar \"\r\n        var1271-input_file\r\n        \" with org.eclipse.xtext.common.Terminals\"))\r\n  (define-fun var106 () var3437\r\n    var3437!val!0)\r\n  (define-fun var106!1 () var3437\r\n    var3437!val!2)\r\n  (define-fun var3722 () String\r\n    String-init)\r\n  (define-fun var2795 () String\r\n    (str.++ var3722!1 \"grammar \" var1271-input_file))\r\n  (define-fun var3722!1 () String\r\n    \"\")\r\n  (define-fun var1271-input_file () String\r\n    \"\")\r\n  (define-fun var3791!1 () String\r\n    \"grammar \")\r\n  (define-fun var2795!1 () String\r\n    \"grammar  with org.eclipse.xtext.common.Terminals\")\r\n  (define-fun var3722!2 () String\r\n    \"grammar \")\r\n  (define-fun var1419!1 () String\r\n    \"\")\r\n  (define-fun var106!3 () var3437\r\n    var3437!val!1)\r\n  (define-fun var2507 () String\r\n    \"\")\r\n  (define-fun var3702 () String\r\n    \"\")\r\n  (define-fun var106!4 () var3437\r\n    var3437!val!1)\r\n  (define-fun var106!2 () var3437\r\n    var3437!val!1)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun create_output_stream/1597595382 ((x!0 var1111)) var3602\r\n    var3602!val!0)\r\n  (define-fun ostr/154848238 ((x!0 var1111)) var3602\r\n    var3602!val!0)\r\n  (define-fun cast-from-var3437-to-var1111 ((x!0 var3437)) var1111\r\n    (ite (= x!0 var3437!val!0) var1111!val!1\r\n      var1111!val!0))\r\n  (define-fun println/-1731774833 ((x!0 var3437) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 66 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.03062152862548828,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3437 is 3\r\n; rep: (as @var3437_0 var3437)\r\n; rep: (as @var3437_1 var3437)\r\n; rep: (as @var3437_2 var3437)\r\n; cardinality of var3602 is 1\r\n; rep: (as @var3602_0 var3602)\r\n; cardinality of var1111 is 2\r\n; rep: (as @var1111_0 var1111)\r\n; rep: (as @var1111_1 var1111)\r\n; cardinality of var1271 is 1\r\n; rep: (as @var1271_0 var1271)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun create_output_stream/1597595382 ((_arg_1 var1111)) var3602 (as @var3602_0 var3602))\r\n(define-fun cast-from-var3437-to-var1111 ((_arg_1 var3437)) var1111 (ite (= (as @var3437_2 var3437) _arg_1) (as @var1111_1 var1111) (as @var1111_0 var1111)))\r\n(define-fun ostr/154848238 ((_arg_1 var1111)) var3602 (as @var3602_0 var3602))\r\n(define-fun String-init () String \"\")\r\n(define-fun println/-1731774833 ((BOUND_VARIABLE_584 var3437) (BOUND_VARIABLE_585 String)) void (as @void_0 void))\r\n(define-fun null-var3437 () var3437 (as @var3437_0 var3437))\r\n(define-fun var1271-input_file () String \"\")\r\n(define-fun var106 () var3437 (as @var3437_1 var3437))\r\n(define-fun var106!1 () var3437 (as @var3437_2 var3437))\r\n(define-fun var3722!1 () String \"\")\r\n(define-fun var3722!2 () String \"grammar \")\r\n(define-fun var3791!1 () String \"grammar \")\r\n(define-fun var2795!1 () String \"grammar  with org.eclipse.xtext.common.Terminals\")\r\n(define-fun var106!2 () var3437 (as @var3437_0 var3437))\r\n(define-fun var1419!1 () String \"\")\r\n(define-fun var106!3 () var3437 (as @var3437_0 var3437))\r\n(define-fun var3702 () String \"\")\r\n(define-fun var106!4 () var3437 (as @var3437_0 var3437))\r\n(define-fun var2507 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35323904,
            "run_time": 0.17272543907165527,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3602:\n  ;;   var3602!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3602!val!0 () var3602)\n  ;; cardinality constraint:\n  (forall ((x var3602)) (= x var3602!val!0))\n  ;; -----------\n  ;; universe for var3437:\n  ;;   var3437!val!1 var3437!val!0 var3437!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3437!val!1 () var3437)\n  (declare-fun var3437!val!0 () var3437)\n  (declare-fun var3437!val!2 () var3437)\n  ;; cardinality constraint:\n  (forall ((x var3437))\n          (or (= x var3437!val!1) (= x var3437!val!0) (= x var3437!val!2)))\n  ;; -----------\n  ;; universe for var1111:\n  ;;   var1111!val!1 var1111!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1111!val!1 () var1111)\n  (declare-fun var1111!val!0 () var1111)\n  ;; cardinality constraint:\n  (forall ((x var1111)) (or (= x var1111!val!1) (= x var1111!val!0)))\n  ;; -----------\n  (define-fun null-var3437 () var3437\n    var3437!val!1)\n  (define-fun var1957 () String\n    (str.++ var3722!1\n        \"grammar \"\n        var1271-input_file\n        \" with org.eclipse.xtext.common.Terminals\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1419 () String\n    (str.++ var3722!1\n        \"grammar \"\n        var1271-input_file\n        \" with org.eclipse.xtext.common.Terminals\"))\n  (define-fun var3722 () String\n    String-init)\n  (define-fun var2795 () String\n    (str.++ var3722!1 \"grammar \" var1271-input_file))\n  (define-fun var106 () var3437\n    var3437!val!0)\n  (define-fun var106!1 () var3437\n    var3437!val!2)\n  (define-fun var2243 () var3602\n    (create_output_stream/1597595382 (cast-from-var3437-to-var1111 var106)))\n  (define-fun var3637 () String\n    var1271-input_file)\n  (define-fun var3791 () String\n    (str.++ var3722!1 \"grammar \"))\n  (define-fun var3722!1 () String\n    \"\")\n  (define-fun var1271-input_file () String\n    \"\")\n  (define-fun var3791!1 () String\n    \"grammar \")\n  (define-fun var2795!1 () String\n    \"grammar  with org.eclipse.xtext.common.Terminals\")\n  (define-fun var3722!2 () String\n    \"grammar \")\n  (define-fun var1419!1 () String\n    \"\")\n  (define-fun var106!3 () var3437\n    var3437!val!1)\n  (define-fun var2507 () String\n    \"\")\n  (define-fun var3702 () String\n    \"\")\n  (define-fun var106!4 () var3437\n    var3437!val!1)\n  (define-fun var106!2 () var3437\n    var3437!val!1)\n  (define-fun String-init () String\n    \"\")\n  (define-fun create_output_stream/1597595382 ((x!0 var1111)) var3602\n    var3602!val!0)\n  (define-fun ostr/154848238 ((x!0 var1111)) var3602\n    var3602!val!0)\n  (define-fun cast-from-var3437-to-var1111 ((x!0 var3437)) var1111\n    (ite (= x!0 var3437!val!0) var1111!val!1\n      var1111!val!0))\n  (define-fun println/-1731774833 ((x!0 var3437) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 66 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180514816,
            "run_time": 2.3193399906158447,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3437/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjdoc.XTextGenerator__documentStart__342192210\\128.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_29_4 =\r\n     concat(all_29_5, \" with org.eclipse.xtext.common.Terminals\")\r\n   var2795!1 =\r\n     concat(all_26_4, \" with org.eclipse.xtext.common.Terminals\")\r\n   var3791!1 =\r\n     concat(\"grammar \", var1271-input_file)\r\n   all_29_5 =\r\n     concat(\"grammar \", var1271-input_file)\r\n   all_26_4 =\r\n     concat(\"grammar \", var1271-input_file)\r\n\r\n1903ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjdoc.XTextGenerator",
            "$r1 = virtualinvoke r0.<org.javacc.jjdoc.XTextGenerator: java.io.PrintWriter create_output_stream()>()",
            "r0.<org.javacc.jjdoc.XTextGenerator: java.io.PrintWriter ostr> = $r1",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"grammar \")",
            "$r3 = <org.javacc.jjdoc.JJDocGlobals: java.lang.String input_file>",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" with org.eclipse.xtext.common.Terminals\")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke r0.<org.javacc.jjdoc.XTextGenerator: void println(java.lang.String)>($r7)",
            "specialinvoke r0.<org.javacc.jjdoc.XTextGenerator: void println(java.lang.String)>(\"import \\\"http://www.eclipse.org/emf/2002/Ecore\\\" as ecore\")",
            "specialinvoke r0.<org.javacc.jjdoc.XTextGenerator: void println(java.lang.String)>(\"\")",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__insertOpenNodeAction__1098244566\\740.smt2",
        "z3": {
            "memory": 32182272,
            "run_time": 0.33145928382873535,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var409:\r\n  ;;   var409!val!0 var409!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var409!val!0 () var409)\r\n  (declare-fun var409!val!1 () var409)\r\n  ;; cardinality constraint:\r\n  (forall ((x var409)) (or (= x var409!val!0) (= x var409!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1168:\r\n  ;;   var1168!val!1 var1168!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1168!val!1 () var1168)\r\n  (declare-fun var1168!val!0 () var1168)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1168)) (or (= x var1168!val!1) (= x var1168!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3091:\r\n  ;;   var3091!val!0 var3091!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3091!val!0 () var3091)\r\n  (declare-fun var3091!val!1 () var3091)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3091)) (or (= x var3091!val!0) (= x var3091!val!1)))\r\n  ;; -----------\r\n  (define-fun var470 () String\r\n    String-init)\r\n  (define-fun var597 () String\r\n    (str.++ var1992!1 var1866))\r\n  (define-fun var245!2 () String\r\n    \"A\")\r\n  (define-fun null-var409 () var409\r\n    var409!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1992 () String\r\n    String-init)\r\n  (define-fun var1305 () String\r\n    (str.++ var1992!1 var1866 \"}\"))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1883 () String\r\n    (str.++ var245!1 var1866 \"  \"))\r\n  (define-fun var2057 () String\r\n    (str.++ var245!1 var1866 \"  \"))\r\n  (define-fun var3775 () var1168\r\n    var1168!val!0)\r\n  (define-fun var2087 () var3091\r\n    var3091!val!0)\r\n  (define-fun var245 () String\r\n    String-init)\r\n  (define-fun var3739 () String\r\n    (str.++ var470!1 var1866 \"{\"))\r\n  (define-fun var1692 () String\r\n    (str.++ var245!1 var1866))\r\n  (define-fun var2593 () var409\r\n    var409!val!0)\r\n  (define-fun var3848 () String\r\n    (str.++ var470!1 var1866))\r\n  (define-fun null-var3091 () var3091\r\n    var3091!val!1)\r\n  (define-fun var25 () String\r\n    (str.++ var1992!1 var1866 \"}\"))\r\n  (define-fun null-var1168 () var1168\r\n    var1168!val!1)\r\n  (define-fun var2099 () String\r\n    (str.++ var470!1 var1866 \"{\"))\r\n  (define-fun var245!1 () String\r\n    \"\")\r\n  (define-fun var1866 () String\r\n    \"A\")\r\n  (define-fun var3848!1 () String\r\n    \"A{\")\r\n  (define-fun var1992!2 () String\r\n    \"A\")\r\n  (define-fun var1992!1 () String\r\n    \"\")\r\n  (define-fun var470!2 () String\r\n    \"A\")\r\n  (define-fun var1692!1 () String\r\n    \"A  \")\r\n  (define-fun var597!1 () String\r\n    \"A}\")\r\n  (define-fun var470!1 () String\r\n    \"\")\r\n  (define-fun var3739!1 () String\r\n    \"\")\r\n  (define-fun var2593!1 () var409\r\n    var409!val!0)\r\n  (define-fun var2593!2 () var409\r\n    var409!val!0)\r\n  (define-fun var25!1 () String\r\n    \"\")\r\n  (define-fun var2087!1 () var3091\r\n    var3091!val!0)\r\n  (define-fun var3775!1 () var1168\r\n    var1168!val!1)\r\n  (define-fun var2057!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2593!3 () var409\r\n    var409!val!0)\r\n  (define-fun println/1333914633 ((x!0 var409) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun insertOpenNodeCode/1284769165 ((x!0 var1168)\r\n   (x!1 var3091)\r\n   (x!2 var409)\r\n   (x!3 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 94 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8720384,
            "run_time": 0.045678138732910156,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1168 is 2\r\n; rep: (as @var1168_0 var1168)\r\n; rep: (as @var1168_1 var1168)\r\n; cardinality of var3091 is 2\r\n; rep: (as @var3091_0 var3091)\r\n; rep: (as @var3091_1 var3091)\r\n; cardinality of var409 is 2\r\n; rep: (as @var409_0 var409)\r\n; rep: (as @var409_1 var409)\r\n; cardinality of var1333 is 1\r\n; rep: (as @var1333_0 var1333)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_742 var409) (BOUND_VARIABLE_743 String)) void (as @void_0 void))\r\n(define-fun insertOpenNodeCode/1284769165 ((BOUND_VARIABLE_746 var1168) (BOUND_VARIABLE_747 var3091) (BOUND_VARIABLE_748 var409) (BOUND_VARIABLE_749 String)) void (as @void_0 void))\r\n(define-fun null-var1168 () var1168 (as @var1168_0 var1168))\r\n(define-fun null-var3091 () var3091 (as @var3091_0 var3091))\r\n(define-fun null-var409 () var409 (as @var409_0 var409))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3775 () var1168 (as @var1168_1 var1168))\r\n(define-fun var2087 () var3091 (as @var3091_1 var3091))\r\n(define-fun var2593 () var409 (as @var409_1 var409))\r\n(define-fun var1866 () String \"\")\r\n(define-fun var470!1 () String \"\")\r\n(define-fun var470!2 () String \"\")\r\n(define-fun var3848!1 () String \"{\")\r\n(define-fun var2593!1 () var409 (as @var409_0 var409))\r\n(define-fun var3739!1 () String \"\")\r\n(define-fun var245!1 () String \"\")\r\n(define-fun var245!2 () String \"\")\r\n(define-fun var1692!1 () String \"  \")\r\n(define-fun var3775!1 () var1168 (as @var1168_0 var1168))\r\n(define-fun var2087!1 () var3091 (as @var3091_0 var3091))\r\n(define-fun var2593!2 () var409 (as @var409_0 var409))\r\n(define-fun var2057!1 () String \"\")\r\n(define-fun var1992!1 () String \"\")\r\n(define-fun var1992!2 () String \"\")\r\n(define-fun var597!1 () String \"}\")\r\n(define-fun var2593!3 () var409 (as @var409_0 var409))\r\n(define-fun var25!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36941824,
            "run_time": 0.09411263465881348,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var409:\n  ;;   var409!val!0 var409!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var409!val!0 () var409)\n  (declare-fun var409!val!1 () var409)\n  ;; cardinality constraint:\n  (forall ((x var409)) (or (= x var409!val!0) (= x var409!val!1)))\n  ;; -----------\n  ;; universe for var1168:\n  ;;   var1168!val!1 var1168!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1168!val!1 () var1168)\n  (declare-fun var1168!val!0 () var1168)\n  ;; cardinality constraint:\n  (forall ((x var1168)) (or (= x var1168!val!1) (= x var1168!val!0)))\n  ;; -----------\n  ;; universe for var3091:\n  ;;   var3091!val!0 var3091!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3091!val!0 () var3091)\n  (declare-fun var3091!val!1 () var3091)\n  ;; cardinality constraint:\n  (forall ((x var3091)) (or (= x var3091!val!0) (= x var3091!val!1)))\n  ;; -----------\n  (define-fun var1866 () String\n    \"\\u{0}\")\n  (define-fun var245!1 () String\n    \"\")\n  (define-fun var470!1 () String\n    \"\")\n  (define-fun var597!1 () String\n    \"\\u{0}}\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1692!1 () String\n    \"\\u{0}  \")\n  (define-fun null-var409 () var409\n    var409!val!1)\n  (define-fun var470!2 () String\n    \"\\u{0}\")\n  (define-fun var1992 () String\n    String-init)\n  (define-fun var1883 () String\n    (str.++ var245!1 var1866 \"  \"))\n  (define-fun var2057 () String\n    (str.++ var245!1 var1866 \"  \"))\n  (define-fun var1992!1 () String\n    \"\")\n  (define-fun var1992!2 () String\n    \"\\u{0}\")\n  (define-fun var3848 () String\n    (str.++ var470!1 var1866))\n  (define-fun var3848!1 () String\n    \"\\u{0}{\")\n  (define-fun null-var3091 () var3091\n    var3091!val!1)\n  (define-fun var3775 () var1168\n    var1168!val!0)\n  (define-fun null-var1168 () var1168\n    var1168!val!1)\n  (define-fun var2099 () String\n    (str.++ var470!1 var1866 \"{\"))\n  (define-fun var470 () String\n    String-init)\n  (define-fun var597 () String\n    (str.++ var1992!1 var1866))\n  (define-fun var2087 () var3091\n    var3091!val!0)\n  (define-fun var2593 () var409\n    var409!val!0)\n  (define-fun var25 () String\n    (str.++ var1992!1 var1866 \"}\"))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1305 () String\n    (str.++ var1992!1 var1866 \"}\"))\n  (define-fun var1692 () String\n    (str.++ var245!1 var1866))\n  (define-fun var3739 () String\n    (str.++ var470!1 var1866 \"{\"))\n  (define-fun var245 () String\n    String-init)\n  (define-fun var245!2 () String\n    \"\\u{0}\")\n  (define-fun var3739!1 () String\n    \"\")\n  (define-fun var2593!1 () var409\n    var409!val!0)\n  (define-fun var2593!2 () var409\n    var409!val!0)\n  (define-fun var25!1 () String\n    \"\")\n  (define-fun var2087!1 () var3091\n    var3091!val!0)\n  (define-fun var3775!1 () var1168\n    var1168!val!1)\n  (define-fun var2057!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2593!3 () var409\n    var409!val!0)\n  (define-fun println/1333914633 ((x!0 var409) (x!1 String)) void\n    void!val!0)\n  (define-fun insertOpenNodeCode/1284769165 ((x!0 var1168)\n   (x!1 var3091)\n   (x!2 var409)\n   (x!3 String)) void\n    void!val!0)\n)\n(error \"line 94 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175804416,
            "run_time": 2.3904521465301514,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var409/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPCodeGenerator__insertOpenNodeAction__1098244566\\740.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var597!1 =\r\n     concat(var1866, \"}\")\r\n   var1692!1 =\r\n     concat(var1866, \"  \")\r\n   var3848!1 =\r\n     concat(var1866, \"{\")\r\n\r\n1868ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 28,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r6 := @this: org.javacc.jjtree.CPPCodeGenerator",
            "r7 := @parameter0: org.javacc.jjtree.NodeScope",
            "r0 := @parameter1: org.javacc.jjtree.IO",
            "r2 := @parameter2: java.lang.String",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"{\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r5)",
            "$r8 = new java.lang.StringBuilder",
            "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  \")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r6.<org.javacc.jjtree.CPPCodeGenerator: void insertOpenNodeCode(org.javacc.jjtree.NodeScope,org.javacc.jjtree.IO,java.lang.String)>(r7, r0, $r11)",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"}\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r15)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JJTreeParserTokenManager__MoreLexicalActions__-282340380\\2160.smt2",
        "z3": {
            "memory": 32108544,
            "run_time": 0.16822576522827148,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2920:\r\n  ;;   var2920!val!0 var2920!val!2 var2920!val!4 var2920!val!1 var2920!val!3 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2920!val!0 () var2920)\r\n  (declare-fun var2920!val!2 () var2920)\r\n  (declare-fun var2920!val!4 () var2920)\r\n  (declare-fun var2920!val!1 () var2920)\r\n  (declare-fun var2920!val!3 () var2920)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2920))\r\n          (or (= x var2920!val!0)\r\n              (= x var2920!val!2)\r\n              (= x var2920!val!4)\r\n              (= x var2920!val!1)\r\n              (= x var2920!val!3)))\r\n  ;; -----------\r\n  (define-fun var3269 () (Array Int Int)\r\n    (GetSuffix/1403758179\r\n  (input_stream/-1450700737 var3343!2)\r\n  (jjimageLen/-1450700737 var3343!2)))\r\n  (define-fun null-var2920 () var2920\r\n    var2920!val!1)\r\n  (define-fun var396 () Int\r\n    (+ (jjimageLen/-1450700737 var3343) (jjmatchedPos/-1450700737 var3343) 1))\r\n  (define-fun var3343!2 () var2920\r\n    var2920!val!3)\r\n  (define-fun var3343!1 () var2920\r\n    var2920!val!2)\r\n  (define-fun var712 () Int\r\n    (jjimageLen/-1450700737 var3343))\r\n  (define-fun var2444 () var2691\r\n    (input_stream/-1450700737 var3343!2))\r\n  (define-fun var1735 () Int\r\n    (jjimageLen/-1450700737 var3343!2))\r\n  (define-fun var1496 () var2691\r\n    (input_stream/-1450700737 var3343!3))\r\n  (define-fun var3343 () var2920\r\n    var2920!val!0)\r\n  (define-fun var3235 () Int\r\n    (jjmatchedKind/-1450700737 var3343!2))\r\n  (define-fun var232 () String\r\n    (image/-1450700737 var3343!2))\r\n  (define-fun var232!1 () String\r\n    \"\")\r\n  (define-fun var3343!3 () var2920\r\n    var2920!val!4)\r\n  (define-fun var177 () Int\r\n    (jjmatchedPos/-1450700737 var3343))\r\n  (define-fun var1236 () Int\r\n    (+ (jjmatchedPos/-1450700737 var3343) 1))\r\n  (define-fun var1496!1 () var2691\r\n    var2691!val!0)\r\n  (define-fun var1474 () Int\r\n    0)\r\n  (define-fun jjmatchedPos/-1450700737 ((x!0 var2920)) Int\r\n    0)\r\n  (define-fun image/-1450700737 ((x!0 var2920)) String\r\n    \"\")\r\n  (define-fun jjimageLen/-1450700737 ((x!0 var2920)) Int\r\n    (ite (= x!0 var2920!val!3) 1\r\n      0))\r\n  (define-fun jjmatchedKind/-1450700737 ((x!0 var2920)) Int\r\n    18)\r\n  (define-fun lengthOfMatch/-1450700737 ((x!0 var2920)) Int\r\n    1)\r\n  (define-fun input_stream/-1450700737 ((x!0 var2920)) var2691\r\n    var2691!val!0)\r\n  (define-fun append/109888945 ((x!0 String) (x!1 (Array Int Int))) String\r\n    \"\")\r\n  (define-fun GetSuffix/1403758179 ((x!0 var2691) (x!1 Int)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun backup/-1560050078 ((x!0 var2691) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 57 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1724416,
            "run_time": 0.0631399154663086,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2920 is 5\r\n; rep: (as @var2920_0 var2920)\r\n; rep: (as @var2920_1 var2920)\r\n; rep: (as @var2920_2 var2920)\r\n; rep: (as @var2920_3 var2920)\r\n; rep: (as @var2920_4 var2920)\r\n; cardinality of var2691 is 1\r\n; rep: (as @var2691_0 var2691)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun jjimageLen/-1450700737 ((_arg_1 var2920)) Int (ite (= (as @var2920_3 var2920) _arg_1) 0 (ite (= (as @var2920_4 var2920) _arg_1) 0 (- 1))))\r\n(define-fun jjmatchedPos/-1450700737 ((_arg_1 var2920)) Int 0)\r\n(define-fun lengthOfMatch/-1450700737 ((_arg_1 var2920)) Int 1)\r\n(define-fun jjmatchedKind/-1450700737 ((_arg_1 var2920)) Int 18)\r\n(define-fun image/-1450700737 ((_arg_1 var2920)) String \"\")\r\n(define-fun input_stream/-1450700737 ((BOUND_VARIABLE_732 var2920)) var2691 (as @var2691_0 var2691))\r\n(define-fun GetSuffix/1403758179 ((BOUND_VARIABLE_735 var2691) (BOUND_VARIABLE_736 Int)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun append/109888945 ((BOUND_VARIABLE_741 String) (BOUND_VARIABLE_742 (Array Int Int))) String \"\")\r\n(define-fun backup/-1560050078 ((BOUND_VARIABLE_745 var2691) (BOUND_VARIABLE_746 Int)) void (as @void_0 void))\r\n(define-fun null-var2920 () var2920 (as @var2920_0 var2920))\r\n(define-fun var3343 () var2920 (as @var2920_1 var2920))\r\n(define-fun var3343!1 () var2920 (as @var2920_2 var2920))\r\n(define-fun var3343!2 () var2920 (as @var2920_3 var2920))\r\n(define-fun var232!1 () String \"\")\r\n(define-fun var3343!3 () var2920 (as @var2920_4 var2920))\r\n(define-fun var1496!1 () var2691 (as @var2691_0 var2691))\r\n(define-fun var1474 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34816000,
            "run_time": 0.10958552360534668,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 56 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 57 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177270784,
            "run_time": 2.4165279865264893,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JJTreeParserTokenManager__MoreLexicalActions__-282340380\\2160.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var232!1 =\r\n     concat(all_14_0, rhs)\r\n   ... sat\r\n\r\n1926ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjtree.JJTreeParserTokenManager",
            "$i2 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: int jjimageLen>",
            "$i0 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: int jjmatchedPos>",
            "$i1 = $i0 + 1",
            "r0.<org.javacc.jjtree.JJTreeParserTokenManager: int lengthOfMatch> = $i1",
            "$i3 = $i2 + $i1",
            "r0.<org.javacc.jjtree.JJTreeParserTokenManager: int jjimageLen> = $i3",
            "$i4 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: int jjmatchedKind>",
            "lookupswitch($i4) {     case 18: goto $r2 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: java.lang.StringBuilder image>;     default: goto return; }",
            "$r2 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: java.lang.StringBuilder image>",
            "$r1 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: org.javacc.jjtree.JavaCharStream input_stream>",
            "$i5 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: int jjimageLen>",
            "$r3 = virtualinvoke $r1.<org.javacc.jjtree.JavaCharStream: char[] GetSuffix(int)>($i5)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>($r3)",
            "r0.<org.javacc.jjtree.JJTreeParserTokenManager: int jjimageLen> = 0",
            "$r4 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: org.javacc.jjtree.JavaCharStream input_stream>",
            "virtualinvoke $r4.<org.javacc.jjtree.JavaCharStream: void backup(int)>(1)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JJTreeParser__javacc_options__266095837\\358.smt2",
        "z3": {
            "memory": 31289344,
            "run_time": 0.0749366283416748,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2026:\r\n  ;;   var2026!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2026!val!0 () var2026)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2026)) (= x var2026!val!0))\r\n  ;; -----------\r\n  ;; universe for var3236:\r\n  ;;   var3236!val!0 var3236!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3236!val!0 () var3236)\r\n  (declare-fun var3236!val!1 () var3236)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3236)) (or (= x var3236!val!0) (= x var3236!val!1)))\r\n  ;; -----------\r\n  (define-fun var1408 () var2026\r\n    (getToken/56168929 var1694 1))\r\n  (define-fun null-var3236 () var3236\r\n    var3236!val!1)\r\n  (define-fun var1694 () var3236\r\n    var3236!val!0)\r\n  (define-fun var2656 () String\r\n    (image/-1103324373 (getToken/56168929 var1694 1)))\r\n  (define-fun var3316 () Bool\r\n    (= (image/-1103324373 (getToken/56168929 var1694 1)) \"options\"))\r\n  (define-fun var624_normalize/-2110565663 () void\r\n    void!val!0)\r\n  (define-fun image/-1103324373 ((x!0 var2026)) String\r\n    \"\")\r\n  (define-fun getToken/56168929 ((x!0 var3236) (x!1 Int)) var2026\r\n    var2026!val!0)\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.03102850914001465,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3236 is 2\r\n; rep: (as @var3236_0 var3236)\r\n; rep: (as @var3236_1 var3236)\r\n; cardinality of var2026 is 1\r\n; rep: (as @var2026_0 var2026)\r\n; cardinality of var624 is 1\r\n; rep: (as @var624_0 var624)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getToken/56168929 ((_arg_1 var3236) (_arg_2 Int)) var2026 (as @var2026_0 var2026))\r\n(define-fun image/-1103324373 ((_arg_1 var2026)) String \"\")\r\n(define-fun var624_normalize/-2110565663 () void (as @void_0 void))\r\n(define-fun null-var3236 () var3236 (as @var3236_0 var3236))\r\n(define-fun var1694 () var3236 (as @var3236_1 var3236))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35082240,
            "run_time": 0.1084897518157959,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 26 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169771008,
            "run_time": 2.3135597705841064,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1694 () var3236 var3236!18)\r\n  (define-fun null-var3236 () var3236 var3236!16)\r\n  (define-fun var2026!32 () var2026 (getToken/56168929 var3236!18 1))\r\n  (define-fun image/-1103324373 ((x!0 var2026)) String (ite (= x!0 var2026!32) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjtree.JJTreeParser",
            "$r1 = virtualinvoke r0.<org.javacc.jjtree.JJTreeParser: org.javacc.jjtree.Token getToken(int)>(1)",
            "$r2 = $r1.<org.javacc.jjtree.Token: java.lang.String image>",
            "$z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(\"options\")",
            "if $z0 == 0 goto staticinvoke <org.javacc.jjtree.JJTreeOptions: void normalize()>()",
            "staticinvoke <org.javacc.jjtree.JJTreeOptions: void normalize()>()",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.ASTGrammar__generate__2007955397\\73.smt2",
        "z3": {
            "memory": 32198656,
            "run_time": 0.08875250816345215,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3095:\r\n  ;;   var3095!val!0 var3095!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3095!val!0 () var3095)\r\n  (declare-fun var3095!val!1 () var3095)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3095)) (or (= x var3095!val!0) (= x var3095!val!1)))\r\n  ;; -----------\r\n  ;; universe for var879:\r\n  ;;   var879!val!0 var879!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var879!val!0 () var879)\r\n  (declare-fun var879!val!1 () var879)\r\n  ;; cardinality constraint:\r\n  (forall ((x var879)) (or (= x var879!val!0) (= x var879!val!1)))\r\n  ;; -----------\r\n  (define-fun var3940 () String\r\n    (str.++ var3793!1 \"opt:\"))\r\n  (define-fun null-var3095 () var3095\r\n    var3095!val!1)\r\n  (define-fun var174 () var3095\r\n    var3095!val!0)\r\n  (define-fun var1708 () String\r\n    (str.++ var3793!1 \"opt:\" var3303_getOutputLanguage/-1523304050))\r\n  (define-fun var1443 () String\r\n    var3303_getOutputLanguage/-1523304050)\r\n  (define-fun null-var879 () var879\r\n    var879!val!1)\r\n  (define-fun var1526 () var2607\r\n    var2416-out)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var509 () var439\r\n    var439-init)\r\n  (define-fun var834 () String\r\n    (str.++ var3793!1 \"opt:\" var3303_getOutputLanguage/-1523304050))\r\n  (define-fun var3793 () String\r\n    String-init)\r\n  (define-fun var2399 () Bool\r\n    var3303_isOutputLanguageJava/1735442213)\r\n  (define-fun var1044 () var879\r\n    var879!val!0)\r\n  (define-fun var3793!1 () String\r\n    \"\")\r\n  (define-fun var3303_isOutputLanguageJava/1735442213 () Bool\r\n    true)\r\n  (define-fun var3303_getOutputLanguage/-1523304050 () String\r\n    \"\")\r\n  (define-fun var3940!1 () String\r\n    \"opt:\")\r\n  (define-fun var3793!2 () String\r\n    \"opt:\")\r\n  (define-fun var509!1 () var439\r\n    var439!val!0)\r\n  (define-fun var1708!1 () String\r\n    \"\")\r\n  (define-fun var174!1 () var3095\r\n    var3095!val!0)\r\n  (define-fun var2416-out () var2607\r\n    var2607!val!0)\r\n  (define-fun var1044!1 () var879\r\n    var879!val!0)\r\n  (define-fun var1526!1 () var2607\r\n    var2607!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var439-init () var439\r\n    var439!val!0)\r\n  (define-fun var509!2 () var439\r\n    var439!val!0)\r\n  (define-fun cast-from-var3095-to-var2722 ((x!0 var3095)) var2722\r\n    var2722!val!0)\r\n  (define-fun println/1773605060 ((x!0 var2607) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun <init>/-1004199521 ((x!0 var439)) void\r\n    void!val!0)\r\n  (define-fun visit/-766352297 ((x!0 var439) (x!1 var879) (x!2 var2722)) var2722\r\n    var2722!val!0)\r\n)\r\n(error \"line 73 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9322496,
            "run_time": 0.10958552360534668,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var879 is 2\r\n; rep: (as @var879_0 var879)\r\n; rep: (as @var879_1 var879)\r\n; cardinality of var3095 is 2\r\n; rep: (as @var3095_0 var3095)\r\n; rep: (as @var3095_1 var3095)\r\n; cardinality of var2607 is 1\r\n; rep: (as @var2607_0 var2607)\r\n; cardinality of var2416 is 1\r\n; rep: (as @var2416_0 var2416)\r\n; cardinality of var3303 is 1\r\n; rep: (as @var3303_0 var3303)\r\n; cardinality of var439 is 1\r\n; rep: (as @var439_0 var439)\r\n; cardinality of var2722 is 1\r\n; rep: (as @var2722_0 var2722)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var3303_getOutputLanguage/-1523304050 () String \"\")\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_587 var2607) (BOUND_VARIABLE_588 String)) void (as @void_0 void))\r\n(define-fun var3303_isOutputLanguageJava/1735442213 () Bool true)\r\n(define-fun var439-init () var439 (as @var439_0 var439))\r\n(define-fun <init>/-1004199521 ((BOUND_VARIABLE_591 var439)) void (as @void_0 void))\r\n(define-fun visit/-766352297 ((BOUND_VARIABLE_594 var439) (BOUND_VARIABLE_595 var879) (BOUND_VARIABLE_596 var2722)) var2722 (as @var2722_0 var2722))\r\n(define-fun cast-from-var3095-to-var2722 ((BOUND_VARIABLE_599 var3095)) var2722 (as @var2722_0 var2722))\r\n(define-fun null-var879 () var879 (as @var879_0 var879))\r\n(define-fun null-var3095 () var3095 (as @var3095_0 var3095))\r\n(define-fun var2416-out () var2607 (as @var2607_0 var2607))\r\n(define-fun var1044 () var879 (as @var879_1 var879))\r\n(define-fun var174 () var3095 (as @var3095_1 var3095))\r\n(define-fun var3793!1 () String \"\")\r\n(define-fun var3793!2 () String \"opt:\")\r\n(define-fun var3940!1 () String \"opt:\")\r\n(define-fun var1526!1 () var2607 (as @var2607_0 var2607))\r\n(define-fun var1708!1 () String \"\")\r\n(define-fun var509!1 () var439 (as @var439_0 var439))\r\n(define-fun var509!2 () var439 (as @var439_0 var439))\r\n(define-fun var1044!1 () var879 (as @var879_0 var879))\r\n(define-fun var174!1 () var3095 (as @var3095_0 var3095))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35049472,
            "run_time": 0.07547330856323242,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3095:\n  ;;   var3095!val!0 var3095!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3095!val!0 () var3095)\n  (declare-fun var3095!val!1 () var3095)\n  ;; cardinality constraint:\n  (forall ((x var3095)) (or (= x var3095!val!0) (= x var3095!val!1)))\n  ;; -----------\n  ;; universe for var879:\n  ;;   var879!val!0 var879!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var879!val!0 () var879)\n  (declare-fun var879!val!1 () var879)\n  ;; cardinality constraint:\n  (forall ((x var879)) (or (= x var879!val!0) (= x var879!val!1)))\n  ;; -----------\n  (define-fun var1443 () String\n    var3303_getOutputLanguage/-1523304050)\n  (define-fun var1708 () String\n    (str.++ var3793!1 \"opt:\" var3303_getOutputLanguage/-1523304050))\n  (define-fun var2399 () Bool\n    var3303_isOutputLanguageJava/1735442213)\n  (define-fun null-var3095 () var3095\n    var3095!val!1)\n  (define-fun var174 () var3095\n    var3095!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var879 () var879\n    var879!val!1)\n  (define-fun var834 () String\n    (str.++ var3793!1 \"opt:\" var3303_getOutputLanguage/-1523304050))\n  (define-fun var3793 () String\n    String-init)\n  (define-fun var1526 () var2607\n    var2416-out)\n  (define-fun var3940 () String\n    (str.++ var3793!1 \"opt:\"))\n  (define-fun var509 () var439\n    var439-init)\n  (define-fun var1044 () var879\n    var879!val!0)\n  (define-fun var3793!1 () String\n    \"\")\n  (define-fun var3303_isOutputLanguageJava/1735442213 () Bool\n    true)\n  (define-fun var3303_getOutputLanguage/-1523304050 () String\n    \"\")\n  (define-fun var3940!1 () String\n    \"opt:\")\n  (define-fun var3793!2 () String\n    \"opt:\")\n  (define-fun var509!1 () var439\n    var439!val!0)\n  (define-fun var1708!1 () String\n    \"\")\n  (define-fun var174!1 () var3095\n    var3095!val!0)\n  (define-fun var2416-out () var2607\n    var2607!val!0)\n  (define-fun var1044!1 () var879\n    var879!val!0)\n  (define-fun var1526!1 () var2607\n    var2607!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var439-init () var439\n    var439!val!0)\n  (define-fun var509!2 () var439\n    var439!val!0)\n  (define-fun cast-from-var3095-to-var2722 ((x!0 var3095)) var2722\n    var2722!val!0)\n  (define-fun println/1773605060 ((x!0 var2607) (x!1 String)) void\n    void!val!0)\n  (define-fun <init>/-1004199521 ((x!0 var439)) void\n    void!val!0)\n  (define-fun visit/-766352297 ((x!0 var439) (x!1 var879) (x!2 var2722)) var2722\n    var2722!val!0)\n)\n(error \"line 73 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 160710656,
            "run_time": 2.4043216705322266,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3095/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.ASTGrammar__generate__2007955397\\73.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3940!1 =\r\n     concat(\"opt:\", var3303_getOutputLanguage/-1523304050)\r\n\r\n1924ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r14 := @this: org.javacc.jjtree.ASTGrammar",
            "r15 := @parameter0: org.javacc.jjtree.IO",
            "$r1 = <java.lang.System: java.io.PrintStream out>",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"opt:\")",
            "$r2 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getOutputLanguage()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean isOutputLanguageJava()>()",
            "if $z0 == 0 goto $r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getOutputLanguage()>()",
            "$r16 = new org.javacc.jjtree.JavaCodeGenerator",
            "specialinvoke $r16.<org.javacc.jjtree.JavaCodeGenerator: void <init>()>()",
            "virtualinvoke $r16.<org.javacc.jjtree.JavaCodeGenerator: java.lang.Object visit(org.javacc.jjtree.ASTGrammar,java.lang.Object)>(r14, r15)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JavaCodeGenerator__insertCloseNodeCode__-1396668384\\660.smt2",
        "z3": {
            "memory": 32337920,
            "run_time": 0.15005254745483398,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var930:\r\n  ;;   var930!val!1 var930!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var930!val!1 () var930)\r\n  (declare-fun var930!val!0 () var930)\r\n  ;; cardinality constraint:\r\n  (forall ((x var930)) (or (= x var930!val!1) (= x var930!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3374:\r\n  ;;   var3374!val!1 var3374!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3374!val!1 () var3374)\r\n  (declare-fun var3374!val!0 () var3374)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3374)) (or (= x var3374!val!1) (= x var3374!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1465:\r\n  ;;   var1465!val!0 var1465!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1465!val!0 () var1465)\r\n  (declare-fun var1465!val!1 () var1465)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1465)) (or (= x var1465!val!0) (= x var1465!val!1)))\r\n  ;; -----------\r\n  (define-fun var967 () String\r\n    (str.++ var52!1 var126))\r\n  (define-fun var1154 () var3374\r\n    var3374!val!0)\r\n  (define-fun null-var3374 () var3374\r\n    var3374!val!1)\r\n  (define-fun var1796 () String\r\n    (str.++ var52!1\r\n        var126\r\n        (closeNode/1062269652\r\n          (node_descriptor/-576648796 var3028)\r\n          (nodeVar/-576648796 var3028))))\r\n  (define-fun var52 () String\r\n    String-init)\r\n  (define-fun var3587 () Bool\r\n    (usesCloseNodeVar/-1769174946 var3028))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3508 () String\r\n    (closeNode/1062269652\r\n  (node_descriptor/-576648796 var3028)\r\n  (nodeVar/-576648796 var3028)))\r\n  (define-fun var3028 () var1465\r\n    var1465!val!0)\r\n  (define-fun var3499 () var930\r\n    var930!val!0)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3341 () String\r\n    (nodeVar/-576648796 var3028))\r\n  (define-fun null-var1465 () var1465\r\n    var1465!val!1)\r\n  (define-fun var1334 () var3789\r\n    (node_descriptor/-576648796 var3028))\r\n  (define-fun var2425 () Bool\r\n    var2597_getNodeScopeHook/893147786)\r\n  (define-fun var2019 () String\r\n    (str.++ var52!1\r\n        var126\r\n        (closeNode/1062269652\r\n          (node_descriptor/-576648796 var3028)\r\n          (nodeVar/-576648796 var3028))))\r\n  (define-fun var416 () Bool\r\n    var2597_getTrackTokens/1877101562)\r\n  (define-fun var126 () String\r\n    \"A\")\r\n  (define-fun var522 () Bool\r\n    true)\r\n  (define-fun null-var930 () var930\r\n    var930!val!1)\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var967!1 () String\r\n    \"A\")\r\n  (define-fun var2597_getNodeScopeHook/893147786 () Bool\r\n    false)\r\n  (define-fun var2597_getTrackTokens/1877101562 () Bool\r\n    false)\r\n  (define-fun var52!2 () String\r\n    \"A\")\r\n  (define-fun var52!1 () String\r\n    \"\")\r\n  (define-fun var1796!1 () String\r\n    \"\")\r\n  (define-fun var3499!1 () var930\r\n    var930!val!1)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun usesCloseNodeVar/-1769174946 ((x!0 var1465)) Bool\r\n    false)\r\n  (define-fun node_descriptor/-576648796 ((x!0 var1465)) var3789\r\n    var3789!val!0)\r\n  (define-fun nodeVar/-576648796 ((x!0 var1465)) String\r\n    \"\")\r\n  (define-fun closeNode/1062269652 ((x!0 var3789) (x!1 String)) String\r\n    \"\")\r\n  (define-fun println/1333914633 ((x!0 var930) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 76 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015159130096435547,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3374 is 2\r\n; rep: (as @var3374_0 var3374)\r\n; rep: (as @var3374_1 var3374)\r\n; cardinality of var1465 is 2\r\n; rep: (as @var1465_0 var1465)\r\n; rep: (as @var1465_1 var1465)\r\n; cardinality of var930 is 2\r\n; rep: (as @var930_0 var930)\r\n; rep: (as @var930_1 var930)\r\n; cardinality of var1325 is 1\r\n; rep: (as @var1325_0 var1325)\r\n; cardinality of var3789 is 1\r\n; rep: (as @var3789_0 var3789)\r\n; cardinality of var2597 is 1\r\n; rep: (as @var2597_0 var2597)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun node_descriptor/-576648796 ((BOUND_VARIABLE_744 var1465)) var3789 (as @var3789_0 var3789))\r\n(define-fun nodeVar/-576648796 ((BOUND_VARIABLE_747 var1465)) String \"\")\r\n(define-fun closeNode/1062269652 ((BOUND_VARIABLE_750 var3789) (BOUND_VARIABLE_751 String)) String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_754 var930) (BOUND_VARIABLE_755 String)) void (as @void_0 void))\r\n(define-fun usesCloseNodeVar/-1769174946 ((_arg_1 var1465)) Bool false)\r\n(define-fun var2597_getNodeScopeHook/893147786 () Bool false)\r\n(define-fun var2597_getTrackTokens/1877101562 () Bool false)\r\n(define-fun null-var3374 () var3374 (as @var3374_0 var3374))\r\n(define-fun null-var1465 () var1465 (as @var1465_0 var1465))\r\n(define-fun null-var930 () var930 (as @var930_0 var930))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var1154 () var3374 (as @var3374_1 var3374))\r\n(define-fun var3028 () var1465 (as @var1465_1 var1465))\r\n(define-fun var3499 () var930 (as @var930_1 var930))\r\n(define-fun var126 () String \"\")\r\n(define-fun var522 () Bool false)\r\n(define-fun var52!1 () String \"\")\r\n(define-fun var52!2 () String \"\")\r\n(define-fun var967!1 () String \"\")\r\n(define-fun var3499!1 () var930 (as @var930_0 var930))\r\n(define-fun var1796!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37064704,
            "run_time": 0.12204241752624512,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var930:\n  ;;   var930!val!1 var930!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var930!val!1 () var930)\n  (declare-fun var930!val!0 () var930)\n  ;; cardinality constraint:\n  (forall ((x var930)) (or (= x var930!val!1) (= x var930!val!0)))\n  ;; -----------\n  ;; universe for var3374:\n  ;;   var3374!val!1 var3374!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3374!val!1 () var3374)\n  (declare-fun var3374!val!0 () var3374)\n  ;; cardinality constraint:\n  (forall ((x var3374)) (or (= x var3374!val!1) (= x var3374!val!0)))\n  ;; -----------\n  ;; universe for var1465:\n  ;;   var1465!val!0 var1465!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1465!val!0 () var1465)\n  (declare-fun var1465!val!1 () var1465)\n  ;; cardinality constraint:\n  (forall ((x var1465)) (or (= x var1465!val!0) (= x var1465!val!1)))\n  ;; -----------\n  (define-fun var52!1 () String\n    \"\")\n  (define-fun var1154 () var3374\n    var3374!val!0)\n  (define-fun var52!2 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2597_getTrackTokens/1877101562 () Bool\n    false)\n  (define-fun var2597_getNodeScopeHook/893147786 () Bool\n    false)\n  (define-fun var967!1 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3508 () String\n    (closeNode/1062269652\n  (node_descriptor/-576648796 var3028)\n  (nodeVar/-576648796 var3028)))\n  (define-fun var2019 () String\n    (str.++ var52!1\n        var126\n        (closeNode/1062269652\n          (node_descriptor/-576648796 var3028)\n          (nodeVar/-576648796 var3028))))\n  (define-fun var416 () Bool\n    var2597_getTrackTokens/1877101562)\n  (define-fun var3341 () String\n    (nodeVar/-576648796 var3028))\n  (define-fun var1796 () String\n    (str.++ var52!1\n        var126\n        (closeNode/1062269652\n          (node_descriptor/-576648796 var3028)\n          (nodeVar/-576648796 var3028))))\n  (define-fun var3587 () Bool\n    (usesCloseNodeVar/-1769174946 var3028))\n  (define-fun null-var930 () var930\n    var930!val!1)\n  (define-fun var967 () String\n    (str.++ var52!1 var126))\n  (define-fun var126 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var522 () Bool\n    true)\n  (define-fun var3028 () var1465\n    var1465!val!0)\n  (define-fun var1334 () var3789\n    (node_descriptor/-576648796 var3028))\n  (define-fun null-var3374 () var3374\n    var3374!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-var1465 () var1465\n    var1465!val!1)\n  (define-fun var52 () String\n    String-init)\n  (define-fun var3499 () var930\n    var930!val!0)\n  (define-fun var2425 () Bool\n    var2597_getNodeScopeHook/893147786)\n  (define-fun var1796!1 () String\n    \"\")\n  (define-fun var3499!1 () var930\n    var930!val!1)\n  (define-fun String-init () String\n    \"\")\n  (define-fun usesCloseNodeVar/-1769174946 ((x!0 var1465)) Bool\n    false)\n  (define-fun node_descriptor/-576648796 ((x!0 var1465)) var3789\n    var3789!val!0)\n  (define-fun nodeVar/-576648796 ((x!0 var1465)) String\n    \"\")\n  (define-fun closeNode/1062269652 ((x!0 var3789) (x!1 String)) String\n    \"\")\n  (define-fun println/1333914633 ((x!0 var930) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 76 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179003392,
            "run_time": 2.4033141136169434,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var930/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JavaCodeGenerator__insertCloseNodeCode__-1396668384\\660.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var967!1 =\r\n     concat(var126, all_27_3)\r\n\r\n1934ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r37 := @this: org.javacc.jjtree.JavaCodeGenerator",
            "r0 := @parameter0: org.javacc.jjtree.NodeScope",
            "r4 := @parameter1: org.javacc.jjtree.IO",
            "r6 := @parameter2: java.lang.String",
            "z2 := @parameter3: boolean",
            "$r2 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r1 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "r3 = virtualinvoke $r2.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String closeNode(java.lang.String)>($r1)",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r9)",
            "$z0 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()",
            "if $z0 == 0 goto $z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeScopeHook()>()",
            "$z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeScopeHook()>()",
            "if $z3 == 0 goto $z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "$z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "if $z1 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjdoc.HTMLGenerator__productionStart__-706169701\\334.smt2",
        "z3": {
            "memory": 31703040,
            "run_time": 0.23201584815979004,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3530:\r\n  ;;   var3530!val!1 var3530!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3530!val!1 () var3530)\r\n  (declare-fun var3530!val!0 () var3530)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3530)) (or (= x var3530!val!1) (= x var3530!val!0)))\r\n  ;; -----------\r\n  ;; universe for var400:\r\n  ;;   var400!val!1 var400!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var400!val!1 () var400)\r\n  (declare-fun var400!val!0 () var400)\r\n  ;; cardinality constraint:\r\n  (forall ((x var400)) (or (= x var400!val!1) (= x var400!val!0)))\r\n  ;; -----------\r\n  (define-fun var1486 () var3530\r\n    var3530!val!0)\r\n  (define-fun var572 () String\r\n    (str.++ var3603!1\r\n        \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\r\n        (get_id/-836140651 var1473!1 (getLhs/-759107248 var1486))))\r\n  (define-fun var1424 () String\r\n    (getLhs/-759107248 var1486))\r\n  (define-fun null-var400 () var400\r\n    var400!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var3530 () var3530\r\n    var3530!val!1)\r\n  (define-fun var1473 () var400\r\n    var400!val!0)\r\n  (define-fun var2224 () String\r\n    (get_id/-836140651 var1473!1 (getLhs/-759107248 var1486)))\r\n  (define-fun var3347 () String\r\n    (str.++ var3603!1\r\n        \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\r\n        (get_id/-836140651 var1473!1 (getLhs/-759107248 var1486))\r\n        \"\"\">\"\r\n        (getLhs/-759107248 var1486)))\r\n  (define-fun var1421 () String\r\n    (str.++ var3603!1\r\n        \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\r\n        (get_id/-836140651 var1473!1 (getLhs/-759107248 var1486))\r\n        \"\"\">\"))\r\n  (define-fun var2537 () String\r\n    (str.++ var3603!1\r\n        \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\r\n        (get_id/-836140651 var1473!1 (getLhs/-759107248 var1486))\r\n        \"\"\">\"\r\n        (getLhs/-759107248 var1486)\r\n        \"</A></TD>\"))\r\n  (define-fun var3603 () String\r\n    String-init)\r\n  (define-fun var1416 () String\r\n    (getLhs/-759107248 var1486))\r\n  (define-fun var649 () String\r\n    (str.++ var3603!1 \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"))\r\n  (define-fun var3456 () Bool\r\n    var1701_getOneTable/272529343)\r\n  (define-fun var1230 () String\r\n    (str.++ var3603!1\r\n        \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\r\n        (get_id/-836140651 var1473!1 (getLhs/-759107248 var1486))\r\n        \"\"\">\"\r\n        (getLhs/-759107248 var1486)\r\n        \"</A></TD>\"))\r\n  (define-fun var1473!1 () var400\r\n    var400!val!1)\r\n  (define-fun var3347!1 () String\r\n    \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\"></A></TD>\")\r\n  (define-fun var1701_getOneTable/272529343 () Bool\r\n    true)\r\n  (define-fun var649!1 () String\r\n    \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\")\r\n  (define-fun var3603!2 () String\r\n    \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\")\r\n  (define-fun var1421!1 () String\r\n    \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\">\")\r\n  (define-fun var3603!1 () String\r\n    \"\")\r\n  (define-fun var572!1 () String\r\n    \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\">\")\r\n  (define-fun var3315 () String\r\n    \"\")\r\n  (define-fun var1473!4 () var400\r\n    var400!val!1)\r\n  (define-fun var2537!1 () String\r\n    \"\")\r\n  (define-fun var3846 () String\r\n    \"\")\r\n  (define-fun var3106 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1473!2 () var400\r\n    var400!val!1)\r\n  (define-fun var1473!3 () var400\r\n    var400!val!1)\r\n  (define-fun getLhs/-759107248 ((x!0 var3530)) String\r\n    \"\")\r\n  (define-fun get_id/-836140651 ((x!0 var400) (x!1 String)) String\r\n    \"\")\r\n  (define-fun println/-1852303283 ((x!0 var400) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun print/-855496625 ((x!0 var400) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 84 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10670080,
            "run_time": 0.06255602836608887,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var400 is 2\r\n; rep: (as @var400_0 var400)\r\n; rep: (as @var400_1 var400)\r\n; cardinality of var3530 is 2\r\n; rep: (as @var3530_0 var3530)\r\n; rep: (as @var3530_1 var3530)\r\n; cardinality of var1701 is 1\r\n; rep: (as @var1701_0 var1701)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1701_getOneTable/272529343 () Bool true)\r\n(define-fun println/-1852303283 ((BOUND_VARIABLE_659 var400) (BOUND_VARIABLE_660 String)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun getLhs/-759107248 ((BOUND_VARIABLE_663 var3530)) String \"\")\r\n(define-fun get_id/-836140651 ((BOUND_VARIABLE_666 var400) (BOUND_VARIABLE_667 String)) String \"\")\r\n(define-fun print/-855496625 ((BOUND_VARIABLE_670 var400) (BOUND_VARIABLE_671 String)) void (as @void_0 void))\r\n(define-fun null-var400 () var400 (as @var400_0 var400))\r\n(define-fun null-var3530 () var3530 (as @var3530_0 var3530))\r\n(define-fun var1473 () var400 (as @var400_1 var400))\r\n(define-fun var1486 () var3530 (as @var3530_1 var3530))\r\n(define-fun var1473!1 () var400 (as @var400_0 var400))\r\n(define-fun var3315 () String \"\")\r\n(define-fun var3603!1 () String \"\")\r\n(define-fun var3603!2 () String \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\")\r\n(define-fun var649!1 () String \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\")\r\n(define-fun var572!1 () String \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\">\")\r\n(define-fun var1421!1 () String \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\">\")\r\n(define-fun var3347!1 () String \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\"></A></TD>\")\r\n(define-fun var1473!2 () var400 (as @var400_0 var400))\r\n(define-fun var2537!1 () String \"\")\r\n(define-fun var1473!3 () var400 (as @var400_0 var400))\r\n(define-fun var3106 () String \"\")\r\n(define-fun var1473!4 () var400 (as @var400_0 var400))\r\n(define-fun var3846 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34013184,
            "run_time": 0.13979077339172363,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3530:\n  ;;   var3530!val!1 var3530!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3530!val!1 () var3530)\n  (declare-fun var3530!val!0 () var3530)\n  ;; cardinality constraint:\n  (forall ((x var3530)) (or (= x var3530!val!1) (= x var3530!val!0)))\n  ;; -----------\n  ;; universe for var400:\n  ;;   var400!val!1 var400!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var400!val!1 () var400)\n  (declare-fun var400!val!0 () var400)\n  ;; cardinality constraint:\n  (forall ((x var400)) (or (= x var400!val!1) (= x var400!val!0)))\n  ;; -----------\n  (define-fun var1486 () var3530\n    var3530!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2224 () String\n    (get_id/-836140651 var1473!1 (getLhs/-759107248 var1486)))\n  (define-fun null-var400 () var400\n    var400!val!1)\n  (define-fun null-var3530 () var3530\n    var3530!val!1)\n  (define-fun var1473 () var400\n    var400!val!0)\n  (define-fun var3347 () String\n    (str.++ var3603!1\n        \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\n        (get_id/-836140651 var1473!1 (getLhs/-759107248 var1486))\n        \"\"\">\"\n        (getLhs/-759107248 var1486)))\n  (define-fun var1421 () String\n    (str.++ var3603!1\n        \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\n        (get_id/-836140651 var1473!1 (getLhs/-759107248 var1486))\n        \"\"\">\"))\n  (define-fun var3456 () Bool\n    var1701_getOneTable/272529343)\n  (define-fun var2537 () String\n    (str.++ var3603!1\n        \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\n        (get_id/-836140651 var1473!1 (getLhs/-759107248 var1486))\n        \"\"\">\"\n        (getLhs/-759107248 var1486)\n        \"</A></TD>\"))\n  (define-fun var3603 () String\n    String-init)\n  (define-fun var1416 () String\n    (getLhs/-759107248 var1486))\n  (define-fun var649 () String\n    (str.++ var3603!1 \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"))\n  (define-fun var1230 () String\n    (str.++ var3603!1\n        \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\n        (get_id/-836140651 var1473!1 (getLhs/-759107248 var1486))\n        \"\"\">\"\n        (getLhs/-759107248 var1486)\n        \"</A></TD>\"))\n  (define-fun var572 () String\n    (str.++ var3603!1\n        \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\n        (get_id/-836140651 var1473!1 (getLhs/-759107248 var1486))))\n  (define-fun var1424 () String\n    (getLhs/-759107248 var1486))\n  (define-fun var1473!1 () var400\n    var400!val!1)\n  (define-fun var3347!1 () String\n    \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\"></A></TD>\")\n  (define-fun var1701_getOneTable/272529343 () Bool\n    true)\n  (define-fun var649!1 () String\n    \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\")\n  (define-fun var3603!2 () String\n    \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\")\n  (define-fun var1421!1 () String\n    \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\">\")\n  (define-fun var3603!1 () String\n    \"\")\n  (define-fun var572!1 () String\n    \"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\"\"\"\">\")\n  (define-fun var3315 () String\n    \"\")\n  (define-fun var1473!4 () var400\n    var400!val!1)\n  (define-fun var2537!1 () String\n    \"\")\n  (define-fun var3846 () String\n    \"\")\n  (define-fun var3106 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1473!2 () var400\n    var400!val!1)\n  (define-fun var1473!3 () var400\n    var400!val!1)\n  (define-fun getLhs/-759107248 ((x!0 var3530)) String\n    \"\")\n  (define-fun get_id/-836140651 ((x!0 var400) (x!1 String)) String\n    \"\")\n  (define-fun println/-1852303283 ((x!0 var400) (x!1 String)) void\n    void!val!0)\n  (define-fun print/-855496625 ((x!0 var400) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 84 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173223936,
            "run_time": 2.5870933532714844,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3530/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjdoc.HTMLGenerator__productionStart__-706169701\\334.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3347!1 =\r\n     concat(all_32_5, \"</A></TD>\")\r\n   var1421!1 =\r\n     concat(all_29_4, all_23_3)\r\n   var572!1 =\r\n     concat(all_26_3, \"\\u{0}22>\")\r\n   var649!1 =\r\n     concat(\"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\\u{0}22\", all_23_2)\r\n   all_32_5 =\r\n     concat(all_32_6, all_23_3)\r\n   all_29_4 =\r\n     concat(all_29_5, \"\\u{0}22>\")\r\n   all_26_3 =\r\n     concat(\"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\\u{0}22\", all_23_2)\r\n   all_32_6 =\r\n     concat(all_32_7, \"\\u{0}22>\")\r\n   all_29_5 =\r\n     concat(\"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\\u{0}22\", all_23_2)\r\n   all_32_7 =\r\n     concat(\"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\\u{0}22\", all_23_2)\r\n\r\n2140ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 23,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 5,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjdoc.HTMLGenerator",
            "r2 := @parameter0: org.javacc.parser.NormalProduction",
            "$z0 = staticinvoke <org.javacc.jjdoc.JJDocOptions: boolean getOneTable()>()",
            "if $z0 != 0 goto specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"<TR>\")",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"<TR>\")",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<TD ALIGN=RIGHT VALIGN=BASELINE><A NAME=\\\"\")",
            "$r3 = virtualinvoke r2.<org.javacc.parser.NormalProduction: java.lang.String getLhs()>()",
            "$r4 = virtualinvoke r0.<org.javacc.jjdoc.HTMLGenerator: java.lang.String get_id(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\">\")",
            "$r7 = virtualinvoke r2.<org.javacc.parser.NormalProduction: java.lang.String getLhs()>()",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</A></TD>\")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>($r11)",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"<TD ALIGN=CENTER VALIGN=BASELINE>::=</TD>\")",
            "virtualinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void print(java.lang.String)>(\"<TD ALIGN=LEFT VALIGN=BASELINE>\")",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPNodeFiles__visitorClass__-25171238\\774.smt2",
        "z3": {
            "memory": 31318016,
            "run_time": 0.10604381561279297,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var740-parserName () String\r\n    \"\")\r\n  (define-fun var3870!1 () String\r\n    \"Visitor\")\r\n  (define-fun var350!1 () String\r\n    \"\")\r\n  (define-fun var350!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3870 () String\r\n    (str.++ var350!1 var740-parserName))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2816 () String\r\n    var740-parserName)\r\n  (define-fun var694 () String\r\n    (str.++ var350!1 var740-parserName \"Visitor\"))\r\n  (define-fun var350 () String\r\n    String-init)\r\n  (define-fun var1193 () String\r\n    (str.++ var350!1 var740-parserName \"Visitor\"))\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.016165971755981445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var740 is 1\r\n; rep: (as @var740_0 var740)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var740-parserName () String \"\")\r\n(define-fun var350!1 () String \"\")\r\n(define-fun var350!2 () String \"\")\r\n(define-fun var3870!1 () String \"Visitor\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34918400,
            "run_time": 0.07597827911376953,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var740-parserName () String\n    \"\")\n  (define-fun var3870!1 () String\n    \"Visitor\")\n  (define-fun var350!1 () String\n    \"\")\n  (define-fun var350!2 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2816 () String\n    var740-parserName)\n  (define-fun var694 () String\n    (str.++ var350!1 var740-parserName \"Visitor\"))\n  (define-fun var350 () String\n    String-init)\n  (define-fun var1193 () String\n    (str.++ var350!1 var740-parserName \"Visitor\"))\n  (define-fun var3870 () String\n    (str.++ var350!1 var740-parserName))\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182923264,
            "run_time": 2.5888512134552,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3870!1 () String \"Visitor\")\r\n  (define-fun var350!2 () String \"\")\r\n  (define-fun var350!1 () String \"\")\r\n  (define-fun var740-parserName () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r1 = <org.javacc.jjtree.JJTreeGlobals: java.lang.String parserName>",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Visitor\")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPNodeFiles__jjtreeImplFile__-446131921\\366.smt2",
        "z3": {
            "memory": 32305152,
            "run_time": 0.12210559844970703,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1955 () var257\r\n    var257-init)\r\n  (define-fun var3941 () var257\r\n    var3797_getJJTreeOutputDirectory/-709711143)\r\n  (define-fun var3039 () String\r\n    (str.++ var775!1 var2548 \".cc\"))\r\n  (define-fun var2548 () String\r\n    \"A\")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var775 () String\r\n    String-init)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1365 () String\r\n    (str.++ var775!1 var2548 \".cc\"))\r\n  (define-fun var3202 () String\r\n    (str.++ var775!1 var2548))\r\n  (define-fun var3217 () String\r\n    (getAbsolutePath/-802773300 var1955!1))\r\n  (define-fun var775!2 () String\r\n    \"A\")\r\n  (define-fun var3202!1 () String\r\n    \"A.cc\")\r\n  (define-fun var775!1 () String\r\n    \"\")\r\n  (define-fun var1955!1 () var257\r\n    var257!val!0)\r\n  (define-fun var3941!1 () var257\r\n    var257!val!0)\r\n  (define-fun var1365!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3797_getJJTreeOutputDirectory/-709711143 () var257\r\n    var257!val!0)\r\n  (define-fun var257-init () var257\r\n    var257!val!0)\r\n  (define-fun getAbsolutePath/-802773300 ((x!0 var257)) String\r\n    \"\")\r\n  (define-fun <init>/-1833447926 ((x!0 var257) (x!1 var257) (x!2 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 49 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.016165971755981445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2354 is 1\r\n; rep: (as @var2354_0 var2354)\r\n; cardinality of var257 is 1\r\n; rep: (as @var257_0 var257)\r\n; cardinality of var3797 is 1\r\n; rep: (as @var3797_0 var3797)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var257-init () var257 (as @var257_0 var257))\r\n(define-fun var3797_getJJTreeOutputDirectory/-709711143 () var257 (as @var257_0 var257))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1833447926 ((BOUND_VARIABLE_600 var257) (BOUND_VARIABLE_601 var257) (BOUND_VARIABLE_602 String)) void (as @void_0 void))\r\n(define-fun getAbsolutePath/-802773300 ((BOUND_VARIABLE_605 var257)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2548 () String \"\")\r\n(define-fun var775!1 () String \"\")\r\n(define-fun var775!2 () String \"\")\r\n(define-fun var3202!1 () String \".cc\")\r\n(define-fun var1955!1 () var257 (as @var257_0 var257))\r\n(define-fun var3941!1 () var257 (as @var257_0 var257))\r\n(define-fun var1365!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37183488,
            "run_time": 0.12254738807678223,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var775!1 () String\n    \"\")\n  (define-fun var3202!1 () String\n    \"\\u{0}\\u{0}.cc\")\n  (define-fun var775!2 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3202 () String\n    (str.++ var775!1 var2548))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3941 () var257\n    var3797_getJJTreeOutputDirectory/-709711143)\n  (define-fun var1365 () String\n    (str.++ var775!1 var2548 \".cc\"))\n  (define-fun var775 () String\n    String-init)\n  (define-fun var2548 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1955 () var257\n    var257-init)\n  (define-fun var3217 () String\n    (getAbsolutePath/-802773300 var1955!1))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3039 () String\n    (str.++ var775!1 var2548 \".cc\"))\n  (define-fun var1955!1 () var257\n    var257!val!0)\n  (define-fun var3941!1 () var257\n    var257!val!0)\n  (define-fun var1365!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3797_getJJTreeOutputDirectory/-709711143 () var257\n    var257!val!0)\n  (define-fun var257-init () var257\n    var257!val!0)\n  (define-fun getAbsolutePath/-802773300 ((x!0 var257)) String\n    \"\")\n  (define-fun <init>/-1833447926 ((x!0 var257) (x!1 var257) (x!2 String)) void\n    void!val!0)\n)\n(error \"line 49 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 213106688,
            "run_time": 2.7138140201568604,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3202!1 () String \".cc\")\r\n  (define-fun var775!2 () String \"\")\r\n  (define-fun var775!1 () String \"\")\r\n  (define-fun var2548 () String \"\")\r\n  (define-fun null-String () String \"c\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.String",
            "$r0 = new java.io.File",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.io.File getJJTreeOutputDirectory()>()",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".cc\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r5)",
            "$r7 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.ASTNodeDescriptor__isVoid__-493154536\\207.smt2",
        "z3": {
            "memory": 31068160,
            "run_time": 0.1854715347290039,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3659:\r\n  ;;   var3659!val!1 var3659!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3659!val!1 () var3659)\r\n  (declare-fun var3659!val!0 () var3659)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3659)) (or (= x var3659!val!1) (= x var3659!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var3659 () var3659\r\n    var3659!val!1)\r\n  (define-fun var579 () Bool\r\n    (= (name/-1689018267 var3907) \"void\"))\r\n  (define-fun var2388 () String\r\n    (name/-1689018267 var3907))\r\n  (define-fun var3907 () var3659\r\n    var3659!val!0)\r\n  (define-fun name/-1689018267 ((x!0 var3659)) String\r\n    \"\")\r\n)\r\n(error \"line 18 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2187264,
            "run_time": 0.10482358932495117,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3659 is 2\r\n; rep: (as @var3659_0 var3659)\r\n; rep: (as @var3659_1 var3659)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun name/-1689018267 ((BOUND_VARIABLE_416 var3659)) String \"\")\r\n(define-fun null-var3659 () var3659 (as @var3659_0 var3659))\r\n(define-fun var3907 () var3659 (as @var3659_1 var3659))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35905536,
            "run_time": 0.44326233863830566,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3659:\n  ;;   var3659!val!1 var3659!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3659!val!1 () var3659)\n  (declare-fun var3659!val!0 () var3659)\n  ;; cardinality constraint:\n  (forall ((x var3659)) (or (= x var3659!val!1) (= x var3659!val!0)))\n  ;; -----------\n  (define-fun var2388 () String\n    (name/-1689018267 var3907))\n  (define-fun null-var3659 () var3659\n    var3659!val!1)\n  (define-fun var3907 () var3659\n    var3659!val!0)\n  (define-fun var579 () Bool\n    (= (name/-1689018267 var3907) \"void\"))\n  (define-fun name/-1689018267 ((x!0 var3659)) String\n    \"\")\n)\n(error \"line 18 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132632576,
            "run_time": 1.5440974235534668,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3907 () var3659 var3659!4)\r\n  (define-fun null-var3659 () var3659 var3659!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjtree.ASTNodeDescriptor",
            "$r1 = r0.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String name>",
            "$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(\"void\")",
            "return $z0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjdoc.XTextGenerator__handleTokenProduction__1829478080\\18.smt2",
        "z3": {
            "memory": 31510528,
            "run_time": 0.20077276229858398,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for Iterator:\r\n  ;;   Iterator!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun Iterator!val!0 () Iterator)\r\n  ;; cardinality constraint:\r\n  (forall ((x Iterator)) (= x Iterator!val!0))\r\n  ;; -----------\r\n  ;; universe for var609:\r\n  ;;   var609!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var609!val!0 () var609)\r\n  ;; cardinality constraint:\r\n  (forall ((x var609)) (= x var609!val!0))\r\n  ;; -----------\r\n  ;; universe for var828:\r\n  ;;   var828!val!1 var828!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var828!val!1 () var828)\r\n  (declare-fun var828!val!0 () var828)\r\n  ;; cardinality constraint:\r\n  (forall ((x var828)) (or (= x var828!val!1) (= x var828!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2146:\r\n  ;;   var2146!val!1 var2146!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2146!val!1 () var2146)\r\n  (declare-fun var2146!val!0 () var2146)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2146)) (or (= x var2146!val!1) (= x var2146!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var2146 () var2146\r\n    var2146!val!1)\r\n  (define-fun null-var828 () var828\r\n    var828!val!1)\r\n  (define-fun var631 () Bool\r\n    (Iterator_hasNext/-1669924200\r\n  (var609_iterator/-912451715 (respecs/1241016197 var1079))))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1079 () var828\r\n    var828!val!0)\r\n  (define-fun var3429 () var609\r\n    (respecs/1241016197 var1079))\r\n  (define-fun var3846 () String\r\n    String-init)\r\n  (define-fun var2869 () Iterator\r\n    (var609_iterator/-912451715 (respecs/1241016197 var1079)))\r\n  (define-fun var3080 () var2146\r\n    var2146!val!0)\r\n  (define-fun var3846!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var609_iterator/-912451715 ((x!0 var609)) Iterator\r\n    Iterator!val!0)\r\n  (define-fun respecs/1241016197 ((x!0 var828)) var609\r\n    var609!val!0)\r\n  (define-fun Iterator_hasNext/-1669924200 ((x!0 Iterator)) Bool\r\n    false)\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6971392,
            "run_time": 0.045171499252319336,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2146 is 2\r\n; rep: (as @var2146_0 var2146)\r\n; rep: (as @var2146_1 var2146)\r\n; cardinality of var828 is 2\r\n; rep: (as @var828_0 var828)\r\n; rep: (as @var828_1 var828)\r\n; cardinality of var609 is 1\r\n; rep: (as @var609_0 var609)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun respecs/1241016197 ((_arg_1 var828)) var609 (as @var609_0 var609))\r\n(define-fun var609_iterator/-912451715 ((_arg_1 var609)) Iterator (as @Iterator_0 Iterator))\r\n(define-fun Iterator_hasNext/-1669924200 ((_arg_1 Iterator)) Bool false)\r\n(define-fun null-var2146 () var2146 (as @var2146_0 var2146))\r\n(define-fun null-var828 () var828 (as @var828_0 var828))\r\n(define-fun var3080 () var2146 (as @var2146_1 var2146))\r\n(define-fun var1079 () var828 (as @var828_1 var828))\r\n(define-fun var3846!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35995648,
            "run_time": 0.12416458129882812,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for Iterator:\n  ;;   Iterator!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun Iterator!val!0 () Iterator)\n  ;; cardinality constraint:\n  (forall ((x Iterator)) (= x Iterator!val!0))\n  ;; -----------\n  ;; universe for var609:\n  ;;   var609!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var609!val!0 () var609)\n  ;; cardinality constraint:\n  (forall ((x var609)) (= x var609!val!0))\n  ;; -----------\n  ;; universe for var828:\n  ;;   var828!val!1 var828!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var828!val!1 () var828)\n  (declare-fun var828!val!0 () var828)\n  ;; cardinality constraint:\n  (forall ((x var828)) (or (= x var828!val!1) (= x var828!val!0)))\n  ;; -----------\n  ;; universe for var2146:\n  ;;   var2146!val!1 var2146!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2146!val!1 () var2146)\n  (declare-fun var2146!val!0 () var2146)\n  ;; cardinality constraint:\n  (forall ((x var2146)) (or (= x var2146!val!1) (= x var2146!val!0)))\n  ;; -----------\n  (define-fun null-var2146 () var2146\n    var2146!val!1)\n  (define-fun null-var828 () var828\n    var828!val!1)\n  (define-fun var2869 () Iterator\n    (var609_iterator/-912451715 (respecs/1241016197 var1079)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3846 () String\n    String-init)\n  (define-fun var1079 () var828\n    var828!val!0)\n  (define-fun var631 () Bool\n    (Iterator_hasNext/-1669924200\n  (var609_iterator/-912451715 (respecs/1241016197 var1079))))\n  (define-fun var3080 () var2146\n    var2146!val!0)\n  (define-fun var3429 () var609\n    (respecs/1241016197 var1079))\n  (define-fun var3846!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var609_iterator/-912451715 ((x!0 var609)) Iterator\n    Iterator!val!0)\n  (define-fun respecs/1241016197 ((x!0 var828)) var609\n    var609!val!0)\n  (define-fun Iterator_hasNext/-1669924200 ((x!0 Iterator)) Bool\n    false)\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166678528,
            "run_time": 1.759913682937622,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3846!1 () String \"\")\r\n  (define-fun var1079 () var828 var828!8)\r\n  (define-fun var3080 () var2146 var2146!6)\r\n  (define-fun null-var828 () var828 var828!4)\r\n  (define-fun null-var2146 () var2146 var2146!2)\r\n  (define-fun Iterator!24 () Iterator (var609_iterator/-912451715 var609!22))\r\n  (define-fun var609!22 () var609 (respecs/1241016197 var828!8))\r\n  (define-fun Iterator_hasNext/-1669924200 ((x!0 Iterator)) Bool (ite (= x!0 Iterator!24) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1
        },
        "jimple_statements": [
            "r15 := @this: org.javacc.jjdoc.XTextGenerator",
            "r1 := @parameter0: org.javacc.parser.TokenProduction",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = r1.<org.javacc.parser.TokenProduction: java.util.List respecs>",
            "r3 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>()",
            "$z0 = interfaceinvoke r3.<java.util.Iterator: boolean hasNext()>()",
            "if $z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.IO__setOutput__-696898608\\502.smt2",
        "z3": {
            "memory": 32002048,
            "run_time": 0.1529979705810547,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3312:\r\n  ;;   var3312!val!1 var3312!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3312!val!1 () var3312)\r\n  (declare-fun var3312!val!0 () var3312)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3312)) (or (= x var3312!val!1) (= x var3312!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2241:\r\n  ;;   var2241!val!1 var2241!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2241!val!1 () var2241)\r\n  (declare-fun var2241!val!0 () var2241)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2241)) (or (= x var2241!val!1) (= x var2241!val!0)))\r\n  ;; -----------\r\n  (define-fun var1071 () var2280\r\n    var2280-init)\r\n  (define-fun var1702 () String\r\n    (str.++ var2904!1 \"Can't create output file \"))\r\n  (define-fun var330 () String\r\n    (str.++ var2904!1 \"Can't create output file \" (ofn/607062292 var1248)))\r\n  (define-fun var2904 () String\r\n    String-init)\r\n  (define-fun var2317 () var2241\r\n    var2241!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3453 () String\r\n    (ofn/607062292 var1248))\r\n  (define-fun var140 () String\r\n    (str.++ var2904!1 \"Can't create output file \" (ofn/607062292 var1248)))\r\n  (define-fun var1248 () var3312\r\n    var3312!val!0)\r\n  (define-fun null-var3312 () var3312\r\n    var3312!val!1)\r\n  (define-fun null-var2241 () var2241\r\n    var2241!val!1)\r\n  (define-fun var2904!1 () String\r\n    \"\")\r\n  (define-fun var1702!1 () String\r\n    \"Can't create output file \")\r\n  (define-fun var2904!2 () String\r\n    \"Can't create output file \")\r\n  (define-fun var330!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2280-init () var2280\r\n    var2280!val!0)\r\n  (define-fun var1071!1 () var2280\r\n    var2280!val!0)\r\n  (define-fun ofn/607062292 ((x!0 var3312)) String\r\n    \"\")\r\n  (define-fun <init>/-1208695669 ((x!0 var2280) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 49 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.193800687789917,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3312 is 2\r\n; rep: (as @var3312_0 var3312)\r\n; rep: (as @var3312_1 var3312)\r\n; cardinality of var2241 is 2\r\n; rep: (as @var2241_0 var2241)\r\n; rep: (as @var2241_1 var2241)\r\n; cardinality of var2280 is 1\r\n; rep: (as @var2280_0 var2280)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2280-init () var2280 (as @var2280_0 var2280))\r\n(define-fun String-init () String \"\")\r\n(define-fun ofn/607062292 ((BOUND_VARIABLE_522 var3312)) String \"\")\r\n(define-fun <init>/-1208695669 ((BOUND_VARIABLE_525 var2280) (BOUND_VARIABLE_526 String)) void (as @void_0 void))\r\n(define-fun null-var3312 () var3312 (as @var3312_0 var3312))\r\n(define-fun null-var2241 () var2241 (as @var2241_0 var2241))\r\n(define-fun var1248 () var3312 (as @var3312_1 var3312))\r\n(define-fun var2317 () var2241 (as @var2241_1 var2241))\r\n(define-fun var2904!1 () String \"\")\r\n(define-fun var2904!2 () String \"Can't create output file \")\r\n(define-fun var1702!1 () String \"Can't create output file \")\r\n(define-fun var1071!1 () var2280 (as @var2280_0 var2280))\r\n(define-fun var330!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36626432,
            "run_time": 0.32589054107666016,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3312:\n  ;;   var3312!val!1 var3312!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3312!val!1 () var3312)\n  (declare-fun var3312!val!0 () var3312)\n  ;; cardinality constraint:\n  (forall ((x var3312)) (or (= x var3312!val!1) (= x var3312!val!0)))\n  ;; -----------\n  ;; universe for var2241:\n  ;;   var2241!val!1 var2241!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2241!val!1 () var2241)\n  (declare-fun var2241!val!0 () var2241)\n  ;; cardinality constraint:\n  (forall ((x var2241)) (or (= x var2241!val!1) (= x var2241!val!0)))\n  ;; -----------\n  (define-fun var2904 () String\n    String-init)\n  (define-fun var1071 () var2280\n    var2280-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2317 () var2241\n    var2241!val!0)\n  (define-fun var3453 () String\n    (ofn/607062292 var1248))\n  (define-fun var140 () String\n    (str.++ var2904!1 \"Can't create output file \" (ofn/607062292 var1248)))\n  (define-fun var1248 () var3312\n    var3312!val!0)\n  (define-fun null-var3312 () var3312\n    var3312!val!1)\n  (define-fun var1702 () String\n    (str.++ var2904!1 \"Can't create output file \"))\n  (define-fun var330 () String\n    (str.++ var2904!1 \"Can't create output file \" (ofn/607062292 var1248)))\n  (define-fun null-var2241 () var2241\n    var2241!val!1)\n  (define-fun var2904!1 () String\n    \"\")\n  (define-fun var1702!1 () String\n    \"Can't create output file \")\n  (define-fun var2904!2 () String\n    \"Can't create output file \")\n  (define-fun var330!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2280-init () var2280\n    var2280!val!0)\n  (define-fun var1071!1 () var2280\n    var2280!val!0)\n  (define-fun ofn/607062292 ((x!0 var3312)) String\n    \"\")\n  (define-fun <init>/-1208695669 ((x!0 var2280) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 49 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166780928,
            "run_time": 2.0405654907226562,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3312/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.IO__setOutput__-696898608\\502.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1702!1 =\r\n     concat(\"Can\\u{0}27t create output file \", all_23_2)\r\n\r\n1556ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.jjtree.IO",
            "$r9 := @caughtexception",
            "$r10 = new org.javacc.jjtree.JJTreeIOException",
            "$r11 = new java.lang.StringBuilder",
            "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Can\\'t create output file \")",
            "$r12 = r2.<org.javacc.jjtree.IO: java.lang.String ofn>",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r10.<org.javacc.jjtree.JJTreeIOException: void <init>(java.lang.String)>($r15)",
            "throw $r10"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JJTreeParser__Name__-1720575772\\2690.smt2",
        "z3": {
            "memory": 32198656,
            "run_time": 0.1308917999267578,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var948:\r\n  ;;   var948!val!1 var948!val!2 var948!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var948!val!1 () var948)\r\n  (declare-fun var948!val!2 () var948)\r\n  (declare-fun var948!val!0 () var948)\r\n  ;; cardinality constraint:\r\n  (forall ((x var948))\r\n          (or (= x var948!val!1) (= x var948!val!2) (= x var948!val!0)))\r\n  ;; -----------\r\n  (define-fun var741 () var948\r\n    var948!val!0)\r\n  (define-fun var346 () String\r\n    (str.++ var3317!1\r\n        (JavaIdentifier/541069444 var741)\r\n        \".\"\r\n        (JavaIdentifier/541069444 var741!1)))\r\n  (define-fun var3317 () String\r\n    String-init)\r\n  (define-fun var741!1 () var948\r\n    var948!val!2)\r\n  (define-fun var3576 () String\r\n    (str.++ var3317!1 (JavaIdentifier/541069444 var741) \".\"))\r\n  (define-fun var2253 () String\r\n    (str.++ var3317!1 (JavaIdentifier/541069444 var741)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2156 () String\r\n    (JavaIdentifier/541069444 var741!1))\r\n  (define-fun null-var948 () var948\r\n    var948!val!1)\r\n  (define-fun var1049 () String\r\n    (JavaIdentifier/541069444 var741))\r\n  (define-fun var2581!1 () Bool\r\n    (jj_2_23/411284452 var741!1 2))\r\n  (define-fun var2581 () Bool\r\n    (jj_2_23/411284452 var741 2))\r\n  (define-fun var1049!1 () String\r\n    (str.++ var3317!1\r\n        (JavaIdentifier/541069444 var741)\r\n        \".\"\r\n        (JavaIdentifier/541069444 var741!1)))\r\n  (define-fun var3317!2 () String\r\n    \"\")\r\n  (define-fun var3317!1 () String\r\n    \"\")\r\n  (define-fun var3576!1 () String\r\n    \".\")\r\n  (define-fun var2253!1 () String\r\n    \".\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1256 () Int\r\n    0)\r\n  (define-fun jj_2_23/411284452 ((x!0 var948) (x!1 Int)) Bool\r\n    (ite (and (= x!0 var948!val!2) (= x!1 2)) false\r\n      true))\r\n  (define-fun JavaIdentifier/541069444 ((x!0 var948)) String\r\n    \"\")\r\n  (define-fun jj_consume_token/-1568095275 ((x!0 var948) (x!1 Int)) var3335\r\n    var3335!val!0)\r\n)\r\n(error \"line 61 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11792384,
            "run_time": 0.031442880630493164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var948 is 3\r\n; rep: (as @var948_0 var948)\r\n; rep: (as @var948_1 var948)\r\n; rep: (as @var948_2 var948)\r\n; cardinality of var3335 is 1\r\n; rep: (as @var3335_0 var3335)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun JavaIdentifier/541069444 ((BOUND_VARIABLE_628 var948)) String \"\")\r\n(define-fun jj_2_23/411284452 ((_arg_1 var948) (_arg_2 Int)) Bool (and (= (as @var948_1 var948) _arg_1) (= _arg_2 2)))\r\n(define-fun jj_consume_token/-1568095275 ((BOUND_VARIABLE_631 var948) (BOUND_VARIABLE_632 Int)) var3335 (as @var3335_0 var3335))\r\n(define-fun String-init () String \"\")\r\n(define-fun null-var948 () var948 (as @var948_0 var948))\r\n(define-fun var741 () var948 (as @var948_1 var948))\r\n(define-fun var741!1 () var948 (as @var948_2 var948))\r\n(define-fun var1256 () Int 0)\r\n(define-fun var3317!1 () String \"\")\r\n(define-fun var3317!2 () String \"\")\r\n(define-fun var2253!1 () String \".\")\r\n(define-fun var3576!1 () String \".\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36818944,
            "run_time": 0.09221243858337402,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var948:\n  ;;   var948!val!1 var948!val!2 var948!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var948!val!1 () var948)\n  (declare-fun var948!val!2 () var948)\n  (declare-fun var948!val!0 () var948)\n  ;; cardinality constraint:\n  (forall ((x var948))\n          (or (= x var948!val!1) (= x var948!val!2) (= x var948!val!0)))\n  ;; -----------\n  (define-fun var346 () String\n    (str.++ var3317!1\n        (JavaIdentifier/541069444 var741)\n        \".\"\n        (JavaIdentifier/541069444 var741!1)))\n  (define-fun var2581 () Bool\n    (jj_2_23/411284452 var741 2))\n  (define-fun var3317 () String\n    String-init)\n  (define-fun var741 () var948\n    var948!val!0)\n  (define-fun var741!1 () var948\n    var948!val!2)\n  (define-fun var2253 () String\n    (str.++ var3317!1 (JavaIdentifier/541069444 var741)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2156 () String\n    (JavaIdentifier/541069444 var741!1))\n  (define-fun var1049 () String\n    (JavaIdentifier/541069444 var741))\n  (define-fun var2581!1 () Bool\n    (jj_2_23/411284452 var741!1 2))\n  (define-fun var1049!1 () String\n    (str.++ var3317!1\n        (JavaIdentifier/541069444 var741)\n        \".\"\n        (JavaIdentifier/541069444 var741!1)))\n  (define-fun null-var948 () var948\n    var948!val!1)\n  (define-fun var3576 () String\n    (str.++ var3317!1 (JavaIdentifier/541069444 var741) \".\"))\n  (define-fun var3317!2 () String\n    \"\")\n  (define-fun var3317!1 () String\n    \"\")\n  (define-fun var3576!1 () String\n    \".\")\n  (define-fun var2253!1 () String\n    \".\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1256 () Int\n    0)\n  (define-fun jj_2_23/411284452 ((x!0 var948) (x!1 Int)) Bool\n    (ite (and (= x!0 var948!val!2) (= x!1 2)) false\n      true))\n  (define-fun JavaIdentifier/541069444 ((x!0 var948)) String\n    \"\")\n  (define-fun jj_consume_token/-1568095275 ((x!0 var948) (x!1 Int)) var3335\n    var3335!val!0)\n)\n(error \"line 61 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169910272,
            "run_time": 1.9954216480255127,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var948/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JJTreeParser__Name__-1720575772\\2690.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3576!1 =\r\n     concat(all_22_5, all_22_4)\r\n   var2253!1 =\r\n     concat(var3317!2, \".\")\r\n   all_22_5 =\r\n     concat(var3317!2, \".\")\r\n\r\n1613ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 19,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjtree.JJTreeParser",
            "r6 = virtualinvoke r0.<org.javacc.jjtree.JJTreeParser: java.lang.String JavaIdentifier()>()",
            "$z0 = specialinvoke r0.<org.javacc.jjtree.JJTreeParser: boolean jj_2_23(int)>(2)",
            "if $z0 == 0 goto return r6",
            "specialinvoke r0.<org.javacc.jjtree.JJTreeParser: org.javacc.jjtree.Token jj_consume_token(int)>(93)",
            "r1 = virtualinvoke r0.<org.javacc.jjtree.JJTreeParser: java.lang.String JavaIdentifier()>()",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "goto [?= $z0 = specialinvoke r0.<org.javacc.jjtree.JJTreeParser: boolean jj_2_23(int)>(2)]",
            "$z0 = specialinvoke r0.<org.javacc.jjtree.JJTreeParser: boolean jj_2_23(int)>(2)",
            "if $z0 == 0 goto return r6",
            "return r6"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__closeJJTreeComment__367463215\\511.smt2",
        "z3": {
            "memory": 31748096,
            "run_time": 0.24568986892700195,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var670:\r\n  ;;   var670!val!0 var670!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var670!val!0 () var670)\r\n  (declare-fun var670!val!1 () var670)\r\n  ;; cardinality constraint:\r\n  (forall ((x var670)) (or (= x var670!val!0) (= x var670!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var670 () var670\r\n    var670!val!1)\r\n  (define-fun var2414 () String\r\n    String-init)\r\n  (define-fun var3062 () Bool\r\n    (var3984_booleanValue/1280995494 \"IGNORE_ACTIONS\"))\r\n  (define-fun var3230 () String\r\n    (str.++ var2414!1 \"/*\" \"@egen*/\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var482 () var670\r\n    var670!val!0)\r\n  (define-fun var2141 () String\r\n    \"/*\")\r\n  (define-fun var498 () String\r\n    (str.++ var2414!1 \"/*\"))\r\n  (define-fun var704 () String\r\n    (str.++ var2414!1 \"/*\" \"@egen*/\"))\r\n  (define-fun var498!1 () String\r\n    \"/*@egen*/\")\r\n  (define-fun var2414!1 () String\r\n    \"\")\r\n  (define-fun var2414!2 () String\r\n    \"/*\")\r\n  (define-fun var704!1 () String\r\n    \"\")\r\n  (define-fun var482!1 () var670\r\n    var670!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3984_booleanValue/1280995494 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun print/-1652180213 ((x!0 var670) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 46 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.04569649696350098,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var670 is 2\r\n; rep: (as @var670_0 var670)\r\n; rep: (as @var670_1 var670)\r\n; cardinality of var3984 is 1\r\n; rep: (as @var3984_0 var3984)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var3984_booleanValue/1280995494 ((_arg_1 String)) Bool false)\r\n(define-fun print/-1652180213 ((BOUND_VARIABLE_564 var670) (BOUND_VARIABLE_565 String)) void (as @void_0 void))\r\n(define-fun null-var670 () var670 (as @var670_0 var670))\r\n(define-fun var482 () var670 (as @var670_1 var670))\r\n(define-fun var2414!1 () String \"\")\r\n(define-fun var2414!2 () String \"/*\")\r\n(define-fun var498!1 () String \"/*@egen*/\")\r\n(define-fun var482!1 () var670 (as @var670_0 var670))\r\n(define-fun var704!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36798464,
            "run_time": 0.10810422897338867,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var670:\n  ;;   var670!val!0 var670!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var670!val!0 () var670)\n  (declare-fun var670!val!1 () var670)\n  ;; cardinality constraint:\n  (forall ((x var670)) (or (= x var670!val!0) (= x var670!val!1)))\n  ;; -----------\n  (define-fun var2414 () String\n    String-init)\n  (define-fun null-var670 () var670\n    var670!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2141 () String\n    \"/*\")\n  (define-fun var498 () String\n    (str.++ var2414!1 \"/*\"))\n  (define-fun var704 () String\n    (str.++ var2414!1 \"/*\" \"@egen*/\"))\n  (define-fun var482 () var670\n    var670!val!0)\n  (define-fun var3062 () Bool\n    (var3984_booleanValue/1280995494 \"IGNORE_ACTIONS\"))\n  (define-fun var3230 () String\n    (str.++ var2414!1 \"/*\" \"@egen*/\"))\n  (define-fun var498!1 () String\n    \"/*@egen*/\")\n  (define-fun var2414!1 () String\n    \"\")\n  (define-fun var2414!2 () String\n    \"/*\")\n  (define-fun var704!1 () String\n    \"\")\n  (define-fun var482!1 () var670\n    var670!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3984_booleanValue/1280995494 ((x!0 String)) Bool\n    false)\n  (define-fun print/-1652180213 ((x!0 var670) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 46 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167096320,
            "run_time": 2.01143479347229,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var498!1 () String \"/*@egen*/\")\r\n  (define-fun var2414!2 () String \"/*\")\r\n  (define-fun var2414!1 () String \"\")\r\n  (define-fun var482 () var670 var670!32)\r\n  (define-fun null-var670 () var670 var670!30)\r\n  (define-fun var3984_booleanValue/1280995494 ((x!0 String)) Bool (ite (= x!0 \"IGNORE_ACTIONS\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.jjtree.IO",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean booleanValue(java.lang.String)>(\"IGNORE_ACTIONS\")",
            "if $z0 == 0 goto $r5 = \"/*\"",
            "$r5 = \"/*\"",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"@egen*/\")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void print(java.lang.String)>($r4)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjdoc.HTMLGenerator__text__475966299\\59.smt2",
        "z3": {
            "memory": 31449088,
            "run_time": 0.10227108001708984,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2382:\r\n  ;;   var2382!val!0 var2382!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2382!val!0 () var2382)\r\n  (declare-fun var2382!val!1 () var2382)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2382)) (or (= x var2382!val!0) (= x var2382!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2382 () var2382\r\n    var2382!val!1)\r\n  (define-fun var3473 () Int\r\n    0)\r\n  (define-fun var1209 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1572 () var2382\r\n    var2382!val!0)\r\n  (define-fun var554 () Int\r\n    (str.len var1209))\r\n  (define-fun var3263 () String\r\n    \"\")\r\n  (define-fun var1572!1 () var2382\r\n    var2382!val!0)\r\n  (define-fun var3263!1 () String\r\n    \"\")\r\n  (define-fun print/-855496625 ((x!0 var2382) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.029801130294799805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2382 is 2\r\n; rep: (as @var2382_0 var2382)\r\n; rep: (as @var2382_1 var2382)\r\n; cardinality of var1925 is 1\r\n; rep: (as @var1925_0 var1925)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun print/-855496625 ((BOUND_VARIABLE_524 var2382) (BOUND_VARIABLE_525 String)) void (as @void_0 void))\r\n(define-fun null-var2382 () var2382 (as @var2382_0 var2382))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1572 () var2382 (as @var2382_1 var2382))\r\n(define-fun var1209 () String \"\")\r\n(define-fun var1572!1 () var2382 (as @var2382_0 var2382))\r\n(define-fun var3263!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37564416,
            "run_time": 0.09410238265991211,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2382:\n  ;;   var2382!val!0 var2382!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2382!val!0 () var2382)\n  (declare-fun var2382!val!1 () var2382)\n  ;; cardinality constraint:\n  (forall ((x var2382)) (or (= x var2382!val!0) (= x var2382!val!1)))\n  ;; -----------\n  (define-fun var3263 () String\n    \"\")\n  (define-fun null-var2382 () var2382\n    var2382!val!1)\n  (define-fun var1209 () String\n    \"\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3473 () Int\n    0)\n  (define-fun var1572 () var2382\n    var2382!val!0)\n  (define-fun var554 () Int\n    (str.len var1209))\n  (define-fun var1572!1 () var2382\n    var2382!val!0)\n  (define-fun var3263!1 () String\n    \"\")\n  (define-fun print/-855496625 ((x!0 var2382) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 158396416,
            "run_time": 1.9191515445709229,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1209 () String \"\")\r\n  (define-fun var1572 () var2382 var2382!4)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var2382 () var2382 var2382!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.jjdoc.HTMLGenerator",
            "r0 := @parameter0: java.lang.String",
            "r14 = \"\"",
            "i5 = 0",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i5 >= $i0 goto virtualinvoke r1.<org.javacc.jjdoc.HTMLGenerator: void print(java.lang.String)>(r14)",
            "virtualinvoke r1.<org.javacc.jjdoc.HTMLGenerator: void print(java.lang.String)>(r14)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.ASTNodeDescriptor__closeNode__1062269652\\389.smt2",
        "z3": {
            "memory": 31662080,
            "run_time": 0.10126209259033203,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1093:\r\n  ;;   var1093!val!1 var1093!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1093!val!1 () var1093)\r\n  (declare-fun var1093!val!0 () var1093)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1093)) (or (= x var1093!val!1) (= x var1093!val!0)))\r\n  ;; -----------\r\n  (define-fun var2337 () String\r\n    (str.++ var388!1 \"jjtree.closeNodeScope(\" var2295))\r\n  (define-fun var388 () String\r\n    String-init)\r\n  (define-fun var2017 () var1208\r\n    (expression/-1689018267 var1033))\r\n  (define-fun var1033 () var1093\r\n    var1093!val!0)\r\n  (define-fun null-var1093 () var1093\r\n    var1093!val!1)\r\n  (define-fun var3151 () String\r\n    (str.++ var388!1 \"jjtree.closeNodeScope(\"))\r\n  (define-fun var2233 () String\r\n    (str.++ var388!1 \"jjtree.closeNodeScope(\" var2295 \", true);\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2295 () String\r\n    \"A\")\r\n  (define-fun var2896 () String\r\n    (str.++ var388!1 \"jjtree.closeNodeScope(\" var2295 \", true);\"))\r\n  (define-fun var3151!1 () String\r\n    \"jjtree.closeNodeScope(A\")\r\n  (define-fun var388!1 () String\r\n    \"\")\r\n  (define-fun null-var1208 () var1208\r\n    var1208!val!0)\r\n  (define-fun var2337!1 () String\r\n    \"jjtree.closeNodeScope(A, true);\")\r\n  (define-fun var388!2 () String\r\n    \"jjtree.closeNodeScope(\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun expression/-1689018267 ((x!0 var1093)) var1208\r\n    var1208!val!0)\r\n)\r\n(error \"line 47 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8773632,
            "run_time": 0.03057122230529785,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1093 is 2\r\n; rep: (as @var1093_0 var1093)\r\n; rep: (as @var1093_1 var1093)\r\n; cardinality of var2420 is 1\r\n; rep: (as @var2420_0 var2420)\r\n; cardinality of var1208 is 1\r\n; rep: (as @var1208_0 var1208)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun expression/-1689018267 ((BOUND_VARIABLE_625 var1093)) var1208 (as @var1208_0 var1208))\r\n(define-fun String-init () String \"\")\r\n(define-fun null-var1093 () var1093 (as @var1093_0 var1093))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1208 () var1208 (as @var1208_0 var1208))\r\n(define-fun var1033 () var1093 (as @var1093_1 var1093))\r\n(define-fun var2295 () String \"\")\r\n(define-fun var388!1 () String \"\")\r\n(define-fun var388!2 () String \"jjtree.closeNodeScope(\")\r\n(define-fun var3151!1 () String \"jjtree.closeNodeScope(\")\r\n(define-fun var2337!1 () String \"jjtree.closeNodeScope(, true);\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36925440,
            "run_time": 0.17129874229431152,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1093:\n  ;;   var1093!val!1 var1093!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1093!val!1 () var1093)\n  (declare-fun var1093!val!0 () var1093)\n  ;; cardinality constraint:\n  (forall ((x var1093)) (or (= x var1093!val!1) (= x var1093!val!0)))\n  ;; -----------\n  ;; universe for var1208:\n  ;;   var1208!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1208!val!0 () var1208)\n  ;; cardinality constraint:\n  (forall ((x var1208)) (= x var1208!val!0))\n  ;; -----------\n  (define-fun var388!2 () String\n    \"jjtree.closeNodeScope(\")\n  (define-fun var2337!1 () String\n    \"jjtree.closeNodeScope(\\u{0}\\u{0}, true);\")\n  (define-fun null-var1208 () var1208\n    var1208!val!0)\n  (define-fun var388!1 () String\n    \"\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1033 () var1093\n    var1093!val!0)\n  (define-fun var3151!1 () String\n    \"jjtree.closeNodeScope(\\u{0}\\u{0}\")\n  (define-fun var2017 () var1208\n    (expression/-1689018267 var1033))\n  (define-fun var2233 () String\n    (str.++ var388!1 \"jjtree.closeNodeScope(\" var2295 \", true);\"))\n  (define-fun var2896 () String\n    (str.++ var388!1 \"jjtree.closeNodeScope(\" var2295 \", true);\"))\n  (define-fun var2295 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-var1093 () var1093\n    var1093!val!1)\n  (define-fun var388 () String\n    String-init)\n  (define-fun var2337 () String\n    (str.++ var388!1 \"jjtree.closeNodeScope(\" var2295))\n  (define-fun var3151 () String\n    (str.++ var388!1 \"jjtree.closeNodeScope(\"))\n  (define-fun String-init () String\n    \"\")\n  (define-fun expression/-1689018267 ((x!0 var1093)) var1208\n    var1208!val!0)\n)\n(error \"line 47 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166694912,
            "run_time": 2.0737671852111816,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1093/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.ASTNodeDescriptor__closeNode__1062269652\\389.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2337!1 =\r\n     concat(all_26_3, \", true);\")\r\n   var3151!1 =\r\n     concat(\"jjtree.closeNodeScope(\", var2295)\r\n   all_26_3 =\r\n     concat(\"jjtree.closeNodeScope(\", var2295)\r\n\r\n1637ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjtree.ASTNodeDescriptor",
            "r3 := @parameter0: java.lang.String",
            "$r1 = r0.<org.javacc.jjtree.ASTNodeDescriptor: org.javacc.jjtree.ASTNodeDescriptorExpression expression>",
            "if $r1 != null goto $z0 = r0.<org.javacc.jjtree.ASTNodeDescriptor: boolean isGT>",
            "$r19 = new java.lang.StringBuilder",
            "specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"jjtree.closeNodeScope(\")",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", true);\")",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r23"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JavaCodeGenerator__insertOpenNodeAction__1756978857\\689.smt2",
        "z3": {
            "memory": 32301056,
            "run_time": 0.11830687522888184,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3893:\r\n  ;;   var3893!val!1 var3893!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3893!val!1 () var3893)\r\n  (declare-fun var3893!val!0 () var3893)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3893)) (or (= x var3893!val!1) (= x var3893!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1572:\r\n  ;;   var1572!val!1 var1572!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1572!val!1 () var1572)\r\n  (declare-fun var1572!val!0 () var1572)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1572)) (or (= x var1572!val!1) (= x var1572!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2114:\r\n  ;;   var2114!val!0 var2114!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2114!val!0 () var2114)\r\n  (declare-fun var2114!val!1 () var2114)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2114)) (or (= x var2114!val!0) (= x var2114!val!1)))\r\n  ;; -----------\r\n  (define-fun var3056 () String\r\n    (str.++ var3010!1 var2593))\r\n  (define-fun null-var3893 () var3893\r\n    var3893!val!1)\r\n  (define-fun var3134 () var2114\r\n    var2114!val!0)\r\n  (define-fun null-var1572 () var1572\r\n    var1572!val!1)\r\n  (define-fun var3452 () String\r\n    (str.++ var2569!1 var2593 \"{\"))\r\n  (define-fun var2748 () String\r\n    (str.++ var1565!1 var2593 \"  \"))\r\n  (define-fun var1296 () var3893\r\n    var3893!val!0)\r\n  (define-fun null-var2114 () var2114\r\n    var2114!val!1)\r\n  (define-fun var2722 () String\r\n    (str.++ var3010!1 var2593 \"}\"))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3713 () String\r\n    (str.++ var2569!1 var2593))\r\n  (define-fun var3010 () String\r\n    String-init)\r\n  (define-fun var2569 () String\r\n    String-init)\r\n  (define-fun var1565 () String\r\n    String-init)\r\n  (define-fun var1565!2 () String\r\n    \"A\")\r\n  (define-fun var2330 () var1572\r\n    var1572!val!0)\r\n  (define-fun var3050 () String\r\n    (str.++ var1565!1 var2593))\r\n  (define-fun var2278 () String\r\n    (str.++ var1565!1 var2593 \"  \"))\r\n  (define-fun var3432 () String\r\n    (str.++ var3010!1 var2593 \"}\"))\r\n  (define-fun var2205 () String\r\n    (str.++ var2569!1 var2593 \"{\"))\r\n  (define-fun var3713!1 () String\r\n    \"A{\")\r\n  (define-fun var2569!1 () String\r\n    \"\")\r\n  (define-fun var3050!1 () String\r\n    \"A  \")\r\n  (define-fun var3010!1 () String\r\n    \"\")\r\n  (define-fun var3010!2 () String\r\n    \"A\")\r\n  (define-fun var1565!1 () String\r\n    \"\")\r\n  (define-fun var2569!2 () String\r\n    \"A\")\r\n  (define-fun var2593 () String\r\n    \"A\")\r\n  (define-fun var3056!1 () String\r\n    \"A}\")\r\n  (define-fun var3134!3 () var2114\r\n    var2114!val!0)\r\n  (define-fun var3432!1 () String\r\n    \"\")\r\n  (define-fun var3452!1 () String\r\n    \"\")\r\n  (define-fun var2278!1 () String\r\n    \"\")\r\n  (define-fun var3134!2 () var2114\r\n    var2114!val!0)\r\n  (define-fun var2330!1 () var1572\r\n    var1572!val!1)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3134!1 () var2114\r\n    var2114!val!0)\r\n  (define-fun var1296!1 () var3893\r\n    var3893!val!1)\r\n  (define-fun println/1333914633 ((x!0 var2114) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun insertOpenNodeCode/-1910072544 ((x!0 var1572)\r\n   (x!1 var3893)\r\n   (x!2 var2114)\r\n   (x!3 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 94 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1622016,
            "run_time": 0.029905319213867188,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1572 is 2\r\n; rep: (as @var1572_0 var1572)\r\n; rep: (as @var1572_1 var1572)\r\n; cardinality of var3893 is 2\r\n; rep: (as @var3893_0 var3893)\r\n; rep: (as @var3893_1 var3893)\r\n; cardinality of var2114 is 2\r\n; rep: (as @var2114_0 var2114)\r\n; rep: (as @var2114_1 var2114)\r\n; cardinality of var1275 is 1\r\n; rep: (as @var1275_0 var1275)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_742 var2114) (BOUND_VARIABLE_743 String)) void (as @void_0 void))\r\n(define-fun insertOpenNodeCode/-1910072544 ((BOUND_VARIABLE_746 var1572) (BOUND_VARIABLE_747 var3893) (BOUND_VARIABLE_748 var2114) (BOUND_VARIABLE_749 String)) void (as @void_0 void))\r\n(define-fun null-var1572 () var1572 (as @var1572_0 var1572))\r\n(define-fun null-var3893 () var3893 (as @var3893_0 var3893))\r\n(define-fun null-var2114 () var2114 (as @var2114_0 var2114))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2330 () var1572 (as @var1572_1 var1572))\r\n(define-fun var1296 () var3893 (as @var3893_1 var3893))\r\n(define-fun var3134 () var2114 (as @var2114_1 var2114))\r\n(define-fun var2593 () String \"\")\r\n(define-fun var2569!1 () String \"\")\r\n(define-fun var2569!2 () String \"\")\r\n(define-fun var3713!1 () String \"{\")\r\n(define-fun var3134!1 () var2114 (as @var2114_0 var2114))\r\n(define-fun var3452!1 () String \"\")\r\n(define-fun var1565!1 () String \"\")\r\n(define-fun var1565!2 () String \"\")\r\n(define-fun var3050!1 () String \"  \")\r\n(define-fun var2330!1 () var1572 (as @var1572_0 var1572))\r\n(define-fun var1296!1 () var3893 (as @var3893_0 var3893))\r\n(define-fun var3134!2 () var2114 (as @var2114_0 var2114))\r\n(define-fun var2278!1 () String \"\")\r\n(define-fun var3010!1 () String \"\")\r\n(define-fun var3010!2 () String \"\")\r\n(define-fun var3056!1 () String \"}\")\r\n(define-fun var3134!3 () var2114 (as @var2114_0 var2114))\r\n(define-fun var3432!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37806080,
            "run_time": 0.14095449447631836,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3893:\n  ;;   var3893!val!1 var3893!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3893!val!1 () var3893)\n  (declare-fun var3893!val!0 () var3893)\n  ;; cardinality constraint:\n  (forall ((x var3893)) (or (= x var3893!val!1) (= x var3893!val!0)))\n  ;; -----------\n  ;; universe for var1572:\n  ;;   var1572!val!1 var1572!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1572!val!1 () var1572)\n  (declare-fun var1572!val!0 () var1572)\n  ;; cardinality constraint:\n  (forall ((x var1572)) (or (= x var1572!val!1) (= x var1572!val!0)))\n  ;; -----------\n  ;; universe for var2114:\n  ;;   var2114!val!0 var2114!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2114!val!0 () var2114)\n  (declare-fun var2114!val!1 () var2114)\n  ;; cardinality constraint:\n  (forall ((x var2114)) (or (= x var2114!val!0) (= x var2114!val!1)))\n  ;; -----------\n  (define-fun var3010!2 () String\n    \"\\u{0}\")\n  (define-fun var3010!1 () String\n    \"\")\n  (define-fun var3050!1 () String\n    \"\\u{0}  \")\n  (define-fun var2569!1 () String\n    \"\")\n  (define-fun null-var3893 () var3893\n    var3893!val!1)\n  (define-fun null-var1572 () var1572\n    var1572!val!1)\n  (define-fun var3134 () var2114\n    var2114!val!0)\n  (define-fun var3713!1 () String\n    \"\\u{0}{\")\n  (define-fun var3056!1 () String\n    \"\\u{0}}\")\n  (define-fun var1296 () var3893\n    var3893!val!0)\n  (define-fun var3452 () String\n    (str.++ var2569!1 var2593 \"{\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3010 () String\n    String-init)\n  (define-fun var2593 () String\n    \"\\u{0}\")\n  (define-fun var2569!2 () String\n    \"\\u{0}\")\n  (define-fun var3050 () String\n    (str.++ var1565!1 var2593))\n  (define-fun var1565!1 () String\n    \"\")\n  (define-fun var2278 () String\n    (str.++ var1565!1 var2593 \"  \"))\n  (define-fun var3432 () String\n    (str.++ var3010!1 var2593 \"}\"))\n  (define-fun var2205 () String\n    (str.++ var2569!1 var2593 \"{\"))\n  (define-fun var2569 () String\n    String-init)\n  (define-fun var1565!2 () String\n    \"\\u{0}\")\n  (define-fun null-var2114 () var2114\n    var2114!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3056 () String\n    (str.++ var3010!1 var2593))\n  (define-fun var2748 () String\n    (str.++ var1565!1 var2593 \"  \"))\n  (define-fun var2330 () var1572\n    var1572!val!0)\n  (define-fun var2722 () String\n    (str.++ var3010!1 var2593 \"}\"))\n  (define-fun var1565 () String\n    String-init)\n  (define-fun var3713 () String\n    (str.++ var2569!1 var2593))\n  (define-fun var3134!3 () var2114\n    var2114!val!0)\n  (define-fun var3432!1 () String\n    \"\")\n  (define-fun var3452!1 () String\n    \"\")\n  (define-fun var2278!1 () String\n    \"\")\n  (define-fun var3134!2 () var2114\n    var2114!val!0)\n  (define-fun var2330!1 () var1572\n    var1572!val!1)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3134!1 () var2114\n    var2114!val!0)\n  (define-fun var1296!1 () var3893\n    var3893!val!1)\n  (define-fun println/1333914633 ((x!0 var2114) (x!1 String)) void\n    void!val!0)\n  (define-fun insertOpenNodeCode/-1910072544 ((x!0 var1572)\n   (x!1 var3893)\n   (x!2 var2114)\n   (x!3 String)) void\n    void!val!0)\n)\n(error \"line 94 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 174137344,
            "run_time": 2.0735208988189697,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2114/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JavaCodeGenerator__insertOpenNodeAction__1756978857\\689.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3056!1 =\r\n     concat(var2593, \"}\")\r\n   var3050!1 =\r\n     concat(var2593, \"  \")\r\n   var3713!1 =\r\n     concat(var2593, \"{\")\r\n\r\n1656ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 28,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r6 := @this: org.javacc.jjtree.JavaCodeGenerator",
            "r7 := @parameter0: org.javacc.jjtree.NodeScope",
            "r0 := @parameter1: org.javacc.jjtree.IO",
            "r2 := @parameter2: java.lang.String",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"{\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r5)",
            "$r8 = new java.lang.StringBuilder",
            "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  \")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r6.<org.javacc.jjtree.JavaCodeGenerator: void insertOpenNodeCode(org.javacc.jjtree.NodeScope,org.javacc.jjtree.IO,java.lang.String)>(r7, r0, $r11)",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"}\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r15)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JJTreeParserTokenManager__SwitchTo__855506038\\2091.smt2",
        "z3": {
            "memory": 32198656,
            "run_time": 0.14998173713684082,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2711:\r\n  ;;   var2711!val!0 var2711!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2711!val!0 () var2711)\r\n  (declare-fun var2711!val!1 () var2711)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2711)) (or (= x var2711!val!0) (= x var2711!val!1)))\r\n  ;; -----------\r\n  (define-fun var580 () Int\r\n    4)\r\n  (define-fun var3974!1 () String\r\n    \"Error: Ignoring invalid lexical state : \")\r\n  (define-fun var3974 () String\r\n    (str.++ var2916!1 \"Error: Ignoring invalid lexical state : \"))\r\n  (define-fun null-var2711 () var2711\r\n    var2711!val!1)\r\n  (define-fun var2498 () var1170\r\n    var1170-init)\r\n  (define-fun var2916 () String\r\n    String-init)\r\n  (define-fun null-Int () Int\r\n    5)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var121 () String\r\n    (str.++ var2916!1\r\n        \"Error: Ignoring invalid lexical state : \"\r\n        (str.from_int var580)\r\n        \". State unchanged.\"))\r\n  (define-fun var3985 () String\r\n    (str.++ var2916!1\r\n        \"Error: Ignoring invalid lexical state : \"\r\n        (str.from_int var580)\r\n        \". State unchanged.\"))\r\n  (define-fun var878 () String\r\n    (str.++ var2916!1\r\n        \"Error: Ignoring invalid lexical state : \"\r\n        (str.from_int var580)))\r\n  (define-fun var1826 () var2711\r\n    var2711!val!0)\r\n  (define-fun var2916!2 () String\r\n    \"Error: Ignoring invalid lexical state : \")\r\n  (define-fun var2916!1 () String\r\n    \"\")\r\n  (define-fun var878!1 () String\r\n    \"Error: Ignoring invalid lexical state : 4. State unchanged.\")\r\n  (define-fun var2498!1 () var1170\r\n    var1170!val!0)\r\n  (define-fun var3985!1 () String\r\n    \"\")\r\n  (define-fun var165 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1170-init () var1170\r\n    var1170!val!0)\r\n  (define-fun <init>/675441356 ((x!0 var1170) (x!1 String) (x!2 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 53 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1712128,
            "run_time": 0.031442880630493164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2711 is 2\r\n; rep: (as @var2711_0 var2711)\r\n; rep: (as @var2711_1 var2711)\r\n; cardinality of var1170 is 1\r\n; rep: (as @var1170_0 var1170)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1170-init () var1170 (as @var1170_0 var1170))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/675441356 ((BOUND_VARIABLE_967 var1170) (BOUND_VARIABLE_968 String) (BOUND_VARIABLE_969 Int)) void (as @void_0 void))\r\n(define-fun null-var2711 () var2711 (as @var2711_0 var2711))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var1826 () var2711 (as @var2711_1 var2711))\r\n(define-fun var580 () Int 4)\r\n(define-fun var2916!1 () String \"\")\r\n(define-fun var2916!2 () String \"Error: Ignoring invalid lexical state : \")\r\n(define-fun var3974!1 () String \"Error: Ignoring invalid lexical state : \")\r\n(define-fun var878!1 () String \"Error: Ignoring invalid lexical state : 4. State unchanged.\")\r\n(define-fun var2498!1 () var1170 (as @var1170_0 var1170))\r\n(define-fun var3985!1 () String \"\")\r\n(define-fun var165 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37351424,
            "run_time": 0.12295126914978027,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2711:\n  ;;   var2711!val!0 var2711!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2711!val!0 () var2711)\n  (declare-fun var2711!val!1 () var2711)\n  ;; cardinality constraint:\n  (forall ((x var2711)) (or (= x var2711!val!0) (= x var2711!val!1)))\n  ;; -----------\n  (define-fun var3974 () String\n    (str.++ var2916!1 \"Error: Ignoring invalid lexical state : \"))\n  (define-fun var580 () Int\n    4)\n  (define-fun var2916 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var2711 () var2711\n    var2711!val!1)\n  (define-fun var121 () String\n    (str.++ var2916!1\n        \"Error: Ignoring invalid lexical state : \"\n        (str.from_int var580)\n        \". State unchanged.\"))\n  (define-fun var3985 () String\n    (str.++ var2916!1\n        \"Error: Ignoring invalid lexical state : \"\n        (str.from_int var580)\n        \". State unchanged.\"))\n  (define-fun var2498 () var1170\n    var1170-init)\n  (define-fun null-Int () Int\n    5)\n  (define-fun var878 () String\n    (str.++ var2916!1\n        \"Error: Ignoring invalid lexical state : \"\n        (str.from_int var580)))\n  (define-fun var3974!1 () String\n    \"Error: Ignoring invalid lexical state : \")\n  (define-fun var878!1 () String\n    \"Error: Ignoring invalid lexical state : 4. State unchanged.\")\n  (define-fun var1826 () var2711\n    var2711!val!0)\n  (define-fun var2916!2 () String\n    \"Error: Ignoring invalid lexical state : \")\n  (define-fun var2916!1 () String\n    \"\")\n  (define-fun var2498!1 () var1170\n    var1170!val!0)\n  (define-fun var3985!1 () String\n    \"\")\n  (define-fun var165 () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1170-init () var1170\n    var1170!val!0)\n  (define-fun <init>/675441356 ((x!0 var1170) (x!1 String) (x!2 Int)) void\n    void!val!0)\n)\n(error \"line 53 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 185217024,
            "run_time": 2.382884979248047,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var878!1 () String \"Error: Ignoring invalid lexical state : 4. State unchanged.\")\r\n  (define-fun var3974!1 () String \"Error: Ignoring invalid lexical state : \")\r\n  (define-fun var2916!2 () String \"Error: Ignoring invalid lexical state : \")\r\n  (define-fun var2916!1 () String \"\")\r\n  (define-fun var580 () Int 4)\r\n  (define-fun var1826 () var2711 var2711!84)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var2711 () var2711 var2711!82)\r\n  (define-fun abbrev_106 ((x!0 Int)) String (ite (= x!0 0) \"Error: Ignoring invalid lexical state : \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r6 := @this: org.javacc.jjtree.JJTreeParserTokenManager",
            "i0 := @parameter0: int",
            "if i0 >= 4 goto $r0 = new org.javacc.jjtree.TokenMgrError",
            "$r0 = new org.javacc.jjtree.TokenMgrError",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: Ignoring invalid lexical state : \")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\". State unchanged.\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<org.javacc.jjtree.TokenMgrError: void <init>(java.lang.String,int)>($r5, 2)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPNodeFiles__visitorIncludeFile__-390817074\\438.smt2",
        "z3": {
            "memory": 31834112,
            "run_time": 0.07525753974914551,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1804_visitorClass/-25171238 () String\r\n    \"\")\r\n  (define-fun var2042!1 () String\r\n    \".h\")\r\n  (define-fun var2223!1 () String\r\n    \"\")\r\n  (define-fun var2223!2 () String\r\n    \"\")\r\n  (define-fun var3773-init () var3773\r\n    var3773!val!0)\r\n  (define-fun var1594!1 () String\r\n    \"\")\r\n  (define-fun var702!1 () var3773\r\n    var3773!val!0)\r\n  (define-fun var954!1 () var3773\r\n    var3773!val!0)\r\n  (define-fun var1887_getJJTreeOutputDirectory/-709711143 () var3773\r\n    var3773!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1681 () String\r\n    var1804_visitorClass/-25171238)\r\n  (define-fun var3421 () String\r\n    (getAbsolutePath/-802773300 var702!1))\r\n  (define-fun var702 () var3773\r\n    var3773-init)\r\n  (define-fun var2969 () String\r\n    (str.++ var2223!1 var1804_visitorClass/-25171238 \".h\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var954 () var3773\r\n    var1887_getJJTreeOutputDirectory/-709711143)\r\n  (define-fun var2223 () String\r\n    String-init)\r\n  (define-fun var2042 () String\r\n    (str.++ var2223!1 var1804_visitorClass/-25171238))\r\n  (define-fun var1594 () String\r\n    (str.++ var2223!1 var1804_visitorClass/-25171238 \".h\"))\r\n  (define-fun getAbsolutePath/-802773300 ((x!0 var3773)) String\r\n    \"\")\r\n  (define-fun <init>/-1833447926 ((x!0 var3773) (x!1 var3773) (x!2 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 48 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1736704,
            "run_time": 0.04645800590515137,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1804 is 1\r\n; rep: (as @var1804_0 var1804)\r\n; cardinality of var3773 is 1\r\n; rep: (as @var3773_0 var3773)\r\n; cardinality of var1887 is 1\r\n; rep: (as @var1887_0 var1887)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1804_visitorClass/-25171238 () String \"\")\r\n(define-fun var3773-init () var3773 (as @var3773_0 var3773))\r\n(define-fun var1887_getJJTreeOutputDirectory/-709711143 () var3773 (as @var3773_0 var3773))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1833447926 ((BOUND_VARIABLE_521 var3773) (BOUND_VARIABLE_522 var3773) (BOUND_VARIABLE_523 String)) void (as @void_0 void))\r\n(define-fun getAbsolutePath/-802773300 ((BOUND_VARIABLE_526 var3773)) String \"\")\r\n(define-fun var2223!1 () String \"\")\r\n(define-fun var2223!2 () String \"\")\r\n(define-fun var2042!1 () String \".h\")\r\n(define-fun var702!1 () var3773 (as @var3773_0 var3773))\r\n(define-fun var954!1 () var3773 (as @var3773_0 var3773))\r\n(define-fun var1594!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36454400,
            "run_time": 0.13912343978881836,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1804_visitorClass/-25171238 () String\n    \"\")\n  (define-fun var2042!1 () String\n    \".h\")\n  (define-fun var2223!1 () String\n    \"\")\n  (define-fun var2223!2 () String\n    \"\")\n  (define-fun var3773-init () var3773\n    var3773!val!0)\n  (define-fun var1594!1 () String\n    \"\")\n  (define-fun var702!1 () var3773\n    var3773!val!0)\n  (define-fun var954!1 () var3773\n    var3773!val!0)\n  (define-fun var1887_getJJTreeOutputDirectory/-709711143 () var3773\n    var3773!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2969 () String\n    (str.++ var2223!1 var1804_visitorClass/-25171238 \".h\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2223 () String\n    String-init)\n  (define-fun var702 () var3773\n    var3773-init)\n  (define-fun var2042 () String\n    (str.++ var2223!1 var1804_visitorClass/-25171238))\n  (define-fun var1594 () String\n    (str.++ var2223!1 var1804_visitorClass/-25171238 \".h\"))\n  (define-fun var954 () var3773\n    var1887_getJJTreeOutputDirectory/-709711143)\n  (define-fun var1681 () String\n    var1804_visitorClass/-25171238)\n  (define-fun var3421 () String\n    (getAbsolutePath/-802773300 var702!1))\n  (define-fun getAbsolutePath/-802773300 ((x!0 var3773)) String\n    \"\")\n  (define-fun <init>/-1833447926 ((x!0 var3773) (x!1 var3773) (x!2 String)) void\n    void!val!0)\n)\n(error \"line 48 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165036032,
            "run_time": 2.274059534072876,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2042!1 () String \".h\")\r\n  (define-fun var2223!2 () String \"\")\r\n  (define-fun var2223!1 () String \"\")\r\n  (define-fun var1804_visitorClass/-25171238 () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String visitorClass()>()",
            "$r1 = new java.io.File",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.io.File getJJTreeOutputDirectory()>()",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".h\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r5)",
            "$r7 = virtualinvoke $r1.<java.io.File: java.lang.String getAbsolutePath()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPNodeFiles__jjtreeImplFile__626043402\\311.smt2",
        "z3": {
            "memory": 31674368,
            "run_time": 0.10590410232543945,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1230!1 () String\r\n    \"\")\r\n  (define-fun var170-parserName () String\r\n    \"\")\r\n  (define-fun var2137!1 () String\r\n    \"Tree.cc\")\r\n  (define-fun var1230!2 () String\r\n    \"\")\r\n  (define-fun var3375!1 () var3975\r\n    var3975!val!0)\r\n  (define-fun var2028!1 () var3975\r\n    var3975!val!0)\r\n  (define-fun var777!1 () String\r\n    \"\")\r\n  (define-fun var3975-init () var3975\r\n    var3975!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var427_getJJTreeOutputDirectory/-709711143 () var3975\r\n    var3975!val!0)\r\n  (define-fun var777 () String\r\n    (str.++ var1230!1 var170-parserName \"Tree.cc\"))\r\n  (define-fun var2137 () String\r\n    (str.++ var1230!1 var170-parserName))\r\n  (define-fun var3375 () var3975\r\n    var3975-init)\r\n  (define-fun var3878 () String\r\n    (getAbsolutePath/-802773300 var3375!1))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2028 () var3975\r\n    var427_getJJTreeOutputDirectory/-709711143)\r\n  (define-fun var250 () String\r\n    (str.++ var1230!1 var170-parserName \"Tree.cc\"))\r\n  (define-fun var1102 () String\r\n    var170-parserName)\r\n  (define-fun var1230 () String\r\n    String-init)\r\n  (define-fun getAbsolutePath/-802773300 ((x!0 var3975)) String\r\n    \"\")\r\n  (define-fun <init>/-1833447926 ((x!0 var3975) (x!1 var3975) (x!2 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 48 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1622016,
            "run_time": 0.07829976081848145,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3975 is 1\r\n; rep: (as @var3975_0 var3975)\r\n; cardinality of var427 is 1\r\n; rep: (as @var427_0 var427)\r\n; cardinality of var170 is 1\r\n; rep: (as @var170_0 var170)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3975-init () var3975 (as @var3975_0 var3975))\r\n(define-fun var427_getJJTreeOutputDirectory/-709711143 () var3975 (as @var3975_0 var3975))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1833447926 ((BOUND_VARIABLE_521 var3975) (BOUND_VARIABLE_522 var3975) (BOUND_VARIABLE_523 String)) void (as @void_0 void))\r\n(define-fun getAbsolutePath/-802773300 ((BOUND_VARIABLE_526 var3975)) String \"\")\r\n(define-fun var170-parserName () String \"\")\r\n(define-fun var1230!1 () String \"\")\r\n(define-fun var1230!2 () String \"\")\r\n(define-fun var2137!1 () String \"Tree.cc\")\r\n(define-fun var3375!1 () var3975 (as @var3975_0 var3975))\r\n(define-fun var2028!1 () var3975 (as @var3975_0 var3975))\r\n(define-fun var777!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36098048,
            "run_time": 0.13849091529846191,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1230!1 () String\n    \"\")\n  (define-fun var170-parserName () String\n    \"\")\n  (define-fun var2137!1 () String\n    \"Tree.cc\")\n  (define-fun var1230!2 () String\n    \"\")\n  (define-fun var3375!1 () var3975\n    var3975!val!0)\n  (define-fun var2028!1 () var3975\n    var3975!val!0)\n  (define-fun var777!1 () String\n    \"\")\n  (define-fun var3975-init () var3975\n    var3975!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var427_getJJTreeOutputDirectory/-709711143 () var3975\n    var3975!val!0)\n  (define-fun var3878 () String\n    (getAbsolutePath/-802773300 var3375!1))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3375 () var3975\n    var3975-init)\n  (define-fun var1102 () String\n    var170-parserName)\n  (define-fun var1230 () String\n    String-init)\n  (define-fun var2028 () var3975\n    var427_getJJTreeOutputDirectory/-709711143)\n  (define-fun var250 () String\n    (str.++ var1230!1 var170-parserName \"Tree.cc\"))\n  (define-fun var2137 () String\n    (str.++ var1230!1 var170-parserName))\n  (define-fun var777 () String\n    (str.++ var1230!1 var170-parserName \"Tree.cc\"))\n  (define-fun getAbsolutePath/-802773300 ((x!0 var3975)) String\n    \"\")\n  (define-fun <init>/-1833447926 ((x!0 var3975) (x!1 var3975) (x!2 String)) void\n    void!val!0)\n)\n(error \"line 48 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 160751616,
            "run_time": 2.2275309562683105,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2137!1 () String \"Tree.cc\")\r\n  (define-fun var1230!2 () String \"\")\r\n  (define-fun var1230!1 () String \"\")\r\n  (define-fun var170-parserName () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "$r0 = new java.io.File",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.io.File getJJTreeOutputDirectory()>()",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = <org.javacc.jjtree.JJTreeGlobals: java.lang.String parserName>",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Tree.cc\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r5)",
            "$r7 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.ASTNodeDescriptor__openNode__114769770\\338.smt2",
        "z3": {
            "memory": 31739904,
            "run_time": 0.17896366119384766,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var703:\r\n  ;;   var703!val!0 var703!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var703!val!0 () var703)\r\n  (declare-fun var703!val!1 () var703)\r\n  ;; cardinality constraint:\r\n  (forall ((x var703)) (or (= x var703!val!0) (= x var703!val!1)))\r\n  ;; -----------\r\n  (define-fun var3177 () String\r\n    \"A\")\r\n  (define-fun var3410 () String\r\n    (str.++ var3898!1 \"jjtree.openNodeScope(\" var3177 \");\"))\r\n  (define-fun var2135 () String\r\n    (str.++ var3898!1 \"jjtree.openNodeScope(\" var3177))\r\n  (define-fun var1421 () String\r\n    (str.++ var3898!1 \"jjtree.openNodeScope(\"))\r\n  (define-fun var2824 () String\r\n    (str.++ var3898!1 \"jjtree.openNodeScope(\" var3177 \");\"))\r\n  (define-fun null-var703 () var703\r\n    var703!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3898 () String\r\n    String-init)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var804 () var703\r\n    var703!val!0)\r\n  (define-fun var3898!2 () String\r\n    \"jjtree.openNodeScope(\")\r\n  (define-fun var1421!1 () String\r\n    \"jjtree.openNodeScope(A\")\r\n  (define-fun var2135!1 () String\r\n    \"jjtree.openNodeScope(A);\")\r\n  (define-fun var3898!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n)\r\n(error \"line 41 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10072064,
            "run_time": 0.0459136962890625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var703 is 2\r\n; rep: (as @var703_0 var703)\r\n; rep: (as @var703_1 var703)\r\n; cardinality of var2962 is 1\r\n; rep: (as @var2962_0 var2962)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun null-var703 () var703 (as @var703_0 var703))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var804 () var703 (as @var703_1 var703))\r\n(define-fun var3177 () String \"\")\r\n(define-fun var3898!1 () String \"\")\r\n(define-fun var3898!2 () String \"jjtree.openNodeScope(\")\r\n(define-fun var1421!1 () String \"jjtree.openNodeScope(\")\r\n(define-fun var2135!1 () String \"jjtree.openNodeScope();\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36913152,
            "run_time": 0.15252900123596191,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var703:\n  ;;   var703!val!0 var703!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var703!val!0 () var703)\n  (declare-fun var703!val!1 () var703)\n  ;; cardinality constraint:\n  (forall ((x var703)) (or (= x var703!val!0) (= x var703!val!1)))\n  ;; -----------\n  (define-fun var3898!1 () String\n    \"\")\n  (define-fun var2135!1 () String\n    \"jjtree.openNodeScope(\\u{0}\\u{0});\")\n  (define-fun var1421!1 () String\n    \"jjtree.openNodeScope(\\u{0}\\u{0}\")\n  (define-fun var3898!2 () String\n    \"jjtree.openNodeScope(\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1421 () String\n    (str.++ var3898!1 \"jjtree.openNodeScope(\"))\n  (define-fun var804 () var703\n    var703!val!0)\n  (define-fun var3898 () String\n    String-init)\n  (define-fun var3410 () String\n    (str.++ var3898!1 \"jjtree.openNodeScope(\" var3177 \");\"))\n  (define-fun var2135 () String\n    (str.++ var3898!1 \"jjtree.openNodeScope(\" var3177))\n  (define-fun var2824 () String\n    (str.++ var3898!1 \"jjtree.openNodeScope(\" var3177 \");\"))\n  (define-fun null-var703 () var703\n    var703!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3177 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun String-init () String\n    \"\")\n)\n(error \"line 41 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173912064,
            "run_time": 1.853625774383545,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var703/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.ASTNodeDescriptor__openNode__114769770\\338.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2135!1 =\r\n     concat(all_23_3, \");\")\r\n   var1421!1 =\r\n     concat(\"jjtree.openNodeScope(\", var3177)\r\n   all_23_3 =\r\n     concat(\"jjtree.openNodeScope(\", var3177)\r\n\r\n1348ms\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r6 := @this: org.javacc.jjtree.ASTNodeDescriptor",
            "r1 := @parameter0: java.lang.String",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"jjtree.openNodeScope(\")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\");\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JavaCharStream__GetImage__590875749\\1228.smt2",
        "z3": {
            "memory": 31780864,
            "run_time": 0.10265946388244629,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1917:\r\n  ;;   var1917!val!0 var1917!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1917!val!0 () var1917)\r\n  (declare-fun var1917!val!1 () var1917)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1917)) (or (= x var1917!val!0) (= x var1917!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var1917 () var1917\r\n    var1917!val!1)\r\n  (define-fun var3358 () String\r\n    String-init)\r\n  (define-fun var3732 () Int\r\n    (bufpos/-623079098 var2568))\r\n  (define-fun var3012 () Int\r\n    (tokenBegin/-623079098 var2568))\r\n  (define-fun var3350 () (Array Int Int)\r\n    (buffer/-623079098 var2568))\r\n  (define-fun var3019 () Int\r\n    (tokenBegin/-623079098 var2568))\r\n  (define-fun var1440 () Int\r\n    (bufpos/-623079098 var2568))\r\n  (define-fun var2568 () var1917\r\n    var1917!val!0)\r\n  (define-fun var3918 () Int\r\n    (- (bufpos/-623079098 var2568) (tokenBegin/-623079098 var2568)))\r\n  (define-fun var1210 () Int\r\n    (tokenBegin/-623079098 var2568))\r\n  (define-fun var392 () Int\r\n    (+ (- (bufpos/-623079098 var2568) (tokenBegin/-623079098 var2568)) 1))\r\n  (define-fun var3350!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3019!1 () Int\r\n    0)\r\n  (define-fun var392!1 () Int\r\n    0)\r\n  (define-fun var3358!1 () String\r\n    \"\")\r\n  (define-fun tokenBegin/-623079098 ((x!0 var1917)) Int\r\n    0)\r\n  (define-fun bufpos/-623079098 ((x!0 var1917)) Int\r\n    0)\r\n  (define-fun buffer/-623079098 ((x!0 var1917)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1728512,
            "run_time": 0.0630030632019043,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1917 is 2\r\n; rep: (as @var1917_0 var1917)\r\n; rep: (as @var1917_1 var1917)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun bufpos/-623079098 ((_arg_1 var1917)) Int 0)\r\n(define-fun tokenBegin/-623079098 ((_arg_1 var1917)) Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun buffer/-623079098 ((BOUND_VARIABLE_486 var1917)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_491 String) (BOUND_VARIABLE_492 (Array Int Int)) (BOUND_VARIABLE_493 Int) (BOUND_VARIABLE_494 Int)) void (as @void_0 void))\r\n(define-fun null-var1917 () var1917 (as @var1917_0 var1917))\r\n(define-fun var2568 () var1917 (as @var1917_1 var1917))\r\n(define-fun var3358!1 () String \"\")\r\n(define-fun var3350!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3019!1 () Int 0)\r\n(define-fun var392!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36429824,
            "run_time": 0.10768508911132812,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1917:\n  ;;   var1917!val!0 var1917!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1917!val!0 () var1917)\n  (declare-fun var1917!val!1 () var1917)\n  ;; cardinality constraint:\n  (forall ((x var1917)) (or (= x var1917!val!0) (= x var1917!val!1)))\n  ;; -----------\n  (define-fun null-var1917 () var1917\n    var1917!val!1)\n  (define-fun var1210 () Int\n    (tokenBegin/-623079098 var2568))\n  (define-fun var392 () Int\n    (+ (- (bufpos/-623079098 var2568) (tokenBegin/-623079098 var2568)) 1))\n  (define-fun var3732 () Int\n    (bufpos/-623079098 var2568))\n  (define-fun var3012 () Int\n    (tokenBegin/-623079098 var2568))\n  (define-fun var3019 () Int\n    (tokenBegin/-623079098 var2568))\n  (define-fun var2568 () var1917\n    var1917!val!0)\n  (define-fun var3350 () (Array Int Int)\n    (buffer/-623079098 var2568))\n  (define-fun var3358 () String\n    String-init)\n  (define-fun var1440 () Int\n    (bufpos/-623079098 var2568))\n  (define-fun var3918 () Int\n    (- (bufpos/-623079098 var2568) (tokenBegin/-623079098 var2568)))\n  (define-fun var3350!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3019!1 () Int\n    0)\n  (define-fun var392!1 () Int\n    0)\n  (define-fun var3358!1 () String\n    \"\")\n  (define-fun tokenBegin/-623079098 ((x!0 var1917)) Int\n    0)\n  (define-fun bufpos/-623079098 ((x!0 var1917)) Int\n    0)\n  (define-fun buffer/-623079098 ((x!0 var1917)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167325696,
            "run_time": 1.6789329051971436,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2568 () var1917 var1917!4)\r\n  (define-fun null-var1917 () var1917 var1917!2)\r\n  (define-fun tokenBegin/-623079098 ((x!0 var1917)) Int (ite (= x!0 var1917!4) 7 0))\r\n  (define-fun bufpos/-623079098 ((x!0 var1917)) Int (ite (= x!0 var1917!4) 7 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: void <init>(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjtree.JavaCharStream",
            "$i1 = r0.<org.javacc.jjtree.JavaCharStream: int bufpos>",
            "$i0 = r0.<org.javacc.jjtree.JavaCharStream: int tokenBegin>",
            "if $i1 < $i0 goto $r1 = new java.lang.StringBuilder",
            "$r9 = new java.lang.String",
            "$r10 = r0.<org.javacc.jjtree.JavaCharStream: char[] buffer>",
            "$i12 = r0.<org.javacc.jjtree.JavaCharStream: int tokenBegin>",
            "$i9 = r0.<org.javacc.jjtree.JavaCharStream: int bufpos>",
            "$i8 = r0.<org.javacc.jjtree.JavaCharStream: int tokenBegin>",
            "$i10 = $i9 - $i8",
            "$i11 = $i10 + 1",
            "specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r10, $i12, $i11)",
            "return $r9"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjdoc.XTextGenerator__println__-1731774833\\61.smt2",
        "z3": {
            "memory": 32137216,
            "run_time": 0.13641881942749023,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2126:\r\n  ;;   var2126!val!1 var2126!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2126!val!1 () var2126)\r\n  (declare-fun var2126!val!0 () var2126)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2126)) (or (= x var2126!val!1) (= x var2126!val!0)))\r\n  ;; -----------\r\n  (define-fun var401 () String\r\n    (str.++ var1408!1 var3678 \"\\n\"))\r\n  (define-fun var1408 () String\r\n    String-init)\r\n  (define-fun var3678 () String\r\n    \"A\")\r\n  (define-fun var1467 () var2126\r\n    var2126!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1518 () String\r\n    (str.++ var1408!1 var3678 \"\\n\"))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun null-var2126 () var2126\r\n    var2126!val!1)\r\n  (define-fun var922 () String\r\n    (str.++ var1408!1 var3678))\r\n  (define-fun var922!1 () String\r\n    \"A\\n\")\r\n  (define-fun var1408!2 () String\r\n    \"A\")\r\n  (define-fun var1408!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1467!1 () var2126\r\n    var2126!val!1)\r\n  (define-fun var401!1 () String\r\n    \"\")\r\n  (define-fun print/512225041 ((x!0 var2126) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1654784,
            "run_time": 0.03307008743286133,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2126 is 2\r\n; rep: (as @var2126_0 var2126)\r\n; rep: (as @var2126_1 var2126)\r\n; cardinality of var3260 is 1\r\n; rep: (as @var3260_0 var3260)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun print/512225041 ((BOUND_VARIABLE_586 var2126) (BOUND_VARIABLE_587 String)) void (as @void_0 void))\r\n(define-fun null-var2126 () var2126 (as @var2126_0 var2126))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1467 () var2126 (as @var2126_1 var2126))\r\n(define-fun var3678 () String \"\")\r\n(define-fun var1408!1 () String \"\")\r\n(define-fun var1408!2 () String \"\")\r\n(define-fun var922!1 () String \"\\u{5c}n\")\r\n(define-fun var1467!1 () var2126 (as @var2126_0 var2126))\r\n(define-fun var401!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36950016,
            "run_time": 0.17111921310424805,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2126:\n  ;;   var2126!val!1 var2126!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2126!val!1 () var2126)\n  (declare-fun var2126!val!0 () var2126)\n  ;; cardinality constraint:\n  (forall ((x var2126)) (or (= x var2126!val!1) (= x var2126!val!0)))\n  ;; -----------\n  (define-fun var1408!1 () String\n    \"\")\n  (define-fun var1408!2 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var922!1 () String\n    \"\\u{0}\\u{0}\\n\")\n  (define-fun var922 () String\n    (str.++ var1408!1 var3678))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3678 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1467 () var2126\n    var2126!val!0)\n  (define-fun var1408 () String\n    String-init)\n  (define-fun var1518 () String\n    (str.++ var1408!1 var3678 \"\\n\"))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-var2126 () var2126\n    var2126!val!1)\n  (define-fun var401 () String\n    (str.++ var1408!1 var3678 \"\\n\"))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1467!1 () var2126\n    var2126!val!1)\n  (define-fun var401!1 () String\n    \"\")\n  (define-fun print/512225041 ((x!0 var2126) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164372480,
            "run_time": 1.772883415222168,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2126/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjdoc.XTextGenerator__println__-1731774833\\61.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var922!1 =\r\n     concat(var3678, \"\\u{5c}n\")\r\n\r\n1316ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjdoc.XTextGenerator",
            "r2 := @parameter0: java.lang.String",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\n\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjdoc.XTextGenerator: void print(java.lang.String)>($r5)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjdoc.JJDoc__emitExpansionRegularExpression__181721163\\272.smt2",
        "z3": {
            "memory": 31731712,
            "run_time": 0.08923220634460449,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1090:\r\n  ;;   var1090!val!0 var1090!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1090!val!0 () var1090)\r\n  (declare-fun var1090!val!1 () var1090)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1090)) (or (= x var1090!val!0) (= x var1090!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2119:\r\n  ;;   var2119!val!1 var2119!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2119!val!1 () var2119)\r\n  (declare-fun var2119!val!0 () var2119)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2119)) (or (= x var2119!val!1) (= x var2119!val!0)))\r\n  ;; -----------\r\n  (define-fun var303 () Bool\r\n    (= (var193_emitRE/1338725779 var1249) \"\"))\r\n  (define-fun var3352 () var1090\r\n    var1090!val!0)\r\n  (define-fun null-var1090 () var1090\r\n    var1090!val!1)\r\n  (define-fun var1249 () var2119\r\n    var2119!val!0)\r\n  (define-fun null-var2119 () var2119\r\n    var2119!val!1)\r\n  (define-fun var2518 () String\r\n    (var193_emitRE/1338725779 var1249))\r\n  (define-fun var193_emitRE/1338725779 ((x!0 var2119)) String\r\n    \"\")\r\n)\r\n(error \"line 25 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.029900789260864258,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2119 is 2\r\n; rep: (as @var2119_0 var2119)\r\n; rep: (as @var2119_1 var2119)\r\n; cardinality of var1090 is 2\r\n; rep: (as @var1090_0 var1090)\r\n; rep: (as @var1090_1 var1090)\r\n; cardinality of var193 is 1\r\n; rep: (as @var193_0 var193)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var193_emitRE/1338725779 ((_arg_1 var2119)) String \"\")\r\n(define-fun null-var2119 () var2119 (as @var2119_0 var2119))\r\n(define-fun null-var1090 () var1090 (as @var1090_0 var1090))\r\n(define-fun var1249 () var2119 (as @var2119_1 var2119))\r\n(define-fun var3352 () var1090 (as @var1090_1 var1090))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36585472,
            "run_time": 0.13791346549987793,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 24 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 25 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 148729856,
            "run_time": 1.7389867305755615,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3352 () var1090 var1090!8)\r\n  (define-fun var1249 () var2119 var2119!6)\r\n  (define-fun null-var1090 () var1090 var1090!4)\r\n  (define-fun null-var2119 () var2119 var2119!2)\r\n  (define-fun var193_emitRE/1338725779 ((x!0 var2119)) String (ite (= x!0 var2119!6) \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.RegularExpression",
            "r2 := @parameter1: org.javacc.jjdoc.Generator",
            "r1 = staticinvoke <org.javacc.jjdoc.JJDoc: java.lang.String emitRE(org.javacc.parser.RegularExpression)>(r0)",
            "$z0 = virtualinvoke r1.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 != 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JJTreeState__generateTreeState_java__-1982490435\\375.smt2",
        "z3": {
            "memory": 31961088,
            "run_time": 0.16673779487609863,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1100:\r\n  ;;   var1100!val!1 var1100!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1100!val!1 () var1100)\r\n  (declare-fun var1100!val!0 () var1100)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1100)) (or (= x var1100!val!1) (= x var1100!val!0)))\r\n  ;; -----------\r\n  (define-fun var266 () String\r\n    (str.++ var404!1 var254_nameState/428850403 \".java\"))\r\n  (define-fun var2398 () var2390\r\n    var2390-init)\r\n  (define-fun var2270 () var386\r\n    var386-init)\r\n  (define-fun var67 () var3649\r\n    var3649-init)\r\n  (define-fun var3168 () String\r\n    (str.++ var404!1 var254_nameState/428850403 \".java\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var1100 () var1100\r\n    var1100!val!1)\r\n  (define-fun var2273 () String\r\n    var254_nameState/428850403)\r\n  (define-fun var404 () String\r\n    String-init)\r\n  (define-fun var123 () var3649\r\n    var146_getJJTreeOutputDirectory/-709711143)\r\n  (define-fun var3215 () String\r\n    (str.++ var404!1 var254_nameState/428850403))\r\n  (define-fun var1814 () var1100\r\n    var1100!val!0)\r\n  (define-fun var909 () String\r\n    (toString/-1112415476 (cast-from-var1100-to-var1674 var1814)))\r\n  (define-fun var254_nameState/428850403 () String\r\n    \"\")\r\n  (define-fun var404!2 () String\r\n    \"\")\r\n  (define-fun var404!1 () String\r\n    \"\")\r\n  (define-fun var3215!1 () String\r\n    \".java\")\r\n  (define-fun var67!1 () var3649\r\n    var3649!val!0)\r\n  (define-fun var2270!1 () var386\r\n    var386!val!0)\r\n  (define-fun var146_getJJTreeOutputDirectory/-709711143 () var3649\r\n    var3649!val!0)\r\n  (define-fun var123!1 () var3649\r\n    var3649!val!0)\r\n  (define-fun var3649-init () var3649\r\n    var3649!val!0)\r\n  (define-fun var909!1 () String\r\n    \"\")\r\n  (define-fun var2390-init () var2390\r\n    var2390!val!0)\r\n  (define-fun var266!1 () String\r\n    \"\")\r\n  (define-fun var386-init () var386\r\n    var386!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var1100-to-var1674 ((x!0 var1100)) var1674\r\n    var1674!val!0)\r\n  (define-fun <init>/1101485922 ((x!0 var386) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun toString/-1112415476 ((x!0 var1674)) String\r\n    \"\")\r\n  (define-fun <init>/-1833447926 ((x!0 var3649) (x!1 var3649) (x!2 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 67 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.02982783317565918,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3649 is 1\r\n; rep: (as @var3649_0 var3649)\r\n; cardinality of var146 is 1\r\n; rep: (as @var146_0 var146)\r\n; cardinality of var254 is 1\r\n; rep: (as @var254_0 var254)\r\n; cardinality of var2390 is 1\r\n; rep: (as @var2390_0 var2390)\r\n; cardinality of var1100 is 2\r\n; rep: (as @var1100_0 var1100)\r\n; rep: (as @var1100_1 var1100)\r\n; cardinality of var386 is 1\r\n; rep: (as @var386_0 var386)\r\n; cardinality of var1674 is 1\r\n; rep: (as @var1674_0 var1674)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3649-init () var3649 (as @var3649_0 var3649))\r\n(define-fun var146_getJJTreeOutputDirectory/-709711143 () var3649 (as @var3649_0 var3649))\r\n(define-fun String-init () String \"\")\r\n(define-fun var254_nameState/428850403 () String \"\")\r\n(define-fun <init>/-1833447926 ((BOUND_VARIABLE_557 var3649) (BOUND_VARIABLE_558 var3649) (BOUND_VARIABLE_559 String)) void (as @void_0 void))\r\n(define-fun var2390-init () var2390 (as @var2390_0 var2390))\r\n(define-fun var386-init () var386 (as @var386_0 var386))\r\n(define-fun toString/-1112415476 ((BOUND_VARIABLE_562 var1674)) String \"\")\r\n(define-fun cast-from-var1100-to-var1674 ((BOUND_VARIABLE_565 var1100)) var1674 (as @var1674_0 var1674))\r\n(define-fun <init>/1101485922 ((BOUND_VARIABLE_568 var386) (BOUND_VARIABLE_569 String)) void (as @void_0 void))\r\n(define-fun null-var1100 () var1100 (as @var1100_0 var1100))\r\n(define-fun var404!1 () String \"\")\r\n(define-fun var404!2 () String \"\")\r\n(define-fun var3215!1 () String \".java\")\r\n(define-fun var67!1 () var3649 (as @var3649_0 var3649))\r\n(define-fun var123!1 () var3649 (as @var3649_0 var3649))\r\n(define-fun var266!1 () String \"\")\r\n(define-fun var1814 () var1100 (as @var1100_1 var1100))\r\n(define-fun var2270!1 () var386 (as @var386_0 var386))\r\n(define-fun var909!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36581376,
            "run_time": 0.10708427429199219,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1100:\n  ;;   var1100!val!1 var1100!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1100!val!1 () var1100)\n  (declare-fun var1100!val!0 () var1100)\n  ;; cardinality constraint:\n  (forall ((x var1100)) (or (= x var1100!val!1) (= x var1100!val!0)))\n  ;; -----------\n  (define-fun var123 () var3649\n    var146_getJJTreeOutputDirectory/-709711143)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2273 () String\n    var254_nameState/428850403)\n  (define-fun var404 () String\n    String-init)\n  (define-fun var67 () var3649\n    var3649-init)\n  (define-fun var3215 () String\n    (str.++ var404!1 var254_nameState/428850403))\n  (define-fun null-var1100 () var1100\n    var1100!val!1)\n  (define-fun var266 () String\n    (str.++ var404!1 var254_nameState/428850403 \".java\"))\n  (define-fun var2398 () var2390\n    var2390-init)\n  (define-fun var909 () String\n    (toString/-1112415476 (cast-from-var1100-to-var1674 var1814)))\n  (define-fun var2270 () var386\n    var386-init)\n  (define-fun var1814 () var1100\n    var1100!val!0)\n  (define-fun var3168 () String\n    (str.++ var404!1 var254_nameState/428850403 \".java\"))\n  (define-fun var254_nameState/428850403 () String\n    \"\")\n  (define-fun var404!2 () String\n    \"\")\n  (define-fun var404!1 () String\n    \"\")\n  (define-fun var3215!1 () String\n    \".java\")\n  (define-fun var67!1 () var3649\n    var3649!val!0)\n  (define-fun var2270!1 () var386\n    var386!val!0)\n  (define-fun var146_getJJTreeOutputDirectory/-709711143 () var3649\n    var3649!val!0)\n  (define-fun var123!1 () var3649\n    var3649!val!0)\n  (define-fun var3649-init () var3649\n    var3649!val!0)\n  (define-fun var909!1 () String\n    \"\")\n  (define-fun var2390-init () var2390\n    var2390!val!0)\n  (define-fun var266!1 () String\n    \"\")\n  (define-fun var386-init () var386\n    var386!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun cast-from-var1100-to-var1674 ((x!0 var1100)) var1674\n    var1674!val!0)\n  (define-fun <init>/1101485922 ((x!0 var386) (x!1 String)) void\n    void!val!0)\n  (define-fun toString/-1112415476 ((x!0 var1674)) String\n    \"\")\n  (define-fun <init>/-1833447926 ((x!0 var3649) (x!1 var3649) (x!2 String)) void\n    void!val!0)\n)\n(error \"line 67 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167591936,
            "run_time": 1.7698979377746582,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1100/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JJTreeState__generateTreeState_java__-1982490435\\375.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3215!1 =\r\n     concat(var254_nameState/428850403, \".java\")\r\n\r\n1341ms\r\n"
        },
        "undefined_function_count": 10,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.Throwable: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "$r0 = new java.io.File",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.io.File getJJTreeOutputDirectory()>()",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = staticinvoke <org.javacc.jjtree.JJTreeState: java.lang.String nameState()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".java\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r5)",
            "$r7 = new org.javacc.parser.OutputFile",
            "$r9 := @caughtexception",
            "$r10 = new java.lang.Error",
            "$r11 = virtualinvoke $r9.<java.io.IOException: java.lang.String toString()>()",
            "specialinvoke $r10.<java.lang.Error: void <init>(java.lang.String)>($r11)",
            "throw $r10"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__insertCatchBlocks__-1244466602\\796.smt2",
        "z3": {
            "memory": 32092160,
            "run_time": 0.15316081047058105,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2044:\r\n  ;;   var2044!val!0 var2044!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2044!val!0 () var2044)\r\n  (declare-fun var2044!val!1 () var2044)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2044)) (or (= x var2044!val!0) (= x var2044!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2286:\r\n  ;;   var2286!val!0 var2286!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2286!val!0 () var2286)\r\n  (declare-fun var2286!val!1 () var2286)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2286)) (or (= x var2286!val!0) (= x var2286!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2389:\r\n  ;;   var2389!val!1 var2389!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2389!val!1 () var2389)\r\n  (declare-fun var2389!val!0 () var2389)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2389)) (or (= x var2389!val!1) (= x var2389!val!0)))\r\n  ;; -----------\r\n  ;; universe for var299:\r\n  ;;   var299!val!0 var299!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var299!val!0 () var299)\r\n  (declare-fun var299!val!1 () var299)\r\n  ;; cardinality constraint:\r\n  (forall ((x var299)) (or (= x var299!val!0) (= x var299!val!1)))\r\n  ;; -----------\r\n  (define-fun var1160 () var2389\r\n    var2389!val!0)\r\n  (define-fun var1662 () String\r\n    (str.++ var161!1 var3960 \"} catch (...) {\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3936 () var2286\r\n    var2286!val!0)\r\n  (define-fun null-var2044 () var2044\r\n    var2044!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun null-var2286 () var2286\r\n    var2286!val!1)\r\n  (define-fun var2599 () String\r\n    (str.++ var161!1 var3960 \"} catch (...) {\"))\r\n  (define-fun null-var299 () var299\r\n    var299!val!1)\r\n  (define-fun var2115 () String\r\n    (str.++ var161!1 var3960))\r\n  (define-fun var161 () String\r\n    String-init)\r\n  (define-fun var3414 () Bool\r\n    (usesCloseNodeVar/-1769174946 var3936))\r\n  (define-fun var3960 () String\r\n    \"A\")\r\n  (define-fun var1546 () var299\r\n    var299!val!0)\r\n  (define-fun null-var2389 () var2389\r\n    var2389!val!1)\r\n  (define-fun var720 () var2044\r\n    var2044!val!0)\r\n  (define-fun var2115!1 () String\r\n    \"A} catch (...) {\")\r\n  (define-fun var161!2 () String\r\n    \"A\")\r\n  (define-fun var161!1 () String\r\n    \"\")\r\n  (define-fun var1160!1 () var2389\r\n    var2389!val!1)\r\n  (define-fun var2599!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun usesCloseNodeVar/-1769174946 ((x!0 var2286)) Bool\r\n    false)\r\n  (define-fun println/1333914633 ((x!0 var2389) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 60 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1695744,
            "run_time": 0.030829668045043945,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var299 is 2\r\n; rep: (as @var299_0 var299)\r\n; rep: (as @var299_1 var299)\r\n; cardinality of var2286 is 2\r\n; rep: (as @var2286_0 var2286)\r\n; rep: (as @var2286_1 var2286)\r\n; cardinality of var2389 is 2\r\n; rep: (as @var2389_0 var2389)\r\n; rep: (as @var2389_1 var2389)\r\n; cardinality of var2044 is 2\r\n; rep: (as @var2044_0 var2044)\r\n; rep: (as @var2044_1 var2044)\r\n; cardinality of var3011 is 1\r\n; rep: (as @var3011_0 var3011)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_655 var2389) (BOUND_VARIABLE_656 String)) void (as @void_0 void))\r\n(define-fun usesCloseNodeVar/-1769174946 ((_arg_1 var2286)) Bool false)\r\n(define-fun null-var299 () var299 (as @var299_0 var299))\r\n(define-fun null-var2286 () var2286 (as @var2286_0 var2286))\r\n(define-fun null-var2389 () var2389 (as @var2389_0 var2389))\r\n(define-fun null-var2044 () var2044 (as @var2044_0 var2044))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1546 () var299 (as @var299_1 var299))\r\n(define-fun var3936 () var2286 (as @var2286_1 var2286))\r\n(define-fun var1160 () var2389 (as @var2389_1 var2389))\r\n(define-fun var720 () var2044 (as @var2044_1 var2044))\r\n(define-fun var3960 () String \"\")\r\n(define-fun var161!1 () String \"\")\r\n(define-fun var161!2 () String \"\")\r\n(define-fun var2115!1 () String \"} catch (...) {\")\r\n(define-fun var1160!1 () var2389 (as @var2389_0 var2389))\r\n(define-fun var2599!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36941824,
            "run_time": 0.10708427429199219,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2044:\n  ;;   var2044!val!0 var2044!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2044!val!0 () var2044)\n  (declare-fun var2044!val!1 () var2044)\n  ;; cardinality constraint:\n  (forall ((x var2044)) (or (= x var2044!val!0) (= x var2044!val!1)))\n  ;; -----------\n  ;; universe for var2286:\n  ;;   var2286!val!0 var2286!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2286!val!0 () var2286)\n  (declare-fun var2286!val!1 () var2286)\n  ;; cardinality constraint:\n  (forall ((x var2286)) (or (= x var2286!val!0) (= x var2286!val!1)))\n  ;; -----------\n  ;; universe for var2389:\n  ;;   var2389!val!1 var2389!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2389!val!1 () var2389)\n  (declare-fun var2389!val!0 () var2389)\n  ;; cardinality constraint:\n  (forall ((x var2389)) (or (= x var2389!val!1) (= x var2389!val!0)))\n  ;; -----------\n  ;; universe for var299:\n  ;;   var299!val!0 var299!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var299!val!0 () var299)\n  (declare-fun var299!val!1 () var299)\n  ;; cardinality constraint:\n  (forall ((x var299)) (or (= x var299!val!0) (= x var299!val!1)))\n  ;; -----------\n  (define-fun var161!1 () String\n    \"\")\n  (define-fun var161!2 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2115!1 () String\n    \"\\u{0}\\u{0}} catch (...) {\")\n  (define-fun var1160 () var2389\n    var2389!val!0)\n  (define-fun var720 () var2044\n    var2044!val!0)\n  (define-fun var3936 () var2286\n    var2286!val!0)\n  (define-fun var1546 () var299\n    var299!val!0)\n  (define-fun var1662 () String\n    (str.++ var161!1 var3960 \"} catch (...) {\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2599 () String\n    (str.++ var161!1 var3960 \"} catch (...) {\"))\n  (define-fun var3414 () Bool\n    (usesCloseNodeVar/-1769174946 var3936))\n  (define-fun null-var2286 () var2286\n    var2286!val!1)\n  (define-fun var2115 () String\n    (str.++ var161!1 var3960))\n  (define-fun var3960 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var299 () var299\n    var299!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var161 () String\n    String-init)\n  (define-fun null-var2044 () var2044\n    var2044!val!1)\n  (define-fun null-var2389 () var2389\n    var2389!val!1)\n  (define-fun var1160!1 () var2389\n    var2389!val!1)\n  (define-fun var2599!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun usesCloseNodeVar/-1769174946 ((x!0 var2286)) Bool\n    false)\n  (define-fun println/1333914633 ((x!0 var2389) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 60 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175697920,
            "run_time": 1.8478548526763916,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2044/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPCodeGenerator__insertCatchBlocks__-1244466602\\796.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2115!1 =\r\n     concat(var3960, \"} catch (...) {\")\r\n\r\n1433ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r40 := @this: org.javacc.jjtree.CPPCodeGenerator",
            "r6 := @parameter0: org.javacc.jjtree.NodeScope",
            "r0 := @parameter1: org.javacc.jjtree.IO",
            "r41 := @parameter2: java.util.Enumeration",
            "r2 := @parameter3: java.lang.String",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"} catch (...) {\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r5)",
            "$z0 = virtualinvoke r6.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()",
            "if $z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.IO__create_output_file_name__1220515700\\401.smt2",
        "z3": {
            "memory": 31760384,
            "run_time": 0.08991789817810059,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1616:\r\n  ;;   var1616!val!0 var1616!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1616!val!0 () var1616)\r\n  (declare-fun var1616!val!1 () var1616)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1616)) (or (= x var1616!val!0) (= x var1616!val!1)))\r\n  ;; -----------\r\n  (define-fun var3762 () String\r\n    var2450_getOutputFile/2044331849)\r\n  (define-fun var157 () var1616\r\n    var1616!val!0)\r\n  (define-fun var251 () Bool\r\n    (= var2450_getOutputFile/2044331849 \"\"))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2450_getOutputFile/2044331849 () String\r\n    \"B\")\r\n  (define-fun null-var1616 () var1616\r\n    var1616!val!1)\r\n  (define-fun var2728 () String\r\n    \"A\")\r\n)\r\n(error \"line 25 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11042816,
            "run_time": 0.03141927719116211,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1616 is 2\r\n; rep: (as @var1616_0 var1616)\r\n; rep: (as @var1616_1 var1616)\r\n; cardinality of var6 is 1\r\n; rep: (as @var6_0 var6)\r\n; cardinality of var2450 is 1\r\n; rep: (as @var2450_0 var2450)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2450_getOutputFile/2044331849 () String \"B\")\r\n(define-fun null-var1616 () var1616 (as @var1616_0 var1616))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var157 () var1616 (as @var1616_1 var1616))\r\n(define-fun var2728 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37650432,
            "run_time": 0.13955235481262207,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1616:\n  ;;   var1616!val!0 var1616!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1616!val!0 () var1616)\n  (declare-fun var1616!val!1 () var1616)\n  ;; cardinality constraint:\n  (forall ((x var1616)) (or (= x var1616!val!0) (= x var1616!val!1)))\n  ;; -----------\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2728 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var157 () var1616\n    var1616!val!0)\n  (define-fun var3762 () String\n    var2450_getOutputFile/2044331849)\n  (define-fun var251 () Bool\n    (= var2450_getOutputFile/2044331849 \"\"))\n  (define-fun var2450_getOutputFile/2044331849 () String\n    \"\\u{0}\")\n  (define-fun null-var1616 () var1616\n    var1616!val!1)\n)\n(error \"line 25 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141914112,
            "run_time": 1.6925468444824219,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2728 () String \"\\u{0}\")\r\n  (define-fun var157 () var1616 var1616!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var1616 () var1616 var1616!2)\r\n  (define-fun var2450_getOutputFile/2044331849 () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r11 := @this: org.javacc.jjtree.IO",
            "r12 := @parameter0: java.lang.String",
            "r13 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getOutputFile()>()",
            "$z0 = virtualinvoke r13.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 == 0 goto return r13",
            "return r13"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.ASTNodeDescriptor__expression_text__-401151979\\362.smt2",
        "z3": {
            "memory": 32096256,
            "run_time": 0.21032166481018066,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3055:\r\n  ;;   var3055!val!0 var3055!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3055!val!0 () var3055)\r\n  (declare-fun var3055!val!1 () var3055)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3055)) (or (= x var3055!val!0) (= x var3055!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2171:\r\n  ;;   var2171!val!1 var2171!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2171!val!1 () var2171)\r\n  (declare-fun var2171!val!0 () var2171)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2171)) (or (= x var2171!val!1) (= x var2171!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3276:\r\n  ;;   var3276!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3276!val!0 () var3276)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3276)) (= x var3276!val!0))\r\n  ;; -----------\r\n  ;; universe for var2426:\r\n  ;;   var2426!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2426!val!0 () var2426)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2426)) (= x var2426!val!0))\r\n  ;; -----------\r\n  (define-fun var626 () String\r\n    (image/-1103324373\r\n  (getLastToken/-1621043189\r\n    (cast-from-var2426-to-var3276 (expression/-1689018267 var447)))))\r\n  (define-fun var3001 () String\r\n    (image/-1103324373\r\n  (getFirstToken/-615766237\r\n    (cast-from-var2426-to-var3276 (expression/-1689018267 var447)))))\r\n  (define-fun var2697 () Bool\r\n    (let ((a!1 (image/-1103324373\r\n             (getLastToken/-1621043189\r\n               (cast-from-var2426-to-var3276 (expression/-1689018267 var447))))))\r\n  (= a!1 \"(\")))\r\n  (define-fun var447 () var2171\r\n    var2171!val!0)\r\n  (define-fun null-var2171 () var2171\r\n    var2171!val!1)\r\n  (define-fun var2177 () var3055\r\n    (getFirstToken/-615766237\r\n  (cast-from-var2426-to-var3276 (expression/-1689018267 var447))))\r\n  (define-fun var3205 () var2426\r\n    (expression/-1689018267 var447))\r\n  (define-fun var3517 () var3055\r\n    (getLastToken/-1621043189\r\n  (cast-from-var2426-to-var3276 (expression/-1689018267 var447))))\r\n  (define-fun var2689 () var2426\r\n    (expression/-1689018267 var447))\r\n  (define-fun var2876 () Bool\r\n    (let ((a!1 (image/-1103324373\r\n             (getFirstToken/-615766237\r\n               (cast-from-var2426-to-var3276 (expression/-1689018267 var447))))))\r\n  (= a!1 \")\")))\r\n  (define-fun getFirstToken/-615766237 ((x!0 var3276)) var3055\r\n    var3055!val!0)\r\n  (define-fun getLastToken/-1621043189 ((x!0 var3276)) var3055\r\n    var3055!val!1)\r\n  (define-fun expression/-1689018267 ((x!0 var2171)) var2426\r\n    var2426!val!0)\r\n  (define-fun image/-1103324373 ((x!0 var3055)) String\r\n    (ite (= x!0 var3055!val!0) \")\"\r\n    (ite (= x!0 var3055!val!1) \"(\"\r\n      \")\")))\r\n  (define-fun cast-from-var2426-to-var3276 ((x!0 var2426)) var3276\r\n    var3276!val!0)\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.02975630760192871,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2171 is 2\r\n; rep: (as @var2171_0 var2171)\r\n; rep: (as @var2171_1 var2171)\r\n; cardinality of var2426 is 1\r\n; rep: (as @var2426_0 var2426)\r\n; cardinality of var3055 is 2\r\n; rep: (as @var3055_0 var3055)\r\n; rep: (as @var3055_1 var3055)\r\n; cardinality of var3276 is 1\r\n; rep: (as @var3276_0 var3276)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun expression/-1689018267 ((_arg_1 var2171)) var2426 (as @var2426_0 var2426))\r\n(define-fun getFirstToken/-615766237 ((_arg_1 var3276)) var3055 (as @var3055_0 var3055))\r\n(define-fun cast-from-var2426-to-var3276 ((_arg_1 var2426)) var3276 (as @var3276_0 var3276))\r\n(define-fun image/-1103324373 ((_arg_1 var3055)) String (ite (= (as @var3055_0 var3055) _arg_1) \")\" \"(\"))\r\n(define-fun getLastToken/-1621043189 ((_arg_1 var3276)) var3055 (as @var3055_1 var3055))\r\n(define-fun null-var2171 () var2171 (as @var2171_0 var2171))\r\n(define-fun var447 () var2171 (as @var2171_1 var2171))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35762176,
            "run_time": 0.20313501358032227,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 37 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164982784,
            "run_time": 1.8615164756774902,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var447 () var2171 var2171!8)\r\n  (define-fun null-var2171 () var2171 var2171!6)\r\n  (define-fun var3055!30 () var3055 (getLastToken/-1621043189 var3276!26))\r\n  (define-fun var3276!26 () var3276 (cast-from-var2426-to-var3276 var2426!24))\r\n  (define-fun var3055!28 () var3055 (getFirstToken/-615766237 var3276!26))\r\n  (define-fun var2426!24 () var2426 (expression/-1689018267 var2171!8))\r\n  (define-fun image/-1103324373 ((x!0 var3055)) String (ite (= x!0 var3055!28) \")\" (ite (= x!0 var3055!30) \"(\" \"\")))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 2
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjtree.ASTNodeDescriptor",
            "$r1 = r0.<org.javacc.jjtree.ASTNodeDescriptor: org.javacc.jjtree.ASTNodeDescriptorExpression expression>",
            "$r2 = virtualinvoke $r1.<org.javacc.jjtree.ASTNodeDescriptorExpression: org.javacc.jjtree.Token getFirstToken()>()",
            "$r3 = $r2.<org.javacc.jjtree.Token: java.lang.String image>",
            "$z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>(\")\")",
            "if $z0 == 0 goto r8 = \"\"",
            "$r5 = r0.<org.javacc.jjtree.ASTNodeDescriptor: org.javacc.jjtree.ASTNodeDescriptorExpression expression>",
            "$r6 = virtualinvoke $r5.<org.javacc.jjtree.ASTNodeDescriptorExpression: org.javacc.jjtree.Token getLastToken()>()",
            "$r7 = $r6.<org.javacc.jjtree.Token: java.lang.String image>",
            "$z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(\"(\")",
            "if $z1 == 0 goto r8 = \"\"",
            "return \"true\""
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JJTreeParserTokenManager__TokenLexicalActions__98459455\\2185.smt2",
        "z3": {
            "memory": 32112640,
            "run_time": 0.09023261070251465,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3931:\r\n  ;;   var3931!val!1 var3931!val!2 var3931!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3931!val!1 () var3931)\r\n  (declare-fun var3931!val!2 () var3931)\r\n  (declare-fun var3931!val!0 () var3931)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3931))\r\n          (or (= x var3931!val!1) (= x var3931!val!2) (= x var3931!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2588:\r\n  ;;   var2588!val!1 var2588!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2588!val!1 () var2588)\r\n  (declare-fun var2588!val!0 () var2588)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2588)) (or (= x var2588!val!1) (= x var2588!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1324:\r\n  ;;   var1324!val!1 var1324!val!2 var1324!val!0 var1324!val!3 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1324!val!1 () var1324)\r\n  (declare-fun var1324!val!2 () var1324)\r\n  (declare-fun var1324!val!0 () var1324)\r\n  (declare-fun var1324!val!3 () var1324)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1324))\r\n          (or (= x var1324!val!1)\r\n              (= x var1324!val!2)\r\n              (= x var1324!val!0)\r\n              (= x var1324!val!3)))\r\n  ;; -----------\r\n  (define-fun var3291 () var3931\r\n    var3931!val!0)\r\n  (define-fun var386 () (Array Int String)\r\n    var3931-jjstrLiteralImages)\r\n  (define-fun var1431 () Int\r\n    (str.len (select var3931-jjstrLiteralImages 126)))\r\n  (define-fun var3813 () var3657\r\n    (input_stream/-1450700737 var3291!1))\r\n  (define-fun var977 () String\r\n    (select var3931-jjstrLiteralImages 126))\r\n  (define-fun var1177!1 () var2588\r\n    var2588!val!0)\r\n  (define-fun null-var2588 () var2588\r\n    var2588!val!1)\r\n  (define-fun null-var1324 () var1324\r\n    var1324!val!1)\r\n  (define-fun var1445 () var1324\r\n    var1324!val!0)\r\n  (define-fun var2009 () (Array Int String)\r\n    var3931-jjstrLiteralImages)\r\n  (define-fun null-var3931 () var3931\r\n    var3931!val!1)\r\n  (define-fun var3291!1 () var3931\r\n    var3931!val!2)\r\n  (define-fun var1445!2 () var1324\r\n    var1324!val!3)\r\n  (define-fun var1177 () var2588\r\n    (cast-from-var1324-to-var2588 var1445!1))\r\n  (define-fun var2143 () String\r\n    (image/-1450700737 var3291))\r\n  (define-fun var3603 () Int\r\n    (jjmatchedKind/-1450700737 var3291))\r\n  (define-fun var2809 () String\r\n    (select var3931-jjstrLiteralImages 126))\r\n  (define-fun var3931-jjstrLiteralImages () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun var1445!1 () var1324\r\n    var1324!val!2)\r\n  (define-fun var2143!1 () String\r\n    \"\")\r\n  (define-fun var3813!1 () var3657\r\n    var3657!val!0)\r\n  (define-fun var527 () Int\r\n    0)\r\n  (define-fun realKind/-190849901 ((x!0 var2588)) Int\r\n    126)\r\n  (define-fun jjmatchedKind/-1450700737 ((x!0 var3931)) Int\r\n    126)\r\n  (define-fun kind/-1103324373 ((x!0 var1324)) Int\r\n    128)\r\n  (define-fun lengthOfMatch/-1450700737 ((x!0 var3931)) Int\r\n    0)\r\n  (define-fun image/-1103324373 ((x!0 var1324)) String\r\n    (ite (= x!0 var1324!val!3) \">\"\r\n      \">\"))\r\n  (define-fun image/-1450700737 ((x!0 var3931)) String\r\n    \"\")\r\n  (define-fun cast-from-var1324-to-var2588 ((x!0 var1324)) var2588\r\n    var2588!val!1)\r\n  (define-fun input_stream/-1450700737 ((x!0 var3931)) var3657\r\n    var3657!val!0)\r\n  (define-fun backup/-1560050078 ((x!0 var3657) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 68 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.030231237411499023,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3931 is 3\r\n; rep: (as @var3931_0 var3931)\r\n; rep: (as @var3931_1 var3931)\r\n; rep: (as @var3931_2 var3931)\r\n; cardinality of var1324 is 4\r\n; rep: (as @var1324_0 var1324)\r\n; rep: (as @var1324_1 var1324)\r\n; rep: (as @var1324_2 var1324)\r\n; rep: (as @var1324_3 var1324)\r\n; cardinality of var2588 is 2\r\n; rep: (as @var2588_0 var2588)\r\n; rep: (as @var2588_1 var2588)\r\n; cardinality of var3657 is 1\r\n; rep: (as @var3657_0 var3657)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun jjmatchedKind/-1450700737 ((_arg_1 var3931)) Int 126)\r\n(define-fun image/-1450700737 ((BOUND_VARIABLE_695 var3931)) String \"\")\r\n(define-fun lengthOfMatch/-1450700737 ((_arg_1 var3931)) Int 0)\r\n(define-fun kind/-1103324373 ((_arg_1 var1324)) Int 128)\r\n(define-fun cast-from-var1324-to-var2588 ((BOUND_VARIABLE_698 var1324)) var2588 (as @var2588_0 var2588))\r\n(define-fun realKind/-190849901 ((_arg_1 var2588)) Int 126)\r\n(define-fun input_stream/-1450700737 ((BOUND_VARIABLE_701 var3931)) var3657 (as @var3657_0 var3657))\r\n(define-fun backup/-1560050078 ((BOUND_VARIABLE_704 var3657) (BOUND_VARIABLE_705 Int)) void (as @void_0 void))\r\n(define-fun image/-1103324373 ((_arg_1 var1324)) String \">\")\r\n(define-fun null-var3931 () var3931 (as @var3931_0 var3931))\r\n(define-fun null-var1324 () var1324 (as @var1324_0 var1324))\r\n(define-fun var3931-jjstrLiteralImages () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun null-var2588 () var2588 (as @var2588_0 var2588))\r\n(define-fun var3291 () var3931 (as @var3931_1 var3931))\r\n(define-fun var1445 () var1324 (as @var1324_1 var1324))\r\n(define-fun var2143!1 () String \"\")\r\n(define-fun var3291!1 () var3931 (as @var3931_2 var3931))\r\n(define-fun var1445!1 () var1324 (as @var1324_2 var1324))\r\n(define-fun var1177!1 () var2588 (as @var2588_1 var2588))\r\n(define-fun var3813!1 () var3657 (as @var3657_0 var3657))\r\n(define-fun var527 () Int 0)\r\n(define-fun var1445!2 () var1324 (as @var1324_3 var1324))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35905536,
            "run_time": 0.15493226051330566,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 67 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 68 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164118528,
            "run_time": 1.9873926639556885,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1324/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JJTreeParserTokenManager__TokenLexicalActions__98459455\\2185.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2143!1 =\r\n     concat(all_22_3, all_19_0)\r\n\r\n1543ms\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjtree.JJTreeParserTokenManager",
            "r6 := @parameter0: org.javacc.jjtree.Token",
            "$i0 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: int jjmatchedKind>",
            "lookupswitch($i0) {     case 126: goto $r11 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: java.lang.StringBuilder image>;     case 127: goto $r3 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: java.lang.StringBuilder image>;     default: goto return; }",
            "$r11 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: java.lang.StringBuilder image>",
            "$r9 = <org.javacc.jjtree.JJTreeParserTokenManager: java.lang.String[] jjstrLiteralImages>",
            "$r10 = $r9[126]",
            "virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)",
            "$r12 = <org.javacc.jjtree.JJTreeParserTokenManager: java.lang.String[] jjstrLiteralImages>",
            "$r13 = $r12[126]",
            "$i2 = virtualinvoke $r13.<java.lang.String: int length()>()",
            "r0.<org.javacc.jjtree.JJTreeParserTokenManager: int lengthOfMatch> = $i2",
            "r6.<org.javacc.jjtree.Token: int kind> = 128",
            "$r14 = (org.javacc.jjtree.Token$GTToken) r6",
            "$r14.<org.javacc.jjtree.Token$GTToken: int realKind> = 126",
            "$r15 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: org.javacc.jjtree.JavaCharStream input_stream>",
            "virtualinvoke $r15.<org.javacc.jjtree.JavaCharStream: void backup(int)>(2)",
            "r6.<org.javacc.jjtree.Token: java.lang.String image> = \">\"",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPNodeFiles__jjtreeIncludeFile__1590037813\\338.smt2",
        "z3": {
            "memory": 31711232,
            "run_time": 0.07430791854858398,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var418 () String\r\n    \"A\")\r\n  (define-fun var2244 () String\r\n    (str.++ var3737!1 var418))\r\n  (define-fun var3000 () var3272\r\n    var3272-init)\r\n  (define-fun var2515 () var3272\r\n    var3016_getJJTreeOutputDirectory/-709711143)\r\n  (define-fun var1214 () String\r\n    (str.++ var3737!1 var418 \".h\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2437 () String\r\n    (str.++ var3737!1 var418 \".h\"))\r\n  (define-fun var2524 () String\r\n    (getAbsolutePath/-802773300 var3000!1))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3737 () String\r\n    String-init)\r\n  (define-fun var2244!1 () String\r\n    \"A.h\")\r\n  (define-fun var3737!2 () String\r\n    \"A\")\r\n  (define-fun var3737!1 () String\r\n    \"\")\r\n  (define-fun var3016_getJJTreeOutputDirectory/-709711143 () var3272\r\n    var3272!val!0)\r\n  (define-fun var2515!1 () var3272\r\n    var3272!val!0)\r\n  (define-fun var3000!1 () var3272\r\n    var3272!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3272-init () var3272\r\n    var3272!val!0)\r\n  (define-fun var2437!1 () String\r\n    \"\")\r\n  (define-fun getAbsolutePath/-802773300 ((x!0 var3272)) String\r\n    \"\")\r\n  (define-fun <init>/-1833447926 ((x!0 var3272) (x!1 var3272) (x!2 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 49 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.031177282333374023,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3424 is 1\r\n; rep: (as @var3424_0 var3424)\r\n; cardinality of var3272 is 1\r\n; rep: (as @var3272_0 var3272)\r\n; cardinality of var3016 is 1\r\n; rep: (as @var3016_0 var3016)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3272-init () var3272 (as @var3272_0 var3272))\r\n(define-fun var3016_getJJTreeOutputDirectory/-709711143 () var3272 (as @var3272_0 var3272))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1833447926 ((BOUND_VARIABLE_600 var3272) (BOUND_VARIABLE_601 var3272) (BOUND_VARIABLE_602 String)) void (as @void_0 void))\r\n(define-fun getAbsolutePath/-802773300 ((BOUND_VARIABLE_605 var3272)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun var418 () String \"\")\r\n(define-fun var3737!1 () String \"\")\r\n(define-fun var3737!2 () String \"\")\r\n(define-fun var2244!1 () String \".h\")\r\n(define-fun var3000!1 () var3272 (as @var3272_0 var3272))\r\n(define-fun var2515!1 () var3272 (as @var3272_0 var3272))\r\n(define-fun var2437!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36962304,
            "run_time": 0.14031004905700684,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3737!1 () String\n    \"\")\n  (define-fun var3737!2 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2244!1 () String\n    \"\\u{0}\\u{0}.h\")\n  (define-fun var2437 () String\n    (str.++ var3737!1 var418 \".h\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var418 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3000 () var3272\n    var3272-init)\n  (define-fun var3737 () String\n    String-init)\n  (define-fun var2244 () String\n    (str.++ var3737!1 var418))\n  (define-fun var2524 () String\n    (getAbsolutePath/-802773300 var3000!1))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1214 () String\n    (str.++ var3737!1 var418 \".h\"))\n  (define-fun var2515 () var3272\n    var3016_getJJTreeOutputDirectory/-709711143)\n  (define-fun var3016_getJJTreeOutputDirectory/-709711143 () var3272\n    var3272!val!0)\n  (define-fun var2515!1 () var3272\n    var3272!val!0)\n  (define-fun var3000!1 () var3272\n    var3272!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3272-init () var3272\n    var3272!val!0)\n  (define-fun var2437!1 () String\n    \"\")\n  (define-fun getAbsolutePath/-802773300 ((x!0 var3272)) String\n    \"\")\n  (define-fun <init>/-1833447926 ((x!0 var3272) (x!1 var3272) (x!2 String)) void\n    void!val!0)\n)\n(error \"line 49 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164995072,
            "run_time": 2.018792152404785,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2244!1 () String \".h\")\r\n  (define-fun var3737!2 () String \"\")\r\n  (define-fun var3737!1 () String \"\")\r\n  (define-fun var418 () String \"\")\r\n  (define-fun null-String () String \"h\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.String",
            "$r0 = new java.io.File",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.io.File getJJTreeOutputDirectory()>()",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".h\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r5)",
            "$r7 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.ASTNodeDescriptor__toString__376934213\\230.smt2",
        "z3": {
            "memory": 31531008,
            "run_time": 0.10215568542480469,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3068:\r\n  ;;   var3068!val!1 var3068!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3068!val!1 () var3068)\r\n  (declare-fun var3068!val!0 () var3068)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3068)) (or (= x var3068!val!1) (= x var3068!val!0)))\r\n  ;; -----------\r\n  (define-fun var3441 () String\r\n    (str.++ var3271!1 \"(faked) \" (name/-1689018267 var1450)))\r\n  (define-fun null-var3068 () var3068\r\n    var3068!val!1)\r\n  (define-fun var3648 () String\r\n    (name/-1689018267 var1450))\r\n  (define-fun var2930 () String\r\n    (str.++ var3271!1 \"(faked) \"))\r\n  (define-fun var291 () String\r\n    (str.++ var3271!1 \"(faked) \" (name/-1689018267 var1450)))\r\n  (define-fun var1450 () var3068\r\n    var3068!val!0)\r\n  (define-fun var3271 () String\r\n    String-init)\r\n  (define-fun var2541 () Bool\r\n    (faked/-1689018267 var1450))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3271!2 () String\r\n    \"(faked) \")\r\n  (define-fun var2930!1 () String\r\n    \"(faked) \")\r\n  (define-fun var3271!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun faked/-1689018267 ((x!0 var3068)) Bool\r\n    true)\r\n  (define-fun name/-1689018267 ((x!0 var3068)) String\r\n    \"\")\r\n)\r\n(error \"line 39 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1654784,
            "run_time": 0.030230998992919922,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3068 is 2\r\n; rep: (as @var3068_0 var3068)\r\n; rep: (as @var3068_1 var3068)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun faked/-1689018267 ((_arg_1 var3068)) Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun name/-1689018267 ((BOUND_VARIABLE_548 var3068)) String \"\")\r\n(define-fun null-var3068 () var3068 (as @var3068_0 var3068))\r\n(define-fun var1450 () var3068 (as @var3068_1 var3068))\r\n(define-fun var3271!1 () String \"\")\r\n(define-fun var3271!2 () String \"(faked) \")\r\n(define-fun var2930!1 () String \"(faked) \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36077568,
            "run_time": 0.13803386688232422,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3068:\n  ;;   var3068!val!1 var3068!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3068!val!1 () var3068)\n  (declare-fun var3068!val!0 () var3068)\n  ;; cardinality constraint:\n  (forall ((x var3068)) (or (= x var3068!val!1) (= x var3068!val!0)))\n  ;; -----------\n  (define-fun null-var3068 () var3068\n    var3068!val!1)\n  (define-fun var3271 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1450 () var3068\n    var3068!val!0)\n  (define-fun var2541 () Bool\n    (faked/-1689018267 var1450))\n  (define-fun var3441 () String\n    (str.++ var3271!1 \"(faked) \" (name/-1689018267 var1450)))\n  (define-fun var3648 () String\n    (name/-1689018267 var1450))\n  (define-fun var2930 () String\n    (str.++ var3271!1 \"(faked) \"))\n  (define-fun var291 () String\n    (str.++ var3271!1 \"(faked) \" (name/-1689018267 var1450)))\n  (define-fun var3271!2 () String\n    \"(faked) \")\n  (define-fun var2930!1 () String\n    \"(faked) \")\n  (define-fun var3271!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun faked/-1689018267 ((x!0 var3068)) Bool\n    true)\n  (define-fun name/-1689018267 ((x!0 var3068)) String\n    \"\")\n)\n(error \"line 39 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 162029568,
            "run_time": 1.6629374027252197,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3068/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.ASTNodeDescriptor__toString__376934213\\230.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2930!1 =\r\n     concat(\"(faked) \", all_15_3)\r\n\r\n1239ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjtree.ASTNodeDescriptor",
            "$z0 = r0.<org.javacc.jjtree.ASTNodeDescriptor: boolean faked>",
            "if $z0 == 0 goto $r1 = new java.lang.StringBuilder",
            "$r8 = new java.lang.StringBuilder",
            "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(faked) \")",
            "$r9 = r0.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String name>",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r12"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JavaCharStream__GetImage__590875749\\1252.smt2",
        "z3": {
            "memory": 32260096,
            "run_time": 0.16416716575622559,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var681:\r\n  ;;   var681!val!1 var681!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var681!val!1 () var681)\r\n  (declare-fun var681!val!0 () var681)\r\n  ;; cardinality constraint:\r\n  (forall ((x var681)) (or (= x var681!val!1) (= x var681!val!0)))\r\n  ;; -----------\r\n  (define-fun var1826 () String\r\n    String-init)\r\n  (define-fun var3216 () String\r\n    (str.++ var1509!1 var1826!1 var522!1))\r\n  (define-fun var376 () Int\r\n    (tokenBegin/-623079098 var1163))\r\n  (define-fun var3314 () (Array Int Int)\r\n    (buffer/-623079098 var1163))\r\n  (define-fun var759 () Int\r\n    (- (bufsize/-623079098 var1163) (tokenBegin/-623079098 var1163)))\r\n  (define-fun var456 () String\r\n    (str.++ var1509!1 var1826!1 var522!1))\r\n  (define-fun var1601 () Int\r\n    (bufsize/-623079098 var1163))\r\n  (define-fun null-var681 () var681\r\n    var681!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1433 () String\r\n    (str.++ var1509!1 var1826!1))\r\n  (define-fun var2745 () Int\r\n    (tokenBegin/-623079098 var1163))\r\n  (define-fun var2845 () Int\r\n    (bufpos/-623079098 var1163))\r\n  (define-fun var1163 () var681\r\n    var681!val!0)\r\n  (define-fun var491 () Int\r\n    (tokenBegin/-623079098 var1163))\r\n  (define-fun var522 () String\r\n    String-init)\r\n  (define-fun var1509 () String\r\n    String-init)\r\n  (define-fun var1594 () (Array Int Int)\r\n    (buffer/-623079098 var1163))\r\n  (define-fun var3829 () Int\r\n    (bufpos/-623079098 var1163))\r\n  (define-fun var2512 () Int\r\n    (+ (bufpos/-623079098 var1163) 1))\r\n  (define-fun var1826!1 () String\r\n    \"\")\r\n  (define-fun var522!1 () String\r\n    \"\")\r\n  (define-fun var1433!1 () String\r\n    \"\")\r\n  (define-fun var1509!1 () String\r\n    \"\")\r\n  (define-fun var1509!2 () String\r\n    \"\")\r\n  (define-fun var685 () Int\r\n    0)\r\n  (define-fun var1594!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var2512!1 () Int\r\n    0)\r\n  (define-fun var3314!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var491!1 () Int\r\n    0)\r\n  (define-fun var759!1 () Int\r\n    0)\r\n  (define-fun bufpos/-623079098 ((x!0 var681)) Int\r\n    0)\r\n  (define-fun tokenBegin/-623079098 ((x!0 var681)) Int\r\n    1)\r\n  (define-fun bufsize/-623079098 ((x!0 var681)) Int\r\n    0)\r\n  (define-fun buffer/-623079098 ((x!0 var681)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 66 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.046317338943481445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var681 is 2\r\n; rep: (as @var681_0 var681)\r\n; rep: (as @var681_1 var681)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun bufpos/-623079098 ((_arg_1 var681)) Int (- 1))\r\n(define-fun tokenBegin/-623079098 ((_arg_1 var681)) Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun buffer/-623079098 ((BOUND_VARIABLE_592 var681)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun bufsize/-623079098 ((BOUND_VARIABLE_597 var681)) Int 0)\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_600 String) (BOUND_VARIABLE_601 (Array Int Int)) (BOUND_VARIABLE_602 Int) (BOUND_VARIABLE_603 Int)) void (as @void_0 void))\r\n(define-fun null-var681 () var681 (as @var681_0 var681))\r\n(define-fun var1163 () var681 (as @var681_1 var681))\r\n(define-fun var1509!1 () String \"\")\r\n(define-fun var1826!1 () String \"\")\r\n(define-fun var3314!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var491!1 () Int 0)\r\n(define-fun var759!1 () Int 0)\r\n(define-fun var1509!2 () String \"\")\r\n(define-fun var522!1 () String \"\")\r\n(define-fun var1594!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var685 () Int 0)\r\n(define-fun var2512!1 () Int 0)\r\n(define-fun var1433!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36360192,
            "run_time": 0.15607929229736328,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var681:\n  ;;   var681!val!1 var681!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var681!val!1 () var681)\n  (declare-fun var681!val!0 () var681)\n  ;; cardinality constraint:\n  (forall ((x var681)) (or (= x var681!val!1) (= x var681!val!0)))\n  ;; -----------\n  (define-fun var2745 () Int\n    (tokenBegin/-623079098 var1163))\n  (define-fun var2845 () Int\n    (bufpos/-623079098 var1163))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var491 () Int\n    (tokenBegin/-623079098 var1163))\n  (define-fun var1594 () (Array Int Int)\n    (buffer/-623079098 var1163))\n  (define-fun null-var681 () var681\n    var681!val!1)\n  (define-fun var1433 () String\n    (str.++ var1509!1 var1826!1))\n  (define-fun var3314 () (Array Int Int)\n    (buffer/-623079098 var1163))\n  (define-fun var522 () String\n    String-init)\n  (define-fun var1163 () var681\n    var681!val!0)\n  (define-fun var3829 () Int\n    (bufpos/-623079098 var1163))\n  (define-fun var1509 () String\n    String-init)\n  (define-fun var2512 () Int\n    (+ (bufpos/-623079098 var1163) 1))\n  (define-fun var376 () Int\n    (tokenBegin/-623079098 var1163))\n  (define-fun var759 () Int\n    (- (bufsize/-623079098 var1163) (tokenBegin/-623079098 var1163)))\n  (define-fun var1601 () Int\n    (bufsize/-623079098 var1163))\n  (define-fun var1826 () String\n    String-init)\n  (define-fun var3216 () String\n    (str.++ var1509!1 var1826!1 var522!1))\n  (define-fun var456 () String\n    (str.++ var1509!1 var1826!1 var522!1))\n  (define-fun var1826!1 () String\n    \"\")\n  (define-fun var522!1 () String\n    \"\")\n  (define-fun var1433!1 () String\n    \"\")\n  (define-fun var1509!1 () String\n    \"\")\n  (define-fun var1509!2 () String\n    \"\")\n  (define-fun var685 () Int\n    0)\n  (define-fun var1594!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var2512!1 () Int\n    0)\n  (define-fun var3314!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var491!1 () Int\n    0)\n  (define-fun var759!1 () Int\n    0)\n  (define-fun bufpos/-623079098 ((x!0 var681)) Int\n    0)\n  (define-fun tokenBegin/-623079098 ((x!0 var681)) Int\n    1)\n  (define-fun bufsize/-623079098 ((x!0 var681)) Int\n    0)\n  (define-fun buffer/-623079098 ((x!0 var681)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 66 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 170921984,
            "run_time": 1.7726373672485352,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var681/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JavaCharStream__GetImage__590875749\\1252.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1433!1 =\r\n     concat(var1826!1, var522!1)\r\n\r\n1375ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.String: void <init>(char[],int,int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: void <init>(char[],int,int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.String: void <init>(char[],int,int)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjtree.JavaCharStream",
            "$i1 = r0.<org.javacc.jjtree.JavaCharStream: int bufpos>",
            "$i0 = r0.<org.javacc.jjtree.JavaCharStream: int tokenBegin>",
            "if $i1 < $i0 goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = new java.lang.String",
            "$r3 = r0.<org.javacc.jjtree.JavaCharStream: char[] buffer>",
            "$i5 = r0.<org.javacc.jjtree.JavaCharStream: int tokenBegin>",
            "$i3 = r0.<org.javacc.jjtree.JavaCharStream: int bufsize>",
            "$i2 = r0.<org.javacc.jjtree.JavaCharStream: int tokenBegin>",
            "$i4 = $i3 - $i2",
            "specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r3, $i5, $i4)",
            "$r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r4 = new java.lang.String",
            "$r5 = r0.<org.javacc.jjtree.JavaCharStream: char[] buffer>",
            "$i6 = r0.<org.javacc.jjtree.JavaCharStream: int bufpos>",
            "$i7 = $i6 + 1",
            "specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>($r5, 0, $i7)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjdoc.TextGenerator__create_output_stream__1597595382\\404.smt2",
        "z3": {
            "memory": 31977472,
            "run_time": 0.1676034927368164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3349:\r\n  ;;   var3349!val!1 var3349!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3349!val!1 () var3349)\r\n  (declare-fun var3349!val!0 () var3349)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3349)) (or (= x var3349!val!1) (= x var3349!val!0)))\r\n  ;; -----------\r\n  (define-fun var3458 () var3349\r\n    var3349!val!0)\r\n  (define-fun var3987 () var3254\r\n    var3254-init)\r\n  (define-fun var1394 () String\r\n    var2322_getOutputFile/-943424739)\r\n  (define-fun var2374 () String\r\n    var2199-input_file)\r\n  (define-fun var1908 () var2671\r\n    var2671-init)\r\n  (define-fun null-var3349 () var3349\r\n    var3349!val!1)\r\n  (define-fun var2401 () Bool\r\n    (= var2199-input_file \"standard input\"))\r\n  (define-fun var2270 () var2594\r\n    var2531-out)\r\n  (define-fun var2428 () Bool\r\n    (= var2322_getOutputFile/-943424739 \"\"))\r\n  (define-fun var2199-input_file () String\r\n    \"standard input\")\r\n  (define-fun var2322_getOutputFile/-943424739 () String\r\n    \"\")\r\n  (define-fun var3987!1 () var3254\r\n    var3254!val!0)\r\n  (define-fun var3254-init () var3254\r\n    var3254!val!0)\r\n  (define-fun var1908!1 () var2671\r\n    var2671!val!0)\r\n  (define-fun var2270!1 () var2594\r\n    var2594!val!0)\r\n  (define-fun var3987!2 () var3254\r\n    var3254!val!0)\r\n  (define-fun var2671-init () var2671\r\n    var2671!val!0)\r\n  (define-fun var2531-out () var2594\r\n    var2594!val!0)\r\n  (define-fun <init>/-1864438596 ((x!0 var2671) (x!1 var3170)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var2594-to-var456 ((x!0 var2594)) var456\r\n    var456!val!0)\r\n  (define-fun <init>/-1119342706 ((x!0 var3254) (x!1 var456)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var3254-to-var3170 ((x!0 var3254)) var3170\r\n    var3170!val!0)\r\n)\r\n(error \"line 54 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 4648960,
            "run_time": 0.029773950576782227,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3349 is 2\r\n; rep: (as @var3349_0 var3349)\r\n; rep: (as @var3349_1 var3349)\r\n; cardinality of var2322 is 1\r\n; rep: (as @var2322_0 var2322)\r\n; cardinality of var2199 is 1\r\n; rep: (as @var2199_0 var2199)\r\n; cardinality of var2671 is 1\r\n; rep: (as @var2671_0 var2671)\r\n; cardinality of var3254 is 1\r\n; rep: (as @var3254_0 var3254)\r\n; cardinality of var2594 is 1\r\n; rep: (as @var2594_0 var2594)\r\n; cardinality of var2531 is 1\r\n; rep: (as @var2531_0 var2531)\r\n; cardinality of var456 is 1\r\n; rep: (as @var456_0 var456)\r\n; cardinality of var3170 is 1\r\n; rep: (as @var3170_0 var3170)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2322_getOutputFile/-943424739 () String \"\")\r\n(define-fun var2671-init () var2671 (as @var2671_0 var2671))\r\n(define-fun var3254-init () var3254 (as @var3254_0 var3254))\r\n(define-fun <init>/-1119342706 ((BOUND_VARIABLE_616 var3254) (BOUND_VARIABLE_617 var456)) void (as @void_0 void))\r\n(define-fun cast-from-var2594-to-var456 ((BOUND_VARIABLE_620 var2594)) var456 (as @var456_0 var456))\r\n(define-fun <init>/-1864438596 ((BOUND_VARIABLE_623 var2671) (BOUND_VARIABLE_624 var3170)) void (as @void_0 void))\r\n(define-fun cast-from-var3254-to-var3170 ((BOUND_VARIABLE_627 var3254)) var3170 (as @var3170_0 var3170))\r\n(define-fun null-var3349 () var3349 (as @var3349_0 var3349))\r\n(define-fun var2199-input_file () String \"standard input\")\r\n(define-fun var2531-out () var2594 (as @var2594_0 var2594))\r\n(define-fun var3458 () var3349 (as @var3349_1 var3349))\r\n(define-fun var3987!1 () var3254 (as @var3254_0 var3254))\r\n(define-fun var2270!1 () var2594 (as @var2594_0 var2594))\r\n(define-fun var1908!1 () var2671 (as @var2671_0 var2671))\r\n(define-fun var3987!2 () var3254 (as @var3254_0 var3254))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36659200,
            "run_time": 0.12138223648071289,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3349:\n  ;;   var3349!val!1 var3349!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3349!val!1 () var3349)\n  (declare-fun var3349!val!0 () var3349)\n  ;; cardinality constraint:\n  (forall ((x var3349)) (or (= x var3349!val!1) (= x var3349!val!0)))\n  ;; -----------\n  (define-fun var2401 () Bool\n    (= var2199-input_file \"standard input\"))\n  (define-fun var2270 () var2594\n    var2531-out)\n  (define-fun var1394 () String\n    var2322_getOutputFile/-943424739)\n  (define-fun var3458 () var3349\n    var3349!val!0)\n  (define-fun var2428 () Bool\n    (= var2322_getOutputFile/-943424739 \"\"))\n  (define-fun var2374 () String\n    var2199-input_file)\n  (define-fun var3987 () var3254\n    var3254-init)\n  (define-fun null-var3349 () var3349\n    var3349!val!1)\n  (define-fun var1908 () var2671\n    var2671-init)\n  (define-fun var2199-input_file () String\n    \"standard input\")\n  (define-fun var2322_getOutputFile/-943424739 () String\n    \"\")\n  (define-fun var3987!1 () var3254\n    var3254!val!0)\n  (define-fun var3254-init () var3254\n    var3254!val!0)\n  (define-fun var1908!1 () var2671\n    var2671!val!0)\n  (define-fun var2270!1 () var2594\n    var2594!val!0)\n  (define-fun var3987!2 () var3254\n    var3254!val!0)\n  (define-fun var2671-init () var2671\n    var2671!val!0)\n  (define-fun var2531-out () var2594\n    var2594!val!0)\n  (define-fun <init>/-1864438596 ((x!0 var2671) (x!1 var3170)) void\n    void!val!0)\n  (define-fun cast-from-var2594-to-var456 ((x!0 var2594)) var456\n    var456!val!0)\n  (define-fun <init>/-1119342706 ((x!0 var3254) (x!1 var456)) void\n    void!val!0)\n  (define-fun cast-from-var3254-to-var3170 ((x!0 var3254)) var3170\n    var3170!val!0)\n)\n(error \"line 54 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153022464,
            "run_time": 1.5733659267425537,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3458 () var3349 var3349!4)\r\n  (define-fun var2199-input_file () String \"standard input\")\r\n  (define-fun null-var3349 () var3349 var3349!2)\r\n  (define-fun var2322_getOutputFile/-943424739 () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 2
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.jjdoc.TextGenerator",
            "$r0 = staticinvoke <org.javacc.jjdoc.JJDocOptions: java.lang.String getOutputFile()>()",
            "$z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 == 0 goto $r1 = staticinvoke <org.javacc.jjdoc.JJDocOptions: java.lang.String getOutputFile()>()",
            "$r7 = <org.javacc.jjdoc.JJDocGlobals: java.lang.String input_file>",
            "$z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(\"standard input\")",
            "if $z1 == 0 goto r39 = \".html\"",
            "$r46 = new java.io.PrintWriter",
            "$r45 = new java.io.OutputStreamWriter",
            "$r28 = <java.lang.System: java.io.PrintStream out>",
            "specialinvoke $r45.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r28)",
            "specialinvoke $r46.<java.io.PrintWriter: void <init>(java.io.Writer)>($r45)",
            "return $r46"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.ASTBNF__toString__-1913713698\\15.smt2",
        "z3": {
            "memory": 31809536,
            "run_time": 0.09884095191955566,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1498:\r\n  ;;   var1498!val!0 var1498!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1498!val!0 () var1498)\r\n  (declare-fun var1498!val!1 () var1498)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1498)) (or (= x var1498!val!0) (= x var1498!val!1)))\r\n  ;; -----------\r\n  (define-fun var3952 () String\r\n    (str.++ var3082!1\r\n        (toString/2055603450 (cast-from-var1498-to-var2579 var3983))\r\n        \": \"))\r\n  (define-fun var355 () String\r\n    (str.++ var3082!1 (toString/2055603450 (cast-from-var1498-to-var2579 var3983))))\r\n  (define-fun var1679 () String\r\n    (name/-165013491 (cast-from-var1498-to-var1347 var3983)))\r\n  (define-fun var1565 () String\r\n    (str.++ var3082!1\r\n        (toString/2055603450 (cast-from-var1498-to-var2579 var3983))\r\n        \": \"\r\n        (name/-165013491 (cast-from-var1498-to-var1347 var3983))))\r\n  (define-fun var1600 () String\r\n    (str.++ var3082!1\r\n        (toString/2055603450 (cast-from-var1498-to-var2579 var3983))\r\n        \": \"\r\n        (name/-165013491 (cast-from-var1498-to-var1347 var3983))))\r\n  (define-fun var3082 () String\r\n    String-init)\r\n  (define-fun null-var1498 () var1498\r\n    var1498!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3983 () var1498\r\n    var1498!val!0)\r\n  (define-fun var2546 () String\r\n    (toString/2055603450 (cast-from-var1498-to-var2579 var3983)))\r\n  (define-fun var3952!1 () String\r\n    \": \")\r\n  (define-fun var355!1 () String\r\n    \": \")\r\n  (define-fun var3082!1 () String\r\n    \"\")\r\n  (define-fun var3082!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var1498-to-var2579 ((x!0 var1498)) var2579\r\n    var2579!val!0)\r\n  (define-fun toString/2055603450 ((x!0 var2579)) String\r\n    \"\")\r\n  (define-fun cast-from-var1498-to-var1347 ((x!0 var1498)) var1347\r\n    var1347!val!0)\r\n  (define-fun name/-165013491 ((x!0 var1347)) String\r\n    \"\")\r\n)\r\n(error \"line 46 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 4726784,
            "run_time": 0.03102397918701172,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1498 is 2\r\n; rep: (as @var1498_0 var1498)\r\n; rep: (as @var1498_1 var1498)\r\n; cardinality of var2579 is 1\r\n; rep: (as @var2579_0 var2579)\r\n; cardinality of var1347 is 1\r\n; rep: (as @var1347_0 var1347)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun toString/2055603450 ((BOUND_VARIABLE_545 var2579)) String \"\")\r\n(define-fun cast-from-var1498-to-var2579 ((BOUND_VARIABLE_548 var1498)) var2579 (as @var2579_0 var2579))\r\n(define-fun name/-165013491 ((BOUND_VARIABLE_551 var1347)) String \"\")\r\n(define-fun cast-from-var1498-to-var1347 ((BOUND_VARIABLE_554 var1498)) var1347 (as @var1347_0 var1347))\r\n(define-fun null-var1498 () var1498 (as @var1498_0 var1498))\r\n(define-fun var3983 () var1498 (as @var1498_1 var1498))\r\n(define-fun var3082!1 () String \"\")\r\n(define-fun var3082!2 () String \"\")\r\n(define-fun var355!1 () String \": \")\r\n(define-fun var3952!1 () String \": \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36212736,
            "run_time": 0.14068818092346191,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1498:\n  ;;   var1498!val!0 var1498!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1498!val!0 () var1498)\n  (declare-fun var1498!val!1 () var1498)\n  ;; cardinality constraint:\n  (forall ((x var1498)) (or (= x var1498!val!0) (= x var1498!val!1)))\n  ;; -----------\n  (define-fun var1565 () String\n    (str.++ var3082!1\n        (toString/2055603450 (cast-from-var1498-to-var2579 var3983))\n        \": \"\n        (name/-165013491 (cast-from-var1498-to-var1347 var3983))))\n  (define-fun var3082 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2546 () String\n    (toString/2055603450 (cast-from-var1498-to-var2579 var3983)))\n  (define-fun null-var1498 () var1498\n    var1498!val!1)\n  (define-fun var3983 () var1498\n    var1498!val!0)\n  (define-fun var3952 () String\n    (str.++ var3082!1\n        (toString/2055603450 (cast-from-var1498-to-var2579 var3983))\n        \": \"))\n  (define-fun var1600 () String\n    (str.++ var3082!1\n        (toString/2055603450 (cast-from-var1498-to-var2579 var3983))\n        \": \"\n        (name/-165013491 (cast-from-var1498-to-var1347 var3983))))\n  (define-fun var355 () String\n    (str.++ var3082!1 (toString/2055603450 (cast-from-var1498-to-var2579 var3983))))\n  (define-fun var1679 () String\n    (name/-165013491 (cast-from-var1498-to-var1347 var3983)))\n  (define-fun var3952!1 () String\n    \": \")\n  (define-fun var355!1 () String\n    \": \")\n  (define-fun var3082!1 () String\n    \"\")\n  (define-fun var3082!2 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun cast-from-var1498-to-var2579 ((x!0 var1498)) var2579\n    var2579!val!0)\n  (define-fun toString/2055603450 ((x!0 var2579)) String\n    \"\")\n  (define-fun cast-from-var1498-to-var1347 ((x!0 var1498)) var1347\n    var1347!val!0)\n  (define-fun name/-165013491 ((x!0 var1347)) String\n    \"\")\n)\n(error \"line 46 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166604800,
            "run_time": 1.802819013595581,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1498/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.ASTBNF__toString__-1913713698\\15.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3952!1 =\r\n     concat(all_22_6, all_22_4)\r\n   var355!1 =\r\n     concat(var3082!2, \": \")\r\n   all_22_6 =\r\n     concat(var3082!2, \": \")\r\n\r\n1397ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<org.javacc.jjtree.SimpleNode: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.jjtree.ASTBNF",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = specialinvoke r1.<org.javacc.jjtree.ASTProduction: java.lang.String toString()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")",
            "$r4 = r1.<org.javacc.jjtree.ASTBNF: java.lang.String name>",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__insertCloseNodeAction__1501857952\\769.smt2",
        "z3": {
            "memory": 31641600,
            "run_time": 0.10308623313903809,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3234:\r\n  ;;   var3234!val!0 var3234!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3234!val!0 () var3234)\r\n  (declare-fun var3234!val!1 () var3234)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3234)) (or (= x var3234!val!0) (= x var3234!val!1)))\r\n  ;; -----------\r\n  ;; universe for var937:\r\n  ;;   var937!val!0 var937!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var937!val!0 () var937)\r\n  (declare-fun var937!val!1 () var937)\r\n  ;; cardinality constraint:\r\n  (forall ((x var937)) (or (= x var937!val!0) (= x var937!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1503:\r\n  ;;   var1503!val!0 var1503!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1503!val!0 () var1503)\r\n  (declare-fun var1503!val!1 () var1503)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1503)) (or (= x var1503!val!0) (= x var1503!val!1)))\r\n  ;; -----------\r\n  (define-fun var1285 () String\r\n    String-init)\r\n  (define-fun var3311 () String\r\n    String-init)\r\n  (define-fun var1053 () String\r\n    (str.++ var3311!1 var2567 \"{\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var380 () String\r\n    (str.++ var1285!1 var2567 \"}\"))\r\n  (define-fun var676 () var1503\r\n    var1503!val!0)\r\n  (define-fun var2790 () var3234\r\n    var3234!val!0)\r\n  (define-fun null-var1503 () var1503\r\n    var1503!val!1)\r\n  (define-fun null-var3234 () var3234\r\n    var3234!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3920 () String\r\n    (str.++ var3311!1 var2567 \"{\"))\r\n  (define-fun var2383 () String\r\n    (str.++ var2030!1 var2567))\r\n  (define-fun var932 () String\r\n    (str.++ var2030!1 var2567 \"  \"))\r\n  (define-fun var1990 () String\r\n    (str.++ var3311!1 var2567))\r\n  (define-fun var2030 () String\r\n    String-init)\r\n  (define-fun null-var937 () var937\r\n    var937!val!1)\r\n  (define-fun var2030!2 () String\r\n    \"A\")\r\n  (define-fun var3900 () var937\r\n    var937!val!0)\r\n  (define-fun var834 () String\r\n    (str.++ var2030!1 var2567 \"  \"))\r\n  (define-fun var3286 () String\r\n    (str.++ var1285!1 var2567))\r\n  (define-fun var3223 () String\r\n    (str.++ var1285!1 var2567 \"}\"))\r\n  (define-fun var2030!1 () String\r\n    \"\")\r\n  (define-fun var3311!2 () String\r\n    \"A\")\r\n  (define-fun var2567 () String\r\n    \"A\")\r\n  (define-fun var1285!1 () String\r\n    \"\")\r\n  (define-fun var2383!1 () String\r\n    \"A  \")\r\n  (define-fun var3311!1 () String\r\n    \"\")\r\n  (define-fun var3286!1 () String\r\n    \"A}\")\r\n  (define-fun var1285!2 () String\r\n    \"A\")\r\n  (define-fun var1990!1 () String\r\n    \"A{\")\r\n  (define-fun var2790!3 () var3234\r\n    var3234!val!0)\r\n  (define-fun var3223!1 () String\r\n    \"\")\r\n  (define-fun var834!1 () String\r\n    \"\")\r\n  (define-fun var3900!1 () var937\r\n    var937!val!0)\r\n  (define-fun var2790!1 () var3234\r\n    var3234!val!0)\r\n  (define-fun var676!1 () var1503\r\n    var1503!val!0)\r\n  (define-fun var3274 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2790!2 () var3234\r\n    var3234!val!0)\r\n  (define-fun var3920!1 () String\r\n    \"\")\r\n  (define-fun insertCloseNodeCode/1158645843 ((x!0 var1503)\r\n   (x!1 var937)\r\n   (x!2 var3234)\r\n   (x!3 String)\r\n   (x!4 Bool)) void\r\n    void!val!0)\r\n  (define-fun println/1333914633 ((x!0 var3234) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 95 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.02962470054626465,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1503 is 2\r\n; rep: (as @var1503_0 var1503)\r\n; rep: (as @var1503_1 var1503)\r\n; cardinality of var937 is 2\r\n; rep: (as @var937_0 var937)\r\n; rep: (as @var937_1 var937)\r\n; cardinality of var3234 is 2\r\n; rep: (as @var3234_0 var3234)\r\n; rep: (as @var3234_1 var3234)\r\n; cardinality of var2693 is 1\r\n; rep: (as @var2693_0 var2693)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_743 var3234) (BOUND_VARIABLE_744 String)) void (as @void_0 void))\r\n(define-fun insertCloseNodeCode/1158645843 ((BOUND_VARIABLE_747 var1503) (BOUND_VARIABLE_748 var937) (BOUND_VARIABLE_749 var3234) (BOUND_VARIABLE_750 String) (BOUND_VARIABLE_751 Bool)) void (as @void_0 void))\r\n(define-fun null-var1503 () var1503 (as @var1503_0 var1503))\r\n(define-fun null-var937 () var937 (as @var937_0 var937))\r\n(define-fun null-var3234 () var3234 (as @var3234_0 var3234))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var676 () var1503 (as @var1503_1 var1503))\r\n(define-fun var3900 () var937 (as @var937_1 var937))\r\n(define-fun var2790 () var3234 (as @var3234_1 var3234))\r\n(define-fun var2567 () String \"\")\r\n(define-fun var3311!1 () String \"\")\r\n(define-fun var3311!2 () String \"\")\r\n(define-fun var1990!1 () String \"{\")\r\n(define-fun var2790!1 () var3234 (as @var3234_0 var3234))\r\n(define-fun var3920!1 () String \"\")\r\n(define-fun var2030!1 () String \"\")\r\n(define-fun var2030!2 () String \"\")\r\n(define-fun var2383!1 () String \"  \")\r\n(define-fun var676!1 () var1503 (as @var1503_0 var1503))\r\n(define-fun var3900!1 () var937 (as @var937_0 var937))\r\n(define-fun var2790!2 () var3234 (as @var3234_0 var3234))\r\n(define-fun var834!1 () String \"\")\r\n(define-fun var3274 () Int 0)\r\n(define-fun var1285!1 () String \"\")\r\n(define-fun var1285!2 () String \"\")\r\n(define-fun var3286!1 () String \"}\")\r\n(define-fun var2790!3 () var3234 (as @var3234_0 var3234))\r\n(define-fun var3223!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37007360,
            "run_time": 0.17002034187316895,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3234:\n  ;;   var3234!val!0 var3234!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3234!val!0 () var3234)\n  (declare-fun var3234!val!1 () var3234)\n  ;; cardinality constraint:\n  (forall ((x var3234)) (or (= x var3234!val!0) (= x var3234!val!1)))\n  ;; -----------\n  ;; universe for var937:\n  ;;   var937!val!0 var937!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var937!val!0 () var937)\n  (declare-fun var937!val!1 () var937)\n  ;; cardinality constraint:\n  (forall ((x var937)) (or (= x var937!val!0) (= x var937!val!1)))\n  ;; -----------\n  ;; universe for var1503:\n  ;;   var1503!val!0 var1503!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1503!val!0 () var1503)\n  (declare-fun var1503!val!1 () var1503)\n  ;; cardinality constraint:\n  (forall ((x var1503)) (or (= x var1503!val!0) (= x var1503!val!1)))\n  ;; -----------\n  (define-fun var3311!1 () String\n    \"\")\n  (define-fun var2383!1 () String\n    \"\\u{0}  \")\n  (define-fun var2030!2 () String\n    \"\\u{0}\")\n  (define-fun var1285!1 () String\n    \"\")\n  (define-fun var2567 () String\n    \"\\u{0}\")\n  (define-fun var3311!2 () String\n    \"\\u{0}\")\n  (define-fun var2030!1 () String\n    \"\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3920 () String\n    (str.++ var3311!1 var2567 \"{\"))\n  (define-fun var932 () String\n    (str.++ var2030!1 var2567 \"  \"))\n  (define-fun null-var3234 () var3234\n    var3234!val!1)\n  (define-fun var2030 () String\n    String-init)\n  (define-fun var1990!1 () String\n    \"\\u{0}{\")\n  (define-fun var1285!2 () String\n    \"\\u{0}\")\n  (define-fun var3286!1 () String\n    \"\\u{0}}\")\n  (define-fun var834 () String\n    (str.++ var2030!1 var2567 \"  \"))\n  (define-fun var3311 () String\n    String-init)\n  (define-fun var3223 () String\n    (str.++ var1285!1 var2567 \"}\"))\n  (define-fun var1285 () String\n    String-init)\n  (define-fun var2383 () String\n    (str.++ var2030!1 var2567))\n  (define-fun var3900 () var937\n    var937!val!0)\n  (define-fun var1053 () String\n    (str.++ var3311!1 var2567 \"{\"))\n  (define-fun var3286 () String\n    (str.++ var1285!1 var2567))\n  (define-fun null-var937 () var937\n    var937!val!1)\n  (define-fun var380 () String\n    (str.++ var1285!1 var2567 \"}\"))\n  (define-fun var1990 () String\n    (str.++ var3311!1 var2567))\n  (define-fun var2790 () var3234\n    var3234!val!0)\n  (define-fun var676 () var1503\n    var1503!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var1503 () var1503\n    var1503!val!1)\n  (define-fun var2790!3 () var3234\n    var3234!val!0)\n  (define-fun var3223!1 () String\n    \"\")\n  (define-fun var834!1 () String\n    \"\")\n  (define-fun var3900!1 () var937\n    var937!val!0)\n  (define-fun var2790!1 () var3234\n    var3234!val!0)\n  (define-fun var676!1 () var1503\n    var1503!val!0)\n  (define-fun var3274 () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2790!2 () var3234\n    var3234!val!0)\n  (define-fun var3920!1 () String\n    \"\")\n  (define-fun insertCloseNodeCode/1158645843 ((x!0 var1503)\n   (x!1 var937)\n   (x!2 var3234)\n   (x!3 String)\n   (x!4 Bool)) void\n    void!val!0)\n  (define-fun println/1333914633 ((x!0 var3234) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 95 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176705536,
            "run_time": 1.8211581707000732,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1503/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPCodeGenerator__insertCloseNodeAction__1501857952\\769.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3286!1 =\r\n     concat(var2567, \"}\")\r\n   var2383!1 =\r\n     concat(var2567, \"  \")\r\n   var1990!1 =\r\n     concat(var2567, \"{\")\r\n\r\n1418ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 28,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r6 := @this: org.javacc.jjtree.CPPCodeGenerator",
            "r7 := @parameter0: org.javacc.jjtree.NodeScope",
            "r0 := @parameter1: org.javacc.jjtree.IO",
            "r2 := @parameter2: java.lang.String",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"{\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r5)",
            "$r8 = new java.lang.StringBuilder",
            "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  \")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r6.<org.javacc.jjtree.CPPCodeGenerator: void insertCloseNodeCode(org.javacc.jjtree.NodeScope,org.javacc.jjtree.IO,java.lang.String,boolean)>(r7, r0, $r11, 0)",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"}\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r15)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JJTreeState__insertParserMembers__-1369758067\\311.smt2",
        "z3": {
            "memory": 32174080,
            "run_time": 0.11971426010131836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1545:\r\n  ;;   var1545!val!1 var1545!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1545!val!1 () var1545)\r\n  (declare-fun var1545!val!0 () var1545)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1545)) (or (= x var1545!val!1) (= x var1545!val!0)))\r\n  ;; -----------\r\n  (define-fun var1463 () String\r\n    (str.++ var3706!1\r\n        \"  protected \"\r\n        \"static \"\r\n        var17_nameState/428850403\r\n        \" jjtree = new \"\r\n        var17_nameState/428850403\r\n        \"();\"))\r\n  (define-fun var3381 () String\r\n    \"static \")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3721 () Bool\r\n    var1008_getStatic/-616544340)\r\n  (define-fun var219 () String\r\n    (str.++ var3706!1\r\n        \"  protected \"\r\n        \"static \"\r\n        var17_nameState/428850403\r\n        \" jjtree = new \"))\r\n  (define-fun var3706 () String\r\n    String-init)\r\n  (define-fun null-var1545 () var1545\r\n    var1545!val!1)\r\n  (define-fun var2036 () String\r\n    var17_nameState/428850403)\r\n  (define-fun var1750 () String\r\n    (str.++ var3706!1\r\n        \"  protected \"\r\n        \"static \"\r\n        var17_nameState/428850403\r\n        \" jjtree = new \"\r\n        var17_nameState/428850403))\r\n  (define-fun var2244 () String\r\n    (str.++ var3706!1 \"  protected \" \"static \"))\r\n  (define-fun var2048 () String\r\n    var17_nameState/428850403)\r\n  (define-fun var1899 () var1545\r\n    var1545!val!0)\r\n  (define-fun var1737 () String\r\n    (str.++ var3706!1 \"  protected \" \"static \" var17_nameState/428850403))\r\n  (define-fun var1690 () String\r\n    (str.++ var3706!1 \"  protected \"))\r\n  (define-fun var3111 () String\r\n    (str.++ var3706!1\r\n        \"  protected \"\r\n        \"static \"\r\n        var17_nameState/428850403\r\n        \" jjtree = new \"\r\n        var17_nameState/428850403\r\n        \"();\"))\r\n  (define-fun var1008_getStatic/-616544340 () Bool\r\n    true)\r\n  (define-fun var17_nameState/428850403 () String\r\n    \"\")\r\n  (define-fun var1737!1 () String\r\n    \"  protected static  jjtree = new \")\r\n  (define-fun var3706!2 () String\r\n    \"  protected \")\r\n  (define-fun var3706!1 () String\r\n    \"\")\r\n  (define-fun var1690!1 () String\r\n    \"  protected static \")\r\n  (define-fun var2244!1 () String\r\n    \"  protected static \")\r\n  (define-fun var219!1 () String\r\n    \"  protected static  jjtree = new \")\r\n  (define-fun var1750!1 () String\r\n    \"  protected static  jjtree = new ();\")\r\n  (define-fun var1899!3 () var1545\r\n    var1545!val!1)\r\n  (define-fun var1899!2 () var1545\r\n    var1545!val!1)\r\n  (define-fun var1899!1 () var1545\r\n    var1545!val!1)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1463!1 () String\r\n    \"\")\r\n  (define-fun println/2032072932 ((x!0 var1545)) void\r\n    void!val!0)\r\n  (define-fun println/1333914633 ((x!0 var1545) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 76 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.03061199188232422,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1545 is 2\r\n; rep: (as @var1545_0 var1545)\r\n; rep: (as @var1545_1 var1545)\r\n; cardinality of var1008 is 1\r\n; rep: (as @var1008_0 var1008)\r\n; cardinality of var17 is 1\r\n; rep: (as @var17_0 var17)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1008_getStatic/-616544340 () Bool true)\r\n(define-fun println/2032072932 ((BOUND_VARIABLE_668 var1545)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun var17_nameState/428850403 () String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_671 var1545) (BOUND_VARIABLE_672 String)) void (as @void_0 void))\r\n(define-fun null-var1545 () var1545 (as @var1545_0 var1545))\r\n(define-fun var1899 () var1545 (as @var1545_1 var1545))\r\n(define-fun var1899!1 () var1545 (as @var1545_0 var1545))\r\n(define-fun var3706!1 () String \"\")\r\n(define-fun var3706!2 () String \"  protected \")\r\n(define-fun var1690!1 () String \"  protected static \")\r\n(define-fun var2244!1 () String \"  protected static \")\r\n(define-fun var1737!1 () String \"  protected static  jjtree = new \")\r\n(define-fun var219!1 () String \"  protected static  jjtree = new \")\r\n(define-fun var1750!1 () String \"  protected static  jjtree = new ();\")\r\n(define-fun var1899!2 () var1545 (as @var1545_0 var1545))\r\n(define-fun var1463!1 () String \"\")\r\n(define-fun var1899!3 () var1545 (as @var1545_0 var1545))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36032512,
            "run_time": 0.13811421394348145,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1545:\n  ;;   var1545!val!1 var1545!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1545!val!1 () var1545)\n  (declare-fun var1545!val!0 () var1545)\n  ;; cardinality constraint:\n  (forall ((x var1545)) (or (= x var1545!val!1) (= x var1545!val!0)))\n  ;; -----------\n  (define-fun var3381 () String\n    \"static \")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var219 () String\n    (str.++ var3706!1\n        \"  protected \"\n        \"static \"\n        var17_nameState/428850403\n        \" jjtree = new \"))\n  (define-fun var3706 () String\n    String-init)\n  (define-fun var2036 () String\n    var17_nameState/428850403)\n  (define-fun var1750 () String\n    (str.++ var3706!1\n        \"  protected \"\n        \"static \"\n        var17_nameState/428850403\n        \" jjtree = new \"\n        var17_nameState/428850403))\n  (define-fun var2048 () String\n    var17_nameState/428850403)\n  (define-fun null-var1545 () var1545\n    var1545!val!1)\n  (define-fun var2244 () String\n    (str.++ var3706!1 \"  protected \" \"static \"))\n  (define-fun var1737 () String\n    (str.++ var3706!1 \"  protected \" \"static \" var17_nameState/428850403))\n  (define-fun var1899 () var1545\n    var1545!val!0)\n  (define-fun var1690 () String\n    (str.++ var3706!1 \"  protected \"))\n  (define-fun var3111 () String\n    (str.++ var3706!1\n        \"  protected \"\n        \"static \"\n        var17_nameState/428850403\n        \" jjtree = new \"\n        var17_nameState/428850403\n        \"();\"))\n  (define-fun var3721 () Bool\n    var1008_getStatic/-616544340)\n  (define-fun var1463 () String\n    (str.++ var3706!1\n        \"  protected \"\n        \"static \"\n        var17_nameState/428850403\n        \" jjtree = new \"\n        var17_nameState/428850403\n        \"();\"))\n  (define-fun var1690!1 () String\n    \"  protected static \")\n  (define-fun var17_nameState/428850403 () String\n    \"\")\n  (define-fun var2244!1 () String\n    \"  protected static \")\n  (define-fun var1008_getStatic/-616544340 () Bool\n    true)\n  (define-fun var219!1 () String\n    \"  protected static  jjtree = new \")\n  (define-fun var1750!1 () String\n    \"  protected static  jjtree = new ();\")\n  (define-fun var1737!1 () String\n    \"  protected static  jjtree = new \")\n  (define-fun var3706!2 () String\n    \"  protected \")\n  (define-fun var3706!1 () String\n    \"\")\n  (define-fun var1899!3 () var1545\n    var1545!val!1)\n  (define-fun var1899!2 () var1545\n    var1545!val!1)\n  (define-fun var1899!1 () var1545\n    var1545!val!1)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1463!1 () String\n    \"\")\n  (define-fun println/2032072932 ((x!0 var1545)) void\n    void!val!0)\n  (define-fun println/1333914633 ((x!0 var1545) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 76 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179978240,
            "run_time": 1.9460725784301758,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1545/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JJTreeState__insertParserMembers__-1369758067\\311.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1750!1 =\r\n     concat(all_31_4, \"();\")\r\n   var219!1 =\r\n     concat(all_25_3, var17_nameState/428850403)\r\n   var1737!1 =\r\n     concat(all_19_2, \" jjtree = new \")\r\n   var2244!1 =\r\n     concat(\"  protected static \", var17_nameState/428850403)\r\n   all_31_4 =\r\n     concat(all_31_5, var17_nameState/428850403)\r\n   all_25_3 =\r\n     concat(all_19_2, \" jjtree = new \")\r\n   all_31_5 =\r\n     concat(all_19_2, \" jjtree = new \")\r\n   all_19_2 =\r\n     concat(\"  protected static \", var17_nameState/428850403)\r\n\r\n1515ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.jjtree.IO",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getStatic()>()",
            "if $z0 == 0 goto r11 = \"\"",
            "r11 = \"static \"",
            "goto [?= virtualinvoke r0.<org.javacc.jjtree.IO: void println()>()]",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println()>()",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  protected \")",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)",
            "$r3 = staticinvoke <org.javacc.jjtree.JJTreeState: java.lang.String nameState()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" jjtree = new \")",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeState: java.lang.String nameState()>()",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"();\")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r10)",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println()>()",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.IO__setInput__-502018844\\452.smt2",
        "z3": {
            "memory": 32116736,
            "run_time": 0.1846606731414795,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1877:\r\n  ;;   var1877!val!1 var1877!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1877!val!1 () var1877)\r\n  (declare-fun var1877!val!0 () var1877)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1877)) (or (= x var1877!val!1) (= x var1877!val!0)))\r\n  ;; -----------\r\n  ;; universe for var315:\r\n  ;;   var315!val!1 var315!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var315!val!1 () var315)\r\n  (declare-fun var315!val!0 () var315)\r\n  ;; cardinality constraint:\r\n  (forall ((x var315)) (or (= x var315!val!1) (= x var315!val!0)))\r\n  ;; -----------\r\n  (define-fun var3833 () String\r\n    (str.++ var3818!1 \"Security violation while trying to open \"))\r\n  (define-fun var2725 () String\r\n    (str.++ var3818!1 \"Security violation while trying to open \" var2031))\r\n  (define-fun var2845 () String\r\n    (str.++ var3818!1 \"Security violation while trying to open \" var2031))\r\n  (define-fun var3818 () String\r\n    String-init)\r\n  (define-fun var3582 () var1877\r\n    var1877!val!0)\r\n  (define-fun var2031 () String\r\n    \"A\")\r\n  (define-fun null-var315 () var315\r\n    var315!val!1)\r\n  (define-fun null-var1877 () var1877\r\n    var1877!val!1)\r\n  (define-fun var940 () var315\r\n    var315!val!0)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3276 () var2560\r\n    var2560-init)\r\n  (define-fun var2441 () var1804\r\n    var1804-init)\r\n  (define-fun var3833!1 () String\r\n    \"Security violation while trying to open A\")\r\n  (define-fun var3818!1 () String\r\n    \"\")\r\n  (define-fun var3818!2 () String\r\n    \"Security violation while trying to open \")\r\n  (define-fun var2725!1 () String\r\n    \"\")\r\n  (define-fun var1804-init () var1804\r\n    var1804!val!0)\r\n  (define-fun var2441!1 () var1804\r\n    var1804!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2560-init () var2560\r\n    var2560!val!0)\r\n  (define-fun <init>/-1208695669 ((x!0 var1804) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 54 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.029338598251342773,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1877 is 2\r\n; rep: (as @var1877_0 var1877)\r\n; rep: (as @var1877_1 var1877)\r\n; cardinality of var792 is 1\r\n; rep: (as @var792_0 var792)\r\n; cardinality of var2560 is 1\r\n; rep: (as @var2560_0 var2560)\r\n; cardinality of var315 is 2\r\n; rep: (as @var315_0 var315)\r\n; rep: (as @var315_1 var315)\r\n; cardinality of var1804 is 1\r\n; rep: (as @var1804_0 var1804)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2560-init () var2560 (as @var2560_0 var2560))\r\n(define-fun var1804-init () var1804 (as @var1804_0 var1804))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1208695669 ((BOUND_VARIABLE_609 var1804) (BOUND_VARIABLE_610 String)) void (as @void_0 void))\r\n(define-fun null-var1877 () var1877 (as @var1877_0 var1877))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var315 () var315 (as @var315_0 var315))\r\n(define-fun var3582 () var1877 (as @var1877_1 var1877))\r\n(define-fun var2031 () String \"\")\r\n(define-fun var940 () var315 (as @var315_1 var315))\r\n(define-fun var3818!1 () String \"\")\r\n(define-fun var3818!2 () String \"Security violation while trying to open \")\r\n(define-fun var3833!1 () String \"Security violation while trying to open \")\r\n(define-fun var2441!1 () var1804 (as @var1804_0 var1804))\r\n(define-fun var2725!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37605376,
            "run_time": 0.1402587890625,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1877:\n  ;;   var1877!val!1 var1877!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1877!val!1 () var1877)\n  (declare-fun var1877!val!0 () var1877)\n  ;; cardinality constraint:\n  (forall ((x var1877)) (or (= x var1877!val!1) (= x var1877!val!0)))\n  ;; -----------\n  ;; universe for var315:\n  ;;   var315!val!1 var315!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var315!val!1 () var315)\n  (declare-fun var315!val!0 () var315)\n  ;; cardinality constraint:\n  (forall ((x var315)) (or (= x var315!val!1) (= x var315!val!0)))\n  ;; -----------\n  (define-fun var3818!2 () String\n    \"Security violation while trying to open \")\n  (define-fun var3818!1 () String\n    \"\")\n  (define-fun var3833!1 () String\n    \"Security violation while trying to open \\u{0}\\u{0}\")\n  (define-fun var3276 () var2560\n    var2560-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3833 () String\n    (str.++ var3818!1 \"Security violation while trying to open \"))\n  (define-fun var3582 () var1877\n    var1877!val!0)\n  (define-fun var2845 () String\n    (str.++ var3818!1 \"Security violation while trying to open \" var2031))\n  (define-fun null-var315 () var315\n    var315!val!1)\n  (define-fun var3818 () String\n    String-init)\n  (define-fun var2031 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var940 () var315\n    var315!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2725 () String\n    (str.++ var3818!1 \"Security violation while trying to open \" var2031))\n  (define-fun var2441 () var1804\n    var1804-init)\n  (define-fun null-var1877 () var1877\n    var1877!val!1)\n  (define-fun var2725!1 () String\n    \"\")\n  (define-fun var1804-init () var1804\n    var1804!val!0)\n  (define-fun var2441!1 () var1804\n    var1804!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2560-init () var2560\n    var2560!val!0)\n  (define-fun <init>/-1208695669 ((x!0 var1804) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 54 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177057792,
            "run_time": 1.834639072418213,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var315/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.IO__setInput__-502018844\\452.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3833!1 =\r\n     concat(\"Security violation while trying to open \", var2031)\r\n\r\n1396ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.jjtree.IO",
            "r1 := @parameter0: java.lang.String",
            "$r0 = new java.io.File",
            "$r35 := @caughtexception",
            "$r36 = new org.javacc.jjtree.JJTreeIOException",
            "$r37 = new java.lang.StringBuilder",
            "specialinvoke $r37.<java.lang.StringBuilder: void <init>()>()",
            "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Security violation while trying to open \")",
            "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r36.<org.javacc.jjtree.JJTreeIOException: void <init>(java.lang.String)>($r40)",
            "throw $r36"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JJTreeParserTokenManager__TokenLexicalActions__98459455\\2199.smt2",
        "z3": {
            "memory": 32141312,
            "run_time": 0.1201930046081543,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2932:\r\n  ;;   var2932!val!2 var2932!val!3 var2932!val!1 var2932!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2932!val!2 () var2932)\r\n  (declare-fun var2932!val!3 () var2932)\r\n  (declare-fun var2932!val!1 () var2932)\r\n  (declare-fun var2932!val!0 () var2932)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2932))\r\n          (or (= x var2932!val!2)\r\n              (= x var2932!val!3)\r\n              (= x var2932!val!1)\r\n              (= x var2932!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3952:\r\n  ;;   var3952!val!0 var3952!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3952!val!0 () var3952)\r\n  (declare-fun var3952!val!1 () var3952)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3952)) (or (= x var3952!val!0) (= x var3952!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1743:\r\n  ;;   var1743!val!1 var1743!val!0 var1743!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1743!val!1 () var1743)\r\n  (declare-fun var1743!val!0 () var1743)\r\n  (declare-fun var1743!val!2 () var1743)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1743))\r\n          (or (= x var1743!val!1) (= x var1743!val!0) (= x var1743!val!2)))\r\n  ;; -----------\r\n  (define-fun var3935 () var3952\r\n    (cast-from-var2932-to-var3952 var1621!1))\r\n  (define-fun var3795 () (Array Int String)\r\n    var1743-jjstrLiteralImages)\r\n  (define-fun var3935!1 () var3952\r\n    var3952!val!0)\r\n  (define-fun var1721 () var1743\r\n    var1743!val!0)\r\n  (define-fun null-var3952 () var3952\r\n    var3952!val!1)\r\n  (define-fun var3163 () Int\r\n    (jjmatchedKind/-1450700737 var1721))\r\n  (define-fun var2627 () (Array Int String)\r\n    var1743-jjstrLiteralImages)\r\n  (define-fun var2362 () String\r\n    (select var1743-jjstrLiteralImages 127))\r\n  (define-fun var1621!2 () var2932\r\n    var2932!val!3)\r\n  (define-fun var830 () var3087\r\n    (input_stream/-1450700737 var1721!1))\r\n  (define-fun null-var1743 () var1743\r\n    var1743!val!1)\r\n  (define-fun var1621!1 () var2932\r\n    var2932!val!2)\r\n  (define-fun var965 () String\r\n    (image/-1450700737 var1721))\r\n  (define-fun var1721!1 () var1743\r\n    var1743!val!2)\r\n  (define-fun null-var2932 () var2932\r\n    var2932!val!1)\r\n  (define-fun var3020 () String\r\n    (select var1743-jjstrLiteralImages 127))\r\n  (define-fun var1621 () var2932\r\n    var2932!val!0)\r\n  (define-fun var1743-jjstrLiteralImages () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun var158 () Int\r\n    (str.len (select var1743-jjstrLiteralImages 127)))\r\n  (define-fun var965!1 () String\r\n    \"\")\r\n  (define-fun var2728 () Int\r\n    0)\r\n  (define-fun var830!1 () var3087\r\n    var3087!val!0)\r\n  (define-fun image/-1103324373 ((x!0 var2932)) String\r\n    (ite (= x!0 var2932!val!3) \">\"\r\n      \">\"))\r\n  (define-fun jjmatchedKind/-1450700737 ((x!0 var1743)) Int\r\n    127)\r\n  (define-fun lengthOfMatch/-1450700737 ((x!0 var1743)) Int\r\n    0)\r\n  (define-fun kind/-1103324373 ((x!0 var2932)) Int\r\n    128)\r\n  (define-fun realKind/-190849901 ((x!0 var3952)) Int\r\n    127)\r\n  (define-fun image/-1450700737 ((x!0 var1743)) String\r\n    \"\")\r\n  (define-fun cast-from-var2932-to-var3952 ((x!0 var2932)) var3952\r\n    var3952!val!0)\r\n  (define-fun input_stream/-1450700737 ((x!0 var1743)) var3087\r\n    var3087!val!0)\r\n  (define-fun backup/-1560050078 ((x!0 var3087) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 68 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.030098915100097656,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1743 is 3\r\n; rep: (as @var1743_0 var1743)\r\n; rep: (as @var1743_1 var1743)\r\n; rep: (as @var1743_2 var1743)\r\n; cardinality of var2932 is 4\r\n; rep: (as @var2932_0 var2932)\r\n; rep: (as @var2932_1 var2932)\r\n; rep: (as @var2932_2 var2932)\r\n; rep: (as @var2932_3 var2932)\r\n; cardinality of var3952 is 2\r\n; rep: (as @var3952_0 var3952)\r\n; rep: (as @var3952_1 var3952)\r\n; cardinality of var3087 is 1\r\n; rep: (as @var3087_0 var3087)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun jjmatchedKind/-1450700737 ((_arg_1 var1743)) Int 127)\r\n(define-fun image/-1450700737 ((BOUND_VARIABLE_707 var1743)) String \"\")\r\n(define-fun lengthOfMatch/-1450700737 ((_arg_1 var1743)) Int 0)\r\n(define-fun kind/-1103324373 ((_arg_1 var2932)) Int 128)\r\n(define-fun cast-from-var2932-to-var3952 ((BOUND_VARIABLE_710 var2932)) var3952 (as @var3952_0 var3952))\r\n(define-fun realKind/-190849901 ((_arg_1 var3952)) Int 127)\r\n(define-fun input_stream/-1450700737 ((BOUND_VARIABLE_713 var1743)) var3087 (as @var3087_0 var3087))\r\n(define-fun backup/-1560050078 ((BOUND_VARIABLE_716 var3087) (BOUND_VARIABLE_717 Int)) void (as @void_0 void))\r\n(define-fun image/-1103324373 ((_arg_1 var2932)) String \">\")\r\n(define-fun null-var1743 () var1743 (as @var1743_0 var1743))\r\n(define-fun null-var2932 () var2932 (as @var2932_0 var2932))\r\n(define-fun var1743-jjstrLiteralImages () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun null-var3952 () var3952 (as @var3952_0 var3952))\r\n(define-fun var1721 () var1743 (as @var1743_1 var1743))\r\n(define-fun var1621 () var2932 (as @var2932_1 var2932))\r\n(define-fun var965!1 () String \"\")\r\n(define-fun var1721!1 () var1743 (as @var1743_2 var1743))\r\n(define-fun var1621!1 () var2932 (as @var2932_2 var2932))\r\n(define-fun var3935!1 () var3952 (as @var3952_1 var3952))\r\n(define-fun var830!1 () var3087 (as @var3087_0 var3087))\r\n(define-fun var2728 () Int 0)\r\n(define-fun var1621!2 () var2932 (as @var2932_3 var2932))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36597760,
            "run_time": 0.12290048599243164,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 67 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 68 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 160288768,
            "run_time": 1.8507890701293945,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2932/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JJTreeParserTokenManager__TokenLexicalActions__98459455\\2199.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var965!1 =\r\n     concat(all_22_3, all_19_0)\r\n\r\n1410ms\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjtree.JJTreeParserTokenManager",
            "r6 := @parameter0: org.javacc.jjtree.Token",
            "$i0 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: int jjmatchedKind>",
            "lookupswitch($i0) {     case 126: goto $r11 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: java.lang.StringBuilder image>;     case 127: goto $r3 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: java.lang.StringBuilder image>;     default: goto return; }",
            "$r3 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: java.lang.StringBuilder image>",
            "$r1 = <org.javacc.jjtree.JJTreeParserTokenManager: java.lang.String[] jjstrLiteralImages>",
            "$r2 = $r1[127]",
            "virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r4 = <org.javacc.jjtree.JJTreeParserTokenManager: java.lang.String[] jjstrLiteralImages>",
            "$r5 = $r4[127]",
            "$i1 = virtualinvoke $r5.<java.lang.String: int length()>()",
            "r0.<org.javacc.jjtree.JJTreeParserTokenManager: int lengthOfMatch> = $i1",
            "r6.<org.javacc.jjtree.Token: int kind> = 128",
            "$r7 = (org.javacc.jjtree.Token$GTToken) r6",
            "$r7.<org.javacc.jjtree.Token$GTToken: int realKind> = 127",
            "$r8 = r0.<org.javacc.jjtree.JJTreeParserTokenManager: org.javacc.jjtree.JavaCharStream input_stream>",
            "virtualinvoke $r8.<org.javacc.jjtree.JavaCharStream: void backup(int)>(1)",
            "r6.<org.javacc.jjtree.Token: java.lang.String image> = \">\"",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPNodeFiles__jjtreeIncludeFile__407040528\\283.smt2",
        "z3": {
            "memory": 31707136,
            "run_time": 0.07495713233947754,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3176-parserName () String\r\n    \"\")\r\n  (define-fun var2203!1 () String\r\n    \"Tree.h\")\r\n  (define-fun var3850!2 () String\r\n    \"\")\r\n  (define-fun var3850!1 () String\r\n    \"\")\r\n  (define-fun var3554_getJJTreeOutputDirectory/-709711143 () var393\r\n    var393!val!0)\r\n  (define-fun var2003!1 () var393\r\n    var393!val!0)\r\n  (define-fun var3292!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var393-init () var393\r\n    var393!val!0)\r\n  (define-fun var567!1 () var393\r\n    var393!val!0)\r\n  (define-fun var3514 () String\r\n    (getAbsolutePath/-802773300 var567!1))\r\n  (define-fun var3850 () String\r\n    String-init)\r\n  (define-fun var2003 () var393\r\n    var3554_getJJTreeOutputDirectory/-709711143)\r\n  (define-fun var208 () String\r\n    (str.++ var3850!1 var3176-parserName \"Tree.h\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var567 () var393\r\n    var393-init)\r\n  (define-fun var1070 () String\r\n    var3176-parserName)\r\n  (define-fun var3292 () String\r\n    (str.++ var3850!1 var3176-parserName \"Tree.h\"))\r\n  (define-fun var2203 () String\r\n    (str.++ var3850!1 var3176-parserName))\r\n  (define-fun getAbsolutePath/-802773300 ((x!0 var393)) String\r\n    \"\")\r\n  (define-fun <init>/-1833447926 ((x!0 var393) (x!1 var393) (x!2 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 48 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1658880,
            "run_time": 0.030612945556640625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var393 is 1\r\n; rep: (as @var393_0 var393)\r\n; cardinality of var3554 is 1\r\n; rep: (as @var3554_0 var3554)\r\n; cardinality of var3176 is 1\r\n; rep: (as @var3176_0 var3176)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var393-init () var393 (as @var393_0 var393))\r\n(define-fun var3554_getJJTreeOutputDirectory/-709711143 () var393 (as @var393_0 var393))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1833447926 ((BOUND_VARIABLE_521 var393) (BOUND_VARIABLE_522 var393) (BOUND_VARIABLE_523 String)) void (as @void_0 void))\r\n(define-fun getAbsolutePath/-802773300 ((BOUND_VARIABLE_526 var393)) String \"\")\r\n(define-fun var3176-parserName () String \"\")\r\n(define-fun var3850!1 () String \"\")\r\n(define-fun var3850!2 () String \"\")\r\n(define-fun var2203!1 () String \"Tree.h\")\r\n(define-fun var567!1 () var393 (as @var393_0 var393))\r\n(define-fun var2003!1 () var393 (as @var393_0 var393))\r\n(define-fun var3292!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35438592,
            "run_time": 0.09330201148986816,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3176-parserName () String\n    \"\")\n  (define-fun var2203!1 () String\n    \"Tree.h\")\n  (define-fun var3850!2 () String\n    \"\")\n  (define-fun var3850!1 () String\n    \"\")\n  (define-fun var3554_getJJTreeOutputDirectory/-709711143 () var393\n    var393!val!0)\n  (define-fun var2003!1 () var393\n    var393!val!0)\n  (define-fun var3292!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var393-init () var393\n    var393!val!0)\n  (define-fun var567!1 () var393\n    var393!val!0)\n  (define-fun var208 () String\n    (str.++ var3850!1 var3176-parserName \"Tree.h\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1070 () String\n    var3176-parserName)\n  (define-fun var2003 () var393\n    var3554_getJJTreeOutputDirectory/-709711143)\n  (define-fun var2203 () String\n    (str.++ var3850!1 var3176-parserName))\n  (define-fun var567 () var393\n    var393-init)\n  (define-fun var3292 () String\n    (str.++ var3850!1 var3176-parserName \"Tree.h\"))\n  (define-fun var3514 () String\n    (getAbsolutePath/-802773300 var567!1))\n  (define-fun var3850 () String\n    String-init)\n  (define-fun getAbsolutePath/-802773300 ((x!0 var393)) String\n    \"\")\n  (define-fun <init>/-1833447926 ((x!0 var393) (x!1 var393) (x!2 String)) void\n    void!val!0)\n)\n(error \"line 48 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168964096,
            "run_time": 1.8836472034454346,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2203!1 () String \"Tree.h\")\r\n  (define-fun var3850!2 () String \"\")\r\n  (define-fun var3850!1 () String \"\")\r\n  (define-fun var3176-parserName () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "$r0 = new java.io.File",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.io.File getJJTreeOutputDirectory()>()",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = <org.javacc.jjtree.JJTreeGlobals: java.lang.String parserName>",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Tree.h\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r5)",
            "$r7 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JJTreeState__insertParserMembers__-1369758067\\341.smt2",
        "z3": {
            "memory": 31686656,
            "run_time": 0.080078125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3732:\r\n  ;;   var3732!val!1 var3732!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3732!val!1 () var3732)\r\n  (declare-fun var3732!val!0 () var3732)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3732)) (or (= x var3732!val!1) (= x var3732!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var3732 () var3732\r\n    var3732!val!1)\r\n  (define-fun var2259 () String\r\n    \"\")\r\n  (define-fun var1736 () String\r\n    (str.++ var407!1 \"  protected \"))\r\n  (define-fun var3511 () String\r\n    (str.++ var407!1 \"  protected \" \"\" var3226_nameState/428850403 \" jjtree = new \"))\r\n  (define-fun var69 () String\r\n    (str.++ var407!1\r\n        \"  protected \"\r\n        \"\"\r\n        var3226_nameState/428850403\r\n        \" jjtree = new \"\r\n        var3226_nameState/428850403\r\n        \"();\"))\r\n  (define-fun var1315 () String\r\n    var3226_nameState/428850403)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2934 () String\r\n    (str.++ var407!1 \"  protected \" \"\"))\r\n  (define-fun var1963 () var3732\r\n    var3732!val!0)\r\n  (define-fun var917 () String\r\n    (str.++ var407!1 \"  protected \" \"\" var3226_nameState/428850403))\r\n  (define-fun var942 () String\r\n    (str.++ var407!1\r\n        \"  protected \"\r\n        \"\"\r\n        var3226_nameState/428850403\r\n        \" jjtree = new \"\r\n        var3226_nameState/428850403\r\n        \"();\"))\r\n  (define-fun var2152 () Bool\r\n    var1259_getStatic/-616544340)\r\n  (define-fun var70 () String\r\n    (str.++ var407!1\r\n        \"  protected \"\r\n        \"\"\r\n        var3226_nameState/428850403\r\n        \" jjtree = new \"\r\n        var3226_nameState/428850403))\r\n  (define-fun var407 () String\r\n    String-init)\r\n  (define-fun var336 () String\r\n    var3226_nameState/428850403)\r\n  (define-fun var3226_nameState/428850403 () String\r\n    \"\")\r\n  (define-fun var3511!1 () String\r\n    \"  protected  jjtree = new \")\r\n  (define-fun var917!1 () String\r\n    \"  protected  jjtree = new \")\r\n  (define-fun var1259_getStatic/-616544340 () Bool\r\n    false)\r\n  (define-fun var407!2 () String\r\n    \"  protected \")\r\n  (define-fun var1736!1 () String\r\n    \"  protected \")\r\n  (define-fun var2934!1 () String\r\n    \"  protected \")\r\n  (define-fun var407!1 () String\r\n    \"\")\r\n  (define-fun var70!1 () String\r\n    \"  protected  jjtree = new ();\")\r\n  (define-fun var942!1 () String\r\n    \"\")\r\n  (define-fun var1963!2 () var3732\r\n    var3732!val!1)\r\n  (define-fun var1963!1 () var3732\r\n    var3732!val!1)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1963!3 () var3732\r\n    var3732!val!1)\r\n  (define-fun println/2032072932 ((x!0 var3732)) void\r\n    void!val!0)\r\n  (define-fun println/1333914633 ((x!0 var3732) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 75 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1695744,
            "run_time": 0.03064107894897461,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3732 is 2\r\n; rep: (as @var3732_0 var3732)\r\n; rep: (as @var3732_1 var3732)\r\n; cardinality of var1259 is 1\r\n; rep: (as @var1259_0 var1259)\r\n; cardinality of var3226 is 1\r\n; rep: (as @var3226_0 var3226)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1259_getStatic/-616544340 () Bool false)\r\n(define-fun println/2032072932 ((BOUND_VARIABLE_650 var3732)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun var3226_nameState/428850403 () String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_653 var3732) (BOUND_VARIABLE_654 String)) void (as @void_0 void))\r\n(define-fun null-var3732 () var3732 (as @var3732_0 var3732))\r\n(define-fun var1963 () var3732 (as @var3732_1 var3732))\r\n(define-fun var1963!1 () var3732 (as @var3732_0 var3732))\r\n(define-fun var407!1 () String \"\")\r\n(define-fun var407!2 () String \"  protected \")\r\n(define-fun var1736!1 () String \"  protected \")\r\n(define-fun var2934!1 () String \"  protected \")\r\n(define-fun var917!1 () String \"  protected  jjtree = new \")\r\n(define-fun var3511!1 () String \"  protected  jjtree = new \")\r\n(define-fun var70!1 () String \"  protected  jjtree = new ();\")\r\n(define-fun var1963!2 () var3732 (as @var3732_0 var3732))\r\n(define-fun var942!1 () String \"\")\r\n(define-fun var1963!3 () var3732 (as @var3732_0 var3732))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36020224,
            "run_time": 0.1388258934020996,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3732:\n  ;;   var3732!val!1 var3732!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3732!val!1 () var3732)\n  (declare-fun var3732!val!0 () var3732)\n  ;; cardinality constraint:\n  (forall ((x var3732)) (or (= x var3732!val!1) (= x var3732!val!0)))\n  ;; -----------\n  (define-fun null-var3732 () var3732\n    var3732!val!1)\n  (define-fun var3511 () String\n    (str.++ var407!1 \"  protected \" \"\" var3226_nameState/428850403 \" jjtree = new \"))\n  (define-fun var69 () String\n    (str.++ var407!1\n        \"  protected \"\n        \"\"\n        var3226_nameState/428850403\n        \" jjtree = new \"\n        var3226_nameState/428850403\n        \"();\"))\n  (define-fun var1315 () String\n    var3226_nameState/428850403)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2152 () Bool\n    var1259_getStatic/-616544340)\n  (define-fun var2934 () String\n    (str.++ var407!1 \"  protected \" \"\"))\n  (define-fun var1963 () var3732\n    var3732!val!0)\n  (define-fun var917 () String\n    (str.++ var407!1 \"  protected \" \"\" var3226_nameState/428850403))\n  (define-fun var942 () String\n    (str.++ var407!1\n        \"  protected \"\n        \"\"\n        var3226_nameState/428850403\n        \" jjtree = new \"\n        var3226_nameState/428850403\n        \"();\"))\n  (define-fun var70 () String\n    (str.++ var407!1\n        \"  protected \"\n        \"\"\n        var3226_nameState/428850403\n        \" jjtree = new \"\n        var3226_nameState/428850403))\n  (define-fun var407 () String\n    String-init)\n  (define-fun var336 () String\n    var3226_nameState/428850403)\n  (define-fun var2259 () String\n    \"\")\n  (define-fun var1736 () String\n    (str.++ var407!1 \"  protected \"))\n  (define-fun var1736!1 () String\n    \"  protected \")\n  (define-fun var3226_nameState/428850403 () String\n    \"\")\n  (define-fun var2934!1 () String\n    \"  protected \")\n  (define-fun var407!1 () String\n    \"\")\n  (define-fun var1259_getStatic/-616544340 () Bool\n    false)\n  (define-fun var70!1 () String\n    \"  protected  jjtree = new ();\")\n  (define-fun var3511!1 () String\n    \"  protected  jjtree = new \")\n  (define-fun var917!1 () String\n    \"  protected  jjtree = new \")\n  (define-fun var407!2 () String\n    \"  protected \")\n  (define-fun var942!1 () String\n    \"\")\n  (define-fun var1963!2 () var3732\n    var3732!val!1)\n  (define-fun var1963!1 () var3732\n    var3732!val!1)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1963!3 () var3732\n    var3732!val!1)\n  (define-fun println/2032072932 ((x!0 var3732)) void\n    void!val!0)\n  (define-fun println/1333914633 ((x!0 var3732) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 75 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 186413056,
            "run_time": 1.8345544338226318,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3732/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JJTreeState__insertParserMembers__-1369758067\\341.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var917!1 =\r\n     concat(all_31_4, \" jjtree = new \")\r\n   var70!1 =\r\n     concat(all_28_3, \"();\")\r\n   var3511!1 =\r\n     concat(all_22_2, var3226_nameState/428850403)\r\n   var2934!1 =\r\n     concat(\"  protected \", var3226_nameState/428850403)\r\n   all_28_3 =\r\n     concat(all_22_2, var3226_nameState/428850403)\r\n   all_31_4 =\r\n     concat(\"  protected \", var3226_nameState/428850403)\r\n   all_22_2 =\r\n     concat(all_34_5, \" jjtree = new \")\r\n   all_34_5 =\r\n     concat(\"  protected \", var3226_nameState/428850403)\r\n\r\n1377ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.jjtree.IO",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getStatic()>()",
            "if $z0 == 0 goto r11 = \"\"",
            "r11 = \"\"",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println()>()",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  protected \")",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)",
            "$r3 = staticinvoke <org.javacc.jjtree.JJTreeState: java.lang.String nameState()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" jjtree = new \")",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeState: java.lang.String nameState()>()",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"();\")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r10)",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println()>()",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.NodeFiles__generatePrologue__-899895352\\378.smt2",
        "z3": {
            "memory": 31985664,
            "run_time": 0.11534595489501953,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2317:\r\n  ;;   var2317!val!1 var2317!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2317!val!1 () var2317)\r\n  (declare-fun var2317!val!0 () var2317)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2317)) (or (= x var2317!val!1) (= x var2317!val!0)))\r\n  ;; -----------\r\n  (define-fun var1340 () Bool\r\n    (= var577-nodePackageName \"\"))\r\n  (define-fun null-var2317 () var2317\r\n    var2317!val!1)\r\n  (define-fun var653 () var2317\r\n    var2317!val!0)\r\n  (define-fun var2451 () String\r\n    var577-nodePackageName)\r\n  (define-fun var577-nodePackageName () String\r\n    \"\")\r\n)\r\n(error \"line 21 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.031050920486450195,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2317 is 2\r\n; rep: (as @var2317_0 var2317)\r\n; rep: (as @var2317_1 var2317)\r\n; cardinality of var577 is 1\r\n; rep: (as @var577_0 var577)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var2317 () var2317 (as @var2317_0 var2317))\r\n(define-fun var577-nodePackageName () String \"\")\r\n(define-fun var653 () var2317 (as @var2317_1 var2317))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36020224,
            "run_time": 0.15587282180786133,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2317:\n  ;;   var2317!val!1 var2317!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2317!val!1 () var2317)\n  (declare-fun var2317!val!0 () var2317)\n  ;; cardinality constraint:\n  (forall ((x var2317)) (or (= x var2317!val!1) (= x var2317!val!0)))\n  ;; -----------\n  (define-fun var2451 () String\n    var577-nodePackageName)\n  (define-fun null-var2317 () var2317\n    var2317!val!1)\n  (define-fun var653 () var2317\n    var2317!val!0)\n  (define-fun var1340 () Bool\n    (= var577-nodePackageName \"\"))\n  (define-fun var577-nodePackageName () String\n    \"\")\n)\n(error \"line 21 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 143683584,
            "run_time": 1.431061029434204,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var653 () var2317 var2317!4)\r\n  (define-fun var577-nodePackageName () String \"\")\r\n  (define-fun null-var2317 () var2317 var2317!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.io.PrintWriter",
            "$r0 = <org.javacc.jjtree.JJTreeGlobals: java.lang.String nodePackageName>",
            "$z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 != 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.NodeFiles__nodeConstants__-664664870\\407.smt2",
        "z3": {
            "memory": 31690752,
            "run_time": 0.1342318058013916,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2208!1 () String\r\n    \"\")\r\n  (define-fun var1071-parserName () String\r\n    \"\")\r\n  (define-fun var1936!1 () String\r\n    \"TreeConstants\")\r\n  (define-fun var2208!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1936 () String\r\n    (str.++ var2208!1 var1071-parserName))\r\n  (define-fun var1466 () String\r\n    (str.++ var2208!1 var1071-parserName \"TreeConstants\"))\r\n  (define-fun var2316 () String\r\n    (str.++ var2208!1 var1071-parserName \"TreeConstants\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2208 () String\r\n    String-init)\r\n  (define-fun var84 () String\r\n    var1071-parserName)\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8941568,
            "run_time": 0.030276775360107422,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1071 is 1\r\n; rep: (as @var1071_0 var1071)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var1071-parserName () String \"\")\r\n(define-fun var2208!1 () String \"\")\r\n(define-fun var2208!2 () String \"\")\r\n(define-fun var1936!1 () String \"TreeConstants\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35282944,
            "run_time": 0.12448239326477051,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2208!1 () String\n    \"\")\n  (define-fun var1071-parserName () String\n    \"\")\n  (define-fun var1936!1 () String\n    \"TreeConstants\")\n  (define-fun var2208!2 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2316 () String\n    (str.++ var2208!1 var1071-parserName \"TreeConstants\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2208 () String\n    String-init)\n  (define-fun var84 () String\n    var1071-parserName)\n  (define-fun var1936 () String\n    (str.++ var2208!1 var1071-parserName))\n  (define-fun var1466 () String\n    (str.++ var2208!1 var1071-parserName \"TreeConstants\"))\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 161714176,
            "run_time": 1.8361399173736572,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1936!1 () String \"TreeConstants\")\r\n  (define-fun var2208!2 () String \"\")\r\n  (define-fun var2208!1 () String \"\")\r\n  (define-fun var1071-parserName () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r1 = <org.javacc.jjtree.JJTreeGlobals: java.lang.String parserName>",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"TreeConstants\")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.TokenUtils__remove_escapes_and_quotes__-935003089\\596.smt2",
        "z3": {
            "memory": 31682560,
            "run_time": 0.10895752906799316,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var641:\r\n  ;;   var641!val!0 var641!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var641!val!0 () var641)\r\n  (declare-fun var641!val!1 () var641)\r\n  ;; cardinality constraint:\r\n  (forall ((x var641)) (or (= x var641!val!0) (= x var641!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var641 () var641\r\n    var641!val!1)\r\n  (define-fun var399 () Int\r\n    (str.len var2552))\r\n  (define-fun var1146 () Int\r\n    (- (str.len var2552) 1))\r\n  (define-fun var2226 () var641\r\n    var641!val!0)\r\n  (define-fun var2112 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2552 () String\r\n    \"\")\r\n  (define-fun var1413 () Int\r\n    1)\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8011776,
            "run_time": 0.0305938720703125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var641 is 2\r\n; rep: (as @var641_0 var641)\r\n; rep: (as @var641_1 var641)\r\n; cardinality of var645 is 1\r\n; rep: (as @var645_0 var645)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var641 () var641 (as @var641_0 var641))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2226 () var641 (as @var641_1 var641))\r\n(define-fun var2552 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37294080,
            "run_time": 0.17103815078735352,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var641:\n  ;;   var641!val!0 var641!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var641!val!0 () var641)\n  (declare-fun var641!val!1 () var641)\n  ;; cardinality constraint:\n  (forall ((x var641)) (or (= x var641!val!0) (= x var641!val!1)))\n  ;; -----------\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2226 () var641\n    var641!val!0)\n  (define-fun var1146 () Int\n    (- (str.len var2552) 1))\n  (define-fun var2112 () String\n    \"\")\n  (define-fun null-var641 () var641\n    var641!val!1)\n  (define-fun var2552 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var399 () Int\n    (str.len var2552))\n  (define-fun var1413 () Int\n    1)\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 160731136,
            "run_time": 1.60791015625,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2552 () String \"\")\r\n  (define-fun var2226 () var641 var641!4)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var641 () var641 var641!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: org.javacc.jjtree.Token",
            "r0 := @parameter1: java.lang.String",
            "r36 = \"\"",
            "i6 = 1",
            "$i7 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i8 = $i7 - 1",
            "if i6 >= $i8 goto return r36",
            "return r36"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.ParseException__initialise__1055862808\\483.smt2",
        "z3": {
            "memory": 31969280,
            "run_time": 0.1359272003173828,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 145 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6967296,
            "run_time": 0.030940771102905273,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35917824,
            "run_time": 0.10971689224243164,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 145 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 197918720,
            "run_time": 2.2860169410705566,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 51,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 12,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 4,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @parameter0: org.javacc.jjtree.Token",
            "r2 := @parameter1: int[][]",
            "r33 := @parameter2: java.lang.String[]",
            "r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"line.separator\", \"\\n\")",
            "$r1 = new java.lang.StringBuffer",
            "specialinvoke $r1.<java.lang.StringBuffer: void <init>()>()",
            "i11 = 0",
            "i12 = 0",
            "$i0 = lengthof r2",
            "if i12 >= $i0 goto r66 = \"Encountered \\\"\"",
            "r66 = \"Encountered \\\"\"",
            "r67 = r3.<org.javacc.jjtree.Token: org.javacc.jjtree.Token next>",
            "i15 = 0",
            "if i15 >= i11 goto $r4 = new java.lang.StringBuilder",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r66)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" at line \")",
            "$r6 = r3.<org.javacc.jjtree.Token: org.javacc.jjtree.Token next>",
            "$i1 = $r6.<org.javacc.jjtree.Token: int beginLine>",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", column \")",
            "$r9 = r3.<org.javacc.jjtree.Token: org.javacc.jjtree.Token next>",
            "$i2 = $r9.<org.javacc.jjtree.Token: int beginColumn>",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)",
            "$r52 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r53 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i3 = lengthof r2",
            "if $i3 != 1 goto $r16 = new java.lang.StringBuilder",
            "$r25 = new java.lang.StringBuilder",
            "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53)",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Was expecting:\")",
            "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")",
            "r71 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()",
            "goto [?= $r21 = new java.lang.StringBuilder]",
            "$r21 = new java.lang.StringBuilder",
            "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()",
            "$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r22 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r30 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r30"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CodeGenerator__generateMethodDefHeader__-6362932\\1212.smt2",
        "z3": {
            "memory": 31305728,
            "run_time": 0.09847545623779297,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 79 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.031005382537841797,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35934208,
            "run_time": 0.0947110652923584,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 79 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 157863936,
            "run_time": 1.7249197959899902,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 24,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.CodeGenerator",
            "r34 := @parameter0: java.lang.String",
            "r13 := @parameter1: java.lang.String",
            "r4 := @parameter2: java.lang.String",
            "r27 := @parameter3: java.lang.String",
            "$z0 = virtualinvoke r0.<org.javacc.parser.CodeGenerator: boolean isJavaLanguage()>()",
            "if $z0 == 0 goto $r2 = r0.<org.javacc.parser.CodeGenerator: java.lang.StringBuffer includeBuffer>",
            "$r21 = newarray (java.lang.Object)[1]",
            "$r22 = new java.lang.StringBuilder",
            "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r34)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r21[0] = $r26",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCode(java.lang.Object[])>($r21)",
            "if r27 == null goto $r28 = newarray (java.lang.Object)[1]",
            "$r28 = newarray (java.lang.Object)[1]",
            "$r28[0] = \"\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r28)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CodeGenerator__getGeneratedCode__-1109491265\\999.smt2",
        "z3": {
            "memory": 31215616,
            "run_time": 0.08248543739318848,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3933:\r\n  ;;   var3933!val!0 var3933!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3933!val!0 () var3933)\r\n  (declare-fun var3933!val!1 () var3933)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3933)) (or (= x var3933!val!0) (= x var3933!val!1)))\r\n  ;; -----------\r\n  (define-fun var2351 () String\r\n    (str.++ var1658!1 (outputBuffer/-1919349735 var1871)))\r\n  (define-fun var1302 () String\r\n    (str.++ var1658!1 (outputBuffer/-1919349735 var1871) \"\\n\"))\r\n  (define-fun null-var3933 () var3933\r\n    var3933!val!1)\r\n  (define-fun var18 () String\r\n    (outputBuffer/-1919349735 var1871))\r\n  (define-fun var1662 () String\r\n    (outputBuffer/-1919349735 var1871))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1658 () String\r\n    String-init)\r\n  (define-fun var1871 () var3933\r\n    var3933!val!0)\r\n  (define-fun var981 () String\r\n    (str.++ var1658!1 (outputBuffer/-1919349735 var1871) \"\\n\"))\r\n  (define-fun var2351!1 () String\r\n    \"\\n\")\r\n  (define-fun var1658!1 () String\r\n    \"\")\r\n  (define-fun var1658!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun outputBuffer/-1919349735 ((x!0 var3933)) String\r\n    \"\")\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9433088,
            "run_time": 0.030150890350341797,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3933 is 2\r\n; rep: (as @var3933_0 var3933)\r\n; rep: (as @var3933_1 var3933)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun outputBuffer/-1919349735 ((BOUND_VARIABLE_519 var3933)) String \"\")\r\n(define-fun null-var3933 () var3933 (as @var3933_0 var3933))\r\n(define-fun var1871 () var3933 (as @var3933_1 var3933))\r\n(define-fun var1658!1 () String \"\")\r\n(define-fun var1658!2 () String \"\")\r\n(define-fun var2351!1 () String \"\\u{5c}n\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36032512,
            "run_time": 0.12423372268676758,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3933:\n  ;;   var3933!val!0 var3933!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3933!val!0 () var3933)\n  (declare-fun var3933!val!1 () var3933)\n  ;; cardinality constraint:\n  (forall ((x var3933)) (or (= x var3933!val!0) (= x var3933!val!1)))\n  ;; -----------\n  (define-fun var18 () String\n    (outputBuffer/-1919349735 var1871))\n  (define-fun var1662 () String\n    (outputBuffer/-1919349735 var1871))\n  (define-fun null-var3933 () var3933\n    var3933!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1658 () String\n    String-init)\n  (define-fun var981 () String\n    (str.++ var1658!1 (outputBuffer/-1919349735 var1871) \"\\n\"))\n  (define-fun var1871 () var3933\n    var3933!val!0)\n  (define-fun var2351 () String\n    (str.++ var1658!1 (outputBuffer/-1919349735 var1871)))\n  (define-fun var1302 () String\n    (str.++ var1658!1 (outputBuffer/-1919349735 var1871) \"\\n\"))\n  (define-fun var2351!1 () String\n    \"\\n\")\n  (define-fun var1658!1 () String\n    \"\")\n  (define-fun var1658!2 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun outputBuffer/-1919349735 ((x!0 var3933)) String\n    \"\")\n)\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164429824,
            "run_time": 1.6925609111785889,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3933/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.CodeGenerator__getGeneratedCode__-1109491265\\999.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2351!1 =\r\n     concat(var1658!2, \"\\u{5c}n\")\r\n\r\n1271ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuffer: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.parser.CodeGenerator",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = r1.<org.javacc.parser.CodeGenerator: java.lang.StringBuffer outputBuffer>",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\n\")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CodeGenerator__\u300ainit\u300b__637136674\\543.smt2",
        "z3": {
            "memory": 32169984,
            "run_time": 0.09590005874633789,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3366:\r\n  ;;   var3366!val!0 var3366!val!1 var3366!val!4 var3366!val!2 var3366!val!5 var3366!val!3 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3366!val!0 () var3366)\r\n  (declare-fun var3366!val!1 () var3366)\r\n  (declare-fun var3366!val!4 () var3366)\r\n  (declare-fun var3366!val!2 () var3366)\r\n  (declare-fun var3366!val!5 () var3366)\r\n  (declare-fun var3366!val!3 () var3366)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3366))\r\n          (or (= x var3366!val!0)\r\n              (= x var3366!val!1)\r\n              (= x var3366!val!4)\r\n              (= x var3366!val!2)\r\n              (= x var3366!val!5)\r\n              (= x var3366!val!3)))\r\n  ;; -----------\r\n  (define-fun var2782 () String\r\n    String-init)\r\n  (define-fun var2857 () String\r\n    String-init)\r\n  (define-fun var381!2 () var3366\r\n    var3366!val!2)\r\n  (define-fun var381!5 () var3366\r\n    var3366!val!5)\r\n  (define-fun var3432 () String\r\n    (mainBuffer/-1919349735 var381!4))\r\n  (define-fun var381!4 () var3366\r\n    var3366!val!4)\r\n  (define-fun var381 () var3366\r\n    var3366!val!0)\r\n  (define-fun var381!3 () var3366\r\n    var3366!val!3)\r\n  (define-fun var2876 () String\r\n    String-init)\r\n  (define-fun null-var3366 () var3366\r\n    var3366!val!1)\r\n  (define-fun var2782!1 () String\r\n    \"\")\r\n  (define-fun var2857!1 () String\r\n    \"\")\r\n  (define-fun var2876!1 () String\r\n    \"!0!\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var381!1 () var3366\r\n    var3366!val!0)\r\n  (define-fun outputBuffer/-1919349735 ((x!0 var3366)) String\r\n    \"!0!\")\r\n  (define-fun mainBuffer/-1919349735 ((x!0 var3366)) String\r\n    \"!0!\")\r\n  (define-fun staticsBuffer/-1919349735 ((x!0 var3366)) String\r\n    \"\")\r\n  (define-fun includeBuffer/-1919349735 ((x!0 var3366)) String\r\n    \"\")\r\n  (define-fun cast-from-var3366-to-var3247 ((x!0 var3366)) var3247\r\n    var3247!val!0)\r\n  (define-fun <init>/-1430969082 ((x!0 String)) void\r\n    void!val!0)\r\n  (define-fun <init>/-279557996 ((x!0 var3247)) void\r\n    void!val!0)\r\n)\r\n(error \"line 55 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.03160452842712402,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3366 is 6\r\n; rep: (as @var3366_0 var3366)\r\n; rep: (as @var3366_1 var3366)\r\n; rep: (as @var3366_2 var3366)\r\n; rep: (as @var3366_3 var3366)\r\n; rep: (as @var3366_4 var3366)\r\n; rep: (as @var3366_5 var3366)\r\n; cardinality of var3247 is 1\r\n; rep: (as @var3247_0 var3247)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun <init>/-279557996 ((BOUND_VARIABLE_565 var3247)) void (as @void_0 void))\r\n(define-fun cast-from-var3366-to-var3247 ((BOUND_VARIABLE_568 var3366)) var3247 (as @var3247_0 var3247))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1430969082 ((BOUND_VARIABLE_571 String)) void (as @void_0 void))\r\n(define-fun mainBuffer/-1919349735 ((_arg_1 var3366)) String \"\")\r\n(define-fun includeBuffer/-1919349735 ((BOUND_VARIABLE_574 var3366)) String \"\")\r\n(define-fun staticsBuffer/-1919349735 ((BOUND_VARIABLE_577 var3366)) String \"\")\r\n(define-fun outputBuffer/-1919349735 ((_arg_1 var3366)) String \"\")\r\n(define-fun null-var3366 () var3366 (as @var3366_0 var3366))\r\n(define-fun var381 () var3366 (as @var3366_1 var3366))\r\n(define-fun var381!1 () var3366 (as @var3366_0 var3366))\r\n(define-fun var2876!1 () String \"\")\r\n(define-fun var381!2 () var3366 (as @var3366_2 var3366))\r\n(define-fun var2857!1 () String \"\")\r\n(define-fun var381!3 () var3366 (as @var3366_3 var3366))\r\n(define-fun var2782!1 () String \"\")\r\n(define-fun var381!4 () var3366 (as @var3366_4 var3366))\r\n(define-fun var381!5 () var3366 (as @var3366_5 var3366))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35241984,
            "run_time": 0.07846784591674805,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 54 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 55 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 162066432,
            "run_time": 1.5530455112457275,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var381!5 () var3366 var3366!18)\r\n  (define-fun var381!4 () var3366 var3366!16)\r\n  (define-fun var2782!1 () String \"\\u{0}\")\r\n  (define-fun var381!3 () var3366 var3366!12)\r\n  (define-fun var2857!1 () String \"\\u{1}\")\r\n  (define-fun var381!2 () var3366 var3366!8)\r\n  (define-fun var2876!1 () String \"\\u{2}\")\r\n  (define-fun var381 () var3366 var3366!4)\r\n  (define-fun null-var3366 () var3366 var3366!2)\r\n  (define-fun outputBuffer/-1919349735 ((x!0 var3366)) String (ite (= x!0 var3366!18) \"\\u{3}\" \"\"))\r\n  (define-fun staticsBuffer/-1919349735 ((x!0 var3366)) String (ite (= x!0 var3366!16) \"\\u{0}\" \"\"))\r\n  (define-fun includeBuffer/-1919349735 ((x!0 var3366)) String (ite (= x!0 var3366!12) \"\\u{1}\" \"\"))\r\n  (define-fun mainBuffer/-1919349735 ((x!0 var3366)) String (ite (= x!0 var3366!8) \"\\u{2}\" (ite (= x!0 var3366!16) \"\\u{3}\" \"\")))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.StringBuffer: void <init>()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 3
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.CodeGenerator",
            "specialinvoke r0.<java.lang.Object: void <init>()>()",
            "$r1 = new java.lang.StringBuffer",
            "specialinvoke $r1.<java.lang.StringBuffer: void <init>()>()",
            "r0.<org.javacc.parser.CodeGenerator: java.lang.StringBuffer mainBuffer> = $r1",
            "$r2 = new java.lang.StringBuffer",
            "specialinvoke $r2.<java.lang.StringBuffer: void <init>()>()",
            "r0.<org.javacc.parser.CodeGenerator: java.lang.StringBuffer includeBuffer> = $r2",
            "$r3 = new java.lang.StringBuffer",
            "specialinvoke $r3.<java.lang.StringBuffer: void <init>()>()",
            "r0.<org.javacc.parser.CodeGenerator: java.lang.StringBuffer staticsBuffer> = $r3",
            "$r4 = r0.<org.javacc.parser.CodeGenerator: java.lang.StringBuffer mainBuffer>",
            "r0.<org.javacc.parser.CodeGenerator: java.lang.StringBuffer outputBuffer> = $r4",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.NodeFiles__generateSimpleNode_java__-215077206\\700.smt2",
        "z3": {
            "memory": 32079872,
            "run_time": 0.12199807167053223,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2473:\r\n  ;;   var2473!val!0 var2473!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2473!val!0 () var2473)\r\n  (declare-fun var2473!val!1 () var2473)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2473)) (or (= x var2473!val!0) (= x var2473!val!1)))\r\n  ;; -----------\r\n  (define-fun var1243 () String\r\n    var1433_getVisitorReturnType/-842398340)\r\n  (define-fun var3290 () Bool\r\n    (= var1433_getVisitorReturnType/-842398340 \"void\"))\r\n  (define-fun var2534 () var3436\r\n    var2756_getOptions/298379990)\r\n  (define-fun var1683 () var2862\r\n    (var2862_valueOf/1602327315 (= var1433_getVisitorReturnType/-842398340 \"void\")))\r\n  (define-fun var3573 () var2473\r\n    var2473!val!0)\r\n  (define-fun var3954 () String\r\n    var2276-parserName)\r\n  (define-fun null-var2473 () var2473\r\n    var2473!val!1)\r\n  (define-fun var3553 () var1455\r\n    (getPrintWriter/-1782232853 var3573))\r\n  (define-fun var55 () var3866\r\n    var3866-init)\r\n  (define-fun var2842 () var1921\r\n    var1921-init)\r\n  (define-fun var223 () String\r\n    \"\")\r\n  (define-fun var1921-init () var1921\r\n    var1921!val!0)\r\n  (define-fun var3866-init () var3866\r\n    var3866!val!0)\r\n  (define-fun var3553!2 () var1455\r\n    var1455!val!0)\r\n  (define-fun var55!2 () var3866\r\n    var3866!val!0)\r\n  (define-fun var2276-parserName () String\r\n    \"\")\r\n  (define-fun var2756_getOptions/298379990 () var3436\r\n    var3436!val!0)\r\n  (define-fun var55!1 () var3866\r\n    var3866!val!0)\r\n  (define-fun var755 () String\r\n    \"\")\r\n  (define-fun var1767 () String\r\n    \"\")\r\n  (define-fun var2842!2 () var1921\r\n    var1921!val!0)\r\n  (define-fun var3553!3 () var1455\r\n    var1455!val!0)\r\n  (define-fun var3553!1 () var1455\r\n    var1455!val!0)\r\n  (define-fun var2842!1 () var1921\r\n    var1921!val!0)\r\n  (define-fun var2534!1 () var3436\r\n    var3436!val!0)\r\n  (define-fun var55!4 () var3866\r\n    var3866!val!0)\r\n  (define-fun var1433_getVisitorReturnType/-842398340 () String\r\n    \"\")\r\n  (define-fun var1683!1 () var2862\r\n    var2862!val!0)\r\n  (define-fun var55!3 () var3866\r\n    var3866!val!0)\r\n  (define-fun var3954!1 () String\r\n    \"\")\r\n  (define-fun close/2116439267 ((x!0 var1455)) void\r\n    void!val!0)\r\n  (define-fun getPrintWriter/-1782232853 ((x!0 var2473)) var1455\r\n    var1455!val!0)\r\n  (define-fun var2862_valueOf/1602327315 ((x!0 Bool)) var2862\r\n    var2862!val!0)\r\n  (define-fun cast-from-String-to-var2924 ((x!0 String)) var2924\r\n    var2924!val!0)\r\n  (define-fun var3436_put/1464166817 ((x!0 var3436) (x!1 var2924) (x!2 var2924)) var2924\r\n    var2924!val!0)\r\n  (define-fun var237_generatePrologue/-899895352 ((x!0 var1455)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var3866-to-var3436 ((x!0 var3866)) var3436\r\n    var3436!val!0)\r\n  (define-fun <init>/-1344032113 ((x!0 var3866) (x!1 var3436)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var2862-to-var2924 ((x!0 var2862)) var2924\r\n    var2924!val!0)\r\n  (define-fun <init>/1344994893 ((x!0 var1921) (x!1 String) (x!2 var3436)) void\r\n    void!val!0)\r\n  (define-fun generate/-1718254023 ((x!0 var1921) (x!1 var1455)) void\r\n    void!val!0)\r\n)\r\n(error \"line 83 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.03025507926940918,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2473 is 2\r\n; rep: (as @var2473_0 var2473)\r\n; rep: (as @var2473_1 var2473)\r\n; cardinality of var1455 is 1\r\n; rep: (as @var1455_0 var1455)\r\n; cardinality of var237 is 1\r\n; rep: (as @var237_0 var237)\r\n; cardinality of var3866 is 1\r\n; rep: (as @var3866_0 var3866)\r\n; cardinality of var3436 is 1\r\n; rep: (as @var3436_0 var3436)\r\n; cardinality of var2756 is 1\r\n; rep: (as @var2756_0 var2756)\r\n; cardinality of var2276 is 1\r\n; rep: (as @var2276_0 var2276)\r\n; cardinality of var2924 is 1\r\n; rep: (as @var2924_0 var2924)\r\n; cardinality of var1433 is 1\r\n; rep: (as @var1433_0 var1433)\r\n; cardinality of var2862 is 1\r\n; rep: (as @var2862_0 var2862)\r\n; cardinality of var1921 is 1\r\n; rep: (as @var1921_0 var1921)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getPrintWriter/-1782232853 ((BOUND_VARIABLE_507 var2473)) var1455 (as @var1455_0 var1455))\r\n(define-fun var237_generatePrologue/-899895352 ((BOUND_VARIABLE_510 var1455)) void (as @void_0 void))\r\n(define-fun var3866-init () var3866 (as @var3866_0 var3866))\r\n(define-fun var2756_getOptions/298379990 () var3436 (as @var3436_0 var3436))\r\n(define-fun <init>/-1344032113 ((BOUND_VARIABLE_513 var3866) (BOUND_VARIABLE_514 var3436)) void (as @void_0 void))\r\n(define-fun var3436_put/1464166817 ((BOUND_VARIABLE_517 var3436) (BOUND_VARIABLE_518 var2924) (BOUND_VARIABLE_519 var2924)) var2924 (as @var2924_0 var2924))\r\n(define-fun cast-from-var3866-to-var3436 ((BOUND_VARIABLE_522 var3866)) var3436 (as @var3436_0 var3436))\r\n(define-fun cast-from-String-to-var2924 ((BOUND_VARIABLE_525 String)) var2924 (as @var2924_0 var2924))\r\n(define-fun var1433_getVisitorReturnType/-842398340 () String \"\")\r\n(define-fun var2862_valueOf/1602327315 ((BOUND_VARIABLE_528 Bool)) var2862 (as @var2862_0 var2862))\r\n(define-fun cast-from-var2862-to-var2924 ((BOUND_VARIABLE_531 var2862)) var2924 (as @var2924_0 var2924))\r\n(define-fun var1921-init () var1921 (as @var1921_0 var1921))\r\n(define-fun <init>/1344994893 ((BOUND_VARIABLE_534 var1921) (BOUND_VARIABLE_535 String) (BOUND_VARIABLE_536 var3436)) void (as @void_0 void))\r\n(define-fun generate/-1718254023 ((BOUND_VARIABLE_539 var1921) (BOUND_VARIABLE_540 var1455)) void (as @void_0 void))\r\n(define-fun close/2116439267 ((BOUND_VARIABLE_543 var1455)) void (as @void_0 void))\r\n(define-fun null-var2473 () var2473 (as @var2473_0 var2473))\r\n(define-fun var2276-parserName () String \"\")\r\n(define-fun var3573 () var2473 (as @var2473_1 var2473))\r\n(define-fun var3553!1 () var1455 (as @var1455_0 var1455))\r\n(define-fun var55!1 () var3866 (as @var3866_0 var3866))\r\n(define-fun var2534!1 () var3436 (as @var3436_0 var3436))\r\n(define-fun var55!2 () var3866 (as @var3866_0 var3866))\r\n(define-fun var223 () String \"\")\r\n(define-fun var3954!1 () String \"\")\r\n(define-fun var55!3 () var3866 (as @var3866_0 var3866))\r\n(define-fun var755 () String \"\")\r\n(define-fun var1683!1 () var2862 (as @var2862_0 var2862))\r\n(define-fun var2842!1 () var1921 (as @var1921_0 var1921))\r\n(define-fun var1767 () String \"\")\r\n(define-fun var55!4 () var3866 (as @var3866_0 var3866))\r\n(define-fun var2842!2 () var1921 (as @var1921_0 var1921))\r\n(define-fun var3553!2 () var1455 (as @var1455_0 var1455))\r\n(define-fun var3553!3 () var1455 (as @var1455_0 var1455))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36622336,
            "run_time": 0.13884449005126953,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2473:\n  ;;   var2473!val!0 var2473!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2473!val!0 () var2473)\n  (declare-fun var2473!val!1 () var2473)\n  ;; cardinality constraint:\n  (forall ((x var2473)) (or (= x var2473!val!0) (= x var2473!val!1)))\n  ;; -----------\n  (define-fun var2842 () var1921\n    var1921-init)\n  (define-fun var3290 () Bool\n    (= var1433_getVisitorReturnType/-842398340 \"void\"))\n  (define-fun var1683 () var2862\n    (var2862_valueOf/1602327315 (= var1433_getVisitorReturnType/-842398340 \"void\")))\n  (define-fun var3954 () String\n    var2276-parserName)\n  (define-fun var2534 () var3436\n    var2756_getOptions/298379990)\n  (define-fun var3573 () var2473\n    var2473!val!0)\n  (define-fun null-var2473 () var2473\n    var2473!val!1)\n  (define-fun var1243 () String\n    var1433_getVisitorReturnType/-842398340)\n  (define-fun var3553 () var1455\n    (getPrintWriter/-1782232853 var3573))\n  (define-fun var55 () var3866\n    var3866-init)\n  (define-fun var223 () String\n    \"\")\n  (define-fun var1921-init () var1921\n    var1921!val!0)\n  (define-fun var3866-init () var3866\n    var3866!val!0)\n  (define-fun var3553!2 () var1455\n    var1455!val!0)\n  (define-fun var55!2 () var3866\n    var3866!val!0)\n  (define-fun var2276-parserName () String\n    \"\")\n  (define-fun var2756_getOptions/298379990 () var3436\n    var3436!val!0)\n  (define-fun var55!1 () var3866\n    var3866!val!0)\n  (define-fun var755 () String\n    \"\")\n  (define-fun var1767 () String\n    \"\")\n  (define-fun var2842!2 () var1921\n    var1921!val!0)\n  (define-fun var3553!3 () var1455\n    var1455!val!0)\n  (define-fun var3553!1 () var1455\n    var1455!val!0)\n  (define-fun var2842!1 () var1921\n    var1921!val!0)\n  (define-fun var2534!1 () var3436\n    var3436!val!0)\n  (define-fun var55!4 () var3866\n    var3866!val!0)\n  (define-fun var1433_getVisitorReturnType/-842398340 () String\n    \"\")\n  (define-fun var1683!1 () var2862\n    var2862!val!0)\n  (define-fun var55!3 () var3866\n    var3866!val!0)\n  (define-fun var3954!1 () String\n    \"\")\n  (define-fun close/2116439267 ((x!0 var1455)) void\n    void!val!0)\n  (define-fun getPrintWriter/-1782232853 ((x!0 var2473)) var1455\n    var1455!val!0)\n  (define-fun var2862_valueOf/1602327315 ((x!0 Bool)) var2862\n    var2862!val!0)\n  (define-fun cast-from-String-to-var2924 ((x!0 String)) var2924\n    var2924!val!0)\n  (define-fun var3436_put/1464166817 ((x!0 var3436) (x!1 var2924) (x!2 var2924)) var2924\n    var2924!val!0)\n  (define-fun var237_generatePrologue/-899895352 ((x!0 var1455)) void\n    void!val!0)\n  (define-fun cast-from-var3866-to-var3436 ((x!0 var3866)) var3436\n    var3436!val!0)\n  (define-fun <init>/-1344032113 ((x!0 var3866) (x!1 var3436)) void\n    void!val!0)\n  (define-fun cast-from-var2862-to-var2924 ((x!0 var2862)) var2924\n    var2924!val!0)\n  (define-fun <init>/1344994893 ((x!0 var1921) (x!1 String) (x!2 var3436)) void\n    void!val!0)\n  (define-fun generate/-1718254023 ((x!0 var1921) (x!1 var1455)) void\n    void!val!0)\n)\n(error \"line 83 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 161570816,
            "run_time": 1.300844430923462,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3573 () var2473 var2473!4)\r\n  (define-fun null-var2473 () var2473 var2473!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 15,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.OutputFile",
            "r1 = virtualinvoke r0.<org.javacc.parser.OutputFile: java.io.PrintWriter getPrintWriter()>()",
            "staticinvoke <org.javacc.jjtree.NodeFiles: void generatePrologue(java.io.PrintWriter)>(r1)",
            "$r2 = new java.util.HashMap",
            "$r3 = staticinvoke <org.javacc.parser.Options: java.util.Map getOptions()>()",
            "specialinvoke $r2.<java.util.HashMap: void <init>(java.util.Map)>($r3)",
            "$r4 = <org.javacc.jjtree.JJTreeGlobals: java.lang.String parserName>",
            "interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"PARSER_NAME\", $r4)",
            "$r5 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getVisitorReturnType()>()",
            "$z0 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(\"void\")",
            "$r6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)",
            "interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"VISITOR_RETURN_TYPE_VOID\", $r6)",
            "$r7 = new org.javacc.utils.OutputFileGenerator",
            "specialinvoke $r7.<org.javacc.utils.OutputFileGenerator: void <init>(java.lang.String,java.util.Map)>(\"/templates/SimpleNode.template\", $r2)",
            "virtualinvoke $r7.<org.javacc.utils.OutputFileGenerator: void generate(java.io.PrintWriter)>(r1)",
            "virtualinvoke r1.<java.io.PrintWriter: void close()>()",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JJTreeState__nameState__428850403\\352.smt2",
        "z3": {
            "memory": 31719424,
            "run_time": 0.08879375457763672,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2301-parserName () String\r\n    \"\")\r\n  (define-fun var3806!1 () String\r\n    \"JJT\")\r\n  (define-fun var3303!1 () String\r\n    \"\")\r\n  (define-fun var3303!2 () String\r\n    \"JJT\")\r\n  (define-fun var1028!1 () String\r\n    \"JJTState\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3806 () String\r\n    (str.++ var3303!1 \"JJT\"))\r\n  (define-fun var1028 () String\r\n    (str.++ var3303!1 \"JJT\" var2301-parserName))\r\n  (define-fun var3303 () String\r\n    String-init)\r\n  (define-fun var1303 () String\r\n    (str.++ var3303!1 \"JJT\" var2301-parserName \"State\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3425 () String\r\n    (str.++ var3303!1 \"JJT\" var2301-parserName \"State\"))\r\n  (define-fun var3800 () String\r\n    var2301-parserName)\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9924608,
            "run_time": 0.031493425369262695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2301 is 1\r\n; rep: (as @var2301_0 var2301)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2301-parserName () String \"\")\r\n(define-fun var3303!1 () String \"\")\r\n(define-fun var3303!2 () String \"JJT\")\r\n(define-fun var3806!1 () String \"JJT\")\r\n(define-fun var1028!1 () String \"JJTState\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36122624,
            "run_time": 0.14018726348876953,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2301-parserName () String\n    \"\")\n  (define-fun var3806!1 () String\n    \"JJT\")\n  (define-fun var3303!1 () String\n    \"\")\n  (define-fun var3303!2 () String\n    \"JJT\")\n  (define-fun var1028!1 () String\n    \"JJTState\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3303 () String\n    String-init)\n  (define-fun var1303 () String\n    (str.++ var3303!1 \"JJT\" var2301-parserName \"State\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3425 () String\n    (str.++ var3303!1 \"JJT\" var2301-parserName \"State\"))\n  (define-fun var3800 () String\n    var2301-parserName)\n  (define-fun var3806 () String\n    (str.++ var3303!1 \"JJT\"))\n  (define-fun var1028 () String\n    (str.++ var3303!1 \"JJT\" var2301-parserName))\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168120320,
            "run_time": 1.6255223751068115,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1028!1 () String \"JJTState\")\r\n  (define-fun var3806!1 () String \"JJT\")\r\n  (define-fun var3303!2 () String \"JJT\")\r\n  (define-fun var3303!1 () String \"\")\r\n  (define-fun var2301-parserName () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"JJT\")",
            "$r1 = <org.javacc.jjtree.JJTreeGlobals: java.lang.String parserName>",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"State\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CodeGenerator__fixupLongLiterals__1620635323\\717.smt2",
        "z3": {
            "memory": 32043008,
            "run_time": 0.1063840389251709,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var865:\r\n  ;;   var865!val!1 var865!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var865!val!1 () var865)\r\n  (declare-fun var865!val!0 () var865)\r\n  ;; cardinality constraint:\r\n  (forall ((x var865)) (or (= x var865!val!1) (= x var865!val!0)))\r\n  ;; -----------\r\n  (define-fun var760 () Int\r\n    (- (length/-1112840705 var1180) 1))\r\n  (define-fun var1180 () String\r\n    \"!0!\")\r\n  (define-fun var2949 () Int\r\n    0)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var909 () Int\r\n    (length/-1112840705 var1180))\r\n  (define-fun var3887 () var865\r\n    var865!val!0)\r\n  (define-fun null-var865 () var865\r\n    var865!val!1)\r\n  (define-fun length/-1112840705 ((x!0 String)) Int\r\n    0)\r\n)\r\n(error \"line 25 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.030631542205810547,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var865 is 2\r\n; rep: (as @var865_0 var865)\r\n; rep: (as @var865_1 var865)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun length/-1112840705 ((_arg_1 String)) Int 0)\r\n(define-fun null-var865 () var865 (as @var865_0 var865))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3887 () var865 (as @var865_1 var865))\r\n(define-fun var1180 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36876288,
            "run_time": 0.13784313201904297,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var865:\n  ;;   var865!val!1 var865!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var865!val!1 () var865)\n  (declare-fun var865!val!0 () var865)\n  ;; cardinality constraint:\n  (forall ((x var865)) (or (= x var865!val!1) (= x var865!val!0)))\n  ;; -----------\n  (define-fun var1180 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var865 () var865\n    var865!val!1)\n  (define-fun var909 () Int\n    (length/-1112840705 var1180))\n  (define-fun var760 () Int\n    (- (length/-1112840705 var1180) 1))\n  (define-fun var2949 () Int\n    0)\n  (define-fun var3887 () var865\n    var865!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun length/-1112840705 ((x!0 String)) Int\n    0)\n)\n(error \"line 25 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 142192640,
            "run_time": 1.1435532569885254,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1180 () String \"\\u{0}\")\r\n  (define-fun var3887 () var865 var865!6)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var865 () var865 var865!4)\r\n  (define-fun length/-1112840705 ((x!0 String)) Int (ite (= x!0 \"\\u{0}\") 1 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: int length()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.parser.CodeGenerator",
            "r0 := @parameter0: java.lang.StringBuffer",
            "i7 = 0",
            "$i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>()",
            "$i1 = $i0 - 1",
            "if i7 >= $i1 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.NodeFiles__visitorClass__1527520809\\461.smt2",
        "z3": {
            "memory": 31281152,
            "run_time": 0.10464215278625488,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3097-parserName () String\r\n    \"\")\r\n  (define-fun var3059!2 () String\r\n    \"\")\r\n  (define-fun var1959!1 () String\r\n    \"Visitor\")\r\n  (define-fun var3059!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3059 () String\r\n    String-init)\r\n  (define-fun var2047 () String\r\n    var3097-parserName)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1774 () String\r\n    (str.++ var3059!1 var3097-parserName \"Visitor\"))\r\n  (define-fun var1959 () String\r\n    (str.++ var3059!1 var3097-parserName))\r\n  (define-fun var2132 () String\r\n    (str.++ var3059!1 var3097-parserName \"Visitor\"))\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.03216409683227539,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3097 is 1\r\n; rep: (as @var3097_0 var3097)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var3097-parserName () String \"\")\r\n(define-fun var3059!1 () String \"\")\r\n(define-fun var3059!2 () String \"\")\r\n(define-fun var1959!1 () String \"Visitor\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35790848,
            "run_time": 0.14142370223999023,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3097-parserName () String\n    \"\")\n  (define-fun var3059!2 () String\n    \"\")\n  (define-fun var1959!1 () String\n    \"Visitor\")\n  (define-fun var3059!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2047 () String\n    var3097-parserName)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1774 () String\n    (str.++ var3059!1 var3097-parserName \"Visitor\"))\n  (define-fun var1959 () String\n    (str.++ var3059!1 var3097-parserName))\n  (define-fun var2132 () String\n    (str.++ var3059!1 var3097-parserName \"Visitor\"))\n  (define-fun var3059 () String\n    String-init)\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163061760,
            "run_time": 1.3751580715179443,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1959!1 () String \"Visitor\")\r\n  (define-fun var3059!2 () String \"\")\r\n  (define-fun var3059!1 () String \"\")\r\n  (define-fun var3097-parserName () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r1 = <org.javacc.jjtree.JJTreeGlobals: java.lang.String parserName>",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Visitor\")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CodeGenerator__genModifier__-206215228\\1058.smt2",
        "z3": {
            "memory": 31760384,
            "run_time": 0.0889134407043457,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1463:\r\n  ;;   var1463!val!1 var1463!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1463!val!1 () var1463)\r\n  (declare-fun var1463!val!0 () var1463)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1463)) (or (= x var1463!val!1) (= x var1463!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3057:\r\n  ;;   var3057!val!1 var3057!val!0 var3057!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3057!val!1 () var3057)\r\n  (declare-fun var3057!val!0 () var3057)\r\n  (declare-fun var3057!val!2 () var3057)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3057))\r\n          (or (= x var3057!val!1) (= x var3057!val!0) (= x var3057!val!2)))\r\n  ;; -----------\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-var1463 () var1463\r\n    var1463!val!1)\r\n  (define-fun var312 () String\r\n    (toLowerCase/1946809429 var437 var3344-ENGLISH))\r\n  (define-fun var2426 () (Array Int var3057)\r\n    arr-var3057-init)\r\n  (define-fun var3205 () var3344\r\n    var3344-ENGLISH)\r\n  (define-fun var3790 () Bool\r\n    (isJavaLanguage/-1752064482 var2331))\r\n  (define-fun var2426!1 () (Array Int var3057)\r\n    (store ((as const (Array Int var3057)) var3057!val!0) 2 var3057!val!1))\r\n  (define-fun null-__Array__Int__var3057__ () (Array Int var3057)\r\n    ((as const (Array Int var3057)) var3057!val!2))\r\n  (define-fun var437 () String\r\n    \"!0!\")\r\n  (define-fun var2331 () var1463\r\n    var1463!val!0)\r\n  (define-fun var2426!2 () (Array Int var3057)\r\n    ((as const (Array Int var3057)) var3057!val!0))\r\n  (define-fun arr-var3057-init () (Array Int var3057)\r\n    ((as const (Array Int var3057)) var3057!val!0))\r\n  (define-fun var2331!1 () var1463\r\n    var1463!val!1)\r\n  (define-fun var3344-ENGLISH () var3344\r\n    var3344!val!0)\r\n  (define-fun isJavaLanguage/-1752064482 ((x!0 var1463)) Bool\r\n    true)\r\n  (define-fun cast-from-String-to-var3057 ((x!0 String)) var3057\r\n    var3057!val!0)\r\n  (define-fun genCode/442726974 ((x!0 var1463) (x!1 (Array Int var3057))) void\r\n    void!val!0)\r\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var3344)) String\r\n    \"\")\r\n)\r\n(error \"line 45 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11943936,
            "run_time": 0.03186488151550293,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1463 is 2\r\n; rep: (as @var1463_0 var1463)\r\n; rep: (as @var1463_1 var1463)\r\n; cardinality of var1634 is 1\r\n; rep: (as @var1634_0 var1634)\r\n; cardinality of var3344 is 1\r\n; rep: (as @var3344_0 var3344)\r\n; cardinality of var3057 is 2\r\n; rep: (as @var3057_0 var3057)\r\n; rep: (as @var3057_1 var3057)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun toLowerCase/1946809429 ((BOUND_VARIABLE_615 String) (BOUND_VARIABLE_616 var3344)) String \"\")\r\n(define-fun isJavaLanguage/-1752064482 ((_arg_1 var1463)) Bool true)\r\n(define-fun arr-var3057-init () (Array Int var3057) ((as const (Array Int var3057)) (as @var3057_0 var3057)))\r\n(define-fun cast-from-String-to-var3057 ((_arg_1 String)) var3057 (as @var3057_1 var3057))\r\n(define-fun genCode/442726974 ((BOUND_VARIABLE_620 var1463) (BOUND_VARIABLE_621 (Array Int var3057))) void (as @void_0 void))\r\n(define-fun null-var1463 () var1463 (as @var1463_0 var1463))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3344-ENGLISH () var3344 (as @var3344_0 var3344))\r\n(define-fun null-__Array__Int__var3057__ () (Array Int var3057) (store ((as const (Array Int var3057)) (as @var3057_1 var3057)) 0 (as @var3057_0 var3057)))\r\n(define-fun var2331 () var1463 (as @var1463_1 var1463))\r\n(define-fun var437 () String \"\")\r\n(define-fun var2426!1 () (Array Int var3057) (store ((as const (Array Int var3057)) (as @var3057_0 var3057)) 0 (as @var3057_1 var3057)))\r\n(define-fun var2331!1 () var1463 (as @var1463_0 var1463))\r\n(define-fun var2426!2 () (Array Int var3057) ((as const (Array Int var3057)) (as @var3057_0 var3057)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36962304,
            "run_time": 0.13913846015930176,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1463:\n  ;;   var1463!val!1 var1463!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1463!val!1 () var1463)\n  (declare-fun var1463!val!0 () var1463)\n  ;; cardinality constraint:\n  (forall ((x var1463)) (or (= x var1463!val!1) (= x var1463!val!0)))\n  ;; -----------\n  ;; universe for var3057:\n  ;;   var3057!val!1 var3057!val!0 var3057!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3057!val!1 () var3057)\n  (declare-fun var3057!val!0 () var3057)\n  (declare-fun var3057!val!2 () var3057)\n  ;; cardinality constraint:\n  (forall ((x var3057))\n          (or (= x var3057!val!1) (= x var3057!val!0) (= x var3057!val!2)))\n  ;; -----------\n  (define-fun var437 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-__Array__Int__var3057__ () (Array Int var3057)\n    ((as const (Array Int var3057)) var3057!val!2))\n  (define-fun var2426 () (Array Int var3057)\n    arr-var3057-init)\n  (define-fun var2331 () var1463\n    var1463!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3790 () Bool\n    (isJavaLanguage/-1752064482 var2331))\n  (define-fun var3205 () var3344\n    var3344-ENGLISH)\n  (define-fun var2426!1 () (Array Int var3057)\n    (store ((as const (Array Int var3057)) var3057!val!1) 0 var3057!val!0))\n  (define-fun null-var1463 () var1463\n    var1463!val!1)\n  (define-fun var312 () String\n    (toLowerCase/1946809429 var437 var3344-ENGLISH))\n  (define-fun var2426!2 () (Array Int var3057)\n    ((as const (Array Int var3057)) var3057!val!0))\n  (define-fun arr-var3057-init () (Array Int var3057)\n    ((as const (Array Int var3057)) var3057!val!0))\n  (define-fun var2331!1 () var1463\n    var1463!val!1)\n  (define-fun var3344-ENGLISH () var3344\n    var3344!val!0)\n  (define-fun isJavaLanguage/-1752064482 ((x!0 var1463)) Bool\n    true)\n  (define-fun cast-from-String-to-var3057 ((x!0 String)) var3057\n    var3057!val!0)\n  (define-fun genCode/442726974 ((x!0 var1463) (x!1 (Array Int var3057))) void\n    void!val!0)\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var3344)) String\n    \"\")\n)\n(error \"line 45 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180604928,
            "run_time": 1.1793837547302246,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2426!1 () (Array Int var3057) (store ((as const (Array Int var3057)) var3057!24) 0 var3057!22))\r\n  (define-fun var437 () String \"\\u{0}\")\r\n  (define-fun var2331 () var1463 var1463!4)\r\n  (define-fun null-__Array__Int__var3057__ () (Array Int var3057) ((as const (Array Int var3057)) var3057!0))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var1463 () var1463 var1463!2)\r\n  (define-fun var3057!22 () var3057 (cast-from-String-to-var3057 \"\\u{0}\"))\r\n  (define-fun isJavaLanguage/-1752064482 ((x!0 var1463)) Bool (ite (= x!0 var1463!4) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>": 1
        },
        "jimple_statements": [
            "r3 := @this: org.javacc.parser.CodeGenerator",
            "r0 := @parameter0: java.lang.String",
            "$r1 = <java.util.Locale: java.util.Locale ENGLISH>",
            "r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1)",
            "$z0 = virtualinvoke r3.<org.javacc.parser.CodeGenerator: boolean isJavaLanguage()>()",
            "if $z0 == 0 goto $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"public\")",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r9[0] = r0",
            "virtualinvoke r3.<org.javacc.parser.CodeGenerator: void genCode(java.lang.Object[])>($r9)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CodeGenerator__getStringForTokenOnly__1047505572\\828.smt2",
        "z3": {
            "memory": 32210944,
            "run_time": 0.0723123550415039,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2265:\r\n  ;;   var2265!val!2 var2265!val!0 var2265!val!1 var2265!val!3 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2265!val!2 () var2265)\r\n  (declare-fun var2265!val!0 () var2265)\r\n  (declare-fun var2265!val!1 () var2265)\r\n  (declare-fun var2265!val!3 () var2265)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2265))\r\n          (or (= x var2265!val!2)\r\n              (= x var2265!val!0)\r\n              (= x var2265!val!1)\r\n              (= x var2265!val!3)))\r\n  ;; -----------\r\n  ;; universe for var3185:\r\n  ;;   var3185!val!0 var3185!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3185!val!0 () var3185)\r\n  (declare-fun var3185!val!1 () var3185)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3185)) (or (= x var3185!val!0) (= x var3185!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var3185 () var3185\r\n    var3185!val!1)\r\n  (define-fun var2042 () Int\r\n    (beginLine/197050796 var797))\r\n  (define-fun var2707 () String\r\n    \"\")\r\n  (define-fun var3163 () String\r\n    (image/197050796 var797))\r\n  (define-fun var421 () String\r\n    (str.++ var2964!1\r\n        \"\"\r\n        (var1523_addUnicodeEscapes/1686793564 (image/197050796 var797))))\r\n  (define-fun var3685 () Int\r\n    (cline/-1919349735 var2020))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var391 () Int\r\n    (+ (endColumn/197050796 var797) 1))\r\n  (define-fun var2964 () String\r\n    String-init)\r\n  (define-fun var1037 () Int\r\n    (endColumn/197050796 var797))\r\n  (define-fun var797 () var3185\r\n    var3185!val!0)\r\n  (define-fun var2159 () String\r\n    (str.++ var2964!1 \"\"))\r\n  (define-fun var2020!2 () var2265\r\n    var2265!val!3)\r\n  (define-fun var2965 () Int\r\n    (ccol/-1919349735 var2020))\r\n  (define-fun var1360 () Int\r\n    (kind/197050796 var797))\r\n  (define-fun var366 () String\r\n    (var1523_addUnicodeEscapes/1686793564 (image/197050796 var797)))\r\n  (define-fun var2020 () var2265\r\n    var2265!val!0)\r\n  (define-fun var372 () String\r\n    (str.++ var2964!1\r\n        \"\"\r\n        (var1523_addUnicodeEscapes/1686793564 (image/197050796 var797))))\r\n  (define-fun var2020!1 () var2265\r\n    var2265!val!2)\r\n  (define-fun var2765 () String\r\n    (image/197050796 var797))\r\n  (define-fun null-var2265 () var2265\r\n    var2265!val!1)\r\n  (define-fun var3721 () Int\r\n    (endLine/197050796 var797))\r\n  (define-fun var3067 () Int\r\n    (beginColumn/197050796 var797))\r\n  (define-fun var2238 () Int\r\n    (str.len (image/197050796 var797)))\r\n  (define-fun var2964!1 () String\r\n    \"\")\r\n  (define-fun var2964!2 () String\r\n    \"\")\r\n  (define-fun var2159!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun beginColumn/197050796 ((x!0 var3185)) Int\r\n    0)\r\n  (define-fun endColumn/197050796 ((x!0 var3185)) Int\r\n    0)\r\n  (define-fun cline/-1919349735 ((x!0 var2265)) Int\r\n    (ite (= x!0 var2265!val!2) 4\r\n      0))\r\n  (define-fun endLine/197050796 ((x!0 var3185)) Int\r\n    4)\r\n  (define-fun ccol/-1919349735 ((x!0 var2265)) Int\r\n    (ite (= x!0 var2265!val!3) 1\r\n      0))\r\n  (define-fun kind/197050796 ((x!0 var3185)) Int\r\n    94)\r\n  (define-fun beginLine/197050796 ((x!0 var3185)) Int\r\n    0)\r\n  (define-fun image/197050796 ((x!0 var3185)) String\r\n    \"\")\r\n  (define-fun var1523_addUnicodeEscapes/1686793564 ((x!0 String)) String\r\n    \"\")\r\n)\r\n(error \"line 79 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.02916121482849121,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2265 is 4\r\n; rep: (as @var2265_0 var2265)\r\n; rep: (as @var2265_1 var2265)\r\n; rep: (as @var2265_2 var2265)\r\n; rep: (as @var2265_3 var2265)\r\n; cardinality of var3185 is 2\r\n; rep: (as @var3185_0 var3185)\r\n; rep: (as @var3185_1 var3185)\r\n; cardinality of var1523 is 1\r\n; rep: (as @var1523_0 var1523)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cline/-1919349735 ((_arg_1 var2265)) Int 0)\r\n(define-fun beginLine/197050796 ((_arg_1 var3185)) Int 0)\r\n(define-fun ccol/-1919349735 ((_arg_1 var2265)) Int 0)\r\n(define-fun beginColumn/197050796 ((_arg_1 var3185)) Int 0)\r\n(define-fun kind/197050796 ((_arg_1 var3185)) Int 94)\r\n(define-fun String-init () String \"\")\r\n(define-fun image/197050796 ((_arg_1 var3185)) String \"\")\r\n(define-fun var1523_addUnicodeEscapes/1686793564 ((BOUND_VARIABLE_750 String)) String \"\")\r\n(define-fun endLine/197050796 ((_arg_1 var3185)) Int 0)\r\n(define-fun endColumn/197050796 ((_arg_1 var3185)) Int (- 1))\r\n(define-fun null-var2265 () var2265 (as @var2265_0 var2265))\r\n(define-fun null-var3185 () var3185 (as @var3185_0 var3185))\r\n(define-fun var2020 () var2265 (as @var2265_1 var2265))\r\n(define-fun var797 () var3185 (as @var3185_1 var3185))\r\n(define-fun var2964!1 () String \"\")\r\n(define-fun var2964!2 () String \"\")\r\n(define-fun var2159!1 () String \"\")\r\n(define-fun var2020!1 () var2265 (as @var2265_2 var2265))\r\n(define-fun var2020!2 () var2265 (as @var2265_3 var2265))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36151296,
            "run_time": 0.09374046325683594,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 78 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 79 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 183451648,
            "run_time": 1.352778673171997,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2020!2 () var2265 var2265!200)\r\n  (define-fun var2020!1 () var2265 var2265!198)\r\n  (define-fun var2159!1 () String \"\")\r\n  (define-fun var2964!2 () String \"\")\r\n  (define-fun var2964!1 () String \"\")\r\n  (define-fun var797 () var3185 var3185!196)\r\n  (define-fun var2020 () var2265 var2265!194)\r\n  (define-fun null-var3185 () var3185 var3185!192)\r\n  (define-fun null-var2265 () var2265 var2265!190)\r\n  (define-fun endColumn/197050796 ((x!0 var3185)) Int (ite (= x!0 var3185!196) 107 0))\r\n  (define-fun endLine/197050796 ((x!0 var3185)) Int (ite (= x!0 var3185!196) 109 0))\r\n  (define-fun var1523_addUnicodeEscapes/1686793564 ((x!0 String)) String (ite (= x!0 \"\") \"\" \"\"))\r\n  (define-fun image/197050796 ((x!0 var3185)) String (ite (= x!0 var3185!196) \"\" \"\"))\r\n  (define-fun kind/197050796 ((x!0 var3185)) Int (ite (= x!0 var3185!196) 94 0))\r\n  (define-fun beginColumn/197050796 ((x!0 var3185)) Int (ite (= x!0 var3185!196) 111 0))\r\n  (define-fun ccol/-1919349735 ((x!0 var2265)) Int (ite (= x!0 var2265!194) 111 (ite (= x!0 var2265!200) 108 0)))\r\n  (define-fun beginLine/197050796 ((x!0 var3185)) Int (ite (= x!0 var3185!196) 110 0))\r\n  (define-fun cline/-1919349735 ((x!0 var2265)) Int (ite (= x!0 var2265!194) 110 (ite (= x!0 var2265!198) 109 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 10,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.CodeGenerator",
            "r1 := @parameter0: org.javacc.parser.Token",
            "r20 = \"\"",
            "$i1 = r0.<org.javacc.parser.CodeGenerator: int cline>",
            "$i0 = r1.<org.javacc.parser.Token: int beginLine>",
            "if $i1 >= $i0 goto $i3 = r0.<org.javacc.parser.CodeGenerator: int ccol>",
            "$i3 = r0.<org.javacc.parser.CodeGenerator: int ccol>",
            "$i2 = r1.<org.javacc.parser.Token: int beginColumn>",
            "if $i3 >= $i2 goto $i4 = r1.<org.javacc.parser.Token: int kind>",
            "$i4 = r1.<org.javacc.parser.Token: int kind>",
            "if $i4 == 94 goto $r24 = new java.lang.StringBuilder",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r20)",
            "$r3 = r1.<org.javacc.parser.Token: java.lang.String image>",
            "$r4 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String addUnicodeEscapes(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "r21 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "goto [?= $i5 = r1.<org.javacc.parser.Token: int endLine>]",
            "$i5 = r1.<org.javacc.parser.Token: int endLine>",
            "r0.<org.javacc.parser.CodeGenerator: int cline> = $i5",
            "$i6 = r1.<org.javacc.parser.Token: int endColumn>",
            "$i7 = $i6 + 1",
            "r0.<org.javacc.parser.CodeGenerator: int ccol> = $i7",
            "$r7 = r1.<org.javacc.parser.Token: java.lang.String image>",
            "$i8 = virtualinvoke $r7.<java.lang.String: int length()>()",
            "if $i8 <= 0 goto return r21",
            "return r21"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.NodeFiles__generateTreeConstants_java__1562500925\\432.smt2",
        "z3": {
            "memory": 31604736,
            "run_time": 0.6501879692077637,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1445:\r\n  ;;   var1445!val!1 var1445!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1445!val!1 () var1445)\r\n  (declare-fun var1445!val!0 () var1445)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1445)) (or (= x var1445!val!1) (= x var1445!val!0)))\r\n  ;; -----------\r\n  (define-fun var2575 () var1445\r\n    var1445!val!0)\r\n  (define-fun null-var1445 () var1445\r\n    var1445!val!1)\r\n  (define-fun var220 () String\r\n    String-init)\r\n  (define-fun var1909 () var3050\r\n    var3050-init)\r\n  (define-fun var2127 () String\r\n    (str.++ var220!1 var575_nodeConstants/-664664870 \".java\"))\r\n  (define-fun var3208 () String\r\n    var575_nodeConstants/-664664870)\r\n  (define-fun var1492 () String\r\n    (str.++ var220!1 var575_nodeConstants/-664664870 \".java\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var158 () String\r\n    (toString/-1112415476 (cast-from-var1445-to-var2462 var2575)))\r\n  (define-fun var1249 () var1578\r\n    var1578-init)\r\n  (define-fun var2324 () String\r\n    (str.++ var220!1 var575_nodeConstants/-664664870))\r\n  (define-fun var3429 () var3169\r\n    var3169-init)\r\n  (define-fun var2407 () var1578\r\n    var1588_getJJTreeOutputDirectory/-709711143)\r\n  (define-fun var575_nodeConstants/-664664870 () String\r\n    \"\")\r\n  (define-fun var2324!1 () String\r\n    \".java\")\r\n  (define-fun var220!2 () String\r\n    \"\")\r\n  (define-fun var220!1 () String\r\n    \"\")\r\n  (define-fun var1588_getJJTreeOutputDirectory/-709711143 () var1578\r\n    var1578!val!0)\r\n  (define-fun var1909!1 () var3050\r\n    var3050!val!0)\r\n  (define-fun var2407!1 () var1578\r\n    var1578!val!0)\r\n  (define-fun var2127!1 () String\r\n    \"\")\r\n  (define-fun var1249!1 () var1578\r\n    var1578!val!0)\r\n  (define-fun var158!1 () String\r\n    \"\")\r\n  (define-fun var1578-init () var1578\r\n    var1578!val!0)\r\n  (define-fun var3169-init () var3169\r\n    var3169!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3050-init () var3050\r\n    var3050!val!0)\r\n  (define-fun cast-from-var1445-to-var2462 ((x!0 var1445)) var2462\r\n    var2462!val!0)\r\n  (define-fun <init>/1101485922 ((x!0 var3050) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun toString/-1112415476 ((x!0 var2462)) String\r\n    \"\")\r\n  (define-fun <init>/-1833447926 ((x!0 var1578) (x!1 var1578) (x!2 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 67 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.030257701873779297,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var575 is 1\r\n; rep: (as @var575_0 var575)\r\n; cardinality of var1578 is 1\r\n; rep: (as @var1578_0 var1578)\r\n; cardinality of var1588 is 1\r\n; rep: (as @var1588_0 var1588)\r\n; cardinality of var3169 is 1\r\n; rep: (as @var3169_0 var3169)\r\n; cardinality of var1445 is 2\r\n; rep: (as @var1445_0 var1445)\r\n; rep: (as @var1445_1 var1445)\r\n; cardinality of var3050 is 1\r\n; rep: (as @var3050_0 var3050)\r\n; cardinality of var2462 is 1\r\n; rep: (as @var2462_0 var2462)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var575_nodeConstants/-664664870 () String \"\")\r\n(define-fun var1578-init () var1578 (as @var1578_0 var1578))\r\n(define-fun var1588_getJJTreeOutputDirectory/-709711143 () var1578 (as @var1578_0 var1578))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1833447926 ((BOUND_VARIABLE_557 var1578) (BOUND_VARIABLE_558 var1578) (BOUND_VARIABLE_559 String)) void (as @void_0 void))\r\n(define-fun var3169-init () var3169 (as @var3169_0 var3169))\r\n(define-fun var3050-init () var3050 (as @var3050_0 var3050))\r\n(define-fun toString/-1112415476 ((BOUND_VARIABLE_562 var2462)) String \"\")\r\n(define-fun cast-from-var1445-to-var2462 ((BOUND_VARIABLE_565 var1445)) var2462 (as @var2462_0 var2462))\r\n(define-fun <init>/1101485922 ((BOUND_VARIABLE_568 var3050) (BOUND_VARIABLE_569 String)) void (as @void_0 void))\r\n(define-fun null-var1445 () var1445 (as @var1445_0 var1445))\r\n(define-fun var220!1 () String \"\")\r\n(define-fun var220!2 () String \"\")\r\n(define-fun var2324!1 () String \".java\")\r\n(define-fun var1249!1 () var1578 (as @var1578_0 var1578))\r\n(define-fun var2407!1 () var1578 (as @var1578_0 var1578))\r\n(define-fun var2127!1 () String \"\")\r\n(define-fun var2575 () var1445 (as @var1445_1 var1445))\r\n(define-fun var1909!1 () var3050 (as @var3050_0 var3050))\r\n(define-fun var158!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35983360,
            "run_time": 0.07727432250976562,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1445:\n  ;;   var1445!val!1 var1445!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1445!val!1 () var1445)\n  (declare-fun var1445!val!0 () var1445)\n  ;; cardinality constraint:\n  (forall ((x var1445)) (or (= x var1445!val!1) (= x var1445!val!0)))\n  ;; -----------\n  (define-fun var2575 () var1445\n    var1445!val!0)\n  (define-fun null-var1445 () var1445\n    var1445!val!1)\n  (define-fun var2127 () String\n    (str.++ var220!1 var575_nodeConstants/-664664870 \".java\"))\n  (define-fun var3429 () var3169\n    var3169-init)\n  (define-fun var3208 () String\n    var575_nodeConstants/-664664870)\n  (define-fun var2407 () var1578\n    var1588_getJJTreeOutputDirectory/-709711143)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1492 () String\n    (str.++ var220!1 var575_nodeConstants/-664664870 \".java\"))\n  (define-fun var158 () String\n    (toString/-1112415476 (cast-from-var1445-to-var2462 var2575)))\n  (define-fun var2324 () String\n    (str.++ var220!1 var575_nodeConstants/-664664870))\n  (define-fun var1909 () var3050\n    var3050-init)\n  (define-fun var220 () String\n    String-init)\n  (define-fun var1249 () var1578\n    var1578-init)\n  (define-fun var575_nodeConstants/-664664870 () String\n    \"\")\n  (define-fun var2324!1 () String\n    \".java\")\n  (define-fun var220!2 () String\n    \"\")\n  (define-fun var220!1 () String\n    \"\")\n  (define-fun var1588_getJJTreeOutputDirectory/-709711143 () var1578\n    var1578!val!0)\n  (define-fun var1909!1 () var3050\n    var3050!val!0)\n  (define-fun var2407!1 () var1578\n    var1578!val!0)\n  (define-fun var2127!1 () String\n    \"\")\n  (define-fun var1249!1 () var1578\n    var1578!val!0)\n  (define-fun var158!1 () String\n    \"\")\n  (define-fun var1578-init () var1578\n    var1578!val!0)\n  (define-fun var3169-init () var3169\n    var3169!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3050-init () var3050\n    var3050!val!0)\n  (define-fun cast-from-var1445-to-var2462 ((x!0 var1445)) var2462\n    var2462!val!0)\n  (define-fun <init>/1101485922 ((x!0 var3050) (x!1 String)) void\n    void!val!0)\n  (define-fun toString/-1112415476 ((x!0 var2462)) String\n    \"\")\n  (define-fun <init>/-1833447926 ((x!0 var1578) (x!1 var1578) (x!2 String)) void\n    void!val!0)\n)\n(error \"line 67 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166576128,
            "run_time": 1.102602481842041,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1445/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.NodeFiles__generateTreeConstants_java__1562500925\\432.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2324!1 =\r\n     concat(var575_nodeConstants/-664664870, \".java\")\r\n\r\n802ms\r\n"
        },
        "undefined_function_count": 10,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.Throwable: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.javacc.jjtree.NodeFiles: java.lang.String nodeConstants()>()",
            "$r1 = new java.io.File",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.io.File getJJTreeOutputDirectory()>()",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".java\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r5)",
            "$r7 = new org.javacc.parser.OutputFile",
            "$r29 := @caughtexception",
            "$r30 = new java.lang.Error",
            "$r31 = virtualinvoke $r29.<java.io.IOException: java.lang.String toString()>()",
            "specialinvoke $r30.<java.lang.Error: void <init>(java.lang.String)>($r31)",
            "throw $r30"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.NodeScope__constructVariable__1475475132\\422-deviant-0.smt2",
        "z3": {
            "memory": 31260672,
            "run_time": 0.18646240234375,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 59 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.04578447341918945,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35909632,
            "run_time": 0.10891079902648926,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 59 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152223744,
            "run_time": 1.0881049633026123,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: java.lang.String substring(int,int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2,
            "<java.lang.String: int length()>": 2,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.jjtree.NodeScope",
            "r6 := @parameter0: java.lang.String",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"000\")",
            "$i0 = r1.<org.javacc.jjtree.NodeScope: int scopeNumber>",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"jjt\")",
            "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)",
            "$i1 = virtualinvoke r4.<java.lang.String: int length()>()",
            "$i3 = $i1 - 3",
            "$i2 = virtualinvoke r4.<java.lang.String: int length()>()",
            "$r8 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>($i3, $i2)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r11"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.NodeFiles__defaultVisitorClass__1115362172\\515.smt2",
        "z3": {
            "memory": 31719424,
            "run_time": 0.4496886730194092,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1278-parserName () String\r\n    \"\")\r\n  (define-fun var667!2 () String\r\n    \"\")\r\n  (define-fun var1663!1 () String\r\n    \"DefaultVisitor\")\r\n  (define-fun var667!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1663 () String\r\n    (str.++ var667!1 var1278-parserName))\r\n  (define-fun var204 () String\r\n    var1278-parserName)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var614 () String\r\n    (str.++ var667!1 var1278-parserName \"DefaultVisitor\"))\r\n  (define-fun var2133 () String\r\n    (str.++ var667!1 var1278-parserName \"DefaultVisitor\"))\r\n  (define-fun var667 () String\r\n    String-init)\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.06188654899597168,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1278 is 1\r\n; rep: (as @var1278_0 var1278)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var1278-parserName () String \"\")\r\n(define-fun var667!1 () String \"\")\r\n(define-fun var667!2 () String \"\")\r\n(define-fun var1663!1 () String \"DefaultVisitor\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35504128,
            "run_time": 0.07775735855102539,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1278-parserName () String\n    \"\")\n  (define-fun var667!2 () String\n    \"\")\n  (define-fun var1663!1 () String\n    \"DefaultVisitor\")\n  (define-fun var667!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1663 () String\n    (str.++ var667!1 var1278-parserName))\n  (define-fun var204 () String\n    var1278-parserName)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var614 () String\n    (str.++ var667!1 var1278-parserName \"DefaultVisitor\"))\n  (define-fun var2133 () String\n    (str.++ var667!1 var1278-parserName \"DefaultVisitor\"))\n  (define-fun var667 () String\n    String-init)\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169631744,
            "run_time": 1.2302112579345703,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1663!1 () String \"DefaultVisitor\")\r\n  (define-fun var667!2 () String \"\")\r\n  (define-fun var667!1 () String \"\")\r\n  (define-fun var1278-parserName () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r1 = <org.javacc.jjtree.JJTreeGlobals: java.lang.String parserName>",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"DefaultVisitor\")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CodeGenerator__genAnnotation__1589851692\\1025.smt2",
        "z3": {
            "memory": 31834112,
            "run_time": 0.26392245292663574,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3817:\r\n  ;;   var3817!val!0 var3817!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3817!val!0 () var3817)\r\n  (declare-fun var3817!val!1 () var3817)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3817)) (or (= x var3817!val!0) (= x var3817!val!1)))\r\n  ;; -----------\r\n  ;; universe for var286:\r\n  ;;   var286!val!1 var286!val!2 var286!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var286!val!1 () var286)\r\n  (declare-fun var286!val!2 () var286)\r\n  (declare-fun var286!val!0 () var286)\r\n  ;; cardinality constraint:\r\n  (forall ((x var286))\r\n          (or (= x var286!val!1) (= x var286!val!2) (= x var286!val!0)))\r\n  ;; -----------\r\n  (define-fun var3566!1 () (Array Int var286)\r\n    (store ((as const (Array Int var286)) var286!val!0) 2 var286!val!1))\r\n  (define-fun var3710 () Bool\r\n    var2121_isOutputLanguageJava/1735442213)\r\n  (define-fun var3566 () (Array Int var286)\r\n    arr-var286-init)\r\n  (define-fun var646 () String\r\n    String-init)\r\n  (define-fun null-var3817 () var3817\r\n    var3817!val!1)\r\n  (define-fun var1731 () var3817\r\n    var3817!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3549 () String\r\n    (str.++ var646!1 \"@\"))\r\n  (define-fun var322 () String\r\n    (str.++ var646!1 \"@\" var2013))\r\n  (define-fun var2013 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"@\")\r\n  (define-fun var297 () String\r\n    (str.++ var646!1 \"@\" var2013))\r\n  (define-fun null-__Array__Int__var286__ () (Array Int var286)\r\n    ((as const (Array Int var286)) var286!val!2))\r\n  (define-fun var2121_isOutputLanguageJava/1735442213 () Bool\r\n    true)\r\n  (define-fun var3549!1 () String\r\n    \"@\")\r\n  (define-fun var646!2 () String\r\n    \"@\")\r\n  (define-fun var646!1 () String\r\n    \"\")\r\n  (define-fun arr-var286-init () (Array Int var286)\r\n    ((as const (Array Int var286)) var286!val!0))\r\n  (define-fun var1731!1 () var3817\r\n    var3817!val!0)\r\n  (define-fun var3566!2 () (Array Int var286)\r\n    ((as const (Array Int var286)) var286!val!0))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-String-to-var286 ((x!0 String)) var286\r\n    var286!val!0)\r\n  (define-fun genCode/442726974 ((x!0 var3817) (x!1 (Array Int var286))) void\r\n    void!val!0)\r\n)\r\n(error \"line 58 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.04578447341918945,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3817 is 2\r\n; rep: (as @var3817_0 var3817)\r\n; rep: (as @var3817_1 var3817)\r\n; cardinality of var46 is 1\r\n; rep: (as @var46_0 var46)\r\n; cardinality of var2121 is 1\r\n; rep: (as @var2121_0 var2121)\r\n; cardinality of var286 is 2\r\n; rep: (as @var286_0 var286)\r\n; rep: (as @var286_1 var286)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2121_isOutputLanguageJava/1735442213 () Bool true)\r\n(define-fun arr-var286-init () (Array Int var286) ((as const (Array Int var286)) (as @var286_0 var286)))\r\n(define-fun String-init () String \"\")\r\n(define-fun cast-from-String-to-var286 ((_arg_1 String)) var286 (as @var286_1 var286))\r\n(define-fun genCode/442726974 ((BOUND_VARIABLE_745 var3817) (BOUND_VARIABLE_746 (Array Int var286))) void (as @void_0 void))\r\n(define-fun null-var3817 () var3817 (as @var3817_0 var3817))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var286__ () (Array Int var286) (store ((as const (Array Int var286)) (as @var286_1 var286)) 0 (as @var286_0 var286)))\r\n(define-fun var1731 () var3817 (as @var3817_1 var3817))\r\n(define-fun var2013 () String \"\")\r\n(define-fun var646!1 () String \"\")\r\n(define-fun var646!2 () String \"@\")\r\n(define-fun var3549!1 () String \"@\")\r\n(define-fun var3566!1 () (Array Int var286) (store ((as const (Array Int var286)) (as @var286_0 var286)) 0 (as @var286_1 var286)))\r\n(define-fun var1731!1 () var3817 (as @var3817_0 var3817))\r\n(define-fun var3566!2 () (Array Int var286) ((as const (Array Int var286)) (as @var286_0 var286)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37027840,
            "run_time": 0.09347391128540039,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3817:\n  ;;   var3817!val!0 var3817!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3817!val!0 () var3817)\n  (declare-fun var3817!val!1 () var3817)\n  ;; cardinality constraint:\n  (forall ((x var3817)) (or (= x var3817!val!0) (= x var3817!val!1)))\n  ;; -----------\n  ;; universe for var286:\n  ;;   var286!val!1 var286!val!2 var286!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var286!val!1 () var286)\n  (declare-fun var286!val!2 () var286)\n  (declare-fun var286!val!0 () var286)\n  ;; cardinality constraint:\n  (forall ((x var286))\n          (or (= x var286!val!1) (= x var286!val!2) (= x var286!val!0)))\n  ;; -----------\n  (define-fun var3566!1 () (Array Int var286)\n    (store ((as const (Array Int var286)) var286!val!1) 0 var286!val!0))\n  (define-fun var646!1 () String\n    \"\")\n  (define-fun var646!2 () String\n    \"@\")\n  (define-fun var2013 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var3817 () var3817\n    var3817!val!1)\n  (define-fun var3549!1 () String\n    \"@\\u{0}\\u{0}\")\n  (define-fun var2121_isOutputLanguageJava/1735442213 () Bool\n    true)\n  (define-fun null-__Array__Int__var286__ () (Array Int var286)\n    ((as const (Array Int var286)) var286!val!2))\n  (define-fun var3549 () String\n    (str.++ var646!1 \"@\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3710 () Bool\n    var2121_isOutputLanguageJava/1735442213)\n  (define-fun var322 () String\n    (str.++ var646!1 \"@\" var2013))\n  (define-fun var1731 () var3817\n    var3817!val!0)\n  (define-fun var3566 () (Array Int var286)\n    arr-var286-init)\n  (define-fun var297 () String\n    (str.++ var646!1 \"@\" var2013))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var646 () String\n    String-init)\n  (define-fun arr-var286-init () (Array Int var286)\n    ((as const (Array Int var286)) var286!val!0))\n  (define-fun var1731!1 () var3817\n    var3817!val!0)\n  (define-fun var3566!2 () (Array Int var286)\n    ((as const (Array Int var286)) var286!val!0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun cast-from-String-to-var286 ((x!0 String)) var286\n    var286!val!0)\n  (define-fun genCode/442726974 ((x!0 var3817) (x!1 (Array Int var286))) void\n    void!val!0)\n)\n(error \"line 58 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 172572672,
            "run_time": 1.2456481456756592,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3817/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.CodeGenerator__genAnnotation__1589851692\\1025.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_25_3 =\r\n     concat(\"@\", var2013)\r\n   var3549!1 =\r\n     concat(\"@\", var2013)\r\n\r\n927ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r7 := @this: org.javacc.parser.CodeGenerator",
            "r10 := @parameter0: java.lang.String",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean isOutputLanguageJava()>()",
            "if $z0 == 0 goto $r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r15 = newarray (java.lang.Object)[1]",
            "$r16 = new java.lang.StringBuilder",
            "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"@\")",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r15[0] = $r19",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCode(java.lang.Object[])>($r15)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CodeGenerator__getStringToPrint__752248668\\876.smt2",
        "z3": {
            "memory": 31612928,
            "run_time": 0.5848276615142822,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3214:\r\n  ;;   var3214!val!1 var3214!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3214!val!1 () var3214)\r\n  (declare-fun var3214!val!0 () var3214)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3214)) (or (= x var3214!val!1) (= x var3214!val!0)))\r\n  ;; -----------\r\n  ;; universe for var966:\r\n  ;;   var966!val!0 var966!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var966!val!0 () var966)\r\n  (declare-fun var966!val!1 () var966)\r\n  ;; cardinality constraint:\r\n  (forall ((x var966)) (or (= x var966!val!0) (= x var966!val!1)))\r\n  ;; -----------\r\n  (define-fun var1794 () String\r\n    String-init)\r\n  (define-fun var1783 () String\r\n    (getStringForTokenOnly/1047505572 var3154 var2606))\r\n  (define-fun var1755 () String\r\n    (str.++ var1794!1 \"\" (getStringForTokenOnly/1047505572 var3154 var2606)))\r\n  (define-fun null-var3214 () var3214\r\n    var3214!val!1)\r\n  (define-fun var3154 () var3214\r\n    var3214!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2606 () var966\r\n    var966!val!0)\r\n  (define-fun var755 () String\r\n    (str.++ var1794!1 \"\" (getStringForTokenOnly/1047505572 var3154 var2606)))\r\n  (define-fun var3847 () var966\r\n    (specialToken/197050796 var2606))\r\n  (define-fun var1688 () String\r\n    (str.++ var1794!1 \"\"))\r\n  (define-fun var2197 () String\r\n    \"\")\r\n  (define-fun var1688!1 () String\r\n    \"\")\r\n  (define-fun var1794!2 () String\r\n    \"\")\r\n  (define-fun var1794!1 () String\r\n    \"\")\r\n  (define-fun null-var966 () var966\r\n    var966!val!1)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun specialToken/197050796 ((x!0 var966)) var966\r\n    var966!val!1)\r\n  (define-fun getStringForTokenOnly/1047505572 ((x!0 var3214) (x!1 var966)) String\r\n    \"\")\r\n)\r\n(error \"line 45 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.030113935470581055,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3214 is 2\r\n; rep: (as @var3214_0 var3214)\r\n; rep: (as @var3214_1 var3214)\r\n; cardinality of var966 is 2\r\n; rep: (as @var966_0 var966)\r\n; rep: (as @var966_1 var966)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun specialToken/197050796 ((_arg_1 var966)) var966 (as @var966_1 var966))\r\n(define-fun String-init () String \"\")\r\n(define-fun getStringForTokenOnly/1047505572 ((BOUND_VARIABLE_534 var3214) (BOUND_VARIABLE_535 var966)) String \"\")\r\n(define-fun null-var3214 () var3214 (as @var3214_0 var3214))\r\n(define-fun null-var966 () var966 (as @var966_1 var966))\r\n(define-fun var3154 () var3214 (as @var3214_1 var3214))\r\n(define-fun var2606 () var966 (as @var966_0 var966))\r\n(define-fun var1794!1 () String \"\")\r\n(define-fun var1794!2 () String \"\")\r\n(define-fun var1688!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36884480,
            "run_time": 0.0771183967590332,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3214:\n  ;;   var3214!val!1 var3214!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3214!val!1 () var3214)\n  (declare-fun var3214!val!0 () var3214)\n  ;; cardinality constraint:\n  (forall ((x var3214)) (or (= x var3214!val!1) (= x var3214!val!0)))\n  ;; -----------\n  ;; universe for var966:\n  ;;   var966!val!0 var966!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var966!val!0 () var966)\n  (declare-fun var966!val!1 () var966)\n  ;; cardinality constraint:\n  (forall ((x var966)) (or (= x var966!val!0) (= x var966!val!1)))\n  ;; -----------\n  (define-fun var3847 () var966\n    (specialToken/197050796 var2606))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var3214 () var3214\n    var3214!val!1)\n  (define-fun var3154 () var3214\n    var3214!val!0)\n  (define-fun var755 () String\n    (str.++ var1794!1 \"\" (getStringForTokenOnly/1047505572 var3154 var2606)))\n  (define-fun var2197 () String\n    \"\")\n  (define-fun var2606 () var966\n    var966!val!0)\n  (define-fun var1688 () String\n    (str.++ var1794!1 \"\"))\n  (define-fun var1794 () String\n    String-init)\n  (define-fun var1783 () String\n    (getStringForTokenOnly/1047505572 var3154 var2606))\n  (define-fun var1755 () String\n    (str.++ var1794!1 \"\" (getStringForTokenOnly/1047505572 var3154 var2606)))\n  (define-fun var1688!1 () String\n    \"\")\n  (define-fun var1794!2 () String\n    \"\")\n  (define-fun var1794!1 () String\n    \"\")\n  (define-fun null-var966 () var966\n    var966!val!1)\n  (define-fun String-init () String\n    \"\")\n  (define-fun specialToken/197050796 ((x!0 var966)) var966\n    var966!val!1)\n  (define-fun getStringForTokenOnly/1047505572 ((x!0 var3214) (x!1 var966)) String\n    \"\")\n)\n(error \"line 45 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 162340864,
            "run_time": 1.136587142944336,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1688!1 () String \"\")\r\n  (define-fun var1794!2 () String \"\")\r\n  (define-fun var1794!1 () String \"\")\r\n  (define-fun var2606 () var966 var966!8)\r\n  (define-fun var3154 () var3214 var3214!6)\r\n  (define-fun null-var966 () var966 var966!4)\r\n  (define-fun null-var3214 () var3214 var3214!2)\r\n  (define-fun var966!4 () var966 (specialToken/197050796 var966!8))\r\n  (define-fun getStringForTokenOnly/1047505572 ((x!0 var3214) (x!1 var966)) String (ite (and (= x!0 var3214!6) (= x!1 var966!8)) \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.parser.CodeGenerator",
            "r0 := @parameter0: org.javacc.parser.Token",
            "r12 = \"\"",
            "r13 = r0.<org.javacc.parser.Token: org.javacc.parser.Token specialToken>",
            "if r13 == null goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)",
            "$r3 = virtualinvoke r2.<org.javacc.parser.CodeGenerator: java.lang.String getStringForTokenOnly(org.javacc.parser.Token)>(r0)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CodeGenerator__genStringLiteralArrayCPP__1670090044\\567.smt2",
        "z3": {
            "memory": 31272960,
            "run_time": 0.7744486331939697,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2438:\r\n  ;;   var2438!val!1 var2438!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2438!val!1 () var2438)\r\n  (declare-fun var2438!val!0 () var2438)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2438)) (or (= x var2438!val!1) (= x var2438!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3972:\r\n  ;;   var3972!val!1 var3972!val!0 var3972!val!2 var3972!val!3 var3972!val!4 var3972!val!5 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3972!val!1 () var3972)\r\n  (declare-fun var3972!val!0 () var3972)\r\n  (declare-fun var3972!val!2 () var3972)\r\n  (declare-fun var3972!val!3 () var3972)\r\n  (declare-fun var3972!val!4 () var3972)\r\n  (declare-fun var3972!val!5 () var3972)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3972))\r\n          (or (= x var3972!val!1)\r\n              (= x var3972!val!0)\r\n              (= x var3972!val!2)\r\n              (= x var3972!val!3)\r\n              (= x var3972!val!4)\r\n              (= x var3972!val!5)))\r\n  ;; -----------\r\n  (define-fun var762 () String\r\n    \"};\")\r\n  (define-fun var2615 () Int\r\n    0)\r\n  (define-fun var3368 () String\r\n    (str.++ var160!1 \"static const JJString \"))\r\n  (define-fun var3657 () Int\r\n    0)\r\n  (define-fun null-var2438 () var2438\r\n    var2438!val!1)\r\n  (define-fun var2709 () var2438\r\n    var2438!val!0)\r\n  (define-fun null-__Array__Int__var3972__ () (Array Int var3972)\r\n    (store ((as const (Array Int var3972)) var3972!val!3) 4 var3972!val!4))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var160 () String\r\n    String-init)\r\n  (define-fun null-String () String\r\n    \"static const JJString };[] = {\")\r\n  (define-fun var1020 () String\r\n    (str.++ var160!1 \"static const JJString \" var762 \"[] = {\"))\r\n  (define-fun var2984 () Int\r\n    (getLength-Arr-String-1 var3866))\r\n  (define-fun var2033!1 () (Array Int var3972)\r\n    (store ((as const (Array Int var3972)) var3972!val!2) 0 var3972!val!0))\r\n  (define-fun var2033 () (Array Int var3972)\r\n    arr-var3972-init)\r\n  (define-fun null-__Array__Int__String__ () (Array Int String)\r\n    ((as const (Array Int String)) \"t\"))\r\n  (define-fun var3367!1 () (Array Int var3972)\r\n    (store ((as const (Array Int var3972)) var3972!val!5) 0 var3972!val!1))\r\n  (define-fun var3600 () Int\r\n    (getLength-Arr-String-1 var3866))\r\n  (define-fun var894 () String\r\n    (str.++ var160!1 \"static const JJString \" var762 \"[] = {\"))\r\n  (define-fun var1101 () String\r\n    (str.++ var160!1 \"static const JJString \" var762))\r\n  (define-fun var3866 () (Array Int String)\r\n    ((as const (Array Int String)) \"s\"))\r\n  (define-fun var3367 () (Array Int var3972)\r\n    arr-var3972-init)\r\n  (define-fun var1101!1 () String\r\n    \"static const JJString };[] = {\")\r\n  (define-fun var3368!1 () String\r\n    \"static const JJString };\")\r\n  (define-fun var160!2 () String\r\n    \"static const JJString \")\r\n  (define-fun var160!1 () String\r\n    \"\")\r\n  (define-fun arr-var3972-init () (Array Int var3972)\r\n    ((as const (Array Int var3972)) var3972!val!0))\r\n  (define-fun var3367!2 () (Array Int var3972)\r\n    ((as const (Array Int var3972)) var3972!val!0))\r\n  (define-fun var2033!2 () (Array Int var3972)\r\n    ((as const (Array Int var3972)) var3972!val!0))\r\n  (define-fun var2709!2 () var2438\r\n    var2438!val!1)\r\n  (define-fun var2709!1 () var2438\r\n    var2438!val!1)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun k!3 ((x!0 Int)) var3972\r\n    (ite (= x!0 4) var3972!val!4\r\n      var3972!val!3))\r\n  (define-fun k!4 ((x!0 Int)) var3972\r\n    (ite (= x!0 0) var3972!val!1\r\n      var3972!val!5))\r\n  (define-fun cast-from-String-to-var3972 ((x!0 String)) var3972\r\n    (ite (= x!0 (str.++ (seq.unit (_ Char 125)) (seq.unit (_ Char 59))))\r\n      var3972!val!1\r\n      var3972!val!0))\r\n  (define-fun getLength-Arr-String-1 ((x!0 (Array Int String))) Int\r\n    0)\r\n  (define-fun genCodeLine/787715242 ((x!0 var2438) (x!1 (Array Int var3972))) void\r\n    void!val!0)\r\n)\r\n(error \"line 78 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11300864,
            "run_time": 0.030263185501098633,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2438 is 2\r\n; rep: (as @var2438_0 var2438)\r\n; rep: (as @var2438_1 var2438)\r\n; cardinality of var3191 is 1\r\n; rep: (as @var3191_0 var3191)\r\n; cardinality of var3972 is 3\r\n; rep: (as @var3972_0 var3972)\r\n; rep: (as @var3972_1 var3972)\r\n; rep: (as @var3972_2 var3972)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getLength-Arr-String-1 ((_arg_1 (Array Int String))) Int 0)\r\n(define-fun arr-var3972-init () (Array Int var3972) ((as const (Array Int var3972)) (as @var3972_0 var3972)))\r\n(define-fun String-init () String \"\")\r\n(define-fun cast-from-String-to-var3972 ((_arg_1 String)) var3972 (ite (= \"static const JJString [] = {\" _arg_1) (as @var3972_0 var3972) (as @var3972_2 var3972)))\r\n(define-fun genCodeLine/787715242 ((BOUND_VARIABLE_981 var2438) (BOUND_VARIABLE_982 (Array Int var3972))) void (as @void_0 void))\r\n(define-fun null-var2438 () var2438 (as @var2438_0 var2438))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__String__ () (Array Int String) (store ((as const (Array Int String)) \"A\") 0 \"static const JJString \"))\r\n(define-fun null-__Array__Int__var3972__ () (Array Int var3972) ((as const (Array Int var3972)) (as @var3972_1 var3972)))\r\n(define-fun var2709 () var2438 (as @var2438_1 var2438))\r\n(define-fun var762 () String \"\")\r\n(define-fun var3866 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var160!1 () String \"\")\r\n(define-fun var160!2 () String \"static const JJString \")\r\n(define-fun var3368!1 () String \"static const JJString \")\r\n(define-fun var1101!1 () String \"static const JJString [] = {\")\r\n(define-fun var2033!1 () (Array Int var3972) ((as const (Array Int var3972)) (as @var3972_0 var3972)))\r\n(define-fun var2709!1 () var2438 (as @var2438_0 var2438))\r\n(define-fun var2033!2 () (Array Int var3972) ((as const (Array Int var3972)) (as @var3972_0 var3972)))\r\n(define-fun var3367!1 () (Array Int var3972) ((as const (Array Int var3972)) (as @var3972_2 var3972)))\r\n(define-fun var2709!2 () var2438 (as @var2438_0 var2438))\r\n(define-fun var3367!2 () (Array Int var3972) ((as const (Array Int var3972)) (as @var3972_0 var3972)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35213312,
            "run_time": 0.09149479866027832,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 77 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 78 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177029120,
            "run_time": 1.2946062088012695,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2438/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.CodeGenerator__genStringLiteralArrayCPP__1670090044\\567.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_35_3 =\r\n     concat(all_35_4, \"[] = {\")\r\n   var1101!1 =\r\n     concat(all_32_3, \"[] = {\")\r\n   var3368!1 =\r\n     concat(\"static const JJString \", var762)\r\n   all_35_4 =\r\n     concat(\"static const JJString \", var762)\r\n   all_32_3 =\r\n     concat(\"static const JJString \", var762)\r\n\r\n958ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 22,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.parser.CodeGenerator",
            "r4 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.lang.String[]",
            "i2 = 0",
            "$i0 = lengthof r0",
            "if i2 >= $i0 goto $r2 = newarray (java.lang.Object)[1]",
            "$r2 = newarray (java.lang.Object)[1]",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"static const JJString \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[] = {\")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r2[0] = $r8",
            "virtualinvoke r1.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r2)",
            "i3 = 0",
            "$i1 = lengthof r0",
            "if i3 >= $i1 goto $r9 = newarray (java.lang.Object)[1]",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r9[0] = \"};\"",
            "virtualinvoke r1.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r9)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.NodeFiles__getVisitMethodName__-1825314153\\540.smt2",
        "z3": {
            "memory": 32014336,
            "run_time": 0.27695202827453613,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3934 () Bool\r\n    (var2123_booleanValue/1280995494 \"VISITOR_METHOD_NAME_INCLUDES_TYPE_NAME\"))\r\n  (define-fun var143 () String\r\n    String-init)\r\n  (define-fun var1243 () String\r\n    var143!1)\r\n  (define-fun var2846 () String\r\n    \"VISITOR_METHOD_NAME_INCLUDES_TYPE_NAME\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2290 () String\r\n    \"\")\r\n  (define-fun var143!1 () String\r\n    \"\")\r\n  (define-fun var2123_booleanValue/1280995494 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun <init>/2110755883 ((x!0 String) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8970240,
            "run_time": 0.015526533126831055,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var559 is 1\r\n; rep: (as @var559_0 var559)\r\n; cardinality of var2123 is 1\r\n; rep: (as @var2123_0 var2123)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/2110755883 ((BOUND_VARIABLE_553 String) (BOUND_VARIABLE_554 String)) void (as @void_0 void))\r\n(define-fun var2123_booleanValue/1280995494 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2846 () String \"\")\r\n(define-fun var143!1 () String \"\")\r\n(define-fun var2290 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36593664,
            "run_time": 0.10731697082519531,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3934 () Bool\n    (var2123_booleanValue/1280995494 \"VISITOR_METHOD_NAME_INCLUDES_TYPE_NAME\"))\n  (define-fun var143 () String\n    String-init)\n  (define-fun var1243 () String\n    var143!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2846 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2290 () String\n    \"\")\n  (define-fun var143!1 () String\n    \"\")\n  (define-fun var2123_booleanValue/1280995494 ((x!0 String)) Bool\n    false)\n  (define-fun <init>/2110755883 ((x!0 String) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 161685504,
            "run_time": 1.1956074237823486,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2846 () String \"E\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun abbrev_7_def () Bool false)\r\n  (define-fun abbrev_7 () Bool false)\r\n  (define-fun var2123_booleanValue/1280995494 ((x!0 String)) Bool (ite (= x!0 \"VISITOR_METHOD_NAME_INCLUDES_TYPE_NAME\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>(java.lang.String)>": 1,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.String",
            "$r0 = new java.lang.StringBuffer",
            "specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"visit\")",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean booleanValue(java.lang.String)>(\"VISITOR_METHOD_NAME_INCLUDES_TYPE_NAME\")",
            "if $z0 == 0 goto $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>()",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CodeGenerator__genAnnotation__1589851692\\1048.smt2",
        "z3": {
            "memory": 31240192,
            "run_time": 0.08919858932495117,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1772:\r\n  ;;   var1772!val!0 var1772!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1772!val!0 () var1772)\r\n  (declare-fun var1772!val!1 () var1772)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1772)) (or (= x var1772!val!0) (= x var1772!val!1)))\r\n  ;; -----------\r\n  (define-fun var2670_getOutputLanguage/-1523304050 () String\r\n    \"\")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3831 () Bool\r\n    (= var2670_getOutputLanguage/-1523304050 \"c++\"))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2282 () var126\r\n    var126-init)\r\n  (define-fun var559 () String\r\n    var2670_getOutputLanguage/-1523304050)\r\n  (define-fun var1084 () String\r\n    var2670_getOutputLanguage/-1523304050)\r\n  (define-fun var2060 () String\r\n    (str.++ var174!1 \"Unknown language : \" var2670_getOutputLanguage/-1523304050))\r\n  (define-fun var1791 () Bool\r\n    var2670_isOutputLanguageJava/1735442213)\r\n  (define-fun var2967 () var1772\r\n    var1772!val!0)\r\n  (define-fun var3384 () String\r\n    (str.++ var174!1 \"Unknown language : \" var2670_getOutputLanguage/-1523304050))\r\n  (define-fun null-var1772 () var1772\r\n    var1772!val!1)\r\n  (define-fun var174 () String\r\n    String-init)\r\n  (define-fun var2552 () String\r\n    \"A\")\r\n  (define-fun var2183 () String\r\n    (str.++ var174!1 \"Unknown language : \"))\r\n  (define-fun var2670_isOutputLanguageJava/1735442213 () Bool\r\n    false)\r\n  (define-fun var174!2 () String\r\n    \"Unknown language : \")\r\n  (define-fun var174!1 () String\r\n    \"\")\r\n  (define-fun var2183!1 () String\r\n    \"Unknown language : \")\r\n  (define-fun var126-init () var126\r\n    var126!val!0)\r\n  (define-fun var2060!1 () String\r\n    \"\")\r\n  (define-fun var2282!1 () var126\r\n    var126!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun <init>/-1084991535 ((x!0 var126) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 58 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1744896,
            "run_time": 0.01549530029296875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1772 is 2\r\n; rep: (as @var1772_0 var1772)\r\n; rep: (as @var1772_1 var1772)\r\n; cardinality of var2424 is 1\r\n; rep: (as @var2424_0 var2424)\r\n; cardinality of var2670 is 1\r\n; rep: (as @var2670_0 var2670)\r\n; cardinality of var126 is 1\r\n; rep: (as @var126_0 var126)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2670_isOutputLanguageJava/1735442213 () Bool false)\r\n(define-fun var2670_getOutputLanguage/-1523304050 () String \"\")\r\n(define-fun var126-init () var126 (as @var126_0 var126))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1084991535 ((BOUND_VARIABLE_698 var126) (BOUND_VARIABLE_699 String)) void (as @void_0 void))\r\n(define-fun null-var1772 () var1772 (as @var1772_0 var1772))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2967 () var1772 (as @var1772_1 var1772))\r\n(define-fun var2552 () String \"\")\r\n(define-fun var174!1 () String \"\")\r\n(define-fun var174!2 () String \"Unknown language : \")\r\n(define-fun var2183!1 () String \"Unknown language : \")\r\n(define-fun var2282!1 () var126 (as @var126_0 var126))\r\n(define-fun var2060!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35930112,
            "run_time": 0.12384438514709473,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1772:\n  ;;   var1772!val!0 var1772!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1772!val!0 () var1772)\n  (declare-fun var1772!val!1 () var1772)\n  ;; cardinality constraint:\n  (forall ((x var1772)) (or (= x var1772!val!0) (= x var1772!val!1)))\n  ;; -----------\n  (define-fun var2183!1 () String\n    \"Unknown language : \")\n  (define-fun var174!1 () String\n    \"\")\n  (define-fun var174!2 () String\n    \"Unknown language : \")\n  (define-fun var2670_isOutputLanguageJava/1735442213 () Bool\n    false)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2552 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var559 () String\n    var2670_getOutputLanguage/-1523304050)\n  (define-fun var3831 () Bool\n    (= var2670_getOutputLanguage/-1523304050 \"c++\"))\n  (define-fun var1791 () Bool\n    var2670_isOutputLanguageJava/1735442213)\n  (define-fun var2060 () String\n    (str.++ var174!1 \"Unknown language : \" var2670_getOutputLanguage/-1523304050))\n  (define-fun var2183 () String\n    (str.++ var174!1 \"Unknown language : \"))\n  (define-fun null-var1772 () var1772\n    var1772!val!1)\n  (define-fun var2967 () var1772\n    var1772!val!0)\n  (define-fun var2670_getOutputLanguage/-1523304050 () String\n    \"\")\n  (define-fun var174 () String\n    String-init)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2282 () var126\n    var126-init)\n  (define-fun var3384 () String\n    (str.++ var174!1 \"Unknown language : \" var2670_getOutputLanguage/-1523304050))\n  (define-fun var1084 () String\n    var2670_getOutputLanguage/-1523304050)\n  (define-fun var126-init () var126\n    var126!val!0)\n  (define-fun var2060!1 () String\n    \"\")\n  (define-fun var2282!1 () var126\n    var126!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun <init>/-1084991535 ((x!0 var126) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 58 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176115712,
            "run_time": 1.2111473083496094,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1772/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.CodeGenerator__genAnnotation__1589851692\\1048.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2183!1 =\r\n     concat(\"Unknown language : \", var2670_getOutputLanguage/-1523304050)\r\n\r\n904ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r7 := @this: org.javacc.parser.CodeGenerator",
            "r10 := @parameter0: java.lang.String",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean isOutputLanguageJava()>()",
            "if $z0 == 0 goto $r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$z1 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(\"c++\")",
            "if $z1 == 0 goto $r1 = new java.lang.RuntimeException",
            "$r1 = new java.lang.RuntimeException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unknown language : \")",
            "$r3 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.NodeFiles__ensure__-405642493\\352.smt2",
        "z3": {
            "memory": 31260672,
            "run_time": 0.10569429397583008,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 63 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9015296,
            "run_time": 0.015526533126831055,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35270656,
            "run_time": 0.10731697082519531,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 63 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163803136,
            "run_time": 1.5191254615783691,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1,
            "<java.lang.String: boolean equals(java.lang.Object)>": 2
        },
        "jimple_statements": [
            "r7 := @parameter0: org.javacc.jjtree.IO",
            "r2 := @parameter1: java.lang.String",
            "$r0 = new java.io.File",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.io.File getJJTreeOutputDirectory()>()",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".java\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r5)",
            "$z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"Node\")",
            "if $z0 == 0 goto $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"SimpleNode\")",
            "goto [?= $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"Node\")]",
            "$z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>(\"Node\")",
            "if $z8 != 0 goto $z2 = virtualinvoke $r0.<java.io.File: boolean exists()>()",
            "$z7 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getBuildNodeFiles()>()",
            "if $z7 != 0 goto $z2 = virtualinvoke $r0.<java.io.File: boolean exists()>()",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.NodeScope__constructVariable__1475475132\\422.smt2",
        "z3": {
            "memory": 32108544,
            "run_time": 0.23242878913879395,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var224:\r\n  ;;   var224!val!1 var224!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var224!val!1 () var224)\r\n  (declare-fun var224!val!0 () var224)\r\n  ;; cardinality constraint:\r\n  (forall ((x var224)) (or (= x var224!val!1) (= x var224!val!0)))\r\n  ;; -----------\r\n  (define-fun var541 () Int\r\n    (scopeNumber/-576648796 var449))\r\n  (define-fun var993 () Int\r\n    (str.len (str.++ var1049!1 \"000\" (str.from_int (scopeNumber/-576648796 var449)))))\r\n  (define-fun var3723 () Int\r\n    (str.len (str.++ var1049!1 \"000\" (str.from_int (scopeNumber/-576648796 var449)))))\r\n  (define-fun var608 () String\r\n    (let ((a!1 (str.len (str.++ var1049!1\r\n                            \"000\"\r\n                            (str.from_int (scopeNumber/-576648796 var449))))))\r\n  (str.substr (str.++ var1049!1\r\n                      \"000\"\r\n                      (str.from_int (scopeNumber/-576648796 var449)))\r\n              (- a!1 3)\r\n              (- a!1 (- a!1 3)))))\r\n  (define-fun var3736 () String\r\n    (str.++ var1207!1 \"jjt\" var1291))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1724 () Int\r\n    (let ((a!1 (str.len (str.++ var1049!1\r\n                            \"000\"\r\n                            (str.from_int (scopeNumber/-576648796 var449))))))\r\n  (- a!1 3)))\r\n  (define-fun var3560!1 () String\r\n    \"000\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1207 () String\r\n    String-init)\r\n  (define-fun var1291 () String\r\n    \"\")\r\n  (define-fun null-var224 () var224\r\n    var224!val!1)\r\n  (define-fun var1904 () String\r\n    (let ((a!1 (str.len (str.++ var1049!1\r\n                            \"000\"\r\n                            (str.from_int (scopeNumber/-576648796 var449))))))\r\n(let ((a!2 (str.substr (str.++ var1049!1\r\n                               \"000\"\r\n                               (str.from_int (scopeNumber/-576648796 var449)))\r\n                       (- a!1 3)\r\n                       (- a!1 (- a!1 3)))))\r\n  (str.++ var1207!1 \"jjt\" var1291 a!2))))\r\n  (define-fun var449 () var224\r\n    var224!val!0)\r\n  (define-fun var893 () String\r\n    (str.++ var1049!1 \"000\" (str.from_int (scopeNumber/-576648796 var449))))\r\n  (define-fun var2702 () String\r\n    (let ((a!1 (str.len (str.++ var1049!1\r\n                            \"000\"\r\n                            (str.from_int (scopeNumber/-576648796 var449))))))\r\n(let ((a!2 (str.substr (str.++ var1049!1\r\n                               \"000\"\r\n                               (str.from_int (scopeNumber/-576648796 var449)))\r\n                       (- a!1 3)\r\n                       (- a!1 (- a!1 3)))))\r\n  (str.++ var1207!1 \"jjt\" var1291 a!2))))\r\n  (define-fun var1885 () String\r\n    (str.++ var1049!1 \"000\" (str.from_int (scopeNumber/-576648796 var449))))\r\n  (define-fun var3560 () String\r\n    (str.++ var1049!1 \"000\"))\r\n  (define-fun var1049 () String\r\n    String-init)\r\n  (define-fun var77 () String\r\n    (str.++ var1207!1 \"jjt\"))\r\n  (define-fun var1207!2 () String\r\n    \"jjt\")\r\n  (define-fun var1207!1 () String\r\n    \"\")\r\n  (define-fun var77!1 () String\r\n    \"jjt\")\r\n  (define-fun var1049!2 () String\r\n    \"000\")\r\n  (define-fun var3736!1 () String\r\n    \"jjt000\")\r\n  (define-fun var1049!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun scopeNumber/-576648796 ((x!0 var224)) Int\r\n    (- 1))\r\n)\r\n(error \"line 68 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12468224,
            "run_time": 0.03002142906188965,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var224 is 2\r\n; rep: (as @var224_0 var224)\r\n; rep: (as @var224_1 var224)\r\n; cardinality of var867 is 1\r\n; rep: (as @var867_0 var867)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun scopeNumber/-576648796 ((_arg_1 var224)) Int (- 1))\r\n(define-fun null-var224 () var224 (as @var224_0 var224))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var449 () var224 (as @var224_1 var224))\r\n(define-fun var1291 () String \"\")\r\n(define-fun var1049!1 () String \"\")\r\n(define-fun var1049!2 () String \"000\")\r\n(define-fun var3560!1 () String \"000\")\r\n(define-fun var1207!1 () String \"\")\r\n(define-fun var1207!2 () String \"jjt\")\r\n(define-fun var77!1 () String \"jjt\")\r\n(define-fun var3736!1 () String \"jjt000\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37916672,
            "run_time": 0.10731697082519531,
            "is_sat": "",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 206036992,
            "run_time": 1.6410229206085205,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var224/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.NodeScope__constructVariable__1475475132\\422.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nAssuming all_39_5 = \"\"\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3736!1 =\r\n     concat(all_29_5, \"000\")\r\n   all_32_5 =\r\n     concat(\"jjt\", var1291)\r\n   var77!1 =\r\n     concat(\"jjt\", var1291)\r\n   all_29_5 =\r\n     concat(\"jjt\", var1291)\r\n\r\n1256ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: java.lang.String substring(int,int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2,
            "<java.lang.String: int length()>": 2,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.jjtree.NodeScope",
            "r6 := @parameter0: java.lang.String",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"000\")",
            "$i0 = r1.<org.javacc.jjtree.NodeScope: int scopeNumber>",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"jjt\")",
            "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r6)",
            "$i1 = virtualinvoke r4.<java.lang.String: int length()>()",
            "$i3 = $i1 - 3",
            "$i2 = virtualinvoke r4.<java.lang.String: int length()>()",
            "$r8 = virtualinvoke r4.<java.lang.String: java.lang.String substring(int,int)>($i3, $i2)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r11"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CodeGenerator__printTrailingComments__-325776467\\938.smt2",
        "z3": {
            "memory": 32186368,
            "run_time": 0.0907905101776123,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3836:\r\n  ;;   var3836!val!0 var3836!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3836!val!0 () var3836)\r\n  (declare-fun var3836!val!1 () var3836)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3836)) (or (= x var3836!val!0) (= x var3836!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2473:\r\n  ;;   var2473!val!0 var2473!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2473!val!0 () var2473)\r\n  (declare-fun var2473!val!1 () var2473)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2473)) (or (= x var2473!val!0) (= x var2473!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var3836 () var3836\r\n    var3836!val!1)\r\n  (define-fun var3287 () var2473\r\n    var2473!val!0)\r\n  (define-fun null-var2473 () var2473\r\n    var2473!val!1)\r\n  (define-fun var1418 () String\r\n    (outputBuffer/-1919349735 var3287))\r\n  (define-fun var1418!1 () String\r\n    \"\")\r\n  (define-fun var3772 () String\r\n    (getTrailingComments/-901310105 var3287 var2164))\r\n  (define-fun var2164 () var3836\r\n    var3836!val!0)\r\n  (define-fun outputBuffer/-1919349735 ((x!0 var2473)) String\r\n    \"\")\r\n  (define-fun getTrailingComments/-901310105 ((x!0 var2473) (x!1 var3836)) String\r\n    \"\")\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.07741427421569824,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2473 is 2\r\n; rep: (as @var2473_0 var2473)\r\n; rep: (as @var2473_1 var2473)\r\n; cardinality of var3836 is 2\r\n; rep: (as @var3836_0 var3836)\r\n; rep: (as @var3836_1 var3836)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun outputBuffer/-1919349735 ((_arg_1 var2473)) String \"\")\r\n(define-fun getTrailingComments/-901310105 ((BOUND_VARIABLE_586 var2473) (BOUND_VARIABLE_587 var3836)) String \"\")\r\n(define-fun null-var2473 () var2473 (as @var2473_0 var2473))\r\n(define-fun null-var3836 () var3836 (as @var3836_0 var3836))\r\n(define-fun var3287 () var2473 (as @var2473_1 var2473))\r\n(define-fun var2164 () var3836 (as @var3836_1 var3836))\r\n(define-fun var1418!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36061184,
            "run_time": 0.07792854309082031,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 27 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 148918272,
            "run_time": 1.0486831665039062,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.CodeGenerator__printTrailingComments__-325776467\\938.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1418!1 =\r\n     concat(all_14_0, rhs)\r\n   ... sat\r\n\r\n710ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.CodeGenerator",
            "r1 := @parameter0: org.javacc.parser.Token",
            "$r2 = r0.<org.javacc.parser.CodeGenerator: java.lang.StringBuffer outputBuffer>",
            "$r3 = virtualinvoke r0.<org.javacc.parser.CodeGenerator: java.lang.String getTrailingComments(org.javacc.parser.Token)>(r1)",
            "virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CodeGenerator__genStringLiteralInCPP__2067143483\\596.smt2",
        "z3": {
            "memory": 30081024,
            "run_time": 0.0731194019317627,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1264:\r\n  ;;   var1264!val!1 var1264!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1264!val!1 () var1264)\r\n  (declare-fun var1264!val!0 () var1264)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1264)) (or (= x var1264!val!1) (= x var1264!val!0)))\r\n  ;; -----------\r\n  (define-fun var2207!1 () String\r\n    \"\")\r\n  (define-fun var1533 () Int\r\n    0)\r\n  (define-fun var494 () var1264\r\n    var1264!val!0)\r\n  (define-fun var2207 () String\r\n    (outputBuffer/-1919349735 var494))\r\n  (define-fun var1207 () Int\r\n    (str.len var3520))\r\n  (define-fun var3520 () String\r\n    \"\")\r\n  (define-fun null-var1264 () var1264\r\n    var1264!val!1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3234!1 () String\r\n    \"\")\r\n  (define-fun var3234 () String\r\n    (outputBuffer/-1919349735 var494))\r\n  (define-fun outputBuffer/-1919349735 ((x!0 var1264)) String\r\n    \"\")\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9920512,
            "run_time": 0.031105756759643555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1264 is 2\r\n; rep: (as @var1264_0 var1264)\r\n; rep: (as @var1264_1 var1264)\r\n; cardinality of var1436 is 1\r\n; rep: (as @var1436_0 var1436)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun outputBuffer/-1919349735 ((_arg_1 var1264)) String \"\")\r\n(define-fun null-var1264 () var1264 (as @var1264_0 var1264))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var494 () var1264 (as @var1264_1 var1264))\r\n(define-fun var3520 () String \"\")\r\n(define-fun var3234!1 () String \"\")\r\n(define-fun var2207!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36282368,
            "run_time": 0.07721710205078125,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 36 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152473600,
            "run_time": 1.127293348312378,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.CodeGenerator__genStringLiteralInCPP__2067143483\\596.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2207!1 =\r\n     concat(all_14_0, rhs)\r\n   var3234!1 =\r\n     concat(all_14_0, rhs)\r\n   ... sat\r\n\r\n793ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.CodeGenerator",
            "r2 := @parameter0: java.lang.String",
            "$r1 = r0.<org.javacc.parser.CodeGenerator: java.lang.StringBuffer outputBuffer>",
            "virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"{\")",
            "i2 = 0",
            "$i0 = virtualinvoke r2.<java.lang.String: int length()>()",
            "if i2 >= $i0 goto $r3 = r0.<org.javacc.parser.CodeGenerator: java.lang.StringBuffer outputBuffer>",
            "$r3 = r0.<org.javacc.parser.CodeGenerator: java.lang.StringBuffer outputBuffer>",
            "virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"0}\")",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.NodeFiles__mergeVisitorException__1270974702\\662.smt2",
        "z3": {
            "memory": 31227904,
            "run_time": 0.33532285690307617,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1935_getVisitorException/-1156064091 () String\r\n    \"\")\r\n  (define-fun var3468 () Bool\r\n    (= \"\" var1935_getVisitorException/-1156064091))\r\n  (define-fun var3327 () String\r\n    var1935_getVisitorException/-1156064091)\r\n  (define-fun var3681 () String\r\n    \"\")\r\n)\r\n(error \"line 18 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11952128,
            "run_time": 0.03052520751953125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1935 is 1\r\n; rep: (as @var1935_0 var1935)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1935_getVisitorException/-1156064091 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36061184,
            "run_time": 0.09139251708984375,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1935_getVisitorException/-1156064091 () String\n    \"\")\n  (define-fun var3327 () String\n    var1935_getVisitorException/-1156064091)\n  (define-fun var3681 () String\n    \"\")\n  (define-fun var3468 () Bool\n    (= \"\" var1935_getVisitorException/-1156064091))\n)\n(error \"line 18 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141283328,
            "run_time": 0.9956367015838623,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1935_getVisitorException/-1156064091 () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r4 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getVisitorException()>()",
            "$r0 = \"\"",
            "$z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(r4)",
            "if $z0 != 0 goto return r4",
            "return r4"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.NodeFiles__generateMULTINode_java__1390539434\\723.smt2",
        "z3": {
            "memory": 31662080,
            "run_time": 0.08905363082885742,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var67:\r\n  ;;   var67!val!1 var67!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var67!val!1 () var67)\r\n  (declare-fun var67!val!0 () var67)\r\n  ;; cardinality constraint:\r\n  (forall ((x var67)) (or (= x var67!val!1) (= x var67!val!0)))\r\n  ;; -----------\r\n  (define-fun var2061 () var2232\r\n    (getPrintWriter/-1782232853 var2943))\r\n  (define-fun var540 () String\r\n    var3954_getVisitorReturnType/-842398340)\r\n  (define-fun var3139 () var2480\r\n    var2480-init)\r\n  (define-fun var1689 () var608\r\n    var608-init)\r\n  (define-fun var3626 () var3216\r\n    var3637_getOptions/298379990)\r\n  (define-fun var2943 () var67\r\n    var67!val!0)\r\n  (define-fun var2362 () String\r\n    \"!0!\")\r\n  (define-fun var3546 () String\r\n    var1430-parserName)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var4 () Bool\r\n    (= var3954_getVisitorReturnType/-842398340 \"void\"))\r\n  (define-fun null-var67 () var67\r\n    var67!val!1)\r\n  (define-fun var3034 () var2197\r\n    (var2197_valueOf/1602327315 (= var3954_getVisitorReturnType/-842398340 \"void\")))\r\n  (define-fun var2348 () String\r\n    \"\")\r\n  (define-fun var2362!1 () String\r\n    \"\")\r\n  (define-fun var1689!3 () var608\r\n    var608!val!0)\r\n  (define-fun var3546!1 () String\r\n    \"\")\r\n  (define-fun var2018 () String\r\n    \"\")\r\n  (define-fun var2536 () String\r\n    \"\")\r\n  (define-fun var2061!1 () var2232\r\n    var2232!val!0)\r\n  (define-fun var1689!1 () var608\r\n    var608!val!0)\r\n  (define-fun var3954_getVisitorReturnType/-842398340 () String\r\n    \"\")\r\n  (define-fun var1689!2 () var608\r\n    var608!val!0)\r\n  (define-fun var3139!1 () var2480\r\n    var2480!val!0)\r\n  (define-fun var1689!5 () var608\r\n    var608!val!0)\r\n  (define-fun var3139!2 () var2480\r\n    var2480!val!0)\r\n  (define-fun var2061!2 () var2232\r\n    var2232!val!0)\r\n  (define-fun var2480-init () var2480\r\n    var2480!val!0)\r\n  (define-fun var3626!1 () var3216\r\n    var3216!val!0)\r\n  (define-fun var608-init () var608\r\n    var608!val!0)\r\n  (define-fun var1689!4 () var608\r\n    var608!val!0)\r\n  (define-fun var1430-parserName () String\r\n    \"\")\r\n  (define-fun var3034!1 () var2197\r\n    var2197!val!0)\r\n  (define-fun var3637_getOptions/298379990 () var3216\r\n    var3216!val!0)\r\n  (define-fun var2061!3 () var2232\r\n    var2232!val!0)\r\n  (define-fun var626 () String\r\n    \"\")\r\n  (define-fun var1224_generatePrologue/-899895352 ((x!0 var2232)) void\r\n    void!val!0)\r\n  (define-fun close/2116439267 ((x!0 var2232)) void\r\n    void!val!0)\r\n  (define-fun getPrintWriter/-1782232853 ((x!0 var67)) var2232\r\n    var2232!val!0)\r\n  (define-fun var2197_valueOf/1602327315 ((x!0 Bool)) var2197\r\n    var2197!val!0)\r\n  (define-fun cast-from-String-to-var3864 ((x!0 String)) var3864\r\n    var3864!val!0)\r\n  (define-fun cast-from-var2197-to-var3864 ((x!0 var2197)) var3864\r\n    var3864!val!0)\r\n  (define-fun cast-from-var608-to-var3216 ((x!0 var608)) var3216\r\n    var3216!val!0)\r\n  (define-fun <init>/-1344032113 ((x!0 var608) (x!1 var3216)) void\r\n    void!val!0)\r\n  (define-fun var3216_put/1464166817 ((x!0 var3216) (x!1 var3864) (x!2 var3864)) var3864\r\n    var3864!val!0)\r\n  (define-fun <init>/1344994893 ((x!0 var2480) (x!1 String) (x!2 var3216)) void\r\n    void!val!0)\r\n  (define-fun generate/-1718254023 ((x!0 var2480) (x!1 var2232)) void\r\n    void!val!0)\r\n)\r\n(error \"line 92 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1744896,
            "run_time": 0.029627323150634766,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var67 is 2\r\n; rep: (as @var67_0 var67)\r\n; rep: (as @var67_1 var67)\r\n; cardinality of var36 is 1\r\n; rep: (as @var36_0 var36)\r\n; cardinality of var2232 is 1\r\n; rep: (as @var2232_0 var2232)\r\n; cardinality of var1224 is 1\r\n; rep: (as @var1224_0 var1224)\r\n; cardinality of var608 is 1\r\n; rep: (as @var608_0 var608)\r\n; cardinality of var3216 is 1\r\n; rep: (as @var3216_0 var3216)\r\n; cardinality of var3637 is 1\r\n; rep: (as @var3637_0 var3637)\r\n; cardinality of var1430 is 1\r\n; rep: (as @var1430_0 var1430)\r\n; cardinality of var3864 is 1\r\n; rep: (as @var3864_0 var3864)\r\n; cardinality of var3954 is 1\r\n; rep: (as @var3954_0 var3954)\r\n; cardinality of var2197 is 1\r\n; rep: (as @var2197_0 var2197)\r\n; cardinality of var2480 is 1\r\n; rep: (as @var2480_0 var2480)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getPrintWriter/-1782232853 ((BOUND_VARIABLE_587 var67)) var2232 (as @var2232_0 var2232))\r\n(define-fun var1224_generatePrologue/-899895352 ((BOUND_VARIABLE_590 var2232)) void (as @void_0 void))\r\n(define-fun var608-init () var608 (as @var608_0 var608))\r\n(define-fun var3637_getOptions/298379990 () var3216 (as @var3216_0 var3216))\r\n(define-fun <init>/-1344032113 ((BOUND_VARIABLE_593 var608) (BOUND_VARIABLE_594 var3216)) void (as @void_0 void))\r\n(define-fun var3216_put/1464166817 ((BOUND_VARIABLE_597 var3216) (BOUND_VARIABLE_598 var3864) (BOUND_VARIABLE_599 var3864)) var3864 (as @var3864_0 var3864))\r\n(define-fun cast-from-var608-to-var3216 ((BOUND_VARIABLE_602 var608)) var3216 (as @var3216_0 var3216))\r\n(define-fun cast-from-String-to-var3864 ((BOUND_VARIABLE_605 String)) var3864 (as @var3864_0 var3864))\r\n(define-fun var3954_getVisitorReturnType/-842398340 () String \"\")\r\n(define-fun var2197_valueOf/1602327315 ((BOUND_VARIABLE_608 Bool)) var2197 (as @var2197_0 var2197))\r\n(define-fun cast-from-var2197-to-var3864 ((BOUND_VARIABLE_611 var2197)) var3864 (as @var3864_0 var3864))\r\n(define-fun var2480-init () var2480 (as @var2480_0 var2480))\r\n(define-fun <init>/1344994893 ((BOUND_VARIABLE_614 var2480) (BOUND_VARIABLE_615 String) (BOUND_VARIABLE_616 var3216)) void (as @void_0 void))\r\n(define-fun generate/-1718254023 ((BOUND_VARIABLE_619 var2480) (BOUND_VARIABLE_620 var2232)) void (as @void_0 void))\r\n(define-fun close/2116439267 ((BOUND_VARIABLE_623 var2232)) void (as @void_0 void))\r\n(define-fun null-var67 () var67 (as @var67_0 var67))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1430-parserName () String \"\")\r\n(define-fun var2943 () var67 (as @var67_1 var67))\r\n(define-fun var2362 () String \"\")\r\n(define-fun var2061!1 () var2232 (as @var2232_0 var2232))\r\n(define-fun var1689!1 () var608 (as @var608_0 var608))\r\n(define-fun var3626!1 () var3216 (as @var3216_0 var3216))\r\n(define-fun var1689!2 () var608 (as @var608_0 var608))\r\n(define-fun var2536 () String \"\")\r\n(define-fun var3546!1 () String \"\")\r\n(define-fun var1689!3 () var608 (as @var608_0 var608))\r\n(define-fun var2348 () String \"\")\r\n(define-fun var2362!1 () String \"\")\r\n(define-fun var1689!4 () var608 (as @var608_0 var608))\r\n(define-fun var2018 () String \"\")\r\n(define-fun var3034!1 () var2197 (as @var2197_0 var2197))\r\n(define-fun var3139!1 () var2480 (as @var2480_0 var2480))\r\n(define-fun var626 () String \"\")\r\n(define-fun var1689!5 () var608 (as @var608_0 var608))\r\n(define-fun var3139!2 () var2480 (as @var2480_0 var2480))\r\n(define-fun var2061!2 () var2232 (as @var2232_0 var2232))\r\n(define-fun var2061!3 () var2232 (as @var2232_0 var2232))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37597184,
            "run_time": 0.07787418365478516,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var67:\n  ;;   var67!val!1 var67!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var67!val!1 () var67)\n  (declare-fun var67!val!0 () var67)\n  ;; cardinality constraint:\n  (forall ((x var67)) (or (= x var67!val!1) (= x var67!val!0)))\n  ;; -----------\n  (define-fun var3139 () var2480\n    var2480-init)\n  (define-fun var540 () String\n    var3954_getVisitorReturnType/-842398340)\n  (define-fun var3626 () var3216\n    var3637_getOptions/298379990)\n  (define-fun null-var67 () var67\n    var67!val!1)\n  (define-fun var3546 () String\n    var1430-parserName)\n  (define-fun var2943 () var67\n    var67!val!0)\n  (define-fun var1689 () var608\n    var608-init)\n  (define-fun var4 () Bool\n    (= var3954_getVisitorReturnType/-842398340 \"void\"))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2362 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3034 () var2197\n    (var2197_valueOf/1602327315 (= var3954_getVisitorReturnType/-842398340 \"void\")))\n  (define-fun var2061 () var2232\n    (getPrintWriter/-1782232853 var2943))\n  (define-fun var2348 () String\n    \"\")\n  (define-fun var2362!1 () String\n    \"\")\n  (define-fun var1689!3 () var608\n    var608!val!0)\n  (define-fun var3546!1 () String\n    \"\")\n  (define-fun var2018 () String\n    \"\")\n  (define-fun var2536 () String\n    \"\")\n  (define-fun var2061!1 () var2232\n    var2232!val!0)\n  (define-fun var1689!1 () var608\n    var608!val!0)\n  (define-fun var3954_getVisitorReturnType/-842398340 () String\n    \"\")\n  (define-fun var1689!2 () var608\n    var608!val!0)\n  (define-fun var3139!1 () var2480\n    var2480!val!0)\n  (define-fun var1689!5 () var608\n    var608!val!0)\n  (define-fun var3139!2 () var2480\n    var2480!val!0)\n  (define-fun var2061!2 () var2232\n    var2232!val!0)\n  (define-fun var2480-init () var2480\n    var2480!val!0)\n  (define-fun var3626!1 () var3216\n    var3216!val!0)\n  (define-fun var608-init () var608\n    var608!val!0)\n  (define-fun var1689!4 () var608\n    var608!val!0)\n  (define-fun var1430-parserName () String\n    \"\")\n  (define-fun var3034!1 () var2197\n    var2197!val!0)\n  (define-fun var3637_getOptions/298379990 () var3216\n    var3216!val!0)\n  (define-fun var2061!3 () var2232\n    var2232!val!0)\n  (define-fun var626 () String\n    \"\")\n  (define-fun var1224_generatePrologue/-899895352 ((x!0 var2232)) void\n    void!val!0)\n  (define-fun close/2116439267 ((x!0 var2232)) void\n    void!val!0)\n  (define-fun getPrintWriter/-1782232853 ((x!0 var67)) var2232\n    var2232!val!0)\n  (define-fun var2197_valueOf/1602327315 ((x!0 Bool)) var2197\n    var2197!val!0)\n  (define-fun cast-from-String-to-var3864 ((x!0 String)) var3864\n    var3864!val!0)\n  (define-fun cast-from-var2197-to-var3864 ((x!0 var2197)) var3864\n    var3864!val!0)\n  (define-fun cast-from-var608-to-var3216 ((x!0 var608)) var3216\n    var3216!val!0)\n  (define-fun <init>/-1344032113 ((x!0 var608) (x!1 var3216)) void\n    void!val!0)\n  (define-fun var3216_put/1464166817 ((x!0 var3216) (x!1 var3864) (x!2 var3864)) var3864\n    var3864!val!0)\n  (define-fun <init>/1344994893 ((x!0 var2480) (x!1 String) (x!2 var3216)) void\n    void!val!0)\n  (define-fun generate/-1718254023 ((x!0 var2480) (x!1 var2232)) void\n    void!val!0)\n)\n(error \"line 92 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164814848,
            "run_time": 0.994673490524292,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2362 () String \"\\u{0}\")\r\n  (define-fun var2943 () var67 var67!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var67 () var67 var67!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 15,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.OutputFile",
            "r5 := @parameter1: java.lang.String",
            "r1 = virtualinvoke r0.<org.javacc.parser.OutputFile: java.io.PrintWriter getPrintWriter()>()",
            "staticinvoke <org.javacc.jjtree.NodeFiles: void generatePrologue(java.io.PrintWriter)>(r1)",
            "$r2 = new java.util.HashMap",
            "$r3 = staticinvoke <org.javacc.parser.Options: java.util.Map getOptions()>()",
            "specialinvoke $r2.<java.util.HashMap: void <init>(java.util.Map)>($r3)",
            "$r4 = <org.javacc.jjtree.JJTreeGlobals: java.lang.String parserName>",
            "interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"PARSER_NAME\", $r4)",
            "interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"NODE_TYPE\", r5)",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getVisitorReturnType()>()",
            "$z0 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"void\")",
            "$r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>($z0)",
            "interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"VISITOR_RETURN_TYPE_VOID\", $r7)",
            "$r8 = new org.javacc.utils.OutputFileGenerator",
            "specialinvoke $r8.<org.javacc.utils.OutputFileGenerator: void <init>(java.lang.String,java.util.Map)>(\"/templates/MultiNode.template\", $r2)",
            "virtualinvoke $r8.<org.javacc.utils.OutputFileGenerator: void generate(java.io.PrintWriter)>(r1)",
            "virtualinvoke r1.<java.io.PrintWriter: void close()>()",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.ParseException__add_escapes__-2046912163\\531.smt2",
        "z3": {
            "memory": 32190464,
            "run_time": 0.07475090026855469,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1595 () Int\r\n    0)\r\n  (define-fun var724 () String\r\n    var3598!1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2026 () Int\r\n    (str.len var2761))\r\n  (define-fun var2761 () String\r\n    \"\")\r\n  (define-fun var3598 () String\r\n    String-init)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3598!1 () String\r\n    \"\")\r\n  (define-fun <init>/-1430969082 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1740800,
            "run_time": 0.029469966888427734,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3881 is 1\r\n; rep: (as @var3881_0 var3881)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1430969082 ((BOUND_VARIABLE_530 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2761 () String \"\")\r\n(define-fun var3598!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36704256,
            "run_time": 0.07666563987731934,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2026 () Int\n    (str.len var2761))\n  (define-fun var3598 () String\n    String-init)\n  (define-fun var1595 () Int\n    0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var724 () String\n    var3598!1)\n  (define-fun var2761 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3598!1 () String\n    \"\")\n  (define-fun <init>/-1430969082 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151994368,
            "run_time": 1.045699119567871,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2761 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r13 = new java.lang.StringBuffer",
            "specialinvoke $r13.<java.lang.StringBuffer: void <init>()>()",
            "i6 = 0",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "if i6 >= $i0 goto $r2 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r2 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CodeGenerator__genClassStart__-340144662\\1082.smt2",
        "z3": {
            "memory": 31657984,
            "run_time": 0.3653554916381836,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 94 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.029806852340698242,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35356672,
            "run_time": 0.09246969223022461,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 94 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 183468032,
            "run_time": 1.306797981262207,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 26,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.CodeGenerator",
            "r14 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "r2 := @parameter2: java.lang.String[]",
            "r4 := @parameter3: java.lang.String[]",
            "z0 = virtualinvoke r0.<org.javacc.parser.CodeGenerator: boolean isJavaLanguage()>()",
            "if z0 == 0 goto $r15 = newarray (java.lang.Object)[1]",
            "$r15 = newarray (java.lang.Object)[1]",
            "$r16 = new java.lang.StringBuilder",
            "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"class \")",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r15[0] = $r19",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCode(java.lang.Object[])>($r15)",
            "if z0 == 0 goto $i0 = lengthof r2",
            "$i2 = lengthof r2",
            "if $i2 != 1 goto $i3 = lengthof r4",
            "$i3 = lengthof r4",
            "if $i3 == 0 goto specialinvoke r0.<org.javacc.parser.CodeGenerator: void genCommaSeperatedString(java.lang.String[])>(r4)",
            "specialinvoke r0.<org.javacc.parser.CodeGenerator: void genCommaSeperatedString(java.lang.String[])>(r4)",
            "$r20 = newarray (java.lang.Object)[1]",
            "$r20[0] = \" {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r20)",
            "$r21 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$z1 = virtualinvoke $r21.<java.lang.String: boolean equals(java.lang.Object)>(\"c++\")",
            "if $z1 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CodeGenerator__getClassQualifier__-1168673550\\1249.smt2",
        "z3": {
            "memory": 32190464,
            "run_time": 0.05876016616821289,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1703:\r\n  ;;   var1703!val!1 var1703!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1703!val!1 () var1703)\r\n  (declare-fun var1703!val!0 () var1703)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1703)) (or (= x var1703!val!1) (= x var1703!val!0)))\r\n  ;; -----------\r\n  (define-fun var503 () var1703\r\n    var1703!val!0)\r\n  (define-fun null-var1703 () var1703\r\n    var1703!val!1)\r\n  (define-fun var3171 () String\r\n    \"A\")\r\n  (define-fun var554 () String\r\n    String-init)\r\n  (define-fun var108 () String\r\n    (str.++ var554!1 var3171))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var158 () String\r\n    (str.++ var554!1 var3171 \"::\"))\r\n  (define-fun var742 () String\r\n    (str.++ var554!1 var3171 \"::\"))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var554!1 () String\r\n    \"\")\r\n  (define-fun var108!1 () String\r\n    \"A::\")\r\n  (define-fun var554!2 () String\r\n    \"A\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n)\r\n(error \"line 40 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.047574520111083984,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1703 is 2\r\n; rep: (as @var1703_0 var1703)\r\n; rep: (as @var1703_1 var1703)\r\n; cardinality of var473 is 1\r\n; rep: (as @var473_0 var473)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun null-var1703 () var1703 (as @var1703_0 var1703))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var503 () var1703 (as @var1703_1 var1703))\r\n(define-fun var3171 () String \"\")\r\n(define-fun var554!1 () String \"\")\r\n(define-fun var554!2 () String \"\")\r\n(define-fun var108!1 () String \"::\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36913152,
            "run_time": 0.07859468460083008,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1703:\n  ;;   var1703!val!1 var1703!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1703!val!1 () var1703)\n  (declare-fun var1703!val!0 () var1703)\n  ;; cardinality constraint:\n  (forall ((x var1703)) (or (= x var1703!val!1) (= x var1703!val!0)))\n  ;; -----------\n  (define-fun var503 () var1703\n    var1703!val!0)\n  (define-fun var554!2 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var108!1 () String\n    \"\\u{0}\\u{0}::\")\n  (define-fun var554!1 () String\n    \"\")\n  (define-fun var554 () String\n    String-init)\n  (define-fun var742 () String\n    (str.++ var554!1 var3171 \"::\"))\n  (define-fun null-var1703 () var1703\n    var1703!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3171 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var158 () String\n    (str.++ var554!1 var3171 \"::\"))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var108 () String\n    (str.++ var554!1 var3171))\n  (define-fun String-init () String\n    \"\")\n)\n(error \"line 40 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 161812480,
            "run_time": 1.1361916065216064,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1703/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.CodeGenerator__getClassQualifier__-1168673550\\1249.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var108!1 =\r\n     concat(var3171, \"::\")\r\n\r\n779ms\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r4 := @this: org.javacc.parser.CodeGenerator",
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"::\")",
            "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CodeGenerator__saveOutput__-1572319013\\665.smt2",
        "z3": {
            "memory": 31244288,
            "run_time": 0.0600743293762207,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2492:\r\n  ;;   var2492!val!0 var2492!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2492!val!0 () var2492)\r\n  (declare-fun var2492!val!1 () var2492)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2492)) (or (= x var2492!val!0) (= x var2492!val!1)))\r\n  ;; -----------\r\n  (define-fun var354 () String\r\n    (mainBuffer/-1919349735 var1499))\r\n  (define-fun var1370 () var3899\r\n    var3899-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2605 () Bool\r\n    (isJavaLanguage/-1752064482 var1499))\r\n  (define-fun var3237 () String\r\n    (str.++ var1880!1 \"/* \" (getName/1128186653 var1370!1)))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2396 () String\r\n    \"A\")\r\n  (define-fun var1880 () String\r\n    String-init)\r\n  (define-fun var1499 () var2492\r\n    var2492!val!0)\r\n  (define-fun var514 () String\r\n    (getName/1128186653 var1370!1))\r\n  (define-fun var664 () String\r\n    (mainBuffer/-1919349735 var1499))\r\n  (define-fun var3319 () String\r\n    (str.++ var1880!1 \"/* \" (getName/1128186653 var1370!1) \" */\\n\"))\r\n  (define-fun null-var2492 () var2492\r\n    var2492!val!1)\r\n  (define-fun var3095 () String\r\n    (str.++ var1880!1 \"/* \" (getName/1128186653 var1370!1) \" */\\n\"))\r\n  (define-fun var1420 () String\r\n    (str.++ var1880!1 \"/* \"))\r\n  (define-fun var1370!1 () var3899\r\n    var3899!val!0)\r\n  (define-fun var3237!1 () String\r\n    \"/*  */\\n\")\r\n  (define-fun var1420!1 () String\r\n    \"/* \")\r\n  (define-fun var1880!2 () String\r\n    \"/* \")\r\n  (define-fun var1880!1 () String\r\n    \"\")\r\n  (define-fun var2396!2 () String\r\n    \"\")\r\n  (define-fun var664!1 () String\r\n    \"\")\r\n  (define-fun var2396!1 () String\r\n    \"\")\r\n  (define-fun var2813 () Int\r\n    0)\r\n  (define-fun var3095!1 () String\r\n    \"\")\r\n  (define-fun var3899-init () var3899\r\n    var3899!val!0)\r\n  (define-fun var1499!1 () var2492\r\n    var2492!val!0)\r\n  (define-fun var354!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun isJavaLanguage/-1752064482 ((x!0 var2492)) Bool\r\n    true)\r\n  (define-fun getName/1128186653 ((x!0 var3899)) String\r\n    \"\")\r\n  (define-fun insert/-1682204078 ((x!0 String) (x!1 Int) (x!2 String)) String\r\n    \"\")\r\n  (define-fun saveOutput/-1548933952 ((x!0 var2492) (x!1 String) (x!2 String)) void\r\n    void!val!0)\r\n  (define-fun <init>/-1681595970 ((x!0 var3899) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun mainBuffer/-1919349735 ((x!0 var2492)) String\r\n    \"\")\r\n)\r\n(error \"line 75 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.04549551010131836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2492 is 2\r\n; rep: (as @var2492_0 var2492)\r\n; rep: (as @var2492_1 var2492)\r\n; cardinality of var2132 is 1\r\n; rep: (as @var2132_0 var2132)\r\n; cardinality of var3899 is 1\r\n; rep: (as @var3899_0 var3899)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun isJavaLanguage/-1752064482 ((_arg_1 var2492)) Bool true)\r\n(define-fun mainBuffer/-1919349735 ((BOUND_VARIABLE_695 var2492)) String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun var3899-init () var3899 (as @var3899_0 var3899))\r\n(define-fun <init>/-1681595970 ((BOUND_VARIABLE_698 var3899) (BOUND_VARIABLE_699 String)) void (as @void_0 void))\r\n(define-fun getName/1128186653 ((BOUND_VARIABLE_702 var3899)) String \"\")\r\n(define-fun insert/-1682204078 ((BOUND_VARIABLE_705 String) (BOUND_VARIABLE_706 Int) (BOUND_VARIABLE_707 String)) String \"\")\r\n(define-fun saveOutput/-1548933952 ((BOUND_VARIABLE_710 var2492) (BOUND_VARIABLE_711 String) (BOUND_VARIABLE_712 String)) void (as @void_0 void))\r\n(define-fun null-var2492 () var2492 (as @var2492_0 var2492))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1499 () var2492 (as @var2492_1 var2492))\r\n(define-fun var2396 () String \"\")\r\n(define-fun var1880!1 () String \"\")\r\n(define-fun var1880!2 () String \"/* \")\r\n(define-fun var1370!1 () var3899 (as @var3899_0 var3899))\r\n(define-fun var2396!1 () String \"\")\r\n(define-fun var1420!1 () String \"/* \")\r\n(define-fun var3237!1 () String \"/*  */\\u{5c}n\")\r\n(define-fun var354!1 () String \"\")\r\n(define-fun var2813 () Int 0)\r\n(define-fun var3095!1 () String \"\")\r\n(define-fun var1499!1 () var2492 (as @var2492_0 var2492))\r\n(define-fun var2396!2 () String \"\")\r\n(define-fun var664!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36937728,
            "run_time": 0.1248774528503418,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2492:\n  ;;   var2492!val!0 var2492!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2492!val!0 () var2492)\n  (declare-fun var2492!val!1 () var2492)\n  ;; cardinality constraint:\n  (forall ((x var2492)) (or (= x var2492!val!0) (= x var2492!val!1)))\n  ;; -----------\n  (define-fun var1880!1 () String\n    \"\")\n  (define-fun var1880!2 () String\n    \"/* \")\n  (define-fun var1420!1 () String\n    \"/* \")\n  (define-fun var3237!1 () String\n    \"/*  */\\n\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1370!1 () var3899\n    var3899!val!0)\n  (define-fun var3319 () String\n    (str.++ var1880!1 \"/* \" (getName/1128186653 var1370!1) \" */\\n\"))\n  (define-fun var3237 () String\n    (str.++ var1880!1 \"/* \" (getName/1128186653 var1370!1)))\n  (define-fun var1880 () String\n    String-init)\n  (define-fun var514 () String\n    (getName/1128186653 var1370!1))\n  (define-fun var2605 () Bool\n    (isJavaLanguage/-1752064482 var1499))\n  (define-fun var1499 () var2492\n    var2492!val!0)\n  (define-fun var3095 () String\n    (str.++ var1880!1 \"/* \" (getName/1128186653 var1370!1) \" */\\n\"))\n  (define-fun var1370 () var3899\n    var3899-init)\n  (define-fun var2396 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1420 () String\n    (str.++ var1880!1 \"/* \"))\n  (define-fun null-var2492 () var2492\n    var2492!val!1)\n  (define-fun var664 () String\n    (mainBuffer/-1919349735 var1499))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var354 () String\n    (mainBuffer/-1919349735 var1499))\n  (define-fun var2396!2 () String\n    \"\")\n  (define-fun var664!1 () String\n    \"\")\n  (define-fun var2396!1 () String\n    \"\")\n  (define-fun var2813 () Int\n    0)\n  (define-fun var3095!1 () String\n    \"\")\n  (define-fun var3899-init () var3899\n    var3899!val!0)\n  (define-fun var1499!1 () var2492\n    var2492!val!0)\n  (define-fun var354!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun isJavaLanguage/-1752064482 ((x!0 var2492)) Bool\n    true)\n  (define-fun getName/1128186653 ((x!0 var3899)) String\n    \"\")\n  (define-fun insert/-1682204078 ((x!0 String) (x!1 Int) (x!2 String)) String\n    \"\")\n  (define-fun saveOutput/-1548933952 ((x!0 var2492) (x!1 String) (x!2 String)) void\n    void!val!0)\n  (define-fun <init>/-1681595970 ((x!0 var3899) (x!1 String)) void\n    void!val!0)\n  (define-fun mainBuffer/-1919349735 ((x!0 var2492)) String\n    \"\")\n)\n(error \"line 75 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 172740608,
            "run_time": 1.2307970523834229,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2492/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.CodeGenerator__saveOutput__-1572319013\\665.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3237!1 =\r\n     concat(all_22_4, \" */\\u{5c}n\")\r\n   var1420!1 =\r\n     concat(\"/* \", all_19_3)\r\n   all_22_4 =\r\n     concat(\"/* \", all_19_3)\r\n\r\n889ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1,
            "<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.CodeGenerator",
            "r1 := @parameter0: java.lang.String",
            "$z0 = virtualinvoke r0.<org.javacc.parser.CodeGenerator: boolean isJavaLanguage()>()",
            "if $z0 != 0 goto $r60 = r0.<org.javacc.parser.CodeGenerator: java.lang.StringBuffer mainBuffer>",
            "$r60 = r0.<org.javacc.parser.CodeGenerator: java.lang.StringBuffer mainBuffer>",
            "$r61 = new java.lang.StringBuilder",
            "specialinvoke $r61.<java.lang.StringBuilder: void <init>()>()",
            "$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/* \")",
            "$r63 = new java.io.File",
            "specialinvoke $r63.<java.io.File: void <init>(java.lang.String)>(r1)",
            "$r64 = virtualinvoke $r63.<java.io.File: java.lang.String getName()>()",
            "$r65 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r64)",
            "$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" */\\n\")",
            "$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r60.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.String)>(0, $r67)",
            "$r68 = r0.<org.javacc.parser.CodeGenerator: java.lang.StringBuffer mainBuffer>",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void saveOutput(java.lang.String,java.lang.StringBuffer)>(r1, $r68)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCErrors__printLocationInfo__1457610128\\610.smt2",
        "z3": {
            "memory": 31731712,
            "run_time": 0.06810975074768066,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 69 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 5791744,
            "run_time": 0.030646562576293945,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35123200,
            "run_time": 0.11010265350341797,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 69 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151392256,
            "run_time": 1.0689001083374023,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 19,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "$z0 = r0 instanceof org.javacc.parser.NormalProduction",
            "if $z0 == 0 goto $z1 = r0 instanceof org.javacc.parser.TokenProduction",
            "r49 = (org.javacc.parser.NormalProduction) r0",
            "$r42 = <java.lang.System: java.io.PrintStream err>",
            "$r41 = new java.lang.StringBuilder",
            "specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()",
            "$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Line \")",
            "$i10 = virtualinvoke r49.<org.javacc.parser.NormalProduction: int getLine()>()",
            "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i10)",
            "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", Column \")",
            "$i11 = virtualinvoke r49.<org.javacc.parser.NormalProduction: int getColumn()>()",
            "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i11)",
            "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")",
            "$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r42.<java.io.PrintStream: void print(java.lang.String)>($r48)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Expansion__dump__1891027141\\707.smt2",
        "z3": {
            "memory": 32165888,
            "run_time": 0.11358118057250977,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var716:\r\n  ;;   var716!val!0 var716!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var716!val!0 () var716)\r\n  (declare-fun var716!val!1 () var716)\r\n  ;; cardinality constraint:\r\n  (forall ((x var716)) (or (= x var716!val!0) (= x var716!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1972:\r\n  ;;   var1972!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1972!val!0 () var1972)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1972)) (= x var1972!val!0))\r\n  ;; -----------\r\n  ;; universe for var2924:\r\n  ;;   var2924!val!1 var2924!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2924!val!1 () var2924)\r\n  (declare-fun var2924!val!0 () var2924)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2924)) (or (= x var2924!val!1) (= x var2924!val!0)))\r\n  ;; -----------\r\n  (define-fun var1942!1 () String\r\n    \" \")\r\n  (define-fun null-var716 () var716\r\n    var716!val!1)\r\n  (define-fun var2414 () String\r\n    (str.++ (append/1845021834\r\n          (dumpPrefix/-1981802303 var3927 var2747)\r\n          (var588_identityHashCode/1096208673\r\n            (cast-from-var2924-to-var1972 var3927)))\r\n        \" \"\r\n        (getSimpleName/675546153 var3927)))\r\n  (define-fun null-var2924 () var2924\r\n    var2924!val!1)\r\n  (define-fun var1145 () String\r\n    (getSimpleName/675546153 var3927))\r\n  (define-fun var2822 () Int\r\n    (var588_identityHashCode/1096208673 (cast-from-var2924-to-var1972 var3927)))\r\n  (define-fun var1942 () String\r\n    (str.++ (append/1845021834\r\n          (dumpPrefix/-1981802303 var3927 var2747)\r\n          (var588_identityHashCode/1096208673\r\n            (cast-from-var2924-to-var1972 var3927)))\r\n        \" \"))\r\n  (define-fun var795 () String\r\n    (dumpPrefix/-1981802303 var3927 var2747))\r\n  (define-fun var3712 () String\r\n    (append/1845021834\r\n  (dumpPrefix/-1981802303 var3927 var2747)\r\n  (var588_identityHashCode/1096208673 (cast-from-var2924-to-var1972 var3927))))\r\n  (define-fun var3026 () var716\r\n    var716!val!0)\r\n  (define-fun var2747 () Int\r\n    2)\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var3927 () var2924\r\n    var2924!val!0)\r\n  (define-fun var3712!1 () String\r\n    \"\")\r\n  (define-fun var588_identityHashCode/1096208673 ((x!0 var1972)) Int\r\n    3)\r\n  (define-fun cast-from-var2924-to-var1972 ((x!0 var2924)) var1972\r\n    var1972!val!0)\r\n  (define-fun append/1845021834 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun dumpPrefix/-1981802303 ((x!0 var2924) (x!1 Int)) String\r\n    \"!0!\")\r\n  (define-fun getSimpleName/675546153 ((x!0 var2924)) String\r\n    \"\")\r\n)\r\n(error \"line 44 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.03172707557678223,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2924 is 2\r\n; rep: (as @var2924_0 var2924)\r\n; rep: (as @var2924_1 var2924)\r\n; cardinality of var716 is 2\r\n; rep: (as @var716_0 var716)\r\n; rep: (as @var716_1 var716)\r\n; cardinality of var588 is 1\r\n; rep: (as @var588_0 var588)\r\n; cardinality of var1972 is 1\r\n; rep: (as @var1972_0 var1972)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun dumpPrefix/-1981802303 ((_arg_1 var2924) (_arg_2 Int)) String \"A\")\r\n(define-fun var588_identityHashCode/1096208673 ((_arg_1 var1972)) Int 2)\r\n(define-fun cast-from-var2924-to-var1972 ((_arg_1 var2924)) var1972 (as @var1972_0 var1972))\r\n(define-fun append/1845021834 ((_arg_1 String) (_arg_2 Int)) String \"\")\r\n(define-fun getSimpleName/675546153 ((BOUND_VARIABLE_1063 var2924)) String \"\")\r\n(define-fun null-var2924 () var2924 (as @var2924_0 var2924))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var716 () var716 (as @var716_0 var716))\r\n(define-fun var3927 () var2924 (as @var2924_1 var2924))\r\n(define-fun var2747 () Int 0)\r\n(define-fun var3026 () var716 (as @var716_1 var716))\r\n(define-fun var3712!1 () String \"\")\r\n(define-fun var1942!1 () String \" \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35151872,
            "run_time": 0.12566089630126953,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 43 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 44 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179900416,
            "run_time": 1.2091619968414307,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2924/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.Expansion__dump__1891027141\\707.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1942!1 =\r\n     concat(all_20_2, rhs)\r\n   var3712!1 =\r\n     concat(all_18_0, rhs)\r\n   all_20_2 =\r\n     concat(all_18_0, \" \")\r\n\r\n909ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(int)>": 1,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.Expansion",
            "i0 := @parameter0: int",
            "r6 := @parameter1: java.util.Set",
            "$r1 = virtualinvoke r0.<org.javacc.parser.Expansion: java.lang.StringBuffer dumpPrefix(int)>(i0)",
            "$i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0)",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1)",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\" \")",
            "$r3 = specialinvoke r0.<org.javacc.parser.Expansion: java.lang.String getSimpleName()>()",
            "r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3)",
            "return r5"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__createOutputDir__1818737478\\817.smt2",
        "z3": {
            "memory": 31240192,
            "run_time": 0.13003325462341309,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var138:\r\n  ;;   var138!val!0 var138!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var138!val!0 () var138)\r\n  (declare-fun var138!val!1 () var138)\r\n  ;; cardinality constraint:\r\n  (forall ((x var138)) (or (= x var138!val!0) (= x var138!val!1)))\r\n  ;; -----------\r\n  (define-fun var3193 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var2645!1 \"\"\"\")\r\n          (cast-from-var138-to-var843 var2281))\r\n        \" is not a valid output directory.\"))\r\n  (define-fun var1438 () Bool\r\n    (exists/1072868559 var2281))\r\n  (define-fun var214 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var2645!1 \"\"\"\")\r\n          (cast-from-var138-to-var843 var2281))\r\n        \" is not a valid output directory.\"))\r\n  (define-fun var2281 () var138\r\n    var138!val!0)\r\n  (define-fun null-var138 () var138\r\n    var138!val!1)\r\n  (define-fun var2930 () Bool\r\n    (isDirectory/-2122094196 var2281))\r\n  (define-fun var382!1 () String\r\n    \"\"\"\")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var382 () String\r\n    (str.++ var2645!1 \"\"\"\"))\r\n  (define-fun var3888 () String\r\n    (append/-1031950772\r\n  (str.++ var2645!1 \"\"\"\")\r\n  (cast-from-var138-to-var843 var2281)))\r\n  (define-fun var2645 () String\r\n    String-init)\r\n  (define-fun var3888!1 () String\r\n    \" is not a valid output directory.\")\r\n  (define-fun var2645!1 () String\r\n    \"\")\r\n  (define-fun var2645!2 () String\r\n    \"\"\"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3193!1 () String\r\n    \"\")\r\n  (define-fun isDirectory/-2122094196 ((x!0 var138)) Bool\r\n    false)\r\n  (define-fun exists/1072868559 ((x!0 var138)) Bool\r\n    true)\r\n  (define-fun cast-from-var138-to-var843 ((x!0 var138)) var843\r\n    var843!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var843)) String\r\n    \"\")\r\n  (define-fun var2945_semantic_error/-498493661 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 55 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10682368,
            "run_time": 0.0313267707824707,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var138 is 2\r\n; rep: (as @var138_0 var138)\r\n; rep: (as @var138_1 var138)\r\n; cardinality of var843 is 1\r\n; rep: (as @var843_0 var843)\r\n; cardinality of var2945 is 1\r\n; rep: (as @var2945_0 var2945)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun exists/1072868559 ((_arg_1 var138)) Bool true)\r\n(define-fun isDirectory/-2122094196 ((_arg_1 var138)) Bool false)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_963 String) (BOUND_VARIABLE_964 var843)) String \"\")\r\n(define-fun cast-from-var138-to-var843 ((BOUND_VARIABLE_967 var138)) var843 (as @var843_0 var843))\r\n(define-fun var2945_semantic_error/-498493661 ((BOUND_VARIABLE_970 String)) void (as @void_0 void))\r\n(define-fun null-var138 () var138 (as @var138_0 var138))\r\n(define-fun var2281 () var138 (as @var138_1 var138))\r\n(define-fun var2645!1 () String \"\")\r\n(define-fun var2645!2 () String \"\"\"\")\r\n(define-fun var382!1 () String \"\"\"\")\r\n(define-fun var3888!1 () String \" is not a valid output directory.\")\r\n(define-fun var3193!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35819520,
            "run_time": 0.12343406677246094,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var138:\n  ;;   var138!val!0 var138!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var138!val!0 () var138)\n  (declare-fun var138!val!1 () var138)\n  ;; cardinality constraint:\n  (forall ((x var138)) (or (= x var138!val!0) (= x var138!val!1)))\n  ;; -----------\n  (define-fun var382!1 () String\n    \"\"\"\")\n  (define-fun var2281 () var138\n    var138!val!0)\n  (define-fun var382 () String\n    (str.++ var2645!1 \"\"\"\"))\n  (define-fun null-var138 () var138\n    var138!val!1)\n  (define-fun var2645!2 () String\n    \"\"\"\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1438 () Bool\n    (exists/1072868559 var2281))\n  (define-fun var2930 () Bool\n    (isDirectory/-2122094196 var2281))\n  (define-fun var2645 () String\n    String-init)\n  (define-fun var3888 () String\n    (append/-1031950772\n  (str.++ var2645!1 \"\"\"\")\n  (cast-from-var138-to-var843 var2281)))\n  (define-fun var3193 () String\n    (str.++ (append/-1031950772\n          (str.++ var2645!1 \"\"\"\")\n          (cast-from-var138-to-var843 var2281))\n        \" is not a valid output directory.\"))\n  (define-fun var214 () String\n    (str.++ (append/-1031950772\n          (str.++ var2645!1 \"\"\"\")\n          (cast-from-var138-to-var843 var2281))\n        \" is not a valid output directory.\"))\n  (define-fun var3888!1 () String\n    \" is not a valid output directory.\")\n  (define-fun var2645!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3193!1 () String\n    \"\")\n  (define-fun isDirectory/-2122094196 ((x!0 var138)) Bool\n    false)\n  (define-fun exists/1072868559 ((x!0 var138)) Bool\n    true)\n  (define-fun cast-from-var138-to-var843 ((x!0 var138)) var843\n    var843!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var843)) String\n    \"\")\n  (define-fun var2945_semantic_error/-498493661 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 55 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 178941952,
            "run_time": 1.3667378425598145,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var138/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCGlobals__createOutputDir__1818737478\\817.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_27_4 =\r\n     concat(all_24_4, \" is not a valid output directory.\")\r\n   var3888!1 =\r\n     concat(all_24_4, \" is not a valid output directory.\")\r\n\r\n1051ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.io.File",
            "$z0 = virtualinvoke r0.<java.io.File: boolean exists()>()",
            "if $z0 != 0 goto $z1 = virtualinvoke r0.<java.io.File: boolean isDirectory()>()",
            "$z1 = virtualinvoke r0.<java.io.File: boolean isDirectory()>()",
            "if $z1 != 0 goto $z2 = virtualinvoke r0.<java.io.File: boolean canWrite()>()",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is not a valid output directory.\")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void semantic_error(java.lang.String)>($r10)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__printTokenOnly__-838714678\\946.smt2",
        "z3": {
            "memory": 32157696,
            "run_time": 0.08463525772094727,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1610:\r\n  ;;   var1610!val!1 var1610!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1610!val!1 () var1610)\r\n  (declare-fun var1610!val!0 () var1610)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1610)) (or (= x var1610!val!1) (= x var1610!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2763:\r\n  ;;   var2763!val!1 var2763!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2763!val!1 () var2763)\r\n  (declare-fun var2763!val!0 () var2763)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2763)) (or (= x var2763!val!1) (= x var2763!val!0)))\r\n  ;; -----------\r\n  (define-fun var200 () Int\r\n    (beginLine/197050796 var3308))\r\n  (define-fun var2400 () Int\r\n    var1493-cline)\r\n  (define-fun var3308 () var1610\r\n    var1610!val!0)\r\n  (define-fun null-var1610 () var1610\r\n    var1610!val!1)\r\n  (define-fun var2623 () Int\r\n    (let ((a!1 (str.at (image/197050796 var3308)\r\n                   (- (str.len (image/197050796 var3308)) 1))))\r\n  (str.to_code a!1)))\r\n  (define-fun var3729 () Int\r\n    var1493-ccol)\r\n  (define-fun var359 () var2763\r\n    var2763!val!0)\r\n  (define-fun var2266 () Int\r\n    (str.len (image/197050796 var3308)))\r\n  (define-fun var1917 () Int\r\n    (let ((a!1 (str.at (image/197050796 var3308)\r\n                   (- (str.len (image/197050796 var3308)) 1))))\r\n  (str.to_code a!1)))\r\n  (define-fun null-var2763 () var2763\r\n    var2763!val!1)\r\n  (define-fun var2467 () Int\r\n    (endLine/197050796 var3308))\r\n  (define-fun var88 () Int\r\n    (+ (endColumn/197050796 var3308) 1))\r\n  (define-fun var1493-cline () Int\r\n    0)\r\n  (define-fun var798 () Int\r\n    (beginColumn/197050796 var3308))\r\n  (define-fun var1792 () String\r\n    (var1493_addUnicodeEscapes/1686793564 (image/197050796 var3308)))\r\n  (define-fun var2854 () String\r\n    (image/197050796 var3308))\r\n  (define-fun var7 () Int\r\n    (endLine/197050796 var3308))\r\n  (define-fun var2433 () Int\r\n    (endColumn/197050796 var3308))\r\n  (define-fun var911 () Int\r\n    (+ (endColumn/197050796 var3308) 1))\r\n  (define-fun var3337 () Int\r\n    (- (str.len (image/197050796 var3308)) 1))\r\n  (define-fun var1286 () Int\r\n    (kind/197050796 var3308))\r\n  (define-fun var1493-ccol () Int\r\n    0)\r\n  (define-fun var1387 () Int\r\n    (let ((a!1 (str.at (image/197050796 var3308)\r\n                   (- (str.len (image/197050796 var3308)) 1))))\r\n  (str.to_code a!1)))\r\n  (define-fun var769 () String\r\n    (image/197050796 var3308))\r\n  (define-fun var3876 () String\r\n    (image/197050796 var3308))\r\n  (define-fun var359!1 () var2763\r\n    var2763!val!1)\r\n  (define-fun var1792!1 () String\r\n    \"\")\r\n  (define-fun kind/197050796 ((x!0 var1610)) Int\r\n    94)\r\n  (define-fun image/197050796 ((x!0 var1610)) String\r\n    \"\\u{4009}\")\r\n  (define-fun beginColumn/197050796 ((x!0 var1610)) Int\r\n    0)\r\n  (define-fun beginLine/197050796 ((x!0 var1610)) Int\r\n    0)\r\n  (define-fun endLine/197050796 ((x!0 var1610)) Int\r\n    0)\r\n  (define-fun print/-2007916749 ((x!0 var2763) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun endColumn/197050796 ((x!0 var1610)) Int\r\n    0)\r\n  (define-fun var1493_addUnicodeEscapes/1686793564 ((x!0 String)) String\r\n    \"\")\r\n)\r\n(error \"line 71 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1720320,
            "run_time": 0.0316162109375,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1610 is 2\r\n; rep: (as @var1610_0 var1610)\r\n; rep: (as @var1610_1 var1610)\r\n; cardinality of var2763 is 2\r\n; rep: (as @var2763_0 var2763)\r\n; rep: (as @var2763_1 var2763)\r\n; cardinality of var1493 is 1\r\n; rep: (as @var1493_0 var1493)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun beginLine/197050796 ((_arg_1 var1610)) Int 0)\r\n(define-fun beginColumn/197050796 ((_arg_1 var1610)) Int 0)\r\n(define-fun kind/197050796 ((_arg_1 var1610)) Int 94)\r\n(define-fun image/197050796 ((_arg_1 var1610)) String \"\\u{0}\")\r\n(define-fun var1493_addUnicodeEscapes/1686793564 ((BOUND_VARIABLE_989 String)) String \"\")\r\n(define-fun print/-2007916749 ((BOUND_VARIABLE_992 var2763) (BOUND_VARIABLE_993 String)) void (as @void_0 void))\r\n(define-fun endLine/197050796 ((BOUND_VARIABLE_996 var1610)) Int 0)\r\n(define-fun endColumn/197050796 ((BOUND_VARIABLE_999 var1610)) Int 0)\r\n(define-fun null-var1610 () var1610 (as @var1610_0 var1610))\r\n(define-fun null-var2763 () var2763 (as @var2763_0 var2763))\r\n(define-fun var1493-cline () Int 0)\r\n(define-fun var1493-ccol () Int 0)\r\n(define-fun var3308 () var1610 (as @var1610_1 var1610))\r\n(define-fun var359 () var2763 (as @var2763_1 var2763))\r\n(define-fun var359!1 () var2763 (as @var2763_0 var2763))\r\n(define-fun var1792!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36143104,
            "run_time": 0.06196761131286621,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 70 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 71 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154763264,
            "run_time": 1.2582666873931885,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_27_1, all_27_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCGlobals__printTokenOnly__-838714678\\946.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n912ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.Token",
            "r1 := @parameter1: java.io.PrintWriter",
            "$i1 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i0 = r0.<org.javacc.parser.Token: int beginLine>",
            "if $i1 >= $i0 goto $i3 = <org.javacc.parser.JavaCCGlobals: int ccol>",
            "$i3 = <org.javacc.parser.JavaCCGlobals: int ccol>",
            "$i2 = r0.<org.javacc.parser.Token: int beginColumn>",
            "if $i3 >= $i2 goto $i4 = r0.<org.javacc.parser.Token: int kind>",
            "$i4 = r0.<org.javacc.parser.Token: int kind>",
            "if $i4 == 94 goto $r2 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r2 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r3 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String addUnicodeEscapes(java.lang.String)>($r2)",
            "virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r3)",
            "goto [?= $i5 = r0.<org.javacc.parser.Token: int endLine>]",
            "$i5 = r0.<org.javacc.parser.Token: int endLine>",
            "<org.javacc.parser.JavaCCGlobals: int cline> = $i5",
            "$i6 = r0.<org.javacc.parser.Token: int endColumn>",
            "$i7 = $i6 + 1",
            "<org.javacc.parser.JavaCCGlobals: int ccol> = $i7",
            "$r5 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r4 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$i8 = virtualinvoke $r4.<java.lang.String: int length()>()",
            "$i9 = $i8 - 1",
            "$c13 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($i9)",
            "$i18 = (int) $c13",
            "if $i18 == 10 goto $i10 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i19 = (int) $c13",
            "if $i19 != 13 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__printTokenOnly__129998305\\1103-deviant-0.smt2",
        "z3": {
            "memory": 32247808,
            "run_time": 0.0665903091430664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2883:\r\n  ;;   var2883!val!0 var2883!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2883!val!0 () var2883)\r\n  (declare-fun var2883!val!1 () var2883)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2883)) (or (= x var2883!val!0) (= x var2883!val!1)))\r\n  ;; -----------\r\n  (define-fun var2935 () var2883\r\n    var2883!val!0)\r\n  (define-fun var3749 () Int\r\n    (- (str.len (image/197050796 var2935)) 1))\r\n  (define-fun var2874 () String\r\n    (image/197050796 var2935))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3849 () Int\r\n    (endLine/197050796 var2935))\r\n  (define-fun var3794 () String\r\n    (str.++ var3862!1 \"\"))\r\n  (define-fun null-var2883 () var2883\r\n    var2883!val!1)\r\n  (define-fun var3903 () Int\r\n    var1503-cline)\r\n  (define-fun var2237 () String\r\n    \"\")\r\n  (define-fun var1033 () Int\r\n    (+ (endColumn/197050796 var2935) 1))\r\n  (define-fun var3559 () Int\r\n    (endLine/197050796 var2935))\r\n  (define-fun var336 () String\r\n    (image/197050796 var2935))\r\n  (define-fun var1952 () String\r\n    (image/197050796 var2935))\r\n  (define-fun var2563 () String\r\n    (var1503_addUnicodeEscapes/1686793564 (image/197050796 var2935)))\r\n  (define-fun var988 () Int\r\n    (beginColumn/197050796 var2935))\r\n  (define-fun var3650 () Int\r\n    (kind/197050796 var2935))\r\n  (define-fun var1503-cline () Int\r\n    0)\r\n  (define-fun var1386 () Int\r\n    var1503-ccol)\r\n  (define-fun var2513 () Int\r\n    (endColumn/197050796 var2935))\r\n  (define-fun var3732 () Int\r\n    (beginLine/197050796 var2935))\r\n  (define-fun var573 () String\r\n    (str.++ var3862!1\r\n        \"\"\r\n        (var1503_addUnicodeEscapes/1686793564 (image/197050796 var2935))))\r\n  (define-fun var3862 () String\r\n    String-init)\r\n  (define-fun var843 () Int\r\n    (str.len (image/197050796 var2935)))\r\n  (define-fun var1503-ccol () Int\r\n    0)\r\n  (define-fun var18 () Int\r\n    (+ (endColumn/197050796 var2935) 1))\r\n  (define-fun var1324 () String\r\n    (str.++ var3862!1\r\n        \"\"\r\n        (var1503_addUnicodeEscapes/1686793564 (image/197050796 var2935))))\r\n  (define-fun var3794!1 () String\r\n    \"\")\r\n  (define-fun var3862!2 () String\r\n    \"\")\r\n  (define-fun var3862!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun kind/197050796 ((x!0 var2883)) Int\r\n    94)\r\n  (define-fun image/197050796 ((x!0 var2883)) String\r\n    \"\")\r\n  (define-fun beginColumn/197050796 ((x!0 var2883)) Int\r\n    0)\r\n  (define-fun beginLine/197050796 ((x!0 var2883)) Int\r\n    0)\r\n  (define-fun var1503_addUnicodeEscapes/1686793564 ((x!0 String)) String\r\n    \"\")\r\n  (define-fun endLine/197050796 ((x!0 var2883)) Int\r\n    0)\r\n  (define-fun endColumn/197050796 ((x!0 var2883)) Int\r\n    0)\r\n)\r\n(error \"line 73 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8802304,
            "run_time": 0.0316162109375,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2883 is 2\r\n; rep: (as @var2883_0 var2883)\r\n; rep: (as @var2883_1 var2883)\r\n; cardinality of var1503 is 1\r\n; rep: (as @var1503_0 var1503)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun beginLine/197050796 ((_arg_1 var2883)) Int 0)\r\n(define-fun beginColumn/197050796 ((_arg_1 var2883)) Int 0)\r\n(define-fun kind/197050796 ((_arg_1 var2883)) Int 94)\r\n(define-fun String-init () String \"\")\r\n(define-fun image/197050796 ((_arg_1 var2883)) String \"\")\r\n(define-fun var1503_addUnicodeEscapes/1686793564 ((BOUND_VARIABLE_732 String)) String \"\")\r\n(define-fun endLine/197050796 ((BOUND_VARIABLE_735 var2883)) Int 0)\r\n(define-fun endColumn/197050796 ((BOUND_VARIABLE_738 var2883)) Int 0)\r\n(define-fun null-var2883 () var2883 (as @var2883_0 var2883))\r\n(define-fun var1503-cline () Int 0)\r\n(define-fun var1503-ccol () Int 0)\r\n(define-fun var2935 () var2883 (as @var2883_1 var2883))\r\n(define-fun var3862!1 () String \"\")\r\n(define-fun var3862!2 () String \"\")\r\n(define-fun var3794!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36188160,
            "run_time": 0.07757234573364258,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 72 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 73 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 183377920,
            "run_time": 1.4582252502441406,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3794!1 () String \"\")\r\n  (define-fun var3862!2 () String \"\")\r\n  (define-fun var3862!1 () String \"\")\r\n  (define-fun var2935 () var2883 var2883!192)\r\n  (define-fun var1503-ccol () Int 102)\r\n  (define-fun var1503-cline () Int 103)\r\n  (define-fun null-var2883 () var2883 var2883!190)\r\n  (define-fun var1503_addUnicodeEscapes/1686793564 ((x!0 String)) String (ite (= x!0 \"\") \"\" \"\"))\r\n  (define-fun image/197050796 ((x!0 var2883)) String (ite (= x!0 var2883!192) \"\" \"\"))\r\n  (define-fun kind/197050796 ((x!0 var2883)) Int (ite (= x!0 var2883!192) 94 0))\r\n  (define-fun beginColumn/197050796 ((x!0 var2883)) Int (ite (= x!0 var2883!192) 102 0))\r\n  (define-fun beginLine/197050796 ((x!0 var2883)) Int (ite (= x!0 var2883!192) 103 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.Token",
            "r18 = \"\"",
            "$i1 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i0 = r0.<org.javacc.parser.Token: int beginLine>",
            "if $i1 >= $i0 goto $i3 = <org.javacc.parser.JavaCCGlobals: int ccol>",
            "$i3 = <org.javacc.parser.JavaCCGlobals: int ccol>",
            "$i2 = r0.<org.javacc.parser.Token: int beginColumn>",
            "if $i3 >= $i2 goto $i4 = r0.<org.javacc.parser.Token: int kind>",
            "$i4 = r0.<org.javacc.parser.Token: int kind>",
            "if $i4 == 94 goto $r22 = new java.lang.StringBuilder",
            "$r22 = new java.lang.StringBuilder",
            "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18)",
            "$r2 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r3 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String addUnicodeEscapes(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "r19 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "goto [?= $i5 = r0.<org.javacc.parser.Token: int endLine>]",
            "$i5 = r0.<org.javacc.parser.Token: int endLine>",
            "<org.javacc.parser.JavaCCGlobals: int cline> = $i5",
            "$i6 = r0.<org.javacc.parser.Token: int endColumn>",
            "$i7 = $i6 + 1",
            "<org.javacc.parser.JavaCCGlobals: int ccol> = $i7",
            "$r7 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r6 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$i8 = virtualinvoke $r6.<java.lang.String: int length()>()",
            "$i9 = $i8 - 1",
            "$c13 = virtualinvoke $r7.<java.lang.String: char charAt(int)>($i9)",
            "$i18 = (int) $c13",
            "if $i18 == 10 goto $i10 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i10 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i11 = $i10 + 1",
            "<org.javacc.parser.JavaCCGlobals: int cline> = $i11",
            "<org.javacc.parser.JavaCCGlobals: int ccol> = 1",
            "return r19"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__makeToolNameList__830449084\\725.smt2",
        "z3": {
            "memory": 32673792,
            "run_time": 0.10000324249267578,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var376 () Int\r\n    (let ((a!1 (str.substr var2897\r\n                       0\r\n                       (- (str.indexof var2897 (str.from_code 10) 0) 0))))\r\n  (str.indexof a!1 (str.from_code 58) 0)))\r\n  (define-fun var323 () Int\r\n    (- 1))\r\n  (define-fun var2302 () Int\r\n    (- 1))\r\n  (define-fun var2443 () Int\r\n    (str.indexof var2897 (str.from_code 10) 0))\r\n  (define-fun var803 () Int\r\n    (str.indexof var2897 (str.from_code 13) 0))\r\n  (define-fun var819 () Int\r\n    (- 1))\r\n  (define-fun var2642 () Int\r\n    (str.indexof var2897 (str.from_code 13) 0))\r\n  (define-fun var1995 () var617\r\n    var617-init)\r\n  (define-fun var1692 () Int\r\n    (str.indexof var2897 (str.from_code 10) 0))\r\n  (define-fun var2897 () String\r\n    \"\\u{a}\\u{d}\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2365 () String\r\n    (str.substr var2897 0 (- (str.indexof var2897 (str.from_code 10) 0) 0)))\r\n  (define-fun var617-init () var617\r\n    var617!val!0)\r\n  (define-fun var1995!1 () var617\r\n    var617!val!0)\r\n  (define-fun <init>/-325640736 ((x!0 var617)) void\r\n    void!val!0)\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12201984,
            "run_time": 0.03038930892944336,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1712 is 1\r\n; rep: (as @var1712_0 var1712)\r\n; cardinality of var617 is 1\r\n; rep: (as @var617_0 var617)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var617-init () var617 (as @var617_0 var617))\r\n(define-fun <init>/-325640736 ((BOUND_VARIABLE_1625 var617)) void (as @void_0 void))\r\n(define-fun null-String () String \"\")\r\n(define-fun var2897 () String \"\\u{a}\\u{d}\")\r\n(define-fun var1995!1 () var617 (as @var617_0 var617))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39305216,
            "run_time": 0.12393736839294434,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2443 () Int\n    (str.indexof var2897 (str.from_code 10) 0))\n  (define-fun var2302 () Int\n    (- 1))\n  (define-fun var1995 () var617\n    var617-init)\n  (define-fun var376 () Int\n    (let ((a!1 (str.substr var2897\n                       0\n                       (- (str.indexof var2897 (str.from_code 10) 0) 0))))\n  (str.indexof a!1 (str.from_code 58) 0)))\n  (define-fun var803 () Int\n    (str.indexof var2897 (str.from_code 13) 0))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1692 () Int\n    (str.indexof var2897 (str.from_code 10) 0))\n  (define-fun var2897 () String\n    \"\\u{0}\\u{a}\\u{d}\\u{0}\")\n  (define-fun var2365 () String\n    (str.substr var2897 0 (- (str.indexof var2897 (str.from_code 10) 0) 0)))\n  (define-fun var2642 () Int\n    (str.indexof var2897 (str.from_code 13) 0))\n  (define-fun var323 () Int\n    (- 1))\n  (define-fun var819 () Int\n    (- 1))\n  (define-fun var617-init () var617\n    var617!val!0)\n  (define-fun var1995!1 () var617\n    var617!val!0)\n  (define-fun <init>/-325640736 ((x!0 var617)) void\n    void!val!0)\n)\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 235356160,
            "run_time": 1.911229133605957,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.IllegalArgumentException: cannot execute actions List(AddFormula((! (str_empty(all_239_0) & str_empty(all_207_1)))))\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCGlobals__makeToolNameList__830449084\\725.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nDecomposing equation:\r\n  all_48_1 . all_51_4 == all_46_1 . all_46_4\r\nAssuming all_45_4 = \"\"\r\nAssuming all_20_4 = \"\"\r\nAssuming all_47_4 = \"\"\r\nAssuming all_45_3 = \"\"\r\nAssuming all_46_3 = \"\"\r\nAssuming all_23_4 = \"\"\r\nAssuming all_23_3 = \"\"\r\nApplying Nielsen transformation (# word equations: 1), splitting \"\n\"\r\n  \"\n\" . all_46_4 == all_23_3 . \"\n\"\r\nAssuming all_29_4 = \"\"\r\nAssuming all_47_3 = \"\"\r\nApplying Nielsen transformation (# word equations: 1), splitting all_46_4\r\n  \"\n\" . all_46_4 == all_29_3 . \"\n\"\r\n\r\n1565ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: java.lang.String substring(int,int)>",
            "<java.lang.String: int indexOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int)>": 3,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r7 = new java.util.ArrayList",
            "specialinvoke $r7.<java.util.ArrayList: void <init>()>()",
            "i9 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(10)",
            "$i14 = (int) -1",
            "if i9 != $i14 goto $i8 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(13)",
            "$i8 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(13)",
            "i10 = $i8",
            "$i16 = (int) -1",
            "if $i8 != $i16 goto (branch)",
            "if i9 >= i10 goto $i11 = i10",
            "$i11 = i9",
            "goto [?= (branch)]",
            "if $i11 != 1000 goto r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i11)",
            "r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i11)",
            "$i0 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58)",
            "$i18 = (int) -1",
            "if $i0 != $i18 goto $i1 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58)",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__addUnicodeEscapes__1686793564\\891.smt2",
        "z3": {
            "memory": 30547968,
            "run_time": 0.09217119216918945,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3777 () String\r\n    var2778_getOutputLanguage/-1523304050)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var625 () String\r\n    \"A\")\r\n  (define-fun var3674 () Bool\r\n    (= var2778_getOutputLanguage/-1523304050 \"c++\"))\r\n  (define-fun var2778_getOutputLanguage/-1523304050 () String\r\n    \"c++\")\r\n)\r\n(error \"line 21 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8740864,
            "run_time": 0.02947521209716797,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var814 is 1\r\n; rep: (as @var814_0 var814)\r\n; cardinality of var2778 is 1\r\n; rep: (as @var2778_0 var2778)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2778_getOutputLanguage/-1523304050 () String \"c++\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun var625 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37502976,
            "run_time": 0.12341880798339844,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2778_getOutputLanguage/-1523304050 () String\n    \"c++\")\n  (define-fun var3674 () Bool\n    (= var2778_getOutputLanguage/-1523304050 \"c++\"))\n  (define-fun var3777 () String\n    var2778_getOutputLanguage/-1523304050)\n  (define-fun var625 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n)\n(error \"line 21 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 144400384,
            "run_time": 1.1184427738189697,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var625 () String \"+\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var2778_getOutputLanguage/-1523304050 () String \"c++\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r7 := @parameter0: java.lang.String",
            "$r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(\"c++\")",
            "if $z0 == 0 goto $z1 = staticinvoke <org.javacc.parser.Options: boolean isOutputLanguageJava()>()",
            "return r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Expansion__getSimpleName__675546153\\629-deviant-0.smt2",
        "z3": {
            "memory": 31227904,
            "run_time": 0.08919525146484375,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var249:\r\n  ;;   var249!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var249!val!0 () var249)\r\n  ;; cardinality constraint:\r\n  (forall ((x var249)) (= x var249!val!0))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  ;; universe for var3169:\r\n  ;;   var3169!val!0 var3169!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3169!val!0 () var3169)\r\n  (declare-fun var3169!val!1 () var3169)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3169)) (or (= x var3169!val!0) (= x var3169!val!1)))\r\n  ;; -----------\r\n  (define-fun var726 () String\r\n    (getName/-1958580599\r\n  (getClass/1258963082 (cast-from-var3169-to-var249 var1509))))\r\n  (define-fun var3011 () Int\r\n    (let ((a!1 (lastIndexOf/-618837785\r\n             (getName/-1958580599\r\n               (getClass/1258963082 (cast-from-var3169-to-var249 var1509)))\r\n             \".\")))\r\n  (+ a!1 1)))\r\n  (define-fun var413 () ClassObject\r\n    (getClass/1258963082 (cast-from-var3169-to-var249 var1509)))\r\n  (define-fun null-var3169 () var3169\r\n    var3169!val!1)\r\n  (define-fun var422 () Int\r\n    (lastIndexOf/-618837785\r\n  (getName/-1958580599\r\n    (getClass/1258963082 (cast-from-var3169-to-var249 var1509)))\r\n  \".\"))\r\n  (define-fun var1509 () var3169\r\n    var3169!val!0)\r\n  (define-fun cast-from-var3169-to-var249 ((x!0 var3169)) var249\r\n    var249!val!0)\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int\r\n    0)\r\n  (define-fun getClass/1258963082 ((x!0 var249)) ClassObject\r\n    ClassObject!val!0)\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.030625104904174805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3169 is 2\r\n; rep: (as @var3169_0 var3169)\r\n; rep: (as @var3169_1 var3169)\r\n; cardinality of var249 is 1\r\n; rep: (as @var249_0 var249)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getClass/1258963082 ((_arg_1 var249)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var3169-to-var249 ((_arg_1 var3169)) var249 (as @var249_0 var249))\r\n(define-fun getName/-1958580599 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun lastIndexOf/-618837785 ((_arg_1 String) (_arg_2 String)) Int (- 2))\r\n(define-fun null-var3169 () var3169 (as @var3169_0 var3169))\r\n(define-fun var1509 () var3169 (as @var3169_1 var3169))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35184640,
            "run_time": 0.12460136413574219,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 26 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175632384,
            "run_time": 1.2279222011566162,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1509 () var3169 var3169!6)\r\n  (define-fun null-var3169 () var3169 var3169!4)\r\n  (define-fun var249!18 () var249 (cast-from-var3169-to-var249 var3169!6))\r\n  (define-fun ClassObject!20 () ClassObject (getClass/1258963082 var249!18))\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int (ite (and (= x!0 \"\\u{0}\") (= x!1 \".\")) (- 2) 0))\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String (ite (= x!0 ClassObject!20) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int lastIndexOf(java.lang.String)>",
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: int lastIndexOf(java.lang.String)>": 1,
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.Expansion",
            "$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>()",
            "$i0 = virtualinvoke r2.<java.lang.String: int lastIndexOf(java.lang.String)>(\".\")",
            "$i1 = $i0 + 1",
            "$r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__printTokenOnly__-838714678\\973-deviant-0.smt2",
        "z3": {
            "memory": 32223232,
            "run_time": 0.10243058204650879,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3787:\r\n  ;;   var3787!val!1 var3787!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3787!val!1 () var3787)\r\n  (declare-fun var3787!val!0 () var3787)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3787)) (or (= x var3787!val!1) (= x var3787!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2340:\r\n  ;;   var2340!val!0 var2340!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2340!val!0 () var2340)\r\n  (declare-fun var2340!val!1 () var2340)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2340)) (or (= x var2340!val!0) (= x var2340!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var3787 () var3787\r\n    var3787!val!1)\r\n  (define-fun var604 () Int\r\n    (endLine/197050796 var2821))\r\n  (define-fun var2572 () Int\r\n    (beginColumn/197050796 var2821))\r\n  (define-fun var282 () Int\r\n    (beginLine/197050796 var2821))\r\n  (define-fun var2707 () Int\r\n    (endColumn/197050796 var2821))\r\n  (define-fun var3233 () Int\r\n    var1960-ccol)\r\n  (define-fun var2821 () var3787\r\n    var3787!val!0)\r\n  (define-fun var1051 () var2340\r\n    var2340!val!0)\r\n  (define-fun var3195 () Int\r\n    (kind/197050796 var2821))\r\n  (define-fun var1960-cline () Int\r\n    0)\r\n  (define-fun var3013 () Int\r\n    (str.len (image/197050796 var2821)))\r\n  (define-fun null-var2340 () var2340\r\n    var2340!val!1)\r\n  (define-fun var3739 () String\r\n    (var1960_addUnicodeEscapes/1686793564 (image/197050796 var2821)))\r\n  (define-fun var7 () Int\r\n    (endLine/197050796 var2821))\r\n  (define-fun var3687 () Int\r\n    var1960-cline)\r\n  (define-fun var539 () Int\r\n    (+ (endColumn/197050796 var2821) 1))\r\n  (define-fun var1186 () Int\r\n    (+ (endColumn/197050796 var2821) 1))\r\n  (define-fun var1960-ccol () Int\r\n    0)\r\n  (define-fun var1778 () String\r\n    (image/197050796 var2821))\r\n  (define-fun var596 () String\r\n    (image/197050796 var2821))\r\n  (define-fun var3314 () Int\r\n    (- (str.len (image/197050796 var2821)) 1))\r\n  (define-fun var1627 () String\r\n    (image/197050796 var2821))\r\n  (define-fun var3739!1 () String\r\n    \"\")\r\n  (define-fun var1051!1 () var2340\r\n    var2340!val!0)\r\n  (define-fun kind/197050796 ((x!0 var3787)) Int\r\n    94)\r\n  (define-fun image/197050796 ((x!0 var3787)) String\r\n    \"\")\r\n  (define-fun beginColumn/197050796 ((x!0 var3787)) Int\r\n    0)\r\n  (define-fun beginLine/197050796 ((x!0 var3787)) Int\r\n    0)\r\n  (define-fun endLine/197050796 ((x!0 var3787)) Int\r\n    0)\r\n  (define-fun print/-2007916749 ((x!0 var2340) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun var1960_addUnicodeEscapes/1686793564 ((x!0 String)) String\r\n    \"\")\r\n  (define-fun endColumn/197050796 ((x!0 var3787)) Int\r\n    0)\r\n)\r\n(error \"line 63 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1740800,
            "run_time": 0.0309450626373291,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3787 is 2\r\n; rep: (as @var3787_0 var3787)\r\n; rep: (as @var3787_1 var3787)\r\n; cardinality of var2340 is 2\r\n; rep: (as @var2340_0 var2340)\r\n; rep: (as @var2340_1 var2340)\r\n; cardinality of var1960 is 1\r\n; rep: (as @var1960_0 var1960)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun beginLine/197050796 ((_arg_1 var3787)) Int 0)\r\n(define-fun beginColumn/197050796 ((_arg_1 var3787)) Int 0)\r\n(define-fun kind/197050796 ((_arg_1 var3787)) Int 94)\r\n(define-fun image/197050796 ((_arg_1 var3787)) String \"\")\r\n(define-fun var1960_addUnicodeEscapes/1686793564 ((BOUND_VARIABLE_657 String)) String \"\")\r\n(define-fun print/-2007916749 ((BOUND_VARIABLE_660 var2340) (BOUND_VARIABLE_661 String)) void (as @void_0 void))\r\n(define-fun endLine/197050796 ((BOUND_VARIABLE_664 var3787)) Int 0)\r\n(define-fun endColumn/197050796 ((BOUND_VARIABLE_667 var3787)) Int 0)\r\n(define-fun null-var3787 () var3787 (as @var3787_0 var3787))\r\n(define-fun null-var2340 () var2340 (as @var2340_0 var2340))\r\n(define-fun var1960-cline () Int 0)\r\n(define-fun var1960-ccol () Int 0)\r\n(define-fun var2821 () var3787 (as @var3787_1 var3787))\r\n(define-fun var1051 () var2340 (as @var2340_1 var2340))\r\n(define-fun var1051!1 () var2340 (as @var2340_0 var2340))\r\n(define-fun var3739!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35196928,
            "run_time": 0.09099221229553223,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 62 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 63 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167874560,
            "run_time": 1.1910841464996338,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1051 () var2340 var2340!196)\r\n  (define-fun var2821 () var3787 var3787!194)\r\n  (define-fun var1960-ccol () Int 105)\r\n  (define-fun var1960-cline () Int 106)\r\n  (define-fun null-var2340 () var2340 var2340!192)\r\n  (define-fun null-var3787 () var3787 var3787!190)\r\n  (define-fun image/197050796 ((x!0 var3787)) String (ite (= x!0 var3787!194) \"\" \"\"))\r\n  (define-fun kind/197050796 ((x!0 var3787)) Int (ite (= x!0 var3787!194) 94 0))\r\n  (define-fun beginColumn/197050796 ((x!0 var3787)) Int (ite (= x!0 var3787!194) 105 0))\r\n  (define-fun beginLine/197050796 ((x!0 var3787)) Int (ite (= x!0 var3787!194) 106 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.Token",
            "r1 := @parameter1: java.io.PrintWriter",
            "$i1 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i0 = r0.<org.javacc.parser.Token: int beginLine>",
            "if $i1 >= $i0 goto $i3 = <org.javacc.parser.JavaCCGlobals: int ccol>",
            "$i3 = <org.javacc.parser.JavaCCGlobals: int ccol>",
            "$i2 = r0.<org.javacc.parser.Token: int beginColumn>",
            "if $i3 >= $i2 goto $i4 = r0.<org.javacc.parser.Token: int kind>",
            "$i4 = r0.<org.javacc.parser.Token: int kind>",
            "if $i4 == 94 goto $r2 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r2 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r3 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String addUnicodeEscapes(java.lang.String)>($r2)",
            "virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r3)",
            "goto [?= $i5 = r0.<org.javacc.parser.Token: int endLine>]",
            "$i5 = r0.<org.javacc.parser.Token: int endLine>",
            "<org.javacc.parser.JavaCCGlobals: int cline> = $i5",
            "$i6 = r0.<org.javacc.parser.Token: int endColumn>",
            "$i7 = $i6 + 1",
            "<org.javacc.parser.JavaCCGlobals: int ccol> = $i7",
            "$r5 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r4 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$i8 = virtualinvoke $r4.<java.lang.String: int length()>()",
            "$i9 = $i8 - 1",
            "$c13 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($i9)",
            "$i18 = (int) $c13",
            "if $i18 == 10 goto $i10 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i10 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i11 = $i10 + 1",
            "<org.javacc.parser.JavaCCGlobals: int cline> = $i11",
            "<org.javacc.parser.JavaCCGlobals: int ccol> = 1",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__printTokenOnly__129998305\\1103.smt2",
        "z3": {
            "memory": 32137216,
            "run_time": 0.09070944786071777,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2883:\r\n  ;;   var2883!val!0 var2883!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2883!val!0 () var2883)\r\n  (declare-fun var2883!val!1 () var2883)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2883)) (or (= x var2883!val!0) (= x var2883!val!1)))\r\n  ;; -----------\r\n  (define-fun var2935 () var2883\r\n    var2883!val!0)\r\n  (define-fun var3749 () Int\r\n    (- (str.len (image/197050796 var2935)) 1))\r\n  (define-fun var2874 () String\r\n    (image/197050796 var2935))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3849 () Int\r\n    (endLine/197050796 var2935))\r\n  (define-fun var3794 () String\r\n    (str.++ var3862!1 \"\"))\r\n  (define-fun null-var2883 () var2883\r\n    var2883!val!1)\r\n  (define-fun var3903 () Int\r\n    var1503-cline)\r\n  (define-fun var2478 () Int\r\n    var1503-cline)\r\n  (define-fun var2237 () String\r\n    \"\")\r\n  (define-fun var405 () Int\r\n    (+ var1503-cline 1))\r\n  (define-fun var1033 () Int\r\n    (+ (endColumn/197050796 var2935) 1))\r\n  (define-fun var3559 () Int\r\n    (endLine/197050796 var2935))\r\n  (define-fun var336 () String\r\n    (image/197050796 var2935))\r\n  (define-fun var253 () Int\r\n    1)\r\n  (define-fun var1952 () String\r\n    (image/197050796 var2935))\r\n  (define-fun var2563 () String\r\n    (var1503_addUnicodeEscapes/1686793564 (image/197050796 var2935)))\r\n  (define-fun var988 () Int\r\n    (beginColumn/197050796 var2935))\r\n  (define-fun var3650 () Int\r\n    (kind/197050796 var2935))\r\n  (define-fun var1372 () Int\r\n    (+ var1503-cline 1))\r\n  (define-fun var3253 () Int\r\n    (let ((a!1 (str.at (image/197050796 var2935)\r\n                   (- (str.len (image/197050796 var2935)) 1))))\r\n  (str.to_code a!1)))\r\n  (define-fun var1503-cline () Int\r\n    0)\r\n  (define-fun var1386 () Int\r\n    var1503-ccol)\r\n  (define-fun var2513 () Int\r\n    (endColumn/197050796 var2935))\r\n  (define-fun var3732 () Int\r\n    (beginLine/197050796 var2935))\r\n  (define-fun var573 () String\r\n    (str.++ var3862!1\r\n        \"\"\r\n        (var1503_addUnicodeEscapes/1686793564 (image/197050796 var2935))))\r\n  (define-fun var3862 () String\r\n    String-init)\r\n  (define-fun var843 () Int\r\n    (str.len (image/197050796 var2935)))\r\n  (define-fun var531 () Int\r\n    (let ((a!1 (str.at (image/197050796 var2935)\r\n                   (- (str.len (image/197050796 var2935)) 1))))\r\n  (str.to_code a!1)))\r\n  (define-fun var1503-ccol () Int\r\n    0)\r\n  (define-fun var18 () Int\r\n    (+ (endColumn/197050796 var2935) 1))\r\n  (define-fun var1324 () String\r\n    (str.++ var3862!1\r\n        \"\"\r\n        (var1503_addUnicodeEscapes/1686793564 (image/197050796 var2935))))\r\n  (define-fun var3794!1 () String\r\n    \"\")\r\n  (define-fun var3862!2 () String\r\n    \"\")\r\n  (define-fun var3862!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun kind/197050796 ((x!0 var2883)) Int\r\n    94)\r\n  (define-fun image/197050796 ((x!0 var2883)) String\r\n    \"\\u{a}\")\r\n  (define-fun beginColumn/197050796 ((x!0 var2883)) Int\r\n    0)\r\n  (define-fun beginLine/197050796 ((x!0 var2883)) Int\r\n    0)\r\n  (define-fun var1503_addUnicodeEscapes/1686793564 ((x!0 String)) String\r\n    \"\")\r\n  (define-fun endLine/197050796 ((x!0 var2883)) Int\r\n    0)\r\n  (define-fun endColumn/197050796 ((x!0 var2883)) Int\r\n    0)\r\n)\r\n(error \"line 83 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.03017258644104004,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2883 is 2\r\n; rep: (as @var2883_0 var2883)\r\n; rep: (as @var2883_1 var2883)\r\n; cardinality of var1503 is 1\r\n; rep: (as @var1503_0 var1503)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun beginLine/197050796 ((_arg_1 var2883)) Int 0)\r\n(define-fun beginColumn/197050796 ((_arg_1 var2883)) Int 0)\r\n(define-fun kind/197050796 ((_arg_1 var2883)) Int 94)\r\n(define-fun String-init () String \"\")\r\n(define-fun image/197050796 ((_arg_1 var2883)) String \"\\u{a}\")\r\n(define-fun var1503_addUnicodeEscapes/1686793564 ((BOUND_VARIABLE_1028 String)) String \"\")\r\n(define-fun endLine/197050796 ((BOUND_VARIABLE_1031 var2883)) Int 0)\r\n(define-fun endColumn/197050796 ((BOUND_VARIABLE_1034 var2883)) Int 0)\r\n(define-fun null-var2883 () var2883 (as @var2883_0 var2883))\r\n(define-fun var1503-cline () Int 0)\r\n(define-fun var1503-ccol () Int 0)\r\n(define-fun var2935 () var2883 (as @var2883_1 var2883))\r\n(define-fun var3862!1 () String \"\")\r\n(define-fun var3862!2 () String \"\")\r\n(define-fun var3794!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35966976,
            "run_time": 0.09121322631835938,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 82 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 83 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177745920,
            "run_time": 1.144636631011963,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_20_0, 10)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCGlobals__printTokenOnly__129998305\\1103.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n854ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.Token",
            "r18 = \"\"",
            "$i1 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i0 = r0.<org.javacc.parser.Token: int beginLine>",
            "if $i1 >= $i0 goto $i3 = <org.javacc.parser.JavaCCGlobals: int ccol>",
            "$i3 = <org.javacc.parser.JavaCCGlobals: int ccol>",
            "$i2 = r0.<org.javacc.parser.Token: int beginColumn>",
            "if $i3 >= $i2 goto $i4 = r0.<org.javacc.parser.Token: int kind>",
            "$i4 = r0.<org.javacc.parser.Token: int kind>",
            "if $i4 == 94 goto $r22 = new java.lang.StringBuilder",
            "$r22 = new java.lang.StringBuilder",
            "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18)",
            "$r2 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r3 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String addUnicodeEscapes(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "r19 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "goto [?= $i5 = r0.<org.javacc.parser.Token: int endLine>]",
            "$i5 = r0.<org.javacc.parser.Token: int endLine>",
            "<org.javacc.parser.JavaCCGlobals: int cline> = $i5",
            "$i6 = r0.<org.javacc.parser.Token: int endColumn>",
            "$i7 = $i6 + 1",
            "<org.javacc.parser.JavaCCGlobals: int ccol> = $i7",
            "$r7 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r6 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$i8 = virtualinvoke $r6.<java.lang.String: int length()>()",
            "$i9 = $i8 - 1",
            "$c13 = virtualinvoke $r7.<java.lang.String: char charAt(int)>($i9)",
            "$i18 = (int) $c13",
            "if $i18 == 10 goto $i10 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i10 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i11 = $i10 + 1",
            "<org.javacc.parser.JavaCCGlobals: int cline> = $i11",
            "<org.javacc.parser.JavaCCGlobals: int ccol> = 1",
            "return r19"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__add_escapes__462827422\\864.smt2",
        "z3": {
            "memory": 31776768,
            "run_time": 0.05945324897766113,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1615 () String\r\n    \"\")\r\n  (define-fun var3504 () Int\r\n    (str.len var896))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3666 () Int\r\n    0)\r\n  (define-fun var896 () String\r\n    \"\")\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.04768824577331543,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3430 is 1\r\n; rep: (as @var3430_0 var3430)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var896 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36425728,
            "run_time": 0.12470126152038574,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3504 () Int\n    (str.len var896))\n  (define-fun var3666 () Int\n    0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var896 () String\n    \"\")\n  (define-fun var1615 () String\n    \"\")\n)\n(error \"line 22 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 143781888,
            "run_time": 1.0381462574005127,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var896 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r38 = \"\"",
            "i5 = 0",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i5 >= $i0 goto return r38",
            "return r38"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Expansion__getSimpleName__675546153\\629.smt2",
        "z3": {
            "memory": 32153600,
            "run_time": 0.12159609794616699,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var249:\r\n  ;;   var249!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var249!val!0 () var249)\r\n  ;; cardinality constraint:\r\n  (forall ((x var249)) (= x var249!val!0))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  ;; universe for var3169:\r\n  ;;   var3169!val!0 var3169!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3169!val!0 () var3169)\r\n  (declare-fun var3169!val!1 () var3169)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3169)) (or (= x var3169!val!0) (= x var3169!val!1)))\r\n  ;; -----------\r\n  (define-fun var726 () String\r\n    (getName/-1958580599\r\n  (getClass/1258963082 (cast-from-var3169-to-var249 var1509))))\r\n  (define-fun var3011 () Int\r\n    (let ((a!1 (lastIndexOf/-618837785\r\n             (getName/-1958580599\r\n               (getClass/1258963082 (cast-from-var3169-to-var249 var1509)))\r\n             \".\")))\r\n  (+ a!1 1)))\r\n  (define-fun var413 () ClassObject\r\n    (getClass/1258963082 (cast-from-var3169-to-var249 var1509)))\r\n  (define-fun null-var3169 () var3169\r\n    var3169!val!1)\r\n  (define-fun var604 () String\r\n    (let ((a!1 (lastIndexOf/-618837785\r\n             (getName/-1958580599\r\n               (getClass/1258963082 (cast-from-var3169-to-var249 var1509)))\r\n             \".\"))\r\n      (a!2 (str.len (getName/-1958580599\r\n                      (getClass/1258963082\r\n                        (cast-from-var3169-to-var249 var1509))))))\r\n  (str.substr (getName/-1958580599\r\n                (getClass/1258963082 (cast-from-var3169-to-var249 var1509)))\r\n              (+ a!1 1)\r\n              (- a!2 (+ a!1 1)))))\r\n  (define-fun var422 () Int\r\n    (lastIndexOf/-618837785\r\n  (getName/-1958580599\r\n    (getClass/1258963082 (cast-from-var3169-to-var249 var1509)))\r\n  \".\"))\r\n  (define-fun var1509 () var3169\r\n    var3169!val!0)\r\n  (define-fun cast-from-var3169-to-var249 ((x!0 var3169)) var249\r\n    var249!val!0)\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int\r\n    (- 1))\r\n  (define-fun getClass/1258963082 ((x!0 var249)) ClassObject\r\n    ClassObject!val!0)\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10809344,
            "run_time": 0.030199289321899414,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3169 is 2\r\n; rep: (as @var3169_0 var3169)\r\n; rep: (as @var3169_1 var3169)\r\n; cardinality of var249 is 1\r\n; rep: (as @var249_0 var249)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getClass/1258963082 ((_arg_1 var249)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var3169-to-var249 ((_arg_1 var3169)) var249 (as @var249_0 var249))\r\n(define-fun getName/-1958580599 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun lastIndexOf/-618837785 ((_arg_1 String) (_arg_2 String)) Int (- 1))\r\n(define-fun null-var3169 () var3169 (as @var3169_0 var3169))\r\n(define-fun var1509 () var3169 (as @var3169_1 var3169))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35196928,
            "run_time": 0.12164640426635742,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 28 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155045888,
            "run_time": 1.0253081321716309,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3169/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.Expansion__getSimpleName__675546153\\629.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n\r\n709ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int lastIndexOf(java.lang.String)>",
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: int lastIndexOf(java.lang.String)>": 1,
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.Expansion",
            "$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>()",
            "$i0 = virtualinvoke r2.<java.lang.String: int lastIndexOf(java.lang.String)>(\".\")",
            "$i1 = $i0 + 1",
            "$r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__printTokenOnly__-838714678\\973.smt2",
        "z3": {
            "memory": 32354304,
            "run_time": 0.07319211959838867,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3787:\r\n  ;;   var3787!val!1 var3787!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3787!val!1 () var3787)\r\n  (declare-fun var3787!val!0 () var3787)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3787)) (or (= x var3787!val!1) (= x var3787!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2340:\r\n  ;;   var2340!val!0 var2340!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2340!val!0 () var2340)\r\n  (declare-fun var2340!val!1 () var2340)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2340)) (or (= x var2340!val!0) (= x var2340!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var3787 () var3787\r\n    var3787!val!1)\r\n  (define-fun var604 () Int\r\n    (endLine/197050796 var2821))\r\n  (define-fun var282 () Int\r\n    (beginLine/197050796 var2821))\r\n  (define-fun var2707 () Int\r\n    (endColumn/197050796 var2821))\r\n  (define-fun var3233 () Int\r\n    var1960-ccol)\r\n  (define-fun var2467 () Int\r\n    (+ var1960-cline 1))\r\n  (define-fun var3013 () Int\r\n    (str.len (image/197050796 var2821)))\r\n  (define-fun var7 () Int\r\n    (endLine/197050796 var2821))\r\n  (define-fun var2231 () Int\r\n    1)\r\n  (define-fun var596 () String\r\n    (image/197050796 var2821))\r\n  (define-fun var2572 () Int\r\n    (beginColumn/197050796 var2821))\r\n  (define-fun var2821 () var3787\r\n    var3787!val!0)\r\n  (define-fun var1051 () var2340\r\n    var2340!val!0)\r\n  (define-fun var3195 () Int\r\n    (kind/197050796 var2821))\r\n  (define-fun var1960-cline () Int\r\n    0)\r\n  (define-fun null-var2340 () var2340\r\n    var2340!val!1)\r\n  (define-fun var3868 () Int\r\n    (let ((a!1 (str.at (image/197050796 var2821)\r\n                   (- (str.len (image/197050796 var2821)) 1))))\r\n  (str.to_code a!1)))\r\n  (define-fun var1023 () Int\r\n    (+ var1960-cline 1))\r\n  (define-fun var3739 () String\r\n    (var1960_addUnicodeEscapes/1686793564 (image/197050796 var2821)))\r\n  (define-fun var3687 () Int\r\n    var1960-cline)\r\n  (define-fun var539 () Int\r\n    (+ (endColumn/197050796 var2821) 1))\r\n  (define-fun var1186 () Int\r\n    (+ (endColumn/197050796 var2821) 1))\r\n  (define-fun var1960-ccol () Int\r\n    0)\r\n  (define-fun var1778 () String\r\n    (image/197050796 var2821))\r\n  (define-fun var3975 () Int\r\n    var1960-cline)\r\n  (define-fun var3314 () Int\r\n    (- (str.len (image/197050796 var2821)) 1))\r\n  (define-fun var1630 () Int\r\n    (let ((a!1 (str.at (image/197050796 var2821)\r\n                   (- (str.len (image/197050796 var2821)) 1))))\r\n  (str.to_code a!1)))\r\n  (define-fun var1627 () String\r\n    (image/197050796 var2821))\r\n  (define-fun var3739!1 () String\r\n    \"\")\r\n  (define-fun var1051!1 () var2340\r\n    var2340!val!0)\r\n  (define-fun kind/197050796 ((x!0 var3787)) Int\r\n    94)\r\n  (define-fun image/197050796 ((x!0 var3787)) String\r\n    \"\\u{a}\")\r\n  (define-fun beginColumn/197050796 ((x!0 var3787)) Int\r\n    0)\r\n  (define-fun beginLine/197050796 ((x!0 var3787)) Int\r\n    0)\r\n  (define-fun endLine/197050796 ((x!0 var3787)) Int\r\n    0)\r\n  (define-fun print/-2007916749 ((x!0 var2340) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun var1960_addUnicodeEscapes/1686793564 ((x!0 String)) String\r\n    \"\")\r\n  (define-fun endColumn/197050796 ((x!0 var3787)) Int\r\n    0)\r\n)\r\n(error \"line 73 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.031569480895996094,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3787 is 2\r\n; rep: (as @var3787_0 var3787)\r\n; rep: (as @var3787_1 var3787)\r\n; cardinality of var2340 is 2\r\n; rep: (as @var2340_0 var2340)\r\n; rep: (as @var2340_1 var2340)\r\n; cardinality of var1960 is 1\r\n; rep: (as @var1960_0 var1960)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun beginLine/197050796 ((_arg_1 var3787)) Int 0)\r\n(define-fun beginColumn/197050796 ((_arg_1 var3787)) Int 0)\r\n(define-fun kind/197050796 ((_arg_1 var3787)) Int 94)\r\n(define-fun image/197050796 ((_arg_1 var3787)) String \"\\u{a}\")\r\n(define-fun var1960_addUnicodeEscapes/1686793564 ((BOUND_VARIABLE_953 String)) String \"\")\r\n(define-fun print/-2007916749 ((BOUND_VARIABLE_956 var2340) (BOUND_VARIABLE_957 String)) void (as @void_0 void))\r\n(define-fun endLine/197050796 ((BOUND_VARIABLE_960 var3787)) Int 0)\r\n(define-fun endColumn/197050796 ((BOUND_VARIABLE_963 var3787)) Int 0)\r\n(define-fun null-var3787 () var3787 (as @var3787_0 var3787))\r\n(define-fun null-var2340 () var2340 (as @var2340_0 var2340))\r\n(define-fun var1960-cline () Int 0)\r\n(define-fun var1960-ccol () Int 0)\r\n(define-fun var2821 () var3787 (as @var3787_1 var3787))\r\n(define-fun var1051 () var2340 (as @var2340_1 var2340))\r\n(define-fun var1051!1 () var2340 (as @var2340_0 var2340))\r\n(define-fun var3739!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34459648,
            "run_time": 0.07951045036315918,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 72 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 73 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155013120,
            "run_time": 1.0125012397766113,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_22_0, 10)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCGlobals__printTokenOnly__-838714678\\973.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n725ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.Token",
            "r1 := @parameter1: java.io.PrintWriter",
            "$i1 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i0 = r0.<org.javacc.parser.Token: int beginLine>",
            "if $i1 >= $i0 goto $i3 = <org.javacc.parser.JavaCCGlobals: int ccol>",
            "$i3 = <org.javacc.parser.JavaCCGlobals: int ccol>",
            "$i2 = r0.<org.javacc.parser.Token: int beginColumn>",
            "if $i3 >= $i2 goto $i4 = r0.<org.javacc.parser.Token: int kind>",
            "$i4 = r0.<org.javacc.parser.Token: int kind>",
            "if $i4 == 94 goto $r2 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r2 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r3 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String addUnicodeEscapes(java.lang.String)>($r2)",
            "virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r3)",
            "goto [?= $i5 = r0.<org.javacc.parser.Token: int endLine>]",
            "$i5 = r0.<org.javacc.parser.Token: int endLine>",
            "<org.javacc.parser.JavaCCGlobals: int cline> = $i5",
            "$i6 = r0.<org.javacc.parser.Token: int endColumn>",
            "$i7 = $i6 + 1",
            "<org.javacc.parser.JavaCCGlobals: int ccol> = $i7",
            "$r5 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r4 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$i8 = virtualinvoke $r4.<java.lang.String: int length()>()",
            "$i9 = $i8 - 1",
            "$c13 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($i9)",
            "$i18 = (int) $c13",
            "if $i18 == 10 goto $i10 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i10 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i11 = $i10 + 1",
            "<org.javacc.parser.JavaCCGlobals: int cline> = $i11",
            "<org.javacc.parser.JavaCCGlobals: int ccol> = 1",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__printToken__-1677918443\\1117.smt2",
        "z3": {
            "memory": 32038912,
            "run_time": 0.07409787178039551,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1130:\r\n  ;;   var1130!val!0 var1130!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1130!val!0 () var1130)\r\n  (declare-fun var1130!val!1 () var1130)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1130)) (or (= x var1130!val!0) (= x var1130!val!1)))\r\n  ;; -----------\r\n  (define-fun var1798 () String\r\n    (str.++ var439!1 \"\"))\r\n  (define-fun var3363 () String\r\n    (str.++ var439!1 \"\" (var850_printTokenOnly/129998305 var318)))\r\n  (define-fun var318 () var1130\r\n    var1130!val!0)\r\n  (define-fun var2079 () String\r\n    \"\")\r\n  (define-fun var439 () String\r\n    String-init)\r\n  (define-fun var2123 () var1130\r\n    (specialToken/197050796 var318))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var810 () String\r\n    (str.++ var439!1 \"\" (var850_printTokenOnly/129998305 var318)))\r\n  (define-fun var341 () String\r\n    (var850_printTokenOnly/129998305 var318))\r\n  (define-fun null-var1130 () var1130\r\n    var1130!val!1)\r\n  (define-fun var1798!1 () String\r\n    \"\")\r\n  (define-fun var439!1 () String\r\n    \"\")\r\n  (define-fun var439!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun specialToken/197050796 ((x!0 var1130)) var1130\r\n    var1130!val!1)\r\n  (define-fun var850_printTokenOnly/129998305 ((x!0 var1130)) String\r\n    \"\")\r\n)\r\n(error \"line 41 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015605449676513672,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1130 is 2\r\n; rep: (as @var1130_0 var1130)\r\n; rep: (as @var1130_1 var1130)\r\n; cardinality of var850 is 1\r\n; rep: (as @var850_0 var850)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun specialToken/197050796 ((_arg_1 var1130)) var1130 (as @var1130_1 var1130))\r\n(define-fun String-init () String \"\")\r\n(define-fun var850_printTokenOnly/129998305 ((BOUND_VARIABLE_525 var1130)) String \"\")\r\n(define-fun null-var1130 () var1130 (as @var1130_1 var1130))\r\n(define-fun var318 () var1130 (as @var1130_0 var1130))\r\n(define-fun var439!1 () String \"\")\r\n(define-fun var439!2 () String \"\")\r\n(define-fun var1798!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35987456,
            "run_time": 0.09396171569824219,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1130:\n  ;;   var1130!val!0 var1130!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1130!val!0 () var1130)\n  (declare-fun var1130!val!1 () var1130)\n  ;; cardinality constraint:\n  (forall ((x var1130)) (or (= x var1130!val!0) (= x var1130!val!1)))\n  ;; -----------\n  (define-fun var2079 () String\n    \"\")\n  (define-fun var439 () String\n    String-init)\n  (define-fun var318 () var1130\n    var1130!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var810 () String\n    (str.++ var439!1 \"\" (var850_printTokenOnly/129998305 var318)))\n  (define-fun var341 () String\n    (var850_printTokenOnly/129998305 var318))\n  (define-fun var2123 () var1130\n    (specialToken/197050796 var318))\n  (define-fun var1798 () String\n    (str.++ var439!1 \"\"))\n  (define-fun var3363 () String\n    (str.++ var439!1 \"\" (var850_printTokenOnly/129998305 var318)))\n  (define-fun null-var1130 () var1130\n    var1130!val!1)\n  (define-fun var1798!1 () String\n    \"\")\n  (define-fun var439!1 () String\n    \"\")\n  (define-fun var439!2 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun specialToken/197050796 ((x!0 var1130)) var1130\n    var1130!val!1)\n  (define-fun var850_printTokenOnly/129998305 ((x!0 var1130)) String\n    \"\")\n)\n(error \"line 41 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 162918400,
            "run_time": 1.0888655185699463,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1798!1 () String \"\")\r\n  (define-fun var439!2 () String \"\")\r\n  (define-fun var439!1 () String \"\")\r\n  (define-fun var318 () var1130 var1130!4)\r\n  (define-fun null-var1130 () var1130 var1130!2)\r\n  (define-fun var1130!2 () var1130 (specialToken/197050796 var1130!4))\r\n  (define-fun var850_printTokenOnly/129998305 ((x!0 var1130)) String (ite (= x!0 var1130!4) \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.Token",
            "r11 = \"\"",
            "r12 = r0.<org.javacc.parser.Token: org.javacc.parser.Token specialToken>",
            "if r12 == null goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)",
            "$r2 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String printTokenOnly(org.javacc.parser.Token)>(r0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__bannerLine__595128218\\610.smt2",
        "z3": {
            "memory": 31318016,
            "run_time": 0.10637044906616211,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2064 () String\r\n    (str.++ var2573!1 \"Java Compiler Compiler Version \" var1981-versionNumber \" (\"))\r\n  (define-fun var1512 () String\r\n    \"\")\r\n  (define-fun var2065 () var937\r\n    var997-out)\r\n  (define-fun var1372 () String\r\n    (str.++ var2573!1 \"Java Compiler Compiler Version \"))\r\n  (define-fun var2720 () String\r\n    var1981-versionNumber)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var446 () String\r\n    (str.++ var2573!1\r\n        \"Java Compiler Compiler Version \"\r\n        var1981-versionNumber\r\n        \" (\"\r\n        var1512))\r\n  (define-fun var2471 () String\r\n    (str.++ var2573!1 \"Java Compiler Compiler Version \" var1981-versionNumber))\r\n  (define-fun var3047 () Bool\r\n    (= var2963 \"\"))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var560 () String\r\n    (str.++ var2573!1\r\n        \"Java Compiler Compiler Version \"\r\n        var1981-versionNumber\r\n        \" (\"\r\n        var1512))\r\n  (define-fun var1208 () var937\r\n    var997-out)\r\n  (define-fun var2573 () String\r\n    String-init)\r\n  (define-fun var1981-versionNumber () String\r\n    \"\")\r\n  (define-fun var2064!1 () String\r\n    \"Java Compiler Compiler Version  (\")\r\n  (define-fun var2471!1 () String\r\n    \"Java Compiler Compiler Version  (\")\r\n  (define-fun var1372!1 () String\r\n    \"Java Compiler Compiler Version \")\r\n  (define-fun var2963 () String\r\n    \"\")\r\n  (define-fun var2573!2 () String\r\n    \"Java Compiler Compiler Version \")\r\n  (define-fun var2573!1 () String\r\n    \"\")\r\n  (define-fun var997-out () var937\r\n    var937!val!0)\r\n  (define-fun var446!1 () String\r\n    \"\")\r\n  (define-fun var2065!1 () var937\r\n    var937!val!0)\r\n  (define-fun var1208!1 () var937\r\n    var937!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var500 () String\r\n    \"\")\r\n  (define-fun println/1773605060 ((x!0 var937) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun print/-1969040762 ((x!0 var937) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 67 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1695744,
            "run_time": 0.04581403732299805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var728 is 1\r\n; rep: (as @var728_0 var728)\r\n; cardinality of var937 is 1\r\n; rep: (as @var937_0 var937)\r\n; cardinality of var997 is 1\r\n; rep: (as @var997_0 var997)\r\n; cardinality of var1981 is 1\r\n; rep: (as @var1981_0 var1981)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun print/-1969040762 ((BOUND_VARIABLE_724 var937) (BOUND_VARIABLE_725 String)) void (as @void_0 void))\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_728 var937) (BOUND_VARIABLE_729 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var997-out () var937 (as @var937_0 var937))\r\n(define-fun var1981-versionNumber () String \"\")\r\n(define-fun var1512 () String \"\")\r\n(define-fun var2963 () String \"\")\r\n(define-fun var2573!1 () String \"\")\r\n(define-fun var2573!2 () String \"Java Compiler Compiler Version \")\r\n(define-fun var1372!1 () String \"Java Compiler Compiler Version \")\r\n(define-fun var2471!1 () String \"Java Compiler Compiler Version  (\")\r\n(define-fun var2064!1 () String \"Java Compiler Compiler Version  (\")\r\n(define-fun var1208!1 () var937 (as @var937_0 var937))\r\n(define-fun var446!1 () String \"\")\r\n(define-fun var2065!1 () var937 (as @var937_0 var937))\r\n(define-fun var500 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36831232,
            "run_time": 0.12497615814208984,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2573!1 () String\n    \"\")\n  (define-fun var2573!2 () String\n    \"Java Compiler Compiler Version \")\n  (define-fun var2963 () String\n    \"\")\n  (define-fun var1372!1 () String\n    \"Java Compiler Compiler Version \")\n  (define-fun var2720 () String\n    var1981-versionNumber)\n  (define-fun var2471!1 () String\n    \"Java Compiler Compiler Version  (\")\n  (define-fun var2064!1 () String\n    \"Java Compiler Compiler Version  (\\u{0}\\u{0}\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var446 () String\n    (str.++ var2573!1\n        \"Java Compiler Compiler Version \"\n        var1981-versionNumber\n        \" (\"\n        var1512))\n  (define-fun var1512 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2471 () String\n    (str.++ var2573!1 \"Java Compiler Compiler Version \" var1981-versionNumber))\n  (define-fun var2064 () String\n    (str.++ var2573!1 \"Java Compiler Compiler Version \" var1981-versionNumber \" (\"))\n  (define-fun var1208 () var937\n    var997-out)\n  (define-fun var1981-versionNumber () String\n    \"\")\n  (define-fun var3047 () Bool\n    (= var2963 \"\"))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var560 () String\n    (str.++ var2573!1\n        \"Java Compiler Compiler Version \"\n        var1981-versionNumber\n        \" (\"\n        var1512))\n  (define-fun var2573 () String\n    String-init)\n  (define-fun var1372 () String\n    (str.++ var2573!1 \"Java Compiler Compiler Version \"))\n  (define-fun var2065 () var937\n    var997-out)\n  (define-fun var997-out () var937\n    var937!val!0)\n  (define-fun var446!1 () String\n    \"\")\n  (define-fun var2065!1 () var937\n    var937!val!0)\n  (define-fun var1208!1 () var937\n    var937!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var500 () String\n    \"\")\n  (define-fun println/1773605060 ((x!0 var937) (x!1 String)) void\n    void!val!0)\n  (define-fun print/-1969040762 ((x!0 var937) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 67 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 201244672,
            "run_time": 1.3643217086791992,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2064!1 () String \"Java Compiler Compiler Version  (\")\r\n  (define-fun var2471!1 () String \"Java Compiler Compiler Version  (\")\r\n  (define-fun var1372!1 () String \"Java Compiler Compiler Version \")\r\n  (define-fun var2573!2 () String \"Java Compiler Compiler Version \")\r\n  (define-fun var2573!1 () String \"\")\r\n  (define-fun var2963 () String \"\")\r\n  (define-fun var1512 () String \"\")\r\n  (define-fun var1981-versionNumber () String \"\")\r\n  (define-fun null-String () String \" \")\r\n  (define-fun abbrev_109 ((x!0 Int)) String (ite (= x!0 0) \"Java Compiler Compiler Version \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r5 := @parameter0: java.lang.String",
            "r9 := @parameter1: java.lang.String",
            "$r1 = <java.lang.System: java.io.PrintStream out>",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Java Compiler Compiler Version \")",
            "$r2 = <org.javacc.Version: java.lang.String versionNumber>",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r1.<java.io.PrintStream: void print(java.lang.String)>($r8)",
            "$z0 = virtualinvoke r9.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 != 0 goto $r10 = <java.lang.System: java.io.PrintStream out>",
            "$r10 = <java.lang.System: java.io.PrintStream out>",
            "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>(\")\")",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__printTokenOnly__129998305\\1075-deviant-0.smt2",
        "z3": {
            "memory": 27234304,
            "run_time": 0.07407236099243164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1220:\r\n  ;;   var1220!val!0 var1220!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1220!val!0 () var1220)\r\n  (declare-fun var1220!val!1 () var1220)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1220)) (or (= x var1220!val!0) (= x var1220!val!1)))\r\n  ;; -----------\r\n  (define-fun var744 () Int\r\n    var2753-cline)\r\n  (define-fun var2116 () Int\r\n    (+ (endColumn/197050796 var3940) 1))\r\n  (define-fun var1109 () String\r\n    (image/197050796 var3940))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2481 () Int\r\n    (endColumn/197050796 var3940))\r\n  (define-fun var408 () Int\r\n    (+ (endColumn/197050796 var3940) 1))\r\n  (define-fun var986 () Int\r\n    (- (str.len (image/197050796 var3940)) 1))\r\n  (define-fun var2879 () Int\r\n    (beginColumn/197050796 var3940))\r\n  (define-fun var1843 () Int\r\n    (kind/197050796 var3940))\r\n  (define-fun null-var1220 () var1220\r\n    var1220!val!1)\r\n  (define-fun var3625 () String\r\n    String-init)\r\n  (define-fun var2155 () String\r\n    (var2753_addUnicodeEscapes/1686793564 (image/197050796 var3940)))\r\n  (define-fun var3011 () Int\r\n    (endLine/197050796 var3940))\r\n  (define-fun var3996 () Int\r\n    (beginLine/197050796 var3940))\r\n  (define-fun var2520 () String\r\n    (image/197050796 var3940))\r\n  (define-fun var3226 () String\r\n    (image/197050796 var3940))\r\n  (define-fun var1689 () String\r\n    \"\")\r\n  (define-fun var1164 () String\r\n    (str.++ var3625!1\r\n        \"\"\r\n        (var2753_addUnicodeEscapes/1686793564 (image/197050796 var3940))))\r\n  (define-fun var3769 () Int\r\n    var2753-ccol)\r\n  (define-fun var2753-cline () Int\r\n    0)\r\n  (define-fun var3940 () var1220\r\n    var1220!val!0)\r\n  (define-fun var2957 () String\r\n    (str.++ var3625!1\r\n        \"\"\r\n        (var2753_addUnicodeEscapes/1686793564 (image/197050796 var3940))))\r\n  (define-fun var2753-ccol () Int\r\n    0)\r\n  (define-fun var3906 () Int\r\n    (endLine/197050796 var3940))\r\n  (define-fun var3564 () String\r\n    (str.++ var3625!1 \"\"))\r\n  (define-fun var2958 () Int\r\n    (str.len (image/197050796 var3940)))\r\n  (define-fun var3625!1 () String\r\n    \"\")\r\n  (define-fun var3564!1 () String\r\n    \"\")\r\n  (define-fun var3625!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun kind/197050796 ((x!0 var1220)) Int\r\n    94)\r\n  (define-fun image/197050796 ((x!0 var1220)) String\r\n    \"\")\r\n  (define-fun beginColumn/197050796 ((x!0 var1220)) Int\r\n    0)\r\n  (define-fun beginLine/197050796 ((x!0 var1220)) Int\r\n    0)\r\n  (define-fun var2753_addUnicodeEscapes/1686793564 ((x!0 String)) String\r\n    \"\")\r\n  (define-fun endLine/197050796 ((x!0 var1220)) Int\r\n    0)\r\n  (define-fun endColumn/197050796 ((x!0 var1220)) Int\r\n    0)\r\n)\r\n(error \"line 73 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1695744,
            "run_time": 0.0462193489074707,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1220 is 2\r\n; rep: (as @var1220_0 var1220)\r\n; rep: (as @var1220_1 var1220)\r\n; cardinality of var2753 is 1\r\n; rep: (as @var2753_0 var2753)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun beginLine/197050796 ((_arg_1 var1220)) Int 0)\r\n(define-fun beginColumn/197050796 ((_arg_1 var1220)) Int 0)\r\n(define-fun kind/197050796 ((_arg_1 var1220)) Int 94)\r\n(define-fun String-init () String \"\")\r\n(define-fun image/197050796 ((_arg_1 var1220)) String \"\")\r\n(define-fun var2753_addUnicodeEscapes/1686793564 ((BOUND_VARIABLE_732 String)) String \"\")\r\n(define-fun endLine/197050796 ((BOUND_VARIABLE_735 var1220)) Int 0)\r\n(define-fun endColumn/197050796 ((BOUND_VARIABLE_738 var1220)) Int 0)\r\n(define-fun null-var1220 () var1220 (as @var1220_0 var1220))\r\n(define-fun var2753-cline () Int 0)\r\n(define-fun var2753-ccol () Int 0)\r\n(define-fun var3940 () var1220 (as @var1220_1 var1220))\r\n(define-fun var3625!1 () String \"\")\r\n(define-fun var3625!2 () String \"\")\r\n(define-fun var3564!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36532224,
            "run_time": 0.09391236305236816,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 72 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 73 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180084736,
            "run_time": 1.113157033920288,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3564!1 () String \"\")\r\n  (define-fun var3625!2 () String \"\")\r\n  (define-fun var3625!1 () String \"\")\r\n  (define-fun var3940 () var1220 var1220!192)\r\n  (define-fun var2753-ccol () Int 102)\r\n  (define-fun var2753-cline () Int 103)\r\n  (define-fun null-var1220 () var1220 var1220!190)\r\n  (define-fun var2753_addUnicodeEscapes/1686793564 ((x!0 String)) String (ite (= x!0 \"\") \"\" \"\"))\r\n  (define-fun image/197050796 ((x!0 var1220)) String (ite (= x!0 var1220!192) \"\" \"\"))\r\n  (define-fun kind/197050796 ((x!0 var1220)) Int (ite (= x!0 var1220!192) 94 0))\r\n  (define-fun beginColumn/197050796 ((x!0 var1220)) Int (ite (= x!0 var1220!192) 102 0))\r\n  (define-fun beginLine/197050796 ((x!0 var1220)) Int (ite (= x!0 var1220!192) 103 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.Token",
            "r18 = \"\"",
            "$i1 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i0 = r0.<org.javacc.parser.Token: int beginLine>",
            "if $i1 >= $i0 goto $i3 = <org.javacc.parser.JavaCCGlobals: int ccol>",
            "$i3 = <org.javacc.parser.JavaCCGlobals: int ccol>",
            "$i2 = r0.<org.javacc.parser.Token: int beginColumn>",
            "if $i3 >= $i2 goto $i4 = r0.<org.javacc.parser.Token: int kind>",
            "$i4 = r0.<org.javacc.parser.Token: int kind>",
            "if $i4 == 94 goto $r22 = new java.lang.StringBuilder",
            "$r22 = new java.lang.StringBuilder",
            "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18)",
            "$r2 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r3 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String addUnicodeEscapes(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "r19 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "goto [?= $i5 = r0.<org.javacc.parser.Token: int endLine>]",
            "$i5 = r0.<org.javacc.parser.Token: int endLine>",
            "<org.javacc.parser.JavaCCGlobals: int cline> = $i5",
            "$i6 = r0.<org.javacc.parser.Token: int endColumn>",
            "$i7 = $i6 + 1",
            "<org.javacc.parser.JavaCCGlobals: int ccol> = $i7",
            "$r7 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r6 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$i8 = virtualinvoke $r6.<java.lang.String: int length()>()",
            "$i9 = $i8 - 1",
            "$c13 = virtualinvoke $r7.<java.lang.String: char charAt(int)>($i9)",
            "$i18 = (int) $c13",
            "if $i18 == 10 goto $i10 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i19 = (int) $c13",
            "if $i19 != 13 goto return r19",
            "return r19"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParserInternals__character_descriptor_assign__1901565546\\1034.smt2",
        "z3": {
            "memory": 31875072,
            "run_time": 0.05925250053405762,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1315:\r\n  ;;   var1315!val!1 var1315!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1315!val!1 () var1315)\r\n  (declare-fun var1315!val!0 () var1315)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1315)) (or (= x var1315!val!1) (= x var1315!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var1315 () var1315\r\n    var1315!val!1)\r\n  (define-fun var862 () Int\r\n    (str.len var924))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3203 () var1315\r\n    var1315!val!0)\r\n  (define-fun var924 () String\r\n    \"\")\r\n  (define-fun var3888 () String\r\n    \"\")\r\n  (define-fun var3906 () String\r\n    \"\")\r\n  (define-fun var3203!1 () var1315\r\n    var1315!val!1)\r\n  (define-fun var595_parse_error/-1175069001 ((x!0 var576) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var1315-to-var576 ((x!0 var1315)) var576\r\n    var576!val!0)\r\n)\r\n(error \"line 33 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.04681658744812012,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1315 is 2\r\n; rep: (as @var1315_0 var1315)\r\n; rep: (as @var1315_1 var1315)\r\n; cardinality of var3753 is 1\r\n; rep: (as @var3753_0 var3753)\r\n; cardinality of var595 is 1\r\n; rep: (as @var595_0 var595)\r\n; cardinality of var576 is 1\r\n; rep: (as @var576_0 var576)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var595_parse_error/-1175069001 ((BOUND_VARIABLE_561 var576) (BOUND_VARIABLE_562 String)) void (as @void_0 void))\r\n(define-fun cast-from-var1315-to-var576 ((BOUND_VARIABLE_565 var1315)) var576 (as @var576_0 var576))\r\n(define-fun null-var1315 () var1315 (as @var1315_0 var1315))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3203 () var1315 (as @var1315_1 var1315))\r\n(define-fun var924 () String \"\")\r\n(define-fun var3888 () String \"\")\r\n(define-fun var3203!1 () var1315 (as @var1315_0 var1315))\r\n(define-fun var3906 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36970496,
            "run_time": 0.12391877174377441,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1315:\n  ;;   var1315!val!1 var1315!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1315!val!1 () var1315)\n  (declare-fun var1315!val!0 () var1315)\n  ;; cardinality constraint:\n  (forall ((x var1315)) (or (= x var1315!val!1) (= x var1315!val!0)))\n  ;; -----------\n  (define-fun var862 () Int\n    (str.len var924))\n  (define-fun var3203 () var1315\n    var1315!val!0)\n  (define-fun null-var1315 () var1315\n    var1315!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var924 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var3888 () String\n    \"\\u{0}\")\n  (define-fun var3906 () String\n    \"\")\n  (define-fun var3203!1 () var1315\n    var1315!val!1)\n  (define-fun var595_parse_error/-1175069001 ((x!0 var576) (x!1 String)) void\n    void!val!0)\n  (define-fun cast-from-var1315-to-var576 ((x!0 var1315)) var576\n    var576!val!0)\n)\n(error \"line 33 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 159113216,
            "run_time": 0.9902479648590088,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3888 () String \"\")\r\n  (define-fun var924 () String \"\")\r\n  (define-fun var3203 () var1315 var1315!4)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var1315 () var1315 var1315!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: org.javacc.parser.Token",
            "r0 := @parameter1: java.lang.String",
            "r1 := @parameter2: java.lang.String",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if $i0 == 1 goto $c2 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0)",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void parse_error(java.lang.Object,java.lang.String)>(r2, \"String in character list may contain only one character.\")",
            "return 32"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__createOutputDir__1818737478\\791.smt2",
        "z3": {
            "memory": 30605312,
            "run_time": 0.05905270576477051,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1192:\r\n  ;;   var1192!val!0 var1192!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1192!val!0 () var1192)\r\n  (declare-fun var1192!val!1 () var1192)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1192)) (or (= x var1192!val!0) (= x var1192!val!1)))\r\n  ;; -----------\r\n  (define-fun var2668 () Bool\r\n    (exists/1072868559 var2))\r\n  (define-fun var1109 () String\r\n    (append/-1031950772\r\n  (str.++ var758!1 \"Output directory \"\"\")\r\n  (cast-from-var1192-to-var1482 var2)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2 () var1192\r\n    var1192!val!0)\r\n  (define-fun var451!1 () String\r\n    \"Cannot create the output directory : \")\r\n  (define-fun var3859 () String\r\n    (str.++ var758!1 \"Output directory \"\"\"))\r\n  (define-fun var199 () String\r\n    (append/-1031950772\r\n  (str.++ var295!1 \"Cannot create the output directory : \")\r\n  (cast-from-var1192-to-var1482 var2)))\r\n  (define-fun var69 () String\r\n    (append/-1031950772\r\n  (str.++ var295!1 \"Cannot create the output directory : \")\r\n  (cast-from-var1192-to-var1482 var2)))\r\n  (define-fun var580 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var758!1 \"Output directory \"\"\")\r\n          (cast-from-var1192-to-var1482 var2))\r\n        \"\"\" does not exist. Creating the directory.\"))\r\n  (define-fun var1316 () Bool\r\n    (mkdirs/-2114252793 var2))\r\n  (define-fun null-var1192 () var1192\r\n    var1192!val!1)\r\n  (define-fun var758 () String\r\n    String-init)\r\n  (define-fun var3859!1 () String\r\n    \"Output directory \"\"\")\r\n  (define-fun var451 () String\r\n    (str.++ var295!1 \"Cannot create the output directory : \"))\r\n  (define-fun var2365 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var758!1 \"Output directory \"\"\")\r\n          (cast-from-var1192-to-var1482 var2))\r\n        \"\"\" does not exist. Creating the directory.\"))\r\n  (define-fun var295 () String\r\n    String-init)\r\n  (define-fun var758!2 () String\r\n    \"Output directory \"\"\")\r\n  (define-fun var1109!1 () String\r\n    \"\"\" does not exist. Creating the directory.\")\r\n  (define-fun var295!2 () String\r\n    \"Cannot create the output directory : \")\r\n  (define-fun var758!1 () String\r\n    \"\")\r\n  (define-fun var295!1 () String\r\n    \"\")\r\n  (define-fun var2365!1 () String\r\n    \"\")\r\n  (define-fun var69!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun mkdirs/-2114252793 ((x!0 var1192)) Bool\r\n    false)\r\n  (define-fun exists/1072868559 ((x!0 var1192)) Bool\r\n    false)\r\n  (define-fun cast-from-var1192-to-var1482 ((x!0 var1192)) var1482\r\n    var1482!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1482)) String\r\n    \"\")\r\n  (define-fun var1676_warning/37978134 ((x!0 String)) void\r\n    void!val!0)\r\n  (define-fun var1676_semantic_error/-498493661 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 74 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12251136,
            "run_time": 0.030888080596923828,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1192 is 2\r\n; rep: (as @var1192_0 var1192)\r\n; rep: (as @var1192_1 var1192)\r\n; cardinality of var1482 is 1\r\n; rep: (as @var1482_0 var1482)\r\n; cardinality of var1676 is 1\r\n; rep: (as @var1676_0 var1676)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun exists/1072868559 ((_arg_1 var1192)) Bool false)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1417 String) (BOUND_VARIABLE_1418 var1482)) String \"\")\r\n(define-fun cast-from-var1192-to-var1482 ((BOUND_VARIABLE_1421 var1192)) var1482 (as @var1482_0 var1482))\r\n(define-fun var1676_warning/37978134 ((BOUND_VARIABLE_1424 String)) void (as @void_0 void))\r\n(define-fun mkdirs/-2114252793 ((_arg_1 var1192)) Bool false)\r\n(define-fun var1676_semantic_error/-498493661 ((BOUND_VARIABLE_1427 String)) void (as @void_0 void))\r\n(define-fun null-var1192 () var1192 (as @var1192_0 var1192))\r\n(define-fun var2 () var1192 (as @var1192_1 var1192))\r\n(define-fun var758!1 () String \"\")\r\n(define-fun var758!2 () String \"Output directory \"\"\")\r\n(define-fun var3859!1 () String \"Output directory \"\"\")\r\n(define-fun var1109!1 () String \"\"\" does not exist. Creating the directory.\")\r\n(define-fun var2365!1 () String \"\")\r\n(define-fun var295!1 () String \"\")\r\n(define-fun var295!2 () String \"Cannot create the output directory : \")\r\n(define-fun var451!1 () String \"Cannot create the output directory : \")\r\n(define-fun var69!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37412864,
            "run_time": 0.12442588806152344,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1192:\n  ;;   var1192!val!0 var1192!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1192!val!0 () var1192)\n  (declare-fun var1192!val!1 () var1192)\n  ;; cardinality constraint:\n  (forall ((x var1192)) (or (= x var1192!val!0) (= x var1192!val!1)))\n  ;; -----------\n  (define-fun var69 () String\n    (append/-1031950772\n  (str.++ var295!1 \"Cannot create the output directory : \")\n  (cast-from-var1192-to-var1482 var2)))\n  (define-fun var3859 () String\n    (str.++ var758!1 \"Output directory \"\"\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1109 () String\n    (append/-1031950772\n  (str.++ var758!1 \"Output directory \"\"\")\n  (cast-from-var1192-to-var1482 var2)))\n  (define-fun var2 () var1192\n    var1192!val!0)\n  (define-fun var1316 () Bool\n    (mkdirs/-2114252793 var2))\n  (define-fun var199 () String\n    (append/-1031950772\n  (str.++ var295!1 \"Cannot create the output directory : \")\n  (cast-from-var1192-to-var1482 var2)))\n  (define-fun var580 () String\n    (str.++ (append/-1031950772\n          (str.++ var758!1 \"Output directory \"\"\")\n          (cast-from-var1192-to-var1482 var2))\n        \"\"\" does not exist. Creating the directory.\"))\n  (define-fun var295!1 () String\n    \"\")\n  (define-fun var758 () String\n    String-init)\n  (define-fun var451!1 () String\n    \"Cannot create the output directory : \")\n  (define-fun null-var1192 () var1192\n    var1192!val!1)\n  (define-fun var758!1 () String\n    \"\")\n  (define-fun var451 () String\n    (str.++ var295!1 \"Cannot create the output directory : \"))\n  (define-fun var2365 () String\n    (str.++ (append/-1031950772\n          (str.++ var758!1 \"Output directory \"\"\")\n          (cast-from-var1192-to-var1482 var2))\n        \"\"\" does not exist. Creating the directory.\"))\n  (define-fun var2668 () Bool\n    (exists/1072868559 var2))\n  (define-fun var295 () String\n    String-init)\n  (define-fun var3859!1 () String\n    \"Output directory \"\"\")\n  (define-fun var758!2 () String\n    \"Output directory \"\"\")\n  (define-fun var1109!1 () String\n    \"\"\" does not exist. Creating the directory.\")\n  (define-fun var295!2 () String\n    \"Cannot create the output directory : \")\n  (define-fun var2365!1 () String\n    \"\")\n  (define-fun var69!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun mkdirs/-2114252793 ((x!0 var1192)) Bool\n    false)\n  (define-fun exists/1072868559 ((x!0 var1192)) Bool\n    false)\n  (define-fun cast-from-var1192-to-var1482 ((x!0 var1192)) var1482\n    var1482!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1482)) String\n    \"\")\n  (define-fun var1676_warning/37978134 ((x!0 String)) void\n    void!val!0)\n  (define-fun var1676_semantic_error/-498493661 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 74 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182910976,
            "run_time": 1.0543246269226074,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1192/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCGlobals__createOutputDir__1818737478\\791.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1109!1 =\r\n     concat(all_38_2, \"\\u{0}22 does not exist. Creating the directory.\")\r\n\r\n773ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r0 := @parameter0: java.io.File",
            "$z0 = virtualinvoke r0.<java.io.File: boolean exists()>()",
            "if $z0 != 0 goto $z1 = virtualinvoke r0.<java.io.File: boolean isDirectory()>()",
            "$r11 = new java.lang.StringBuilder",
            "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Output directory \\\"\")",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" does not exist. Creating the directory.\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void warning(java.lang.String)>($r15)",
            "$z3 = virtualinvoke r0.<java.io.File: boolean mkdirs()>()",
            "if $z3 != 0 goto $z1 = virtualinvoke r0.<java.io.File: boolean isDirectory()>()",
            "$r16 = new java.lang.StringBuilder",
            "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot create the output directory : \")",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void semantic_error(java.lang.String)>($r19)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParserInternals__character_descriptor_assign__1977105873\\1021-deviant-0.smt2",
        "z3": {
            "memory": 31264768,
            "run_time": 0.04462623596191406,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 23 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.016175270080566406,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35913728,
            "run_time": 0.0751953125,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 23 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140808192,
            "run_time": 0.7915811538696289,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: org.javacc.parser.Token",
            "r0 := @parameter1: java.lang.String",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if $i0 == 1 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "return $c1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__printTokenOnly__129998305\\1075.smt2",
        "z3": {
            "memory": 31801344,
            "run_time": 0.07439327239990234,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1220:\r\n  ;;   var1220!val!0 var1220!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1220!val!0 () var1220)\r\n  (declare-fun var1220!val!1 () var1220)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1220)) (or (= x var1220!val!0) (= x var1220!val!1)))\r\n  ;; -----------\r\n  (define-fun var744 () Int\r\n    var2753-cline)\r\n  (define-fun var768 () Int\r\n    (let ((a!1 (str.at (image/197050796 var3940)\r\n                   (- (str.len (image/197050796 var3940)) 1))))\r\n  (str.to_code a!1)))\r\n  (define-fun var2116 () Int\r\n    (+ (endColumn/197050796 var3940) 1))\r\n  (define-fun var1109 () String\r\n    (image/197050796 var3940))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2481 () Int\r\n    (endColumn/197050796 var3940))\r\n  (define-fun var408 () Int\r\n    (+ (endColumn/197050796 var3940) 1))\r\n  (define-fun var986 () Int\r\n    (- (str.len (image/197050796 var3940)) 1))\r\n  (define-fun var2879 () Int\r\n    (beginColumn/197050796 var3940))\r\n  (define-fun var1843 () Int\r\n    (kind/197050796 var3940))\r\n  (define-fun null-var1220 () var1220\r\n    var1220!val!1)\r\n  (define-fun var3625 () String\r\n    String-init)\r\n  (define-fun var2155 () String\r\n    (var2753_addUnicodeEscapes/1686793564 (image/197050796 var3940)))\r\n  (define-fun var3011 () Int\r\n    (endLine/197050796 var3940))\r\n  (define-fun var3996 () Int\r\n    (beginLine/197050796 var3940))\r\n  (define-fun var2520 () String\r\n    (image/197050796 var3940))\r\n  (define-fun var3226 () String\r\n    (image/197050796 var3940))\r\n  (define-fun var1689 () String\r\n    \"\")\r\n  (define-fun var1164 () String\r\n    (str.++ var3625!1\r\n        \"\"\r\n        (var2753_addUnicodeEscapes/1686793564 (image/197050796 var3940))))\r\n  (define-fun var3769 () Int\r\n    var2753-ccol)\r\n  (define-fun var2753-cline () Int\r\n    0)\r\n  (define-fun var750 () Int\r\n    (let ((a!1 (str.at (image/197050796 var3940)\r\n                   (- (str.len (image/197050796 var3940)) 1))))\r\n  (str.to_code a!1)))\r\n  (define-fun var3940 () var1220\r\n    var1220!val!0)\r\n  (define-fun var2957 () String\r\n    (str.++ var3625!1\r\n        \"\"\r\n        (var2753_addUnicodeEscapes/1686793564 (image/197050796 var3940))))\r\n  (define-fun var2753-ccol () Int\r\n    0)\r\n  (define-fun var3564 () String\r\n    (str.++ var3625!1 \"\"))\r\n  (define-fun var3906 () Int\r\n    (endLine/197050796 var3940))\r\n  (define-fun var2958 () Int\r\n    (str.len (image/197050796 var3940)))\r\n  (define-fun var3442 () Int\r\n    (let ((a!1 (str.at (image/197050796 var3940)\r\n                   (- (str.len (image/197050796 var3940)) 1))))\r\n  (str.to_code a!1)))\r\n  (define-fun var3625!1 () String\r\n    \"\")\r\n  (define-fun var3564!1 () String\r\n    \"\")\r\n  (define-fun var3625!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun kind/197050796 ((x!0 var1220)) Int\r\n    94)\r\n  (define-fun image/197050796 ((x!0 var1220)) String\r\n    \"\\u{2040}\")\r\n  (define-fun beginColumn/197050796 ((x!0 var1220)) Int\r\n    0)\r\n  (define-fun beginLine/197050796 ((x!0 var1220)) Int\r\n    0)\r\n  (define-fun var2753_addUnicodeEscapes/1686793564 ((x!0 String)) String\r\n    \"\")\r\n  (define-fun endLine/197050796 ((x!0 var1220)) Int\r\n    0)\r\n  (define-fun endColumn/197050796 ((x!0 var1220)) Int\r\n    0)\r\n)\r\n(error \"line 81 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.04770612716674805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1220 is 2\r\n; rep: (as @var1220_0 var1220)\r\n; rep: (as @var1220_1 var1220)\r\n; cardinality of var2753 is 1\r\n; rep: (as @var2753_0 var2753)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun beginLine/197050796 ((_arg_1 var1220)) Int 0)\r\n(define-fun beginColumn/197050796 ((_arg_1 var1220)) Int 0)\r\n(define-fun kind/197050796 ((_arg_1 var1220)) Int 94)\r\n(define-fun String-init () String \"\")\r\n(define-fun image/197050796 ((_arg_1 var1220)) String \"\\u{0}\")\r\n(define-fun var2753_addUnicodeEscapes/1686793564 ((BOUND_VARIABLE_1064 String)) String \"\")\r\n(define-fun endLine/197050796 ((BOUND_VARIABLE_1067 var1220)) Int 0)\r\n(define-fun endColumn/197050796 ((BOUND_VARIABLE_1070 var1220)) Int 0)\r\n(define-fun null-var1220 () var1220 (as @var1220_0 var1220))\r\n(define-fun var2753-cline () Int 0)\r\n(define-fun var2753-ccol () Int 0)\r\n(define-fun var3940 () var1220 (as @var1220_1 var1220))\r\n(define-fun var3625!1 () String \"\")\r\n(define-fun var3625!2 () String \"\")\r\n(define-fun var3564!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35213312,
            "run_time": 0.07684683799743652,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 80 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 81 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 178782208,
            "run_time": 1.0068726539611816,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_25_1, all_25_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCGlobals__printTokenOnly__129998305\\1075.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n726ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.Token",
            "r18 = \"\"",
            "$i1 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i0 = r0.<org.javacc.parser.Token: int beginLine>",
            "if $i1 >= $i0 goto $i3 = <org.javacc.parser.JavaCCGlobals: int ccol>",
            "$i3 = <org.javacc.parser.JavaCCGlobals: int ccol>",
            "$i2 = r0.<org.javacc.parser.Token: int beginColumn>",
            "if $i3 >= $i2 goto $i4 = r0.<org.javacc.parser.Token: int kind>",
            "$i4 = r0.<org.javacc.parser.Token: int kind>",
            "if $i4 == 94 goto $r22 = new java.lang.StringBuilder",
            "$r22 = new java.lang.StringBuilder",
            "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r18)",
            "$r2 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r3 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String addUnicodeEscapes(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "r19 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "goto [?= $i5 = r0.<org.javacc.parser.Token: int endLine>]",
            "$i5 = r0.<org.javacc.parser.Token: int endLine>",
            "<org.javacc.parser.JavaCCGlobals: int cline> = $i5",
            "$i6 = r0.<org.javacc.parser.Token: int endColumn>",
            "$i7 = $i6 + 1",
            "<org.javacc.parser.JavaCCGlobals: int ccol> = $i7",
            "$r7 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r6 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$i8 = virtualinvoke $r6.<java.lang.String: int length()>()",
            "$i9 = $i8 - 1",
            "$c13 = virtualinvoke $r7.<java.lang.String: char charAt(int)>($i9)",
            "$i18 = (int) $c13",
            "if $i18 == 10 goto $i10 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i19 = (int) $c13",
            "if $i19 != 13 goto return r19",
            "return r19"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParserInternals__character_descriptor_assign__1977105873\\1021.smt2",
        "z3": {
            "memory": 32251904,
            "run_time": 0.053824663162231445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2371:\r\n  ;;   var2371!val!0 var2371!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2371!val!0 () var2371)\r\n  (declare-fun var2371!val!1 () var2371)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2371)) (or (= x var2371!val!0) (= x var2371!val!1)))\r\n  ;; -----------\r\n  (define-fun var2957 () var2371\r\n    var2371!val!0)\r\n  (define-fun null-var2371 () var2371\r\n    var2371!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2251 () Int\r\n    (str.len var2677))\r\n  (define-fun var2677 () String\r\n    \"A\")\r\n  (define-fun var1314 () Int\r\n    (str.to_code (str.at var2677 0)))\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.016499757766723633,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2371 is 2\r\n; rep: (as @var2371_0 var2371)\r\n; rep: (as @var2371_1 var2371)\r\n; cardinality of var2657 is 1\r\n; rep: (as @var2657_0 var2657)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var2371 () var2371 (as @var2371_0 var2371))\r\n(define-fun null-String () String \"\")\r\n(define-fun var2957 () var2371 (as @var2371_1 var2371))\r\n(define-fun var2677 () String \"A\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36909056,
            "run_time": 0.07632303237915039,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2371:\n  ;;   var2371!val!0 var2371!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2371!val!0 () var2371)\n  (declare-fun var2371!val!1 () var2371)\n  ;; cardinality constraint:\n  (forall ((x var2371)) (or (= x var2371!val!0) (= x var2371!val!1)))\n  ;; -----------\n  (define-fun var2677 () String\n    \"\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1314 () Int\n    (str.to_code (str.at var2677 0)))\n  (define-fun null-var2371 () var2371\n    var2371!val!1)\n  (define-fun var2251 () Int\n    (str.len var2677))\n  (define-fun var2957 () var2371\n    var2371!val!0)\n)\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164831232,
            "run_time": 0.973609447479248,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2677 () String \"\\u{0}\")\r\n  (define-fun var2957 () var2371 var2371!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2371 () var2371 var2371!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: org.javacc.parser.Token",
            "r0 := @parameter1: java.lang.String",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if $i0 == 1 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "return $c1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParserTokenManager__SwitchTo__848150611\\2350.smt2",
        "z3": {
            "memory": 28532736,
            "run_time": 0.05484151840209961,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3882:\r\n  ;;   var3882!val!1 var3882!val!2 var3882!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3882!val!1 () var3882)\r\n  (declare-fun var3882!val!2 () var3882)\r\n  (declare-fun var3882!val!0 () var3882)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3882))\r\n          (or (= x var3882!val!1) (= x var3882!val!2) (= x var3882!val!0)))\r\n  ;; -----------\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun null-var3882 () var3882\r\n    var3882!val!1)\r\n  (define-fun var2452!1 () var3882\r\n    var3882!val!2)\r\n  (define-fun var2452 () var3882\r\n    var3882!val!0)\r\n  (define-fun var868 () Int\r\n    0)\r\n  (define-fun curLexState/1964309570 ((x!0 var3882)) Int\r\n    0)\r\n)\r\n(error \"line 25 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1744896,
            "run_time": 0.04643654823303223,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3882 is 3\r\n; rep: (as @var3882_0 var3882)\r\n; rep: (as @var3882_1 var3882)\r\n; rep: (as @var3882_2 var3882)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun curLexState/1964309570 ((_arg_1 var3882)) Int 0)\r\n(define-fun null-var3882 () var3882 (as @var3882_0 var3882))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2452 () var3882 (as @var3882_1 var3882))\r\n(define-fun var868 () Int 0)\r\n(define-fun var2452!1 () var3882 (as @var3882_2 var3882))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35164160,
            "run_time": 0.07734346389770508,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3882:\n  ;;   var3882!val!1 var3882!val!2 var3882!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3882!val!1 () var3882)\n  (declare-fun var3882!val!2 () var3882)\n  (declare-fun var3882!val!0 () var3882)\n  ;; cardinality constraint:\n  (forall ((x var3882))\n          (or (= x var3882!val!1) (= x var3882!val!2) (= x var3882!val!0)))\n  ;; -----------\n  (define-fun null-Int () Int\n    1)\n  (define-fun null-var3882 () var3882\n    var3882!val!1)\n  (define-fun var2452!1 () var3882\n    var3882!val!2)\n  (define-fun var2452 () var3882\n    var3882!val!0)\n  (define-fun var868 () Int\n    0)\n  (define-fun curLexState/1964309570 ((x!0 var3882)) Int\n    0)\n)\n(error \"line 25 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 127807488,
            "run_time": 0.7873740196228027,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2452!1 () var3882 var3882!6)\r\n  (define-fun var868 () Int 0)\r\n  (define-fun var2452 () var3882 var3882!4)\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-var3882 () var3882 var3882!2)\r\n  (define-fun curLexState/1964309570 ((x!0 var3882)) Int (ite (= x!0 var3882!6) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r6 := @this: org.javacc.parser.JavaCCParserTokenManager",
            "i0 := @parameter0: int",
            "if i0 >= 5 goto $r0 = new org.javacc.parser.TokenMgrError",
            "if i0 >= 0 goto r6.<org.javacc.parser.JavaCCParserTokenManager: int curLexState> = i0",
            "r6.<org.javacc.parser.JavaCCParserTokenManager: int curLexState> = i0",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParserTokenManager__MoreLexicalActions__1397648743\\2471.smt2",
        "z3": {
            "memory": 31227904,
            "run_time": 0.08282351493835449,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3084:\r\n  ;;   var3084!val!0 var3084!val!4 var3084!val!1 var3084!val!2 var3084!val!3 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3084!val!0 () var3084)\r\n  (declare-fun var3084!val!4 () var3084)\r\n  (declare-fun var3084!val!1 () var3084)\r\n  (declare-fun var3084!val!2 () var3084)\r\n  (declare-fun var3084!val!3 () var3084)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3084))\r\n          (or (= x var3084!val!0)\r\n              (= x var3084!val!4)\r\n              (= x var3084!val!1)\r\n              (= x var3084!val!2)\r\n              (= x var3084!val!3)))\r\n  ;; -----------\r\n  (define-fun var1348 () var769\r\n    (input_stream/1964309570 var2283!3))\r\n  (define-fun var3348 () Int\r\n    (jjimageLen/1964309570 var2283))\r\n  (define-fun null-var3084 () var3084\r\n    var3084!val!1)\r\n  (define-fun var2283!2 () var3084\r\n    var3084!val!3)\r\n  (define-fun var1418 () Int\r\n    (jjmatchedPos/1964309570 var2283))\r\n  (define-fun var2283 () var3084\r\n    var3084!val!0)\r\n  (define-fun var3782 () Int\r\n    (+ (jjmatchedPos/1964309570 var2283) 1))\r\n  (define-fun var3812 () Int\r\n    (jjmatchedKind/1964309570 var2283!2))\r\n  (define-fun var3372 () (Array Int Int)\r\n    (GetSuffix/-1031269374\r\n  (input_stream/1964309570 var2283!2)\r\n  (jjimageLen/1964309570 var2283!2)))\r\n  (define-fun var3033 () Int\r\n    (+ (jjimageLen/1964309570 var2283) (jjmatchedPos/1964309570 var2283) 1))\r\n  (define-fun var2636!1 () String\r\n    \"\")\r\n  (define-fun var2283!1 () var3084\r\n    var3084!val!2)\r\n  (define-fun var2283!3 () var3084\r\n    var3084!val!4)\r\n  (define-fun var2636 () String\r\n    (image/1964309570 var2283!2))\r\n  (define-fun var2588 () Int\r\n    (jjimageLen/1964309570 var2283!2))\r\n  (define-fun var468 () var769\r\n    (input_stream/1964309570 var2283!2))\r\n  (define-fun var1348!1 () var769\r\n    var769!val!0)\r\n  (define-fun var1886 () Int\r\n    0)\r\n  (define-fun jjimageLen/1964309570 ((x!0 var3084)) Int\r\n    (ite (= x!0 var3084!val!3) 1\r\n      0))\r\n  (define-fun image/1964309570 ((x!0 var3084)) String\r\n    \"\")\r\n  (define-fun lengthOfMatch/1964309570 ((x!0 var3084)) Int\r\n    1)\r\n  (define-fun jjmatchedPos/1964309570 ((x!0 var3084)) Int\r\n    0)\r\n  (define-fun jjmatchedKind/1964309570 ((x!0 var3084)) Int\r\n    21)\r\n  (define-fun backup/649253219 ((x!0 var769) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun input_stream/1964309570 ((x!0 var3084)) var769\r\n    var769!val!0)\r\n  (define-fun append/109888945 ((x!0 String) (x!1 (Array Int Int))) String\r\n    \"\")\r\n  (define-fun GetSuffix/-1031269374 ((x!0 var769) (x!1 Int)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n)\r\n(error \"line 57 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.0161592960357666,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3084 is 5\r\n; rep: (as @var3084_0 var3084)\r\n; rep: (as @var3084_1 var3084)\r\n; rep: (as @var3084_2 var3084)\r\n; rep: (as @var3084_3 var3084)\r\n; rep: (as @var3084_4 var3084)\r\n; cardinality of var769 is 1\r\n; rep: (as @var769_0 var769)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun jjimageLen/1964309570 ((_arg_1 var3084)) Int (ite (= (as @var3084_3 var3084) _arg_1) 0 (ite (= (as @var3084_4 var3084) _arg_1) 0 (- 1))))\r\n(define-fun jjmatchedPos/1964309570 ((_arg_1 var3084)) Int 0)\r\n(define-fun lengthOfMatch/1964309570 ((_arg_1 var3084)) Int 1)\r\n(define-fun jjmatchedKind/1964309570 ((_arg_1 var3084)) Int 21)\r\n(define-fun image/1964309570 ((_arg_1 var3084)) String \"\")\r\n(define-fun input_stream/1964309570 ((BOUND_VARIABLE_732 var3084)) var769 (as @var769_0 var769))\r\n(define-fun GetSuffix/-1031269374 ((BOUND_VARIABLE_735 var769) (BOUND_VARIABLE_736 Int)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun append/109888945 ((BOUND_VARIABLE_741 String) (BOUND_VARIABLE_742 (Array Int Int))) String \"\")\r\n(define-fun backup/649253219 ((BOUND_VARIABLE_745 var769) (BOUND_VARIABLE_746 Int)) void (as @void_0 void))\r\n(define-fun null-var3084 () var3084 (as @var3084_0 var3084))\r\n(define-fun var2283 () var3084 (as @var3084_1 var3084))\r\n(define-fun var2283!1 () var3084 (as @var3084_2 var3084))\r\n(define-fun var2283!2 () var3084 (as @var3084_3 var3084))\r\n(define-fun var2636!1 () String \"\")\r\n(define-fun var2283!3 () var3084 (as @var3084_4 var3084))\r\n(define-fun var1348!1 () var769 (as @var769_0 var769))\r\n(define-fun var1886 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35184640,
            "run_time": 0.07704806327819824,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 56 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 57 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 178626560,
            "run_time": 0.99192214012146,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCParserTokenManager__MoreLexicalActions__1397648743\\2471.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2636!1 =\r\n     concat(all_14_0, rhs)\r\n   ... sat\r\n\r\n716ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCCParserTokenManager",
            "$i2 = r0.<org.javacc.parser.JavaCCParserTokenManager: int jjimageLen>",
            "$i0 = r0.<org.javacc.parser.JavaCCParserTokenManager: int jjmatchedPos>",
            "$i1 = $i0 + 1",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int lengthOfMatch> = $i1",
            "$i3 = $i2 + $i1",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int jjimageLen> = $i3",
            "$i4 = r0.<org.javacc.parser.JavaCCParserTokenManager: int jjmatchedKind>",
            "lookupswitch($i4) {     case 21: goto $r7 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image>;     case 23: goto $r2 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image>;     default: goto return; }",
            "$r7 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image>",
            "$r6 = r0.<org.javacc.parser.JavaCCParserTokenManager: org.javacc.parser.JavaCharStream input_stream>",
            "$i8 = r0.<org.javacc.parser.JavaCCParserTokenManager: int jjimageLen>",
            "$r8 = virtualinvoke $r6.<org.javacc.parser.JavaCharStream: char[] GetSuffix(int)>($i8)",
            "virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>($r8)",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int jjimageLen> = 0",
            "$r9 = r0.<org.javacc.parser.JavaCCParserTokenManager: org.javacc.parser.JavaCharStream input_stream>",
            "virtualinvoke $r9.<org.javacc.parser.JavaCharStream: void backup(int)>(1)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParserInternals__character_descriptor_assign__1977105873\\998.smt2",
        "z3": {
            "memory": 31281152,
            "run_time": 0.04530739784240723,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1620:\r\n  ;;   var1620!val!0 var1620!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1620!val!0 () var1620)\r\n  (declare-fun var1620!val!1 () var1620)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1620)) (or (= x var1620!val!0) (= x var1620!val!1)))\r\n  ;; -----------\r\n  (define-fun var2069 () Int\r\n    (str.len var2247))\r\n  (define-fun null-var1620 () var1620\r\n    var1620!val!1)\r\n  (define-fun var2247 () String\r\n    \"\")\r\n  (define-fun var1649 () var1620\r\n    var1620!val!0)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3985 () String\r\n    \"\")\r\n  (define-fun var1649!1 () var1620\r\n    var1620!val!0)\r\n  (define-fun var2469_parse_error/-1175069001 ((x!0 var2584) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var1620-to-var2584 ((x!0 var1620)) var2584\r\n    var2584!val!0)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.045772552490234375,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1620 is 2\r\n; rep: (as @var1620_0 var1620)\r\n; rep: (as @var1620_1 var1620)\r\n; cardinality of var551 is 1\r\n; rep: (as @var551_0 var551)\r\n; cardinality of var2469 is 1\r\n; rep: (as @var2469_0 var2469)\r\n; cardinality of var2584 is 1\r\n; rep: (as @var2584_0 var2584)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2469_parse_error/-1175069001 ((BOUND_VARIABLE_529 var2584) (BOUND_VARIABLE_530 String)) void (as @void_0 void))\r\n(define-fun cast-from-var1620-to-var2584 ((BOUND_VARIABLE_533 var1620)) var2584 (as @var2584_0 var2584))\r\n(define-fun null-var1620 () var1620 (as @var1620_0 var1620))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1649 () var1620 (as @var1620_1 var1620))\r\n(define-fun var2247 () String \"\")\r\n(define-fun var1649!1 () var1620 (as @var1620_0 var1620))\r\n(define-fun var3985 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36954112,
            "run_time": 0.0788431167602539,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1620:\n  ;;   var1620!val!0 var1620!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1620!val!0 () var1620)\n  (declare-fun var1620!val!1 () var1620)\n  ;; cardinality constraint:\n  (forall ((x var1620)) (or (= x var1620!val!0) (= x var1620!val!1)))\n  ;; -----------\n  (define-fun null-var1620 () var1620\n    var1620!val!1)\n  (define-fun var1649 () var1620\n    var1620!val!0)\n  (define-fun var2247 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2069 () Int\n    (str.len var2247))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3985 () String\n    \"\")\n  (define-fun var1649!1 () var1620\n    var1620!val!0)\n  (define-fun var2469_parse_error/-1175069001 ((x!0 var2584) (x!1 String)) void\n    void!val!0)\n  (define-fun cast-from-var1620-to-var2584 ((x!0 var1620)) var2584\n    var2584!val!0)\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173846528,
            "run_time": 0.9334392547607422,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2247 () String \"\")\r\n  (define-fun var1649 () var1620 var1620!4)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var1620 () var1620 var1620!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: org.javacc.parser.Token",
            "r0 := @parameter1: java.lang.String",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if $i0 == 1 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void parse_error(java.lang.Object,java.lang.String)>(r1, \"String in character list may contain only one character.\")",
            "return 32"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParserTokenManager__MoreLexicalActions__1397648743\\2478.smt2",
        "z3": {
            "memory": 30617600,
            "run_time": 0.059845685958862305,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2367:\r\n  ;;   var2367!val!1 var2367!val!3 var2367!val!0 var2367!val!2 var2367!val!4 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2367!val!1 () var2367)\r\n  (declare-fun var2367!val!3 () var2367)\r\n  (declare-fun var2367!val!0 () var2367)\r\n  (declare-fun var2367!val!2 () var2367)\r\n  (declare-fun var2367!val!4 () var2367)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2367))\r\n          (or (= x var2367!val!1)\r\n              (= x var2367!val!3)\r\n              (= x var2367!val!0)\r\n              (= x var2367!val!2)\r\n              (= x var2367!val!4)))\r\n  ;; -----------\r\n  (define-fun var1681!3 () var2367\r\n    var2367!val!4)\r\n  (define-fun var2607 () var2616\r\n    (input_stream/1964309570 var1681!3))\r\n  (define-fun var1681!2 () var2367\r\n    var2367!val!3)\r\n  (define-fun null-var2367 () var2367\r\n    var2367!val!1)\r\n  (define-fun var497 () String\r\n    (image/1964309570 var1681!2))\r\n  (define-fun var497!1 () String\r\n    \"\")\r\n  (define-fun var239 () Int\r\n    (jjimageLen/1964309570 var1681!2))\r\n  (define-fun var1614 () Int\r\n    (getBeginLine/1549540318 (input_stream/1964309570 var1681!3)))\r\n  (define-fun var2373 () Int\r\n    (jjmatchedPos/1964309570 var1681))\r\n  (define-fun var1681!1 () var2367\r\n    var2367!val!2)\r\n  (define-fun var1511 () Int\r\n    (jjmatchedKind/1964309570 var1681!2))\r\n  (define-fun var3414 () (Array Int Int)\r\n    (GetSuffix/-1031269374\r\n  (input_stream/1964309570 var1681!2)\r\n  (jjimageLen/1964309570 var1681!2)))\r\n  (define-fun var1681 () var2367\r\n    var2367!val!0)\r\n  (define-fun var1794 () Int\r\n    (+ (jjimageLen/1964309570 var1681) (jjmatchedPos/1964309570 var1681) 1))\r\n  (define-fun var1820 () Int\r\n    (jjimageLen/1964309570 var1681))\r\n  (define-fun var509 () Int\r\n    (+ (jjmatchedPos/1964309570 var1681) 1))\r\n  (define-fun var729 () Int\r\n    (getBeginColumn/-1542439940 (input_stream/1964309570 var1681!3)))\r\n  (define-fun var889 () var2616\r\n    (input_stream/1964309570 var1681!2))\r\n  (define-fun var3511 () var2616\r\n    (input_stream/1964309570 var1681!3))\r\n  (define-fun var1681!4 () var2367\r\n    var2367!val!1)\r\n  (define-fun var1614!1 () Int\r\n    0)\r\n  (define-fun var729!1 () Int\r\n    0)\r\n  (define-fun image/1964309570 ((x!0 var2367)) String\r\n    \"\")\r\n  (define-fun lengthOfMatch/1964309570 ((x!0 var2367)) Int\r\n    1)\r\n  (define-fun jjmatchedPos/1964309570 ((x!0 var2367)) Int\r\n    0)\r\n  (define-fun jjimageLen/1964309570 ((x!0 var2367)) Int\r\n    (ite (= x!0 var2367!val!3) 1\r\n      0))\r\n  (define-fun jjmatchedKind/1964309570 ((x!0 var2367)) Int\r\n    23)\r\n  (define-fun getBeginLine/1549540318 ((x!0 var2616)) Int\r\n    0)\r\n  (define-fun input_stream/1964309570 ((x!0 var2367)) var2616\r\n    var2616!val!0)\r\n  (define-fun append/109888945 ((x!0 String) (x!1 (Array Int Int))) String\r\n    \"\")\r\n  (define-fun GetSuffix/-1031269374 ((x!0 var2616) (x!1 Int)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun getBeginColumn/-1542439940 ((x!0 var2616)) Int\r\n    0)\r\n  (define-fun saveBeginLineCol/1425662151 ((x!0 var2367) (x!1 Int) (x!2 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 65 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015445947647094727,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2367 is 5\r\n; rep: (as @var2367_0 var2367)\r\n; rep: (as @var2367_1 var2367)\r\n; rep: (as @var2367_2 var2367)\r\n; rep: (as @var2367_3 var2367)\r\n; rep: (as @var2367_4 var2367)\r\n; cardinality of var2616 is 1\r\n; rep: (as @var2616_0 var2616)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun jjimageLen/1964309570 ((_arg_1 var2367)) Int (ite (= (as @var2367_3 var2367) _arg_1) 0 (ite (= (as @var2367_4 var2367) _arg_1) 0 (- 1))))\r\n(define-fun jjmatchedPos/1964309570 ((_arg_1 var2367)) Int 0)\r\n(define-fun lengthOfMatch/1964309570 ((_arg_1 var2367)) Int 1)\r\n(define-fun jjmatchedKind/1964309570 ((_arg_1 var2367)) Int 23)\r\n(define-fun image/1964309570 ((_arg_1 var2367)) String \"\")\r\n(define-fun input_stream/1964309570 ((BOUND_VARIABLE_766 var2367)) var2616 (as @var2616_0 var2616))\r\n(define-fun GetSuffix/-1031269374 ((BOUND_VARIABLE_769 var2616) (BOUND_VARIABLE_770 Int)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun append/109888945 ((BOUND_VARIABLE_775 String) (BOUND_VARIABLE_776 (Array Int Int))) String \"\")\r\n(define-fun getBeginLine/1549540318 ((BOUND_VARIABLE_779 var2616)) Int 0)\r\n(define-fun getBeginColumn/-1542439940 ((BOUND_VARIABLE_782 var2616)) Int 0)\r\n(define-fun saveBeginLineCol/1425662151 ((BOUND_VARIABLE_785 var2367) (BOUND_VARIABLE_786 Int) (BOUND_VARIABLE_787 Int)) void (as @void_0 void))\r\n(define-fun null-var2367 () var2367 (as @var2367_0 var2367))\r\n(define-fun var1681 () var2367 (as @var2367_1 var2367))\r\n(define-fun var1681!1 () var2367 (as @var2367_2 var2367))\r\n(define-fun var1681!2 () var2367 (as @var2367_3 var2367))\r\n(define-fun var497!1 () String \"\")\r\n(define-fun var1681!3 () var2367 (as @var2367_4 var2367))\r\n(define-fun var1681!4 () var2367 (as @var2367_0 var2367))\r\n(define-fun var1614!1 () Int 0)\r\n(define-fun var729!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34652160,
            "run_time": 0.060703277587890625,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 64 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 65 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167141376,
            "run_time": 1.022839069366455,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCParserTokenManager__MoreLexicalActions__1397648743\\2478.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var497!1 =\r\n     concat(all_14_0, rhs)\r\n   ... sat\r\n\r\n745ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 11,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCCParserTokenManager",
            "$i2 = r0.<org.javacc.parser.JavaCCParserTokenManager: int jjimageLen>",
            "$i0 = r0.<org.javacc.parser.JavaCCParserTokenManager: int jjmatchedPos>",
            "$i1 = $i0 + 1",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int lengthOfMatch> = $i1",
            "$i3 = $i2 + $i1",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int jjimageLen> = $i3",
            "$i4 = r0.<org.javacc.parser.JavaCCParserTokenManager: int jjmatchedKind>",
            "lookupswitch($i4) {     case 21: goto $r7 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image>;     case 23: goto $r2 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image>;     default: goto return; }",
            "$r2 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image>",
            "$r1 = r0.<org.javacc.parser.JavaCCParserTokenManager: org.javacc.parser.JavaCharStream input_stream>",
            "$i5 = r0.<org.javacc.parser.JavaCCParserTokenManager: int jjimageLen>",
            "$r3 = virtualinvoke $r1.<org.javacc.parser.JavaCharStream: char[] GetSuffix(int)>($i5)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>($r3)",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int jjimageLen> = 0",
            "$r4 = r0.<org.javacc.parser.JavaCCParserTokenManager: org.javacc.parser.JavaCharStream input_stream>",
            "$i7 = virtualinvoke $r4.<org.javacc.parser.JavaCharStream: int getBeginLine()>()",
            "$r5 = r0.<org.javacc.parser.JavaCCParserTokenManager: org.javacc.parser.JavaCharStream input_stream>",
            "$i6 = virtualinvoke $r5.<org.javacc.parser.JavaCharStream: int getBeginColumn()>()",
            "virtualinvoke r0.<org.javacc.parser.JavaCCParserTokenManager: void saveBeginLineCol(int,int)>($i7, $i6)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParserTokenManager__TokenLexicalActions__474999299\\2488.smt2",
        "z3": {
            "memory": 31260672,
            "run_time": 0.0629270076751709,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1990:\r\n  ;;   var1990!val!0 var1990!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1990!val!0 () var1990)\r\n  (declare-fun var1990!val!1 () var1990)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1990)) (or (= x var1990!val!0) (= x var1990!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3337:\r\n  ;;   var3337!val!0 var3337!val!3 var3337!val!2 var3337!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3337!val!0 () var3337)\r\n  (declare-fun var3337!val!3 () var3337)\r\n  (declare-fun var3337!val!2 () var3337)\r\n  (declare-fun var3337!val!1 () var3337)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3337))\r\n          (or (= x var3337!val!0)\r\n              (= x var3337!val!3)\r\n              (= x var3337!val!2)\r\n              (= x var3337!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2653:\r\n  ;;   var2653!val!2 var2653!val!0 var2653!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2653!val!2 () var2653)\r\n  (declare-fun var2653!val!0 () var2653)\r\n  (declare-fun var2653!val!1 () var2653)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2653))\r\n          (or (= x var2653!val!2) (= x var2653!val!0) (= x var2653!val!1)))\r\n  ;; -----------\r\n  (define-fun var3663 () Int\r\n    (jjmatchedKind/1964309570 var561))\r\n  (define-fun var1646 () String\r\n    (image/1964309570 var561))\r\n  (define-fun null-var3337 () var3337\r\n    var3337!val!1)\r\n  (define-fun null-var1990 () var1990\r\n    var1990!val!1)\r\n  (define-fun var3003 () Int\r\n    (str.len (select var2653-jjstrLiteralImages 135)))\r\n  (define-fun var3724 () String\r\n    (select var2653-jjstrLiteralImages 135))\r\n  (define-fun var405 () var3337\r\n    var3337!val!0)\r\n  (define-fun var2421 () String\r\n    (select var2653-jjstrLiteralImages 135))\r\n  (define-fun var561!1 () var2653\r\n    var2653!val!2)\r\n  (define-fun var561 () var2653\r\n    var2653!val!0)\r\n  (define-fun var405!1 () var3337\r\n    var3337!val!2)\r\n  (define-fun var2338 () var1990\r\n    (cast-from-var3337-to-var1990 var405!1))\r\n  (define-fun var405!2 () var3337\r\n    var3337!val!3)\r\n  (define-fun var449 () var2168\r\n    (input_stream/1964309570 var561!1))\r\n  (define-fun null-var2653 () var2653\r\n    var2653!val!1)\r\n  (define-fun var3624 () (Array Int String)\r\n    var2653-jjstrLiteralImages)\r\n  (define-fun var2338!1 () var1990\r\n    var1990!val!0)\r\n  (define-fun var2653-jjstrLiteralImages () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun var1846 () (Array Int String)\r\n    var2653-jjstrLiteralImages)\r\n  (define-fun var1646!1 () String\r\n    \"\")\r\n  (define-fun var449!1 () var2168\r\n    var2168!val!0)\r\n  (define-fun var288 () Int\r\n    0)\r\n  (define-fun lengthOfMatch/1964309570 ((x!0 var2653)) Int\r\n    0)\r\n  (define-fun kind/197050796 ((x!0 var3337)) Int\r\n    137)\r\n  (define-fun jjmatchedKind/1964309570 ((x!0 var2653)) Int\r\n    135)\r\n  (define-fun realKind/2132275732 ((x!0 var1990)) Int\r\n    135)\r\n  (define-fun image/197050796 ((x!0 var3337)) String\r\n    (ite (= x!0 var3337!val!3) \">\"\r\n      \">\"))\r\n  (define-fun image/1964309570 ((x!0 var2653)) String\r\n    \"\")\r\n  (define-fun backup/649253219 ((x!0 var2168) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun input_stream/1964309570 ((x!0 var2653)) var2168\r\n    var2168!val!0)\r\n  (define-fun cast-from-var3337-to-var1990 ((x!0 var3337)) var1990\r\n    var1990!val!0)\r\n)\r\n(error \"line 68 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.047687530517578125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2653 is 3\r\n; rep: (as @var2653_0 var2653)\r\n; rep: (as @var2653_1 var2653)\r\n; rep: (as @var2653_2 var2653)\r\n; cardinality of var3337 is 4\r\n; rep: (as @var3337_0 var3337)\r\n; rep: (as @var3337_1 var3337)\r\n; rep: (as @var3337_2 var3337)\r\n; rep: (as @var3337_3 var3337)\r\n; cardinality of var1990 is 2\r\n; rep: (as @var1990_0 var1990)\r\n; rep: (as @var1990_1 var1990)\r\n; cardinality of var2168 is 1\r\n; rep: (as @var2168_0 var2168)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun jjmatchedKind/1964309570 ((_arg_1 var2653)) Int 135)\r\n(define-fun image/1964309570 ((BOUND_VARIABLE_695 var2653)) String \"\")\r\n(define-fun lengthOfMatch/1964309570 ((_arg_1 var2653)) Int 0)\r\n(define-fun kind/197050796 ((_arg_1 var3337)) Int 137)\r\n(define-fun cast-from-var3337-to-var1990 ((BOUND_VARIABLE_698 var3337)) var1990 (as @var1990_0 var1990))\r\n(define-fun realKind/2132275732 ((_arg_1 var1990)) Int 135)\r\n(define-fun input_stream/1964309570 ((BOUND_VARIABLE_701 var2653)) var2168 (as @var2168_0 var2168))\r\n(define-fun backup/649253219 ((BOUND_VARIABLE_704 var2168) (BOUND_VARIABLE_705 Int)) void (as @void_0 void))\r\n(define-fun image/197050796 ((_arg_1 var3337)) String \">\")\r\n(define-fun null-var2653 () var2653 (as @var2653_0 var2653))\r\n(define-fun null-var3337 () var3337 (as @var3337_0 var3337))\r\n(define-fun var2653-jjstrLiteralImages () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun null-var1990 () var1990 (as @var1990_0 var1990))\r\n(define-fun var561 () var2653 (as @var2653_1 var2653))\r\n(define-fun var405 () var3337 (as @var3337_1 var3337))\r\n(define-fun var1646!1 () String \"\")\r\n(define-fun var561!1 () var2653 (as @var2653_2 var2653))\r\n(define-fun var405!1 () var3337 (as @var3337_2 var3337))\r\n(define-fun var2338!1 () var1990 (as @var1990_1 var1990))\r\n(define-fun var449!1 () var2168 (as @var2168_0 var2168))\r\n(define-fun var288 () Int 0)\r\n(define-fun var405!2 () var3337 (as @var3337_3 var3337))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34586624,
            "run_time": 0.07714629173278809,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 67 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 68 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167129088,
            "run_time": 1.0697658061981201,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3337/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCParserTokenManager__TokenLexicalActions__474999299\\2488.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1646!1 =\r\n     concat(all_22_3, all_19_0)\r\n\r\n786ms\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCCParserTokenManager",
            "r6 := @parameter0: org.javacc.parser.Token",
            "$i0 = r0.<org.javacc.parser.JavaCCParserTokenManager: int jjmatchedKind>",
            "lookupswitch($i0) {     case 135: goto $r11 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image>;     case 136: goto $r3 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image>;     default: goto return; }",
            "$r11 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image>",
            "$r9 = <org.javacc.parser.JavaCCParserTokenManager: java.lang.String[] jjstrLiteralImages>",
            "$r10 = $r9[135]",
            "virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)",
            "$r12 = <org.javacc.parser.JavaCCParserTokenManager: java.lang.String[] jjstrLiteralImages>",
            "$r13 = $r12[135]",
            "$i2 = virtualinvoke $r13.<java.lang.String: int length()>()",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int lengthOfMatch> = $i2",
            "r6.<org.javacc.parser.Token: int kind> = 137",
            "$r14 = (org.javacc.parser.Token$GTToken) r6",
            "$r14.<org.javacc.parser.Token$GTToken: int realKind> = 135",
            "$r15 = r0.<org.javacc.parser.JavaCCParserTokenManager: org.javacc.parser.JavaCharStream input_stream>",
            "virtualinvoke $r15.<org.javacc.parser.JavaCharStream: void backup(int)>(2)",
            "r6.<org.javacc.parser.Token: java.lang.String image> = \">\"",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParserInternals__compare__-1954617244\\701.smt2",
        "z3": {
            "memory": 31789056,
            "run_time": 0.05849099159240723,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var272:\r\n  ;;   var272!val!1 var272!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var272!val!1 () var272)\r\n  (declare-fun var272!val!0 () var272)\r\n  ;; cardinality constraint:\r\n  (forall ((x var272)) (or (= x var272!val!1) (= x var272!val!0)))\r\n  ;; -----------\r\n  (define-fun var2437 () var272\r\n    var272!val!0)\r\n  (define-fun var1322 () String\r\n    \"!0!\")\r\n  (define-fun var191 () Bool\r\n    (= var2243 var1322))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-var272 () var272\r\n    var272!val!1)\r\n  (define-fun var2243 () String\r\n    \"!0!\")\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.030106306076049805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var272 is 2\r\n; rep: (as @var272_0 var272)\r\n; rep: (as @var272_1 var272)\r\n; cardinality of var1910 is 1\r\n; rep: (as @var1910_0 var1910)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var272 () var272 (as @var272_0 var272))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2437 () var272 (as @var272_1 var272))\r\n(define-fun var1322 () String \"\")\r\n(define-fun var2243 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35168256,
            "run_time": 0.07671213150024414,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var272:\n  ;;   var272!val!1 var272!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var272!val!1 () var272)\n  (declare-fun var272!val!0 () var272)\n  ;; cardinality constraint:\n  (forall ((x var272)) (or (= x var272!val!1) (= x var272!val!0)))\n  ;; -----------\n  (define-fun var2437 () var272\n    var272!val!0)\n  (define-fun var2243 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var272 () var272\n    var272!val!1)\n  (define-fun var191 () Bool\n    (= var2243 var1322))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1322 () String\n    \"\\u{0}\\u{0}\")\n)\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 133242880,
            "run_time": 0.7879364490509033,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2243 () String \"\")\r\n  (define-fun var1322 () String \"\")\r\n  (define-fun var2437 () var272 var272!4)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var272 () var272 var272!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: org.javacc.parser.Token",
            "r1 := @parameter1: java.lang.String",
            "r0 := @parameter2: java.lang.String",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1)",
            "if $z0 != 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParserTokenManager__SkipLexicalActions__-1959312487\\2390.smt2",
        "z3": {
            "memory": 27869184,
            "run_time": 0.05956006050109863,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2865:\r\n  ;;   var2865!val!0 var2865!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2865!val!0 () var2865)\r\n  (declare-fun var2865!val!1 () var2865)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2865)) (or (= x var2865!val!0) (= x var2865!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2868:\r\n  ;;   var2868!val!0 var2868!val!2 var2868!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2868!val!0 () var2868)\r\n  (declare-fun var2868!val!2 () var2868)\r\n  (declare-fun var2868!val!1 () var2868)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2868))\r\n          (or (= x var2868!val!0) (= x var2868!val!2) (= x var2868!val!1)))\r\n  ;; -----------\r\n  (define-fun var3812 () var2865\r\n    var2865!val!0)\r\n  (define-fun null-var2868 () var2868\r\n    var2868!val!1)\r\n  (define-fun var2086 () Int\r\n    (+ (jjmatchedPos/1964309570 var1491) 1))\r\n  (define-fun var1618 () Int\r\n    (jjimageLen/1964309570 var1491))\r\n  (define-fun var2206 () String\r\n    (image/1964309570 var1491))\r\n  (define-fun var3765 () Int\r\n    (+ (jjimageLen/1964309570 var1491) (jjmatchedPos/1964309570 var1491) 1))\r\n  (define-fun var2336 () var2426\r\n    (input_stream/1964309570 var1491!2))\r\n  (define-fun var960 () Int\r\n    (jjmatchedPos/1964309570 var1491))\r\n  (define-fun var1491 () var2868\r\n    var2868!val!0)\r\n  (define-fun null-var2865 () var2865\r\n    var2865!val!1)\r\n  (define-fun var1491!1 () var2868\r\n    var2868!val!2)\r\n  (define-fun var2695 () Int\r\n    (jjmatchedKind/1964309570 var1491))\r\n  (define-fun var2206!1 () String\r\n    \"\")\r\n  (define-fun var3 () (Array Int Int)\r\n    (GetSuffix/-1031269374\r\n  (input_stream/1964309570 var1491)\r\n  (+ (jjimageLen/1964309570 var1491) (jjmatchedPos/1964309570 var1491) 1)))\r\n  (define-fun var3835 () var2426\r\n    (input_stream/1964309570 var1491))\r\n  (define-fun var2331 () Int\r\n    0)\r\n  (define-fun var2336!1 () var2426\r\n    var2426!val!0)\r\n  (define-fun var1491!2 () var2868\r\n    var2868!val!0)\r\n  (define-fun image/1964309570 ((x!0 var2868)) String\r\n    \"\")\r\n  (define-fun lengthOfMatch/1964309570 ((x!0 var2868)) Int\r\n    1)\r\n  (define-fun jjmatchedPos/1964309570 ((x!0 var2868)) Int\r\n    0)\r\n  (define-fun jjmatchedKind/1964309570 ((x!0 var2868)) Int\r\n    19)\r\n  (define-fun jjimageLen/1964309570 ((x!0 var2868)) Int\r\n    0)\r\n  (define-fun restoreBeginLineCol/1410905204 ((x!0 var2868)) void\r\n    void!val!0)\r\n  (define-fun backup/649253219 ((x!0 var2426) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun input_stream/1964309570 ((x!0 var2868)) var2426\r\n    var2426!val!0)\r\n  (define-fun append/109888945 ((x!0 String) (x!1 (Array Int Int))) String\r\n    \"\")\r\n  (define-fun GetSuffix/-1031269374 ((x!0 var2426) (x!1 Int)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n)\r\n(error \"line 59 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1691648,
            "run_time": 0.045671939849853516,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2868 is 3\r\n; rep: (as @var2868_0 var2868)\r\n; rep: (as @var2868_1 var2868)\r\n; rep: (as @var2868_2 var2868)\r\n; cardinality of var2865 is 2\r\n; rep: (as @var2865_0 var2865)\r\n; rep: (as @var2865_1 var2865)\r\n; cardinality of var2426 is 1\r\n; rep: (as @var2426_0 var2426)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun jjmatchedKind/1964309570 ((_arg_1 var2868)) Int 19)\r\n(define-fun image/1964309570 ((_arg_1 var2868)) String \"\")\r\n(define-fun input_stream/1964309570 ((BOUND_VARIABLE_685 var2868)) var2426 (as @var2426_0 var2426))\r\n(define-fun jjimageLen/1964309570 ((BOUND_VARIABLE_688 var2868)) Int 0)\r\n(define-fun jjmatchedPos/1964309570 ((_arg_1 var2868)) Int (- 1))\r\n(define-fun lengthOfMatch/1964309570 ((_arg_1 var2868)) Int 0)\r\n(define-fun GetSuffix/-1031269374 ((BOUND_VARIABLE_691 var2426) (BOUND_VARIABLE_692 Int)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun append/109888945 ((BOUND_VARIABLE_697 String) (BOUND_VARIABLE_698 (Array Int Int))) String \"\")\r\n(define-fun restoreBeginLineCol/1410905204 ((BOUND_VARIABLE_701 var2868)) void (as @void_0 void))\r\n(define-fun backup/649253219 ((BOUND_VARIABLE_704 var2426) (BOUND_VARIABLE_705 Int)) void (as @void_0 void))\r\n(define-fun null-var2868 () var2868 (as @var2868_0 var2868))\r\n(define-fun null-var2865 () var2865 (as @var2865_0 var2865))\r\n(define-fun var1491 () var2868 (as @var2868_1 var2868))\r\n(define-fun var3812 () var2865 (as @var2865_1 var2865))\r\n(define-fun var1491!1 () var2868 (as @var2868_2 var2868))\r\n(define-fun var2206!1 () String \"\")\r\n(define-fun var1491!2 () var2868 (as @var2868_0 var2868))\r\n(define-fun var2336!1 () var2426 (as @var2426_0 var2426))\r\n(define-fun var2331 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35139584,
            "run_time": 0.07809734344482422,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 58 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 59 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165490688,
            "run_time": 0.9398386478424072,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCParserTokenManager__SkipLexicalActions__-1959312487\\2390.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2206!1 =\r\n     concat(all_16_0, rhs)\r\n   ... sat\r\n\r\n659ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 10,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCCParserTokenManager",
            "r5 := @parameter0: org.javacc.parser.Token",
            "$i0 = r0.<org.javacc.parser.JavaCCParserTokenManager: int jjmatchedKind>",
            "lookupswitch($i0) {     case 19: goto $r1 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image>;     default: goto return; }",
            "$r1 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image>",
            "$r2 = r0.<org.javacc.parser.JavaCCParserTokenManager: org.javacc.parser.JavaCharStream input_stream>",
            "$i3 = r0.<org.javacc.parser.JavaCCParserTokenManager: int jjimageLen>",
            "$i1 = r0.<org.javacc.parser.JavaCCParserTokenManager: int jjmatchedPos>",
            "$i2 = $i1 + 1",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int lengthOfMatch> = $i2",
            "$i4 = $i3 + $i2",
            "$r3 = virtualinvoke $r2.<org.javacc.parser.JavaCharStream: char[] GetSuffix(int)>($i4)",
            "virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>($r3)",
            "virtualinvoke r0.<org.javacc.parser.JavaCCParserTokenManager: void restoreBeginLineCol()>()",
            "$r4 = r0.<org.javacc.parser.JavaCCParserTokenManager: org.javacc.parser.JavaCharStream input_stream>",
            "virtualinvoke $r4.<org.javacc.parser.JavaCharStream: void backup(int)>(1)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParserTokenManager__TokenLexicalActions__474999299\\2631.smt2",
        "z3": {
            "memory": 31293440,
            "run_time": 0.04368448257446289,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3631:\r\n  ;;   var3631!val!1 var3631!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3631!val!1 () var3631)\r\n  (declare-fun var3631!val!0 () var3631)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3631)) (or (= x var3631!val!1) (= x var3631!val!0)))\r\n  ;; -----------\r\n  ;; universe for var686:\r\n  ;;   var686!val!1 var686!val!2 var686!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var686!val!1 () var686)\r\n  (declare-fun var686!val!2 () var686)\r\n  (declare-fun var686!val!0 () var686)\r\n  ;; cardinality constraint:\r\n  (forall ((x var686))\r\n          (or (= x var686!val!1) (= x var686!val!2) (= x var686!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3742:\r\n  ;;   var3742!val!3 var3742!val!0 var3742!val!2 var3742!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3742!val!3 () var3742)\r\n  (declare-fun var3742!val!0 () var3742)\r\n  (declare-fun var3742!val!2 () var3742)\r\n  (declare-fun var3742!val!1 () var3742)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3742))\r\n          (or (= x var3742!val!3)\r\n              (= x var3742!val!0)\r\n              (= x var3742!val!2)\r\n              (= x var3742!val!1)))\r\n  ;; -----------\r\n  (define-fun var3757!1 () var686\r\n    var686!val!2)\r\n  (define-fun null-var3631 () var3631\r\n    var3631!val!1)\r\n  (define-fun var3161 () var3631\r\n    (cast-from-var3742-to-var3631 var968!1))\r\n  (define-fun null-var686 () var686\r\n    var686!val!1)\r\n  (define-fun var968!1 () var3742\r\n    var3742!val!2)\r\n  (define-fun var3699 () Int\r\n    (str.len (select var686-jjstrLiteralImages 136)))\r\n  (define-fun var3035 () String\r\n    (select var686-jjstrLiteralImages 136))\r\n  (define-fun var3593 () Int\r\n    (jjmatchedKind/1964309570 var3757))\r\n  (define-fun var682 () (Array Int String)\r\n    var686-jjstrLiteralImages)\r\n  (define-fun var968!2 () var3742\r\n    var3742!val!3)\r\n  (define-fun var968 () var3742\r\n    var3742!val!0)\r\n  (define-fun var3757 () var686\r\n    var686!val!0)\r\n  (define-fun var3688 () String\r\n    (image/1964309570 var3757))\r\n  (define-fun var1739 () var3068\r\n    (input_stream/1964309570 var3757!1))\r\n  (define-fun null-var3742 () var3742\r\n    var3742!val!1)\r\n  (define-fun var3161!1 () var3631\r\n    var3631!val!0)\r\n  (define-fun var962 () String\r\n    (select var686-jjstrLiteralImages 136))\r\n  (define-fun var686-jjstrLiteralImages () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun var1403 () (Array Int String)\r\n    var686-jjstrLiteralImages)\r\n  (define-fun var3688!1 () String\r\n    \"\")\r\n  (define-fun var1043 () Int\r\n    0)\r\n  (define-fun var1739!1 () var3068\r\n    var3068!val!0)\r\n  (define-fun kind/197050796 ((x!0 var3742)) Int\r\n    137)\r\n  (define-fun lengthOfMatch/1964309570 ((x!0 var686)) Int\r\n    0)\r\n  (define-fun realKind/2132275732 ((x!0 var3631)) Int\r\n    136)\r\n  (define-fun jjmatchedKind/1964309570 ((x!0 var686)) Int\r\n    136)\r\n  (define-fun image/197050796 ((x!0 var3742)) String\r\n    (ite (= x!0 var3742!val!3) \">\"\r\n      \">\"))\r\n  (define-fun image/1964309570 ((x!0 var686)) String\r\n    \"\")\r\n  (define-fun backup/649253219 ((x!0 var3068) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun input_stream/1964309570 ((x!0 var686)) var3068\r\n    var3068!val!0)\r\n  (define-fun cast-from-var3742-to-var3631 ((x!0 var3742)) var3631\r\n    var3631!val!1)\r\n)\r\n(error \"line 68 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015025138854980469,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var686 is 3\r\n; rep: (as @var686_0 var686)\r\n; rep: (as @var686_1 var686)\r\n; rep: (as @var686_2 var686)\r\n; cardinality of var3742 is 4\r\n; rep: (as @var3742_0 var3742)\r\n; rep: (as @var3742_1 var3742)\r\n; rep: (as @var3742_2 var3742)\r\n; rep: (as @var3742_3 var3742)\r\n; cardinality of var3631 is 2\r\n; rep: (as @var3631_0 var3631)\r\n; rep: (as @var3631_1 var3631)\r\n; cardinality of var3068 is 1\r\n; rep: (as @var3068_0 var3068)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun jjmatchedKind/1964309570 ((_arg_1 var686)) Int 136)\r\n(define-fun image/1964309570 ((BOUND_VARIABLE_707 var686)) String \"\")\r\n(define-fun lengthOfMatch/1964309570 ((_arg_1 var686)) Int 0)\r\n(define-fun kind/197050796 ((_arg_1 var3742)) Int 137)\r\n(define-fun cast-from-var3742-to-var3631 ((BOUND_VARIABLE_710 var3742)) var3631 (as @var3631_0 var3631))\r\n(define-fun realKind/2132275732 ((_arg_1 var3631)) Int 136)\r\n(define-fun input_stream/1964309570 ((BOUND_VARIABLE_713 var686)) var3068 (as @var3068_0 var3068))\r\n(define-fun backup/649253219 ((BOUND_VARIABLE_716 var3068) (BOUND_VARIABLE_717 Int)) void (as @void_0 void))\r\n(define-fun image/197050796 ((_arg_1 var3742)) String \">\")\r\n(define-fun null-var686 () var686 (as @var686_0 var686))\r\n(define-fun null-var3742 () var3742 (as @var3742_0 var3742))\r\n(define-fun var686-jjstrLiteralImages () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun null-var3631 () var3631 (as @var3631_0 var3631))\r\n(define-fun var3757 () var686 (as @var686_1 var686))\r\n(define-fun var968 () var3742 (as @var3742_1 var3742))\r\n(define-fun var3688!1 () String \"\")\r\n(define-fun var3757!1 () var686 (as @var686_2 var686))\r\n(define-fun var968!1 () var3742 (as @var3742_2 var3742))\r\n(define-fun var3161!1 () var3631 (as @var3631_1 var3631))\r\n(define-fun var1739!1 () var3068 (as @var3068_0 var3068))\r\n(define-fun var1043 () Int 0)\r\n(define-fun var968!2 () var3742 (as @var3742_3 var3742))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35201024,
            "run_time": 0.07809734344482422,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 67 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 68 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180346880,
            "run_time": 1.0814213752746582,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3742/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCParserTokenManager__TokenLexicalActions__474999299\\2631.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3688!1 =\r\n     concat(all_22_3, all_19_0)\r\n\r\n793ms\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCCParserTokenManager",
            "r6 := @parameter0: org.javacc.parser.Token",
            "$i0 = r0.<org.javacc.parser.JavaCCParserTokenManager: int jjmatchedKind>",
            "lookupswitch($i0) {     case 135: goto $r11 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image>;     case 136: goto $r3 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image>;     default: goto return; }",
            "$r3 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image>",
            "$r1 = <org.javacc.parser.JavaCCParserTokenManager: java.lang.String[] jjstrLiteralImages>",
            "$r2 = $r1[136]",
            "virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r4 = <org.javacc.parser.JavaCCParserTokenManager: java.lang.String[] jjstrLiteralImages>",
            "$r5 = $r4[136]",
            "$i1 = virtualinvoke $r5.<java.lang.String: int length()>()",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int lengthOfMatch> = $i1",
            "r6.<org.javacc.parser.Token: int kind> = 137",
            "$r7 = (org.javacc.parser.Token$GTToken) r6",
            "$r7.<org.javacc.parser.Token$GTToken: int realKind> = 136",
            "$r8 = r0.<org.javacc.parser.JavaCCParserTokenManager: org.javacc.parser.JavaCharStream input_stream>",
            "virtualinvoke $r8.<org.javacc.parser.JavaCharStream: void backup(int)>(1)",
            "r6.<org.javacc.parser.Token: java.lang.String image> = \">\"",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParserInternals__remove_escapes_and_quotes__2106578884\\964.smt2",
        "z3": {
            "memory": 30326784,
            "run_time": 0.05924797058105469,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2861:\r\n  ;;   var2861!val!0 var2861!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2861!val!0 () var2861)\r\n  (declare-fun var2861!val!1 () var2861)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2861)) (or (= x var2861!val!0) (= x var2861!val!1)))\r\n  ;; -----------\r\n  (define-fun var1937 () Int\r\n    (str.len var446))\r\n  (define-fun var446 () String\r\n    \"\")\r\n  (define-fun var2557 () Int\r\n    1)\r\n  (define-fun var2045 () Int\r\n    (- (str.len var446) 1))\r\n  (define-fun var415 () String\r\n    \"\")\r\n  (define-fun var1963 () var2861\r\n    var2861!val!0)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun null-var2861 () var2861\r\n    var2861!val!1)\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12124160,
            "run_time": 0.030709505081176758,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2861 is 2\r\n; rep: (as @var2861_0 var2861)\r\n; rep: (as @var2861_1 var2861)\r\n; cardinality of var1676 is 1\r\n; rep: (as @var1676_0 var1676)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var2861 () var2861 (as @var2861_0 var2861))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1963 () var2861 (as @var2861_1 var2861))\r\n(define-fun var446 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36941824,
            "run_time": 0.07750797271728516,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2861:\n  ;;   var2861!val!0 var2861!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2861!val!0 () var2861)\n  (declare-fun var2861!val!1 () var2861)\n  ;; cardinality constraint:\n  (forall ((x var2861)) (or (= x var2861!val!0) (= x var2861!val!1)))\n  ;; -----------\n  (define-fun var1937 () Int\n    (str.len var446))\n  (define-fun var2045 () Int\n    (- (str.len var446) 1))\n  (define-fun null-var2861 () var2861\n    var2861!val!1)\n  (define-fun var1963 () var2861\n    var2861!val!0)\n  (define-fun var2557 () Int\n    1)\n  (define-fun var446 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var415 () String\n    \"\")\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151539712,
            "run_time": 0.8833973407745361,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var446 () String \"\")\r\n  (define-fun var1963 () var2861 var2861!4)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var2861 () var2861 var2861!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: org.javacc.parser.Token",
            "r0 := @parameter1: java.lang.String",
            "r36 = \"\"",
            "i6 = 1",
            "$i7 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i8 = $i7 - 1",
            "if i6 >= $i8 goto return r36",
            "return r36"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParserTokenManager__SwitchTo__848150611\\2339.smt2",
        "z3": {
            "memory": 32296960,
            "run_time": 0.06152224540710449,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3537:\r\n  ;;   var3537!val!0 var3537!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3537!val!0 () var3537)\r\n  (declare-fun var3537!val!1 () var3537)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3537)) (or (= x var3537!val!0) (= x var3537!val!1)))\r\n  ;; -----------\r\n  (define-fun var1327 () String\r\n    (str.++ var341!1\r\n        \"Error: Ignoring invalid lexical state : \"\r\n        (str.from_int var1485)))\r\n  (define-fun var1485 () Int\r\n    5)\r\n  (define-fun var3252 () var3823\r\n    var3823-init)\r\n  (define-fun var2571 () String\r\n    (str.++ var341!1 \"Error: Ignoring invalid lexical state : \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    6)\r\n  (define-fun var637 () String\r\n    (str.++ var341!1\r\n        \"Error: Ignoring invalid lexical state : \"\r\n        (str.from_int var1485)\r\n        \". State unchanged.\"))\r\n  (define-fun var3314 () String\r\n    (str.++ var341!1\r\n        \"Error: Ignoring invalid lexical state : \"\r\n        (str.from_int var1485)\r\n        \". State unchanged.\"))\r\n  (define-fun null-var3537 () var3537\r\n    var3537!val!1)\r\n  (define-fun var3569 () var3537\r\n    var3537!val!0)\r\n  (define-fun var2571!1 () String\r\n    \"Error: Ignoring invalid lexical state : \")\r\n  (define-fun var341 () String\r\n    String-init)\r\n  (define-fun var341!2 () String\r\n    \"Error: Ignoring invalid lexical state : \")\r\n  (define-fun var341!1 () String\r\n    \"\")\r\n  (define-fun var1327!1 () String\r\n    \"Error: Ignoring invalid lexical state : 5. State unchanged.\")\r\n  (define-fun var3252!1 () var3823\r\n    var3823!val!0)\r\n  (define-fun var3314!1 () String\r\n    \"\")\r\n  (define-fun var3245 () Int\r\n    0)\r\n  (define-fun var3823-init () var3823\r\n    var3823!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun <init>/-2103077939 ((x!0 var3823) (x!1 String) (x!2 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 53 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1732608,
            "run_time": 0.03046393394470215,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3537 is 2\r\n; rep: (as @var3537_0 var3537)\r\n; rep: (as @var3537_1 var3537)\r\n; cardinality of var3823 is 1\r\n; rep: (as @var3823_0 var3823)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3823-init () var3823 (as @var3823_0 var3823))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-2103077939 ((BOUND_VARIABLE_966 var3823) (BOUND_VARIABLE_967 String) (BOUND_VARIABLE_968 Int)) void (as @void_0 void))\r\n(define-fun null-var3537 () var3537 (as @var3537_0 var3537))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var3569 () var3537 (as @var3537_1 var3537))\r\n(define-fun var1485 () Int 5)\r\n(define-fun var341!1 () String \"\")\r\n(define-fun var341!2 () String \"Error: Ignoring invalid lexical state : \")\r\n(define-fun var2571!1 () String \"Error: Ignoring invalid lexical state : \")\r\n(define-fun var1327!1 () String \"Error: Ignoring invalid lexical state : 5. State unchanged.\")\r\n(define-fun var3252!1 () var3823 (as @var3823_0 var3823))\r\n(define-fun var3314!1 () String \"\")\r\n(define-fun var3245 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36757504,
            "run_time": 0.07702088356018066,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3537:\n  ;;   var3537!val!0 var3537!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3537!val!0 () var3537)\n  (declare-fun var3537!val!1 () var3537)\n  ;; cardinality constraint:\n  (forall ((x var3537)) (or (= x var3537!val!0) (= x var3537!val!1)))\n  ;; -----------\n  (define-fun var1485 () Int\n    5)\n  (define-fun var2571 () String\n    (str.++ var341!1 \"Error: Ignoring invalid lexical state : \"))\n  (define-fun var637 () String\n    (str.++ var341!1\n        \"Error: Ignoring invalid lexical state : \"\n        (str.from_int var1485)\n        \". State unchanged.\"))\n  (define-fun var2571!1 () String\n    \"Error: Ignoring invalid lexical state : \")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3314 () String\n    (str.++ var341!1\n        \"Error: Ignoring invalid lexical state : \"\n        (str.from_int var1485)\n        \". State unchanged.\"))\n  (define-fun null-Int () Int\n    6)\n  (define-fun var3252 () var3823\n    var3823-init)\n  (define-fun var341 () String\n    String-init)\n  (define-fun null-var3537 () var3537\n    var3537!val!1)\n  (define-fun var3569 () var3537\n    var3537!val!0)\n  (define-fun var1327!1 () String\n    \"Error: Ignoring invalid lexical state : 5. State unchanged.\")\n  (define-fun var1327 () String\n    (str.++ var341!1\n        \"Error: Ignoring invalid lexical state : \"\n        (str.from_int var1485)))\n  (define-fun var341!2 () String\n    \"Error: Ignoring invalid lexical state : \")\n  (define-fun var341!1 () String\n    \"\")\n  (define-fun var3252!1 () var3823\n    var3823!val!0)\n  (define-fun var3314!1 () String\n    \"\")\n  (define-fun var3245 () Int\n    0)\n  (define-fun var3823-init () var3823\n    var3823!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun <init>/-2103077939 ((x!0 var3823) (x!1 String) (x!2 Int)) void\n    void!val!0)\n)\n(error \"line 53 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 186167296,
            "run_time": 1.0695891380310059,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1327!1 () String \"Error: Ignoring invalid lexical state : 5. State unchanged.\")\r\n  (define-fun var2571!1 () String \"Error: Ignoring invalid lexical state : \")\r\n  (define-fun var341!2 () String \"Error: Ignoring invalid lexical state : \")\r\n  (define-fun var341!1 () String \"\")\r\n  (define-fun var1485 () Int 5)\r\n  (define-fun var3569 () var3537 var3537!84)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3537 () var3537 var3537!82)\r\n  (define-fun abbrev_106 ((x!0 Int)) String (ite (= x!0 0) \"Error: Ignoring invalid lexical state : \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r6 := @this: org.javacc.parser.JavaCCParserTokenManager",
            "i0 := @parameter0: int",
            "if i0 >= 5 goto $r0 = new org.javacc.parser.TokenMgrError",
            "$r0 = new org.javacc.parser.TokenMgrError",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: Ignoring invalid lexical state : \")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\". State unchanged.\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<org.javacc.parser.TokenMgrError: void <init>(java.lang.String,int)>($r5, 2)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParserTokenManager__getNextToken__-1624627915\\2374.smt2",
        "z3": {
            "memory": 29765632,
            "run_time": 0.07407808303833008,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var800:\r\n  ;;   var800!val!0 var800!val!2 var800!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var800!val!0 () var800)\r\n  (declare-fun var800!val!2 () var800)\r\n  (declare-fun var800!val!1 () var800)\r\n  ;; cardinality constraint:\r\n  (forall ((x var800))\r\n          (or (= x var800!val!0) (= x var800!val!2) (= x var800!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1941:\r\n  ;;   var1941!val!0 var1941!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1941!val!0 () var1941)\r\n  (declare-fun var1941!val!1 () var1941)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1941)) (or (= x var1941!val!0) (= x var1941!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2875:\r\n  ;;   var2875!val!2 var2875!val!4 var2875!val!5 var2875!val!3 var2875!val!0 var2875!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2875!val!2 () var2875)\r\n  (declare-fun var2875!val!4 () var2875)\r\n  (declare-fun var2875!val!5 () var2875)\r\n  (declare-fun var2875!val!3 () var2875)\r\n  (declare-fun var2875!val!0 () var2875)\r\n  (declare-fun var2875!val!1 () var2875)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2875))\r\n          (or (= x var2875!val!2)\r\n              (= x var2875!val!4)\r\n              (= x var2875!val!5)\r\n              (= x var2875!val!3)\r\n              (= x var2875!val!0)\r\n              (= x var2875!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1610:\r\n  ;;   var1610!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1610!val!0 () var1610)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1610)) (= x var1610!val!0))\r\n  ;; -----------\r\n  (define-fun null-var2875 () var2875\r\n    var2875!val!1)\r\n  (define-fun var2828 () var1941\r\n    (jjFillToken/-1355273761 var2525!4))\r\n  (define-fun null-var800 () var800\r\n    var800!val!1)\r\n  (define-fun var2805 () String\r\n    (image/1964309570 var2525!2))\r\n  (define-fun var2935 () var800\r\n    var800!val!2)\r\n  (define-fun var1699 () var1610\r\n    (input_stream/1964309570 var2525!3))\r\n  (define-fun var3203 () Int\r\n    (BeginToken/-1085822358 (input_stream/1964309570 var2525)))\r\n  (define-fun var2525!4 () var2875\r\n    var2875!val!5)\r\n  (define-fun var2525 () var2875\r\n    var2875!val!0)\r\n  (define-fun var3697 () Int\r\n    (curLexState/1964309570 var2525!3))\r\n  (define-fun var2525!1 () var2875\r\n    var2875!val!2)\r\n  (define-fun var2828!1 () var1941\r\n    var1941!val!0)\r\n  (define-fun var2525!2 () var2875\r\n    var2875!val!3)\r\n  (define-fun var427 () var1941\r\n    null-var1941)\r\n  (define-fun var2641 () var800\r\n    var800!val!0)\r\n  (define-fun var2842 () Int\r\n    0)\r\n  (define-fun var2242 () String\r\n    (jjimage/1964309570 var2525!1))\r\n  (define-fun var482 () var1610\r\n    (input_stream/1964309570 var2525))\r\n  (define-fun var482!1 () var1610\r\n    (input_stream/1964309570 var2525!3))\r\n  (define-fun var2525!3 () var2875\r\n    var2875!val!4)\r\n  (define-fun null-var1941 () var1941\r\n    var1941!val!1)\r\n  (define-fun var2092 () Int\r\n    0)\r\n  (define-fun var2805!1 () String\r\n    \"\")\r\n  (define-fun curChar/1964309570 ((x!0 var2875)) Int\r\n    2)\r\n  (define-fun BeginToken/-1085822358 ((x!0 var1610)) Int\r\n    2)\r\n  (define-fun curLexState/1964309570 ((x!0 var2875)) Int\r\n    0)\r\n  (define-fun specialToken/197050796 ((x!0 var1941)) var1941\r\n    var1941!val!1)\r\n  (define-fun jjimageLen/1964309570 ((x!0 var2875)) Int\r\n    0)\r\n  (define-fun jjmatchedKind/1964309570 ((x!0 var2875)) Int\r\n    0)\r\n  (define-fun image/1964309570 ((x!0 var2875)) String\r\n    \"!0!\")\r\n  (define-fun input_stream/1964309570 ((x!0 var2875)) var1610\r\n    var1610!val!0)\r\n  (define-fun jjimage/1964309570 ((x!0 var2875)) String\r\n    \"!0!\")\r\n  (define-fun setLength/1276735992 ((x!0 String) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun jjFillToken/-1355273761 ((x!0 var2875)) var1941\r\n    var1941!val!0)\r\n)\r\n(error \"line 78 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1695744,
            "run_time": 0.03052067756652832,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2875 is 6\r\n; rep: (as @var2875_0 var2875)\r\n; rep: (as @var2875_1 var2875)\r\n; rep: (as @var2875_2 var2875)\r\n; rep: (as @var2875_3 var2875)\r\n; rep: (as @var2875_4 var2875)\r\n; rep: (as @var2875_5 var2875)\r\n; cardinality of var1941 is 2\r\n; rep: (as @var1941_0 var1941)\r\n; rep: (as @var1941_1 var1941)\r\n; cardinality of var1610 is 1\r\n; rep: (as @var1610_0 var1610)\r\n; cardinality of var800 is 3\r\n; rep: (as @var800_0 var800)\r\n; rep: (as @var800_1 var800)\r\n; rep: (as @var800_2 var800)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun input_stream/1964309570 ((_arg_1 var2875)) var1610 (as @var1610_0 var1610))\r\n(define-fun BeginToken/-1085822358 ((_arg_1 var1610)) Int 0)\r\n(define-fun curChar/1964309570 ((_arg_1 var2875)) Int 0)\r\n(define-fun jjimage/1964309570 ((_arg_1 var2875)) String \"\")\r\n(define-fun image/1964309570 ((_arg_1 var2875)) String \"\")\r\n(define-fun setLength/1276735992 ((BOUND_VARIABLE_690 String) (BOUND_VARIABLE_691 Int)) void (as @void_0 void))\r\n(define-fun jjimageLen/1964309570 ((_arg_1 var2875)) Int 0)\r\n(define-fun curLexState/1964309570 ((_arg_1 var2875)) Int 0)\r\n(define-fun jjmatchedKind/1964309570 ((_arg_1 var2875)) Int 0)\r\n(define-fun jjFillToken/-1355273761 ((BOUND_VARIABLE_694 var2875)) var1941 (as @var1941_0 var1941))\r\n(define-fun specialToken/197050796 ((_arg_1 var1941)) var1941 (as @var1941_1 var1941))\r\n(define-fun null-var2875 () var2875 (as @var2875_0 var2875))\r\n(define-fun null-var1941 () var1941 (as @var1941_1 var1941))\r\n(define-fun null-var800 () var800 (as @var800_0 var800))\r\n(define-fun var2525 () var2875 (as @var2875_1 var2875))\r\n(define-fun var2525!1 () var2875 (as @var2875_2 var2875))\r\n(define-fun var2525!2 () var2875 (as @var2875_3 var2875))\r\n(define-fun var2805!1 () String \"\")\r\n(define-fun var2092 () Int 0)\r\n(define-fun var2525!3 () var2875 (as @var2875_4 var2875))\r\n(define-fun var2641 () var800 (as @var800_1 var800))\r\n(define-fun var2935 () var800 (as @var800_2 var800))\r\n(define-fun var2525!4 () var2875 (as @var2875_5 var2875))\r\n(define-fun var2828!1 () var1941 (as @var1941_0 var1941))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35241984,
            "run_time": 0.07750558853149414,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 77 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 78 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153530368,
            "run_time": 0.8669722080230713,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2828!1 () var1941 var1941!22)\r\n  (define-fun var2525!4 () var2875 var2875!20)\r\n  (define-fun var2935 () var800 var800!18)\r\n  (define-fun var2641 () var800 var800!16)\r\n  (define-fun var2525!3 () var2875 var2875!14)\r\n  (define-fun var2525!2 () var2875 var2875!12)\r\n  (define-fun var2525!1 () var2875 var2875!10)\r\n  (define-fun var2525 () var2875 var2875!8)\r\n  (define-fun null-var800 () var800 var800!6)\r\n  (define-fun null-var1941 () var1941 var1941!4)\r\n  (define-fun null-var2875 () var2875 var2875!2)\r\n  (define-fun var1941!4 () var1941 (specialToken/197050796 var1941!22))\r\n  (define-fun var1610!42 () var1610 (input_stream/1964309570 var2875!8))\r\n  (define-fun jjmatchedKind/1964309570 ((x!0 var2875)) Int (ite (= x!0 var2875!20) 0 0))\r\n  (define-fun curLexState/1964309570 ((x!0 var2875)) Int (ite (= x!0 var2875!14) 0 0))\r\n  (define-fun jjimageLen/1964309570 ((x!0 var2875)) Int (ite (= x!0 var2875!14) 0 0))\r\n  (define-fun image/1964309570 ((x!0 var2875)) String (ite (= x!0 var2875!12) \"\\u{0}\" \"\"))\r\n  (define-fun jjimage/1964309570 ((x!0 var2875)) String (ite (= x!0 var2875!10) \"\\u{0}\" \"\"))\r\n  (define-fun curChar/1964309570 ((x!0 var2875)) Int (ite (= x!0 var2875!10) 20 0))\r\n  (define-fun BeginToken/-1085822358 ((x!0 var1610)) Int (ite (= x!0 var1610!42) 20 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 11,
        "assertion_count": 25,
        "api_sequence": [
            "<java.lang.StringBuilder: void setLength(int)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void setLength(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCCParserTokenManager",
            "r27 = null",
            "i63 = 0",
            "$r28 = r0.<org.javacc.parser.JavaCCParserTokenManager: org.javacc.parser.JavaCharStream input_stream>",
            "$c64 = virtualinvoke $r28.<org.javacc.parser.JavaCharStream: char BeginToken()>()",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: char curChar> = $c64",
            "goto [?= $r1 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder jjimage>]",
            "$r1 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder jjimage>",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image> = $r1",
            "$r2 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image>",
            "virtualinvoke $r2.<java.lang.StringBuilder: void setLength(int)>(0)",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int jjimageLen> = 0",
            "$i0 = r0.<org.javacc.parser.JavaCCParserTokenManager: int curLexState>",
            "tableswitch($i0) {     case 0: goto $r20 = r0.<org.javacc.parser.JavaCCParserTokenManager: org.javacc.parser.JavaCharStream input_stream>;     case 1: goto r0.<org.javacc.parser.JavaCCParserTokenManager: int jjmatchedKind> = 2147483647;     case 2: goto r0.<org.javacc.parser.JavaCCParserTokenManager: int jjmatchedKind> = 2147483647;     case 3: goto r0.<org.javacc.parser.JavaCCParserTokenManager: int jjmatchedKind> = 2147483647;     case 4: goto r0.<org.javacc.parser.JavaCCParserTokenManager: int jjmatchedKind> = 2147483647;     default: goto $i65 = r0.<org.javacc.parser.JavaCCParserTokenManager: int jjmatchedKind>; }",
            "$r20 = r0.<org.javacc.parser.JavaCCParserTokenManager: org.javacc.parser.JavaCharStream input_stream>",
            "$r25 := @caughtexception",
            "goto [?= $r28 = r0.<org.javacc.parser.JavaCCParserTokenManager: org.javacc.parser.JavaCharStream input_stream>]",
            "$r28 = r0.<org.javacc.parser.JavaCCParserTokenManager: org.javacc.parser.JavaCharStream input_stream>",
            "$r26 := @caughtexception",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int jjmatchedKind> = 0",
            "r29 = virtualinvoke r0.<org.javacc.parser.JavaCCParserTokenManager: org.javacc.parser.Token jjFillToken()>()",
            "r29.<org.javacc.parser.Token: org.javacc.parser.Token specialToken> = r27",
            "return r29"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParserTokenManager__SwitchTo__848150611\\2346.smt2",
        "z3": {
            "memory": 31313920,
            "run_time": 0.06013679504394531,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1877:\r\n  ;;   var1877!val!0 var1877!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1877!val!0 () var1877)\r\n  (declare-fun var1877!val!1 () var1877)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1877)) (or (= x var1877!val!0) (= x var1877!val!1)))\r\n  ;; -----------\r\n  (define-fun var1243 () String\r\n    (str.++ var1978!1 \"Error: Ignoring invalid lexical state : \"))\r\n  (define-fun var1015 () Int\r\n    (- 1))\r\n  (define-fun var2602 () String\r\n    (str.++ var1978!1\r\n        \"Error: Ignoring invalid lexical state : \"\r\n        (str.from_int var1015)\r\n        \". State unchanged.\"))\r\n  (define-fun var1131 () String\r\n    (str.++ var1978!1\r\n        \"Error: Ignoring invalid lexical state : \"\r\n        (str.from_int var1015)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun null-var1877 () var1877\r\n    var1877!val!1)\r\n  (define-fun var1243!1 () String\r\n    \"Error: Ignoring invalid lexical state : \")\r\n  (define-fun var1546 () String\r\n    (str.++ var1978!1\r\n        \"Error: Ignoring invalid lexical state : \"\r\n        (str.from_int var1015)\r\n        \". State unchanged.\"))\r\n  (define-fun var371 () var3360\r\n    var3360-init)\r\n  (define-fun var1978 () String\r\n    String-init)\r\n  (define-fun var1504 () var1877\r\n    var1877!val!0)\r\n  (define-fun var1978!1 () String\r\n    \"\")\r\n  (define-fun var1131!1 () String\r\n    \"Error: Ignoring invalid lexical state : . State unchanged.\")\r\n  (define-fun var1978!2 () String\r\n    \"Error: Ignoring invalid lexical state : \")\r\n  (define-fun var3360-init () var3360\r\n    var3360!val!0)\r\n  (define-fun var2602!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var371!1 () var3360\r\n    var3360!val!0)\r\n  (define-fun var3071 () Int\r\n    0)\r\n  (define-fun <init>/-2103077939 ((x!0 var3360) (x!1 String) (x!2 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 55 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.029756546020507812,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1877 is 2\r\n; rep: (as @var1877_0 var1877)\r\n; rep: (as @var1877_1 var1877)\r\n; cardinality of var3360 is 1\r\n; rep: (as @var3360_0 var3360)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3360-init () var3360 (as @var3360_0 var3360))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-2103077939 ((BOUND_VARIABLE_972 var3360) (BOUND_VARIABLE_973 String) (BOUND_VARIABLE_974 Int)) void (as @void_0 void))\r\n(define-fun null-var1877 () var1877 (as @var1877_0 var1877))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var1504 () var1877 (as @var1877_1 var1877))\r\n(define-fun var1015 () Int (- 1))\r\n(define-fun var1978!1 () String \"\")\r\n(define-fun var1978!2 () String \"Error: Ignoring invalid lexical state : \")\r\n(define-fun var1243!1 () String \"Error: Ignoring invalid lexical state : \")\r\n(define-fun var1131!1 () String \"Error: Ignoring invalid lexical state : . State unchanged.\")\r\n(define-fun var371!1 () var3360 (as @var3360_0 var3360))\r\n(define-fun var2602!1 () String \"\")\r\n(define-fun var3071 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37507072,
            "run_time": 0.12206864356994629,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1877:\n  ;;   var1877!val!0 var1877!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1877!val!0 () var1877)\n  (declare-fun var1877!val!1 () var1877)\n  ;; cardinality constraint:\n  (forall ((x var1877)) (or (= x var1877!val!0) (= x var1877!val!1)))\n  ;; -----------\n  (define-fun var371 () var3360\n    var3360-init)\n  (define-fun var1015 () Int\n    (- 1))\n  (define-fun var1243!1 () String\n    \"Error: Ignoring invalid lexical state : \")\n  (define-fun var1131 () String\n    (str.++ var1978!1\n        \"Error: Ignoring invalid lexical state : \"\n        (str.from_int var1015)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1546 () String\n    (str.++ var1978!1\n        \"Error: Ignoring invalid lexical state : \"\n        (str.from_int var1015)\n        \". State unchanged.\"))\n  (define-fun null-Int () Int\n    0)\n  (define-fun null-var1877 () var1877\n    var1877!val!1)\n  (define-fun var1978 () String\n    String-init)\n  (define-fun var1978!2 () String\n    \"Error: Ignoring invalid lexical state : \")\n  (define-fun var1243 () String\n    (str.++ var1978!1 \"Error: Ignoring invalid lexical state : \"))\n  (define-fun var2602 () String\n    (str.++ var1978!1\n        \"Error: Ignoring invalid lexical state : \"\n        (str.from_int var1015)\n        \". State unchanged.\"))\n  (define-fun var1504 () var1877\n    var1877!val!0)\n  (define-fun var1978!1 () String\n    \"\")\n  (define-fun var1131!1 () String\n    \"Error: Ignoring invalid lexical state : . State unchanged.\")\n  (define-fun var3360-init () var3360\n    var3360!val!0)\n  (define-fun var2602!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var371!1 () var3360\n    var3360!val!0)\n  (define-fun var3071 () Int\n    0)\n  (define-fun <init>/-2103077939 ((x!0 var3360) (x!1 String) (x!2 Int)) void\n    void!val!0)\n)\n(error \"line 55 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181436416,
            "run_time": 1.022050142288208,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1131!1 () String \"Error: Ignoring invalid lexical state : . State unchanged.\")\r\n  (define-fun var1243!1 () String \"Error: Ignoring invalid lexical state : \")\r\n  (define-fun var1978!2 () String \"Error: Ignoring invalid lexical state : \")\r\n  (define-fun var1978!1 () String \"\")\r\n  (define-fun var1015 () Int (- 6))\r\n  (define-fun var1504 () var1877 var1877!84)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var1877 () var1877 var1877!82)\r\n  (define-fun abbrev_106 ((x!0 Int)) String (ite (= x!0 0) \"Error: Ignoring invalid lexical state : \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r6 := @this: org.javacc.parser.JavaCCParserTokenManager",
            "i0 := @parameter0: int",
            "if i0 >= 5 goto $r0 = new org.javacc.parser.TokenMgrError",
            "if i0 >= 0 goto r6.<org.javacc.parser.JavaCCParserTokenManager: int curLexState> = i0",
            "$r0 = new org.javacc.parser.TokenMgrError",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: Ignoring invalid lexical state : \")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\". State unchanged.\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<org.javacc.parser.TokenMgrError: void <init>(java.lang.String,int)>($r5, 2)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParser__ResultType__1872188680\\2846.smt2",
        "z3": {
            "memory": 26976256,
            "run_time": 0.08624053001403809,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var560:\r\n  ;;   var560!val!1 var560!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var560!val!1 () var560)\r\n  (declare-fun var560!val!0 () var560)\r\n  ;; cardinality constraint:\r\n  (forall ((x var560)) (or (= x var560!val!1) (= x var560!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1163:\r\n  ;;   var1163!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1163!val!0 () var1163)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1163)) (= x var1163!val!0))\r\n  ;; -----------\r\n  ;; universe for var1380:\r\n  ;;   var1380!val!2 var1380!val!3 var1380!val!0 var1380!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1380!val!2 () var1380)\r\n  (declare-fun var1380!val!3 () var1380)\r\n  (declare-fun var1380!val!0 () var1380)\r\n  (declare-fun var1380!val!1 () var1380)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1380))\r\n          (or (= x var1380!val!2)\r\n              (= x var1380!val!3)\r\n              (= x var1380!val!0)\r\n              (= x var1380!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var1380 () var1380\r\n    var1380!val!1)\r\n  (define-fun var535!1 () var1380\r\n    var1380!val!2)\r\n  (define-fun var530 () String\r\n    String-init)\r\n  (define-fun var969 () String\r\n    (str.++ var530!1\r\n        (image/197050796 (getToken/1999213251 var535 1))\r\n        \" is invalid in this context\"))\r\n  (define-fun var2880 () var1163\r\n    (getToken/1999213251 var535 1))\r\n  (define-fun var2638 () var1163\r\n    (getToken/1999213251 var535!2 0))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1470 () String\r\n    (str.++ var530!1 (image/197050796 (getToken/1999213251 var535 1))))\r\n  (define-fun var831 () String\r\n    (image/197050796 (getToken/1999213251 var535 1)))\r\n  (define-fun var1341 () Int\r\n    (- 1))\r\n  (define-fun var762 () Int\r\n    (- 1))\r\n  (define-fun var535 () var1380\r\n    var1380!val!0)\r\n  (define-fun var2689 () Int\r\n    (jj_ntk/549669294 var535))\r\n  (define-fun var3033 () var560\r\n    var560!val!0)\r\n  (define-fun var1768 () Bool\r\n    (isAllowed/-930151217 var535!2 (getToken/1999213251 var535 1)))\r\n  (define-fun var2281 () String\r\n    (image/197050796 (getToken/1999213251 var535 1)))\r\n  (define-fun var3591 () var1163\r\n    (getToken/1999213251 var535 1))\r\n  (define-fun var3937 () String\r\n    (str.++ var530!1\r\n        (image/197050796 (getToken/1999213251 var535 1))\r\n        \" is invalid in this context\"))\r\n  (define-fun var1015 () Int\r\n    (jj_ntk/549669294 var535!1))\r\n  (define-fun var3447 () Int\r\n    (jj_ntk/-941081802 var535))\r\n  (define-fun var3350 () Int\r\n    (jj_ntk/-941081802 var535!1))\r\n  (define-fun null-var560 () var560\r\n    var560!val!1)\r\n  (define-fun var535!2 () var1380\r\n    var1380!val!3)\r\n  (define-fun var1130 () var1839\r\n    var1839-init)\r\n  (define-fun var530!1 () String\r\n    \"\")\r\n  (define-fun var1470!1 () String\r\n    \" is invalid in this context\")\r\n  (define-fun var530!2 () String\r\n    \"\")\r\n  (define-fun var2747 () Int\r\n    0)\r\n  (define-fun var1839-init () var1839\r\n    var1839!val!0)\r\n  (define-fun var969!1 () String\r\n    \"\")\r\n  (define-fun var1130!1 () var1839\r\n    var1839!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2356 () Int\r\n    0)\r\n  (define-fun jj_ntk/549669294 ((x!0 var1380)) Int\r\n    (- 1))\r\n  (define-fun jj_ntk/-941081802 ((x!0 var1380)) Int\r\n    (ite (= x!0 var1380!val!2) 121\r\n      78))\r\n  (define-fun getToken/1999213251 ((x!0 var1380) (x!1 Int)) var1163\r\n    var1163!val!0)\r\n  (define-fun isAllowed/-930151217 ((x!0 var1380) (x!1 var1163)) Bool\r\n    false)\r\n  (define-fun image/197050796 ((x!0 var1163)) String\r\n    \"\")\r\n  (define-fun jj_consume_token/1648575159 ((x!0 var1380) (x!1 Int)) var1163\r\n    var1163!val!0)\r\n  (define-fun <init>/1157378735 ((x!0 var1839) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 100 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015053510665893555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1380 is 4\r\n; rep: (as @var1380_0 var1380)\r\n; rep: (as @var1380_1 var1380)\r\n; rep: (as @var1380_2 var1380)\r\n; rep: (as @var1380_3 var1380)\r\n; cardinality of var560 is 2\r\n; rep: (as @var560_0 var560)\r\n; rep: (as @var560_1 var560)\r\n; cardinality of var1163 is 1\r\n; rep: (as @var1163_0 var1163)\r\n; cardinality of var1839 is 1\r\n; rep: (as @var1839_0 var1839)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getToken/1999213251 ((_arg_1 var1380) (_arg_2 Int)) var1163 (as @var1163_0 var1163))\r\n(define-fun jj_ntk/549669294 ((_arg_1 var1380)) Int (- 1))\r\n(define-fun jj_ntk/-941081802 ((_arg_1 var1380)) Int (ite (= (as @var1380_1 var1380) _arg_1) 78 121))\r\n(define-fun jj_consume_token/1648575159 ((BOUND_VARIABLE_814 var1380) (BOUND_VARIABLE_815 Int)) var1163 (as @var1163_0 var1163))\r\n(define-fun image/197050796 ((BOUND_VARIABLE_818 var1163)) String \"\")\r\n(define-fun isAllowed/-930151217 ((_arg_1 var1380) (_arg_2 var1163)) Bool false)\r\n(define-fun var1839-init () var1839 (as @var1839_0 var1839))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1157378735 ((BOUND_VARIABLE_821 var1839) (BOUND_VARIABLE_822 String)) void (as @void_0 void))\r\n(define-fun null-var1380 () var1380 (as @var1380_0 var1380))\r\n(define-fun null-var560 () var560 (as @var560_0 var560))\r\n(define-fun var535 () var1380 (as @var1380_1 var1380))\r\n(define-fun var3033 () var560 (as @var560_1 var560))\r\n(define-fun var535!1 () var1380 (as @var1380_2 var1380))\r\n(define-fun var2747 () Int 0)\r\n(define-fun var535!2 () var1380 (as @var1380_3 var1380))\r\n(define-fun var2356 () Int 0)\r\n(define-fun var530!1 () String \"\")\r\n(define-fun var530!2 () String \"\")\r\n(define-fun var1470!1 () String \" is invalid in this context\")\r\n(define-fun var1130!1 () var1839 (as @var1839_0 var1839))\r\n(define-fun var969!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35192832,
            "run_time": 0.07762765884399414,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var560:\n  ;;   var560!val!1 var560!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var560!val!1 () var560)\n  (declare-fun var560!val!0 () var560)\n  ;; cardinality constraint:\n  (forall ((x var560)) (or (= x var560!val!1) (= x var560!val!0)))\n  ;; -----------\n  ;; universe for var1163:\n  ;;   var1163!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1163!val!0 () var1163)\n  ;; cardinality constraint:\n  (forall ((x var1163)) (= x var1163!val!0))\n  ;; -----------\n  ;; universe for var1380:\n  ;;   var1380!val!2 var1380!val!3 var1380!val!0 var1380!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1380!val!2 () var1380)\n  (declare-fun var1380!val!3 () var1380)\n  (declare-fun var1380!val!0 () var1380)\n  (declare-fun var1380!val!1 () var1380)\n  ;; cardinality constraint:\n  (forall ((x var1380))\n          (or (= x var1380!val!2)\n              (= x var1380!val!3)\n              (= x var1380!val!0)\n              (= x var1380!val!1)))\n  ;; -----------\n  (define-fun var2689 () Int\n    (jj_ntk/549669294 var535))\n  (define-fun null-var1380 () var1380\n    var1380!val!1)\n  (define-fun var535!1 () var1380\n    var1380!val!2)\n  (define-fun var762 () Int\n    (- 1))\n  (define-fun var530 () String\n    String-init)\n  (define-fun var1470 () String\n    (str.++ var530!1 (image/197050796 (getToken/1999213251 var535 1))))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1768 () Bool\n    (isAllowed/-930151217 var535!2 (getToken/1999213251 var535 1)))\n  (define-fun var831 () String\n    (image/197050796 (getToken/1999213251 var535 1)))\n  (define-fun var3591 () var1163\n    (getToken/1999213251 var535 1))\n  (define-fun var969 () String\n    (str.++ var530!1\n        (image/197050796 (getToken/1999213251 var535 1))\n        \" is invalid in this context\"))\n  (define-fun var1015 () Int\n    (jj_ntk/549669294 var535!1))\n  (define-fun var535 () var1380\n    var1380!val!0)\n  (define-fun var2281 () String\n    (image/197050796 (getToken/1999213251 var535 1)))\n  (define-fun var3033 () var560\n    var560!val!0)\n  (define-fun var3447 () Int\n    (jj_ntk/-941081802 var535))\n  (define-fun var3350 () Int\n    (jj_ntk/-941081802 var535!1))\n  (define-fun var1130 () var1839\n    var1839-init)\n  (define-fun var3937 () String\n    (str.++ var530!1\n        (image/197050796 (getToken/1999213251 var535 1))\n        \" is invalid in this context\"))\n  (define-fun var2880 () var1163\n    (getToken/1999213251 var535 1))\n  (define-fun var2638 () var1163\n    (getToken/1999213251 var535!2 0))\n  (define-fun null-var560 () var560\n    var560!val!1)\n  (define-fun var535!2 () var1380\n    var1380!val!3)\n  (define-fun var1341 () Int\n    (- 1))\n  (define-fun var530!1 () String\n    \"\")\n  (define-fun var1470!1 () String\n    \" is invalid in this context\")\n  (define-fun var530!2 () String\n    \"\")\n  (define-fun var2747 () Int\n    0)\n  (define-fun var1839-init () var1839\n    var1839!val!0)\n  (define-fun var969!1 () String\n    \"\")\n  (define-fun var1130!1 () var1839\n    var1839!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2356 () Int\n    0)\n  (define-fun jj_ntk/549669294 ((x!0 var1380)) Int\n    (- 1))\n  (define-fun jj_ntk/-941081802 ((x!0 var1380)) Int\n    (ite (= x!0 var1380!val!2) 121\n      78))\n  (define-fun getToken/1999213251 ((x!0 var1380) (x!1 Int)) var1163\n    var1163!val!0)\n  (define-fun isAllowed/-930151217 ((x!0 var1380) (x!1 var1163)) Bool\n    false)\n  (define-fun image/197050796 ((x!0 var1163)) String\n    \"\")\n  (define-fun jj_consume_token/1648575159 ((x!0 var1380) (x!1 Int)) var1163\n    var1163!val!0)\n  (define-fun <init>/1157378735 ((x!0 var1839) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 100 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177975296,
            "run_time": 1.0076510906219482,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var560/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCParser__ResultType__1872188680\\2846.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_26_3 =\r\n     concat(var530!2, \" is invalid in this context\")\r\n   var1470!1 =\r\n     concat(var530!2, \" is invalid in this context\")\r\n\r\n751ms\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 27,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCCParser",
            "r16 := @parameter0: java.util.List",
            "r1 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(1)",
            "if r16 != null goto $i0 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i0 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i16 = (int) -1",
            "if $i0 != $i16 goto $i10 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i10 = specialinvoke r0.<org.javacc.parser.JavaCCParser: int jj_ntk()>()",
            "goto [?= (branch)]",
            "lookupswitch($i10) {     case 30: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 32: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 35: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 37: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 41: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 48: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 55: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 57: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 66: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 78: goto specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(78);     case 81: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 110: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 151: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     default: goto $r13 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>; }",
            "specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(78)",
            "$i1 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i18 = (int) -1",
            "if $i1 != $i18 goto $i11 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i11 = specialinvoke r0.<org.javacc.parser.JavaCCParser: int jj_ntk()>()",
            "goto [?= (branch)]",
            "lookupswitch($i11) {     case 121: goto specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(121);     default: goto $r8 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>; }",
            "specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(121)",
            "goto [?= $r17 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(0)]",
            "$r17 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(0)",
            "r18 = r1",
            "$r19 = r18.<org.javacc.parser.Token: java.lang.String image>",
            "$z0 = specialinvoke r0.<org.javacc.parser.JavaCCParser: boolean isAllowed(org.javacc.parser.Token)>(r18)",
            "if $z0 == 0 goto $r24 = new org.javacc.parser.ParseException",
            "$r24 = new org.javacc.parser.ParseException",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = r18.<org.javacc.parser.Token: java.lang.String image>",
            "$r5 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is invalid in this context\")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r24.<org.javacc.parser.ParseException: void <init>(java.lang.String)>($r7)",
            "throw $r24"
        ]
    },
    {
        "filename": "smt\\method-JavaCCInterpreter__runTokenizer__981280399\\59.smt2",
        "z3": {
            "memory": 32632832,
            "run_time": 0.16515207290649414,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var157:\r\n  ;;   var157!val!1 var157!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var157!val!1 () var157)\r\n  (declare-fun var157!val!0 () var157)\r\n  ;; cardinality constraint:\r\n  (forall ((x var157)) (or (= x var157!val!1) (= x var157!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3710:\r\n  ;;   var3710!val!0 var3710!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3710!val!0 () var3710)\r\n  (declare-fun var3710!val!1 () var3710)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3710)) (or (= x var3710!val!0) (= x var3710!val!1)))\r\n  ;; -----------\r\n  (define-fun var545 () String\r\n    (str.++ var3551!1\r\n        \"Detected \"\r\n        (str.from_int var5_get_error_count/-1557085957)\r\n        \" errors and \"\r\n        (str.from_int var5_get_warning_count/2113508455)\r\n        \" warnings.\"))\r\n  (define-fun null-var3710 () var3710\r\n    var3710!val!1)\r\n  (define-fun var1293 () Int\r\n    var5_get_warning_count/2113508455)\r\n  (define-fun var3286!1 () String\r\n    \"Detected  errors and \")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var5_get_error_count/-1557085957 () Int\r\n    (- 1))\r\n  (define-fun var13 () String\r\n    (str.++ var3551!1 \"Detected \"))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2695 () var1818\r\n    var2884-out)\r\n  (define-fun var245 () String\r\n    (str.++ var3551!1 \"Detected \" (str.from_int var5_get_error_count/-1557085957)))\r\n  (define-fun var2025 () var3928\r\n    var3928-init)\r\n  (define-fun var3691 () String\r\n    (str.++ var3551!1\r\n        \"Detected \"\r\n        (str.from_int var5_get_error_count/-1557085957)\r\n        \" errors and \"\r\n        (str.from_int var5_get_warning_count/2113508455)\r\n        \" warnings.\"))\r\n  (define-fun var1721 () String\r\n    \"B\")\r\n  (define-fun var3503 () var157\r\n    var157!val!0)\r\n  (define-fun var3551 () String\r\n    String-init)\r\n  (define-fun var184 () String\r\n    (str.++ var3551!1\r\n        \"Detected \"\r\n        (str.from_int var5_get_error_count/-1557085957)\r\n        \" errors and \"\r\n        (str.from_int var5_get_warning_count/2113508455)))\r\n  (define-fun var2277 () var3710\r\n    var3710!val!0)\r\n  (define-fun var13!1 () String\r\n    \"Detected \")\r\n  (define-fun var255 () String\r\n    \"A\")\r\n  (define-fun var3068 () Int\r\n    var5_get_error_count/-1557085957)\r\n  (define-fun var3286 () String\r\n    (str.++ var3551!1\r\n        \"Detected \"\r\n        (str.from_int var5_get_error_count/-1557085957)\r\n        \" errors and \"))\r\n  (define-fun null-var157 () var157\r\n    var157!val!1)\r\n  (define-fun var3446 () var1349\r\n    var1349-init)\r\n  (define-fun var3551!1 () String\r\n    \"\")\r\n  (define-fun var5_get_warning_count/2113508455 () Int\r\n    0)\r\n  (define-fun var184!1 () String\r\n    \"Detected  errors and 0 warnings.\")\r\n  (define-fun var245!1 () String\r\n    \"Detected  errors and \")\r\n  (define-fun var3551!2 () String\r\n    \"Detected \")\r\n  (define-fun var545!1 () String\r\n    \"\")\r\n  (define-fun var2622 () Int\r\n    0)\r\n  (define-fun var2884-out () var1818\r\n    var1818!val!0)\r\n  (define-fun var1349-init () var1349\r\n    var1349!val!0)\r\n  (define-fun var3928-init () var3928\r\n    var3928!val!0)\r\n  (define-fun var2695!1 () var1818\r\n    var1818!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun println/1773605060 ((x!0 var1818) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun var2884_exit/142839841 ((x!0 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 84 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12791808,
            "run_time": 0.09369635581970215,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var157 is 2\r\n; rep: (as @var157_0 var157)\r\n; rep: (as @var157_1 var157)\r\n; cardinality of var3042 is 1\r\n; rep: (as @var3042_0 var3042)\r\n; cardinality of var3928 is 1\r\n; rep: (as @var3928_0 var3928)\r\n; cardinality of var1349 is 1\r\n; rep: (as @var1349_0 var1349)\r\n; cardinality of var3710 is 2\r\n; rep: (as @var3710_0 var3710)\r\n; rep: (as @var3710_1 var3710)\r\n; cardinality of var1818 is 1\r\n; rep: (as @var1818_0 var1818)\r\n; cardinality of var2884 is 1\r\n; rep: (as @var2884_0 var2884)\r\n; cardinality of var5 is 1\r\n; rep: (as @var5_0 var5)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3928-init () var3928 (as @var3928_0 var3928))\r\n(define-fun var1349-init () var1349 (as @var1349_0 var1349))\r\n(define-fun String-init () String \"\")\r\n(define-fun var5_get_error_count/-1557085957 () Int (- 1))\r\n(define-fun var5_get_warning_count/2113508455 () Int 0)\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_1862 var1818) (BOUND_VARIABLE_1863 String)) void (as @void_0 void))\r\n(define-fun var2884_exit/142839841 ((BOUND_VARIABLE_1866 Int)) void (as @void_0 void))\r\n(define-fun null-var157 () var157 (as @var157_0 var157))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3710 () var3710 (as @var3710_0 var3710))\r\n(define-fun var2884-out () var1818 (as @var1818_0 var1818))\r\n(define-fun var3503 () var157 (as @var157_1 var157))\r\n(define-fun var255 () String \"\")\r\n(define-fun var1721 () String \"\")\r\n(define-fun var2277 () var3710 (as @var3710_1 var3710))\r\n(define-fun var3551!1 () String \"\")\r\n(define-fun var3551!2 () String \"Detected \")\r\n(define-fun var13!1 () String \"Detected \")\r\n(define-fun var245!1 () String \"Detected  errors and \")\r\n(define-fun var3286!1 () String \"Detected  errors and \")\r\n(define-fun var184!1 () String \"Detected  errors and 0 warnings.\")\r\n(define-fun var2695!1 () var1818 (as @var1818_0 var1818))\r\n(define-fun var545!1 () String \"\")\r\n(define-fun var2622 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 201535488,
            "run_time": 60.011510133743286,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 205164544,
            "run_time": 1.0732214450836182,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var184!1 () String \"Detected  errors and  warnings.\")\r\n  (define-fun var3286!1 () String \"Detected  errors and \")\r\n  (define-fun var245!1 () String \"Detected  errors and \")\r\n  (define-fun var13!1 () String \"Detected \")\r\n  (define-fun var3551!2 () String \"Detected \")\r\n  (define-fun var3551!1 () String \"\")\r\n  (define-fun var2277 () var3710 var3710!84)\r\n  (define-fun var1721 () String \" \")\r\n  (define-fun var255 () String \" \")\r\n  (define-fun var3503 () var157 var157!82)\r\n  (define-fun null-var3710 () var3710 var3710!80)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var157 () var157 var157!78)\r\n  (define-fun var5_get_warning_count/2113508455 () Int (- 6))\r\n  (define-fun var5_get_error_count/-1557085957 () Int (- 6))\r\n  (define-fun abbrev_113 ((x!0 Int)) String (ite (= x!0 0) \"Detected  errors and \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r26 := @this: JavaCCInterpreter",
            "r2 := @parameter0: java.lang.String",
            "r5 := @parameter1: java.lang.String",
            "$r0 = new org.javacc.parser.JavaCCParser",
            "$r1 = new java.io.StringReader",
            "$r17 := @caughtexception",
            "$r19 = <java.lang.System: java.io.PrintStream out>",
            "$r18 = new java.lang.StringBuilder",
            "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()",
            "$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Detected \")",
            "$i4 = staticinvoke <org.javacc.parser.JavaCCErrors: int get_error_count()>()",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" errors and \")",
            "$i5 = staticinvoke <org.javacc.parser.JavaCCErrors: int get_warning_count()>()",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" warnings.\")",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r19.<java.io.PrintStream: void println(java.lang.String)>($r25)",
            "staticinvoke <java.lang.System: void exit(int)>(1)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPNodeFiles__generateDefaultVisitor__-998557859\\992.smt2",
        "z3": {
            "memory": 33169408,
            "run_time": 60.007253646850586,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 70434816,
            "run_time": 13.703944206237793,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(\r\n; cardinality of var3854 is 2\r\n; rep: (as @var3854_0 var3854)\r\n; rep: (as @var3854_1 var3854)\r\n; cardinality of var2568 is 1\r\n; rep: (as @var2568_0 var2568)\r\n; cardinality of var2922 is 1\r\n; rep: (as @var2922_0 var2922)\r\n; cardinality of var2639 is 1\r\n; rep: (as @var2639_0 var2639)\r\n; cardinality of var3266 is 1\r\n; rep: (as @var3266_0 var3266)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2568_defaultVisitorClass/-1441149525 () String \"\")\r\n(define-fun var2639_getNodeNames/-49238214 () var2922 (as @var2922_0 var2922))\r\n(define-fun String-init () String \"\")\r\n(define-fun var2568_visitorClass/-25171238 () String \"\")\r\n(define-fun println/-1226480079 ((BOUND_VARIABLE_77100 var3854) (BOUND_VARIABLE_77101 String)) void (as @void_0 void))\r\n(define-fun var2568_getVisitorArgumentType/1105650101 () String \"\")\r\n(define-fun var2568_getVisitorReturnType/1747350434 () String \"\")\r\n(define-fun var3266_getMulti/-1858061690 () Bool false)\r\n(define-fun null-var3854 () var3854 (as @var3854_0 var3854))\r\n(define-fun var1426 () var3854 (as @var3854_1 var3854))\r\n(define-fun var2389!1 () String \"\")\r\n(define-fun var2389!2 () String \"class \")\r\n(define-fun var2666!1 () String \"class \")\r\n(define-fun var1613!1 () String \"class  : public \")\r\n(define-fun var3396!1 () String \"class  : public \")\r\n(define-fun var1081!1 () String \"class  : public  {\")\r\n(define-fun var1426!1 () var3854 (as @var3854_0 var3854))\r\n(define-fun var880!1 () String \"\")\r\n(define-fun var1426!2 () var3854 (as @var3854_0 var3854))\r\n(define-fun var134 () String \"\")\r\n(define-fun var1365!1 () String \"\")\r\n(define-fun var1365!2 () String \"  virtual \")\r\n(define-fun var1850!1 () String \"  virtual \")\r\n(define-fun var1404!1 () String \"  virtual  defaultVisit(const SimpleNode *node, \")\r\n(define-fun var3249!1 () String \"  virtual  defaultVisit(const SimpleNode *node, \")\r\n(define-fun var3668!1 () String \"  virtual  defaultVisit(const SimpleNode *node,  data) = 0;\")\r\n(define-fun var1426!3 () var3854 (as @var3854_0 var3854))\r\n(define-fun var1925!1 () String \"\")\r\n(define-fun var2193!1 () String \"\")\r\n(define-fun var2193!2 () String \"  virtual \")\r\n(define-fun var2206!1 () String \"  virtual \")\r\n(define-fun var3331!1 () String \"  virtual  visit(const SimpleNode *node, \")\r\n(define-fun var1220!1 () String \"  virtual  visit(const SimpleNode *node, \")\r\n(define-fun var3288!1 () String \"  virtual  visit(const SimpleNode *node,  data) {\")\r\n(define-fun var1426!4 () var3854 (as @var3854_0 var3854))\r\n(define-fun var1198!1 () String \"\")\r\n(define-fun var3075!1 () String \"\")\r\n(define-fun var3075!2 () String \"    \")\r\n(define-fun var1316!1 () String \"    return \")\r\n(define-fun var772!1 () String \"    return defaultVisit(node, data);\")\r\n(define-fun var1426!5 () var3854 (as @var3854_0 var3854))\r\n(define-fun var1038!1 () String \"\")\r\n(define-fun var1426!6 () var3854 (as @var3854_0 var3854))\r\n(define-fun var2038 () String \"\")\r\n(define-fun var1309!1 () String \"\")\r\n(define-fun var1309!2 () String \"  ~\")\r\n(define-fun var543!1 () String \"  ~\")\r\n(define-fun var3018!1 () String \"  ~() { }\")\r\n(define-fun var1426!7 () var3854 (as @var3854_0 var3854))\r\n(define-fun var3074!1 () String \"\")\r\n(define-fun var1426!8 () var3854 (as @var3854_0 var3854))\r\n(define-fun var2360 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35868672,
            "run_time": 0.09015011787414551,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 207 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 208 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 464044032,
            "run_time": 1.7812507152557373,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_132_2, all_132_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPNodeFiles__generateDefaultVisitor__-998557859\\992.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming that recursive function trim-left is partial\r\nWarning: assuming that recursive function trim-right is partial\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n1446ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 71,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: java.lang.String trim()>",
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 5,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 21,
            "<java.lang.StringBuilder: java.lang.String toString()>": 5,
            "<java.lang.String: java.lang.String trim()>": 1,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.io.PrintWriter",
            "r0 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String defaultVisitorClass()>()",
            "r1 = staticinvoke <org.javacc.jjtree.ASTNodeDescriptor: java.util.List getNodeNames()>()",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"class \")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" : public \")",
            "$r6 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String visitorClass()>()",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" {\")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r10)",
            "r11 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String getVisitorArgumentType()>()",
            "r12 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String getVisitorReturnType()>()",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(\"public:\")",
            "$r13 = new java.lang.StringBuilder",
            "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  virtual \")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" defaultVisit(const SimpleNode *node, \")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" data) = 0;\")",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r19)",
            "$r20 = new java.lang.StringBuilder",
            "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  virtual \")",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" visit(const SimpleNode *node, \")",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" data) {\")",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r26)",
            "$r27 = new java.lang.StringBuilder",
            "specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()",
            "$r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")",
            "$r28 = virtualinvoke r12.<java.lang.String: java.lang.String trim()>()",
            "$z0 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>(\"void\")",
            "if $z0 == 0 goto $r63 = \"return \"",
            "$r63 = \"return \"",
            "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63)",
            "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"defaultVisit(node, data);\")",
            "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r32)",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(\"}\")",
            "$z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getMulti()>()",
            "if $z1 == 0 goto $r33 = new java.lang.StringBuilder",
            "$r33 = new java.lang.StringBuilder",
            "specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()",
            "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  ~\")",
            "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"() { }\")",
            "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r37)",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(\"};\")",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CPPFiles__genFile__-302761823\\665.smt2",
        "z3": {
            "memory": 32301056,
            "run_time": 60.008766174316406,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8876032,
            "run_time": 0.029300451278686523,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var465 is 1\r\n; rep: (as @var465_0 var465)\r\n; cardinality of var1779 is 1\r\n; rep: (as @var1779_0 var1779)\r\n; cardinality of var730 is 1\r\n; rep: (as @var730_0 var730)\r\n; cardinality of var1970 is 1\r\n; rep: (as @var1970_0 var1970)\r\n; cardinality of var1011 is 2\r\n; rep: (as @var1011_0 var1011)\r\n; rep: (as @var1011_1 var1011)\r\n; cardinality of var3465 is 1\r\n; rep: (as @var3465_0 var3465)\r\n; cardinality of var499 is 1\r\n; rep: (as @var499_0 var499)\r\n; cardinality of var2294 is 1\r\n; rep: (as @var2294_0 var2294)\r\n; cardinality of var1097 is 1\r\n; rep: (as @var1097_0 var1097)\r\n; cardinality of var3461 is 1\r\n; rep: (as @var3461_0 var3461)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1779-init () var1779 (as @var1779_0 var1779))\r\n(define-fun var730_getOutputDirectory/873146074 () var1779 (as @var1779_0 var1779))\r\n(define-fun <init>/-1833447926 ((BOUND_VARIABLE_1792 var1779) (BOUND_VARIABLE_1793 var1779) (BOUND_VARIABLE_1794 String)) void (as @void_0 void))\r\n(define-fun var1970-init () var1970 (as @var1970_0 var1970))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((_arg_1 String) (_arg_2 var2294)) String \"\")\r\n(define-fun cast-from-var1779-to-var2294 ((_arg_1 var1779)) var2294 (as @var2294_0 var2294))\r\n(define-fun cast-from-var1011-to-var2294 ((BOUND_VARIABLE_1797 var1011)) var2294 (as @var2294_0 var2294))\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_1800 var3465) (BOUND_VARIABLE_1801 String)) void (as @void_0 void))\r\n(define-fun var1097_semantic_error/-498493661 ((BOUND_VARIABLE_1804 String)) void (as @void_0 void))\r\n(define-fun var3461-init () var3461 (as @var3461_0 var3461))\r\n(define-fun <init>/1750087229 ((BOUND_VARIABLE_1807 var3461)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__String__ () (Array Int String) (store ((as const (Array Int String)) \"A\") 0 \"Failed to create file: \"))\r\n(define-fun null-var1011 () var1011 (as @var1011_0 var1011))\r\n(define-fun var499-err () var3465 (as @var3465_0 var3465))\r\n(define-fun var1761 () String \"\")\r\n(define-fun var3621 () String \"\")\r\n(define-fun var1513 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var542!1 () var1779 (as @var1779_0 var1779))\r\n(define-fun var2529!1 () var1779 (as @var1779_0 var1779))\r\n(define-fun var1761!1 () String \"\")\r\n(define-fun var1781 () var1011 (as @var1011_1 var1011))\r\n(define-fun var288!1 () String \"\")\r\n(define-fun var288!2 () String \"Failed to create file: \")\r\n(define-fun var3516!1 () String \"Failed to create file: \")\r\n(define-fun var3231!1 () String \"\")\r\n(define-fun var2396!1 () var3465 (as @var3465_0 var3465))\r\n(define-fun var1953!1 () String \"\")\r\n(define-fun var1914!1 () String \"\")\r\n(define-fun var1914!2 () String \"Could not open file: \")\r\n(define-fun var1758!1 () String \"Could not open file: \")\r\n(define-fun var2099!1 () String \" for writing.\")\r\n(define-fun var2525!1 () String \"\")\r\n(define-fun var731!1 () var3461 (as @var3461_0 var3461))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36966400,
            "run_time": 0.06175971031188965,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 108 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 109 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182960128,
            "run_time": 1.426344394683838,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1011/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.CPPFiles__genFile__-302761823\\665.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2099!1 =\r\n     concat(all_50_2, \" for writing.\")\r\n   var3231!1 =\r\n     concat(all_34_0, rhs)\r\n\r\n1101ms\r\n"
        },
        "undefined_function_count": 12,
        "assertion_count": 26,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r4 := @parameter1: java.lang.String",
            "r5 := @parameter2: java.lang.String[]",
            "$r0 = new java.io.File",
            "$r2 = staticinvoke <org.javacc.parser.Options: java.io.File getOutputDirectory()>()",
            "specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r2, r1)",
            "$r3 = new org.javacc.parser.OutputFile",
            "$r14 := @caughtexception",
            "$r16 = <java.lang.System: java.io.PrintStream err>",
            "$r15 = new java.lang.StringBuilder",
            "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()",
            "$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to create file: \")",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r16.<java.io.PrintStream: void println(java.lang.String)>($r20)",
            "$r21 = new java.lang.StringBuilder",
            "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not open file: \")",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r0)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for writing.\")",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void semantic_error(java.lang.String)>($r25)",
            "$r26 = new java.lang.Error",
            "specialinvoke $r26.<java.lang.Error: void <init>()>()",
            "throw $r26"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.ParseException__initialise__1055862808\\512.smt2",
        "z3": {
            "memory": 33005568,
            "run_time": 60.008326053619385,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.029206514358520508,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1105 is 3\r\n; rep: (as @var1105_0 var1105)\r\n; rep: (as @var1105_1 var1105)\r\n; rep: (as @var1105_2 var1105)\r\n; cardinality of var396 is 1\r\n; rep: (as @var396_0 var396)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var396_getProperty/-1659784690 ((BOUND_VARIABLE_2299 String) (BOUND_VARIABLE_2300 String)) String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1430969082 ((BOUND_VARIABLE_2303 String)) void (as @void_0 void))\r\n(define-fun getLength-Arr-Int-2 ((_arg_1 (Array Int (Array Int Int)))) Int 0)\r\n(define-fun next/-1103324373 ((_arg_1 var1105)) var1105 (as @var1105_2 var1105))\r\n(define-fun beginLine/-1103324373 ((_arg_1 var1105)) Int (- 1))\r\n(define-fun beginColumn/-1103324373 ((BOUND_VARIABLE_2306 var1105)) Int 0)\r\n(define-fun null-var1105 () var1105 (as @var1105_0 var1105))\r\n(define-fun null-__Array__Int____Array__Int__Int____ () (Array Int (Array Int Int)) (store ((as const (Array Int (Array Int Int))) (store ((as const (Array Int Int)) 0) 0 1)) 0 (store ((as const (Array Int Int)) 2) 0 (- 1))))\r\n(define-fun null-__Array__Int__String__ () (Array Int String) (store ((as const (Array Int String)) \"A\") 0 \", column \"))\r\n(define-fun var3571 () var1105 (as @var1105_1 var1105))\r\n(define-fun var3119 () (Array Int (Array Int Int)) (store ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)) 0 (store ((as const (Array Int Int)) (- 1)) 0 0)))\r\n(define-fun var164 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var3984!1 () String \"\")\r\n(define-fun var924!1 () String \"\")\r\n(define-fun var924!2 () String \"Encountered \"\"\")\r\n(define-fun var1569!1 () String \"Encountered \"\"\"\" at line \")\r\n(define-fun var98!1 () String \"Encountered \"\"\"\" at line \")\r\n(define-fun var3938!1 () String \"Encountered \"\"\"\" at line , column \")\r\n(define-fun var3939!1 () String \"Encountered \"\"\"\" at line , column \")\r\n(define-fun var436!1 () String \"\")\r\n(define-fun var436!2 () String \"Encountered \"\"\"\" at line , column 0\")\r\n(define-fun var1617!1 () String \"Encountered \"\"\"\" at line , column 0.\")\r\n(define-fun var853!1 () String \"Encountered \"\"\"\" at line , column 0.\")\r\n(define-fun var286!1 () String \"\")\r\n(define-fun var286!2 () String \"Encountered \"\"\"\" at line , column 0.\")\r\n(define-fun var960!1 () String \"Encountered \"\"\"\" at line , column 0.Was expecting one of:\")\r\n(define-fun var2714!1 () String \"Encountered \"\"\"\" at line , column 0.Was expecting one of:\")\r\n(define-fun var1475!1 () String \"Encountered \"\"\"\" at line , column 0.Was expecting one of:    \")\r\n(define-fun var732!1 () String \"\")\r\n(define-fun var732!2 () String \"Encountered \"\"\"\" at line , column 0.Was expecting one of:    \")\r\n(define-fun var3382!1 () String \"Encountered \"\"\"\" at line , column 0.Was expecting one of:    \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37470208,
            "run_time": 0.06183171272277832,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 144 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 145 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 235335680,
            "run_time": 2.092327117919922,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1105/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.ParseException__initialise__1055862808\\512.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var732!2 =\r\n     concat(all_98_3, \"    \")\r\n   var1475!1 =\r\n     concat(all_43_3, \"    \")\r\n   var960!1 =\r\n     concat(all_40_4, \"Was expecting one of:\")\r\n   var3382!1 =\r\n     concat(all_37_4, var3984!1)\r\n   var2714!1 =\r\n     concat(all_31_3, all_31_2)\r\n   var286!2 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   var853!1 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   all_98_3 =\r\n     concat(all_98_4, all_31_2)\r\n   all_31_3 =\r\n     concat(all_95_4, \"Was expecting one of:\")\r\n   all_37_4 =\r\n     concat(all_89_3, \"    \")\r\n   all_43_3 =\r\n     concat(all_43_5, all_31_2)\r\n   all_40_4 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   all_98_4 =\r\n     concat(all_119_4, \"Was expecting one of:\")\r\n   all_43_5 =\r\n     concat(all_92_4, \"Was expecting one of:\")\r\n   all_89_3 =\r\n     concat(all_89_4, all_31_2)\r\n   all_95_4 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   all_89_4 =\r\n     concat(all_122_4, \"Was expecting one of:\")\r\n   all_119_4 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   all_92_4 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   all_122_4 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n\r\n1834ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 51,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 12,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 4,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @parameter0: org.javacc.jjtree.Token",
            "r2 := @parameter1: int[][]",
            "r33 := @parameter2: java.lang.String[]",
            "r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"line.separator\", \"\\n\")",
            "$r1 = new java.lang.StringBuffer",
            "specialinvoke $r1.<java.lang.StringBuffer: void <init>()>()",
            "i11 = 0",
            "i12 = 0",
            "$i0 = lengthof r2",
            "if i12 >= $i0 goto r66 = \"Encountered \\\"\"",
            "r66 = \"Encountered \\\"\"",
            "r67 = r3.<org.javacc.jjtree.Token: org.javacc.jjtree.Token next>",
            "i15 = 0",
            "if i15 >= i11 goto $r4 = new java.lang.StringBuilder",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r66)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" at line \")",
            "$r6 = r3.<org.javacc.jjtree.Token: org.javacc.jjtree.Token next>",
            "$i1 = $r6.<org.javacc.jjtree.Token: int beginLine>",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", column \")",
            "$r9 = r3.<org.javacc.jjtree.Token: org.javacc.jjtree.Token next>",
            "$i2 = $r9.<org.javacc.jjtree.Token: int beginColumn>",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)",
            "$r52 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r53 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i3 = lengthof r2",
            "if $i3 != 1 goto $r16 = new java.lang.StringBuilder",
            "$r16 = new java.lang.StringBuilder",
            "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53)",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Was expecting one of:\")",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")",
            "r71 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r21 = new java.lang.StringBuilder",
            "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()",
            "$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r22 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r30 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r30"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPNodeFiles__generateTreeConstants__1500189995\\738.smt2",
        "z3": {
            "memory": 31854592,
            "run_time": 0.08831644058227539,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var852:\r\n  ;;   var852!val!0 var852!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var852!val!0 () var852)\r\n  (declare-fun var852!val!1 () var852)\r\n  ;; cardinality constraint:\r\n  (forall ((x var852)) (or (= x var852!val!0) (= x var852!val!1)))\r\n  ;; -----------\r\n  (define-fun var3130 () var1662\r\n    var1662-init)\r\n  (define-fun var3659 () String\r\n    (toString/-1112415476 (cast-from-var852-to-var2190 var3615)))\r\n  (define-fun var1696 () String\r\n    (getName/1128186653 var2626!1))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1123 () String\r\n    String-init)\r\n  (define-fun null-var852 () var852\r\n    var852!val!1)\r\n  (define-fun var3615 () var852\r\n    var852!val!0)\r\n  (define-fun var2 () var646\r\n    var646-init)\r\n  (define-fun var1367 () String\r\n    (str.++ var1123!1 var2276_nodeConstants/-1553478071))\r\n  (define-fun var2626 () var2810\r\n    var2810-init)\r\n  (define-fun var1333 () var1161\r\n    var2276-headersForJJTreeH)\r\n  (define-fun var200 () String\r\n    (str.++ var1123!1 var2276_nodeConstants/-1553478071 \".h\"))\r\n  (define-fun var1298 () var2810\r\n    var1485_getJJTreeOutputDirectory/-709711143)\r\n  (define-fun var2659 () String\r\n    var2276_nodeConstants/-1553478071)\r\n  (define-fun var3710 () String\r\n    (str.++ var1123!1 var2276_nodeConstants/-1553478071 \".h\"))\r\n  (define-fun var2276_nodeConstants/-1553478071 () String\r\n    \"\")\r\n  (define-fun var1367!1 () String\r\n    \".h\")\r\n  (define-fun var1123!1 () String\r\n    \"\")\r\n  (define-fun var1123!2 () String\r\n    \"\")\r\n  (define-fun var1662-init () var1662\r\n    var1662!val!0)\r\n  (define-fun var1485_getJJTreeOutputDirectory/-709711143 () var2810\r\n    var2810!val!0)\r\n  (define-fun var2810-init () var2810\r\n    var2810!val!0)\r\n  (define-fun var1298!1 () var2810\r\n    var2810!val!0)\r\n  (define-fun var646-init () var646\r\n    var646!val!0)\r\n  (define-fun var1333!1 () var1161\r\n    var1161!val!0)\r\n  (define-fun var200!1 () String\r\n    \"\")\r\n  (define-fun var1696!1 () String\r\n    \"\")\r\n  (define-fun var2276-headersForJJTreeH () var1161\r\n    var1161!val!0)\r\n  (define-fun var3659!1 () String\r\n    \"\")\r\n  (define-fun var2626!1 () var2810\r\n    var2810!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2!1 () var646\r\n    var646!val!0)\r\n  (define-fun cast-from-var852-to-var2190 ((x!0 var852)) var2190\r\n    var2190!val!0)\r\n  (define-fun getName/1128186653 ((x!0 var2810)) String\r\n    \"\")\r\n  (define-fun var1161_add/328494887 ((x!0 var1161) (x!1 var2949)) Bool\r\n    false)\r\n  (define-fun <init>/1101485922 ((x!0 var646) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun toString/-1112415476 ((x!0 var2190)) String\r\n    \"\")\r\n  (define-fun <init>/-1833447926 ((x!0 var2810) (x!1 var2810) (x!2 String)) void\r\n    void!val!0)\r\n  (define-fun cast-from-String-to-var2949 ((x!0 String)) var2949\r\n    var2949!val!0)\r\n)\r\n(error \"line 80 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.030063390731811523,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2276 is 1\r\n; rep: (as @var2276_0 var2276)\r\n; cardinality of var2810 is 1\r\n; rep: (as @var2810_0 var2810)\r\n; cardinality of var1485 is 1\r\n; rep: (as @var1485_0 var1485)\r\n; cardinality of var1161 is 1\r\n; rep: (as @var1161_0 var1161)\r\n; cardinality of var2949 is 1\r\n; rep: (as @var2949_0 var2949)\r\n; cardinality of var1662 is 1\r\n; rep: (as @var1662_0 var1662)\r\n; cardinality of var852 is 2\r\n; rep: (as @var852_0 var852)\r\n; rep: (as @var852_1 var852)\r\n; cardinality of var646 is 1\r\n; rep: (as @var646_0 var646)\r\n; cardinality of var2190 is 1\r\n; rep: (as @var2190_0 var2190)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2276_nodeConstants/-1553478071 () String \"\")\r\n(define-fun var2810-init () var2810 (as @var2810_0 var2810))\r\n(define-fun var1485_getJJTreeOutputDirectory/-709711143 () var2810 (as @var2810_0 var2810))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1833447926 ((BOUND_VARIABLE_581 var2810) (BOUND_VARIABLE_582 var2810) (BOUND_VARIABLE_583 String)) void (as @void_0 void))\r\n(define-fun getName/1128186653 ((BOUND_VARIABLE_586 var2810)) String \"\")\r\n(define-fun var1161_add/328494887 ((BOUND_VARIABLE_589 var1161) (BOUND_VARIABLE_590 var2949)) Bool false)\r\n(define-fun cast-from-String-to-var2949 ((BOUND_VARIABLE_593 String)) var2949 (as @var2949_0 var2949))\r\n(define-fun var1662-init () var1662 (as @var1662_0 var1662))\r\n(define-fun var646-init () var646 (as @var646_0 var646))\r\n(define-fun toString/-1112415476 ((BOUND_VARIABLE_596 var2190)) String \"\")\r\n(define-fun cast-from-var852-to-var2190 ((BOUND_VARIABLE_599 var852)) var2190 (as @var2190_0 var2190))\r\n(define-fun <init>/1101485922 ((BOUND_VARIABLE_602 var646) (BOUND_VARIABLE_603 String)) void (as @void_0 void))\r\n(define-fun var2276-headersForJJTreeH () var1161 (as @var1161_0 var1161))\r\n(define-fun null-var852 () var852 (as @var852_0 var852))\r\n(define-fun var1123!1 () String \"\")\r\n(define-fun var1123!2 () String \"\")\r\n(define-fun var1367!1 () String \".h\")\r\n(define-fun var2626!1 () var2810 (as @var2810_0 var2810))\r\n(define-fun var1298!1 () var2810 (as @var2810_0 var2810))\r\n(define-fun var200!1 () String \"\")\r\n(define-fun var1333!1 () var1161 (as @var1161_0 var1161))\r\n(define-fun var1696!1 () String \"\")\r\n(define-fun var3615 () var852 (as @var852_1 var852))\r\n(define-fun var2!1 () var646 (as @var646_0 var646))\r\n(define-fun var3659!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36380672,
            "run_time": 0.06134748458862305,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var852:\n  ;;   var852!val!0 var852!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var852!val!0 () var852)\n  (declare-fun var852!val!1 () var852)\n  ;; cardinality constraint:\n  (forall ((x var852)) (or (= x var852!val!0) (= x var852!val!1)))\n  ;; -----------\n  (define-fun var3659 () String\n    (toString/-1112415476 (cast-from-var852-to-var2190 var3615)))\n  (define-fun var1696 () String\n    (getName/1128186653 var2626!1))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1123 () String\n    String-init)\n  (define-fun var2 () var646\n    var646-init)\n  (define-fun null-var852 () var852\n    var852!val!1)\n  (define-fun var3615 () var852\n    var852!val!0)\n  (define-fun var2626 () var2810\n    var2810-init)\n  (define-fun var1333 () var1161\n    var2276-headersForJJTreeH)\n  (define-fun var1298 () var2810\n    var1485_getJJTreeOutputDirectory/-709711143)\n  (define-fun var1367 () String\n    (str.++ var1123!1 var2276_nodeConstants/-1553478071))\n  (define-fun var3130 () var1662\n    var1662-init)\n  (define-fun var200 () String\n    (str.++ var1123!1 var2276_nodeConstants/-1553478071 \".h\"))\n  (define-fun var2659 () String\n    var2276_nodeConstants/-1553478071)\n  (define-fun var3710 () String\n    (str.++ var1123!1 var2276_nodeConstants/-1553478071 \".h\"))\n  (define-fun var2276_nodeConstants/-1553478071 () String\n    \"\")\n  (define-fun var1367!1 () String\n    \".h\")\n  (define-fun var1123!1 () String\n    \"\")\n  (define-fun var1123!2 () String\n    \"\")\n  (define-fun var1662-init () var1662\n    var1662!val!0)\n  (define-fun var1485_getJJTreeOutputDirectory/-709711143 () var2810\n    var2810!val!0)\n  (define-fun var2810-init () var2810\n    var2810!val!0)\n  (define-fun var1298!1 () var2810\n    var2810!val!0)\n  (define-fun var646-init () var646\n    var646!val!0)\n  (define-fun var1333!1 () var1161\n    var1161!val!0)\n  (define-fun var200!1 () String\n    \"\")\n  (define-fun var1696!1 () String\n    \"\")\n  (define-fun var2276-headersForJJTreeH () var1161\n    var1161!val!0)\n  (define-fun var3659!1 () String\n    \"\")\n  (define-fun var2626!1 () var2810\n    var2810!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2!1 () var646\n    var646!val!0)\n  (define-fun cast-from-var852-to-var2190 ((x!0 var852)) var2190\n    var2190!val!0)\n  (define-fun getName/1128186653 ((x!0 var2810)) String\n    \"\")\n  (define-fun var1161_add/328494887 ((x!0 var1161) (x!1 var2949)) Bool\n    false)\n  (define-fun <init>/1101485922 ((x!0 var646) (x!1 String)) void\n    void!val!0)\n  (define-fun toString/-1112415476 ((x!0 var2190)) String\n    \"\")\n  (define-fun <init>/-1833447926 ((x!0 var2810) (x!1 var2810) (x!2 String)) void\n    void!val!0)\n  (define-fun cast-from-String-to-var2949 ((x!0 String)) var2949\n    var2949!val!0)\n)\n(error \"line 80 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 174460928,
            "run_time": 1.1334054470062256,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var852/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPNodeFiles__generateTreeConstants__1500189995\\738.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1367!1 =\r\n     concat(var2276_nodeConstants/-1553478071, \".h\")\r\n\r\n782ms\r\n"
        },
        "undefined_function_count": 13,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.Throwable: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String nodeConstants()>()",
            "$r1 = new java.io.File",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.io.File getJJTreeOutputDirectory()>()",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".h\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r5)",
            "$r7 = <org.javacc.jjtree.CPPNodeFiles: java.util.List headersForJJTreeH>",
            "$r8 = virtualinvoke $r1.<java.io.File: java.lang.String getName()>()",
            "interfaceinvoke $r7.<java.util.List: boolean add(java.lang.Object)>($r8)",
            "$r9 = new org.javacc.parser.OutputFile",
            "$r53 := @caughtexception",
            "$r54 = new java.lang.Error",
            "$r55 = virtualinvoke $r53.<java.io.IOException: java.lang.String toString()>()",
            "specialinvoke $r54.<java.lang.Error: void <init>(java.lang.String)>($r55)",
            "throw $r54"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CPPFiles__getVersion__-804991436\\627.smt2",
        "z3": {
            "memory": 32071680,
            "run_time": 0.08910107612609863,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var796:\r\n  ;;   var796!val!0 var796!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var796!val!0 () var796)\r\n  (declare-fun var796!val!1 () var796)\r\n  ;; cardinality constraint:\r\n  (forall ((x var796)) (or (= x var796!val!0) (= x var796!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2144:\r\n  ;;   var2144!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2144!val!0 () var2144)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2144)) (= x var2144!val!0))\r\n  ;; -----------\r\n  (define-fun var395 () String\r\n    (var2658_replaceBackslash/1461074952 var3725))\r\n  (define-fun var2142!1 () var2144\r\n    var2144!val!0)\r\n  (define-fun var213 () String\r\n    String-init)\r\n  (define-fun var3812 () String\r\n    (str.++ var213!1 \"/* \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2778 () Bool\r\n    (exists/1072868559 var2142!1))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var374 () String\r\n    (str.++ var213!1 \"/* \" (var1118_getIdString/-826932917 \"JavaCC\" var3725)))\r\n  (define-fun var2142 () var2144\r\n    var2144-init)\r\n  (define-fun null-var796 () var796\r\n    var796!val!1)\r\n  (define-fun var672 () var2144\r\n    var1556_getOutputDirectory/873146074)\r\n  (define-fun var583 () String\r\n    var1812-versionNumber)\r\n  (define-fun var3549 () var796\r\n    var796!val!0)\r\n  (define-fun var908 () String\r\n    (str.++ var213!1\r\n        \"/* \"\r\n        (var1118_getIdString/-826932917 \"JavaCC\" var3725)\r\n        \" Version \"))\r\n  (define-fun var1309 () String\r\n    (str.++ var213!1\r\n        \"/* \"\r\n        (var1118_getIdString/-826932917 \"JavaCC\" var3725)\r\n        \" Version \"))\r\n  (define-fun var3725 () String\r\n    \"A\")\r\n  (define-fun var3987 () String\r\n    (var1118_getIdString/-826932917 \"JavaCC\" var3725))\r\n  (define-fun var3812!1 () String\r\n    \"/* \")\r\n  (define-fun var374!1 () String\r\n    \"/*  Version \")\r\n  (define-fun var213!2 () String\r\n    \"/* \")\r\n  (define-fun var213!1 () String\r\n    \"\")\r\n  (define-fun var1556_getOutputDirectory/873146074 () var2144\r\n    var2144!val!0)\r\n  (define-fun var672!1 () var2144\r\n    var2144!val!0)\r\n  (define-fun var395!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1812-versionNumber () String\r\n    \"\")\r\n  (define-fun var2144-init () var2144\r\n    var2144!val!0)\r\n  (define-fun exists/1072868559 ((x!0 var2144)) Bool\r\n    false)\r\n  (define-fun var1118_getIdString/-826932917 ((x!0 String) (x!1 String)) String\r\n    \"\")\r\n  (define-fun <init>/-1833447926 ((x!0 var2144) (x!1 var2144) (x!2 String)) void\r\n    void!val!0)\r\n  (define-fun var2658_replaceBackslash/1461074952 ((x!0 String)) String\r\n    \"\")\r\n)\r\n(error \"line 69 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.030882835388183594,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var347 is 1\r\n; rep: (as @var347_0 var347)\r\n; cardinality of var1118 is 1\r\n; rep: (as @var1118_0 var1118)\r\n; cardinality of var2144 is 1\r\n; rep: (as @var2144_0 var2144)\r\n; cardinality of var1556 is 1\r\n; rep: (as @var1556_0 var1556)\r\n; cardinality of var2658 is 1\r\n; rep: (as @var2658_0 var2658)\r\n; cardinality of var1812 is 1\r\n; rep: (as @var1812_0 var1812)\r\n; cardinality of var796 is 2\r\n; rep: (as @var796_0 var796)\r\n; rep: (as @var796_1 var796)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var1118_getIdString/-826932917 ((BOUND_VARIABLE_693 String) (BOUND_VARIABLE_694 String)) String \"\")\r\n(define-fun var2144-init () var2144 (as @var2144_0 var2144))\r\n(define-fun var1556_getOutputDirectory/873146074 () var2144 (as @var2144_0 var2144))\r\n(define-fun var2658_replaceBackslash/1461074952 ((BOUND_VARIABLE_697 String)) String \"\")\r\n(define-fun <init>/-1833447926 ((BOUND_VARIABLE_700 var2144) (BOUND_VARIABLE_701 var2144) (BOUND_VARIABLE_702 String)) void (as @void_0 void))\r\n(define-fun exists/1072868559 ((_arg_1 var2144)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1812-versionNumber () String \"\")\r\n(define-fun null-var796 () var796 (as @var796_0 var796))\r\n(define-fun var3725 () String \"\")\r\n(define-fun var213!1 () String \"\")\r\n(define-fun var213!2 () String \"/* \")\r\n(define-fun var3812!1 () String \"/* \")\r\n(define-fun var374!1 () String \"/*  Version \")\r\n(define-fun var2142!1 () var2144 (as @var2144_0 var2144))\r\n(define-fun var672!1 () var2144 (as @var2144_0 var2144))\r\n(define-fun var395!1 () String \"\")\r\n(define-fun var3549 () var796 (as @var796_1 var796))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37613568,
            "run_time": 0.07827472686767578,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var796:\n  ;;   var796!val!0 var796!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var796!val!0 () var796)\n  (declare-fun var796!val!1 () var796)\n  ;; cardinality constraint:\n  (forall ((x var796)) (or (= x var796!val!0) (= x var796!val!1)))\n  ;; -----------\n  ;; universe for var2144:\n  ;;   var2144!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2144!val!0 () var2144)\n  ;; cardinality constraint:\n  (forall ((x var2144)) (= x var2144!val!0))\n  ;; -----------\n  (define-fun var213!1 () String\n    \"\")\n  (define-fun var213!2 () String\n    \"/* \")\n  (define-fun var374!1 () String\n    \"/*  Version \")\n  (define-fun var3812!1 () String\n    \"/* \")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3725 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var395 () String\n    (var2658_replaceBackslash/1461074952 var3725))\n  (define-fun var672 () var2144\n    var1556_getOutputDirectory/873146074)\n  (define-fun var2142!1 () var2144\n    var2144!val!0)\n  (define-fun var908 () String\n    (str.++ var213!1\n        \"/* \"\n        (var1118_getIdString/-826932917 \"JavaCC\" var3725)\n        \" Version \"))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3549 () var796\n    var796!val!0)\n  (define-fun var1309 () String\n    (str.++ var213!1\n        \"/* \"\n        (var1118_getIdString/-826932917 \"JavaCC\" var3725)\n        \" Version \"))\n  (define-fun null-var796 () var796\n    var796!val!1)\n  (define-fun var3987 () String\n    (var1118_getIdString/-826932917 \"JavaCC\" var3725))\n  (define-fun var2778 () Bool\n    (exists/1072868559 var2142!1))\n  (define-fun var583 () String\n    var1812-versionNumber)\n  (define-fun var3812 () String\n    (str.++ var213!1 \"/* \"))\n  (define-fun var2142 () var2144\n    var2144-init)\n  (define-fun var213 () String\n    String-init)\n  (define-fun var374 () String\n    (str.++ var213!1 \"/* \" (var1118_getIdString/-826932917 \"JavaCC\" var3725)))\n  (define-fun var1556_getOutputDirectory/873146074 () var2144\n    var2144!val!0)\n  (define-fun var672!1 () var2144\n    var2144!val!0)\n  (define-fun var395!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1812-versionNumber () String\n    \"\")\n  (define-fun var2144-init () var2144\n    var2144!val!0)\n  (define-fun exists/1072868559 ((x!0 var2144)) Bool\n    false)\n  (define-fun var1118_getIdString/-826932917 ((x!0 String) (x!1 String)) String\n    \"\")\n  (define-fun <init>/-1833447926 ((x!0 var2144) (x!1 var2144) (x!2 String)) void\n    void!val!0)\n  (define-fun var2658_replaceBackslash/1461074952 ((x!0 String)) String\n    \"\")\n)\n(error \"line 69 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167874560,
            "run_time": 1.0497477054595947,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var796/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.CPPFiles__getVersion__-804991436\\627.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var374!1 =\r\n     concat(all_32_4, \" Version \")\r\n   var3812!1 =\r\n     concat(\"/* \", all_29_3)\r\n   all_32_4 =\r\n     concat(\"/* \", all_29_3)\r\n\r\n736ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/* \")",
            "$r2 = staticinvoke <org.javacc.parser.CPPFiles: java.lang.String getIdString(java.lang.String,java.lang.String)>(\"JavaCC\", r1)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Version \")",
            "r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r7 = new java.io.File",
            "$r9 = staticinvoke <org.javacc.parser.Options: java.io.File getOutputDirectory()>()",
            "$r8 = staticinvoke <org.javacc.parser.CPPFiles: java.lang.String replaceBackslash(java.lang.String)>(r1)",
            "specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, $r8)",
            "$z0 = virtualinvoke $r7.<java.io.File: boolean exists()>()",
            "if $z0 != 0 goto r22 = null",
            "$r13 = <org.javacc.Version: java.lang.String versionNumber>",
            "$r20 := @caughtexception",
            "return 0.0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.SimpleNode__toString__-2014704609\\699.smt2",
        "z3": {
            "memory": 29011968,
            "run_time": 0.07255840301513672,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3036:\r\n  ;;   var3036!val!1 var3036!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3036!val!1 () var3036)\r\n  (declare-fun var3036!val!0 () var3036)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3036)) (or (= x var3036!val!1) (= x var3036!val!0)))\r\n  ;; -----------\r\n  (define-fun var2229 () String\r\n    (str.++ var21!1 var2472 (toString/2055603450 var1791)))\r\n  (define-fun var2963 () String\r\n    (str.++ var21!1 var2472 (toString/2055603450 var1791)))\r\n  (define-fun null-var3036 () var3036\r\n    var3036!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var21 () String\r\n    String-init)\r\n  (define-fun var2542 () String\r\n    (str.++ var21!1 var2472))\r\n  (define-fun var1791 () var3036\r\n    var3036!val!0)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2472 () String\r\n    \"A\")\r\n  (define-fun var3115 () String\r\n    (toString/2055603450 var1791))\r\n  (define-fun var21!2 () String\r\n    \"A\")\r\n  (define-fun var21!1 () String\r\n    \"\")\r\n  (define-fun var2542!1 () String\r\n    \"A\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun toString/2055603450 ((x!0 var3036)) String\r\n    \"\")\r\n)\r\n(error \"line 40 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.015441179275512695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3036 is 2\r\n; rep: (as @var3036_0 var3036)\r\n; rep: (as @var3036_1 var3036)\r\n; cardinality of var1027 is 1\r\n; rep: (as @var1027_0 var1027)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun toString/2055603450 ((BOUND_VARIABLE_589 var3036)) String \"\")\r\n(define-fun null-var3036 () var3036 (as @var3036_0 var3036))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1791 () var3036 (as @var3036_1 var3036))\r\n(define-fun var2472 () String \"\")\r\n(define-fun var21!1 () String \"\")\r\n(define-fun var21!2 () String \"\")\r\n(define-fun var2542!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37519360,
            "run_time": 0.061971187591552734,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3036:\n  ;;   var3036!val!1 var3036!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3036!val!1 () var3036)\n  (declare-fun var3036!val!0 () var3036)\n  ;; cardinality constraint:\n  (forall ((x var3036)) (or (= x var3036!val!1) (= x var3036!val!0)))\n  ;; -----------\n  (define-fun var2542!1 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var21!1 () String\n    \"\")\n  (define-fun var21!2 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2542 () String\n    (str.++ var21!1 var2472))\n  (define-fun var2963 () String\n    (str.++ var21!1 var2472 (toString/2055603450 var1791)))\n  (define-fun var1791 () var3036\n    var3036!val!0)\n  (define-fun var2472 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var3036 () var3036\n    var3036!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var21 () String\n    String-init)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2229 () String\n    (str.++ var21!1 var2472 (toString/2055603450 var1791)))\n  (define-fun var3115 () String\n    (toString/2055603450 var1791))\n  (define-fun String-init () String\n    \"\")\n  (define-fun toString/2055603450 ((x!0 var3036)) String\n    \"\")\n)\n(error \"line 40 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 162295808,
            "run_time": 0.9566347599029541,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3036/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.SimpleNode__toString__-2014704609\\699.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2542!1 =\r\n     concat(var2472, all_17_3)\r\n\r\n666ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<org.javacc.jjtree.SimpleNode: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.jjtree.SimpleNode",
            "r1 := @parameter0: java.lang.String",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r3 = virtualinvoke r2.<org.javacc.jjtree.SimpleNode: java.lang.String toString()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.CPPFiles__replaceBackslash__1461074952\\600.smt2",
        "z3": {
            "memory": 24674304,
            "run_time": 0.07301521301269531,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1555 () String\r\n    \"\")\r\n  (define-fun var2813 () Int\r\n    (str.len var1555))\r\n  (define-fun var2099 () Int\r\n    0)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.015735149383544922,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2230 is 1\r\n; rep: (as @var2230_0 var2230)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1555 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35651584,
            "run_time": 0.06192445755004883,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1555 () String\n    \"\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2099 () Int\n    0)\n  (define-fun var2813 () Int\n    (str.len var1555))\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 142008320,
            "run_time": 0.8241326808929443,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1555 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i4 = 0",
            "i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i4 >= i0 goto (branch)",
            "if i4 != i0 goto $r3 = new java.lang.StringBuffer",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.TokenMgrError__addEscapes__1388005947\\454.smt2",
        "z3": {
            "memory": 31449088,
            "run_time": 0.07338428497314453,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3978 () Int\r\n    0)\r\n  (define-fun var2233 () String\r\n    var2790!1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2790 () String\r\n    String-init)\r\n  (define-fun var2106 () Int\r\n    (str.len var3137))\r\n  (define-fun var3137 () String\r\n    \"\")\r\n  (define-fun var2790!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun <init>/-1430969082 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.030616044998168945,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1745 is 1\r\n; rep: (as @var1745_0 var1745)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1430969082 ((BOUND_VARIABLE_530 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3137 () String \"\")\r\n(define-fun var2790!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35672064,
            "run_time": 0.06249403953552246,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2790 () String\n    String-init)\n  (define-fun var2106 () Int\n    (str.len var3137))\n  (define-fun var2233 () String\n    var2790!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3137 () String\n    \"\")\n  (define-fun var3978 () Int\n    0)\n  (define-fun var2790!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun <init>/-1430969082 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151859200,
            "run_time": 0.793144702911377,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3137 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r13 = new java.lang.StringBuffer",
            "specialinvoke $r13.<java.lang.StringBuffer: void <init>()>()",
            "i6 = 0",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "if i6 >= $i0 goto $r2 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r2 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Expansion__dumpPrefix__-1981802303\\683.smt2",
        "z3": {
            "memory": 31465472,
            "run_time": 0.04431605339050293,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3624:\r\n  ;;   var3624!val!0 var3624!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3624!val!0 () var3624)\r\n  (declare-fun var3624!val!1 () var3624)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3624)) (or (= x var3624!val!0) (= x var3624!val!1)))\r\n  ;; -----------\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun var882 () Int\r\n    0)\r\n  (define-fun null-var3624 () var3624\r\n    var3624!val!1)\r\n  (define-fun var3436 () Int\r\n    0)\r\n  (define-fun var3903 () var3624\r\n    var3624!val!0)\r\n  (define-fun var1390 () String\r\n    String-init)\r\n  (define-fun var1390!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2720 () Int\r\n    0)\r\n  (define-fun <init>/1906106355 ((x!0 String) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.014766693115234375,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3624 is 2\r\n; rep: (as @var3624_0 var3624)\r\n; rep: (as @var3624_1 var3624)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1906106355 ((BOUND_VARIABLE_448 String) (BOUND_VARIABLE_449 Int)) void (as @void_0 void))\r\n(define-fun null-var3624 () var3624 (as @var3624_0 var3624))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3903 () var3624 (as @var3624_1 var3624))\r\n(define-fun var882 () Int 0)\r\n(define-fun var1390!1 () String \"\")\r\n(define-fun var2720 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35663872,
            "run_time": 0.07822418212890625,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3624:\n  ;;   var3624!val!0 var3624!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3624!val!0 () var3624)\n  (declare-fun var3624!val!1 () var3624)\n  ;; cardinality constraint:\n  (forall ((x var3624)) (or (= x var3624!val!0) (= x var3624!val!1)))\n  ;; -----------\n  (define-fun null-Int () Int\n    1)\n  (define-fun var882 () Int\n    0)\n  (define-fun null-var3624 () var3624\n    var3624!val!1)\n  (define-fun var1390 () String\n    String-init)\n  (define-fun var3903 () var3624\n    var3624!val!0)\n  (define-fun var3436 () Int\n    0)\n  (define-fun var1390!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2720 () Int\n    0)\n  (define-fun <init>/1906106355 ((x!0 String) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 130883584,
            "run_time": 0.7468676567077637,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var882 () Int 0)\r\n  (define-fun var3903 () var3624 var3624!4)\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-var3624 () var3624 var3624!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>(int)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>(int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.parser.Expansion",
            "i0 := @parameter0: int",
            "$r0 = new java.lang.StringBuffer",
            "specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(128)",
            "i1 = 0",
            "if i1 >= i0 goto return $r0",
            "return $r0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.TokenMgrError__LexicalError__1482275881\\491.smt2",
        "z3": {
            "memory": 31596544,
            "run_time": 0.07744193077087402,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3725 () String\r\n    (str.++ var3231!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var644)\r\n        \", column \"\r\n        (str.from_int var723)\r\n        \".  Encountered: \"))\r\n  (define-fun var359 () String\r\n    (str.++ var3231!1 \"Lexical error at line \" (str.from_int var644)))\r\n  (define-fun var3808 () Int\r\n    0)\r\n  (define-fun var3454 () String\r\n    (str.++ var3231!1 \"Lexical error at line \" (str.from_int var644) \", column \"))\r\n  (define-fun var843 () String\r\n    \"\")\r\n  (define-fun var3231 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3640 () Int\r\n    0)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2656!1 () String\r\n    \"Lexical error at line \")\r\n  (define-fun var3847 () String\r\n    (str.++ var3231!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var644)\r\n        \", column \"\r\n        (str.from_int var723)))\r\n  (define-fun null-Int () Int\r\n    (- 1))\r\n  (define-fun var2656 () String\r\n    (str.++ var3231!1 \"Lexical error at line \"))\r\n  (define-fun var1602 () String\r\n    (str.++ var3231!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var644)\r\n        \", column \"\r\n        (str.from_int var723)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"\r\n        \"after : \"\"\"\r\n        (var709_addEscapes/1388005947 var843)\r\n        \"\"\"\"))\r\n  (define-fun var816 () String\r\n    (str.++ var3231!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var644)\r\n        \", column \"\r\n        (str.from_int var723)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"\r\n        \"after : \"\"\"))\r\n  (define-fun var2335 () String\r\n    (var709_addEscapes/1388005947 var843))\r\n  (define-fun var3454!1 () String\r\n    \"Lexical error at line , column \")\r\n  (define-fun var644 () Int\r\n    (- 2))\r\n  (define-fun var30 () String\r\n    (str.++ var3231!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var644)\r\n        \", column \"\r\n        (str.from_int var723)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"\r\n        \"after : \"\"\"\r\n        (var709_addEscapes/1388005947 var843)\r\n        \"\"\"\"))\r\n  (define-fun var1080 () String\r\n    (str.++ var3231!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var644)\r\n        \", column \"\r\n        (str.from_int var723)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"))\r\n  (define-fun var3007 () String\r\n    \"<EOF> \")\r\n  (define-fun var2182 () String\r\n    (str.++ var3231!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var644)\r\n        \", column \"\r\n        (str.from_int var723)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"\r\n        \"after : \"\"\"\r\n        (var709_addEscapes/1388005947 var843)))\r\n  (define-fun var723 () Int\r\n    0)\r\n  (define-fun var3231!2 () String\r\n    \"Lexical error at line \")\r\n  (define-fun var3055 () Bool\r\n    true)\r\n  (define-fun var1080!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: <EOF> after : \"\"\")\r\n  (define-fun var3725!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: <EOF> \")\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var816!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: <EOF> after : \"\"\")\r\n  (define-fun var359!1 () String\r\n    \"Lexical error at line , column \")\r\n  (define-fun var3231!1 () String\r\n    \"\")\r\n  (define-fun var3847!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: \")\r\n  (define-fun var2182!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: <EOF> after : \"\"\"\"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var709_addEscapes/1388005947 ((x!0 String)) String\r\n    \"\")\r\n)\r\n(error \"line 82 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13496320,
            "run_time": 0.030606508255004883,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2434 is 1\r\n; rep: (as @var2434_0 var2434)\r\n; cardinality of var709 is 1\r\n; rep: (as @var709_0 var709)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var709_addEscapes/1388005947 ((BOUND_VARIABLE_2032 String)) String \"\")\r\n(define-fun null-Bool () Bool false)\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3055 () Bool true)\r\n(define-fun var3640 () Int (- 1))\r\n(define-fun var644 () Int (- 1))\r\n(define-fun var723 () Int (- 1))\r\n(define-fun var843 () String \"\")\r\n(define-fun var3808 () Int (- 1))\r\n(define-fun var3231!1 () String \"\")\r\n(define-fun var3231!2 () String \"Lexical error at line \")\r\n(define-fun var2656!1 () String \"Lexical error at line \")\r\n(define-fun var359!1 () String \"Lexical error at line , column \")\r\n(define-fun var3454!1 () String \"Lexical error at line , column \")\r\n(define-fun var3847!1 () String \"Lexical error at line , column .  Encountered: \")\r\n(define-fun var3725!1 () String \"Lexical error at line , column .  Encountered: <EOF> \")\r\n(define-fun var1080!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \"\"\")\r\n(define-fun var816!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \"\"\")\r\n(define-fun var2182!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \"\"\"\"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38936576,
            "run_time": 0.12405681610107422,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 81 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 82 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 209031168,
            "run_time": 1.5058691501617432,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2182!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \\u{0}22\\u{0}22\")\r\n  (define-fun var816!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \\u{0}22\")\r\n  (define-fun var1080!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \\u{0}22\")\r\n  (define-fun var3725!1 () String \"Lexical error at line , column .  Encountered: <EOF> \")\r\n  (define-fun var3847!1 () String \"Lexical error at line , column .  Encountered: \")\r\n  (define-fun var3454!1 () String \"Lexical error at line , column \")\r\n  (define-fun var359!1 () String \"Lexical error at line , column \")\r\n  (define-fun var2656!1 () String \"Lexical error at line \")\r\n  (define-fun var3231!2 () String \"Lexical error at line \")\r\n  (define-fun var3231!1 () String \"\")\r\n  (define-fun var3808 () Int 1)\r\n  (define-fun var843 () String \" <EOF> \")\r\n  (define-fun var723 () Int (- 6))\r\n  (define-fun var644 () Int (- 6))\r\n  (define-fun var3640 () Int 1)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun var3055 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n  (define-fun abbrev_109 ((x!0 Int)) String (ite (= x!0 0) \"Lexical error at line , column .  Encountered: \" \"\"))\r\n  (define-fun abbrev_108 ((x!0 Int)) String (ite (= x!0 0) \"Lexical error at line \" \"\"))\r\n  (define-fun var709_addEscapes/1388005947 ((x!0 String)) String (ite (= x!0 \" <EOF> \") \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 29,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "z0 := @parameter0: boolean",
            "i3 := @parameter1: int",
            "i0 := @parameter2: int",
            "i1 := @parameter3: int",
            "r16 := @parameter4: java.lang.String",
            "c2 := @parameter5: char",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r1 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Lexical error at line \")",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", column \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)",
            "$r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".  Encountered: \")",
            "if z0 == 0 goto $r24 = new java.lang.StringBuilder",
            "$r22 = \"<EOF> \"",
            "goto [?= $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)]",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"after : \\\"\")",
            "$r17 = staticinvoke <org.javacc.jjtree.TokenMgrError: java.lang.String addEscapes(java.lang.String)>(r16)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r21"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaFiles__genMiscFile__377016919\\988.smt2",
        "z3": {
            "memory": 32473088,
            "run_time": 0.07019305229187012,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var525:\r\n  ;;   var525!val!0 var525!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var525!val!0 () var525)\r\n  (declare-fun var525!val!1 () var525)\r\n  ;; cardinality constraint:\r\n  (forall ((x var525)) (or (= x var525!val!0) (= x var525!val!1)))\r\n  ;; -----------\r\n  (define-fun var1270 () String\r\n    (str.++ var1061!1 \"Failed to create \" var2299 \" \"))\r\n  (define-fun var354 () String\r\n    String-init)\r\n  (define-fun var1444 () String\r\n    (str.++ var354!1 \"Could not open file \"))\r\n  (define-fun var1490 () var2469\r\n    var3148-err)\r\n  (define-fun var3936 () String\r\n    (str.++ var354!1 \"Could not open file \" var2299 \" for writing.\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var396 () var525\r\n    var525!val!0)\r\n  (define-fun var1321 () String\r\n    (str.++ var1061!1 \"Failed to create \"))\r\n  (define-fun var951 () var3217\r\n    var3217-init)\r\n  (define-fun var2299 () String\r\n    \"\")\r\n  (define-fun var2778 () String\r\n    \"\")\r\n  (define-fun var1270!1 () String\r\n    \"Failed to create  \")\r\n  (define-fun var3421 () String\r\n    (str.++ var1061!1 \"Failed to create \" var2299))\r\n  (define-fun var1061 () String\r\n    String-init)\r\n  (define-fun null-var525 () var525\r\n    var525!val!1)\r\n  (define-fun var1032 () String\r\n    (append/-1031950772\r\n  (str.++ var1061!1 \"Failed to create \" var2299 \" \")\r\n  (cast-from-var525-to-var60 var396)))\r\n  (define-fun var2492 () String\r\n    (str.++ var354!1 \"Could not open file \" var2299))\r\n  (define-fun var2191 () String\r\n    (str.++ var354!1 \"Could not open file \" var2299 \" for writing.\"))\r\n  (define-fun var133 () String\r\n    (append/-1031950772\r\n  (str.++ var1061!1 \"Failed to create \" var2299 \" \")\r\n  (cast-from-var525-to-var60 var396)))\r\n  (define-fun var72 () var2340\r\n    var2340-init)\r\n  (define-fun var3421!1 () String\r\n    \"Failed to create  \")\r\n  (define-fun var1444!1 () String\r\n    \"Could not open file \")\r\n  (define-fun var354!1 () String\r\n    \"\")\r\n  (define-fun var354!2 () String\r\n    \"Could not open file \")\r\n  (define-fun var1321!1 () String\r\n    \"Failed to create \")\r\n  (define-fun var1061!1 () String\r\n    \"\")\r\n  (define-fun var1061!2 () String\r\n    \"Failed to create \")\r\n  (define-fun var2492!1 () String\r\n    \"Could not open file  for writing.\")\r\n  (define-fun var3217-init () var3217\r\n    var3217!val!0)\r\n  (define-fun var72!1 () var2340\r\n    var2340!val!0)\r\n  (define-fun var2191!1 () String\r\n    \"\")\r\n  (define-fun var1490!1 () var2469\r\n    var2469!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2340-init () var2340\r\n    var2340!val!0)\r\n  (define-fun var3148-err () var2469\r\n    var2469!val!0)\r\n  (define-fun var133!1 () String\r\n    \"\")\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var60)) String\r\n    \"\")\r\n  (define-fun var842_semantic_error/-498493661 ((x!0 String)) void\r\n    void!val!0)\r\n  (define-fun println/1773605060 ((x!0 var2469) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var525-to-var60 ((x!0 var525)) var60\r\n    var60!val!0)\r\n  (define-fun <init>/1750087229 ((x!0 var2340)) void\r\n    void!val!0)\r\n)\r\n(error \"line 96 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13340672,
            "run_time": 0.030587434768676758,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1580 is 1\r\n; rep: (as @var1580_0 var1580)\r\n; cardinality of var3217 is 1\r\n; rep: (as @var3217_0 var3217)\r\n; cardinality of var525 is 2\r\n; rep: (as @var525_0 var525)\r\n; rep: (as @var525_1 var525)\r\n; cardinality of var2469 is 1\r\n; rep: (as @var2469_0 var2469)\r\n; cardinality of var3148 is 1\r\n; rep: (as @var3148_0 var3148)\r\n; cardinality of var60 is 1\r\n; rep: (as @var60_0 var60)\r\n; cardinality of var842 is 1\r\n; rep: (as @var842_0 var842)\r\n; cardinality of var2340 is 1\r\n; rep: (as @var2340_0 var2340)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3217-init () var3217 (as @var3217_0 var3217))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1318 String) (BOUND_VARIABLE_1319 var60)) String \"\")\r\n(define-fun cast-from-var525-to-var60 ((BOUND_VARIABLE_1322 var525)) var60 (as @var60_0 var60))\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_1325 var2469) (BOUND_VARIABLE_1326 String)) void (as @void_0 void))\r\n(define-fun var842_semantic_error/-498493661 ((BOUND_VARIABLE_1329 String)) void (as @void_0 void))\r\n(define-fun var2340-init () var2340 (as @var2340_0 var2340))\r\n(define-fun <init>/1750087229 ((BOUND_VARIABLE_1332 var2340)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var525 () var525 (as @var525_0 var525))\r\n(define-fun var3148-err () var2469 (as @var2469_0 var2469))\r\n(define-fun var2299 () String \"\")\r\n(define-fun var2778 () String \"\")\r\n(define-fun var396 () var525 (as @var525_1 var525))\r\n(define-fun var1061!1 () String \"\")\r\n(define-fun var1061!2 () String \"Failed to create \")\r\n(define-fun var1321!1 () String \"Failed to create \")\r\n(define-fun var3421!1 () String \"Failed to create  \")\r\n(define-fun var1270!1 () String \"Failed to create  \")\r\n(define-fun var1490!1 () var2469 (as @var2469_0 var2469))\r\n(define-fun var133!1 () String \"\")\r\n(define-fun var354!1 () String \"\")\r\n(define-fun var354!2 () String \"Could not open file \")\r\n(define-fun var1444!1 () String \"Could not open file \")\r\n(define-fun var2492!1 () String \"Could not open file  for writing.\")\r\n(define-fun var2191!1 () String \"\")\r\n(define-fun var72!1 () var2340 (as @var2340_0 var2340))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37990400,
            "run_time": 0.12443804740905762,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 95 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 96 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182669312,
            "run_time": 1.1007962226867676,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var525/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaFiles__genMiscFile__377016919\\988.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3421!1 =\r\n     concat(all_45_4, \" \")\r\n   var2492!1 =\r\n     concat(all_42_3, \" for writing.\")\r\n   var1444!1 =\r\n     concat(\"Could not open file \", var2299)\r\n   var1321!1 =\r\n     concat(\"Failed to create \", var2299)\r\n   var1270!1 =\r\n     concat(all_48_4, rhs)\r\n   all_48_4 =\r\n     concat(all_48_5, \" \")\r\n   all_42_3 =\r\n     concat(\"Could not open file \", var2299)\r\n   all_45_4 =\r\n     concat(\"Failed to create \", var2299)\r\n   all_48_5 =\r\n     concat(\"Failed to create \", var2299)\r\n\r\n819ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 26,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r8 := @parameter1: java.lang.String",
            "$r0 = new java.io.File",
            "$r25 := @caughtexception",
            "$r27 = <java.lang.System: java.io.PrintStream err>",
            "$r26 = new java.lang.StringBuilder",
            "specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()",
            "$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to create \")",
            "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")",
            "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25)",
            "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r32)",
            "$r33 = new java.lang.StringBuilder",
            "specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()",
            "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not open file \")",
            "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for writing.\")",
            "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void semantic_error(java.lang.String)>($r37)",
            "$r38 = new java.lang.Error",
            "specialinvoke $r38.<java.lang.Error: void <init>()>()",
            "throw $r38"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaFiles__gen_TokenManager__-2027979678\\1180.smt2",
        "z3": {
            "memory": 31543296,
            "run_time": 0.08632302284240723,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3852:\r\n  ;;   var3852!val!0 var3852!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3852!val!0 () var3852)\r\n  (declare-fun var3852!val!1 () var3852)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3852)) (or (= x var3852!val!0) (= x var3852!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2712:\r\n  ;;   var2712!val!0 var2712!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2712!val!0 () var2712)\r\n  (declare-fun var2712!val!1 () var2712)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2712)) (or (= x var2712!val!0) (= x var2712!val!1)))\r\n  ;; -----------\r\n  (define-fun var1103 () var2712\r\n    var2712!val!0)\r\n  (define-fun var3994 () var2051\r\n    var2051-init)\r\n  (define-fun var1161 () String\r\n    (append/-1031950772\r\n  (str.++ var3079!1 \"Failed to create TokenManager \")\r\n  (cast-from-var2712-to-var82 var1103)))\r\n  (define-fun var3190 () var3931\r\n    var3931-init)\r\n  (define-fun var1266 () var3852\r\n    var3852!val!0)\r\n  (define-fun null-var2712 () var2712\r\n    var2712!val!1)\r\n  (define-fun var3465 () String\r\n    (append/-1031950772\r\n  (str.++ var3079!1 \"Failed to create TokenManager \")\r\n  (cast-from-var2712-to-var82 var1103)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var3852 () var3852\r\n    var3852!val!1)\r\n  (define-fun var826 () var565\r\n    var229-err)\r\n  (define-fun var1884!1 () String\r\n    \"Failed to create TokenManager \")\r\n  (define-fun var1884 () String\r\n    (str.++ var3079!1 \"Failed to create TokenManager \"))\r\n  (define-fun var3079 () String\r\n    String-init)\r\n  (define-fun var3079!2 () String\r\n    \"Failed to create TokenManager \")\r\n  (define-fun var3079!1 () String\r\n    \"\")\r\n  (define-fun var2051-init () var2051\r\n    var2051!val!0)\r\n  (define-fun var826!1 () var565\r\n    var565!val!0)\r\n  (define-fun var3190!1 () var3931\r\n    var3931!val!0)\r\n  (define-fun var3931-init () var3931\r\n    var3931!val!0)\r\n  (define-fun var229-err () var565\r\n    var565!val!0)\r\n  (define-fun var2843 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3465!1 () String\r\n    \"\")\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var82)) String\r\n    \"\")\r\n  (define-fun println/1773605060 ((x!0 var565) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun <init>/1750087229 ((x!0 var3931)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var2712-to-var82 ((x!0 var2712)) var82\r\n    var82!val!0)\r\n  (define-fun var2594_semantic_error/-498493661 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 67 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.030245542526245117,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3852 is 2\r\n; rep: (as @var3852_0 var3852)\r\n; rep: (as @var3852_1 var3852)\r\n; cardinality of var2051 is 1\r\n; rep: (as @var2051_0 var2051)\r\n; cardinality of var2712 is 2\r\n; rep: (as @var2712_0 var2712)\r\n; rep: (as @var2712_1 var2712)\r\n; cardinality of var565 is 1\r\n; rep: (as @var565_0 var565)\r\n; cardinality of var229 is 1\r\n; rep: (as @var229_0 var229)\r\n; cardinality of var82 is 1\r\n; rep: (as @var82_0 var82)\r\n; cardinality of var2594 is 1\r\n; rep: (as @var2594_0 var2594)\r\n; cardinality of var3931 is 1\r\n; rep: (as @var3931_0 var3931)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2051-init () var2051 (as @var2051_0 var2051))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_935 String) (BOUND_VARIABLE_936 var82)) String \"\")\r\n(define-fun cast-from-var2712-to-var82 ((BOUND_VARIABLE_939 var2712)) var82 (as @var82_0 var82))\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_942 var565) (BOUND_VARIABLE_943 String)) void (as @void_0 void))\r\n(define-fun var2594_semantic_error/-498493661 ((BOUND_VARIABLE_946 String)) void (as @void_0 void))\r\n(define-fun var3931-init () var3931 (as @var3931_0 var3931))\r\n(define-fun <init>/1750087229 ((BOUND_VARIABLE_949 var3931)) void (as @void_0 void))\r\n(define-fun null-var3852 () var3852 (as @var3852_0 var3852))\r\n(define-fun null-var2712 () var2712 (as @var2712_0 var2712))\r\n(define-fun var229-err () var565 (as @var565_0 var565))\r\n(define-fun var1266 () var3852 (as @var3852_1 var3852))\r\n(define-fun var1103 () var2712 (as @var2712_1 var2712))\r\n(define-fun var3079!1 () String \"\")\r\n(define-fun var3079!2 () String \"Failed to create TokenManager \")\r\n(define-fun var1884!1 () String \"Failed to create TokenManager \")\r\n(define-fun var826!1 () var565 (as @var565_0 var565))\r\n(define-fun var3465!1 () String \"\")\r\n(define-fun var2843 () String \"\")\r\n(define-fun var3190!1 () var3931 (as @var3931_0 var3931))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36859904,
            "run_time": 0.06248736381530762,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3852:\n  ;;   var3852!val!0 var3852!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3852!val!0 () var3852)\n  (declare-fun var3852!val!1 () var3852)\n  ;; cardinality constraint:\n  (forall ((x var3852)) (or (= x var3852!val!0) (= x var3852!val!1)))\n  ;; -----------\n  ;; universe for var2712:\n  ;;   var2712!val!0 var2712!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2712!val!0 () var2712)\n  (declare-fun var2712!val!1 () var2712)\n  ;; cardinality constraint:\n  (forall ((x var2712)) (or (= x var2712!val!0) (= x var2712!val!1)))\n  ;; -----------\n  (define-fun var1103 () var2712\n    var2712!val!0)\n  (define-fun var3465 () String\n    (append/-1031950772\n  (str.++ var3079!1 \"Failed to create TokenManager \")\n  (cast-from-var2712-to-var82 var1103)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3994 () var2051\n    var2051-init)\n  (define-fun var3190 () var3931\n    var3931-init)\n  (define-fun null-var3852 () var3852\n    var3852!val!1)\n  (define-fun var1161 () String\n    (append/-1031950772\n  (str.++ var3079!1 \"Failed to create TokenManager \")\n  (cast-from-var2712-to-var82 var1103)))\n  (define-fun var3079!1 () String\n    \"\")\n  (define-fun var1884!1 () String\n    \"Failed to create TokenManager \")\n  (define-fun var1884 () String\n    (str.++ var3079!1 \"Failed to create TokenManager \"))\n  (define-fun var1266 () var3852\n    var3852!val!0)\n  (define-fun null-var2712 () var2712\n    var2712!val!1)\n  (define-fun var3079 () String\n    String-init)\n  (define-fun var826 () var565\n    var229-err)\n  (define-fun var3079!2 () String\n    \"Failed to create TokenManager \")\n  (define-fun var2051-init () var2051\n    var2051!val!0)\n  (define-fun var826!1 () var565\n    var565!val!0)\n  (define-fun var3190!1 () var3931\n    var3931!val!0)\n  (define-fun var3931-init () var3931\n    var3931!val!0)\n  (define-fun var229-err () var565\n    var565!val!0)\n  (define-fun var2843 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3465!1 () String\n    \"\")\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var82)) String\n    \"\")\n  (define-fun println/1773605060 ((x!0 var565) (x!1 String)) void\n    void!val!0)\n  (define-fun <init>/1750087229 ((x!0 var3931)) void\n    void!val!0)\n  (define-fun cast-from-var2712-to-var82 ((x!0 var2712)) var82\n    var82!val!0)\n  (define-fun var2594_semantic_error/-498493661 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 67 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182378496,
            "run_time": 0.9624171257019043,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1884!1 () String \"Failed to create TokenManager \")\r\n  (define-fun var3079!2 () String \"Failed to create TokenManager \")\r\n  (define-fun var3079!1 () String \"\")\r\n  (define-fun var1103 () var2712 var2712!68)\r\n  (define-fun var1266 () var3852 var3852!66)\r\n  (define-fun null-var2712 () var2712 var2712!64)\r\n  (define-fun null-var3852 () var3852 var3852!62)\r\n  (define-fun abbrev_116 ((x!0 Int)) String (ite (= x!0 0) \"Failed to create TokenManager \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r7 := @parameter0: org.javacc.parser.JavaFiles$JavaResourceTemplateLocations",
            "$r0 = new java.io.File",
            "$r24 := @caughtexception",
            "$r26 = <java.lang.System: java.io.PrintStream err>",
            "$r25 = new java.lang.StringBuilder",
            "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()",
            "$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to create TokenManager \")",
            "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24)",
            "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r29)",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void semantic_error(java.lang.String)>(\"Could not open file TokenManager.java for writing.\")",
            "$r30 = new java.lang.Error",
            "specialinvoke $r30.<java.lang.Error: void <init>()>()",
            "throw $r30"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaFiles__gen_CharStream__-804321628\\933.smt2",
        "z3": {
            "memory": 31494144,
            "run_time": 0.07293152809143066,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var125:\r\n  ;;   var125!val!0 var125!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var125!val!0 () var125)\r\n  (declare-fun var125!val!1 () var125)\r\n  ;; cardinality constraint:\r\n  (forall ((x var125)) (or (= x var125!val!0) (= x var125!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1514:\r\n  ;;   var1514!val!1 var1514!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1514!val!1 () var1514)\r\n  (declare-fun var1514!val!0 () var1514)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1514)) (or (= x var1514!val!1) (= x var1514!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var1514 () var1514\r\n    var1514!val!1)\r\n  (define-fun var22 () String\r\n    String-init)\r\n  (define-fun null-var125 () var125\r\n    var125!val!1)\r\n  (define-fun var3526 () var1437\r\n    var1437-init)\r\n  (define-fun var1026 () var1624\r\n    var30-err)\r\n  (define-fun var2631 () var125\r\n    var125!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3232 () var3373\r\n    var3373-init)\r\n  (define-fun var1319 () String\r\n    (str.++ var22!1 \"Failed to create CharStream \"))\r\n  (define-fun var1319!1 () String\r\n    \"Failed to create CharStream \")\r\n  (define-fun var2023 () String\r\n    (append/-1031950772\r\n  (str.++ var22!1 \"Failed to create CharStream \")\r\n  (cast-from-var1514-to-var3314 var1454)))\r\n  (define-fun var2724 () String\r\n    (append/-1031950772\r\n  (str.++ var22!1 \"Failed to create CharStream \")\r\n  (cast-from-var1514-to-var3314 var1454)))\r\n  (define-fun var1454 () var1514\r\n    var1514!val!0)\r\n  (define-fun var22!1 () String\r\n    \"\")\r\n  (define-fun var22!2 () String\r\n    \"Failed to create CharStream \")\r\n  (define-fun var1437-init () var1437\r\n    var1437!val!0)\r\n  (define-fun var1026!1 () var1624\r\n    var1624!val!0)\r\n  (define-fun var3526!1 () var1437\r\n    var1437!val!0)\r\n  (define-fun var3373-init () var3373\r\n    var3373!val!0)\r\n  (define-fun var2023!1 () String\r\n    \"\")\r\n  (define-fun var305 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var30-err () var1624\r\n    var1624!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3314)) String\r\n    \"\")\r\n  (define-fun var2375_semantic_error/-498493661 ((x!0 String)) void\r\n    void!val!0)\r\n  (define-fun println/1773605060 ((x!0 var1624) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun <init>/1750087229 ((x!0 var1437)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var1514-to-var3314 ((x!0 var1514)) var3314\r\n    var3314!val!0)\r\n)\r\n(error \"line 67 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.015198707580566406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var125 is 2\r\n; rep: (as @var125_0 var125)\r\n; rep: (as @var125_1 var125)\r\n; cardinality of var3373 is 1\r\n; rep: (as @var3373_0 var3373)\r\n; cardinality of var1514 is 2\r\n; rep: (as @var1514_0 var1514)\r\n; rep: (as @var1514_1 var1514)\r\n; cardinality of var1624 is 1\r\n; rep: (as @var1624_0 var1624)\r\n; cardinality of var30 is 1\r\n; rep: (as @var30_0 var30)\r\n; cardinality of var3314 is 1\r\n; rep: (as @var3314_0 var3314)\r\n; cardinality of var2375 is 1\r\n; rep: (as @var2375_0 var2375)\r\n; cardinality of var1437 is 1\r\n; rep: (as @var1437_0 var1437)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3373-init () var3373 (as @var3373_0 var3373))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_934 String) (BOUND_VARIABLE_935 var3314)) String \"\")\r\n(define-fun cast-from-var1514-to-var3314 ((BOUND_VARIABLE_938 var1514)) var3314 (as @var3314_0 var3314))\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_941 var1624) (BOUND_VARIABLE_942 String)) void (as @void_0 void))\r\n(define-fun var2375_semantic_error/-498493661 ((BOUND_VARIABLE_945 String)) void (as @void_0 void))\r\n(define-fun var1437-init () var1437 (as @var1437_0 var1437))\r\n(define-fun <init>/1750087229 ((BOUND_VARIABLE_948 var1437)) void (as @void_0 void))\r\n(define-fun null-var125 () var125 (as @var125_0 var125))\r\n(define-fun null-var1514 () var1514 (as @var1514_0 var1514))\r\n(define-fun var30-err () var1624 (as @var1624_0 var1624))\r\n(define-fun var2631 () var125 (as @var125_1 var125))\r\n(define-fun var1454 () var1514 (as @var1514_1 var1514))\r\n(define-fun var22!1 () String \"\")\r\n(define-fun var22!2 () String \"Failed to create CharStream \")\r\n(define-fun var1319!1 () String \"Failed to create CharStream \")\r\n(define-fun var1026!1 () var1624 (as @var1624_0 var1624))\r\n(define-fun var2023!1 () String \"\")\r\n(define-fun var305 () String \"\")\r\n(define-fun var3526!1 () var1437 (as @var1437_0 var1437))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37310464,
            "run_time": 0.06168627738952637,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var125:\n  ;;   var125!val!0 var125!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var125!val!0 () var125)\n  (declare-fun var125!val!1 () var125)\n  ;; cardinality constraint:\n  (forall ((x var125)) (or (= x var125!val!0) (= x var125!val!1)))\n  ;; -----------\n  ;; universe for var1514:\n  ;;   var1514!val!1 var1514!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1514!val!1 () var1514)\n  (declare-fun var1514!val!0 () var1514)\n  ;; cardinality constraint:\n  (forall ((x var1514)) (or (= x var1514!val!1) (= x var1514!val!0)))\n  ;; -----------\n  (define-fun null-var1514 () var1514\n    var1514!val!1)\n  (define-fun null-var125 () var125\n    var125!val!1)\n  (define-fun var1319!1 () String\n    \"Failed to create CharStream \")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1319 () String\n    (str.++ var22!1 \"Failed to create CharStream \"))\n  (define-fun var2023 () String\n    (append/-1031950772\n  (str.++ var22!1 \"Failed to create CharStream \")\n  (cast-from-var1514-to-var3314 var1454)))\n  (define-fun var1026 () var1624\n    var30-err)\n  (define-fun var22 () String\n    String-init)\n  (define-fun var1454 () var1514\n    var1514!val!0)\n  (define-fun var22!2 () String\n    \"Failed to create CharStream \")\n  (define-fun var2631 () var125\n    var125!val!0)\n  (define-fun var2724 () String\n    (append/-1031950772\n  (str.++ var22!1 \"Failed to create CharStream \")\n  (cast-from-var1514-to-var3314 var1454)))\n  (define-fun var3526 () var1437\n    var1437-init)\n  (define-fun var3232 () var3373\n    var3373-init)\n  (define-fun var22!1 () String\n    \"\")\n  (define-fun var1437-init () var1437\n    var1437!val!0)\n  (define-fun var1026!1 () var1624\n    var1624!val!0)\n  (define-fun var3526!1 () var1437\n    var1437!val!0)\n  (define-fun var3373-init () var3373\n    var3373!val!0)\n  (define-fun var2023!1 () String\n    \"\")\n  (define-fun var305 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var30-err () var1624\n    var1624!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3314)) String\n    \"\")\n  (define-fun var2375_semantic_error/-498493661 ((x!0 String)) void\n    void!val!0)\n  (define-fun println/1773605060 ((x!0 var1624) (x!1 String)) void\n    void!val!0)\n  (define-fun <init>/1750087229 ((x!0 var1437)) void\n    void!val!0)\n  (define-fun cast-from-var1514-to-var3314 ((x!0 var1514)) var3314\n    var3314!val!0)\n)\n(error \"line 67 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181932032,
            "run_time": 0.9934537410736084,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1319!1 () String \"Failed to create CharStream \")\r\n  (define-fun var22!2 () String \"Failed to create CharStream \")\r\n  (define-fun var22!1 () String \"\")\r\n  (define-fun var1454 () var1514 var1514!64)\r\n  (define-fun var2631 () var125 var125!62)\r\n  (define-fun null-var1514 () var1514 var1514!60)\r\n  (define-fun null-var125 () var125 var125!58)\r\n  (define-fun abbrev_116 ((x!0 Int)) String (ite (= x!0 0) \"Failed to create CharStream \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r7 := @parameter0: org.javacc.parser.JavaFiles$JavaResourceTemplateLocations",
            "$r0 = new java.io.File",
            "$r24 := @caughtexception",
            "$r26 = <java.lang.System: java.io.PrintStream err>",
            "$r25 = new java.lang.StringBuilder",
            "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()",
            "$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to create CharStream \")",
            "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24)",
            "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r29)",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void semantic_error(java.lang.String)>(\"Could not open file CharStream.java for writing.\")",
            "$r30 = new java.lang.Error",
            "specialinvoke $r30.<java.lang.Error: void <init>()>()",
            "throw $r30"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaFiles__gen_TokenMgrError__-462046811\\1067.smt2",
        "z3": {
            "memory": 32530432,
            "run_time": 0.06042027473449707,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2876:\r\n  ;;   var2876!val!0 var2876!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2876!val!0 () var2876)\r\n  (declare-fun var2876!val!1 () var2876)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2876)) (or (= x var2876!val!0) (= x var2876!val!1)))\r\n  ;; -----------\r\n  ;; universe for var601:\r\n  ;;   var601!val!1 var601!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var601!val!1 () var601)\r\n  (declare-fun var601!val!0 () var601)\r\n  ;; cardinality constraint:\r\n  (forall ((x var601)) (or (= x var601!val!1) (= x var601!val!0)))\r\n  ;; -----------\r\n  (define-fun var63 () String\r\n    (str.++ var2371!1 \"Could not open file \" \"TokenMgrError.java\" \" for writing.\"))\r\n  (define-fun var2902 () var2876\r\n    var2876!val!0)\r\n  (define-fun var986 () String\r\n    \"TokenMgrError.java\")\r\n  (define-fun var3140 () var3880\r\n    var3880-init)\r\n  (define-fun var1378 () String\r\n    (append/-1031950772\r\n  (str.++ var1154!1 \"Failed to create \" \"TokenMgrError.java\" \" \")\r\n  (cast-from-var601-to-var2608 var2993)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3251 () String\r\n    (str.++ var2371!1 \"Could not open file \" \"TokenMgrError.java\"))\r\n  (define-fun var1246 () var669\r\n    var669-init)\r\n  (define-fun var2342 () Bool\r\n    var3418_isLegacyExceptionHandling/967608559)\r\n  (define-fun var2993 () var601\r\n    var601!val!0)\r\n  (define-fun var2059 () String\r\n    (str.++ var1154!1 \"Failed to create \" \"TokenMgrError.java\" \" \"))\r\n  (define-fun var388 () String\r\n    \"TokenMgrError.java\")\r\n  (define-fun var2059!1 () String\r\n    \"Failed to create TokenMgrError.java \")\r\n  (define-fun var1154 () String\r\n    String-init)\r\n  (define-fun var817 () String\r\n    (str.++ var1154!1 \"Failed to create \"))\r\n  (define-fun var583 () String\r\n    (str.++ var1154!1 \"Failed to create \" \"TokenMgrError.java\"))\r\n  (define-fun var479 () String\r\n    (append/-1031950772\r\n  (str.++ var1154!1 \"Failed to create \" \"TokenMgrError.java\" \" \")\r\n  (cast-from-var601-to-var2608 var2993)))\r\n  (define-fun var2866 () String\r\n    (str.++ var2371!1 \"Could not open file \"))\r\n  (define-fun var349 () var1888\r\n    var2578-err)\r\n  (define-fun var2662 () String\r\n    \"TokenMgrError.java\")\r\n  (define-fun var2166 () String\r\n    (str.++ var2371!1 \"Could not open file \" \"TokenMgrError.java\" \" for writing.\"))\r\n  (define-fun null-var2876 () var2876\r\n    var2876!val!1)\r\n  (define-fun null-var601 () var601\r\n    var601!val!1)\r\n  (define-fun var2371 () String\r\n    String-init)\r\n  (define-fun var2866!1 () String\r\n    \"Could not open file TokenMgrError.java\")\r\n  (define-fun var1154!2 () String\r\n    \"Failed to create \")\r\n  (define-fun var817!1 () String\r\n    \"Failed to create TokenMgrError.java\")\r\n  (define-fun var2371!1 () String\r\n    \"\")\r\n  (define-fun var583!1 () String\r\n    \"Failed to create TokenMgrError.java \")\r\n  (define-fun var1154!1 () String\r\n    \"\")\r\n  (define-fun var3418_isLegacyExceptionHandling/967608559 () Bool\r\n    true)\r\n  (define-fun var3251!1 () String\r\n    \"Could not open file TokenMgrError.java for writing.\")\r\n  (define-fun var2371!2 () String\r\n    \"Could not open file \")\r\n  (define-fun var1246!1 () var669\r\n    var669!val!0)\r\n  (define-fun var479!1 () String\r\n    \"\")\r\n  (define-fun var349!1 () var1888\r\n    var1888!val!0)\r\n  (define-fun var2578-err () var1888\r\n    var1888!val!0)\r\n  (define-fun var3880-init () var3880\r\n    var3880!val!0)\r\n  (define-fun var669-init () var669\r\n    var669!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var63!1 () String\r\n    \"\")\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2608)) String\r\n    \"\")\r\n  (define-fun println/1773605060 ((x!0 var1888) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun var1887_semantic_error/-498493661 ((x!0 String)) void\r\n    void!val!0)\r\n  (define-fun <init>/1750087229 ((x!0 var669)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var601-to-var2608 ((x!0 var601)) var2608\r\n    var2608!val!0)\r\n)\r\n(error \"line 104 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.046034812927246094,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2876 is 2\r\n; rep: (as @var2876_0 var2876)\r\n; rep: (as @var2876_1 var2876)\r\n; cardinality of var3418 is 1\r\n; rep: (as @var3418_0 var3418)\r\n; cardinality of var3880 is 1\r\n; rep: (as @var3880_0 var3880)\r\n; cardinality of var601 is 2\r\n; rep: (as @var601_0 var601)\r\n; rep: (as @var601_1 var601)\r\n; cardinality of var1888 is 1\r\n; rep: (as @var1888_0 var1888)\r\n; cardinality of var2578 is 1\r\n; rep: (as @var2578_0 var2578)\r\n; cardinality of var2608 is 1\r\n; rep: (as @var2608_0 var2608)\r\n; cardinality of var1887 is 1\r\n; rep: (as @var1887_0 var1887)\r\n; cardinality of var669 is 1\r\n; rep: (as @var669_0 var669)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3418_isLegacyExceptionHandling/967608559 () Bool true)\r\n(define-fun var3880-init () var3880 (as @var3880_0 var3880))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1139 String) (BOUND_VARIABLE_1140 var2608)) String \"\")\r\n(define-fun cast-from-var601-to-var2608 ((BOUND_VARIABLE_1143 var601)) var2608 (as @var2608_0 var2608))\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_1146 var1888) (BOUND_VARIABLE_1147 String)) void (as @void_0 void))\r\n(define-fun var1887_semantic_error/-498493661 ((BOUND_VARIABLE_1150 String)) void (as @void_0 void))\r\n(define-fun var669-init () var669 (as @var669_0 var669))\r\n(define-fun <init>/1750087229 ((BOUND_VARIABLE_1153 var669)) void (as @void_0 void))\r\n(define-fun null-var2876 () var2876 (as @var2876_0 var2876))\r\n(define-fun null-var601 () var601 (as @var601_0 var601))\r\n(define-fun var2578-err () var1888 (as @var1888_0 var1888))\r\n(define-fun var2902 () var2876 (as @var2876_1 var2876))\r\n(define-fun var2993 () var601 (as @var601_1 var601))\r\n(define-fun var1154!1 () String \"\")\r\n(define-fun var1154!2 () String \"Failed to create \")\r\n(define-fun var817!1 () String \"Failed to create TokenMgrError.java\")\r\n(define-fun var583!1 () String \"Failed to create TokenMgrError.java \")\r\n(define-fun var2059!1 () String \"Failed to create TokenMgrError.java \")\r\n(define-fun var349!1 () var1888 (as @var1888_0 var1888))\r\n(define-fun var479!1 () String \"\")\r\n(define-fun var2371!1 () String \"\")\r\n(define-fun var2371!2 () String \"Could not open file \")\r\n(define-fun var2866!1 () String \"Could not open file TokenMgrError.java\")\r\n(define-fun var3251!1 () String \"Could not open file TokenMgrError.java for writing.\")\r\n(define-fun var63!1 () String \"\")\r\n(define-fun var1246!1 () var669 (as @var669_0 var669))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37003264,
            "run_time": 0.06266093254089355,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2876:\n  ;;   var2876!val!0 var2876!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2876!val!0 () var2876)\n  (declare-fun var2876!val!1 () var2876)\n  ;; cardinality constraint:\n  (forall ((x var2876)) (or (= x var2876!val!0) (= x var2876!val!1)))\n  ;; -----------\n  ;; universe for var601:\n  ;;   var601!val!1 var601!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var601!val!1 () var601)\n  (declare-fun var601!val!0 () var601)\n  ;; cardinality constraint:\n  (forall ((x var601)) (or (= x var601!val!1) (= x var601!val!0)))\n  ;; -----------\n  (define-fun var986 () String\n    \"TokenMgrError.java\")\n  (define-fun var2342 () Bool\n    var3418_isLegacyExceptionHandling/967608559)\n  (define-fun var1246 () var669\n    var669-init)\n  (define-fun var2902 () var2876\n    var2876!val!0)\n  (define-fun var1378 () String\n    (append/-1031950772\n  (str.++ var1154!1 \"Failed to create \" \"TokenMgrError.java\" \" \")\n  (cast-from-var601-to-var2608 var2993)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3251 () String\n    (str.++ var2371!1 \"Could not open file \" \"TokenMgrError.java\"))\n  (define-fun var2059 () String\n    (str.++ var1154!1 \"Failed to create \" \"TokenMgrError.java\" \" \"))\n  (define-fun var349 () var1888\n    var2578-err)\n  (define-fun var2993 () var601\n    var601!val!0)\n  (define-fun var1154 () String\n    String-init)\n  (define-fun var817 () String\n    (str.++ var1154!1 \"Failed to create \"))\n  (define-fun var583 () String\n    (str.++ var1154!1 \"Failed to create \" \"TokenMgrError.java\"))\n  (define-fun var583!1 () String\n    \"Failed to create TokenMgrError.java \")\n  (define-fun var388 () String\n    \"TokenMgrError.java\")\n  (define-fun var479 () String\n    (append/-1031950772\n  (str.++ var1154!1 \"Failed to create \" \"TokenMgrError.java\" \" \")\n  (cast-from-var601-to-var2608 var2993)))\n  (define-fun var2866 () String\n    (str.++ var2371!1 \"Could not open file \"))\n  (define-fun var2166 () String\n    (str.++ var2371!1 \"Could not open file \" \"TokenMgrError.java\" \" for writing.\"))\n  (define-fun var2662 () String\n    \"TokenMgrError.java\")\n  (define-fun var3140 () var3880\n    var3880-init)\n  (define-fun var2371 () String\n    String-init)\n  (define-fun var2059!1 () String\n    \"Failed to create TokenMgrError.java \")\n  (define-fun null-var2876 () var2876\n    var2876!val!1)\n  (define-fun null-var601 () var601\n    var601!val!1)\n  (define-fun var63 () String\n    (str.++ var2371!1 \"Could not open file \" \"TokenMgrError.java\" \" for writing.\"))\n  (define-fun var1154!1 () String\n    \"\")\n  (define-fun var3251!1 () String\n    \"Could not open file TokenMgrError.java for writing.\")\n  (define-fun var2371!2 () String\n    \"Could not open file \")\n  (define-fun var2866!1 () String\n    \"Could not open file TokenMgrError.java\")\n  (define-fun var1154!2 () String\n    \"Failed to create \")\n  (define-fun var3418_isLegacyExceptionHandling/967608559 () Bool\n    true)\n  (define-fun var817!1 () String\n    \"Failed to create TokenMgrError.java\")\n  (define-fun var2371!1 () String\n    \"\")\n  (define-fun var1246!1 () var669\n    var669!val!0)\n  (define-fun var479!1 () String\n    \"\")\n  (define-fun var349!1 () var1888\n    var1888!val!0)\n  (define-fun var2578-err () var1888\n    var1888!val!0)\n  (define-fun var3880-init () var3880\n    var3880!val!0)\n  (define-fun var669-init () var669\n    var669!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var63!1 () String\n    \"\")\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2608)) String\n    \"\")\n  (define-fun println/1773605060 ((x!0 var1888) (x!1 String)) void\n    void!val!0)\n  (define-fun var1887_semantic_error/-498493661 ((x!0 String)) void\n    void!val!0)\n  (define-fun <init>/1750087229 ((x!0 var669)) void\n    void!val!0)\n  (define-fun cast-from-var601-to-var2608 ((x!0 var601)) var2608\n    var2608!val!0)\n)\n(error \"line 104 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 185950208,
            "run_time": 1.1628484725952148,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3251!1 () String \"Could not open file TokenMgrError.java for writing.\")\r\n  (define-fun var2866!1 () String \"Could not open file TokenMgrError.java\")\r\n  (define-fun var2371!2 () String \"Could not open file \")\r\n  (define-fun var2371!1 () String \"\")\r\n  (define-fun var2059!1 () String \"Failed to create TokenMgrError.java \")\r\n  (define-fun var583!1 () String \"Failed to create TokenMgrError.java \")\r\n  (define-fun var817!1 () String \"Failed to create TokenMgrError.java\")\r\n  (define-fun var1154!2 () String \"Failed to create \")\r\n  (define-fun var1154!1 () String \"\")\r\n  (define-fun var2993 () var601 var601!174)\r\n  (define-fun var2902 () var2876 var2876!172)\r\n  (define-fun null-var601 () var601 var601!170)\r\n  (define-fun null-var2876 () var2876 var2876!168)\r\n  (define-fun var3418_isLegacyExceptionHandling/967608559 () Bool true)\r\n  (define-fun abbrev_119 ((x!0 Int)) String (ite (= x!0 0) \"Could not open file \" \"\"))\r\n  (define-fun abbrev_118 ((x!0 Int)) String (ite (= x!0 0) \"Failed to create TokenMgrError.java\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 27,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r8 := @parameter0: org.javacc.parser.JavaFiles$JavaResourceTemplateLocations",
            "z0 = staticinvoke <org.javacc.parser.Options: boolean isLegacyExceptionHandling()>()",
            "if z0 == 0 goto $r44 = \"TokenMgrException.java\"",
            "$r44 = \"TokenMgrError.java\"",
            "$r43 = \"TokenMgrError.java\"",
            "goto [?= r0 = $r43]",
            "r0 = $r43",
            "$r1 = new java.io.File",
            "$r25 := @caughtexception",
            "$r27 = <java.lang.System: java.io.PrintStream err>",
            "$r26 = new java.lang.StringBuilder",
            "specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()",
            "$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to create \")",
            "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")",
            "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25)",
            "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r32)",
            "$r33 = new java.lang.StringBuilder",
            "specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()",
            "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not open file \")",
            "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for writing.\")",
            "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void semantic_error(java.lang.String)>($r37)",
            "$r38 = new java.lang.Error",
            "specialinvoke $r38.<java.lang.Error: void <init>()>()",
            "throw $r38"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaFiles__gen_JavaCharStream__-1699746074\\860.smt2",
        "z3": {
            "memory": 30658560,
            "run_time": 0.07434344291687012,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3995:\r\n  ;;   var3995!val!0 var3995!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3995!val!0 () var3995)\r\n  (declare-fun var3995!val!1 () var3995)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3995)) (or (= x var3995!val!0) (= x var3995!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3157:\r\n  ;;   var3157!val!0 var3157!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3157!val!0 () var3157)\r\n  (declare-fun var3157!val!1 () var3157)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3157)) (or (= x var3157!val!0) (= x var3157!val!1)))\r\n  ;; -----------\r\n  (define-fun var490 () var3157\r\n    var3157!val!0)\r\n  (define-fun var3026 () String\r\n    (append/-1031950772\r\n  (str.++ var3275!1 \"Failed to create JavaCharStream \")\r\n  (cast-from-var3157-to-var1372 var490)))\r\n  (define-fun var486 () var1225\r\n    var1225-init)\r\n  (define-fun var368 () String\r\n    (str.++ var3275!1 \"Failed to create JavaCharStream \"))\r\n  (define-fun var368!1 () String\r\n    \"Failed to create JavaCharStream \")\r\n  (define-fun var3275 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3273 () var3995\r\n    var3995!val!0)\r\n  (define-fun null-var3157 () var3157\r\n    var3157!val!1)\r\n  (define-fun null-var3995 () var3995\r\n    var3995!val!1)\r\n  (define-fun var1163 () var909\r\n    var1196-err)\r\n  (define-fun var2672 () String\r\n    (append/-1031950772\r\n  (str.++ var3275!1 \"Failed to create JavaCharStream \")\r\n  (cast-from-var3157-to-var1372 var490)))\r\n  (define-fun var2946 () var2510\r\n    var2510-init)\r\n  (define-fun var3275!1 () String\r\n    \"\")\r\n  (define-fun var3275!2 () String\r\n    \"Failed to create JavaCharStream \")\r\n  (define-fun var1871 () String\r\n    \"\")\r\n  (define-fun var1163!1 () var909\r\n    var909!val!0)\r\n  (define-fun var1196-err () var909\r\n    var909!val!0)\r\n  (define-fun var1225-init () var1225\r\n    var1225!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3026!1 () String\r\n    \"\")\r\n  (define-fun var486!1 () var1225\r\n    var1225!val!0)\r\n  (define-fun var2510-init () var2510\r\n    var2510!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1372)) String\r\n    \"\")\r\n  (define-fun var3815_semantic_error/-498493661 ((x!0 String)) void\r\n    void!val!0)\r\n  (define-fun println/1773605060 ((x!0 var909) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun <init>/1750087229 ((x!0 var1225)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var3157-to-var1372 ((x!0 var3157)) var1372\r\n    var1372!val!0)\r\n)\r\n(error \"line 67 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.015181541442871094,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3995 is 2\r\n; rep: (as @var3995_0 var3995)\r\n; rep: (as @var3995_1 var3995)\r\n; cardinality of var2510 is 1\r\n; rep: (as @var2510_0 var2510)\r\n; cardinality of var3157 is 2\r\n; rep: (as @var3157_0 var3157)\r\n; rep: (as @var3157_1 var3157)\r\n; cardinality of var909 is 1\r\n; rep: (as @var909_0 var909)\r\n; cardinality of var1196 is 1\r\n; rep: (as @var1196_0 var1196)\r\n; cardinality of var1372 is 1\r\n; rep: (as @var1372_0 var1372)\r\n; cardinality of var3815 is 1\r\n; rep: (as @var3815_0 var3815)\r\n; cardinality of var1225 is 1\r\n; rep: (as @var1225_0 var1225)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2510-init () var2510 (as @var2510_0 var2510))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_936 String) (BOUND_VARIABLE_937 var1372)) String \"\")\r\n(define-fun cast-from-var3157-to-var1372 ((BOUND_VARIABLE_940 var3157)) var1372 (as @var1372_0 var1372))\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_943 var909) (BOUND_VARIABLE_944 String)) void (as @void_0 void))\r\n(define-fun var3815_semantic_error/-498493661 ((BOUND_VARIABLE_947 String)) void (as @void_0 void))\r\n(define-fun var1225-init () var1225 (as @var1225_0 var1225))\r\n(define-fun <init>/1750087229 ((BOUND_VARIABLE_950 var1225)) void (as @void_0 void))\r\n(define-fun null-var3995 () var3995 (as @var3995_0 var3995))\r\n(define-fun null-var3157 () var3157 (as @var3157_0 var3157))\r\n(define-fun var1196-err () var909 (as @var909_0 var909))\r\n(define-fun var3273 () var3995 (as @var3995_1 var3995))\r\n(define-fun var490 () var3157 (as @var3157_1 var3157))\r\n(define-fun var3275!1 () String \"\")\r\n(define-fun var3275!2 () String \"Failed to create JavaCharStream \")\r\n(define-fun var368!1 () String \"Failed to create JavaCharStream \")\r\n(define-fun var1163!1 () var909 (as @var909_0 var909))\r\n(define-fun var3026!1 () String \"\")\r\n(define-fun var1871 () String \"\")\r\n(define-fun var486!1 () var1225 (as @var1225_0 var1225))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37392384,
            "run_time": 0.06136631965637207,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3995:\n  ;;   var3995!val!0 var3995!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3995!val!0 () var3995)\n  (declare-fun var3995!val!1 () var3995)\n  ;; cardinality constraint:\n  (forall ((x var3995)) (or (= x var3995!val!0) (= x var3995!val!1)))\n  ;; -----------\n  ;; universe for var3157:\n  ;;   var3157!val!0 var3157!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3157!val!0 () var3157)\n  (declare-fun var3157!val!1 () var3157)\n  ;; cardinality constraint:\n  (forall ((x var3157)) (or (= x var3157!val!0) (= x var3157!val!1)))\n  ;; -----------\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var486 () var1225\n    var1225-init)\n  (define-fun var2672 () String\n    (append/-1031950772\n  (str.++ var3275!1 \"Failed to create JavaCharStream \")\n  (cast-from-var3157-to-var1372 var490)))\n  (define-fun null-var3157 () var3157\n    var3157!val!1)\n  (define-fun null-var3995 () var3995\n    var3995!val!1)\n  (define-fun var368!1 () String\n    \"Failed to create JavaCharStream \")\n  (define-fun var490 () var3157\n    var3157!val!0)\n  (define-fun var3275 () String\n    String-init)\n  (define-fun var3275!2 () String\n    \"Failed to create JavaCharStream \")\n  (define-fun var2946 () var2510\n    var2510-init)\n  (define-fun var3273 () var3995\n    var3995!val!0)\n  (define-fun var368 () String\n    (str.++ var3275!1 \"Failed to create JavaCharStream \"))\n  (define-fun var1163 () var909\n    var1196-err)\n  (define-fun var3026 () String\n    (append/-1031950772\n  (str.++ var3275!1 \"Failed to create JavaCharStream \")\n  (cast-from-var3157-to-var1372 var490)))\n  (define-fun var3275!1 () String\n    \"\")\n  (define-fun var1871 () String\n    \"\")\n  (define-fun var1163!1 () var909\n    var909!val!0)\n  (define-fun var1196-err () var909\n    var909!val!0)\n  (define-fun var1225-init () var1225\n    var1225!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3026!1 () String\n    \"\")\n  (define-fun var486!1 () var1225\n    var1225!val!0)\n  (define-fun var2510-init () var2510\n    var2510!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1372)) String\n    \"\")\n  (define-fun var3815_semantic_error/-498493661 ((x!0 String)) void\n    void!val!0)\n  (define-fun println/1773605060 ((x!0 var909) (x!1 String)) void\n    void!val!0)\n  (define-fun <init>/1750087229 ((x!0 var1225)) void\n    void!val!0)\n  (define-fun cast-from-var3157-to-var1372 ((x!0 var3157)) var1372\n    var1372!val!0)\n)\n(error \"line 67 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 183226368,
            "run_time": 1.0724267959594727,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var368!1 () String \"Failed to create JavaCharStream \")\r\n  (define-fun var3275!2 () String \"Failed to create JavaCharStream \")\r\n  (define-fun var3275!1 () String \"\")\r\n  (define-fun var490 () var3157 var3157!72)\r\n  (define-fun var3273 () var3995 var3995!70)\r\n  (define-fun null-var3157 () var3157 var3157!68)\r\n  (define-fun null-var3995 () var3995 var3995!66)\r\n  (define-fun abbrev_116 ((x!0 Int)) String (ite (= x!0 0) \"Failed to create JavaCharStream \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r10 := @parameter0: org.javacc.parser.JavaFiles$JavaResourceTemplateLocations",
            "$r0 = new java.io.File",
            "$r28 := @caughtexception",
            "$r30 = <java.lang.System: java.io.PrintStream err>",
            "$r29 = new java.lang.StringBuilder",
            "specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()",
            "$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to create JavaCharStream \")",
            "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28)",
            "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r33)",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void semantic_error(java.lang.String)>(\"Could not open file JavaCharStream.java for writing.\")",
            "$r34 = new java.lang.Error",
            "specialinvoke $r34.<java.lang.Error: void <init>()>()",
            "throw $r34"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__getIdString__-267384014\\648.smt2",
        "z3": {
            "memory": 267464704,
            "run_time": 60.012123107910156,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.01564812660217285,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var652 is 2\r\n; rep: (as @var652_0 var652)\r\n; rep: (as @var652_1 var652)\r\n; cardinality of var2764 is 1\r\n; rep: (as @var2764_0 var2764)\r\n; cardinality of var292 is 1\r\n; rep: (as @var292_0 var292)\r\n; cardinality of var332 is 1\r\n; rep: (as @var332_0 var332)\r\n; cardinality of var2703 is 1\r\n; rep: (as @var2703_0 var2703)\r\n; cardinality of var168 is 1\r\n; rep: (as @var168_0 var168)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var652_size/-959786421 ((_arg_1 var652)) Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun var652_get/-1216255739 ((_arg_1 var652) (_arg_2 Int)) var292 (as @var292_0 var292))\r\n(define-fun cast-from-var292-to-String ((_arg_1 var292)) String \"AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\")\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_792 var332) (BOUND_VARIABLE_793 String)) void (as @void_0 void))\r\n(define-fun var168-init () var168 (as @var168_0 var168))\r\n(define-fun <init>/1750087229 ((BOUND_VARIABLE_796 var168)) void (as @void_0 void))\r\n(define-fun null-var652 () var652 (as @var652_0 var652))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2703-out () var332 (as @var332_0 var332))\r\n(define-fun var1637 () var652 (as @var652_1 var652))\r\n(define-fun var1708 () String \"\")\r\n(define-fun var590!1 () String \"\")\r\n(define-fun var590!2 () String \"Generated By:\")\r\n(define-fun var1989!1 () String \"Generated By:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA\")\r\n(define-fun var2344!1 () String \"Generated By:AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA:\")\r\n(define-fun var1524!1 () var332 (as @var332_0 var332))\r\n(define-fun var3573 () String \"\")\r\n(define-fun var2258!1 () var168 (as @var168_0 var168))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36581376,
            "run_time": 0.04598379135131836,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 76 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 77 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182067200,
            "run_time": 1.0412585735321045,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var652/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCGlobals__getIdString__-267384014\\648.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2344!1 =\r\n     concat(all_34_4, \":\")\r\n   all_31_4 =\r\n     concat(all_31_5, \":\")\r\n   var1989!1 =\r\n     concat(\"Generated By:\", all_28_3)\r\n   all_34_4 =\r\n     concat(\"Generated By:\", all_28_3)\r\n   all_31_5 =\r\n     concat(\"Generated By:\", all_28_3)\r\n\r\n782ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.util.List",
            "r9 := @parameter1: java.lang.String",
            "r22 = \"Generated By:\"",
            "i3 = 0",
            "$i0 = interfaceinvoke r0.<java.util.List: int size()>()",
            "$i1 = $i0 - 1",
            "if i3 >= $i1 goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22)",
            "$r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3)",
            "$r3 = (java.lang.String) $r2",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")",
            "r23 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i2 = virtualinvoke r23.<java.lang.String: int length()>()",
            "if $i2 <= 200 goto $r7 = new java.lang.StringBuilder",
            "$r14 = <java.lang.System: java.io.PrintStream out>",
            "virtualinvoke $r14.<java.io.PrintStream: void println(java.lang.String)>(\"Tool names too long.\")",
            "$r15 = new java.lang.Error",
            "specialinvoke $r15.<java.lang.Error: void <init>()>()",
            "throw $r15"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaFiles__gen_ParseException__-945244790\\1029.smt2",
        "z3": {
            "memory": 31485952,
            "run_time": 0.04434561729431152,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var914:\r\n  ;;   var914!val!0 var914!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var914!val!0 () var914)\r\n  (declare-fun var914!val!1 () var914)\r\n  ;; cardinality constraint:\r\n  (forall ((x var914)) (or (= x var914!val!0) (= x var914!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2849:\r\n  ;;   var2849!val!0 var2849!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2849!val!0 () var2849)\r\n  (declare-fun var2849!val!1 () var2849)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2849)) (or (= x var2849!val!0) (= x var2849!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var914 () var914\r\n    var914!val!1)\r\n  (define-fun var1919!1 () String\r\n    \"Failed to create ParseException \")\r\n  (define-fun var1712 () var2849\r\n    var2849!val!0)\r\n  (define-fun var949 () String\r\n    String-init)\r\n  (define-fun var1919 () String\r\n    (str.++ var949!1 \"Failed to create ParseException \"))\r\n  (define-fun var3168 () var2908\r\n    var2908-init)\r\n  (define-fun null-var2849 () var2849\r\n    var2849!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2231 () var3193\r\n    var3193-init)\r\n  (define-fun var2843 () var914\r\n    var914!val!0)\r\n  (define-fun var3167 () String\r\n    (append/-1031950772\r\n  (str.++ var949!1 \"Failed to create ParseException \")\r\n  (cast-from-var2849-to-var3226 var1712)))\r\n  (define-fun var562 () String\r\n    (append/-1031950772\r\n  (str.++ var949!1 \"Failed to create ParseException \")\r\n  (cast-from-var2849-to-var3226 var1712)))\r\n  (define-fun var3952 () var1502\r\n    var1612-err)\r\n  (define-fun var949!2 () String\r\n    \"Failed to create ParseException \")\r\n  (define-fun var949!1 () String\r\n    \"\")\r\n  (define-fun var3193-init () var3193\r\n    var3193!val!0)\r\n  (define-fun var2908-init () var2908\r\n    var2908!val!0)\r\n  (define-fun var2231!1 () var3193\r\n    var3193!val!0)\r\n  (define-fun var3167!1 () String\r\n    \"\")\r\n  (define-fun var1612-err () var1502\r\n    var1502!val!0)\r\n  (define-fun var3473 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3952!1 () var1502\r\n    var1502!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3226)) String\r\n    \"\")\r\n  (define-fun println/1773605060 ((x!0 var1502) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun var3740_semantic_error/-498493661 ((x!0 String)) void\r\n    void!val!0)\r\n  (define-fun <init>/1750087229 ((x!0 var3193)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var2849-to-var3226 ((x!0 var2849)) var3226\r\n    var3226!val!0)\r\n)\r\n(error \"line 67 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8912896,
            "run_time": 0.029842853546142578,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var914 is 2\r\n; rep: (as @var914_0 var914)\r\n; rep: (as @var914_1 var914)\r\n; cardinality of var2908 is 1\r\n; rep: (as @var2908_0 var2908)\r\n; cardinality of var2849 is 2\r\n; rep: (as @var2849_0 var2849)\r\n; rep: (as @var2849_1 var2849)\r\n; cardinality of var1502 is 1\r\n; rep: (as @var1502_0 var1502)\r\n; cardinality of var1612 is 1\r\n; rep: (as @var1612_0 var1612)\r\n; cardinality of var3226 is 1\r\n; rep: (as @var3226_0 var3226)\r\n; cardinality of var3740 is 1\r\n; rep: (as @var3740_0 var3740)\r\n; cardinality of var3193 is 1\r\n; rep: (as @var3193_0 var3193)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2908-init () var2908 (as @var2908_0 var2908))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_936 String) (BOUND_VARIABLE_937 var3226)) String \"\")\r\n(define-fun cast-from-var2849-to-var3226 ((BOUND_VARIABLE_940 var2849)) var3226 (as @var3226_0 var3226))\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_943 var1502) (BOUND_VARIABLE_944 String)) void (as @void_0 void))\r\n(define-fun var3740_semantic_error/-498493661 ((BOUND_VARIABLE_947 String)) void (as @void_0 void))\r\n(define-fun var3193-init () var3193 (as @var3193_0 var3193))\r\n(define-fun <init>/1750087229 ((BOUND_VARIABLE_950 var3193)) void (as @void_0 void))\r\n(define-fun null-var914 () var914 (as @var914_0 var914))\r\n(define-fun null-var2849 () var2849 (as @var2849_0 var2849))\r\n(define-fun var1612-err () var1502 (as @var1502_0 var1502))\r\n(define-fun var2843 () var914 (as @var914_1 var914))\r\n(define-fun var1712 () var2849 (as @var2849_1 var2849))\r\n(define-fun var949!1 () String \"\")\r\n(define-fun var949!2 () String \"Failed to create ParseException \")\r\n(define-fun var1919!1 () String \"Failed to create ParseException \")\r\n(define-fun var3952!1 () var1502 (as @var1502_0 var1502))\r\n(define-fun var3167!1 () String \"\")\r\n(define-fun var3473 () String \"\")\r\n(define-fun var2231!1 () var3193 (as @var3193_0 var3193))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36925440,
            "run_time": 0.061986446380615234,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var914:\n  ;;   var914!val!0 var914!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var914!val!0 () var914)\n  (declare-fun var914!val!1 () var914)\n  ;; cardinality constraint:\n  (forall ((x var914)) (or (= x var914!val!0) (= x var914!val!1)))\n  ;; -----------\n  ;; universe for var2849:\n  ;;   var2849!val!0 var2849!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2849!val!0 () var2849)\n  (declare-fun var2849!val!1 () var2849)\n  ;; cardinality constraint:\n  (forall ((x var2849)) (or (= x var2849!val!0) (= x var2849!val!1)))\n  ;; -----------\n  (define-fun null-var914 () var914\n    var914!val!1)\n  (define-fun var1919 () String\n    (str.++ var949!1 \"Failed to create ParseException \"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var2849 () var2849\n    var2849!val!1)\n  (define-fun var1919!1 () String\n    \"Failed to create ParseException \")\n  (define-fun var2843 () var914\n    var914!val!0)\n  (define-fun var3168 () var2908\n    var2908-init)\n  (define-fun var2231 () var3193\n    var3193-init)\n  (define-fun var949 () String\n    String-init)\n  (define-fun var3952 () var1502\n    var1612-err)\n  (define-fun var1712 () var2849\n    var2849!val!0)\n  (define-fun var949!1 () String\n    \"\")\n  (define-fun var3167 () String\n    (append/-1031950772\n  (str.++ var949!1 \"Failed to create ParseException \")\n  (cast-from-var2849-to-var3226 var1712)))\n  (define-fun var562 () String\n    (append/-1031950772\n  (str.++ var949!1 \"Failed to create ParseException \")\n  (cast-from-var2849-to-var3226 var1712)))\n  (define-fun var949!2 () String\n    \"Failed to create ParseException \")\n  (define-fun var3193-init () var3193\n    var3193!val!0)\n  (define-fun var2908-init () var2908\n    var2908!val!0)\n  (define-fun var2231!1 () var3193\n    var3193!val!0)\n  (define-fun var3167!1 () String\n    \"\")\n  (define-fun var1612-err () var1502\n    var1502!val!0)\n  (define-fun var3473 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3952!1 () var1502\n    var1502!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3226)) String\n    \"\")\n  (define-fun println/1773605060 ((x!0 var1502) (x!1 String)) void\n    void!val!0)\n  (define-fun var3740_semantic_error/-498493661 ((x!0 String)) void\n    void!val!0)\n  (define-fun <init>/1750087229 ((x!0 var3193)) void\n    void!val!0)\n  (define-fun cast-from-var2849-to-var3226 ((x!0 var2849)) var3226\n    var3226!val!0)\n)\n(error \"line 67 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181858304,
            "run_time": 0.8652820587158203,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1919!1 () String \"Failed to create ParseException \")\r\n  (define-fun var949!2 () String \"Failed to create ParseException \")\r\n  (define-fun var949!1 () String \"\")\r\n  (define-fun var1712 () var2849 var2849!72)\r\n  (define-fun var2843 () var914 var914!70)\r\n  (define-fun null-var2849 () var2849 var2849!68)\r\n  (define-fun null-var914 () var914 var914!66)\r\n  (define-fun abbrev_116 ((x!0 Int)) String (ite (= x!0 0) \"Failed to create ParseException \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r7 := @parameter0: org.javacc.parser.JavaFiles$JavaResourceTemplateLocations",
            "$r0 = new java.io.File",
            "$r24 := @caughtexception",
            "$r26 = <java.lang.System: java.io.PrintStream err>",
            "$r25 = new java.lang.StringBuilder",
            "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()",
            "$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to create ParseException \")",
            "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24)",
            "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r29)",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void semantic_error(java.lang.String)>(\"Could not open file ParseException.java for writing.\")",
            "$r30 = new java.lang.Error",
            "specialinvoke $r30.<java.lang.Error: void <init>()>()",
            "throw $r30"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaFiles__gen_SimpleCharStream__2124768310\\890.smt2",
        "z3": {
            "memory": 32739328,
            "run_time": 0.044910430908203125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2544:\r\n  ;;   var2544!val!1 var2544!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2544!val!1 () var2544)\r\n  (declare-fun var2544!val!0 () var2544)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2544)) (or (= x var2544!val!1) (= x var2544!val!0)))\r\n  ;; -----------\r\n  ;; universe for var970:\r\n  ;;   var970!val!0 var970!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var970!val!0 () var970)\r\n  (declare-fun var970!val!1 () var970)\r\n  ;; cardinality constraint:\r\n  (forall ((x var970)) (or (= x var970!val!0) (= x var970!val!1)))\r\n  ;; -----------\r\n  (define-fun var1563 () var2544\r\n    var2544!val!0)\r\n  (define-fun null-var2544 () var2544\r\n    var2544!val!1)\r\n  (define-fun var1849 () String\r\n    String-init)\r\n  (define-fun var3662 () String\r\n    (append/-1031950772\r\n  (str.++ var1849!1 \"Failed to create SimpleCharStream \")\r\n  (cast-from-var970-to-var966 var2185)))\r\n  (define-fun var1651 () var3894\r\n    var3894-init)\r\n  (define-fun var2185 () var970\r\n    var970!val!0)\r\n  (define-fun var2355 () String\r\n    (append/-1031950772\r\n  (str.++ var1849!1 \"Failed to create SimpleCharStream \")\r\n  (cast-from-var970-to-var966 var2185)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var380!1 () String\r\n    \"Failed to create SimpleCharStream \")\r\n  (define-fun var2671 () var3363\r\n    var3363-init)\r\n  (define-fun var394 () var2471\r\n    var2299-err)\r\n  (define-fun var380 () String\r\n    (str.++ var1849!1 \"Failed to create SimpleCharStream \"))\r\n  (define-fun null-var970 () var970\r\n    var970!val!1)\r\n  (define-fun var1849!1 () String\r\n    \"\")\r\n  (define-fun var1849!2 () String\r\n    \"Failed to create SimpleCharStream \")\r\n  (define-fun var394!1 () var2471\r\n    var2471!val!0)\r\n  (define-fun var637 () String\r\n    \"\")\r\n  (define-fun var1651!1 () var3894\r\n    var3894!val!0)\r\n  (define-fun var2355!1 () String\r\n    \"\")\r\n  (define-fun var2299-err () var2471\r\n    var2471!val!0)\r\n  (define-fun var3363-init () var3363\r\n    var3363!val!0)\r\n  (define-fun var3894-init () var3894\r\n    var3894!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var966)) String\r\n    \"\")\r\n  (define-fun println/1773605060 ((x!0 var2471) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun <init>/1750087229 ((x!0 var3894)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var970-to-var966 ((x!0 var970)) var966\r\n    var966!val!0)\r\n  (define-fun var2617_semantic_error/-498493661 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 67 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8912896,
            "run_time": 0.015523433685302734,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2544 is 2\r\n; rep: (as @var2544_0 var2544)\r\n; rep: (as @var2544_1 var2544)\r\n; cardinality of var3363 is 1\r\n; rep: (as @var3363_0 var3363)\r\n; cardinality of var970 is 2\r\n; rep: (as @var970_0 var970)\r\n; rep: (as @var970_1 var970)\r\n; cardinality of var2471 is 1\r\n; rep: (as @var2471_0 var2471)\r\n; cardinality of var2299 is 1\r\n; rep: (as @var2299_0 var2299)\r\n; cardinality of var966 is 1\r\n; rep: (as @var966_0 var966)\r\n; cardinality of var2617 is 1\r\n; rep: (as @var2617_0 var2617)\r\n; cardinality of var3894 is 1\r\n; rep: (as @var3894_0 var3894)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3363-init () var3363 (as @var3363_0 var3363))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_935 String) (BOUND_VARIABLE_936 var966)) String \"\")\r\n(define-fun cast-from-var970-to-var966 ((BOUND_VARIABLE_939 var970)) var966 (as @var966_0 var966))\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_942 var2471) (BOUND_VARIABLE_943 String)) void (as @void_0 void))\r\n(define-fun var2617_semantic_error/-498493661 ((BOUND_VARIABLE_946 String)) void (as @void_0 void))\r\n(define-fun var3894-init () var3894 (as @var3894_0 var3894))\r\n(define-fun <init>/1750087229 ((BOUND_VARIABLE_949 var3894)) void (as @void_0 void))\r\n(define-fun null-var2544 () var2544 (as @var2544_0 var2544))\r\n(define-fun null-var970 () var970 (as @var970_0 var970))\r\n(define-fun var2299-err () var2471 (as @var2471_0 var2471))\r\n(define-fun var1563 () var2544 (as @var2544_1 var2544))\r\n(define-fun var2185 () var970 (as @var970_1 var970))\r\n(define-fun var1849!1 () String \"\")\r\n(define-fun var1849!2 () String \"Failed to create SimpleCharStream \")\r\n(define-fun var380!1 () String \"Failed to create SimpleCharStream \")\r\n(define-fun var394!1 () var2471 (as @var2471_0 var2471))\r\n(define-fun var2355!1 () String \"\")\r\n(define-fun var637 () String \"\")\r\n(define-fun var1651!1 () var3894 (as @var3894_0 var3894))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36786176,
            "run_time": 0.07638120651245117,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2544:\n  ;;   var2544!val!1 var2544!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2544!val!1 () var2544)\n  (declare-fun var2544!val!0 () var2544)\n  ;; cardinality constraint:\n  (forall ((x var2544)) (or (= x var2544!val!1) (= x var2544!val!0)))\n  ;; -----------\n  ;; universe for var970:\n  ;;   var970!val!0 var970!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var970!val!0 () var970)\n  (declare-fun var970!val!1 () var970)\n  ;; cardinality constraint:\n  (forall ((x var970)) (or (= x var970!val!0) (= x var970!val!1)))\n  ;; -----------\n  (define-fun var380!1 () String\n    \"Failed to create SimpleCharStream \")\n  (define-fun var2355 () String\n    (append/-1031950772\n  (str.++ var1849!1 \"Failed to create SimpleCharStream \")\n  (cast-from-var970-to-var966 var2185)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2185 () var970\n    var970!val!0)\n  (define-fun var380 () String\n    (str.++ var1849!1 \"Failed to create SimpleCharStream \"))\n  (define-fun var3662 () String\n    (append/-1031950772\n  (str.++ var1849!1 \"Failed to create SimpleCharStream \")\n  (cast-from-var970-to-var966 var2185)))\n  (define-fun var394 () var2471\n    var2299-err)\n  (define-fun null-var970 () var970\n    var970!val!1)\n  (define-fun var1563 () var2544\n    var2544!val!0)\n  (define-fun null-var2544 () var2544\n    var2544!val!1)\n  (define-fun var1849!2 () String\n    \"Failed to create SimpleCharStream \")\n  (define-fun var1651 () var3894\n    var3894-init)\n  (define-fun var1849 () String\n    String-init)\n  (define-fun var2671 () var3363\n    var3363-init)\n  (define-fun var1849!1 () String\n    \"\")\n  (define-fun var394!1 () var2471\n    var2471!val!0)\n  (define-fun var637 () String\n    \"\")\n  (define-fun var1651!1 () var3894\n    var3894!val!0)\n  (define-fun var2355!1 () String\n    \"\")\n  (define-fun var2299-err () var2471\n    var2471!val!0)\n  (define-fun var3363-init () var3363\n    var3363!val!0)\n  (define-fun var3894-init () var3894\n    var3894!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var966)) String\n    \"\")\n  (define-fun println/1773605060 ((x!0 var2471) (x!1 String)) void\n    void!val!0)\n  (define-fun <init>/1750087229 ((x!0 var3894)) void\n    void!val!0)\n  (define-fun cast-from-var970-to-var966 ((x!0 var970)) var966\n    var966!val!0)\n  (define-fun var2617_semantic_error/-498493661 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 67 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182263808,
            "run_time": 0.8965859413146973,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var380!1 () String \"Failed to create SimpleCharStream \")\r\n  (define-fun var1849!2 () String \"Failed to create SimpleCharStream \")\r\n  (define-fun var1849!1 () String \"\")\r\n  (define-fun var2185 () var970 var970!76)\r\n  (define-fun var1563 () var2544 var2544!74)\r\n  (define-fun null-var970 () var970 var970!72)\r\n  (define-fun null-var2544 () var2544 var2544!70)\r\n  (define-fun abbrev_116 ((x!0 Int)) String (ite (= x!0 0) \"Failed to create SimpleCharStream \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r10 := @parameter0: org.javacc.parser.JavaFiles$JavaResourceTemplateLocations",
            "$r0 = new java.io.File",
            "$r28 := @caughtexception",
            "$r30 = <java.lang.System: java.io.PrintStream err>",
            "$r29 = new java.lang.StringBuilder",
            "specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()",
            "$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to create SimpleCharStream \")",
            "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r28)",
            "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r30.<java.io.PrintStream: void println(java.lang.String)>($r33)",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void semantic_error(java.lang.String)>(\"Could not open file SimpleCharStream.java for writing.\")",
            "$r34 = new java.lang.Error",
            "specialinvoke $r34.<java.lang.Error: void <init>()>()",
            "throw $r34"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Expansion__toString__-1508376302\\660.smt2",
        "z3": {
            "memory": 32432128,
            "run_time": 60.01113533973694,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13185024,
            "run_time": 0.029783010482788086,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3697 is 2\r\n; rep: (as @var3697_0 var3697)\r\n; rep: (as @var3697_1 var3697)\r\n; cardinality of var2452 is 1\r\n; rep: (as @var2452_0 var2452)\r\n; cardinality of var1892 is 1\r\n; rep: (as @var1892_0 var1892)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getLine/-753183392 ((_arg_1 var3697)) Int (- 1))\r\n(define-fun getColumn/1743199486 ((_arg_1 var3697)) Int (- 1))\r\n(define-fun var2452_identityHashCode/1096208673 ((BOUND_VARIABLE_2526 var1892)) Int 0)\r\n(define-fun cast-from-var3697-to-var1892 ((BOUND_VARIABLE_2529 var3697)) var1892 (as @var1892_0 var1892))\r\n(define-fun getSimpleName/675546153 ((BOUND_VARIABLE_2532 var3697)) String \"\")\r\n(define-fun null-var3697 () var3697 (as @var3697_0 var3697))\r\n(define-fun var2585 () var3697 (as @var3697_1 var3697))\r\n(define-fun var1856!1 () String \"\")\r\n(define-fun var1856!2 () String \"[\")\r\n(define-fun var3760!1 () String \"[\")\r\n(define-fun var1684!1 () String \"[,\")\r\n(define-fun var1036!1 () String \"[,\")\r\n(define-fun var3628!1 () String \"[, \")\r\n(define-fun var2236!1 () String \"[, \")\r\n(define-fun var1274!1 () String \"[, 0 \")\r\n(define-fun var3391!1 () String \"[, 0 \")\r\n(define-fun var2947!1 () String \"[, 0 ]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39301120,
            "run_time": 0.13858628273010254,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 75 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 76 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 209092608,
            "run_time": 1.129509449005127,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3697/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.Expansion__toString__-1508376302\\660.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2947!1 =\r\n     concat(all_40_9, \"]\")\r\n   var3391!1 =\r\n     concat(\"[,  \", all_37_8)\r\n   all_40_9 =\r\n     concat(\"[,  \", all_37_8)\r\n\r\n872ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 25,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.parser.Expansion",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[\")",
            "$i0 = virtualinvoke r1.<org.javacc.parser.Expansion: int getLine()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",\")",
            "$i1 = virtualinvoke r1.<org.javacc.parser.Expansion: int getColumn()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")",
            "$i2 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)",
            "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")",
            "$r8 = specialinvoke r1.<org.javacc.parser.Expansion: java.lang.String getSimpleName()>()",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r12"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaFiles__replaceBackslash__-1635804809\\786.smt2",
        "z3": {
            "memory": 26394624,
            "run_time": 0.05637836456298828,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3171 () String\r\n    \"\")\r\n  (define-fun var3335 () Int\r\n    (str.len var3171))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1058 () Int\r\n    0)\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.014523506164550781,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2251 is 1\r\n; rep: (as @var2251_0 var2251)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3171 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35704832,
            "run_time": 0.06143546104431152,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3171 () String\n    \"\")\n  (define-fun var1058 () Int\n    0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3335 () Int\n    (str.len var3171))\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 144363520,
            "run_time": 0.8035111427307129,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3171 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i4 = 0",
            "i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i4 >= i0 goto (branch)",
            "if i4 != i0 goto $r3 = new java.lang.StringBuffer",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCErrors__fatal__75586990\\825.smt2",
        "z3": {
            "memory": 32415744,
            "run_time": 0.0738668441772461,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1889 () String\r\n    (str.++ var1784!1 \"Fatal Error: \" var919))\r\n  (define-fun var1622 () var3300\r\n    var3300-init)\r\n  (define-fun var919 () String\r\n    \"A\")\r\n  (define-fun var3305 () String\r\n    (str.++ var1784!1 \"Fatal Error: \" var919))\r\n  (define-fun var124 () String\r\n    String-init)\r\n  (define-fun var1047 () String\r\n    (str.++ var124!1 \"Fatal Error: \" var919))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var903 () String\r\n    (str.++ var124!1 \"Fatal Error: \"))\r\n  (define-fun var2990 () String\r\n    (str.++ var124!1 \"Fatal Error: \" var919))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3889 () var1804\r\n    var73-err)\r\n  (define-fun var1784 () String\r\n    String-init)\r\n  (define-fun var3061 () String\r\n    (str.++ var1784!1 \"Fatal Error: \"))\r\n  (define-fun var124!2 () String\r\n    \"Fatal Error: \")\r\n  (define-fun var3061!1 () String\r\n    \"Fatal Error: A\")\r\n  (define-fun var903!1 () String\r\n    \"Fatal Error: A\")\r\n  (define-fun var124!1 () String\r\n    \"\")\r\n  (define-fun var1784!2 () String\r\n    \"Fatal Error: \")\r\n  (define-fun var1784!1 () String\r\n    \"\")\r\n  (define-fun var3305!1 () String\r\n    \"\")\r\n  (define-fun var3889!1 () var1804\r\n    var1804!val!0)\r\n  (define-fun var2990!1 () String\r\n    \"\")\r\n  (define-fun var3300-init () var3300\r\n    var3300!val!0)\r\n  (define-fun var73-err () var1804\r\n    var1804!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1622!1 () var3300\r\n    var3300!val!0)\r\n  (define-fun <init>/-1084991535 ((x!0 var3300) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun println/1773605060 ((x!0 var1804) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 67 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8908800,
            "run_time": 0.015541553497314453,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var707 is 1\r\n; rep: (as @var707_0 var707)\r\n; cardinality of var1804 is 1\r\n; rep: (as @var1804_0 var1804)\r\n; cardinality of var73 is 1\r\n; rep: (as @var73_0 var73)\r\n; cardinality of var3300 is 1\r\n; rep: (as @var3300_0 var3300)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_648 var1804) (BOUND_VARIABLE_649 String)) void (as @void_0 void))\r\n(define-fun var3300-init () var3300 (as @var3300_0 var3300))\r\n(define-fun <init>/-1084991535 ((BOUND_VARIABLE_652 var3300) (BOUND_VARIABLE_653 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var73-err () var1804 (as @var1804_0 var1804))\r\n(define-fun var919 () String \"\")\r\n(define-fun var1784!1 () String \"\")\r\n(define-fun var1784!2 () String \"Fatal Error: \")\r\n(define-fun var3061!1 () String \"Fatal Error: \")\r\n(define-fun var3889!1 () var1804 (as @var1804_0 var1804))\r\n(define-fun var3305!1 () String \"\")\r\n(define-fun var124!1 () String \"\")\r\n(define-fun var124!2 () String \"Fatal Error: \")\r\n(define-fun var903!1 () String \"Fatal Error: \")\r\n(define-fun var1622!1 () var3300 (as @var3300_0 var3300))\r\n(define-fun var2990!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36405248,
            "run_time": 0.06010007858276367,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1784!1 () String\n    \"\")\n  (define-fun var1784!2 () String\n    \"Fatal Error: \")\n  (define-fun var124!1 () String\n    \"\")\n  (define-fun var903!1 () String\n    \"Fatal Error: \\u{0}\\u{0}\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3061!1 () String\n    \"Fatal Error: \\u{0}\\u{0}\")\n  (define-fun var124!2 () String\n    \"Fatal Error: \")\n  (define-fun var1889 () String\n    (str.++ var1784!1 \"Fatal Error: \" var919))\n  (define-fun var3305 () String\n    (str.++ var1784!1 \"Fatal Error: \" var919))\n  (define-fun var903 () String\n    (str.++ var124!1 \"Fatal Error: \"))\n  (define-fun var919 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3889 () var1804\n    var73-err)\n  (define-fun var1047 () String\n    (str.++ var124!1 \"Fatal Error: \" var919))\n  (define-fun var1784 () String\n    String-init)\n  (define-fun var3061 () String\n    (str.++ var1784!1 \"Fatal Error: \"))\n  (define-fun var124 () String\n    String-init)\n  (define-fun var2990 () String\n    (str.++ var124!1 \"Fatal Error: \" var919))\n  (define-fun var1622 () var3300\n    var3300-init)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3305!1 () String\n    \"\")\n  (define-fun var3889!1 () var1804\n    var1804!val!0)\n  (define-fun var2990!1 () String\n    \"\")\n  (define-fun var3300-init () var3300\n    var3300!val!0)\n  (define-fun var73-err () var1804\n    var1804!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1622!1 () var3300\n    var3300!val!0)\n  (define-fun <init>/-1084991535 ((x!0 var3300) (x!1 String)) void\n    void!val!0)\n  (define-fun println/1773605060 ((x!0 var1804) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 67 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 188665856,
            "run_time": 1.0037188529968262,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var903!1 () String \"Fatal Error: \")\r\n  (define-fun var124!2 () String \"Fatal Error: \")\r\n  (define-fun var124!1 () String \"\")\r\n  (define-fun var3061!1 () String \"Fatal Error: \")\r\n  (define-fun var1784!2 () String \"Fatal Error: \")\r\n  (define-fun var1784!1 () String \"\")\r\n  (define-fun var919 () String \"\")\r\n  (define-fun null-String () String \" \")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.String",
            "$r1 = <java.lang.System: java.io.PrintStream err>",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Fatal Error: \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)",
            "$r6 = new java.lang.RuntimeException",
            "$r7 = new java.lang.StringBuilder",
            "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Fatal Error: \")",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String)>($r10)",
            "throw $r6"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParserTokenManager__\u300ainit\u300b__2129430760\\2308.smt2",
        "z3": {
            "memory": 31883264,
            "run_time": 60.0126371383667,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8871936,
            "run_time": 0.014600038528442383,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2104 is 14\r\n; rep: (as @var2104_0 var2104)\r\n; rep: (as @var2104_1 var2104)\r\n; rep: (as @var2104_2 var2104)\r\n; rep: (as @var2104_3 var2104)\r\n; rep: (as @var2104_4 var2104)\r\n; rep: (as @var2104_5 var2104)\r\n; rep: (as @var2104_6 var2104)\r\n; rep: (as @var2104_7 var2104)\r\n; rep: (as @var2104_8 var2104)\r\n; rep: (as @var2104_9 var2104)\r\n; rep: (as @var2104_10 var2104)\r\n; rep: (as @var2104_11 var2104)\r\n; rep: (as @var2104_12 var2104)\r\n; rep: (as @var2104_13 var2104)\r\n; cardinality of var3984 is 2\r\n; rep: (as @var3984_0 var3984)\r\n; rep: (as @var3984_1 var3984)\r\n; cardinality of var2717 is 1\r\n; rep: (as @var2717_0 var2717)\r\n; cardinality of var3155 is 1\r\n; rep: (as @var3155_0 var3155)\r\n; cardinality of var3987 is 1\r\n; rep: (as @var3987_0 var3987)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun <init>/-279557996 ((BOUND_VARIABLE_784 var2717)) void (as @void_0 void))\r\n(define-fun cast-from-var2104-to-var2717 ((BOUND_VARIABLE_787 var2104)) var2717 (as @var2717_0 var2717))\r\n(define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun beginLine/1964309570 ((_arg_1 var2104)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun beginCol/1964309570 ((_arg_1 var2104)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun depth/1964309570 ((_arg_1 var2104)) Int 0)\r\n(define-fun size/1964309570 ((_arg_1 var2104)) Int 10)\r\n(define-fun debugStream/1964309570 ((BOUND_VARIABLE_791 var2104)) var3155 (as @var3155_0 var3155))\r\n(define-fun jjrounds/1964309570 ((_arg_1 var2104)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun jjstateSet/1964309570 ((_arg_1 var2104)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun String-init () String \"\")\r\n(define-fun jjimage/1964309570 ((_arg_1 var2104)) String \"\")\r\n(define-fun image/1964309570 ((_arg_1 var2104)) String \"\")\r\n(define-fun curLexState/1964309570 ((_arg_1 var2104)) Int 0)\r\n(define-fun defaultLexState/1964309570 ((_arg_1 var2104)) Int 0)\r\n(define-fun input_stream/1964309570 ((_arg_1 var2104)) var3984 (as @var3984_1 var3984))\r\n(define-fun null-var2104 () var2104 (as @var2104_0 var2104))\r\n(define-fun null-var3984 () var3984 (as @var3984_0 var3984))\r\n(define-fun var3987-out () var3155 (as @var3155_0 var3155))\r\n(define-fun var3501 () var2104 (as @var2104_1 var2104))\r\n(define-fun var320 () var3984 (as @var3984_1 var3984))\r\n(define-fun var3501!1 () var2104 (as @var2104_0 var2104))\r\n(define-fun var3501!2 () var2104 (as @var2104_2 var2104))\r\n(define-fun var3501!3 () var2104 (as @var2104_3 var2104))\r\n(define-fun var3501!4 () var2104 (as @var2104_4 var2104))\r\n(define-fun var3501!5 () var2104 (as @var2104_5 var2104))\r\n(define-fun var3501!6 () var2104 (as @var2104_6 var2104))\r\n(define-fun var3501!7 () var2104 (as @var2104_7 var2104))\r\n(define-fun var3501!8 () var2104 (as @var2104_8 var2104))\r\n(define-fun var2493!1 () String \"\")\r\n(define-fun var3501!9 () var2104 (as @var2104_9 var2104))\r\n(define-fun var3501!10 () var2104 (as @var2104_10 var2104))\r\n(define-fun var3501!11 () var2104 (as @var2104_11 var2104))\r\n(define-fun var3501!12 () var2104 (as @var2104_12 var2104))\r\n(define-fun var3501!13 () var2104 (as @var2104_13 var2104))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35729408,
            "run_time": 0.04658198356628418,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 89 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 90 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181338112,
            "run_time": 0.8383560180664062,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3501!13 () var2104 var2104!56)\r\n  (define-fun var3501!12 () var2104 var2104!54)\r\n  (define-fun var3501!11 () var2104 var2104!52)\r\n  (define-fun var3501!10 () var2104 var2104!50)\r\n  (define-fun var3501!9 () var2104 var2104!48)\r\n  (define-fun var2493!1 () String \"\")\r\n  (define-fun var3501!8 () var2104 var2104!46)\r\n  (define-fun var3501!7 () var2104 var2104!44)\r\n  (define-fun var3501!6 () var2104 var2104!42)\r\n  (define-fun var3501!5 () var2104 var2104!40)\r\n  (define-fun var3501!4 () var2104 var2104!38)\r\n  (define-fun var3501!3 () var2104 var2104!36)\r\n  (define-fun var3501!2 () var2104 var2104!34)\r\n  (define-fun var320 () var3984 var3984!32)\r\n  (define-fun var3501 () var2104 var2104!30)\r\n  (define-fun var3987-out () var3155 var3155!28)\r\n  (define-fun null-var3984 () var3984 var3984!26)\r\n  (define-fun null-var2104 () var2104 var2104!24)\r\n  (define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun var3984!32 () var3984 (input_stream/1964309570 var2104!56))\r\n  (define-fun var3155!28 () var3155 (debugStream/1964309570 var2104!42))\r\n  (define-fun defaultLexState/1964309570 ((x!0 var2104)) Int (ite (= x!0 var2104!54) 0 0))\r\n  (define-fun curLexState/1964309570 ((x!0 var2104)) Int (ite (= x!0 var2104!52) 0 0))\r\n  (define-fun image/1964309570 ((x!0 var2104)) String (ite (= x!0 var2104!50) \"\" \"\"))\r\n  (define-fun jjimage/1964309570 ((x!0 var2104)) String (ite (= x!0 var2104!48) \"\" \"\"))\r\n  (define-fun jjstateSet/1964309570 ((x!0 var2104)) (Array Int Int) (ite (= x!0 var2104!46) ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n  (define-fun jjrounds/1964309570 ((x!0 var2104)) (Array Int Int) (ite (= x!0 var2104!44) ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n  (define-fun size/1964309570 ((x!0 var2104)) Int (ite (= x!0 var2104!40) 10 0))\r\n  (define-fun depth/1964309570 ((x!0 var2104)) Int (ite (= x!0 var2104!38) 0 0))\r\n  (define-fun beginCol/1964309570 ((x!0 var2104)) (Array Int Int) (ite (= x!0 var2104!36) ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n  (define-fun beginLine/1964309570 ((x!0 var2104)) (Array Int Int) (ite (= x!0 var2104!34) ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 16,
        "assertion_count": 29,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCCParserTokenManager",
            "r8 := @parameter0: org.javacc.parser.JavaCharStream",
            "specialinvoke r0.<java.lang.Object: void <init>()>()",
            "$r1 = newarray (int)[10]",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int[] beginLine> = $r1",
            "$r2 = newarray (int)[10]",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int[] beginCol> = $r2",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int depth> = 0",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int size> = 10",
            "$r3 = <java.lang.System: java.io.PrintStream out>",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: java.io.PrintStream debugStream> = $r3",
            "$r4 = newarray (int)[85]",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int[] jjrounds> = $r4",
            "$r5 = newarray (int)[170]",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int[] jjstateSet> = $r5",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder jjimage> = $r6",
            "$r7 = r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder jjimage>",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: java.lang.StringBuilder image> = $r7",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int curLexState> = 0",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: int defaultLexState> = 0",
            "r0.<org.javacc.parser.JavaCCParserTokenManager: org.javacc.parser.JavaCharStream input_stream> = r8",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParser__javacc_options__2129677408\\812.smt2",
        "z3": {
            "memory": 31592448,
            "run_time": 0.0595242977142334,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var549:\r\n  ;;   var549!val!0 var549!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var549!val!0 () var549)\r\n  (declare-fun var549!val!1 () var549)\r\n  ;; cardinality constraint:\r\n  (forall ((x var549)) (or (= x var549!val!0) (= x var549!val!1)))\r\n  ;; -----------\r\n  ;; universe for var627:\r\n  ;;   var627!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var627!val!0 () var627)\r\n  ;; cardinality constraint:\r\n  (forall ((x var627)) (= x var627!val!0))\r\n  ;; -----------\r\n  (define-fun null-var549 () var549\r\n    var549!val!1)\r\n  (define-fun var3920 () var627\r\n    (getToken/1999213251 var2305 1))\r\n  (define-fun var2854 () Bool\r\n    (= (image/197050796 (getToken/1999213251 var2305 1)) \"options\"))\r\n  (define-fun var2305 () var549\r\n    var549!val!0)\r\n  (define-fun var3364 () String\r\n    (image/197050796 (getToken/1999213251 var2305 1)))\r\n  (define-fun var1090_normalize/-2110565663 () void\r\n    void!val!0)\r\n  (define-fun getToken/1999213251 ((x!0 var549) (x!1 Int)) var627\r\n    var627!val!0)\r\n  (define-fun image/197050796 ((x!0 var627)) String\r\n    \"\")\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.015035629272460938,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var549 is 2\r\n; rep: (as @var549_0 var549)\r\n; rep: (as @var549_1 var549)\r\n; cardinality of var627 is 1\r\n; rep: (as @var627_0 var627)\r\n; cardinality of var1090 is 1\r\n; rep: (as @var1090_0 var1090)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getToken/1999213251 ((_arg_1 var549) (_arg_2 Int)) var627 (as @var627_0 var627))\r\n(define-fun image/197050796 ((_arg_1 var627)) String \"\")\r\n(define-fun var1090_normalize/-2110565663 () void (as @void_0 void))\r\n(define-fun null-var549 () var549 (as @var549_0 var549))\r\n(define-fun var2305 () var549 (as @var549_1 var549))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36577280,
            "run_time": 0.04587984085083008,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 26 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 156307456,
            "run_time": 0.7141432762145996,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2305 () var549 var549!18)\r\n  (define-fun null-var549 () var549 var549!16)\r\n  (define-fun var627!32 () var627 (getToken/1999213251 var549!18 1))\r\n  (define-fun image/197050796 ((x!0 var627)) String (ite (= x!0 var627!32) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCCParser",
            "$r1 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(1)",
            "$r2 = $r1.<org.javacc.parser.Token: java.lang.String image>",
            "$z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(\"options\")",
            "if $z0 == 0 goto staticinvoke <org.javacc.parser.Options: void normalize()>()",
            "staticinvoke <org.javacc.parser.Options: void normalize()>()",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParser__ResultType__1872188680\\2870.smt2",
        "z3": {
            "memory": 32198656,
            "run_time": 60.00021576881409,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8871936,
            "run_time": 0.015271663665771484,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1314 is 3\r\n; rep: (as @var1314_0 var1314)\r\n; rep: (as @var1314_1 var1314)\r\n; rep: (as @var1314_2 var1314)\r\n; cardinality of var1570 is 2\r\n; rep: (as @var1570_0 var1570)\r\n; rep: (as @var1570_1 var1570)\r\n; cardinality of var3286 is 1\r\n; rep: (as @var3286_0 var3286)\r\n; cardinality of var227 is 1\r\n; rep: (as @var227_0 var227)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getToken/1999213251 ((_arg_1 var1314) (_arg_2 Int)) var3286 (as @var3286_0 var3286))\r\n(define-fun jj_ntk/549669294 ((_arg_1 var1314)) Int (ite (= (as @var1314_1 var1314) _arg_1) 78 (- 1)))\r\n(define-fun jj_consume_token/1648575159 ((BOUND_VARIABLE_889 var1314) (BOUND_VARIABLE_890 Int)) var3286 (as @var3286_0 var3286))\r\n(define-fun jj_ntk/-941081802 ((_arg_1 var1314)) Int 0)\r\n(define-fun jj_la1/549669294 ((BOUND_VARIABLE_893 var1314)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun jj_gen/549669294 ((_arg_1 var1314)) Int 0)\r\n(define-fun image/197050796 ((BOUND_VARIABLE_896 var3286)) String \"\")\r\n(define-fun isAllowed/-930151217 ((_arg_1 var1314) (_arg_2 var3286)) Bool false)\r\n(define-fun var227-init () var227 (as @var227_0 var227))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1157378735 ((BOUND_VARIABLE_899 var227) (BOUND_VARIABLE_900 String)) void (as @void_0 void))\r\n(define-fun null-var1314 () var1314 (as @var1314_0 var1314))\r\n(define-fun null-var1570 () var1570 (as @var1570_0 var1570))\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var1715 () var1314 (as @var1314_1 var1314))\r\n(define-fun var3209 () var1570 (as @var1570_1 var1570))\r\n(define-fun var1715!1 () var1314 (as @var1314_2 var1314))\r\n(define-fun var2198 () Int 0)\r\n(define-fun var1592!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1027!1 () String \"\")\r\n(define-fun var1027!2 () String \"\")\r\n(define-fun var466!1 () String \" is invalid in this context\")\r\n(define-fun var3960!1 () var227 (as @var227_0 var227))\r\n(define-fun var429!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36061184,
            "run_time": 0.04502439498901367,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1314:\n  ;;   var1314!val!0 var1314!val!2 var1314!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1314!val!0 () var1314)\n  (declare-fun var1314!val!2 () var1314)\n  (declare-fun var1314!val!1 () var1314)\n  ;; cardinality constraint:\n  (forall ((x var1314))\n          (or (= x var1314!val!0) (= x var1314!val!2) (= x var1314!val!1)))\n  ;; -----------\n  ;; universe for var3286:\n  ;;   var3286!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3286!val!0 () var3286)\n  ;; cardinality constraint:\n  (forall ((x var3286)) (= x var3286!val!0))\n  ;; -----------\n  ;; universe for var1570:\n  ;;   var1570!val!1 var1570!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1570!val!1 () var1570)\n  (declare-fun var1570!val!0 () var1570)\n  ;; cardinality constraint:\n  (forall ((x var1570)) (or (= x var1570!val!1) (= x var1570!val!0)))\n  ;; -----------\n  (define-fun var3592 () Int\n    (- 1))\n  (define-fun var1592 () (Array Int Int)\n    (jj_la1/549669294 var1715!1))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3499 () String\n    (image/197050796 (getToken/1999213251 var1715 1)))\n  (define-fun var1592!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun null-var1570 () var1570\n    var1570!val!1)\n  (define-fun var1715 () var1314\n    var1314!val!0)\n  (define-fun var2074 () Bool\n    (isAllowed/-930151217 var1715!1 (getToken/1999213251 var1715 1)))\n  (define-fun var3960 () var227\n    var227-init)\n  (define-fun var429 () String\n    (str.++ var1027!1\n        (image/197050796 (getToken/1999213251 var1715 1))\n        \" is invalid in this context\"))\n  (define-fun var706 () var3286\n    (getToken/1999213251 var1715 1))\n  (define-fun var2655 () Int\n    (jj_ntk/549669294 var1715!1))\n  (define-fun var1027 () String\n    String-init)\n  (define-fun var62 () String\n    (image/197050796 (getToken/1999213251 var1715 1)))\n  (define-fun var2803 () var3286\n    (getToken/1999213251 var1715 1))\n  (define-fun var1715!1 () var1314\n    var1314!val!2)\n  (define-fun var2079 () Int\n    (jj_gen/549669294 var1715!1))\n  (define-fun var3848 () Int\n    (jj_ntk/549669294 var1715))\n  (define-fun var3619 () String\n    (str.++ var1027!1\n        (image/197050796 (getToken/1999213251 var1715 1))\n        \" is invalid in this context\"))\n  (define-fun null-var1314 () var1314\n    var1314!val!1)\n  (define-fun var1065 () var3286\n    (getToken/1999213251 var1715!1 0))\n  (define-fun var1482 () Int\n    (jj_ntk/-941081802 var1715!1))\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 0 1))\n  (define-fun var3209 () var1570\n    var1570!val!0)\n  (define-fun var543 () Int\n    (- 1))\n  (define-fun var466 () String\n    (str.++ var1027!1 (image/197050796 (getToken/1999213251 var1715 1))))\n  (define-fun var1304 () Int\n    (jj_ntk/549669294 var1715))\n  (define-fun var466!1 () String\n    \" is invalid in this context\")\n  (define-fun var1027!2 () String\n    \"\")\n  (define-fun var1027!1 () String\n    \"\")\n  (define-fun var227-init () var227\n    var227!val!0)\n  (define-fun var429!1 () String\n    \"\")\n  (define-fun var2198 () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3960!1 () var227\n    var227!val!0)\n  (define-fun jj_ntk/549669294 ((x!0 var1314)) Int\n    (ite (= x!0 var1314!val!2) (- 1)\n      78))\n  (define-fun jj_ntk/-941081802 ((x!0 var1314)) Int\n    0)\n  (define-fun getToken/1999213251 ((x!0 var1314) (x!1 Int)) var3286\n    var3286!val!0)\n  (define-fun isAllowed/-930151217 ((x!0 var1314) (x!1 var3286)) Bool\n    false)\n  (define-fun jj_gen/549669294 ((x!0 var1314)) Int\n    0)\n  (define-fun image/197050796 ((x!0 var3286)) String\n    \"\")\n  (define-fun jj_la1/549669294 ((x!0 var1314)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun jj_consume_token/1648575159 ((x!0 var1314) (x!1 Int)) var3286\n    var3286!val!0)\n  (define-fun <init>/1157378735 ((x!0 var227) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 101 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 184786944,
            "run_time": 0.9467151165008545,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1314/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCParser__ResultType__1872188680\\2870.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_33_3 =\r\n     concat(var1027!2, \" is invalid in this context\")\r\n   var466!1 =\r\n     concat(var1027!2, \" is invalid in this context\")\r\n\r\n704ms\r\n"
        },
        "undefined_function_count": 11,
        "assertion_count": 27,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCCParser",
            "r16 := @parameter0: java.util.List",
            "r1 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(1)",
            "if r16 != null goto $i0 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i0 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i16 = (int) -1",
            "if $i0 != $i16 goto $i10 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i10 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "lookupswitch($i10) {     case 30: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 32: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 35: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 37: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 41: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 48: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 55: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 57: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 66: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 78: goto specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(78);     case 81: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 110: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 151: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     default: goto $r13 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>; }",
            "specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(78)",
            "$i1 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i18 = (int) -1",
            "if $i1 != $i18 goto $i11 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i11 = specialinvoke r0.<org.javacc.parser.JavaCCParser: int jj_ntk()>()",
            "goto [?= (branch)]",
            "lookupswitch($i11) {     case 121: goto specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(121);     default: goto $r8 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>; }",
            "$r8 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>",
            "$i2 = r0.<org.javacc.parser.JavaCCParser: int jj_gen>",
            "$r8[114] = $i2",
            "goto [?= $r17 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(0)]",
            "$r17 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(0)",
            "r18 = r1",
            "$r19 = r18.<org.javacc.parser.Token: java.lang.String image>",
            "$z0 = specialinvoke r0.<org.javacc.parser.JavaCCParser: boolean isAllowed(org.javacc.parser.Token)>(r18)",
            "if $z0 == 0 goto $r24 = new org.javacc.parser.ParseException",
            "$r24 = new org.javacc.parser.ParseException",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = r18.<org.javacc.parser.Token: java.lang.String image>",
            "$r5 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is invalid in this context\")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r24.<org.javacc.parser.ParseException: void <init>(java.lang.String)>($r7)",
            "throw $r24"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParser__ResultType__1872188680\\2852.smt2",
        "z3": {
            "memory": 32047104,
            "run_time": 60.00370407104492,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.030939579010009766,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3567 is 3\r\n; rep: (as @var3567_0 var3567)\r\n; rep: (as @var3567_1 var3567)\r\n; rep: (as @var3567_2 var3567)\r\n; cardinality of var2134 is 2\r\n; rep: (as @var2134_0 var2134)\r\n; rep: (as @var2134_1 var2134)\r\n; cardinality of var3261 is 1\r\n; rep: (as @var3261_0 var3261)\r\n; cardinality of var3271 is 1\r\n; rep: (as @var3271_0 var3271)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getToken/1999213251 ((_arg_1 var3567) (_arg_2 Int)) var3261 (as @var3261_0 var3261))\r\n(define-fun jj_ntk/549669294 ((_arg_1 var3567)) Int (- 1))\r\n(define-fun jj_ntk/-941081802 ((_arg_1 var3567)) Int (ite (= (as @var3567_1 var3567) _arg_1) 78 0))\r\n(define-fun jj_consume_token/1648575159 ((BOUND_VARIABLE_894 var3567) (BOUND_VARIABLE_895 Int)) var3261 (as @var3261_0 var3261))\r\n(define-fun jj_la1/549669294 ((BOUND_VARIABLE_898 var3567)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun jj_gen/549669294 ((_arg_1 var3567)) Int 0)\r\n(define-fun image/197050796 ((BOUND_VARIABLE_901 var3261)) String \"\")\r\n(define-fun isAllowed/-930151217 ((_arg_1 var3567) (_arg_2 var3261)) Bool false)\r\n(define-fun var3271-init () var3271 (as @var3271_0 var3271))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1157378735 ((BOUND_VARIABLE_904 var3271) (BOUND_VARIABLE_905 String)) void (as @void_0 void))\r\n(define-fun null-var3567 () var3567 (as @var3567_0 var3567))\r\n(define-fun null-var2134 () var2134 (as @var2134_0 var2134))\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var2974 () var3567 (as @var3567_1 var3567))\r\n(define-fun var1033 () var2134 (as @var2134_1 var2134))\r\n(define-fun var2974!1 () var3567 (as @var3567_2 var3567))\r\n(define-fun var3428 () Int 0)\r\n(define-fun var2290!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var689!1 () String \"\")\r\n(define-fun var689!2 () String \"\")\r\n(define-fun var1013!1 () String \" is invalid in this context\")\r\n(define-fun var327!1 () var3271 (as @var3271_0 var3271))\r\n(define-fun var3618!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35770368,
            "run_time": 0.06295895576477051,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3567:\n  ;;   var3567!val!0 var3567!val!1 var3567!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3567!val!0 () var3567)\n  (declare-fun var3567!val!1 () var3567)\n  (declare-fun var3567!val!2 () var3567)\n  ;; cardinality constraint:\n  (forall ((x var3567))\n          (or (= x var3567!val!0) (= x var3567!val!1) (= x var3567!val!2)))\n  ;; -----------\n  ;; universe for var3261:\n  ;;   var3261!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3261!val!0 () var3261)\n  ;; cardinality constraint:\n  (forall ((x var3261)) (= x var3261!val!0))\n  ;; -----------\n  ;; universe for var2134:\n  ;;   var2134!val!0 var2134!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2134!val!0 () var2134)\n  (declare-fun var2134!val!1 () var2134)\n  ;; cardinality constraint:\n  (forall ((x var2134)) (or (= x var2134!val!0) (= x var2134!val!1)))\n  ;; -----------\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var327 () var3271\n    var3271-init)\n  (define-fun var989 () Bool\n    (isAllowed/-930151217 var2974!1 (getToken/1999213251 var2974 1)))\n  (define-fun var2974!1 () var3567\n    var3567!val!2)\n  (define-fun var130 () var3261\n    (getToken/1999213251 var2974 1))\n  (define-fun var2290!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var3621 () var3261\n    (getToken/1999213251 var2974 1))\n  (define-fun var2339 () Int\n    (jj_ntk/549669294 var2974!1))\n  (define-fun var2960 () Int\n    (jj_ntk/-941081802 var2974))\n  (define-fun var2471 () Int\n    (jj_gen/549669294 var2974!1))\n  (define-fun var1789 () String\n    (str.++ var689!1\n        (image/197050796 (getToken/1999213251 var2974 1))\n        \" is invalid in this context\"))\n  (define-fun var3618 () String\n    (str.++ var689!1\n        (image/197050796 (getToken/1999213251 var2974 1))\n        \" is invalid in this context\"))\n  (define-fun null-var2134 () var2134\n    var2134!val!1)\n  (define-fun var1844 () String\n    (image/197050796 (getToken/1999213251 var2974 1)))\n  (define-fun var1033 () var2134\n    var2134!val!0)\n  (define-fun var3011 () Int\n    (- 1))\n  (define-fun var306 () Int\n    (- 1))\n  (define-fun var2567 () var3261\n    (getToken/1999213251 var2974!1 0))\n  (define-fun null-var3567 () var3567\n    var3567!val!1)\n  (define-fun var2438 () String\n    (image/197050796 (getToken/1999213251 var2974 1)))\n  (define-fun var2974 () var3567\n    var3567!val!0)\n  (define-fun var2662 () Int\n    (jj_ntk/549669294 var2974))\n  (define-fun var2290 () (Array Int Int)\n    (jj_la1/549669294 var2974!1))\n  (define-fun var689 () String\n    String-init)\n  (define-fun var1013 () String\n    (str.++ var689!1 (image/197050796 (getToken/1999213251 var2974 1))))\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 0 1))\n  (define-fun var2340 () Int\n    (jj_ntk/-941081802 var2974!1))\n  (define-fun var689!2 () String\n    \"\")\n  (define-fun var1013!1 () String\n    \" is invalid in this context\")\n  (define-fun var689!1 () String\n    \"\")\n  (define-fun var327!1 () var3271\n    var3271!val!0)\n  (define-fun var3618!1 () String\n    \"\")\n  (define-fun var3428 () Int\n    0)\n  (define-fun var3271-init () var3271\n    var3271!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun jj_ntk/549669294 ((x!0 var3567)) Int\n    (- 1))\n  (define-fun jj_ntk/-941081802 ((x!0 var3567)) Int\n    (ite (= x!0 var3567!val!2) 0\n      78))\n  (define-fun getToken/1999213251 ((x!0 var3567) (x!1 Int)) var3261\n    var3261!val!0)\n  (define-fun isAllowed/-930151217 ((x!0 var3567) (x!1 var3261)) Bool\n    false)\n  (define-fun jj_gen/549669294 ((x!0 var3567)) Int\n    0)\n  (define-fun image/197050796 ((x!0 var3261)) String\n    \"\")\n  (define-fun jj_la1/549669294 ((x!0 var3567)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun jj_consume_token/1648575159 ((x!0 var3567) (x!1 Int)) var3261\n    var3261!val!0)\n  (define-fun <init>/1157378735 ((x!0 var3271) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 103 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 196374528,
            "run_time": 1.0246760845184326,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3567/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCParser__ResultType__1872188680\\2852.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_31_3 =\r\n     concat(var689!2, \" is invalid in this context\")\r\n   var1013!1 =\r\n     concat(var689!2, \" is invalid in this context\")\r\n\r\n751ms\r\n"
        },
        "undefined_function_count": 11,
        "assertion_count": 28,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCCParser",
            "r16 := @parameter0: java.util.List",
            "r1 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(1)",
            "if r16 != null goto $i0 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i0 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i16 = (int) -1",
            "if $i0 != $i16 goto $i10 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i10 = specialinvoke r0.<org.javacc.parser.JavaCCParser: int jj_ntk()>()",
            "goto [?= (branch)]",
            "lookupswitch($i10) {     case 30: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 32: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 35: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 37: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 41: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 48: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 55: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 57: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 66: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 78: goto specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(78);     case 81: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 110: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 151: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     default: goto $r13 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>; }",
            "specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(78)",
            "$i1 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i18 = (int) -1",
            "if $i1 != $i18 goto $i11 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i11 = specialinvoke r0.<org.javacc.parser.JavaCCParser: int jj_ntk()>()",
            "goto [?= (branch)]",
            "lookupswitch($i11) {     case 121: goto specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(121);     default: goto $r8 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>; }",
            "$r8 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>",
            "$i2 = r0.<org.javacc.parser.JavaCCParser: int jj_gen>",
            "$r8[114] = $i2",
            "goto [?= $r17 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(0)]",
            "$r17 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(0)",
            "r18 = r1",
            "$r19 = r18.<org.javacc.parser.Token: java.lang.String image>",
            "$z0 = specialinvoke r0.<org.javacc.parser.JavaCCParser: boolean isAllowed(org.javacc.parser.Token)>(r18)",
            "if $z0 == 0 goto $r24 = new org.javacc.parser.ParseException",
            "$r24 = new org.javacc.parser.ParseException",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = r18.<org.javacc.parser.Token: java.lang.String image>",
            "$r5 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is invalid in this context\")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r24.<org.javacc.parser.ParseException: void <init>(java.lang.String)>($r7)",
            "throw $r24"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParser__ResultType__1872188680\\3011.smt2",
        "z3": {
            "memory": 31043584,
            "run_time": 0.05951428413391113,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2357:\r\n  ;;   var2357!val!1 var2357!val!2 var2357!val!3 var2357!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2357!val!1 () var2357)\r\n  (declare-fun var2357!val!2 () var2357)\r\n  (declare-fun var2357!val!3 () var2357)\r\n  (declare-fun var2357!val!0 () var2357)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2357))\r\n          (or (= x var2357!val!1)\r\n              (= x var2357!val!2)\r\n              (= x var2357!val!3)\r\n              (= x var2357!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3200:\r\n  ;;   var3200!val!1 var3200!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3200!val!1 () var3200)\r\n  (declare-fun var3200!val!0 () var3200)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3200)) (or (= x var3200!val!1) (= x var3200!val!0)))\r\n  ;; -----------\r\n  ;; universe for var618:\r\n  ;;   var618!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var618!val!0 () var618)\r\n  ;; cardinality constraint:\r\n  (forall ((x var618)) (= x var618!val!0))\r\n  ;; -----------\r\n  (define-fun var3586 () Int\r\n    (jj_ntk/549669294 var3000!1))\r\n  (define-fun var1615 () Int\r\n    (- 1))\r\n  (define-fun var2496 () Int\r\n    (- 1))\r\n  (define-fun var3921 () String\r\n    (image/197050796 (getToken/1999213251 var3000 1)))\r\n  (define-fun var3000!2 () var2357\r\n    var2357!val!3)\r\n  (define-fun var2610 () var2136\r\n    var2136-init)\r\n  (define-fun var3602 () String\r\n    (str.++ var3901!1\r\n        (image/197050796 (getToken/1999213251 var3000 1))\r\n        \" is invalid in this context\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var3200 () var3200\r\n    var3200!val!1)\r\n  (define-fun null-var2357 () var2357\r\n    var2357!val!1)\r\n  (define-fun var3000 () var2357\r\n    var2357!val!0)\r\n  (define-fun var3901 () String\r\n    String-init)\r\n  (define-fun var3033 () Int\r\n    (jj_ntk/549669294 var3000!1))\r\n  (define-fun var1968 () var618\r\n    (getToken/1999213251 var3000!2 0))\r\n  (define-fun var1121 () Bool\r\n    (isAllowed/-930151217 var3000!2 (getToken/1999213251 var3000 1)))\r\n  (define-fun var522 () Int\r\n    (jj_ntk/549669294 var3000))\r\n  (define-fun var263 () var618\r\n    (getToken/1999213251 var3000 1))\r\n  (define-fun var984 () var3200\r\n    var3200!val!0)\r\n  (define-fun var3000!1 () var2357\r\n    var2357!val!2)\r\n  (define-fun var1204 () Int\r\n    (jj_ntk/549669294 var3000))\r\n  (define-fun var3969 () String\r\n    (str.++ var3901!1 (image/197050796 (getToken/1999213251 var3000 1))))\r\n  (define-fun var1784 () var618\r\n    (getToken/1999213251 var3000 1))\r\n  (define-fun var810 () String\r\n    (image/197050796 (getToken/1999213251 var3000 1)))\r\n  (define-fun var2691 () String\r\n    (str.++ var3901!1\r\n        (image/197050796 (getToken/1999213251 var3000 1))\r\n        \" is invalid in this context\"))\r\n  (define-fun var3901!2 () String\r\n    \"\")\r\n  (define-fun var3969!1 () String\r\n    \" is invalid in this context\")\r\n  (define-fun var3901!1 () String\r\n    \"\")\r\n  (define-fun var2691!1 () String\r\n    \"\")\r\n  (define-fun var3206 () Int\r\n    0)\r\n  (define-fun var2136-init () var2136\r\n    var2136!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var569 () Int\r\n    0)\r\n  (define-fun var2610!1 () var2136\r\n    var2136!val!0)\r\n  (define-fun jj_ntk/549669294 ((x!0 var2357)) Int\r\n    (ite (= x!0 var2357!val!2) 121\r\n      78))\r\n  (define-fun getToken/1999213251 ((x!0 var2357) (x!1 Int)) var618\r\n    var618!val!0)\r\n  (define-fun isAllowed/-930151217 ((x!0 var2357) (x!1 var618)) Bool\r\n    false)\r\n  (define-fun image/197050796 ((x!0 var618)) String\r\n    \"\")\r\n  (define-fun jj_consume_token/1648575159 ((x!0 var2357) (x!1 Int)) var618\r\n    var618!val!0)\r\n  (define-fun <init>/1157378735 ((x!0 var2136) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 95 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8962048,
            "run_time": 0.029721975326538086,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2357 is 4\r\n; rep: (as @var2357_0 var2357)\r\n; rep: (as @var2357_1 var2357)\r\n; rep: (as @var2357_2 var2357)\r\n; rep: (as @var2357_3 var2357)\r\n; cardinality of var3200 is 2\r\n; rep: (as @var3200_0 var3200)\r\n; rep: (as @var3200_1 var3200)\r\n; cardinality of var618 is 1\r\n; rep: (as @var618_0 var618)\r\n; cardinality of var2136 is 1\r\n; rep: (as @var2136_0 var2136)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getToken/1999213251 ((_arg_1 var2357) (_arg_2 Int)) var618 (as @var618_0 var618))\r\n(define-fun jj_ntk/549669294 ((_arg_1 var2357)) Int (ite (= (as @var2357_1 var2357) _arg_1) 78 121))\r\n(define-fun jj_consume_token/1648575159 ((BOUND_VARIABLE_799 var2357) (BOUND_VARIABLE_800 Int)) var618 (as @var618_0 var618))\r\n(define-fun image/197050796 ((BOUND_VARIABLE_803 var618)) String \"\")\r\n(define-fun isAllowed/-930151217 ((_arg_1 var2357) (_arg_2 var618)) Bool false)\r\n(define-fun var2136-init () var2136 (as @var2136_0 var2136))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1157378735 ((BOUND_VARIABLE_806 var2136) (BOUND_VARIABLE_807 String)) void (as @void_0 void))\r\n(define-fun null-var2357 () var2357 (as @var2357_0 var2357))\r\n(define-fun null-var3200 () var3200 (as @var3200_0 var3200))\r\n(define-fun var3000 () var2357 (as @var2357_1 var2357))\r\n(define-fun var984 () var3200 (as @var3200_1 var3200))\r\n(define-fun var3000!1 () var2357 (as @var2357_2 var2357))\r\n(define-fun var3206 () Int 0)\r\n(define-fun var3000!2 () var2357 (as @var2357_3 var2357))\r\n(define-fun var569 () Int 0)\r\n(define-fun var3901!1 () String \"\")\r\n(define-fun var3901!2 () String \"\")\r\n(define-fun var3969!1 () String \" is invalid in this context\")\r\n(define-fun var2610!1 () var2136 (as @var2136_0 var2136))\r\n(define-fun var2691!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35749888,
            "run_time": 0.07753682136535645,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2357:\n  ;;   var2357!val!1 var2357!val!2 var2357!val!3 var2357!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2357!val!1 () var2357)\n  (declare-fun var2357!val!2 () var2357)\n  (declare-fun var2357!val!3 () var2357)\n  (declare-fun var2357!val!0 () var2357)\n  ;; cardinality constraint:\n  (forall ((x var2357))\n          (or (= x var2357!val!1)\n              (= x var2357!val!2)\n              (= x var2357!val!3)\n              (= x var2357!val!0)))\n  ;; -----------\n  ;; universe for var3200:\n  ;;   var3200!val!1 var3200!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3200!val!1 () var3200)\n  (declare-fun var3200!val!0 () var3200)\n  ;; cardinality constraint:\n  (forall ((x var3200)) (or (= x var3200!val!1) (= x var3200!val!0)))\n  ;; -----------\n  ;; universe for var618:\n  ;;   var618!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var618!val!0 () var618)\n  ;; cardinality constraint:\n  (forall ((x var618)) (= x var618!val!0))\n  ;; -----------\n  (define-fun var3921 () String\n    (image/197050796 (getToken/1999213251 var3000 1)))\n  (define-fun var3033 () Int\n    (jj_ntk/549669294 var3000!1))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1968 () var618\n    (getToken/1999213251 var3000!2 0))\n  (define-fun var3000!2 () var2357\n    var2357!val!3)\n  (define-fun var1121 () Bool\n    (isAllowed/-930151217 var3000!2 (getToken/1999213251 var3000 1)))\n  (define-fun var3602 () String\n    (str.++ var3901!1\n        (image/197050796 (getToken/1999213251 var3000 1))\n        \" is invalid in this context\"))\n  (define-fun var522 () Int\n    (jj_ntk/549669294 var3000))\n  (define-fun var3901 () String\n    String-init)\n  (define-fun var263 () var618\n    (getToken/1999213251 var3000 1))\n  (define-fun null-var3200 () var3200\n    var3200!val!1)\n  (define-fun null-var2357 () var2357\n    var2357!val!1)\n  (define-fun var3000 () var2357\n    var2357!val!0)\n  (define-fun var1204 () Int\n    (jj_ntk/549669294 var3000))\n  (define-fun var1784 () var618\n    (getToken/1999213251 var3000 1))\n  (define-fun var3586 () Int\n    (jj_ntk/549669294 var3000!1))\n  (define-fun var1615 () Int\n    (- 1))\n  (define-fun var810 () String\n    (image/197050796 (getToken/1999213251 var3000 1)))\n  (define-fun var2496 () Int\n    (- 1))\n  (define-fun var984 () var3200\n    var3200!val!0)\n  (define-fun var3000!1 () var2357\n    var2357!val!2)\n  (define-fun var2610 () var2136\n    var2136-init)\n  (define-fun var3969 () String\n    (str.++ var3901!1 (image/197050796 (getToken/1999213251 var3000 1))))\n  (define-fun var2691 () String\n    (str.++ var3901!1\n        (image/197050796 (getToken/1999213251 var3000 1))\n        \" is invalid in this context\"))\n  (define-fun var3901!2 () String\n    \"\")\n  (define-fun var3969!1 () String\n    \" is invalid in this context\")\n  (define-fun var3901!1 () String\n    \"\")\n  (define-fun var2691!1 () String\n    \"\")\n  (define-fun var3206 () Int\n    0)\n  (define-fun var2136-init () var2136\n    var2136!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var569 () Int\n    0)\n  (define-fun var2610!1 () var2136\n    var2136!val!0)\n  (define-fun jj_ntk/549669294 ((x!0 var2357)) Int\n    (ite (= x!0 var2357!val!2) 121\n      78))\n  (define-fun getToken/1999213251 ((x!0 var2357) (x!1 Int)) var618\n    var618!val!0)\n  (define-fun isAllowed/-930151217 ((x!0 var2357) (x!1 var618)) Bool\n    false)\n  (define-fun image/197050796 ((x!0 var618)) String\n    \"\")\n  (define-fun jj_consume_token/1648575159 ((x!0 var2357) (x!1 Int)) var618\n    var618!val!0)\n  (define-fun <init>/1157378735 ((x!0 var2136) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 95 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169476096,
            "run_time": 0.9459481239318848,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2357/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCParser__ResultType__1872188680\\3011.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_30_3 =\r\n     concat(var3901!2, \" is invalid in this context\")\r\n   var3969!1 =\r\n     concat(var3901!2, \" is invalid in this context\")\r\n\r\n705ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 25,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCCParser",
            "r16 := @parameter0: java.util.List",
            "r1 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(1)",
            "if r16 != null goto $i0 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i0 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i16 = (int) -1",
            "if $i0 != $i16 goto $i10 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i10 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "lookupswitch($i10) {     case 30: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 32: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 35: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 37: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 41: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 48: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 55: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 57: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 66: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 78: goto specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(78);     case 81: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 110: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 151: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     default: goto $r13 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>; }",
            "specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(78)",
            "$i1 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i18 = (int) -1",
            "if $i1 != $i18 goto $i11 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i11 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "lookupswitch($i11) {     case 121: goto specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(121);     default: goto $r8 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>; }",
            "specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(121)",
            "goto [?= $r17 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(0)]",
            "$r17 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(0)",
            "r18 = r1",
            "$r19 = r18.<org.javacc.parser.Token: java.lang.String image>",
            "$z0 = specialinvoke r0.<org.javacc.parser.JavaCCParser: boolean isAllowed(org.javacc.parser.Token)>(r18)",
            "if $z0 == 0 goto $r24 = new org.javacc.parser.ParseException",
            "$r24 = new org.javacc.parser.ParseException",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = r18.<org.javacc.parser.Token: java.lang.String image>",
            "$r5 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is invalid in this context\")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r24.<org.javacc.parser.ParseException: void <init>(java.lang.String)>($r7)",
            "throw $r24"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParser__ResultType__1872188680\\2857.smt2",
        "z3": {
            "memory": 32464896,
            "run_time": 0.05941152572631836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var783:\r\n  ;;   var783!val!0 var783!val!3 var783!val!2 var783!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var783!val!0 () var783)\r\n  (declare-fun var783!val!3 () var783)\r\n  (declare-fun var783!val!2 () var783)\r\n  (declare-fun var783!val!1 () var783)\r\n  ;; cardinality constraint:\r\n  (forall ((x var783))\r\n          (or (= x var783!val!0)\r\n              (= x var783!val!3)\r\n              (= x var783!val!2)\r\n              (= x var783!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3174:\r\n  ;;   var3174!val!0 var3174!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3174!val!0 () var3174)\r\n  (declare-fun var3174!val!1 () var3174)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3174)) (or (= x var3174!val!0) (= x var3174!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3639:\r\n  ;;   var3639!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3639!val!0 () var3639)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3639)) (= x var3639!val!0))\r\n  ;; -----------\r\n  (define-fun var1123 () var177\r\n    var177-init)\r\n  (define-fun var3017 () var3639\r\n    (getToken/1999213251 var2996!2 0))\r\n  (define-fun var2996!2 () var783\r\n    var783!val!3)\r\n  (define-fun var1971 () Int\r\n    (jj_ntk/549669294 var2996!1))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3502 () var3174\r\n    var3174!val!0)\r\n  (define-fun var2209 () String\r\n    (image/197050796 (getToken/1999213251 var2996 1)))\r\n  (define-fun var323 () String\r\n    (image/197050796 (getToken/1999213251 var2996 1)))\r\n  (define-fun var2996!1 () var783\r\n    var783!val!2)\r\n  (define-fun var1325 () Int\r\n    (jj_ntk/549669294 var2996))\r\n  (define-fun var629 () var3639\r\n    (getToken/1999213251 var2996 1))\r\n  (define-fun var2996 () var783\r\n    var783!val!0)\r\n  (define-fun var1364 () Int\r\n    (jj_ntk/-941081802 var2996))\r\n  (define-fun var1776 () Bool\r\n    (isAllowed/-930151217 var2996!2 (getToken/1999213251 var2996 1)))\r\n  (define-fun null-var783 () var783\r\n    var783!val!1)\r\n  (define-fun var3862 () String\r\n    (str.++ var104!1\r\n        (image/197050796 (getToken/1999213251 var2996 1))\r\n        \" is invalid in this context\"))\r\n  (define-fun var634 () Int\r\n    (- 1))\r\n  (define-fun var507 () var3639\r\n    (getToken/1999213251 var2996 1))\r\n  (define-fun var104 () String\r\n    String-init)\r\n  (define-fun var1416 () String\r\n    (str.++ var104!1 (image/197050796 (getToken/1999213251 var2996 1))))\r\n  (define-fun null-var3174 () var3174\r\n    var3174!val!1)\r\n  (define-fun var1211 () String\r\n    (str.++ var104!1\r\n        (image/197050796 (getToken/1999213251 var2996 1))\r\n        \" is invalid in this context\"))\r\n  (define-fun var2588 () Int\r\n    (jj_ntk/549669294 var2996!1))\r\n  (define-fun var1022 () Int\r\n    (- 1))\r\n  (define-fun var104!2 () String\r\n    \"\")\r\n  (define-fun var1416!1 () String\r\n    \" is invalid in this context\")\r\n  (define-fun var104!1 () String\r\n    \"\")\r\n  (define-fun var177-init () var177\r\n    var177!val!0)\r\n  (define-fun var1123!1 () var177\r\n    var177!val!0)\r\n  (define-fun var3871 () Int\r\n    0)\r\n  (define-fun var2918 () Int\r\n    0)\r\n  (define-fun var1211!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun jj_ntk/549669294 ((x!0 var783)) Int\r\n    (ite (= x!0 var783!val!2) 121\r\n      (- 1)))\r\n  (define-fun jj_ntk/-941081802 ((x!0 var783)) Int\r\n    78)\r\n  (define-fun isAllowed/-930151217 ((x!0 var783) (x!1 var3639)) Bool\r\n    false)\r\n  (define-fun getToken/1999213251 ((x!0 var783) (x!1 Int)) var3639\r\n    var3639!val!0)\r\n  (define-fun image/197050796 ((x!0 var3639)) String\r\n    \"\")\r\n  (define-fun jj_consume_token/1648575159 ((x!0 var783) (x!1 Int)) var3639\r\n    var3639!val!0)\r\n  (define-fun <init>/1157378735 ((x!0 var177) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 98 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.015346765518188477,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var783 is 4\r\n; rep: (as @var783_0 var783)\r\n; rep: (as @var783_1 var783)\r\n; rep: (as @var783_2 var783)\r\n; rep: (as @var783_3 var783)\r\n; cardinality of var3174 is 2\r\n; rep: (as @var3174_0 var3174)\r\n; rep: (as @var3174_1 var3174)\r\n; cardinality of var3639 is 1\r\n; rep: (as @var3639_0 var3639)\r\n; cardinality of var177 is 1\r\n; rep: (as @var177_0 var177)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getToken/1999213251 ((_arg_1 var783) (_arg_2 Int)) var3639 (as @var3639_0 var3639))\r\n(define-fun jj_ntk/549669294 ((_arg_1 var783)) Int (ite (= (as @var783_1 var783) _arg_1) (- 1) 121))\r\n(define-fun jj_ntk/-941081802 ((_arg_1 var783)) Int 78)\r\n(define-fun jj_consume_token/1648575159 ((BOUND_VARIABLE_809 var783) (BOUND_VARIABLE_810 Int)) var3639 (as @var3639_0 var3639))\r\n(define-fun image/197050796 ((BOUND_VARIABLE_813 var3639)) String \"\")\r\n(define-fun isAllowed/-930151217 ((_arg_1 var783) (_arg_2 var3639)) Bool false)\r\n(define-fun var177-init () var177 (as @var177_0 var177))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1157378735 ((BOUND_VARIABLE_816 var177) (BOUND_VARIABLE_817 String)) void (as @void_0 void))\r\n(define-fun null-var783 () var783 (as @var783_0 var783))\r\n(define-fun null-var3174 () var3174 (as @var3174_0 var3174))\r\n(define-fun var2996 () var783 (as @var783_1 var783))\r\n(define-fun var3502 () var3174 (as @var3174_1 var3174))\r\n(define-fun var2996!1 () var783 (as @var783_2 var783))\r\n(define-fun var3871 () Int 0)\r\n(define-fun var2996!2 () var783 (as @var783_3 var783))\r\n(define-fun var2918 () Int 0)\r\n(define-fun var104!1 () String \"\")\r\n(define-fun var104!2 () String \"\")\r\n(define-fun var1416!1 () String \" is invalid in this context\")\r\n(define-fun var1123!1 () var177 (as @var177_0 var177))\r\n(define-fun var1211!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35737600,
            "run_time": 0.06137561798095703,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var783:\n  ;;   var783!val!0 var783!val!3 var783!val!2 var783!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var783!val!0 () var783)\n  (declare-fun var783!val!3 () var783)\n  (declare-fun var783!val!2 () var783)\n  (declare-fun var783!val!1 () var783)\n  ;; cardinality constraint:\n  (forall ((x var783))\n          (or (= x var783!val!0)\n              (= x var783!val!3)\n              (= x var783!val!2)\n              (= x var783!val!1)))\n  ;; -----------\n  ;; universe for var3174:\n  ;;   var3174!val!0 var3174!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3174!val!0 () var3174)\n  (declare-fun var3174!val!1 () var3174)\n  ;; cardinality constraint:\n  (forall ((x var3174)) (or (= x var3174!val!0) (= x var3174!val!1)))\n  ;; -----------\n  ;; universe for var3639:\n  ;;   var3639!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3639!val!0 () var3639)\n  ;; cardinality constraint:\n  (forall ((x var3639)) (= x var3639!val!0))\n  ;; -----------\n  (define-fun var2209 () String\n    (image/197050796 (getToken/1999213251 var2996 1)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1325 () Int\n    (jj_ntk/549669294 var2996))\n  (define-fun var629 () var3639\n    (getToken/1999213251 var2996 1))\n  (define-fun var2996!2 () var783\n    var783!val!3)\n  (define-fun var1364 () Int\n    (jj_ntk/-941081802 var2996))\n  (define-fun var1776 () Bool\n    (isAllowed/-930151217 var2996!2 (getToken/1999213251 var2996 1)))\n  (define-fun var3502 () var3174\n    var3174!val!0)\n  (define-fun var323 () String\n    (image/197050796 (getToken/1999213251 var2996 1)))\n  (define-fun var634 () Int\n    (- 1))\n  (define-fun var507 () var3639\n    (getToken/1999213251 var2996 1))\n  (define-fun var2996!1 () var783\n    var783!val!2)\n  (define-fun var2588 () Int\n    (jj_ntk/549669294 var2996!1))\n  (define-fun var1022 () Int\n    (- 1))\n  (define-fun var2996 () var783\n    var783!val!0)\n  (define-fun var3862 () String\n    (str.++ var104!1\n        (image/197050796 (getToken/1999213251 var2996 1))\n        \" is invalid in this context\"))\n  (define-fun var1123 () var177\n    var177-init)\n  (define-fun null-var783 () var783\n    var783!val!1)\n  (define-fun var104 () String\n    String-init)\n  (define-fun var1416 () String\n    (str.++ var104!1 (image/197050796 (getToken/1999213251 var2996 1))))\n  (define-fun var3017 () var3639\n    (getToken/1999213251 var2996!2 0))\n  (define-fun var1211 () String\n    (str.++ var104!1\n        (image/197050796 (getToken/1999213251 var2996 1))\n        \" is invalid in this context\"))\n  (define-fun var1971 () Int\n    (jj_ntk/549669294 var2996!1))\n  (define-fun null-var3174 () var3174\n    var3174!val!1)\n  (define-fun var104!2 () String\n    \"\")\n  (define-fun var1416!1 () String\n    \" is invalid in this context\")\n  (define-fun var104!1 () String\n    \"\")\n  (define-fun var177-init () var177\n    var177!val!0)\n  (define-fun var1123!1 () var177\n    var177!val!0)\n  (define-fun var3871 () Int\n    0)\n  (define-fun var2918 () Int\n    0)\n  (define-fun var1211!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun jj_ntk/549669294 ((x!0 var783)) Int\n    (ite (= x!0 var783!val!2) 121\n      (- 1)))\n  (define-fun jj_ntk/-941081802 ((x!0 var783)) Int\n    78)\n  (define-fun isAllowed/-930151217 ((x!0 var783) (x!1 var3639)) Bool\n    false)\n  (define-fun getToken/1999213251 ((x!0 var783) (x!1 Int)) var3639\n    var3639!val!0)\n  (define-fun image/197050796 ((x!0 var3639)) String\n    \"\")\n  (define-fun jj_consume_token/1648575159 ((x!0 var783) (x!1 Int)) var3639\n    var3639!val!0)\n  (define-fun <init>/1157378735 ((x!0 var177) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 98 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169758720,
            "run_time": 0.916975736618042,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3174/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCParser__ResultType__1872188680\\2857.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_28_3 =\r\n     concat(var104!2, \" is invalid in this context\")\r\n   var1416!1 =\r\n     concat(var104!2, \" is invalid in this context\")\r\n\r\n659ms\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 26,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCCParser",
            "r16 := @parameter0: java.util.List",
            "r1 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(1)",
            "if r16 != null goto $i0 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i0 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i16 = (int) -1",
            "if $i0 != $i16 goto $i10 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i10 = specialinvoke r0.<org.javacc.parser.JavaCCParser: int jj_ntk()>()",
            "goto [?= (branch)]",
            "lookupswitch($i10) {     case 30: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 32: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 35: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 37: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 41: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 48: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 55: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 57: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 66: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 78: goto specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(78);     case 81: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 110: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 151: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     default: goto $r13 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>; }",
            "specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(78)",
            "$i1 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i18 = (int) -1",
            "if $i1 != $i18 goto $i11 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i11 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "lookupswitch($i11) {     case 121: goto specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(121);     default: goto $r8 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>; }",
            "specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(121)",
            "goto [?= $r17 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(0)]",
            "$r17 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(0)",
            "r18 = r1",
            "$r19 = r18.<org.javacc.parser.Token: java.lang.String image>",
            "$z0 = specialinvoke r0.<org.javacc.parser.JavaCCParser: boolean isAllowed(org.javacc.parser.Token)>(r18)",
            "if $z0 == 0 goto $r24 = new org.javacc.parser.ParseException",
            "$r24 = new org.javacc.parser.ParseException",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = r18.<org.javacc.parser.Token: java.lang.String image>",
            "$r5 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is invalid in this context\")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r24.<org.javacc.parser.ParseException: void <init>(java.lang.String)>($r7)",
            "throw $r24"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__visit__-1629179958\\254.smt2",
        "z3": {
            "memory": 31838208,
            "run_time": 60.00953006744385,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9928704,
            "run_time": 0.04538464546203613,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1529 is 2\r\n; rep: (as @var1529_0 var1529)\r\n; rep: (as @var1529_1 var1529)\r\n; cardinality of var2255 is 2\r\n; rep: (as @var2255_0 var2255)\r\n; rep: (as @var2255_1 var2255)\r\n; cardinality of var3900 is 2\r\n; rep: (as @var3900_0 var3900)\r\n; rep: (as @var3900_1 var3900)\r\n; cardinality of var36 is 1\r\n; rep: (as @var36_0 var36)\r\n; cardinality of var646 is 1\r\n; rep: (as @var646_0 var646)\r\n; cardinality of var1302 is 1\r\n; rep: (as @var1302_0 var1302)\r\n; cardinality of var716 is 1\r\n; rep: (as @var716_0 var716)\r\n; cardinality of var637 is 1\r\n; rep: (as @var637_0 var637)\r\n; cardinality of var298 is 1\r\n; rep: (as @var298_0 var298)\r\n; cardinality of var3977 is 1\r\n; rep: (as @var3977_0 var3977)\r\n; cardinality of var1988 is 1\r\n; rep: (as @var1988_0 var1988)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var3900-to-var36 ((BOUND_VARIABLE_772 var3900)) var36 (as @var36_0 var36))\r\n(define-fun String-init () String \"\")\r\n(define-fun var716-init () var716 (as @var716_0 var716))\r\n(define-fun getOutputFileName/1535357316 ((BOUND_VARIABLE_775 var36)) String \"\")\r\n(define-fun <init>/-1681595970 ((BOUND_VARIABLE_778 var716) (BOUND_VARIABLE_779 String)) void (as @void_0 void))\r\n(define-fun getName/1128186653 ((BOUND_VARIABLE_782 var716)) String \"\")\r\n(define-fun var637_getIdString/-267384014 ((BOUND_VARIABLE_785 var646) (BOUND_VARIABLE_786 String)) String \"\")\r\n(define-fun var298_booleanValue/1280995494 ((_arg_1 String)) Bool false)\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_789 var36) (BOUND_VARIABLE_790 String)) void (as @void_0 void))\r\n(define-fun print/-1652180213 ((BOUND_VARIABLE_793 var36) (BOUND_VARIABLE_794 String)) void (as @void_0 void))\r\n(define-fun childrenAccept/-572725015 ((BOUND_VARIABLE_797 var3977) (BOUND_VARIABLE_798 var1988) (BOUND_VARIABLE_799 var3900)) var3900 (as @var3900_0 var3900))\r\n(define-fun cast-from-var2255-to-var3977 ((BOUND_VARIABLE_802 var2255)) var3977 (as @var3977_0 var3977))\r\n(define-fun cast-from-var1529-to-var1988 ((BOUND_VARIABLE_805 var1529)) var1988 (as @var1988_0 var1988))\r\n(define-fun cast-from-var36-to-var3900 ((BOUND_VARIABLE_808 var36)) var3900 (as @var3900_0 var3900))\r\n(define-fun null-var1529 () var1529 (as @var1529_0 var1529))\r\n(define-fun null-var2255 () var2255 (as @var2255_0 var2255))\r\n(define-fun null-var3900 () var3900 (as @var3900_0 var3900))\r\n(define-fun var1302-toolList () var646 (as @var646_0 var646))\r\n(define-fun var2166 () var1529 (as @var1529_1 var1529))\r\n(define-fun var1512 () var2255 (as @var2255_1 var2255))\r\n(define-fun var3490 () var3900 (as @var3900_1 var3900))\r\n(define-fun var3717!1 () String \"\")\r\n(define-fun var3717!2 () String \"/*@bgen(jjtree) \")\r\n(define-fun var1128!1 () var716 (as @var716_0 var716))\r\n(define-fun var1190!1 () String \"\")\r\n(define-fun var3136!1 () String \"/*@bgen(jjtree) \")\r\n(define-fun var13!1 () String \"/*@bgen(jjtree)  */\")\r\n(define-fun var3471!1 () var36 (as @var36_0 var36))\r\n(define-fun var3772!1 () String \"\")\r\n(define-fun var541!1 () String \"\")\r\n(define-fun var541!2 () String \"/*\")\r\n(define-fun var2126!1 () String \"/*@egen*/\")\r\n(define-fun var3471!2 () var36 (as @var36_0 var36))\r\n(define-fun var1272!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36532224,
            "run_time": 60.01557493209839,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 184164352,
            "run_time": 1.181854248046875,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2255/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPCodeGenerator__visit__-1629179958\\254.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_49_4 =\r\n     concat(all_49_5, \" */\")\r\n   var13!1 =\r\n     concat(all_46_4, \" */\")\r\n   var3136!1 =\r\n     concat(\"/*@bgen(jjtree) \", all_43_3)\r\n   all_49_5 =\r\n     concat(\"/*@bgen(jjtree) \", all_43_3)\r\n   all_46_4 =\r\n     concat(\"/*@bgen(jjtree) \", all_43_3)\r\n\r\n931ms\r\n"
        },
        "undefined_function_count": 14,
        "assertion_count": 29,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 5,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r17 := @this: org.javacc.jjtree.CPPCodeGenerator",
            "r16 := @parameter0: org.javacc.jjtree.ASTGrammar",
            "r0 := @parameter1: java.lang.Object",
            "r1 = (org.javacc.jjtree.IO) r0",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/*@bgen(jjtree) \")",
            "$r4 = <org.javacc.jjtree.JJTreeGlobals: java.util.List toolList>",
            "$r3 = new java.io.File",
            "$r5 = virtualinvoke r1.<org.javacc.jjtree.IO: java.lang.String getOutputFileName()>()",
            "specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r5)",
            "$r6 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>()",
            "$r7 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String getIdString(java.util.List,java.lang.String)>($r4, $r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean booleanValue(java.lang.String)>(\"IGNORE_ACTIONS\")",
            "if $z0 == 0 goto $r19 = \" */\"",
            "$r19 = \" */\"",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r1.<org.javacc.jjtree.IO: void println(java.lang.String)>($r11)",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean booleanValue(java.lang.String)>(\"IGNORE_ACTIONS\")",
            "if $z1 == 0 goto $r20 = \"/*\"",
            "$r20 = \"/*\"",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"@egen*/\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r1.<org.javacc.jjtree.IO: void print(java.lang.String)>($r15)",
            "$r18 = virtualinvoke r16.<org.javacc.jjtree.ASTGrammar: java.lang.Object childrenAccept(org.javacc.jjtree.JJTreeParserVisitor,java.lang.Object)>(r17, r1)",
            "return $r18"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JavaCodeGenerator__tryTokenSequence__-1180319701\\773.smt2",
        "z3": {
            "memory": 31563776,
            "run_time": 60.0083327293396,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.029859066009521484,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3326 is 2\r\n; rep: (as @var3326_0 var3326)\r\n; rep: (as @var3326_1 var3326)\r\n; cardinality of var2532 is 3\r\n; rep: (as @var2532_0 var2532)\r\n; rep: (as @var2532_1 var2532)\r\n; rep: (as @var2532_2 var2532)\r\n; cardinality of var196 is 2\r\n; rep: (as @var196_0 var196)\r\n; rep: (as @var196_1 var196)\r\n; cardinality of var1388 is 1\r\n; rep: (as @var1388_0 var1388)\r\n; cardinality of var754 is 3\r\n; rep: (as @var754_0 var754)\r\n; rep: (as @var754_1 var754)\r\n; rep: (as @var754_2 var754)\r\n; cardinality of var3088 is 1\r\n; rep: (as @var3088_0 var3088)\r\n; cardinality of var3560 is 1\r\n; rep: (as @var3560_0 var3560)\r\n; cardinality of var3454 is 1\r\n; rep: (as @var3454_0 var3454)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_867 var196) (BOUND_VARIABLE_868 String)) void (as @void_0 void))\r\n(define-fun var3326_closeJJTreeComment/-534030660 ((BOUND_VARIABLE_871 var196)) void (as @void_0 void))\r\n(define-fun next/-1103324373 ((_arg_1 var754)) var754 (as @var754_2 var754))\r\n(define-fun var3326_openJJTreeComment/-2036001483 ((BOUND_VARIABLE_874 var196) (BOUND_VARIABLE_875 String)) void (as @void_0 void))\r\n(define-fun println/2032072932 ((BOUND_VARIABLE_878 var196)) void (as @void_0 void))\r\n(define-fun production/-576648796 ((BOUND_VARIABLE_881 var2532)) var3088 (as @var3088_0 var3088))\r\n(define-fun throws_list/-165013491 ((BOUND_VARIABLE_884 var3088)) var3560 (as @var3560_0 var3560))\r\n(define-fun elements/2003039976 ((BOUND_VARIABLE_887 var3560)) var3454 (as @var3454_0 var3454))\r\n(define-fun insertCatchBlocks/-1746295133 ((BOUND_VARIABLE_890 var3326) (BOUND_VARIABLE_891 var2532) (BOUND_VARIABLE_892 var196) (BOUND_VARIABLE_893 var3454) (BOUND_VARIABLE_894 String)) void (as @void_0 void))\r\n(define-fun usesCloseNodeVar/-1769174946 ((_arg_1 var2532)) Bool false)\r\n(define-fun null-var3326 () var3326 (as @var3326_0 var3326))\r\n(define-fun null-var2532 () var2532 (as @var2532_0 var2532))\r\n(define-fun null-var196 () var196 (as @var196_0 var196))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var754 () var754 (as @var754_0 var754))\r\n(define-fun var3382 () var3326 (as @var3326_1 var3326))\r\n(define-fun var784 () var2532 (as @var2532_1 var2532))\r\n(define-fun var1730 () var196 (as @var196_1 var196))\r\n(define-fun var3208 () String \"\")\r\n(define-fun var447 () var754 (as @var754_2 var754))\r\n(define-fun var2621 () var754 (as @var754_1 var754))\r\n(define-fun var2072!1 () String \"\")\r\n(define-fun var2072!2 () String \"\")\r\n(define-fun var3520!1 () String \"try {\")\r\n(define-fun var1730!1 () var196 (as @var196_0 var196))\r\n(define-fun var2693!1 () String \"\")\r\n(define-fun var1730!2 () var196 (as @var196_0 var196))\r\n(define-fun var1730!3 () var196 (as @var196_0 var196))\r\n(define-fun var579 () var1388 (as @var1388_0 var1388))\r\n(define-fun var1730!4 () var196 (as @var196_0 var196))\r\n(define-fun var3382!1 () var3326 (as @var3326_0 var3326))\r\n(define-fun var784!1 () var2532 (as @var2532_2 var2532))\r\n(define-fun var1730!5 () var196 (as @var196_0 var196))\r\n(define-fun var2479!1 () var3454 (as @var3454_0 var3454))\r\n(define-fun var3208!1 () String \"\")\r\n(define-fun var573!1 () String \"\")\r\n(define-fun var573!2 () String \"\")\r\n(define-fun var2183!1 () String \"} finally {\")\r\n(define-fun var1730!6 () var196 (as @var196_0 var196))\r\n(define-fun var3837!1 () String \"\")\r\n(define-fun var402!1 () String \"\")\r\n(define-fun var402!2 () String \"\")\r\n(define-fun var3685!1 () String \"}\")\r\n(define-fun var1730!7 () var196 (as @var196_0 var196))\r\n(define-fun var3190!1 () String \"\")\r\n(define-fun var1730!8 () var196 (as @var196_0 var196))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37273600,
            "run_time": 60.00302052497864,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179830784,
            "run_time": 1.2155165672302246,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2532/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JavaCodeGenerator__tryTokenSequence__-1180319701\\773.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3685!1 =\r\n     concat(var3208!1, \"}\")\r\n   var2183!1 =\r\n     concat(var3208!1, \"} finally {\")\r\n   var3520!1 =\r\n     concat(var3208, \"try {\")\r\n\r\n957ms\r\n"
        },
        "undefined_function_count": 11,
        "assertion_count": 37,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r12 := @this: org.javacc.jjtree.JavaCodeGenerator",
            "r9 := @parameter0: org.javacc.jjtree.NodeScope",
            "r0 := @parameter1: org.javacc.jjtree.IO",
            "r2 := @parameter2: java.lang.String",
            "r6 := @parameter3: org.javacc.jjtree.Token",
            "r7 := @parameter4: org.javacc.jjtree.Token",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"try {\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r5)",
            "staticinvoke <org.javacc.jjtree.JavaCodeGenerator: void closeJJTreeComment(org.javacc.jjtree.IO)>(r0)",
            "r37 = r6",
            "$r8 = r7.<org.javacc.jjtree.Token: org.javacc.jjtree.Token next>",
            "if r37 == $r8 goto staticinvoke <org.javacc.jjtree.JavaCodeGenerator: void openJJTreeComment(org.javacc.jjtree.IO,java.lang.String)>(r0, null)",
            "staticinvoke <org.javacc.jjtree.JavaCodeGenerator: void openJJTreeComment(org.javacc.jjtree.IO,java.lang.String)>(r0, null)",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println()>()",
            "$r10 = r9.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTProduction production>",
            "$r11 = $r10.<org.javacc.jjtree.ASTProduction: java.util.Vector throws_list>",
            "r38 = virtualinvoke $r11.<java.util.Vector: java.util.Enumeration elements()>()",
            "specialinvoke r12.<org.javacc.jjtree.JavaCodeGenerator: void insertCatchBlocks(org.javacc.jjtree.NodeScope,org.javacc.jjtree.IO,java.util.Enumeration,java.lang.String)>(r9, r0, r38, r2)",
            "$r13 = new java.lang.StringBuilder",
            "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"} finally {\")",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r16)",
            "$z0 = virtualinvoke r9.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()",
            "if $z0 == 0 goto $r17 = new java.lang.StringBuilder",
            "$r17 = new java.lang.StringBuilder",
            "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"}\")",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r20)",
            "staticinvoke <org.javacc.jjtree.JavaCodeGenerator: void closeJJTreeComment(org.javacc.jjtree.IO)>(r0)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__insertOpenNodeCode__1284769165\\689.smt2",
        "z3": {
            "memory": 31711232,
            "run_time": 60.00910425186157,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8495104,
            "run_time": 0.04542684555053711,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2338 is 2\r\n; rep: (as @var2338_0 var2338)\r\n; rep: (as @var2338_1 var2338)\r\n; cardinality of var965 is 2\r\n; rep: (as @var965_0 var965)\r\n; rep: (as @var965_1 var965)\r\n; cardinality of var1165 is 2\r\n; rep: (as @var1165_0 var1165)\r\n; rep: (as @var1165_1 var1165)\r\n; cardinality of var550 is 1\r\n; rep: (as @var550_0 var550)\r\n; cardinality of var2927 is 1\r\n; rep: (as @var2927_0 var2927)\r\n; cardinality of var1138 is 1\r\n; rep: (as @var1138_0 var1138)\r\n; cardinality of var266 is 1\r\n; rep: (as @var266_0 var266)\r\n; cardinality of var3595 is 1\r\n; rep: (as @var3595_0 var3595)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun node_descriptor/-576648796 ((BOUND_VARIABLE_1346 var965)) var2927 (as @var2927_0 var2927))\r\n(define-fun getNodeType/-707025417 ((BOUND_VARIABLE_1349 var2927)) String \"\")\r\n(define-fun var1138_getNodeClass/-1384960322 () String \"\")\r\n(define-fun var266_addType/-972038703 ((BOUND_VARIABLE_1352 String)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun nodeVar/-576648796 ((BOUND_VARIABLE_1355 var965)) String \"\")\r\n(define-fun print/-1652180213 ((BOUND_VARIABLE_1358 var1165) (BOUND_VARIABLE_1359 String)) void (as @void_0 void))\r\n(define-fun var3595_getStatic/-616544340 () Bool false)\r\n(define-fun var1138_getNodeUsesParser/1997544654 () Bool false)\r\n(define-fun var1138_getNodeFactory/-1655041108 () String \"*\")\r\n(define-fun getNodeId/-1379187338 ((BOUND_VARIABLE_1362 var2927)) String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_1365 var1165) (BOUND_VARIABLE_1366 String)) void (as @void_0 void))\r\n(define-fun usesCloseNodeVar/-1769174946 ((_arg_1 var965)) Bool false)\r\n(define-fun openNode/114769770 ((BOUND_VARIABLE_1369 var2927) (BOUND_VARIABLE_1370 String)) String \"\")\r\n(define-fun var1138_getNodeScopeHook/893147786 () Bool false)\r\n(define-fun var1138_getTrackTokens/1877101562 () Bool false)\r\n(define-fun null-var2338 () var2338 (as @var2338_0 var2338))\r\n(define-fun null-var965 () var965 (as @var965_0 var965))\r\n(define-fun null-var1165 () var1165 (as @var1165_0 var1165))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2082 () var2338 (as @var2338_1 var2338))\r\n(define-fun var3000 () var965 (as @var965_1 var965))\r\n(define-fun var934 () var1165 (as @var1165_1 var1165))\r\n(define-fun var3375 () String \"\")\r\n(define-fun var2341!1 () String \"\")\r\n(define-fun var1132!1 () String \"\")\r\n(define-fun var1132!2 () String \"\")\r\n(define-fun var3216!1 () String \"\")\r\n(define-fun var918!1 () String \" *\")\r\n(define-fun var1534!1 () String \" *\")\r\n(define-fun var1602!1 () String \" * = \")\r\n(define-fun var934!1 () var1165 (as @var1165_0 var1165))\r\n(define-fun var2860!1 () String \"\")\r\n(define-fun var3264!1 () String \"\")\r\n(define-fun var3264!2 () String \"(\")\r\n(define-fun var2445!1 () String \"(\")\r\n(define-fun var2795!1 () String \"(*)\")\r\n(define-fun var2838!1 () String \"(*)\")\r\n(define-fun var1618!1 () String \"(*)::jjtCreate(\")\r\n(define-fun var3176!1 () String \"(*)::jjtCreate(\")\r\n(define-fun var2689!1 () String \"(*)::jjtCreate(\")\r\n(define-fun var2340!1 () String \"(*)::jjtCreate();\")\r\n(define-fun var934!2 () var1165 (as @var1165_0 var1165))\r\n(define-fun var2264!1 () String \"\")\r\n(define-fun var2396!1 () String \"\")\r\n(define-fun var2396!2 () String \"\")\r\n(define-fun var2451!1 () String \"\")\r\n(define-fun var934!3 () var1165 (as @var1165_0 var1165))\r\n(define-fun var2757!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37355520,
            "run_time": 60.00014066696167,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 390283264,
            "run_time": 1.7587511539459229,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var965/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPCodeGenerator__insertOpenNodeCode__1284769165\\689.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_73_7 =\r\n     concat(all_73_8, \");\")\r\n   var2340!1 =\r\n     concat(all_70_7, \");\")\r\n   var2689!1 =\r\n     concat(all_67_7, all_67_6)\r\n   var1602!1 =\r\n     concat(all_64_6, \" = \")\r\n   var3176!1 =\r\n     concat(all_61_5, \"::jjtCreate(\")\r\n   var1618!1 =\r\n     concat(all_58_5, \"::jjtCreate(\")\r\n   var1534!1 =\r\n     concat(all_55_6, all_43_4)\r\n   var2838!1 =\r\n     concat(all_52_4, all_37_3)\r\n   var2795!1 =\r\n     concat(all_49_4, \"*)\")\r\n   var918!1 =\r\n     concat(all_46_4, \" *\")\r\n   var2451!1 =\r\n     concat(var3375, all_43_3)\r\n   var3216!1 =\r\n     concat(var3375, all_37_3)\r\n   var2445!1 =\r\n     concat(\"(\", all_37_3)\r\n   all_73_8 =\r\n     concat(all_73_10, all_67_6)\r\n   all_70_7 =\r\n     concat(all_70_9, all_67_6)\r\n   all_67_7 =\r\n     concat(all_67_8, \"::jjtCreate(\")\r\n   all_64_6 =\r\n     concat(all_64_8, all_43_4)\r\n   all_61_5 =\r\n     concat(all_61_6, all_37_3)\r\n   all_58_5 =\r\n     concat(all_58_6, all_37_3)\r\n   all_55_6 =\r\n     concat(all_55_7, \" *\")\r\n   all_52_4 =\r\n     concat(all_52_5, \"*)\")\r\n   all_46_4 =\r\n     concat(var3375, all_37_3)\r\n   all_49_4 =\r\n     concat(\"(\", all_37_3)\r\n   all_73_10 =\r\n     concat(all_73_11, \"::jjtCreate(\")\r\n   all_70_9 =\r\n     concat(all_70_10, \"::jjtCreate(\")\r\n   all_67_8 =\r\n     concat(all_67_9, all_37_3)\r\n   all_64_8 =\r\n     concat(all_64_9, \" *\")\r\n   all_61_6 =\r\n     concat(all_61_7, \"*)\")\r\n   all_58_6 =\r\n     concat(all_58_7, \"*)\")\r\n   all_55_7 =\r\n     concat(var3375, all_37_3)\r\n   all_52_5 =\r\n     concat(\"(\", all_37_3)\r\n   all_73_11 =\r\n     concat(all_73_12, all_37_3)\r\n   all_70_10 =\r\n     concat(all_70_11, all_37_3)\r\n   all_67_9 =\r\n     concat(all_67_10, \"*)\")\r\n   all_64_9 =\r\n     concat(var3375, all_37_3)\r\n   all_61_7 =\r\n     concat(\"(\", all_37_3)\r\n   all_58_7 =\r\n     concat(\"(\", all_37_3)\r\n   all_73_12 =\r\n     concat(all_73_13, \"*)\")\r\n   all_70_11 =\r\n     concat(all_70_12, \"*)\")\r\n   all_67_10 =\r\n     concat(\"(\", all_37_3)\r\n   all_73_13 =\r\n     concat(\"(\", all_37_3)\r\n   all_70_12 =\r\n     concat(\"(\", all_37_3)\r\n\r\n1400ms\r\n"
        },
        "undefined_function_count": 16,
        "assertion_count": 63,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 15,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r70 := @this: org.javacc.jjtree.CPPCodeGenerator",
            "r0 := @parameter0: org.javacc.jjtree.NodeScope",
            "r4 := @parameter1: org.javacc.jjtree.IO",
            "r5 := @parameter2: java.lang.String",
            "$r1 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "r2 = virtualinvoke $r1.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String getNodeType()>()",
            "$r3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeClass()>()",
            "$i0 = virtualinvoke $r3.<java.lang.String: int length()>()",
            "if $i0 <= 0 goto r71 = r2",
            "r71 = r2",
            "staticinvoke <org.javacc.jjtree.CPPNodeFiles: void addType(java.lang.String)>(r2)",
            "$r72 = new java.lang.StringBuilder",
            "specialinvoke $r72.<java.lang.StringBuilder: void <init>()>()",
            "$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" *\")",
            "$r76 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "$r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76)",
            "$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \")",
            "$r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void print(java.lang.String)>($r79)",
            "$z5 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getStatic()>()",
            "if $z5 == 0 goto $r80 = \"this\"",
            "$r80 = \"this\"",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeUsesParser()>()",
            "if $z0 == 0 goto $r81 = \"\"",
            "$r81 = \"\"",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()",
            "$z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"*\")",
            "if $z1 == 0 goto $r7 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()",
            "$r55 = new java.lang.StringBuilder",
            "specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()",
            "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"*)\")",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"::jjtCreate(\")",
            "$r63 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)",
            "$r61 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r62 = virtualinvoke $r61.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String getNodeId()>()",
            "$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62)",
            "$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\");\")",
            "$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r66)",
            "goto [?= $z6 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()]",
            "$z6 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()",
            "if $z6 == 0 goto $r18 = new java.lang.StringBuilder",
            "$r18 = new java.lang.StringBuilder",
            "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()",
            "$r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r20 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r19 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "$r21 = virtualinvoke $r20.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String openNode(java.lang.String)>($r19)",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r24)",
            "$z2 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeScopeHook()>()",
            "if $z2 == 0 goto $z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "$z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "if $z3 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JavaCodeGenerator__insertOpenNodeCode__-1910072544\\633.smt2",
        "z3": {
            "memory": 32104448,
            "run_time": 60.00733399391174,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.029350757598876953,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2073 is 2\r\n; rep: (as @var2073_0 var2073)\r\n; rep: (as @var2073_1 var2073)\r\n; cardinality of var2645 is 2\r\n; rep: (as @var2645_0 var2645)\r\n; rep: (as @var2645_1 var2645)\r\n; cardinality of var3493 is 2\r\n; rep: (as @var3493_0 var3493)\r\n; rep: (as @var3493_1 var3493)\r\n; cardinality of var2437 is 1\r\n; rep: (as @var2437_0 var2437)\r\n; cardinality of var1975 is 1\r\n; rep: (as @var1975_0 var1975)\r\n; cardinality of var2235 is 1\r\n; rep: (as @var2235_0 var2235)\r\n; cardinality of var3397 is 1\r\n; rep: (as @var3397_0 var3397)\r\n; cardinality of var3427 is 1\r\n; rep: (as @var3427_0 var3427)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun node_descriptor/-576648796 ((BOUND_VARIABLE_1427 var2645)) var1975 (as @var1975_0 var1975))\r\n(define-fun getNodeType/-707025417 ((BOUND_VARIABLE_1430 var1975)) String \"\")\r\n(define-fun var2235_getNodeClass/-1384960322 () String \"\")\r\n(define-fun var3397_ensure/-405642493 ((BOUND_VARIABLE_1433 var3493) (BOUND_VARIABLE_1434 String)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun nodeVar/-576648796 ((BOUND_VARIABLE_1437 var2645)) String \"\")\r\n(define-fun print/-1652180213 ((BOUND_VARIABLE_1440 var3493) (BOUND_VARIABLE_1441 String)) void (as @void_0 void))\r\n(define-fun var3427_getStatic/-616544340 () Bool false)\r\n(define-fun var2235_getNodeUsesParser/1997544654 () Bool true)\r\n(define-fun var2235_getNodeFactory/-1655041108 () String \"*\")\r\n(define-fun getNodeId/-1379187338 ((BOUND_VARIABLE_1444 var1975)) String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_1447 var3493) (BOUND_VARIABLE_1448 String)) void (as @void_0 void))\r\n(define-fun usesCloseNodeVar/-1769174946 ((_arg_1 var2645)) Bool false)\r\n(define-fun openNode/114769770 ((BOUND_VARIABLE_1451 var1975) (BOUND_VARIABLE_1452 String)) String \"\")\r\n(define-fun var2235_getNodeScopeHook/893147786 () Bool false)\r\n(define-fun var2235_getTrackTokens/1877101562 () Bool false)\r\n(define-fun null-var2073 () var2073 (as @var2073_0 var2073))\r\n(define-fun null-var2645 () var2645 (as @var2645_0 var2645))\r\n(define-fun null-var3493 () var3493 (as @var3493_0 var3493))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var819 () var2073 (as @var2073_1 var2073))\r\n(define-fun var1879 () var2645 (as @var2645_1 var2645))\r\n(define-fun var2263 () var3493 (as @var3493_1 var3493))\r\n(define-fun var2443 () String \"\")\r\n(define-fun var2263!1 () var3493 (as @var3493_0 var3493))\r\n(define-fun var2992!1 () String \"\")\r\n(define-fun var3617!1 () String \"\")\r\n(define-fun var3617!2 () String \"\")\r\n(define-fun var3695!1 () String \"\")\r\n(define-fun var1421!1 () String \" \")\r\n(define-fun var2086!1 () String \" \")\r\n(define-fun var571!1 () String \"  = \")\r\n(define-fun var2263!2 () var3493 (as @var3493_0 var3493))\r\n(define-fun var3478!1 () String \"\")\r\n(define-fun var2354!1 () String \"\")\r\n(define-fun var2354!2 () String \"this\")\r\n(define-fun var1986!1 () String \"this, \")\r\n(define-fun var1670!1 () String \"\")\r\n(define-fun var1670!2 () String \"(\")\r\n(define-fun var661!1 () String \"(\")\r\n(define-fun var3870!1 () String \"()\")\r\n(define-fun var182!1 () String \"()\")\r\n(define-fun var1651!1 () String \"().jjtCreate(\")\r\n(define-fun var357!1 () String \"().jjtCreate(this, \")\r\n(define-fun var1878!1 () String \"().jjtCreate(this, \")\r\n(define-fun var242!1 () String \"().jjtCreate(this, );\")\r\n(define-fun var2263!3 () var3493 (as @var3493_0 var3493))\r\n(define-fun var1395!1 () String \"\")\r\n(define-fun var3460!1 () String \"\")\r\n(define-fun var3460!2 () String \"\")\r\n(define-fun var1312!1 () String \"\")\r\n(define-fun var2263!4 () var3493 (as @var3493_0 var3493))\r\n(define-fun var3561!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37310464,
            "run_time": 60.00302052497864,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 378650624,
            "run_time": 1.727318286895752,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2645/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JavaCodeGenerator__insertOpenNodeCode__-1910072544\\633.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var357!1 =\r\n     concat(all_76_10, \"this, \")\r\n   var571!1 =\r\n     concat(all_73_6, \" = \")\r\n   var1651!1 =\r\n     concat(all_70_5, \".jjtCreate(\")\r\n   var2086!1 =\r\n     concat(all_67_6, all_52_4)\r\n   var182!1 =\r\n     concat(all_64_4, all_46_3)\r\n   var3870!1 =\r\n     concat(all_61_4, \")\")\r\n   var1421!1 =\r\n     concat(all_58_4, \" \")\r\n   var242!1 =\r\n     concat(all_55_3, \");\")\r\n   var1878!1 =\r\n     concat(all_40_4, all_40_2)\r\n   var1312!1 =\r\n     concat(var2443, all_52_3)\r\n   var3695!1 =\r\n     concat(var2443, all_46_3)\r\n   var661!1 =\r\n     concat(\"(\", all_46_3)\r\n   all_76_10 =\r\n     concat(all_76_11, \".jjtCreate(\")\r\n   all_73_6 =\r\n     concat(all_73_8, all_52_4)\r\n   all_70_5 =\r\n     concat(all_70_6, all_46_3)\r\n   all_67_6 =\r\n     concat(all_67_7, \" \")\r\n   all_64_4 =\r\n     concat(all_64_5, \")\")\r\n   all_55_3 =\r\n     concat(all_40_4, all_40_2)\r\n   all_58_4 =\r\n     concat(var2443, all_46_3)\r\n   all_61_4 =\r\n     concat(\"(\", all_46_3)\r\n   all_40_4 =\r\n     concat(all_79_11, \"this, \")\r\n   all_76_11 =\r\n     concat(all_76_12, all_46_3)\r\n   all_73_8 =\r\n     concat(all_73_9, \" \")\r\n   all_70_6 =\r\n     concat(all_70_7, \")\")\r\n   all_67_7 =\r\n     concat(var2443, all_46_3)\r\n   all_64_5 =\r\n     concat(\"(\", all_46_3)\r\n   all_79_11 =\r\n     concat(all_79_12, \".jjtCreate(\")\r\n   all_76_12 =\r\n     concat(all_76_13, \")\")\r\n   all_73_9 =\r\n     concat(var2443, all_46_3)\r\n   all_70_7 =\r\n     concat(\"(\", all_46_3)\r\n   all_79_12 =\r\n     concat(all_79_13, all_46_3)\r\n   all_76_13 =\r\n     concat(\"(\", all_46_3)\r\n   all_79_13 =\r\n     concat(all_79_14, \")\")\r\n   all_79_14 =\r\n     concat(\"(\", all_46_3)\r\n\r\n1437ms\r\n"
        },
        "undefined_function_count": 16,
        "assertion_count": 70,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 17,
            "<java.lang.StringBuilder: java.lang.String toString()>": 4,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r73 := @this: org.javacc.jjtree.JavaCodeGenerator",
            "r0 := @parameter0: org.javacc.jjtree.NodeScope",
            "r4 := @parameter1: org.javacc.jjtree.IO",
            "r5 := @parameter2: java.lang.String",
            "$r1 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "r2 = virtualinvoke $r1.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String getNodeType()>()",
            "$r3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeClass()>()",
            "$i0 = virtualinvoke $r3.<java.lang.String: int length()>()",
            "if $i0 <= 0 goto r74 = r2",
            "r74 = r2",
            "staticinvoke <org.javacc.jjtree.NodeFiles: void ensure(org.javacc.jjtree.IO,java.lang.String)>(r4, r2)",
            "$r75 = new java.lang.StringBuilder",
            "specialinvoke $r75.<java.lang.StringBuilder: void <init>()>()",
            "$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74)",
            "$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")",
            "$r79 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "$r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79)",
            "$r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \")",
            "$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void print(java.lang.String)>($r82)",
            "$z5 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getStatic()>()",
            "if $z5 == 0 goto $r83 = \"this\"",
            "$r83 = \"this\"",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeUsesParser()>()",
            "if $z0 == 0 goto $r84 = \"\"",
            "$r70 = new java.lang.StringBuilder",
            "specialinvoke $r70.<java.lang.StringBuilder: void <init>()>()",
            "$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83)",
            "$r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")",
            "$r84 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>()",
            "goto [?= $r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()]",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()",
            "$z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"*\")",
            "if $z1 == 0 goto $r7 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()",
            "$r58 = new java.lang.StringBuilder",
            "specialinvoke $r58.<java.lang.StringBuilder: void <init>()>()",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74)",
            "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74)",
            "$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".jjtCreate(\")",
            "$r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84)",
            "$r64 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r65 = virtualinvoke $r64.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String getNodeId()>()",
            "$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65)",
            "$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\");\")",
            "$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r69)",
            "goto [?= $z6 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()]",
            "$z6 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()",
            "if $z6 == 0 goto $r18 = new java.lang.StringBuilder",
            "$r18 = new java.lang.StringBuilder",
            "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()",
            "$r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r20 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r19 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "$r21 = virtualinvoke $r20.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String openNode(java.lang.String)>($r19)",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r24)",
            "$z2 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeScopeHook()>()",
            "if $z2 == 0 goto $z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "$z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "if $z3 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__openJJTreeComment__-1832418392\\440.smt2",
        "z3": {
            "memory": 33128448,
            "run_time": 0.07003927230834961,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2645:\r\n  ;;   var2645!val!0 var2645!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2645!val!0 () var2645)\r\n  (declare-fun var2645!val!1 () var2645)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2645)) (or (= x var2645!val!0) (= x var2645!val!1)))\r\n  ;; -----------\r\n  (define-fun var1010 () String\r\n    (str.++ var2566!1 \"/*@bgen(jjtree) \" var2240))\r\n  (define-fun var1909 () Bool\r\n    (var3959_booleanValue/1280995494 \"IGNORE_ACTIONS\"))\r\n  (define-fun var1117 () var2645\r\n    var2645!val!0)\r\n  (define-fun var2566 () String\r\n    String-init)\r\n  (define-fun var148 () String\r\n    (str.++ var2566!1 \"/*@bgen(jjtree) \" var2240 \"\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3042 () String\r\n    (str.++ var2566!1 \"/*@bgen(jjtree) \"))\r\n  (define-fun null-var2645 () var2645\r\n    var2645!val!1)\r\n  (define-fun var2240 () String\r\n    \"F\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1726 () String\r\n    \"\")\r\n  (define-fun var534 () String\r\n    (str.++ var2566!1 \"/*@bgen(jjtree) \" var2240 \"\"))\r\n  (define-fun var2566!1 () String\r\n    \"\")\r\n  (define-fun var1010!1 () String\r\n    \"/*@bgen(jjtree) F\")\r\n  (define-fun var2566!2 () String\r\n    \"/*@bgen(jjtree) \")\r\n  (define-fun var3042!1 () String\r\n    \"/*@bgen(jjtree) F\")\r\n  (define-fun var148!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1117!1 () var2645\r\n    var2645!val!0)\r\n  (define-fun var3959_booleanValue/1280995494 ((x!0 String)) Bool\r\n    true)\r\n  (define-fun print/-1652180213 ((x!0 var2645) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 59 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.015564680099487305,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2645 is 2\r\n; rep: (as @var2645_0 var2645)\r\n; rep: (as @var2645_1 var2645)\r\n; cardinality of var3436 is 1\r\n; rep: (as @var3436_0 var3436)\r\n; cardinality of var3959 is 1\r\n; rep: (as @var3959_0 var3959)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var3959_booleanValue/1280995494 ((_arg_1 String)) Bool true)\r\n(define-fun print/-1652180213 ((BOUND_VARIABLE_667 var2645) (BOUND_VARIABLE_668 String)) void (as @void_0 void))\r\n(define-fun null-var2645 () var2645 (as @var2645_0 var2645))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1117 () var2645 (as @var2645_1 var2645))\r\n(define-fun var2240 () String \"\")\r\n(define-fun var2566!1 () String \"\")\r\n(define-fun var2566!2 () String \"/*@bgen(jjtree) \")\r\n(define-fun var3042!1 () String \"/*@bgen(jjtree) \")\r\n(define-fun var1010!1 () String \"/*@bgen(jjtree) \")\r\n(define-fun var1117!1 () var2645 (as @var2645_0 var2645))\r\n(define-fun var148!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35774464,
            "run_time": 0.07679939270019531,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2645:\n  ;;   var2645!val!0 var2645!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2645!val!0 () var2645)\n  (declare-fun var2645!val!1 () var2645)\n  ;; cardinality constraint:\n  (forall ((x var2645)) (or (= x var2645!val!0) (= x var2645!val!1)))\n  ;; -----------\n  (define-fun var3042!1 () String\n    \"/*@bgen(jjtree) \\u{0}\\u{0}\")\n  (define-fun var2566!2 () String\n    \"/*@bgen(jjtree) \")\n  (define-fun var1010!1 () String\n    \"/*@bgen(jjtree) \\u{0}\\u{0}\")\n  (define-fun var2566!1 () String\n    \"\")\n  (define-fun var148 () String\n    (str.++ var2566!1 \"/*@bgen(jjtree) \" var2240 \"\"))\n  (define-fun var2566 () String\n    String-init)\n  (define-fun null-var2645 () var2645\n    var2645!val!1)\n  (define-fun var1909 () Bool\n    (var3959_booleanValue/1280995494 \"IGNORE_ACTIONS\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var534 () String\n    (str.++ var2566!1 \"/*@bgen(jjtree) \" var2240 \"\"))\n  (define-fun var1010 () String\n    (str.++ var2566!1 \"/*@bgen(jjtree) \" var2240))\n  (define-fun var3042 () String\n    (str.++ var2566!1 \"/*@bgen(jjtree) \"))\n  (define-fun var1726 () String\n    \"\")\n  (define-fun var1117 () var2645\n    var2645!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2240 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var148!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1117!1 () var2645\n    var2645!val!0)\n  (define-fun var3959_booleanValue/1280995494 ((x!0 String)) Bool\n    true)\n  (define-fun print/-1652180213 ((x!0 var2645) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 59 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165810176,
            "run_time": 0.7741689682006836,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2645/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPCodeGenerator__openJJTreeComment__-1832418392\\440.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1010!1 =\r\n     concat(\"/*@bgen(jjtree) \", var2240)\r\n   var3042!1 =\r\n     concat(\"/*@bgen(jjtree) \", var2240)\r\n\r\n548ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: org.javacc.jjtree.IO",
            "r0 := @parameter1: java.lang.String",
            "if r0 == null goto $r2 = new java.lang.StringBuilder",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/*@bgen(jjtree) \")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean booleanValue(java.lang.String)>(\"IGNORE_ACTIONS\")",
            "if $z1 == 0 goto $r11 = \" */\"",
            "$r11 = \"\"",
            "goto [?= $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)]",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r1.<org.javacc.jjtree.IO: void print(java.lang.String)>($r10)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__openJJTreeComment__-1832418392\\466.smt2",
        "z3": {
            "memory": 31522816,
            "run_time": 0.05788731575012207,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3627:\r\n  ;;   var3627!val!1 var3627!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3627!val!1 () var3627)\r\n  (declare-fun var3627!val!0 () var3627)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3627)) (or (= x var3627!val!1) (= x var3627!val!0)))\r\n  ;; -----------\r\n  (define-fun var3626 () String\r\n    (str.++ var2123!1 \"/*@bgen(jjtree) \"))\r\n  (define-fun var1162 () String\r\n    (str.++ var2123!1 \"/*@bgen(jjtree) \" var3004 \" */\"))\r\n  (define-fun null-var3627 () var3627\r\n    var3627!val!1)\r\n  (define-fun var2123 () String\r\n    String-init)\r\n  (define-fun var844 () var3627\r\n    var3627!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2298 () String\r\n    (str.++ var2123!1 \"/*@bgen(jjtree) \" var3004))\r\n  (define-fun var2793 () Bool\r\n    (var2709_booleanValue/1280995494 \"IGNORE_ACTIONS\"))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3004 () String\r\n    \"F\")\r\n  (define-fun var11 () String\r\n    \" */\")\r\n  (define-fun var1793 () String\r\n    (str.++ var2123!1 \"/*@bgen(jjtree) \" var3004 \" */\"))\r\n  (define-fun var2123!1 () String\r\n    \"\")\r\n  (define-fun var2123!2 () String\r\n    \"/*@bgen(jjtree) \")\r\n  (define-fun var2298!1 () String\r\n    \"/*@bgen(jjtree) F */\")\r\n  (define-fun var3626!1 () String\r\n    \"/*@bgen(jjtree) F\")\r\n  (define-fun var844!1 () var3627\r\n    var3627!val!1)\r\n  (define-fun var1793!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2709_booleanValue/1280995494 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun print/-1652180213 ((x!0 var3627) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 58 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.030820846557617188,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3627 is 2\r\n; rep: (as @var3627_0 var3627)\r\n; rep: (as @var3627_1 var3627)\r\n; cardinality of var3380 is 1\r\n; rep: (as @var3380_0 var3380)\r\n; cardinality of var2709 is 1\r\n; rep: (as @var2709_0 var2709)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2709_booleanValue/1280995494 ((_arg_1 String)) Bool false)\r\n(define-fun print/-1652180213 ((BOUND_VARIABLE_663 var3627) (BOUND_VARIABLE_664 String)) void (as @void_0 void))\r\n(define-fun null-var3627 () var3627 (as @var3627_0 var3627))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var844 () var3627 (as @var3627_1 var3627))\r\n(define-fun var3004 () String \"\")\r\n(define-fun var2123!1 () String \"\")\r\n(define-fun var2123!2 () String \"/*@bgen(jjtree) \")\r\n(define-fun var3626!1 () String \"/*@bgen(jjtree) \")\r\n(define-fun var2298!1 () String \"/*@bgen(jjtree)  */\")\r\n(define-fun var844!1 () var3627 (as @var3627_0 var3627))\r\n(define-fun var1793!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37675008,
            "run_time": 0.07705521583557129,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3627:\n  ;;   var3627!val!1 var3627!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3627!val!1 () var3627)\n  (declare-fun var3627!val!0 () var3627)\n  ;; cardinality constraint:\n  (forall ((x var3627)) (or (= x var3627!val!1) (= x var3627!val!0)))\n  ;; -----------\n  (define-fun var3626!1 () String\n    \"/*@bgen(jjtree) \\u{0}\\u{0}\")\n  (define-fun var2298!1 () String\n    \"/*@bgen(jjtree) \\u{0}\\u{0} */\")\n  (define-fun var2123!2 () String\n    \"/*@bgen(jjtree) \")\n  (define-fun var2123!1 () String\n    \"\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1162 () String\n    (str.++ var2123!1 \"/*@bgen(jjtree) \" var3004 \" */\"))\n  (define-fun var2793 () Bool\n    (var2709_booleanValue/1280995494 \"IGNORE_ACTIONS\"))\n  (define-fun var844 () var3627\n    var3627!val!0)\n  (define-fun var1793 () String\n    (str.++ var2123!1 \"/*@bgen(jjtree) \" var3004 \" */\"))\n  (define-fun var3626 () String\n    (str.++ var2123!1 \"/*@bgen(jjtree) \"))\n  (define-fun var11 () String\n    \" */\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3004 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var3627 () var3627\n    var3627!val!1)\n  (define-fun var2123 () String\n    String-init)\n  (define-fun var2298 () String\n    (str.++ var2123!1 \"/*@bgen(jjtree) \" var3004))\n  (define-fun var844!1 () var3627\n    var3627!val!1)\n  (define-fun var1793!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2709_booleanValue/1280995494 ((x!0 String)) Bool\n    false)\n  (define-fun print/-1652180213 ((x!0 var3627) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 58 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166621184,
            "run_time": 0.7884395122528076,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3627/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPCodeGenerator__openJJTreeComment__-1832418392\\466.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_27_4 =\r\n     concat(all_27_5, \" */\")\r\n   var2298!1 =\r\n     concat(all_24_4, \" */\")\r\n   var3626!1 =\r\n     concat(\"/*@bgen(jjtree) \", var3004)\r\n   all_27_5 =\r\n     concat(\"/*@bgen(jjtree) \", var3004)\r\n   all_24_4 =\r\n     concat(\"/*@bgen(jjtree) \", var3004)\r\n\r\n560ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: org.javacc.jjtree.IO",
            "r0 := @parameter1: java.lang.String",
            "if r0 == null goto $r2 = new java.lang.StringBuilder",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/*@bgen(jjtree) \")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean booleanValue(java.lang.String)>(\"IGNORE_ACTIONS\")",
            "if $z1 == 0 goto $r11 = \" */\"",
            "$r11 = \" */\"",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r1.<org.javacc.jjtree.IO: void print(java.lang.String)>($r10)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__openJJTreeComment__-1832418392\\473.smt2",
        "z3": {
            "memory": 31469568,
            "run_time": 0.04170846939086914,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 53 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.015528678894042969,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35778560,
            "run_time": 0.07668590545654297,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 53 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151572480,
            "run_time": 0.681797981262207,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: org.javacc.jjtree.IO",
            "r0 := @parameter1: java.lang.String",
            "if r0 == null goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/*@bgen(jjtree)\")",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean booleanValue(java.lang.String)>(\"IGNORE_ACTIONS\")",
            "if $z0 == 0 goto $r12 = \"*/\"",
            "$r12 = \"\"",
            "goto [?= $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)]",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r1.<org.javacc.jjtree.IO: void print(java.lang.String)>($r5)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-JavaCCInterpreter__runTokenizer__981280399\\87.smt2",
        "z3": {
            "memory": 32534528,
            "run_time": 0.06014370918273926,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3994:\r\n  ;;   var3994!val!0 var3994!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3994!val!0 () var3994)\r\n  (declare-fun var3994!val!1 () var3994)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3994)) (or (= x var3994!val!0) (= x var3994!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3561:\r\n  ;;   var3561!val!0 var3561!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3561!val!0 () var3561)\r\n  (declare-fun var3561!val!1 () var3561)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3561)) (or (= x var3561!val!0) (= x var3561!val!1)))\r\n  ;; -----------\r\n  (define-fun var2584 () var1619\r\n    var2270-out)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3623 () var1619\r\n    var2270-out)\r\n  (define-fun var2011 () Int\r\n    var2384_get_warning_count/2113508455)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1081 () String\r\n    String-init)\r\n  (define-fun var2794 () String\r\n    (toString/-1112415476 (cast-from-var3561-to-var608 var1621)))\r\n  (define-fun var2590 () Int\r\n    var2384_get_error_count/-1557085957)\r\n  (define-fun var1718!1 () String\r\n    \"Detected  errors and \")\r\n  (define-fun var2905 () String\r\n    (str.++ var1081!1\r\n        \"Detected \"\r\n        (str.from_int (+ var2384_get_error_count/-1557085957 1))))\r\n  (define-fun var2384_get_error_count/-1557085957 () Int\r\n    (- 2))\r\n  (define-fun var486 () String\r\n    (str.++ var1081!1\r\n        \"Detected \"\r\n        (str.from_int (+ var2384_get_error_count/-1557085957 1))\r\n        \" errors and \"\r\n        (str.from_int var2384_get_warning_count/2113508455)\r\n        \" warnings.\"))\r\n  (define-fun var3458 () var3994\r\n    var3994!val!0)\r\n  (define-fun var3900 () String\r\n    (str.++ var1081!1\r\n        \"Detected \"\r\n        (str.from_int (+ var2384_get_error_count/-1557085957 1))\r\n        \" errors and \"\r\n        (str.from_int var2384_get_warning_count/2113508455)\r\n        \" warnings.\"))\r\n  (define-fun null-var3561 () var3561\r\n    var3561!val!1)\r\n  (define-fun var285 () String\r\n    \"A\")\r\n  (define-fun var1621 () var3561\r\n    var3561!val!0)\r\n  (define-fun var2912!1 () String\r\n    \"Detected \")\r\n  (define-fun var1403 () Int\r\n    (+ var2384_get_error_count/-1557085957 1))\r\n  (define-fun var2475 () var3122\r\n    var3122-init)\r\n  (define-fun var2912 () String\r\n    (str.++ var1081!1 \"Detected \"))\r\n  (define-fun var1718 () String\r\n    (str.++ var1081!1\r\n        \"Detected \"\r\n        (str.from_int (+ var2384_get_error_count/-1557085957 1))\r\n        \" errors and \"))\r\n  (define-fun null-var3994 () var3994\r\n    var3994!val!1)\r\n  (define-fun var1610 () var443\r\n    var443-init)\r\n  (define-fun var2295 () String\r\n    \"B\")\r\n  (define-fun var660 () String\r\n    (str.++ var1081!1\r\n        \"Detected \"\r\n        (str.from_int (+ var2384_get_error_count/-1557085957 1))\r\n        \" errors and \"\r\n        (str.from_int var2384_get_warning_count/2113508455)))\r\n  (define-fun var2905!1 () String\r\n    \"Detected  errors and \")\r\n  (define-fun var2384_get_warning_count/2113508455 () Int\r\n    0)\r\n  (define-fun var660!1 () String\r\n    \"Detected  errors and 0 warnings.\")\r\n  (define-fun var1081!1 () String\r\n    \"\")\r\n  (define-fun var1081!2 () String\r\n    \"Detected \")\r\n  (define-fun var2584!1 () var1619\r\n    var1619!val!0)\r\n  (define-fun var486!1 () String\r\n    \"\")\r\n  (define-fun var2794!1 () String\r\n    \"\")\r\n  (define-fun var3122-init () var3122\r\n    var3122!val!0)\r\n  (define-fun var3623!1 () var1619\r\n    var1619!val!0)\r\n  (define-fun var2270-out () var1619\r\n    var1619!val!0)\r\n  (define-fun var2591 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var443-init () var443\r\n    var443!val!0)\r\n  (define-fun println/1773605060 ((x!0 var1619) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var3561-to-var608 ((x!0 var3561)) var608\r\n    var608!val!0)\r\n  (define-fun toString/-1112415476 ((x!0 var608)) String\r\n    \"\")\r\n  (define-fun var2270_exit/142839841 ((x!0 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 95 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14282752,
            "run_time": 0.030936479568481445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3994 is 2\r\n; rep: (as @var3994_0 var3994)\r\n; rep: (as @var3994_1 var3994)\r\n; cardinality of var2148 is 1\r\n; rep: (as @var2148_0 var2148)\r\n; cardinality of var3122 is 1\r\n; rep: (as @var3122_0 var3122)\r\n; cardinality of var443 is 1\r\n; rep: (as @var443_0 var443)\r\n; cardinality of var3561 is 2\r\n; rep: (as @var3561_0 var3561)\r\n; rep: (as @var3561_1 var3561)\r\n; cardinality of var1619 is 1\r\n; rep: (as @var1619_0 var1619)\r\n; cardinality of var2270 is 1\r\n; rep: (as @var2270_0 var2270)\r\n; cardinality of var608 is 1\r\n; rep: (as @var608_0 var608)\r\n; cardinality of var2384 is 1\r\n; rep: (as @var2384_0 var2384)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3122-init () var3122 (as @var3122_0 var3122))\r\n(define-fun var443-init () var443 (as @var443_0 var443))\r\n(define-fun toString/-1112415476 ((BOUND_VARIABLE_1895 var608)) String \"\")\r\n(define-fun cast-from-var3561-to-var608 ((BOUND_VARIABLE_1898 var3561)) var608 (as @var608_0 var608))\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_1901 var1619) (BOUND_VARIABLE_1902 String)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun var2384_get_error_count/-1557085957 () Int (- 2))\r\n(define-fun var2384_get_warning_count/2113508455 () Int 0)\r\n(define-fun var2270_exit/142839841 ((BOUND_VARIABLE_1905 Int)) void (as @void_0 void))\r\n(define-fun null-var3994 () var3994 (as @var3994_0 var3994))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3561 () var3561 (as @var3561_0 var3561))\r\n(define-fun var2270-out () var1619 (as @var1619_0 var1619))\r\n(define-fun var3458 () var3994 (as @var3994_1 var3994))\r\n(define-fun var285 () String \"\")\r\n(define-fun var2295 () String \"\")\r\n(define-fun var1621 () var3561 (as @var3561_1 var3561))\r\n(define-fun var3623!1 () var1619 (as @var1619_0 var1619))\r\n(define-fun var2794!1 () String \"\")\r\n(define-fun var1081!1 () String \"\")\r\n(define-fun var1081!2 () String \"Detected \")\r\n(define-fun var2912!1 () String \"Detected \")\r\n(define-fun var2905!1 () String \"Detected  errors and \")\r\n(define-fun var1718!1 () String \"Detected  errors and \")\r\n(define-fun var660!1 () String \"Detected  errors and 0 warnings.\")\r\n(define-fun var2584!1 () var1619 (as @var1619_0 var1619))\r\n(define-fun var486!1 () String \"\")\r\n(define-fun var2591 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 227258368,
            "run_time": 60.006516456604004,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 198598656,
            "run_time": 0.9864838123321533,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var660!1 () String \"Detected  errors and  warnings.\")\r\n  (define-fun var1718!1 () String \"Detected  errors and \")\r\n  (define-fun var2905!1 () String \"Detected  errors and \")\r\n  (define-fun var2912!1 () String \"Detected \")\r\n  (define-fun var1081!2 () String \"Detected \")\r\n  (define-fun var1081!1 () String \"\")\r\n  (define-fun var1621 () var3561 var3561!84)\r\n  (define-fun var2295 () String \" \")\r\n  (define-fun var285 () String \" \")\r\n  (define-fun var3458 () var3994 var3994!82)\r\n  (define-fun null-var3561 () var3561 var3561!80)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3994 () var3994 var3994!78)\r\n  (define-fun var2384_get_warning_count/2113508455 () Int (- 6))\r\n  (define-fun var2384_get_error_count/-1557085957 () Int (- 7))\r\n  (define-fun abbrev_116 ((x!0 Int)) String (ite (= x!0 0) \"Detected  errors and \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 22,
        "api_sequence": [
            "<java.lang.Throwable: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r26 := @this: JavaCCInterpreter",
            "r2 := @parameter0: java.lang.String",
            "r5 := @parameter1: java.lang.String",
            "$r0 = new org.javacc.parser.JavaCCParser",
            "$r1 = new java.io.StringReader",
            "$r6 := @caughtexception",
            "$r7 = <java.lang.System: java.io.PrintStream out>",
            "$r8 = virtualinvoke $r6.<java.lang.Exception: java.lang.String toString()>()",
            "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r8)",
            "$r10 = <java.lang.System: java.io.PrintStream out>",
            "$r9 = new java.lang.StringBuilder",
            "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()",
            "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Detected \")",
            "$i1 = staticinvoke <org.javacc.parser.JavaCCErrors: int get_error_count()>()",
            "$i2 = $i1 + 1",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" errors and \")",
            "$i3 = staticinvoke <org.javacc.parser.JavaCCErrors: int get_warning_count()>()",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i3)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" warnings.\")",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r10.<java.io.PrintStream: void println(java.lang.String)>($r16)",
            "staticinvoke <java.lang.System: void exit(int)>(1)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__openJJTreeComment__-1832418392\\478.smt2",
        "z3": {
            "memory": 31961088,
            "run_time": 0.0447998046875,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 52 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.014878511428833008,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35905536,
            "run_time": 0.07689523696899414,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 52 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151130112,
            "run_time": 0.7095026969909668,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: org.javacc.jjtree.IO",
            "r0 := @parameter1: java.lang.String",
            "if r0 == null goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/*@bgen(jjtree)\")",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean booleanValue(java.lang.String)>(\"IGNORE_ACTIONS\")",
            "if $z0 == 0 goto $r12 = \"*/\"",
            "$r12 = \"*/\"",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r1.<org.javacc.jjtree.IO: void print(java.lang.String)>($r5)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.LookaheadCalc__image__-1353368249\\935.smt2",
        "z3": {
            "memory": 28184576,
            "run_time": 0.04091835021972656,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 26 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.016109704971313477,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36319232,
            "run_time": 0.07802844047546387,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 26 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141606912,
            "run_time": 0.6544058322906494,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.MatchInfo",
            "r32 = \"\"",
            "i4 = 0",
            "$i0 = r0.<org.javacc.parser.MatchInfo: int firstFreeLoc>",
            "if i4 >= $i0 goto $i1 = r0.<org.javacc.parser.MatchInfo: int firstFreeLoc>",
            "$i1 = r0.<org.javacc.parser.MatchInfo: int firstFreeLoc>",
            "if $i1 != 0 goto $r1 = virtualinvoke r32.<java.lang.String: java.lang.String substring(int)>(1)",
            "$r1 = virtualinvoke r32.<java.lang.String: java.lang.String substring(int)>(1)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-JavaCCInterpreter__tokenize__-1910847915\\107.smt2",
        "z3": {
            "memory": 32079872,
            "run_time": 0.05971860885620117,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1697:\r\n  ;;   var1697!val!1 var1697!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1697!val!1 () var1697)\r\n  (declare-fun var1697!val!0 () var1697)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1697)) (or (= x var1697!val!1) (= x var1697!val!0)))\r\n  ;; -----------\r\n  (define-fun var71 () Int\r\n    (str.len var1655))\r\n  (define-fun var2188 () var2\r\n    var2-init)\r\n  (define-fun var1800 () var2\r\n    var2188!1)\r\n  (define-fun var1027 () var1761\r\n    var2218-err)\r\n  (define-fun var1996 () Int\r\n    0)\r\n  (define-fun null-var1697 () var1697\r\n    var1697!val!1)\r\n  (define-fun var1655 () String\r\n    \"\")\r\n  (define-fun var2332 () var2\r\n    var2-init)\r\n  (define-fun var2481 () var1697\r\n    var1697!val!0)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var69 () var2\r\n    var2332!1)\r\n  (define-fun var3285 () Int\r\n    (defaultLexState/658263060 var2481))\r\n  (define-fun var2-init () var2\r\n    var2!val!0)\r\n  (define-fun var3015 () String\r\n    \"\")\r\n  (define-fun var2188!1 () var2\r\n    var2!val!0)\r\n  (define-fun var1027!1 () var1761\r\n    var1761!val!0)\r\n  (define-fun var2332!1 () var2\r\n    var2!val!0)\r\n  (define-fun var2218-err () var1761\r\n    var1761!val!0)\r\n  (define-fun <init>/451842749 ((x!0 var2)) void\r\n    void!val!0)\r\n  (define-fun defaultLexState/658263060 ((x!0 var1697)) Int\r\n    0)\r\n  (define-fun println/1773605060 ((x!0 var1761) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 52 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.015298604965209961,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1697 is 2\r\n; rep: (as @var1697_0 var1697)\r\n; rep: (as @var1697_1 var1697)\r\n; cardinality of var3530 is 1\r\n; rep: (as @var3530_0 var3530)\r\n; cardinality of var2 is 1\r\n; rep: (as @var2_0 var2)\r\n; cardinality of var1761 is 1\r\n; rep: (as @var1761_0 var1761)\r\n; cardinality of var2218 is 1\r\n; rep: (as @var2218_0 var2218)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun defaultLexState/658263060 ((BOUND_VARIABLE_563 var1697)) Int 0)\r\n(define-fun var2-init () var2 (as @var2_0 var2))\r\n(define-fun <init>/451842749 ((BOUND_VARIABLE_566 var2)) void (as @void_0 void))\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_569 var1761) (BOUND_VARIABLE_570 String)) void (as @void_0 void))\r\n(define-fun null-var1697 () var1697 (as @var1697_0 var1697))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2218-err () var1761 (as @var1761_0 var1761))\r\n(define-fun var2481 () var1697 (as @var1697_1 var1697))\r\n(define-fun var1655 () String \"\")\r\n(define-fun var2332!1 () var2 (as @var2_0 var2))\r\n(define-fun var2188!1 () var2 (as @var2_0 var2))\r\n(define-fun var1027!1 () var1761 (as @var1761_0 var1761))\r\n(define-fun var3015 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37072896,
            "run_time": 0.07940864562988281,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1697:\n  ;;   var1697!val!1 var1697!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1697!val!1 () var1697)\n  (declare-fun var1697!val!0 () var1697)\n  ;; cardinality constraint:\n  (forall ((x var1697)) (or (= x var1697!val!1) (= x var1697!val!0)))\n  ;; -----------\n  (define-fun var1655 () String\n    \"\")\n  (define-fun var3285 () Int\n    (defaultLexState/658263060 var2481))\n  (define-fun var71 () Int\n    (str.len var1655))\n  (define-fun var69 () var2\n    var2332!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1800 () var2\n    var2188!1)\n  (define-fun var2188 () var2\n    var2-init)\n  (define-fun null-var1697 () var1697\n    var1697!val!1)\n  (define-fun var1027 () var1761\n    var2218-err)\n  (define-fun var1996 () Int\n    0)\n  (define-fun var2332 () var2\n    var2-init)\n  (define-fun var2481 () var1697\n    var1697!val!0)\n  (define-fun var2-init () var2\n    var2!val!0)\n  (define-fun var3015 () String\n    \"\")\n  (define-fun var2188!1 () var2\n    var2!val!0)\n  (define-fun var1027!1 () var1761\n    var1761!val!0)\n  (define-fun var2332!1 () var2\n    var2!val!0)\n  (define-fun var2218-err () var1761\n    var1761!val!0)\n  (define-fun <init>/451842749 ((x!0 var2)) void\n    void!val!0)\n  (define-fun defaultLexState/658263060 ((x!0 var1697)) Int\n    0)\n  (define-fun println/1773605060 ((x!0 var1761) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 52 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166993920,
            "run_time": 0.7640910148620605,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1655 () String \"\")\r\n  (define-fun var2481 () var1697 var1697!4)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var1697 () var1697 var1697!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: org.javacc.parser.TokenizerData",
            "r0 := @parameter1: java.lang.String",
            "i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "i15 = 0",
            "i16 = r1.<org.javacc.parser.TokenizerData: int defaultLexState>",
            "$r75 = new java.util.HashSet",
            "specialinvoke $r75.<java.util.HashSet: void <init>()>()",
            "r68 = $r75",
            "$r76 = new java.util.HashSet",
            "specialinvoke $r76.<java.util.HashSet: void <init>()>()",
            "r69 = $r76",
            "if i15 >= i0 goto $r4 = <java.lang.System: java.io.PrintStream err>",
            "$r4 = <java.lang.System: java.io.PrintStream err>",
            "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>(\"Matched EOF\")",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjdoc.HTMLGenerator__documentStart__-1500264560\\108.smt2",
        "z3": {
            "memory": 32206848,
            "run_time": 60.01548528671265,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10326016,
            "run_time": 0.029214859008789062,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3076 is 3\r\n; rep: (as @var3076_0 var3076)\r\n; rep: (as @var3076_1 var3076)\r\n; rep: (as @var3076_2 var3076)\r\n; cardinality of var2763 is 1\r\n; rep: (as @var2763_0 var2763)\r\n; cardinality of var1279 is 2\r\n; rep: (as @var1279_0 var1279)\r\n; rep: (as @var1279_1 var1279)\r\n; cardinality of var474 is 1\r\n; rep: (as @var474_0 var474)\r\n; cardinality of var1134 is 1\r\n; rep: (as @var1134_0 var1134)\r\n; cardinality of var2338 is 1\r\n; rep: (as @var2338_0 var2338)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun create_output_stream/1597595382 ((_arg_1 var1279)) var2763 (as @var2763_0 var2763))\r\n(define-fun cast-from-var3076-to-var1279 ((_arg_1 var3076)) var1279 (ite (= (as @var3076_2 var3076) _arg_1) (as @var1279_1 var1279) (as @var1279_0 var1279)))\r\n(define-fun ostr/154848238 ((_arg_1 var1279)) var2763 (as @var2763_0 var2763))\r\n(define-fun println/-1852303283 ((BOUND_VARIABLE_855 var3076) (BOUND_VARIABLE_856 String)) void (as @void_0 void))\r\n(define-fun var474_getCSS/-2007211491 () String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun null-var3076 () var3076 (as @var3076_0 var3076))\r\n(define-fun var1134-input_file () String \"A\")\r\n(define-fun null-String () String \"\")\r\n(define-fun var3421 () var3076 (as @var3076_1 var3076))\r\n(define-fun var3421!1 () var3076 (as @var3076_2 var3076))\r\n(define-fun var3421!2 () var3076 (as @var3076_0 var3076))\r\n(define-fun var3695 () String \"\")\r\n(define-fun var3421!3 () var3076 (as @var3076_0 var3076))\r\n(define-fun var809 () String \"\")\r\n(define-fun var3421!4 () var3076 (as @var3076_0 var3076))\r\n(define-fun var405 () String \"\")\r\n(define-fun var82!1 () String \"\")\r\n(define-fun var82!2 () String \"<TITLE>BNF for \")\r\n(define-fun var3017!1 () String \"<TITLE>BNF for A\")\r\n(define-fun var1934!1 () String \"<TITLE>BNF for A</TITLE>\")\r\n(define-fun var3421!5 () var3076 (as @var3076_0 var3076))\r\n(define-fun var2445!1 () String \"\")\r\n(define-fun var3421!6 () var3076 (as @var3076_0 var3076))\r\n(define-fun var2619 () String \"\")\r\n(define-fun var3421!7 () var3076 (as @var3076_0 var3076))\r\n(define-fun var3539 () String \"\")\r\n(define-fun var593!1 () String \"\")\r\n(define-fun var593!2 () String \"<H1 ALIGN=CENTER>BNF for \")\r\n(define-fun var820!1 () String \"<H1 ALIGN=CENTER>BNF for A\")\r\n(define-fun var479!1 () String \"<H1 ALIGN=CENTER>BNF for A</H1>\")\r\n(define-fun var3421!8 () var3076 (as @var3076_0 var3076))\r\n(define-fun var334!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37249024,
            "run_time": 60.003514766693115,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 171769856,
            "run_time": 1.0004453659057617,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3076/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjdoc.HTMLGenerator__documentStart__-1500264560\\108.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_46_4 =\r\n     concat(all_46_5, \"</TITLE>\")\r\n   var1934!1 =\r\n     concat(all_43_4, \"</TITLE>\")\r\n   var479!1 =\r\n     concat(all_40_3, \"</H1>\")\r\n   var820!1 =\r\n     concat(\"<H1 ALIGN=CENTER>BNF for \", var1134-input_file)\r\n   var3017!1 =\r\n     concat(\"<TITLE>BNF for \", var1134-input_file)\r\n   all_40_3 =\r\n     concat(\"<H1 ALIGN=CENTER>BNF for \", var1134-input_file)\r\n   all_46_5 =\r\n     concat(\"<TITLE>BNF for \", var1134-input_file)\r\n   all_43_4 =\r\n     concat(\"<TITLE>BNF for \", var1134-input_file)\r\n\r\n754ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 33,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjdoc.HTMLGenerator",
            "$r1 = virtualinvoke r0.<org.javacc.jjdoc.HTMLGenerator: java.io.PrintWriter create_output_stream()>()",
            "r0.<org.javacc.jjdoc.HTMLGenerator: java.io.PrintWriter ostr> = $r1",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 3.2//EN\\\">\")",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"<HTML>\")",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"<HEAD>\")",
            "$r3 = \"\"",
            "$r2 = staticinvoke <org.javacc.jjdoc.JJDocOptions: java.lang.String getCSS()>()",
            "$z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2)",
            "if $z0 != 0 goto $r4 = <org.javacc.jjdoc.JJDocGlobals: java.lang.String input_file>",
            "$r4 = <org.javacc.jjdoc.JJDocGlobals: java.lang.String input_file>",
            "if $r4 == null goto specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"<TITLE>A BNF grammar by JJDoc</TITLE>\")",
            "$r11 = new java.lang.StringBuilder",
            "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<TITLE>BNF for \")",
            "$r12 = <org.javacc.jjdoc.JJDocGlobals: java.lang.String input_file>",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</TITLE>\")",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>($r16)",
            "goto [?= specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"</HEAD>\")]",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"</HEAD>\")",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"<BODY>\")",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<H1 ALIGN=CENTER>BNF for \")",
            "$r6 = <org.javacc.jjdoc.JJDocGlobals: java.lang.String input_file>",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</H1>\")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>($r10)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__insertOpenNodeCode__1284769165\\578.smt2",
        "z3": {
            "memory": 31895552,
            "run_time": 60.00502157211304,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10326016,
            "run_time": 0.04681110382080078,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3052 is 2\r\n; rep: (as @var3052_0 var3052)\r\n; rep: (as @var3052_1 var3052)\r\n; cardinality of var685 is 2\r\n; rep: (as @var685_0 var685)\r\n; rep: (as @var685_1 var685)\r\n; cardinality of var3635 is 2\r\n; rep: (as @var3635_0 var3635)\r\n; rep: (as @var3635_1 var3635)\r\n; cardinality of var152 is 1\r\n; rep: (as @var152_0 var152)\r\n; cardinality of var1137 is 1\r\n; rep: (as @var1137_0 var1137)\r\n; cardinality of var1526 is 1\r\n; rep: (as @var1526_0 var1526)\r\n; cardinality of var2857 is 1\r\n; rep: (as @var2857_0 var2857)\r\n; cardinality of var2691 is 1\r\n; rep: (as @var2691_0 var2691)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun node_descriptor/-576648796 ((BOUND_VARIABLE_1440 var685)) var1137 (as @var1137_0 var1137))\r\n(define-fun getNodeType/-707025417 ((BOUND_VARIABLE_1443 var1137)) String \"\")\r\n(define-fun var1526_getNodeClass/-1384960322 () String \"\")\r\n(define-fun var2857_addType/-972038703 ((BOUND_VARIABLE_1446 String)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun nodeVar/-576648796 ((BOUND_VARIABLE_1449 var685)) String \"\")\r\n(define-fun print/-1652180213 ((BOUND_VARIABLE_1452 var3635) (BOUND_VARIABLE_1453 String)) void (as @void_0 void))\r\n(define-fun var2691_getStatic/-616544340 () Bool true)\r\n(define-fun var1526_getNodeUsesParser/1997544654 () Bool true)\r\n(define-fun var1526_getNodeFactory/-1655041108 () String \"*\")\r\n(define-fun getNodeId/-1379187338 ((BOUND_VARIABLE_1456 var1137)) String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_1459 var3635) (BOUND_VARIABLE_1460 String)) void (as @void_0 void))\r\n(define-fun usesCloseNodeVar/-1769174946 ((_arg_1 var685)) Bool false)\r\n(define-fun openNode/114769770 ((BOUND_VARIABLE_1463 var1137) (BOUND_VARIABLE_1464 String)) String \"\")\r\n(define-fun var1526_getNodeScopeHook/893147786 () Bool false)\r\n(define-fun var1526_getTrackTokens/1877101562 () Bool false)\r\n(define-fun null-var3052 () var3052 (as @var3052_0 var3052))\r\n(define-fun null-var685 () var685 (as @var685_0 var685))\r\n(define-fun null-var3635 () var3635 (as @var3635_0 var3635))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2913 () var3052 (as @var3052_1 var3052))\r\n(define-fun var1650 () var685 (as @var685_1 var685))\r\n(define-fun var921 () var3635 (as @var3635_1 var3635))\r\n(define-fun var3988 () String \"\")\r\n(define-fun var3227!1 () String \"\")\r\n(define-fun var545!1 () String \"\")\r\n(define-fun var545!2 () String \"\")\r\n(define-fun var816!1 () String \"\")\r\n(define-fun var2444!1 () String \" *\")\r\n(define-fun var210!1 () String \" *\")\r\n(define-fun var77!1 () String \" * = \")\r\n(define-fun var921!1 () var3635 (as @var3635_0 var3635))\r\n(define-fun var2855!1 () String \"\")\r\n(define-fun var2499!1 () String \"\")\r\n(define-fun var2499!2 () String \"null\")\r\n(define-fun var959!1 () String \"null, \")\r\n(define-fun var207!1 () String \"\")\r\n(define-fun var207!2 () String \"(\")\r\n(define-fun var2873!1 () String \"(\")\r\n(define-fun var2523!1 () String \"(*)\")\r\n(define-fun var3885!1 () String \"(*)\")\r\n(define-fun var2147!1 () String \"(*)::jjtCreate(\")\r\n(define-fun var2790!1 () String \"(*)::jjtCreate(null, \")\r\n(define-fun var615!1 () String \"(*)::jjtCreate(null, \")\r\n(define-fun var1698!1 () String \"(*)::jjtCreate(null, );\")\r\n(define-fun var921!2 () var3635 (as @var3635_0 var3635))\r\n(define-fun var1007!1 () String \"\")\r\n(define-fun var1845!1 () String \"\")\r\n(define-fun var1845!2 () String \"\")\r\n(define-fun var3590!1 () String \"\")\r\n(define-fun var921!3 () var3635 (as @var3635_0 var3635))\r\n(define-fun var1168!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37314560,
            "run_time": 60.00195670127869,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 385011712,
            "run_time": 1.4463036060333252,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var685/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPCodeGenerator__insertOpenNodeCode__1284769165\\578.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2790!1 =\r\n     concat(all_76_10, \"null, \")\r\n   var77!1 =\r\n     concat(all_73_6, \" = \")\r\n   var2147!1 =\r\n     concat(all_70_5, \"::jjtCreate(\")\r\n   var210!1 =\r\n     concat(all_67_6, all_52_4)\r\n   var3885!1 =\r\n     concat(all_64_4, all_46_3)\r\n   var2523!1 =\r\n     concat(all_61_4, \"*)\")\r\n   var2444!1 =\r\n     concat(all_58_4, \" *\")\r\n   var1698!1 =\r\n     concat(all_55_3, \");\")\r\n   var615!1 =\r\n     concat(all_40_4, all_40_2)\r\n   var3590!1 =\r\n     concat(var3988, all_52_3)\r\n   var816!1 =\r\n     concat(var3988, all_46_3)\r\n   var2873!1 =\r\n     concat(\"(\", all_46_3)\r\n   all_76_10 =\r\n     concat(all_76_11, \"::jjtCreate(\")\r\n   all_73_6 =\r\n     concat(all_73_8, all_52_4)\r\n   all_70_5 =\r\n     concat(all_70_6, all_46_3)\r\n   all_67_6 =\r\n     concat(all_67_7, \" *\")\r\n   all_64_4 =\r\n     concat(all_64_5, \"*)\")\r\n   all_55_3 =\r\n     concat(all_40_4, all_40_2)\r\n   all_58_4 =\r\n     concat(var3988, all_46_3)\r\n   all_61_4 =\r\n     concat(\"(\", all_46_3)\r\n   all_40_4 =\r\n     concat(all_79_11, \"null, \")\r\n   all_76_11 =\r\n     concat(all_76_12, all_46_3)\r\n   all_73_8 =\r\n     concat(all_73_9, \" *\")\r\n   all_70_6 =\r\n     concat(all_70_7, \"*)\")\r\n   all_67_7 =\r\n     concat(var3988, all_46_3)\r\n   all_64_5 =\r\n     concat(\"(\", all_46_3)\r\n   all_79_11 =\r\n     concat(all_79_12, \"::jjtCreate(\")\r\n   all_76_12 =\r\n     concat(all_76_13, \"*)\")\r\n   all_73_9 =\r\n     concat(var3988, all_46_3)\r\n   all_70_7 =\r\n     concat(\"(\", all_46_3)\r\n   all_79_12 =\r\n     concat(all_79_13, all_46_3)\r\n   all_76_13 =\r\n     concat(\"(\", all_46_3)\r\n   all_79_13 =\r\n     concat(all_79_14, \"*)\")\r\n   all_79_14 =\r\n     concat(\"(\", all_46_3)\r\n\r\n1198ms\r\n"
        },
        "undefined_function_count": 16,
        "assertion_count": 70,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 17,
            "<java.lang.StringBuilder: java.lang.String toString()>": 4,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r70 := @this: org.javacc.jjtree.CPPCodeGenerator",
            "r0 := @parameter0: org.javacc.jjtree.NodeScope",
            "r4 := @parameter1: org.javacc.jjtree.IO",
            "r5 := @parameter2: java.lang.String",
            "$r1 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "r2 = virtualinvoke $r1.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String getNodeType()>()",
            "$r3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeClass()>()",
            "$i0 = virtualinvoke $r3.<java.lang.String: int length()>()",
            "if $i0 <= 0 goto r71 = r2",
            "r71 = r2",
            "staticinvoke <org.javacc.jjtree.CPPNodeFiles: void addType(java.lang.String)>(r2)",
            "$r72 = new java.lang.StringBuilder",
            "specialinvoke $r72.<java.lang.StringBuilder: void <init>()>()",
            "$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" *\")",
            "$r76 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "$r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76)",
            "$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \")",
            "$r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void print(java.lang.String)>($r79)",
            "$z5 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getStatic()>()",
            "if $z5 == 0 goto $r80 = \"this\"",
            "$r80 = \"null\"",
            "goto [?= $z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeUsesParser()>()]",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeUsesParser()>()",
            "if $z0 == 0 goto $r81 = \"\"",
            "$r67 = new java.lang.StringBuilder",
            "specialinvoke $r67.<java.lang.StringBuilder: void <init>()>()",
            "$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80)",
            "$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")",
            "$r81 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>()",
            "goto [?= $r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()]",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()",
            "$z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"*\")",
            "if $z1 == 0 goto $r7 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()",
            "$r55 = new java.lang.StringBuilder",
            "specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()",
            "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"*)\")",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"::jjtCreate(\")",
            "$r63 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)",
            "$r61 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r62 = virtualinvoke $r61.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String getNodeId()>()",
            "$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62)",
            "$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\");\")",
            "$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r66)",
            "goto [?= $z6 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()]",
            "$z6 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()",
            "if $z6 == 0 goto $r18 = new java.lang.StringBuilder",
            "$r18 = new java.lang.StringBuilder",
            "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()",
            "$r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r20 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r19 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "$r21 = virtualinvoke $r20.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String openNode(java.lang.String)>($r19)",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r24)",
            "$z2 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeScopeHook()>()",
            "if $z2 == 0 goto $z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "$z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "if $z3 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Lookahead__dump__1451853154\\875.smt2",
        "z3": {
            "memory": 31485952,
            "run_time": 0.0600123405456543,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var235:\r\n  ;;   var235!val!0 var235!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var235!val!0 () var235)\r\n  (declare-fun var235!val!1 () var235)\r\n  ;; cardinality constraint:\r\n  (forall ((x var235)) (or (= x var235!val!0) (= x var235!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2354:\r\n  ;;   var2354!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2354!val!0 () var2354)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2354)) (= x var2354!val!0))\r\n  ;; -----------\r\n  ;; universe for var573:\r\n  ;;   var573!val!0 var573!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var573!val!0 () var573)\r\n  (declare-fun var573!val!1 () var573)\r\n  ;; cardinality constraint:\r\n  (forall ((x var573)) (or (= x var573!val!0) (= x var573!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2290:\r\n  ;;   var2290!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2290!val!0 () var2290)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2290)) (= x var2290!val!0))\r\n  ;; -----------\r\n  (define-fun var2265 () var235\r\n    var235!val!0)\r\n  (define-fun var3553 () Bool\r\n    (isExplicit/-518377291 var969))\r\n  (define-fun var2160 () Int\r\n    2)\r\n  (define-fun var3320 () String\r\n    \" explicit\")\r\n  (define-fun var1353!1 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var1218 () String\r\n    (str.++ (dump/1891027141 (cast-from-var573-to-var2290 var969) var2160 var2265)\r\n        \" explicit\"))\r\n  (define-fun null-var573 () var573\r\n    var573!val!1)\r\n  (define-fun var3459 () Bool\r\n    (var235_contains/1636690605 var2265 (cast-from-var573-to-var2354 var969)))\r\n  (define-fun var1353 () String\r\n    (dump/1891027141 (cast-from-var573-to-var2290 var969) var2160 var2265))\r\n  (define-fun var969 () var573\r\n    var573!val!0)\r\n  (define-fun null-var235 () var235\r\n    var235!val!1)\r\n  (define-fun isExplicit/-518377291 ((x!0 var573)) Bool\r\n    true)\r\n  (define-fun var235_contains/1636690605 ((x!0 var235) (x!1 var2354)) Bool\r\n    true)\r\n  (define-fun cast-from-var573-to-var2290 ((x!0 var573)) var2290\r\n    var2290!val!0)\r\n  (define-fun cast-from-var573-to-var2354 ((x!0 var573)) var2354\r\n    var2354!val!0)\r\n  (define-fun dump/1891027141 ((x!0 var2290) (x!1 Int) (x!2 var235)) String\r\n    \"\")\r\n)\r\n(error \"line 44 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015952348709106445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var573 is 2\r\n; rep: (as @var573_0 var573)\r\n; rep: (as @var573_1 var573)\r\n; cardinality of var235 is 2\r\n; rep: (as @var235_0 var235)\r\n; rep: (as @var235_1 var235)\r\n; cardinality of var2290 is 1\r\n; rep: (as @var2290_0 var2290)\r\n; cardinality of var2354 is 1\r\n; rep: (as @var2354_0 var2354)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun dump/1891027141 ((_arg_1 var2290) (_arg_2 Int) (_arg_3 var235)) String \"\")\r\n(define-fun cast-from-var573-to-var2290 ((_arg_1 var573)) var2290 (as @var2290_0 var2290))\r\n(define-fun isExplicit/-518377291 ((_arg_1 var573)) Bool true)\r\n(define-fun var235_contains/1636690605 ((_arg_1 var235) (_arg_2 var2354)) Bool true)\r\n(define-fun cast-from-var573-to-var2354 ((_arg_1 var573)) var2354 (as @var2354_0 var2354))\r\n(define-fun null-var573 () var573 (as @var573_0 var573))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var235 () var235 (as @var235_0 var235))\r\n(define-fun var969 () var573 (as @var573_1 var573))\r\n(define-fun var2160 () Int 0)\r\n(define-fun var2265 () var235 (as @var235_1 var235))\r\n(define-fun var1353!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36605952,
            "run_time": 0.0794529914855957,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 43 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 44 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166543360,
            "run_time": 0.9593346118927002,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.Lookahead__dump__1451853154\\875.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1353!1 =\r\n     concat(all_20_0, rhs)\r\n   ... sat\r\n\r\n671ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.Lookahead",
            "i0 := @parameter0: int",
            "r1 := @parameter1: java.util.Set",
            "$r2 = specialinvoke r0.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>(i0, r1)",
            "$z0 = r0.<org.javacc.parser.Lookahead: boolean isExplicit>",
            "if $z0 == 0 goto $r8 = \" implicit\"",
            "$r8 = \" explicit\"",
            "goto [?= $r7 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8)]",
            "$r7 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8)",
            "$z1 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r0)",
            "if $z1 == 0 goto interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjdoc.BNFGenerator__create_output_stream__-368912085\\40.smt2",
        "z3": {
            "memory": 31481856,
            "run_time": 0.06276917457580566,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var295:\r\n  ;;   var295!val!0 var295!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var295!val!0 () var295)\r\n  (declare-fun var295!val!1 () var295)\r\n  ;; cardinality constraint:\r\n  (forall ((x var295)) (or (= x var295!val!0) (= x var295!val!1)))\r\n  ;; -----------\r\n  (define-fun var2734 () String\r\n    var1851-input_file)\r\n  (define-fun null-var295 () var295\r\n    var295!val!1)\r\n  (define-fun var1176 () var2981\r\n    var2981-init)\r\n  (define-fun var66 () var1958\r\n    var1958-init)\r\n  (define-fun var170 () var295\r\n    var295!val!0)\r\n  (define-fun var3667 () String\r\n    var3599_getOutputFile/-943424739)\r\n  (define-fun var3188 () Bool\r\n    (= var3599_getOutputFile/-943424739 \"\"))\r\n  (define-fun var1325 () Bool\r\n    (= var1851-input_file \"standard input\"))\r\n  (define-fun var1993 () var3261\r\n    var1150-out)\r\n  (define-fun var3599_getOutputFile/-943424739 () String\r\n    \"\")\r\n  (define-fun var1851-input_file () String\r\n    \"standard input\")\r\n  (define-fun var2981-init () var2981\r\n    var2981!val!0)\r\n  (define-fun var1176!2 () var2981\r\n    var2981!val!0)\r\n  (define-fun var1993!1 () var3261\r\n    var3261!val!0)\r\n  (define-fun var1176!1 () var2981\r\n    var2981!val!0)\r\n  (define-fun var66!1 () var1958\r\n    var1958!val!0)\r\n  (define-fun var1958-init () var1958\r\n    var1958!val!0)\r\n  (define-fun var1150-out () var3261\r\n    var3261!val!0)\r\n  (define-fun cast-from-var2981-to-var2014 ((x!0 var2981)) var2014\r\n    var2014!val!0)\r\n  (define-fun <init>/-1864438596 ((x!0 var1958) (x!1 var2014)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var3261-to-var1429 ((x!0 var3261)) var1429\r\n    var1429!val!0)\r\n  (define-fun <init>/-1119342706 ((x!0 var2981) (x!1 var1429)) void\r\n    void!val!0)\r\n)\r\n(error \"line 54 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1695744,
            "run_time": 0.016083955764770508,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var295 is 2\r\n; rep: (as @var295_0 var295)\r\n; rep: (as @var295_1 var295)\r\n; cardinality of var3599 is 1\r\n; rep: (as @var3599_0 var3599)\r\n; cardinality of var1851 is 1\r\n; rep: (as @var1851_0 var1851)\r\n; cardinality of var1958 is 1\r\n; rep: (as @var1958_0 var1958)\r\n; cardinality of var2981 is 1\r\n; rep: (as @var2981_0 var2981)\r\n; cardinality of var3261 is 1\r\n; rep: (as @var3261_0 var3261)\r\n; cardinality of var1150 is 1\r\n; rep: (as @var1150_0 var1150)\r\n; cardinality of var1429 is 1\r\n; rep: (as @var1429_0 var1429)\r\n; cardinality of var2014 is 1\r\n; rep: (as @var2014_0 var2014)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3599_getOutputFile/-943424739 () String \"\")\r\n(define-fun var1958-init () var1958 (as @var1958_0 var1958))\r\n(define-fun var2981-init () var2981 (as @var2981_0 var2981))\r\n(define-fun <init>/-1119342706 ((BOUND_VARIABLE_616 var2981) (BOUND_VARIABLE_617 var1429)) void (as @void_0 void))\r\n(define-fun cast-from-var3261-to-var1429 ((BOUND_VARIABLE_620 var3261)) var1429 (as @var1429_0 var1429))\r\n(define-fun <init>/-1864438596 ((BOUND_VARIABLE_623 var1958) (BOUND_VARIABLE_624 var2014)) void (as @void_0 void))\r\n(define-fun cast-from-var2981-to-var2014 ((BOUND_VARIABLE_627 var2981)) var2014 (as @var2014_0 var2014))\r\n(define-fun null-var295 () var295 (as @var295_0 var295))\r\n(define-fun var1851-input_file () String \"standard input\")\r\n(define-fun var1150-out () var3261 (as @var3261_0 var3261))\r\n(define-fun var170 () var295 (as @var295_1 var295))\r\n(define-fun var1176!1 () var2981 (as @var2981_0 var2981))\r\n(define-fun var1993!1 () var3261 (as @var3261_0 var3261))\r\n(define-fun var66!1 () var1958 (as @var1958_0 var1958))\r\n(define-fun var1176!2 () var2981 (as @var2981_0 var2981))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36323328,
            "run_time": 0.07757258415222168,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var295:\n  ;;   var295!val!0 var295!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var295!val!0 () var295)\n  (declare-fun var295!val!1 () var295)\n  ;; cardinality constraint:\n  (forall ((x var295)) (or (= x var295!val!0) (= x var295!val!1)))\n  ;; -----------\n  (define-fun var1325 () Bool\n    (= var1851-input_file \"standard input\"))\n  (define-fun var1993 () var3261\n    var1150-out)\n  (define-fun null-var295 () var295\n    var295!val!1)\n  (define-fun var1176 () var2981\n    var2981-init)\n  (define-fun var3667 () String\n    var3599_getOutputFile/-943424739)\n  (define-fun var66 () var1958\n    var1958-init)\n  (define-fun var170 () var295\n    var295!val!0)\n  (define-fun var2734 () String\n    var1851-input_file)\n  (define-fun var3188 () Bool\n    (= var3599_getOutputFile/-943424739 \"\"))\n  (define-fun var3599_getOutputFile/-943424739 () String\n    \"\")\n  (define-fun var1851-input_file () String\n    \"standard input\")\n  (define-fun var2981-init () var2981\n    var2981!val!0)\n  (define-fun var1176!2 () var2981\n    var2981!val!0)\n  (define-fun var1993!1 () var3261\n    var3261!val!0)\n  (define-fun var1176!1 () var2981\n    var2981!val!0)\n  (define-fun var66!1 () var1958\n    var1958!val!0)\n  (define-fun var1958-init () var1958\n    var1958!val!0)\n  (define-fun var1150-out () var3261\n    var3261!val!0)\n  (define-fun cast-from-var2981-to-var2014 ((x!0 var2981)) var2014\n    var2014!val!0)\n  (define-fun <init>/-1864438596 ((x!0 var1958) (x!1 var2014)) void\n    void!val!0)\n  (define-fun cast-from-var3261-to-var1429 ((x!0 var3261)) var1429\n    var1429!val!0)\n  (define-fun <init>/-1119342706 ((x!0 var2981) (x!1 var1429)) void\n    void!val!0)\n)\n(error \"line 54 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154296320,
            "run_time": 0.9581799507141113,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var170 () var295 var295!4)\r\n  (define-fun var1851-input_file () String \"standard input\")\r\n  (define-fun null-var295 () var295 var295!2)\r\n  (define-fun var3599_getOutputFile/-943424739 () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 2
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.jjdoc.BNFGenerator",
            "$r0 = staticinvoke <org.javacc.jjdoc.JJDocOptions: java.lang.String getOutputFile()>()",
            "$z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 == 0 goto $r1 = staticinvoke <org.javacc.jjdoc.JJDocOptions: java.lang.String getOutputFile()>()",
            "$r7 = <org.javacc.jjdoc.JJDocGlobals: java.lang.String input_file>",
            "$z1 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(\"standard input\")",
            "if $z1 == 0 goto $r8 = <org.javacc.jjdoc.JJDocGlobals: java.lang.String input_file>",
            "$r41 = new java.io.PrintWriter",
            "$r40 = new java.io.OutputStreamWriter",
            "$r29 = <java.lang.System: java.io.PrintStream out>",
            "specialinvoke $r40.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream)>($r29)",
            "specialinvoke $r41.<java.io.PrintWriter: void <init>(java.io.Writer)>($r40)",
            "return $r41"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjdoc.HTMLGenerator__documentStart__-1500264560\\142.smt2",
        "z3": {
            "memory": 31854592,
            "run_time": 0.07405591011047363,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2382:\r\n  ;;   var2382!val!0 var2382!val!1 var2382!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2382!val!0 () var2382)\r\n  (declare-fun var2382!val!1 () var2382)\r\n  (declare-fun var2382!val!2 () var2382)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2382))\r\n          (or (= x var2382!val!0) (= x var2382!val!1) (= x var2382!val!2)))\r\n  ;; -----------\r\n  ;; universe for var35:\r\n  ;;   var35!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var35!val!0 () var35)\r\n  ;; cardinality constraint:\r\n  (forall ((x var35)) (= x var35!val!0))\r\n  ;; -----------\r\n  ;; universe for var97:\r\n  ;;   var97!val!1 var97!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var97!val!1 () var97)\r\n  (declare-fun var97!val!0 () var97)\r\n  ;; cardinality constraint:\r\n  (forall ((x var97)) (or (= x var97!val!1) (= x var97!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var2382 () var2382\r\n    var2382!val!1)\r\n  (define-fun var1458 () String\r\n    var575-input_file)\r\n  (define-fun var3233 () String\r\n    \"\")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3696 () String\r\n    (str.++ var82!1 \"<H1 ALIGN=CENTER>BNF for \" var575-input_file \"</H1>\"))\r\n  (define-fun var82 () String\r\n    String-init)\r\n  (define-fun var1042 () String\r\n    (str.++ var82!1 \"<H1 ALIGN=CENTER>BNF for \"))\r\n  (define-fun var2938 () Bool\r\n    (= \"\" var3761_getCSS/-2007211491))\r\n  (define-fun var876 () String\r\n    var3761_getCSS/-2007211491)\r\n  (define-fun var1841 () String\r\n    (str.++ var82!1 \"<H1 ALIGN=CENTER>BNF for \" var575-input_file \"</H1>\"))\r\n  (define-fun var2916 () String\r\n    var575-input_file)\r\n  (define-fun var2409 () var2382\r\n    var2382!val!0)\r\n  (define-fun var894 () String\r\n    (str.++ var82!1 \"<H1 ALIGN=CENTER>BNF for \" var575-input_file))\r\n  (define-fun var2409!1 () var2382\r\n    var2382!val!2)\r\n  (define-fun var1597 () var35\r\n    (create_output_stream/1597595382 (cast-from-var2382-to-var97 var2409)))\r\n  (define-fun var82!1 () String\r\n    \"\")\r\n  (define-fun var3761_getCSS/-2007211491 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var575-input_file () String\r\n    \"\")\r\n  (define-fun var894!1 () String\r\n    \"<H1 ALIGN=CENTER>BNF for </H1>\")\r\n  (define-fun var1042!1 () String\r\n    \"<H1 ALIGN=CENTER>BNF for \")\r\n  (define-fun var82!2 () String\r\n    \"<H1 ALIGN=CENTER>BNF for \")\r\n  (define-fun var2697 () String\r\n    \"\")\r\n  (define-fun var527 () String\r\n    \"\")\r\n  (define-fun var2409!3 () var2382\r\n    var2382!val!0)\r\n  (define-fun var2409!7 () var2382\r\n    var2382!val!0)\r\n  (define-fun var2409!2 () var2382\r\n    var2382!val!0)\r\n  (define-fun var3764 () String\r\n    \"\")\r\n  (define-fun var2409!6 () var2382\r\n    var2382!val!0)\r\n  (define-fun var3060 () String\r\n    \"\")\r\n  (define-fun var3696!1 () String\r\n    \"\")\r\n  (define-fun var246 () String\r\n    \"\")\r\n  (define-fun var2409!5 () var2382\r\n    var2382!val!0)\r\n  (define-fun var1762 () String\r\n    \"\")\r\n  (define-fun var2409!8 () var2382\r\n    var2382!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2409!4 () var2382\r\n    var2382!val!0)\r\n  (define-fun cast-from-var2382-to-var97 ((x!0 var2382)) var97\r\n    (ite (= x!0 var2382!val!0) var97!val!1\r\n      var97!val!0))\r\n  (define-fun create_output_stream/1597595382 ((x!0 var97)) var35\r\n    var35!val!0)\r\n  (define-fun ostr/154848238 ((x!0 var97)) var35\r\n    var35!val!0)\r\n  (define-fun println/-1852303283 ((x!0 var2382) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 100 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.04675459861755371,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2382 is 3\r\n; rep: (as @var2382_0 var2382)\r\n; rep: (as @var2382_1 var2382)\r\n; rep: (as @var2382_2 var2382)\r\n; cardinality of var35 is 1\r\n; rep: (as @var35_0 var35)\r\n; cardinality of var97 is 2\r\n; rep: (as @var97_0 var97)\r\n; rep: (as @var97_1 var97)\r\n; cardinality of var3761 is 1\r\n; rep: (as @var3761_0 var3761)\r\n; cardinality of var575 is 1\r\n; rep: (as @var575_0 var575)\r\n; cardinality of var2345 is 1\r\n; rep: (as @var2345_0 var2345)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun create_output_stream/1597595382 ((_arg_1 var97)) var35 (as @var35_0 var35))\r\n(define-fun cast-from-var2382-to-var97 ((_arg_1 var2382)) var97 (ite (= (as @var2382_2 var2382) _arg_1) (as @var97_1 var97) (as @var97_0 var97)))\r\n(define-fun ostr/154848238 ((_arg_1 var97)) var35 (as @var35_0 var35))\r\n(define-fun println/-1852303283 ((BOUND_VARIABLE_697 var2382) (BOUND_VARIABLE_698 String)) void (as @void_0 void))\r\n(define-fun var3761_getCSS/-2007211491 () String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun null-var2382 () var2382 (as @var2382_0 var2382))\r\n(define-fun var575-input_file () String \"\")\r\n(define-fun null-String () String \"\")\r\n(define-fun var2409 () var2382 (as @var2382_1 var2382))\r\n(define-fun var2409!1 () var2382 (as @var2382_2 var2382))\r\n(define-fun var2409!2 () var2382 (as @var2382_0 var2382))\r\n(define-fun var3764 () String \"\")\r\n(define-fun var2409!3 () var2382 (as @var2382_0 var2382))\r\n(define-fun var2697 () String \"\")\r\n(define-fun var2409!4 () var2382 (as @var2382_0 var2382))\r\n(define-fun var3060 () String \"\")\r\n(define-fun var2409!5 () var2382 (as @var2382_0 var2382))\r\n(define-fun var246 () String \"\")\r\n(define-fun var2409!6 () var2382 (as @var2382_0 var2382))\r\n(define-fun var1762 () String \"\")\r\n(define-fun var2409!7 () var2382 (as @var2382_0 var2382))\r\n(define-fun var527 () String \"\")\r\n(define-fun var82!1 () String \"\")\r\n(define-fun var82!2 () String \"<H1 ALIGN=CENTER>BNF for \")\r\n(define-fun var1042!1 () String \"<H1 ALIGN=CENTER>BNF for \")\r\n(define-fun var894!1 () String \"<H1 ALIGN=CENTER>BNF for </H1>\")\r\n(define-fun var2409!8 () var2382 (as @var2382_0 var2382))\r\n(define-fun var3696!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36519936,
            "run_time": 0.07716941833496094,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2382:\n  ;;   var2382!val!0 var2382!val!1 var2382!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2382!val!0 () var2382)\n  (declare-fun var2382!val!1 () var2382)\n  (declare-fun var2382!val!2 () var2382)\n  ;; cardinality constraint:\n  (forall ((x var2382))\n          (or (= x var2382!val!0) (= x var2382!val!1) (= x var2382!val!2)))\n  ;; -----------\n  ;; universe for var35:\n  ;;   var35!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var35!val!0 () var35)\n  ;; cardinality constraint:\n  (forall ((x var35)) (= x var35!val!0))\n  ;; -----------\n  ;; universe for var97:\n  ;;   var97!val!1 var97!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var97!val!1 () var97)\n  (declare-fun var97!val!0 () var97)\n  ;; cardinality constraint:\n  (forall ((x var97)) (or (= x var97!val!1) (= x var97!val!0)))\n  ;; -----------\n  (define-fun null-var2382 () var2382\n    var2382!val!1)\n  (define-fun var3233 () String\n    \"\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3696 () String\n    (str.++ var82!1 \"<H1 ALIGN=CENTER>BNF for \" var575-input_file \"</H1>\"))\n  (define-fun var2938 () Bool\n    (= \"\" var3761_getCSS/-2007211491))\n  (define-fun var82 () String\n    String-init)\n  (define-fun var1042 () String\n    (str.++ var82!1 \"<H1 ALIGN=CENTER>BNF for \"))\n  (define-fun var876 () String\n    var3761_getCSS/-2007211491)\n  (define-fun var1597 () var35\n    (create_output_stream/1597595382 (cast-from-var2382-to-var97 var2409)))\n  (define-fun var1841 () String\n    (str.++ var82!1 \"<H1 ALIGN=CENTER>BNF for \" var575-input_file \"</H1>\"))\n  (define-fun var2916 () String\n    var575-input_file)\n  (define-fun var894 () String\n    (str.++ var82!1 \"<H1 ALIGN=CENTER>BNF for \" var575-input_file))\n  (define-fun var2409 () var2382\n    var2382!val!0)\n  (define-fun var2409!1 () var2382\n    var2382!val!2)\n  (define-fun var1458 () String\n    var575-input_file)\n  (define-fun var82!1 () String\n    \"\")\n  (define-fun var3761_getCSS/-2007211491 () String\n    \"\")\n  (define-fun null-String () String\n    \"\")\n  (define-fun var575-input_file () String\n    \"\")\n  (define-fun var894!1 () String\n    \"<H1 ALIGN=CENTER>BNF for </H1>\")\n  (define-fun var1042!1 () String\n    \"<H1 ALIGN=CENTER>BNF for \")\n  (define-fun var82!2 () String\n    \"<H1 ALIGN=CENTER>BNF for \")\n  (define-fun var2697 () String\n    \"\")\n  (define-fun var527 () String\n    \"\")\n  (define-fun var2409!3 () var2382\n    var2382!val!0)\n  (define-fun var2409!7 () var2382\n    var2382!val!0)\n  (define-fun var2409!2 () var2382\n    var2382!val!0)\n  (define-fun var3764 () String\n    \"\")\n  (define-fun var2409!6 () var2382\n    var2382!val!0)\n  (define-fun var3060 () String\n    \"\")\n  (define-fun var3696!1 () String\n    \"\")\n  (define-fun var246 () String\n    \"\")\n  (define-fun var2409!5 () var2382\n    var2382!val!0)\n  (define-fun var1762 () String\n    \"\")\n  (define-fun var2409!8 () var2382\n    var2382!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2409!4 () var2382\n    var2382!val!0)\n  (define-fun cast-from-var2382-to-var97 ((x!0 var2382)) var97\n    (ite (= x!0 var2382!val!0) var97!val!1\n      var97!val!0))\n  (define-fun create_output_stream/1597595382 ((x!0 var97)) var35\n    var35!val!0)\n  (define-fun ostr/154848238 ((x!0 var97)) var35\n    var35!val!0)\n  (define-fun println/-1852303283 ((x!0 var2382) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 100 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163143680,
            "run_time": 0.9578242301940918,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2382/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjdoc.HTMLGenerator__documentStart__-1500264560\\142.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var894!1 =\r\n     concat(all_34_3, \"</H1>\")\r\n   var1042!1 =\r\n     concat(\"<H1 ALIGN=CENTER>BNF for \", var575-input_file)\r\n   all_34_3 =\r\n     concat(\"<H1 ALIGN=CENTER>BNF for \", var575-input_file)\r\n\r\n638ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 24,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjdoc.HTMLGenerator",
            "$r1 = virtualinvoke r0.<org.javacc.jjdoc.HTMLGenerator: java.io.PrintWriter create_output_stream()>()",
            "r0.<org.javacc.jjdoc.HTMLGenerator: java.io.PrintWriter ostr> = $r1",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"<!DOCTYPE HTML PUBLIC \\\"-//W3C//DTD HTML 3.2//EN\\\">\")",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"<HTML>\")",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"<HEAD>\")",
            "$r3 = \"\"",
            "$r2 = staticinvoke <org.javacc.jjdoc.JJDocOptions: java.lang.String getCSS()>()",
            "$z0 = virtualinvoke $r3.<java.lang.String: boolean equals(java.lang.Object)>($r2)",
            "if $z0 != 0 goto $r4 = <org.javacc.jjdoc.JJDocGlobals: java.lang.String input_file>",
            "$r4 = <org.javacc.jjdoc.JJDocGlobals: java.lang.String input_file>",
            "if $r4 == null goto specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"<TITLE>A BNF grammar by JJDoc</TITLE>\")",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"<TITLE>A BNF grammar by JJDoc</TITLE>\")",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"</HEAD>\")",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>(\"<BODY>\")",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<H1 ALIGN=CENTER>BNF for \")",
            "$r6 = <org.javacc.jjdoc.JJDocGlobals: java.lang.String input_file>",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"</H1>\")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void println(java.lang.String)>($r10)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Lookahead__dump__1451853154\\900.smt2",
        "z3": {
            "memory": 31924224,
            "run_time": 0.0592803955078125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1281:\r\n  ;;   var1281!val!1 var1281!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1281!val!1 () var1281)\r\n  (declare-fun var1281!val!0 () var1281)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1281)) (or (= x var1281!val!1) (= x var1281!val!0)))\r\n  ;; -----------\r\n  ;; universe for var735:\r\n  ;;   var735!val!0 var735!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var735!val!0 () var735)\r\n  (declare-fun var735!val!1 () var735)\r\n  ;; cardinality constraint:\r\n  (forall ((x var735)) (or (= x var735!val!0) (= x var735!val!1)))\r\n  ;; -----------\r\n  ;; universe for var604:\r\n  ;;   var604!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var604!val!0 () var604)\r\n  ;; cardinality constraint:\r\n  (forall ((x var604)) (= x var604!val!0))\r\n  ;; -----------\r\n  ;; universe for var3608:\r\n  ;;   var3608!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3608!val!0 () var3608)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3608)) (= x var3608!val!0))\r\n  ;; -----------\r\n  (define-fun null-var735 () var735\r\n    var735!val!1)\r\n  (define-fun var2353 () String\r\n    \" explicit\")\r\n  (define-fun var3833 () var1281\r\n    var1281!val!0)\r\n  (define-fun var1800 () var735\r\n    var735!val!0)\r\n  (define-fun var583 () Bool\r\n    (var735_contains/1636690605 var1800 (cast-from-var1281-to-var3608 var3833)))\r\n  (define-fun var3790 () Int\r\n    2)\r\n  (define-fun var3282 () String\r\n    (dump/1891027141 (cast-from-var1281-to-var604 var3833) var3790 var1800))\r\n  (define-fun var609 () String\r\n    (dump/1891027141 (la_expansion/-518377291 var3833!1) (+ var3790 1) var1800!1))\r\n  (define-fun var2618 () String\r\n    var1281-eol)\r\n  (define-fun var3282!1 () String\r\n    \"\")\r\n  (define-fun var3862!1 () String\r\n    \" explicit\")\r\n  (define-fun var3862 () String\r\n    (str.++ (dump/1891027141 (cast-from-var1281-to-var604 var3833) var3790 var1800)\r\n        \" explicit\"))\r\n  (define-fun var3145 () String\r\n    (str.++ (dump/1891027141 (cast-from-var1281-to-var604 var3833) var3790 var1800)\r\n        \" explicit\"\r\n        var1281-eol))\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var3211 () Bool\r\n    (isExplicit/-518377291 var3833))\r\n  (define-fun null-var1281 () var1281\r\n    var1281!val!1)\r\n  (define-fun var3350 () Int\r\n    (+ var3790 1))\r\n  (define-fun var3625 () var604\r\n    (la_expansion/-518377291 var3833!1))\r\n  (define-fun var609!1 () String\r\n    \"\")\r\n  (define-fun var1281-eol () String\r\n    \"\")\r\n  (define-fun var3145!1 () String\r\n    \"\")\r\n  (define-fun var1800!1 () var735\r\n    var735!val!0)\r\n  (define-fun var3833!1 () var1281\r\n    var1281!val!1)\r\n  (define-fun dump/1891027141 ((x!0 var604) (x!1 Int) (x!2 var735)) String\r\n    \"\")\r\n  (define-fun isExplicit/-518377291 ((x!0 var1281)) Bool\r\n    true)\r\n  (define-fun cast-from-var1281-to-var604 ((x!0 var1281)) var604\r\n    var604!val!0)\r\n  (define-fun var735_contains/1636690605 ((x!0 var735) (x!1 var3608)) Bool\r\n    false)\r\n  (define-fun cast-from-var1281-to-var3608 ((x!0 var1281)) var3608\r\n    var3608!val!0)\r\n  (define-fun var735_add/-1142548109 ((x!0 var735) (x!1 var3608)) Bool\r\n    false)\r\n  (define-fun la_expansion/-518377291 ((x!0 var1281)) var604\r\n    var604!val!0)\r\n  (define-fun append/1671819796 ((x!0 String) (x!1 String)) String\r\n    \"\")\r\n)\r\n(error \"line 66 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11878400,
            "run_time": 0.031090259552001953,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1281 is 2\r\n; rep: (as @var1281_0 var1281)\r\n; rep: (as @var1281_1 var1281)\r\n; cardinality of var735 is 2\r\n; rep: (as @var735_0 var735)\r\n; rep: (as @var735_1 var735)\r\n; cardinality of var604 is 1\r\n; rep: (as @var604_0 var604)\r\n; cardinality of var3608 is 1\r\n; rep: (as @var3608_0 var3608)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun dump/1891027141 ((_arg_1 var604) (_arg_2 Int) (_arg_3 var735)) String \"\")\r\n(define-fun cast-from-var1281-to-var604 ((_arg_1 var1281)) var604 (as @var604_0 var604))\r\n(define-fun isExplicit/-518377291 ((_arg_1 var1281)) Bool true)\r\n(define-fun var735_contains/1636690605 ((_arg_1 var735) (_arg_2 var3608)) Bool false)\r\n(define-fun cast-from-var1281-to-var3608 ((_arg_1 var1281)) var3608 (as @var3608_0 var3608))\r\n(define-fun var735_add/-1142548109 ((BOUND_VARIABLE_1183 var735) (BOUND_VARIABLE_1184 var3608)) Bool false)\r\n(define-fun la_expansion/-518377291 ((BOUND_VARIABLE_1187 var1281)) var604 (as @var604_0 var604))\r\n(define-fun append/1671819796 ((BOUND_VARIABLE_1190 String) (BOUND_VARIABLE_1191 String)) String \"\")\r\n(define-fun null-var1281 () var1281 (as @var1281_0 var1281))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var735 () var735 (as @var735_0 var735))\r\n(define-fun var1281-eol () String \"\")\r\n(define-fun var3833 () var1281 (as @var1281_1 var1281))\r\n(define-fun var3790 () Int 0)\r\n(define-fun var1800 () var735 (as @var735_1 var735))\r\n(define-fun var3282!1 () String \"\")\r\n(define-fun var1800!1 () var735 (as @var735_0 var735))\r\n(define-fun var3833!1 () var1281 (as @var1281_0 var1281))\r\n(define-fun var3862!1 () String \" explicit\")\r\n(define-fun var3145!1 () String \"\")\r\n(define-fun var609!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35753984,
            "run_time": 0.07758259773254395,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 65 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 66 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166125568,
            "run_time": 0.9138021469116211,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1281/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.Lookahead__dump__1451853154\\900.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3862!1 =\r\n     concat(all_22_2, rhs)\r\n   var3282!1 =\r\n     concat(all_20_0, rhs)\r\n   all_22_2 =\r\n     concat(all_20_0, \" explicit\")\r\n\r\n659ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.Lookahead",
            "i0 := @parameter0: int",
            "r1 := @parameter1: java.util.Set",
            "$r2 = specialinvoke r0.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>(i0, r1)",
            "$z0 = r0.<org.javacc.parser.Lookahead: boolean isExplicit>",
            "if $z0 == 0 goto $r8 = \" implicit\"",
            "$r8 = \" explicit\"",
            "goto [?= $r7 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8)]",
            "$r7 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8)",
            "$z1 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r0)",
            "if $z1 == 0 goto interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)",
            "interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)",
            "$r3 = <org.javacc.parser.Lookahead: java.lang.String eol>",
            "$r6 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3)",
            "$r4 = r0.<org.javacc.parser.Lookahead: org.javacc.parser.Expansion la_expansion>",
            "$i1 = i0 + 1",
            "$r5 = virtualinvoke $r4.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>($i1, r1)",
            "virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>($r5)",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjdoc.HTMLGenerator__nonTerminalStart__-198358532\\409.smt2",
        "z3": {
            "memory": 32034816,
            "run_time": 0.0419313907623291,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3850:\r\n  ;;   var3850!val!0 var3850!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3850!val!0 () var3850)\r\n  (declare-fun var3850!val!1 () var3850)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3850)) (or (= x var3850!val!0) (= x var3850!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3361:\r\n  ;;   var3361!val!0 var3361!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3361!val!0 () var3361)\r\n  (declare-fun var3361!val!1 () var3361)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3361)) (or (= x var3361!val!0) (= x var3361!val!1)))\r\n  ;; -----------\r\n  (define-fun var3119 () var3850\r\n    var3850!val!0)\r\n  (define-fun var758 () String\r\n    String-init)\r\n  (define-fun var518 () String\r\n    (get_id/-836140651 var3119 (getName/411565905 var538)))\r\n  (define-fun var232 () String\r\n    (getName/411565905 var538))\r\n  (define-fun var2319 () String\r\n    (str.++ var758!1\r\n        \"<A HREF=\"\"#\"\r\n        (get_id/-836140651 var3119 (getName/411565905 var538))))\r\n  (define-fun null-var3361 () var3361\r\n    var3361!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var538 () var3361\r\n    var3361!val!0)\r\n  (define-fun var1712 () String\r\n    (str.++ var758!1\r\n        \"<A HREF=\"\"#\"\r\n        (get_id/-836140651 var3119 (getName/411565905 var538))\r\n        \"\"\">\"))\r\n  (define-fun null-var3850 () var3850\r\n    var3850!val!1)\r\n  (define-fun var2263 () String\r\n    (str.++ var758!1\r\n        \"<A HREF=\"\"#\"\r\n        (get_id/-836140651 var3119 (getName/411565905 var538))\r\n        \"\"\">\"))\r\n  (define-fun var164 () String\r\n    (str.++ var758!1 \"<A HREF=\"\"#\"))\r\n  (define-fun var2319!1 () String\r\n    \"<A HREF=\"\"#\"\">\")\r\n  (define-fun var164!1 () String\r\n    \"<A HREF=\"\"#\")\r\n  (define-fun var758!2 () String\r\n    \"<A HREF=\"\"#\")\r\n  (define-fun var758!1 () String\r\n    \"\")\r\n  (define-fun var1712!1 () String\r\n    \"\")\r\n  (define-fun var3119!1 () var3850\r\n    var3850!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getName/411565905 ((x!0 var3361)) String\r\n    \"\")\r\n  (define-fun get_id/-836140651 ((x!0 var3850) (x!1 String)) String\r\n    \"\")\r\n  (define-fun print/-855496625 ((x!0 var3850) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 53 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9449472,
            "run_time": 0.01611042022705078,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3850 is 2\r\n; rep: (as @var3850_0 var3850)\r\n; rep: (as @var3850_1 var3850)\r\n; cardinality of var3361 is 2\r\n; rep: (as @var3361_0 var3361)\r\n; rep: (as @var3361_1 var3361)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getName/411565905 ((BOUND_VARIABLE_550 var3361)) String \"\")\r\n(define-fun get_id/-836140651 ((BOUND_VARIABLE_553 var3850) (BOUND_VARIABLE_554 String)) String \"\")\r\n(define-fun print/-855496625 ((BOUND_VARIABLE_557 var3850) (BOUND_VARIABLE_558 String)) void (as @void_0 void))\r\n(define-fun null-var3850 () var3850 (as @var3850_0 var3850))\r\n(define-fun null-var3361 () var3361 (as @var3361_0 var3361))\r\n(define-fun var3119 () var3850 (as @var3850_1 var3850))\r\n(define-fun var538 () var3361 (as @var3361_1 var3361))\r\n(define-fun var758!1 () String \"\")\r\n(define-fun var758!2 () String \"<A HREF=\"\"#\")\r\n(define-fun var164!1 () String \"<A HREF=\"\"#\")\r\n(define-fun var2319!1 () String \"<A HREF=\"\"#\"\">\")\r\n(define-fun var3119!1 () var3850 (as @var3850_0 var3850))\r\n(define-fun var1712!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35848192,
            "run_time": 0.07707786560058594,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3850:\n  ;;   var3850!val!0 var3850!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3850!val!0 () var3850)\n  (declare-fun var3850!val!1 () var3850)\n  ;; cardinality constraint:\n  (forall ((x var3850)) (or (= x var3850!val!0) (= x var3850!val!1)))\n  ;; -----------\n  ;; universe for var3361:\n  ;;   var3361!val!0 var3361!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3361!val!0 () var3361)\n  (declare-fun var3361!val!1 () var3361)\n  ;; cardinality constraint:\n  (forall ((x var3361)) (or (= x var3361!val!0) (= x var3361!val!1)))\n  ;; -----------\n  (define-fun var3119 () var3850\n    var3850!val!0)\n  (define-fun var232 () String\n    (getName/411565905 var538))\n  (define-fun var2319 () String\n    (str.++ var758!1\n        \"<A HREF=\"\"#\"\n        (get_id/-836140651 var3119 (getName/411565905 var538))))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1712 () String\n    (str.++ var758!1\n        \"<A HREF=\"\"#\"\n        (get_id/-836140651 var3119 (getName/411565905 var538))\n        \"\"\">\"))\n  (define-fun null-var3361 () var3361\n    var3361!val!1)\n  (define-fun var538 () var3361\n    var3361!val!0)\n  (define-fun var2263 () String\n    (str.++ var758!1\n        \"<A HREF=\"\"#\"\n        (get_id/-836140651 var3119 (getName/411565905 var538))\n        \"\"\">\"))\n  (define-fun null-var3850 () var3850\n    var3850!val!1)\n  (define-fun var164 () String\n    (str.++ var758!1 \"<A HREF=\"\"#\"))\n  (define-fun var518 () String\n    (get_id/-836140651 var3119 (getName/411565905 var538)))\n  (define-fun var758 () String\n    String-init)\n  (define-fun var2319!1 () String\n    \"<A HREF=\"\"#\"\">\")\n  (define-fun var164!1 () String\n    \"<A HREF=\"\"#\")\n  (define-fun var758!2 () String\n    \"<A HREF=\"\"#\")\n  (define-fun var758!1 () String\n    \"\")\n  (define-fun var1712!1 () String\n    \"\")\n  (define-fun var3119!1 () var3850\n    var3850!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun getName/411565905 ((x!0 var3361)) String\n    \"\")\n  (define-fun get_id/-836140651 ((x!0 var3850) (x!1 String)) String\n    \"\")\n  (define-fun print/-855496625 ((x!0 var3850) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 53 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165834752,
            "run_time": 0.9140901565551758,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3850/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjdoc.HTMLGenerator__nonTerminalStart__-198358532\\409.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2319!1 =\r\n     concat(all_20_4, \"\\u{0}22>\")\r\n   var164!1 =\r\n     concat(\"<A HREF=\\u{0}22#\", all_17_3)\r\n   all_20_4 =\r\n     concat(\"<A HREF=\\u{0}22#\", all_17_3)\r\n\r\n653ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.jjdoc.HTMLGenerator",
            "r2 := @parameter0: org.javacc.parser.NonTerminal",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"<A HREF=\\\"#\")",
            "$r3 = virtualinvoke r2.<org.javacc.parser.NonTerminal: java.lang.String getName()>()",
            "$r4 = virtualinvoke r0.<org.javacc.jjdoc.HTMLGenerator: java.lang.String get_id(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\">\")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjdoc.HTMLGenerator: void print(java.lang.String)>($r8)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Lookahead__dump__1451853154\\912.smt2",
        "z3": {
            "memory": 31834112,
            "run_time": 0.0429995059967041,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var6:\r\n  ;;   var6!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var6!val!0 () var6)\r\n  ;; cardinality constraint:\r\n  (forall ((x var6)) (= x var6!val!0))\r\n  ;; -----------\r\n  ;; universe for var3952:\r\n  ;;   var3952!val!0 var3952!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3952!val!0 () var3952)\r\n  (declare-fun var3952!val!1 () var3952)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3952)) (or (= x var3952!val!0) (= x var3952!val!1)))\r\n  ;; -----------\r\n  ;; universe for var915:\r\n  ;;   var915!val!1 var915!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var915!val!1 () var915)\r\n  (declare-fun var915!val!0 () var915)\r\n  ;; cardinality constraint:\r\n  (forall ((x var915)) (or (= x var915!val!1) (= x var915!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1746:\r\n  ;;   var1746!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1746!val!0 () var1746)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1746)) (= x var1746!val!0))\r\n  ;; -----------\r\n  (define-fun var3225 () var915\r\n    var915!val!0)\r\n  (define-fun var237 () Int\r\n    2)\r\n  (define-fun var3703 () String\r\n    (dump/1891027141 (cast-from-var915-to-var1746 var3225) var237 var2213))\r\n  (define-fun null-var3952 () var3952\r\n    var3952!val!1)\r\n  (define-fun null-var915 () var915\r\n    var915!val!1)\r\n  (define-fun var1032 () Bool\r\n    (var3952_contains/1636690605 var2213 (cast-from-var915-to-var6 var3225)))\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var549 () String\r\n    \" implicit\")\r\n  (define-fun var2524 () Bool\r\n    (isExplicit/-518377291 var3225))\r\n  (define-fun var3184 () String\r\n    (str.++ (dump/1891027141 (cast-from-var915-to-var1746 var3225) var237 var2213)\r\n        \" implicit\"))\r\n  (define-fun var3703!1 () String\r\n    \"\")\r\n  (define-fun var2213 () var3952\r\n    var3952!val!0)\r\n  (define-fun cast-from-var915-to-var1746 ((x!0 var915)) var1746\r\n    var1746!val!0)\r\n  (define-fun isExplicit/-518377291 ((x!0 var915)) Bool\r\n    false)\r\n  (define-fun dump/1891027141 ((x!0 var1746) (x!1 Int) (x!2 var3952)) String\r\n    \"\")\r\n  (define-fun var3952_contains/1636690605 ((x!0 var3952) (x!1 var6)) Bool\r\n    true)\r\n  (define-fun cast-from-var915-to-var6 ((x!0 var915)) var6\r\n    var6!val!0)\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10051584,
            "run_time": 0.047353506088256836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var915 is 2\r\n; rep: (as @var915_0 var915)\r\n; rep: (as @var915_1 var915)\r\n; cardinality of var3952 is 2\r\n; rep: (as @var3952_0 var3952)\r\n; rep: (as @var3952_1 var3952)\r\n; cardinality of var1746 is 1\r\n; rep: (as @var1746_0 var1746)\r\n; cardinality of var6 is 1\r\n; rep: (as @var6_0 var6)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun dump/1891027141 ((_arg_1 var1746) (_arg_2 Int) (_arg_3 var3952)) String \"\")\r\n(define-fun cast-from-var915-to-var1746 ((_arg_1 var915)) var1746 (as @var1746_0 var1746))\r\n(define-fun isExplicit/-518377291 ((_arg_1 var915)) Bool false)\r\n(define-fun var3952_contains/1636690605 ((_arg_1 var3952) (_arg_2 var6)) Bool true)\r\n(define-fun cast-from-var915-to-var6 ((_arg_1 var915)) var6 (as @var6_0 var6))\r\n(define-fun null-var915 () var915 (as @var915_0 var915))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var3952 () var3952 (as @var3952_0 var3952))\r\n(define-fun var3225 () var915 (as @var915_1 var915))\r\n(define-fun var237 () Int 0)\r\n(define-fun var2213 () var3952 (as @var3952_1 var3952))\r\n(define-fun var3703!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35827712,
            "run_time": 0.07886552810668945,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 42 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167469056,
            "run_time": 0.9286549091339111,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.Lookahead__dump__1451853154\\912.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3703!1 =\r\n     concat(all_22_0, rhs)\r\n   ... sat\r\n\r\n688ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.Lookahead",
            "i0 := @parameter0: int",
            "r1 := @parameter1: java.util.Set",
            "$r2 = specialinvoke r0.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>(i0, r1)",
            "$z0 = r0.<org.javacc.parser.Lookahead: boolean isExplicit>",
            "if $z0 == 0 goto $r8 = \" implicit\"",
            "$r8 = \" implicit\"",
            "$r7 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8)",
            "$z1 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r0)",
            "if $z1 == 0 goto interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JavaCodeGenerator__insertOpenNodeCode__-1910072544\\589.smt2",
        "z3": {
            "memory": 31989760,
            "run_time": 60.01091027259827,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14622720,
            "run_time": 0.02967381477355957,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var545 is 2\r\n; rep: (as @var545_0 var545)\r\n; rep: (as @var545_1 var545)\r\n; cardinality of var757 is 2\r\n; rep: (as @var757_0 var757)\r\n; rep: (as @var757_1 var757)\r\n; cardinality of var56 is 2\r\n; rep: (as @var56_0 var56)\r\n; rep: (as @var56_1 var56)\r\n; cardinality of var2378 is 1\r\n; rep: (as @var2378_0 var2378)\r\n; cardinality of var2992 is 1\r\n; rep: (as @var2992_0 var2992)\r\n; cardinality of var3961 is 1\r\n; rep: (as @var3961_0 var3961)\r\n; cardinality of var3065 is 1\r\n; rep: (as @var3065_0 var3065)\r\n; cardinality of var1035 is 1\r\n; rep: (as @var1035_0 var1035)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun node_descriptor/-576648796 ((BOUND_VARIABLE_1440 var757)) var2992 (as @var2992_0 var2992))\r\n(define-fun getNodeType/-707025417 ((BOUND_VARIABLE_1443 var2992)) String \"\")\r\n(define-fun var3961_getNodeClass/-1384960322 () String \"\")\r\n(define-fun var3065_ensure/-405642493 ((BOUND_VARIABLE_1446 var56) (BOUND_VARIABLE_1447 String)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun nodeVar/-576648796 ((BOUND_VARIABLE_1450 var757)) String \"\")\r\n(define-fun print/-1652180213 ((BOUND_VARIABLE_1453 var56) (BOUND_VARIABLE_1454 String)) void (as @void_0 void))\r\n(define-fun var1035_getStatic/-616544340 () Bool true)\r\n(define-fun var3961_getNodeUsesParser/1997544654 () Bool true)\r\n(define-fun var3961_getNodeFactory/-1655041108 () String \"*\")\r\n(define-fun getNodeId/-1379187338 ((BOUND_VARIABLE_1457 var2992)) String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_1460 var56) (BOUND_VARIABLE_1461 String)) void (as @void_0 void))\r\n(define-fun usesCloseNodeVar/-1769174946 ((_arg_1 var757)) Bool false)\r\n(define-fun openNode/114769770 ((BOUND_VARIABLE_1464 var2992) (BOUND_VARIABLE_1465 String)) String \"\")\r\n(define-fun var3961_getNodeScopeHook/893147786 () Bool false)\r\n(define-fun var3961_getTrackTokens/1877101562 () Bool false)\r\n(define-fun null-var545 () var545 (as @var545_0 var545))\r\n(define-fun null-var757 () var757 (as @var757_0 var757))\r\n(define-fun null-var56 () var56 (as @var56_0 var56))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3848 () var545 (as @var545_1 var545))\r\n(define-fun var3914 () var757 (as @var757_1 var757))\r\n(define-fun var3687 () var56 (as @var56_1 var56))\r\n(define-fun var3896 () String \"\")\r\n(define-fun var3687!1 () var56 (as @var56_0 var56))\r\n(define-fun var1117!1 () String \"\")\r\n(define-fun var3900!1 () String \"\")\r\n(define-fun var3900!2 () String \"\")\r\n(define-fun var2944!1 () String \"\")\r\n(define-fun var768!1 () String \" \")\r\n(define-fun var1822!1 () String \" \")\r\n(define-fun var991!1 () String \"  = \")\r\n(define-fun var3687!2 () var56 (as @var56_0 var56))\r\n(define-fun var3449!1 () String \"\")\r\n(define-fun var2512!1 () String \"\")\r\n(define-fun var2512!2 () String \"null\")\r\n(define-fun var2782!1 () String \"null, \")\r\n(define-fun var1781!1 () String \"\")\r\n(define-fun var1781!2 () String \"(\")\r\n(define-fun var1102!1 () String \"(\")\r\n(define-fun var2423!1 () String \"()\")\r\n(define-fun var1176!1 () String \"()\")\r\n(define-fun var708!1 () String \"().jjtCreate(\")\r\n(define-fun var3598!1 () String \"().jjtCreate(null, \")\r\n(define-fun var3307!1 () String \"().jjtCreate(null, \")\r\n(define-fun var1599!1 () String \"().jjtCreate(null, );\")\r\n(define-fun var3687!3 () var56 (as @var56_0 var56))\r\n(define-fun var1303!1 () String \"\")\r\n(define-fun var3820!1 () String \"\")\r\n(define-fun var3820!2 () String \"\")\r\n(define-fun var141!1 () String \"\")\r\n(define-fun var3687!4 () var56 (as @var56_0 var56))\r\n(define-fun var1078!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37306368,
            "run_time": 60.011053800582886,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 355037184,
            "run_time": 1.4243288040161133,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var757/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JavaCodeGenerator__insertOpenNodeCode__-1910072544\\589.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3598!1 =\r\n     concat(all_76_10, \"null, \")\r\n   var991!1 =\r\n     concat(all_73_6, \" = \")\r\n   var708!1 =\r\n     concat(all_70_5, \".jjtCreate(\")\r\n   var1822!1 =\r\n     concat(all_67_6, all_52_4)\r\n   var1176!1 =\r\n     concat(all_64_4, all_46_3)\r\n   var2423!1 =\r\n     concat(all_61_4, \")\")\r\n   var768!1 =\r\n     concat(all_58_4, \" \")\r\n   var1599!1 =\r\n     concat(all_55_3, \");\")\r\n   var3307!1 =\r\n     concat(all_40_4, all_40_2)\r\n   var141!1 =\r\n     concat(var3896, all_52_3)\r\n   var2944!1 =\r\n     concat(var3896, all_46_3)\r\n   var1102!1 =\r\n     concat(\"(\", all_46_3)\r\n   all_76_10 =\r\n     concat(all_76_11, \".jjtCreate(\")\r\n   all_73_6 =\r\n     concat(all_73_8, all_52_4)\r\n   all_70_5 =\r\n     concat(all_70_6, all_46_3)\r\n   all_67_6 =\r\n     concat(all_67_7, \" \")\r\n   all_64_4 =\r\n     concat(all_64_5, \")\")\r\n   all_55_3 =\r\n     concat(all_40_4, all_40_2)\r\n   all_58_4 =\r\n     concat(var3896, all_46_3)\r\n   all_61_4 =\r\n     concat(\"(\", all_46_3)\r\n   all_40_4 =\r\n     concat(all_79_11, \"null, \")\r\n   all_76_11 =\r\n     concat(all_76_12, all_46_3)\r\n   all_73_8 =\r\n     concat(all_73_9, \" \")\r\n   all_70_6 =\r\n     concat(all_70_7, \")\")\r\n   all_67_7 =\r\n     concat(var3896, all_46_3)\r\n   all_64_5 =\r\n     concat(\"(\", all_46_3)\r\n   all_79_11 =\r\n     concat(all_79_12, \".jjtCreate(\")\r\n   all_76_12 =\r\n     concat(all_76_13, \")\")\r\n   all_73_9 =\r\n     concat(var3896, all_46_3)\r\n   all_70_7 =\r\n     concat(\"(\", all_46_3)\r\n   all_79_12 =\r\n     concat(all_79_13, all_46_3)\r\n   all_76_13 =\r\n     concat(\"(\", all_46_3)\r\n   all_79_13 =\r\n     concat(all_79_14, \")\")\r\n   all_79_14 =\r\n     concat(\"(\", all_46_3)\r\n\r\n1135ms\r\n"
        },
        "undefined_function_count": 16,
        "assertion_count": 70,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 17,
            "<java.lang.StringBuilder: java.lang.String toString()>": 4,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r73 := @this: org.javacc.jjtree.JavaCodeGenerator",
            "r0 := @parameter0: org.javacc.jjtree.NodeScope",
            "r4 := @parameter1: org.javacc.jjtree.IO",
            "r5 := @parameter2: java.lang.String",
            "$r1 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "r2 = virtualinvoke $r1.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String getNodeType()>()",
            "$r3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeClass()>()",
            "$i0 = virtualinvoke $r3.<java.lang.String: int length()>()",
            "if $i0 <= 0 goto r74 = r2",
            "r74 = r2",
            "staticinvoke <org.javacc.jjtree.NodeFiles: void ensure(org.javacc.jjtree.IO,java.lang.String)>(r4, r2)",
            "$r75 = new java.lang.StringBuilder",
            "specialinvoke $r75.<java.lang.StringBuilder: void <init>()>()",
            "$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74)",
            "$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")",
            "$r79 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "$r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79)",
            "$r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \")",
            "$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void print(java.lang.String)>($r82)",
            "$z5 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getStatic()>()",
            "if $z5 == 0 goto $r83 = \"this\"",
            "$r83 = \"null\"",
            "goto [?= $z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeUsesParser()>()]",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeUsesParser()>()",
            "if $z0 == 0 goto $r84 = \"\"",
            "$r70 = new java.lang.StringBuilder",
            "specialinvoke $r70.<java.lang.StringBuilder: void <init>()>()",
            "$r71 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r83)",
            "$r72 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")",
            "$r84 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.String toString()>()",
            "goto [?= $r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()]",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()",
            "$z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"*\")",
            "if $z1 == 0 goto $r7 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()",
            "$r58 = new java.lang.StringBuilder",
            "specialinvoke $r58.<java.lang.StringBuilder: void <init>()>()",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74)",
            "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74)",
            "$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".jjtCreate(\")",
            "$r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84)",
            "$r64 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r65 = virtualinvoke $r64.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String getNodeId()>()",
            "$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65)",
            "$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\");\")",
            "$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r69)",
            "goto [?= $z6 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()]",
            "$z6 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()",
            "if $z6 == 0 goto $r18 = new java.lang.StringBuilder",
            "$r18 = new java.lang.StringBuilder",
            "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()",
            "$r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r20 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r19 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "$r21 = virtualinvoke $r20.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String openNode(java.lang.String)>($r19)",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r24)",
            "$z2 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeScopeHook()>()",
            "if $z2 == 0 goto $z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "$z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "if $z3 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Main__mainProgram__-1404409326\\1029.smt2",
        "z3": {
            "memory": 32518144,
            "run_time": 0.05482292175292969,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(error \"line 37 column 10: model is not available\")\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 39047168,
            "run_time": 1.4718992710113525,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3276 is 1\r\n; rep: (as @var3276_0 var3276)\r\n; cardinality of var1679 is 1\r\n; rep: (as @var1679_0 var1679)\r\n; cardinality of var1869 is 1\r\n; rep: (as @var1869_0 var1869)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getLength-Arr-String-1 ((_arg_1 (Array Int String))) Int 1)\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_36049 var3276) (BOUND_VARIABLE_36050 String)) void (as @void_0 void))\r\n(define-fun null-__Array__Int__String__ () (Array Int String) (store ((as const (Array Int String)) \"A\") (- 1) \"a\"))\r\n(define-fun var1679-out () var3276 (as @var3276_0 var3276))\r\n(define-fun var1869-versionNumber () String \"\")\r\n(define-fun var1375 () (Array Int String) (store ((as const (Array Int String)) \"\") 0 \"-VERSION\"))\r\n(define-fun var3846!1 () var3276 (as @var3276_0 var3276))\r\n(define-fun var3257!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37183488,
            "run_time": 0.07867693901062012,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 37 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 203542528,
            "run_time": 1.2716236114501953,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1375 () (Array Int String) (store ((as const (Array Int String)) \"\\u{0}\") 0 \"-VERSION\"))\r\n  (define-fun null-__Array__Int__String__ () (Array Int String) ((as const (Array Int String)) \"\"))\r\n  (define-fun equalsIgnoreCase/-92311102 ((x!0 String) (x!1 String)) Bool (ite (and (= x!0 \"-VERSION\") (= x!1 \"-version\")) true true))\r\n  (define-fun getLength-Arr-String-1 ((x!0 (Array Int String))) Int (ite (= x!0 (store ((as const (Array Int String)) \"\\u{0}\") 0 \"-VERSION\")) 1 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String[]",
            "$i0 = lengthof r0",
            "if $i0 != 1 goto staticinvoke <org.javacc.parser.Main: void reInitAll()>()",
            "$i30 = lengthof r0",
            "$i31 = $i30 - 1",
            "$r78 = r0[$i31]",
            "$z12 = virtualinvoke $r78.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"-version\")",
            "if $z12 == 0 goto staticinvoke <org.javacc.parser.Main: void reInitAll()>()",
            "$r80 = <java.lang.System: java.io.PrintStream out>",
            "$r79 = <org.javacc.Version: java.lang.String versionNumber>",
            "virtualinvoke $r80.<java.io.PrintStream: void println(java.lang.String)>($r79)",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Lookahead__dump__1451853154\\922.smt2",
        "z3": {
            "memory": 32198656,
            "run_time": 0.04363131523132324,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1787:\r\n  ;;   var1787!val!0 var1787!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1787!val!0 () var1787)\r\n  (declare-fun var1787!val!1 () var1787)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1787)) (or (= x var1787!val!0) (= x var1787!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2054:\r\n  ;;   var2054!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2054!val!0 () var2054)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2054)) (= x var2054!val!0))\r\n  ;; -----------\r\n  ;; universe for var1485:\r\n  ;;   var1485!val!1 var1485!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1485!val!1 () var1485)\r\n  (declare-fun var1485!val!0 () var1485)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1485)) (or (= x var1485!val!1) (= x var1485!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3064:\r\n  ;;   var3064!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3064!val!0 () var3064)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3064)) (= x var3064!val!0))\r\n  ;; -----------\r\n  (define-fun var645 () String\r\n    \" implicit\")\r\n  (define-fun var822 () var3064\r\n    (la_expansion/-518377291 var892!1))\r\n  (define-fun var276!1 () String\r\n    \"\")\r\n  (define-fun null-var1485 () var1485\r\n    var1485!val!1)\r\n  (define-fun var3443 () String\r\n    (dump/1891027141 (la_expansion/-518377291 var892!1) (+ var2206 1) var707!1))\r\n  (define-fun var3859 () Int\r\n    (+ var2206 1))\r\n  (define-fun var2206 () Int\r\n    2)\r\n  (define-fun var707 () var1485\r\n    var1485!val!0)\r\n  (define-fun var2259 () Bool\r\n    (var1485_contains/1636690605 var707 (cast-from-var1787-to-var2054 var892)))\r\n  (define-fun var2451 () String\r\n    var1787-eol)\r\n  (define-fun var1935 () String\r\n    (str.++ (dump/1891027141 (cast-from-var1787-to-var3064 var892) var2206 var707)\r\n        \" implicit\"\r\n        var1787-eol))\r\n  (define-fun var892 () var1787\r\n    var1787!val!0)\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun null-var1787 () var1787\r\n    var1787!val!1)\r\n  (define-fun var3107!1 () String\r\n    \" implicit\")\r\n  (define-fun var3107 () String\r\n    (str.++ (dump/1891027141 (cast-from-var1787-to-var3064 var892) var2206 var707)\r\n        \" implicit\"))\r\n  (define-fun var3552 () Bool\r\n    (isExplicit/-518377291 var892))\r\n  (define-fun var276 () String\r\n    (dump/1891027141 (cast-from-var1787-to-var3064 var892) var2206 var707))\r\n  (define-fun var892!1 () var1787\r\n    var1787!val!0)\r\n  (define-fun var707!1 () var1485\r\n    var1485!val!1)\r\n  (define-fun var1787-eol () String\r\n    \"\")\r\n  (define-fun var3443!1 () String\r\n    \"\")\r\n  (define-fun var1935!1 () String\r\n    \"\")\r\n  (define-fun cast-from-var1787-to-var3064 ((x!0 var1787)) var3064\r\n    var3064!val!0)\r\n  (define-fun cast-from-var1787-to-var2054 ((x!0 var1787)) var2054\r\n    var2054!val!0)\r\n  (define-fun isExplicit/-518377291 ((x!0 var1787)) Bool\r\n    false)\r\n  (define-fun var1485_contains/1636690605 ((x!0 var1485) (x!1 var2054)) Bool\r\n    false)\r\n  (define-fun dump/1891027141 ((x!0 var3064) (x!1 Int) (x!2 var1485)) String\r\n    \"\")\r\n  (define-fun la_expansion/-518377291 ((x!0 var1787)) var3064\r\n    var3064!val!0)\r\n  (define-fun append/1671819796 ((x!0 String) (x!1 String)) String\r\n    \"\")\r\n  (define-fun var1485_add/-1142548109 ((x!0 var1485) (x!1 var2054)) Bool\r\n    false)\r\n)\r\n(error \"line 65 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.046782732009887695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1787 is 2\r\n; rep: (as @var1787_0 var1787)\r\n; rep: (as @var1787_1 var1787)\r\n; cardinality of var1485 is 2\r\n; rep: (as @var1485_0 var1485)\r\n; rep: (as @var1485_1 var1485)\r\n; cardinality of var3064 is 1\r\n; rep: (as @var3064_0 var3064)\r\n; cardinality of var2054 is 1\r\n; rep: (as @var2054_0 var2054)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun dump/1891027141 ((_arg_1 var3064) (_arg_2 Int) (_arg_3 var1485)) String \"\")\r\n(define-fun cast-from-var1787-to-var3064 ((_arg_1 var1787)) var3064 (as @var3064_0 var3064))\r\n(define-fun isExplicit/-518377291 ((_arg_1 var1787)) Bool false)\r\n(define-fun var1485_contains/1636690605 ((_arg_1 var1485) (_arg_2 var2054)) Bool false)\r\n(define-fun cast-from-var1787-to-var2054 ((_arg_1 var1787)) var2054 (as @var2054_0 var2054))\r\n(define-fun var1485_add/-1142548109 ((BOUND_VARIABLE_1169 var1485) (BOUND_VARIABLE_1170 var2054)) Bool false)\r\n(define-fun la_expansion/-518377291 ((BOUND_VARIABLE_1173 var1787)) var3064 (as @var3064_0 var3064))\r\n(define-fun append/1671819796 ((BOUND_VARIABLE_1176 String) (BOUND_VARIABLE_1177 String)) String \"\")\r\n(define-fun null-var1787 () var1787 (as @var1787_0 var1787))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var1485 () var1485 (as @var1485_0 var1485))\r\n(define-fun var1787-eol () String \"\")\r\n(define-fun var892 () var1787 (as @var1787_1 var1787))\r\n(define-fun var2206 () Int 0)\r\n(define-fun var707 () var1485 (as @var1485_1 var1485))\r\n(define-fun var276!1 () String \"\")\r\n(define-fun var707!1 () var1485 (as @var1485_0 var1485))\r\n(define-fun var892!1 () var1787 (as @var1787_0 var1787))\r\n(define-fun var3107!1 () String \" implicit\")\r\n(define-fun var1935!1 () String \"\")\r\n(define-fun var3443!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35848192,
            "run_time": 0.07633447647094727,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 64 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 65 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167436288,
            "run_time": 0.8831114768981934,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1787/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.Lookahead__dump__1451853154\\922.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3107!1 =\r\n     concat(all_24_2, rhs)\r\n   var276!1 =\r\n     concat(all_22_0, rhs)\r\n   all_24_2 =\r\n     concat(all_22_0, \" implicit\")\r\n\r\n643ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.Lookahead",
            "i0 := @parameter0: int",
            "r1 := @parameter1: java.util.Set",
            "$r2 = specialinvoke r0.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>(i0, r1)",
            "$z0 = r0.<org.javacc.parser.Lookahead: boolean isExplicit>",
            "if $z0 == 0 goto $r8 = \" implicit\"",
            "$r8 = \" implicit\"",
            "$r7 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8)",
            "$z1 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r0)",
            "if $z1 == 0 goto interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)",
            "interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)",
            "$r3 = <org.javacc.parser.Lookahead: java.lang.String eol>",
            "$r6 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3)",
            "$r4 = r0.<org.javacc.parser.Lookahead: org.javacc.parser.Expansion la_expansion>",
            "$i1 = i0 + 1",
            "$r5 = virtualinvoke $r4.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>($i1, r1)",
            "virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>($r5)",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Main__mainProgram__-1404409326\\1052.smt2",
        "z3": {
            "memory": 10321920,
            "run_time": 0.045207977294921875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1678 () (Array Int String)\r\n    ((as const (Array Int String)) \"!0!\"))\r\n  (define-fun null-__Array__Int__String__ () (Array Int String)\r\n    ((as const (Array Int String)) \"!1!\"))\r\n  (define-fun var2835 () var2326\r\n    var582-out)\r\n  (define-fun var427 () Int\r\n    (getLength-Arr-String-1 var1678))\r\n  (define-fun var1462 () Int\r\n    (getLength-Arr-String-1 var1678))\r\n  (define-fun var582-out () var2326\r\n    var2326!val!0)\r\n  (define-fun var3968 () String\r\n    \"\")\r\n  (define-fun var2835!1 () var2326\r\n    var2326!val!0)\r\n  (define-fun var1868!1 () String\r\n    \"\")\r\n  (define-fun var1868 () String\r\n    \"\")\r\n  (define-fun var1543_reInitAll/529526883 () void\r\n    void!val!0)\r\n  (define-fun var1543_help_message/552910000 () void\r\n    void!val!0)\r\n  (define-fun getLength-Arr-String-1 ((x!0 (Array Int String))) Int\r\n    0)\r\n  (define-fun var2227_bannerLine/595128218 ((x!0 String) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun println/1773605060 ((x!0 var2326) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 41 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1691648,
            "run_time": 0.01602935791015625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1543 is 1\r\n; rep: (as @var1543_0 var1543)\r\n; cardinality of var2227 is 1\r\n; rep: (as @var2227_0 var2227)\r\n; cardinality of var2326 is 1\r\n; rep: (as @var2326_0 var2326)\r\n; cardinality of var582 is 1\r\n; rep: (as @var582_0 var582)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getLength-Arr-String-1 ((_arg_1 (Array Int String))) Int 0)\r\n(define-fun var1543_reInitAll/529526883 () void (as @void_0 void))\r\n(define-fun var2227_bannerLine/595128218 ((BOUND_VARIABLE_548 String) (BOUND_VARIABLE_549 String)) void (as @void_0 void))\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_552 var2326) (BOUND_VARIABLE_553 String)) void (as @void_0 void))\r\n(define-fun var1543_help_message/552910000 () void (as @void_0 void))\r\n(define-fun null-__Array__Int__String__ () (Array Int String) ((as const (Array Int String)) \"A\"))\r\n(define-fun var582-out () var2326 (as @var2326_0 var2326))\r\n(define-fun var1678 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var3968 () String \"\")\r\n(define-fun var1868 () String \"\")\r\n(define-fun var2835!1 () var2326 (as @var2326_0 var2326))\r\n(define-fun var1868!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36749312,
            "run_time": 0.07639431953430176,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 40 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 41 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168427520,
            "run_time": 0.7599639892578125,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1678 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n  (define-fun null-__Array__Int__String__ () (Array Int String) (store ((as const (Array Int String)) \"\") 0 \"\\u{0}\"))\r\n  (define-fun getLength-Arr-String-1 ((x!0 (Array Int String))) Int (ite (= x!0 ((as const (Array Int String)) \"\")) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 4,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String[]",
            "$i0 = lengthof r0",
            "if $i0 != 1 goto staticinvoke <org.javacc.parser.Main: void reInitAll()>()",
            "staticinvoke <org.javacc.parser.Main: void reInitAll()>()",
            "staticinvoke <org.javacc.parser.JavaCCGlobals: void bannerLine(java.lang.String,java.lang.String)>(\"Parser Generator\", \"\")",
            "$i1 = lengthof r0",
            "if $i1 != 0 goto $r1 = <java.lang.System: java.io.PrintStream out>",
            "$r77 = <java.lang.System: java.io.PrintStream out>",
            "virtualinvoke $r77.<java.io.PrintStream: void println(java.lang.String)>(\"\")",
            "staticinvoke <org.javacc.parser.Main: void help_message()>()",
            "return 1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.ASTNodeDescriptor__getNodeId__-1379187338\\177.smt2",
        "z3": {
            "memory": 32063488,
            "run_time": 60.00335621833801,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10309632,
            "run_time": 0.03143906593322754,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1782 is 2\r\n; rep: (as @var1782_0 var1782)\r\n; rep: (as @var1782_1 var1782)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun name/-1689018267 ((BOUND_VARIABLE_650 var1782)) String \"\")\r\n(define-fun null-var1782 () var1782 (as @var1782_0 var1782))\r\n(define-fun var3985 () var1782 (as @var1782_1 var1782))\r\n(define-fun var3997!1 () String \"\")\r\n(define-fun var3997!2 () String \"JJT\")\r\n(define-fun var1602!1 () String \"JJT\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36413440,
            "run_time": 60.0030722618103,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166502400,
            "run_time": 0.8844902515411377,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1782/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.ASTNodeDescriptor__getNodeId__-1379187338\\177.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1602!1 =\r\n     concat(\"JJT\", all_16_5)\r\n   all_16_5 =\r\n     replaceall(all_16_6, \"_\")\r\n   all_16_6 =\r\n     replaceall(all_31_0, \"Z\")\r\n   all_31_0 =\r\n     replaceall(all_31_1, \"Y\")\r\n   all_31_1 =\r\n     replaceall(all_31_2, \"X\")\r\n   all_31_2 =\r\n     replaceall(all_31_3, \"W\")\r\n   all_31_3 =\r\n     replaceall(all_31_4, \"V\")\r\n   all_31_4 =\r\n     replaceall(all_31_5, \"U\")\r\n   all_31_5 =\r\n     replaceall(all_31_6, \"T\")\r\n   all_31_6 =\r\n     replaceall(all_31_7, \"S\")\r\n   all_31_7 =\r\n     replaceall(all_31_8, \"R\")\r\n   all_31_8 =\r\n     replaceall(all_31_9, \"Q\")\r\n   all_31_9 =\r\n     replaceall(all_31_10, \"P\")\r\n   all_31_10 =\r\n     replaceall(all_31_11, \"O\")\r\n   all_31_11 =\r\n     replaceall(all_31_12, \"N\")\r\n   all_31_12 =\r\n     replaceall(all_31_13, \"M\")\r\n   all_31_13 =\r\n     replaceall(all_31_14, \"L\")\r\n   all_31_14 =\r\n     replaceall(all_31_15, \"K\")\r\n   all_31_15 =\r\n     replaceall(all_31_16, \"J\")\r\n   all_31_16 =\r\n     replaceall(all_31_17, \"I\")\r\n   all_31_17 =\r\n     replaceall(all_31_18, \"H\")\r\n   all_31_18 =\r\n     replaceall(all_31_19, \"G\")\r\n   all_31_19 =\r\n     replaceall(all_31_20, \"F\")\r\n   all_31_20 =\r\n     replaceall(all_31_21, \"E\")\r\n   all_31_21 =\r\n     replaceall(all_31_22, \"D\")\r\n   all_31_22 =\r\n     replaceall(all_31_23, \"C\")\r\n   all_31_23 =\r\n     replaceall(all_31_24, \"B\")\r\n   all_31_24 =\r\n     replaceall(all_16_7, \"A\")\r\n\r\n636ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: java.lang.String toUpperCase()>",
            "<java.lang.String: java.lang.String replace(char,char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.String: java.lang.String toUpperCase()>": 1,
            "<java.lang.String: java.lang.String replace(char,char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.jjtree.ASTNodeDescriptor",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"JJT\")",
            "$r2 = r1.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String name>",
            "$r3 = virtualinvoke $r2.<java.lang.String: java.lang.String toUpperCase()>()",
            "$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String replace(char,char)>(46, 95)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Main__padRight__-2107578903\\969.smt2",
        "z3": {
            "memory": 30621696,
            "run_time": 0.045594215393066406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var965 () Int\r\n    (str.len var3225))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3225 () String\r\n    \"A\")\r\n  (define-fun var2047 () Int\r\n    1)\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.015223979949951172,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3291 is 1\r\n; rep: (as @var3291_0 var3291)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3225 () String \"\")\r\n(define-fun var2047 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37113856,
            "run_time": 0.07846641540527344,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2047 () Int\n    2)\n  (define-fun var965 () Int\n    (str.len var3225))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3225 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-Int () Int\n    3)\n)\n(error \"line 22 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 149311488,
            "run_time": 0.6995956897735596,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2047 () Int 0)\r\n  (define-fun var3225 () String \"\")\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i1 := @parameter1: int",
            "i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i0 != i1 goto i2 = i1 - i0",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.TokenMgrError__LexicalError__1482275881\\514.smt2",
        "z3": {
            "memory": 33345536,
            "run_time": 60.01106548309326,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14176256,
            "run_time": 0.030890941619873047,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1549 is 1\r\n; rep: (as @var1549_0 var1549)\r\n; cardinality of var2080 is 1\r\n; rep: (as @var2080_0 var2080)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun String_valueOf/-371898945 ((_arg_1 Int)) String \"B\")\r\n(define-fun var2080_addEscapes/1388005947 ((_arg_1 String)) String \"\")\r\n(define-fun null-Bool () Bool true)\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1178 () Bool false)\r\n(define-fun var1864 () Int (- 1))\r\n(define-fun var3567 () Int (- 1))\r\n(define-fun var2985 () Int (- 1))\r\n(define-fun var1306 () String \"\")\r\n(define-fun var3713 () Int (- 1))\r\n(define-fun var894!1 () String \"\")\r\n(define-fun var894!2 () String \"Lexical error at line \")\r\n(define-fun var786!1 () String \"Lexical error at line \")\r\n(define-fun var561!1 () String \"Lexical error at line , column \")\r\n(define-fun var1077!1 () String \"Lexical error at line , column \")\r\n(define-fun var3959!1 () String \"Lexical error at line , column .  Encountered: \")\r\n(define-fun var2181!1 () String \"\")\r\n(define-fun var2181!2 () String \"\"\"\")\r\n(define-fun var1033!1 () String \"\"\"\")\r\n(define-fun var1398!1 () String \"\"\"\"\"\")\r\n(define-fun var2134!1 () String \"\"\"\"\" (\")\r\n(define-fun var1972!1 () String \"\"\"\"\" (\")\r\n(define-fun var939!1 () String \"\"\"\"\" (), \")\r\n(define-fun var2036!1 () String \"Lexical error at line , column .  Encountered: \"\"\"\" (), \")\r\n(define-fun var493!1 () String \"Lexical error at line , column .  Encountered: \"\"\"\" (), after : \"\"\")\r\n(define-fun var3369!1 () String \"Lexical error at line , column .  Encountered: \"\"\"\" (), after : \"\"\")\r\n(define-fun var3992!1 () String \"Lexical error at line , column .  Encountered: \"\"\"\" (), after : \"\"\"\"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35700736,
            "run_time": 0.07738089561462402,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 115 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 116 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 272474112,
            "run_time": 60.00326085090637,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 44,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: java.lang.String valueOf(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 12,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 3,
            "<java.lang.String: java.lang.String valueOf(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "z0 := @parameter0: boolean",
            "i3 := @parameter1: int",
            "i0 := @parameter2: int",
            "i1 := @parameter3: int",
            "r16 := @parameter4: java.lang.String",
            "c2 := @parameter5: char",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r1 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Lexical error at line \")",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", column \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)",
            "$r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".  Encountered: \")",
            "if z0 == 0 goto $r24 = new java.lang.StringBuilder",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r6 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c2)",
            "$r7 = staticinvoke <org.javacc.jjtree.TokenMgrError: java.lang.String addEscapes(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\")",
            "$i4 = (int) c2",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"), \")",
            "$r22 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"after : \\\"\")",
            "$r17 = staticinvoke <org.javacc.jjtree.TokenMgrError: java.lang.String addEscapes(java.lang.String)>(r16)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r21"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Main__unhandledLanguageExit__-1397955646\\1069.smt2",
        "z3": {
            "memory": 32088064,
            "run_time": 0.04364800453186035,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2546 () var3818\r\n    var2174-out)\r\n  (define-fun var1607 () String\r\n    \"A\")\r\n  (define-fun var3940 () String\r\n    (str.++ var1592!1 \"Invalid 'OUTPUT_LANGUAGE' specified : \" var1607))\r\n  (define-fun var3378 () String\r\n    (str.++ var1592!1 \"Invalid 'OUTPUT_LANGUAGE' specified : \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3552 () String\r\n    (str.++ var1592!1 \"Invalid 'OUTPUT_LANGUAGE' specified : \" var1607))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1592 () String\r\n    String-init)\r\n  (define-fun var1592!1 () String\r\n    \"\")\r\n  (define-fun var1592!2 () String\r\n    \"Invalid 'OUTPUT_LANGUAGE' specified : \")\r\n  (define-fun var3378!1 () String\r\n    \"Invalid 'OUTPUT_LANGUAGE' specified : A\")\r\n  (define-fun var2546!1 () var3818\r\n    var3818!val!0)\r\n  (define-fun var3552!1 () String\r\n    \"\")\r\n  (define-fun var2174-out () var3818\r\n    var3818!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun println/1773605060 ((x!0 var3818) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1654784,
            "run_time": 0.015706777572631836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var233 is 1\r\n; rep: (as @var233_0 var233)\r\n; cardinality of var3818 is 1\r\n; rep: (as @var3818_0 var3818)\r\n; cardinality of var2174 is 1\r\n; rep: (as @var2174_0 var2174)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_581 var3818) (BOUND_VARIABLE_582 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2174-out () var3818 (as @var3818_0 var3818))\r\n(define-fun var1607 () String \"\")\r\n(define-fun var1592!1 () String \"\")\r\n(define-fun var1592!2 () String \"Invalid 'OUTPUT_LANGUAGE' specified : \")\r\n(define-fun var3378!1 () String \"Invalid 'OUTPUT_LANGUAGE' specified : \")\r\n(define-fun var2546!1 () var3818 (as @var3818_0 var3818))\r\n(define-fun var3552!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37109760,
            "run_time": 0.07812881469726562,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3378!1 () String\n    \"Invalid 'OUTPUT_LANGUAGE' specified : \\u{0}\\u{0}\")\n  (define-fun var1592!2 () String\n    \"Invalid 'OUTPUT_LANGUAGE' specified : \")\n  (define-fun var1592!1 () String\n    \"\")\n  (define-fun var3552 () String\n    (str.++ var1592!1 \"Invalid 'OUTPUT_LANGUAGE' specified : \" var1607))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3378 () String\n    (str.++ var1592!1 \"Invalid 'OUTPUT_LANGUAGE' specified : \"))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1592 () String\n    String-init)\n  (define-fun var3940 () String\n    (str.++ var1592!1 \"Invalid 'OUTPUT_LANGUAGE' specified : \" var1607))\n  (define-fun var2546 () var3818\n    var2174-out)\n  (define-fun var1607 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2546!1 () var3818\n    var3818!val!0)\n  (define-fun var3552!1 () String\n    \"\")\n  (define-fun var2174-out () var3818\n    var3818!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun println/1773605060 ((x!0 var3818) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 190377984,
            "run_time": 0.9168646335601807,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3378!1 () String \"Invalid \\u{0}27OUTPUT_LANGUAGE\\u{0}27 specified : \")\r\n  (define-fun var1592!2 () String \"Invalid \\u{0}27OUTPUT_LANGUAGE\\u{0}27 specified : \")\r\n  (define-fun var1592!1 () String \"\")\r\n  (define-fun var1607 () String \"\")\r\n  (define-fun null-String () String \" \")\r\n  (define-fun abbrev_107 ((x!0 Int)) String (ite (= x!0 0) \"Invalid \\u{0}27OUTPUT_LANGUAGE\\u{0}27 specified : \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.String",
            "$r1 = <java.lang.System: java.io.PrintStream out>",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid \\'OUTPUT_LANGUAGE\\' specified : \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r5)",
            "return 1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.TokenMgrException__addEscapes__-1529316606\\465.smt2",
        "z3": {
            "memory": 31485952,
            "run_time": 0.0599515438079834,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2706 () String\r\n    \"\")\r\n  (define-fun var2278 () String\r\n    String-init)\r\n  (define-fun var3974 () Int\r\n    0)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1956 () Int\r\n    (str.len var2706))\r\n  (define-fun var3858 () String\r\n    var2278!1)\r\n  (define-fun var2278!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun <init>/-1430969082 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015535831451416016,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var472 is 1\r\n; rep: (as @var472_0 var472)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1430969082 ((BOUND_VARIABLE_530 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2706 () String \"\")\r\n(define-fun var2278!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37064704,
            "run_time": 0.07920980453491211,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2706 () String\n    \"\")\n  (define-fun var1956 () Int\n    (str.len var2706))\n  (define-fun var3858 () String\n    var2278!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3974 () Int\n    0)\n  (define-fun var2278 () String\n    String-init)\n  (define-fun var2278!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun <init>/-1430969082 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151142400,
            "run_time": 0.7000505924224854,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2706 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r13 = new java.lang.StringBuffer",
            "specialinvoke $r13.<java.lang.StringBuffer: void <init>()>()",
            "i6 = 0",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "if i6 >= $i0 goto $r2 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r2 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__AllBitsSet__-345130920\\1589.smt2",
        "z3": {
            "memory": 31600640,
            "run_time": 0.09124422073364258,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2894 () Bool\r\n    (= var2319 var1952-allBits))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2824 () String\r\n    var1952-allBits)\r\n  (define-fun var2319 () String\r\n    \"!0!\")\r\n  (define-fun var1952-allBits () String\r\n    \"\")\r\n)\r\n(error \"line 19 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.015033960342407227,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3541 is 1\r\n; rep: (as @var3541_0 var3541)\r\n; cardinality of var1952 is 1\r\n; rep: (as @var1952_0 var1952)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1952-allBits () String \"\")\r\n(define-fun var2319 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37003264,
            "run_time": 0.07697391510009766,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2824 () String\n    var1952-allBits)\n  (define-fun var2894 () Bool\n    (= var2319 var1952-allBits))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2319 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1952-allBits () String\n    \"\")\n)\n(error \"line 19 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132083712,
            "run_time": 0.6143975257873535,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2319 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$r1 = <org.javacc.parser.NfaState: java.lang.String allBits>",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r1)",
            "return $z0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.TokenMgrException__LexicalError__-309502\\495.smt2",
        "z3": {
            "memory": 33255424,
            "run_time": 0.0595858097076416,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2393 () String\r\n    (str.++ var1506!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var263)\r\n        \", column \"\r\n        (str.from_int var686)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"\r\n        \"after : \"\"\"))\r\n  (define-fun var3525 () Int\r\n    0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2844 () String\r\n    (var538_addEscapes/-1529316606 var156))\r\n  (define-fun var1867 () Int\r\n    0)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3988 () String\r\n    \"<EOF> \")\r\n  (define-fun var1013!1 () String\r\n    \"Lexical error at line , column \")\r\n  (define-fun null-Int () Int\r\n    (- 1))\r\n  (define-fun var1066 () String\r\n    (str.++ var1506!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var263)\r\n        \", column \"\r\n        (str.from_int var686)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"\r\n        \"after : \"\"\"\r\n        (var538_addEscapes/-1529316606 var156)\r\n        \"\"\"\"))\r\n  (define-fun var3347 () String\r\n    (str.++ var1506!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var263)\r\n        \", column \"\r\n        (str.from_int var686)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"\r\n        \"after : \"\"\"\r\n        (var538_addEscapes/-1529316606 var156)))\r\n  (define-fun var2930 () String\r\n    (str.++ var1506!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var263)\r\n        \", column \"\r\n        (str.from_int var686)\r\n        \".  Encountered: \"))\r\n  (define-fun var156 () String\r\n    \"\")\r\n  (define-fun var3528!1 () String\r\n    \"Lexical error at line \")\r\n  (define-fun var1506 () String\r\n    String-init)\r\n  (define-fun var263 () Int\r\n    (- 2))\r\n  (define-fun var2123 () String\r\n    (str.++ var1506!1 \"Lexical error at line \" (str.from_int var263)))\r\n  (define-fun var431 () String\r\n    (str.++ var1506!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var263)\r\n        \", column \"\r\n        (str.from_int var686)))\r\n  (define-fun var2103 () String\r\n    (str.++ var1506!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var263)\r\n        \", column \"\r\n        (str.from_int var686)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"))\r\n  (define-fun var3528 () String\r\n    (str.++ var1506!1 \"Lexical error at line \"))\r\n  (define-fun var686 () Int\r\n    0)\r\n  (define-fun var1013 () String\r\n    (str.++ var1506!1 \"Lexical error at line \" (str.from_int var263) \", column \"))\r\n  (define-fun var139 () String\r\n    (str.++ var1506!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var263)\r\n        \", column \"\r\n        (str.from_int var686)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"\r\n        \"after : \"\"\"\r\n        (var538_addEscapes/-1529316606 var156)\r\n        \"\"\"\"))\r\n  (define-fun var2123!1 () String\r\n    \"Lexical error at line , column \")\r\n  (define-fun var431!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: \")\r\n  (define-fun var2930!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: <EOF> \")\r\n  (define-fun var1506!2 () String\r\n    \"Lexical error at line \")\r\n  (define-fun var2103!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: <EOF> after : \"\"\")\r\n  (define-fun var1389 () Bool\r\n    true)\r\n  (define-fun var3347!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: <EOF> after : \"\"\"\"\")\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var1506!1 () String\r\n    \"\")\r\n  (define-fun var2393!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: <EOF> after : \"\"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var538_addEscapes/-1529316606 ((x!0 String)) String\r\n    \"\")\r\n)\r\n(error \"line 82 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13160448,
            "run_time": 0.03133893013000488,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3505 is 1\r\n; rep: (as @var3505_0 var3505)\r\n; cardinality of var538 is 1\r\n; rep: (as @var538_0 var538)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var538_addEscapes/-1529316606 ((BOUND_VARIABLE_2032 String)) String \"\")\r\n(define-fun null-Bool () Bool false)\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1389 () Bool true)\r\n(define-fun var1867 () Int (- 1))\r\n(define-fun var263 () Int (- 1))\r\n(define-fun var686 () Int (- 1))\r\n(define-fun var156 () String \"\")\r\n(define-fun var3525 () Int (- 1))\r\n(define-fun var1506!1 () String \"\")\r\n(define-fun var1506!2 () String \"Lexical error at line \")\r\n(define-fun var3528!1 () String \"Lexical error at line \")\r\n(define-fun var2123!1 () String \"Lexical error at line , column \")\r\n(define-fun var1013!1 () String \"Lexical error at line , column \")\r\n(define-fun var431!1 () String \"Lexical error at line , column .  Encountered: \")\r\n(define-fun var2930!1 () String \"Lexical error at line , column .  Encountered: <EOF> \")\r\n(define-fun var2103!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \"\"\")\r\n(define-fun var2393!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \"\"\")\r\n(define-fun var3347!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \"\"\"\"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39010304,
            "run_time": 0.13257479667663574,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 81 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 82 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 218263552,
            "run_time": 1.3225736618041992,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3347!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \\u{0}22\\u{0}22\")\r\n  (define-fun var2393!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \\u{0}22\")\r\n  (define-fun var2103!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \\u{0}22\")\r\n  (define-fun var2930!1 () String \"Lexical error at line , column .  Encountered: <EOF> \")\r\n  (define-fun var431!1 () String \"Lexical error at line , column .  Encountered: \")\r\n  (define-fun var1013!1 () String \"Lexical error at line , column \")\r\n  (define-fun var2123!1 () String \"Lexical error at line , column \")\r\n  (define-fun var3528!1 () String \"Lexical error at line \")\r\n  (define-fun var1506!2 () String \"Lexical error at line \")\r\n  (define-fun var1506!1 () String \"\")\r\n  (define-fun var3525 () Int 1)\r\n  (define-fun var156 () String \" <EOF> \")\r\n  (define-fun var686 () Int (- 6))\r\n  (define-fun var263 () Int (- 6))\r\n  (define-fun var1867 () Int 1)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun var1389 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n  (define-fun abbrev_109 ((x!0 Int)) String (ite (= x!0 0) \"Lexical error at line , column .  Encountered: \" \"\"))\r\n  (define-fun abbrev_108 ((x!0 Int)) String (ite (= x!0 0) \"Lexical error at line \" \"\"))\r\n  (define-fun var538_addEscapes/-1529316606 ((x!0 String)) String (ite (= x!0 \" <EOF> \") \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 29,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "z0 := @parameter0: boolean",
            "i3 := @parameter1: int",
            "i0 := @parameter2: int",
            "i1 := @parameter3: int",
            "r16 := @parameter4: java.lang.String",
            "c2 := @parameter5: char",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r1 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Lexical error at line \")",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", column \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)",
            "$r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".  Encountered: \")",
            "if z0 == 0 goto $r24 = new java.lang.StringBuilder",
            "$r22 = \"<EOF> \"",
            "goto [?= $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)]",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"after : \\\"\")",
            "$r17 = staticinvoke <org.javacc.jjtree.TokenMgrException: java.lang.String addEscapes(java.lang.String)>(r16)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r21"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__GetStateSetString__2044931826\\1770.smt2",
        "z3": {
            "memory": 31535104,
            "run_time": 0.04063773155212402,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3352 () String\r\n    String-init)\r\n  (define-fun var2513 () Int\r\n    (getLength-Arr-Int-1 var3548))\r\n  (define-fun var3469 () String\r\n    \"{ \")\r\n  (define-fun var864 () Int\r\n    0)\r\n  (define-fun var2729 () String\r\n    (str.++ var3352!1 \"{ \" \"};\"))\r\n  (define-fun var3763 () String\r\n    (str.++ var3352!1 \"{ \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 0) 0 1))\r\n  (define-fun var3548 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var441 () String\r\n    (str.++ var3352!1 \"{ \" \"};\"))\r\n  (define-fun var232 () var319\r\n    var923-allNextStates)\r\n  (define-fun var3763!1 () String\r\n    \"{ };\")\r\n  (define-fun var3352!2 () String\r\n    \"{ \")\r\n  (define-fun var3352!1 () String\r\n    \"\")\r\n  (define-fun var3548!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var232!1 () var319\r\n    var319!val!0)\r\n  (define-fun var2729!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var923-allNextStates () var319\r\n    var319!val!0)\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\r\n    0)\r\n  (define-fun put/1981026245 ((x!0 var319) (x!1 var669) (x!2 var669)) var669\r\n    var669!val!0)\r\n  (define-fun cast-from-String-to-var669 ((x!0 String)) var669\r\n    var669!val!0)\r\n  (define-fun cast-from-__Array__Int__Int__-to-var669 ((x!0 (Array Int Int))) var669\r\n    var669!val!0)\r\n)\r\n(error \"line 53 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1695744,
            "run_time": 0.016180038452148438,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var319 is 1\r\n; rep: (as @var319_0 var319)\r\n; cardinality of var923 is 1\r\n; rep: (as @var923_0 var923)\r\n; cardinality of var669 is 1\r\n; rep: (as @var669_0 var669)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun put/1981026245 ((BOUND_VARIABLE_580 var319) (BOUND_VARIABLE_581 var669) (BOUND_VARIABLE_582 var669)) var669 (as @var669_0 var669))\r\n(define-fun cast-from-String-to-var669 ((BOUND_VARIABLE_585 String)) var669 (as @var669_0 var669))\r\n(define-fun cast-from-__Array__Int__Int__-to-var669 ((BOUND_VARIABLE_588 (Array Int Int))) var669 (as @var669_0 var669))\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var923-allNextStates () var319 (as @var319_0 var319))\r\n(define-fun var3548 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3352!1 () String \"\")\r\n(define-fun var3352!2 () String \"{ \")\r\n(define-fun var3763!1 () String \"{ };\")\r\n(define-fun var232!1 () var319 (as @var319_0 var319))\r\n(define-fun var2729!1 () String \"\")\r\n(define-fun var3548!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36597760,
            "run_time": 0.07860612869262695,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3469 () String\n    \"{ \")\n  (define-fun var232 () var319\n    var923-allNextStates)\n  (define-fun var2729 () String\n    (str.++ var3352!1 \"{ \" \"};\"))\n  (define-fun var3763 () String\n    (str.++ var3352!1 \"{ \"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var441 () String\n    (str.++ var3352!1 \"{ \" \"};\"))\n  (define-fun var2513 () Int\n    (getLength-Arr-Int-1 var3548))\n  (define-fun var864 () Int\n    0)\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 0 1))\n  (define-fun var3548 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var3352 () String\n    String-init)\n  (define-fun var3763!1 () String\n    \"{ };\")\n  (define-fun var3352!2 () String\n    \"{ \")\n  (define-fun var3352!1 () String\n    \"\")\n  (define-fun var3548!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var232!1 () var319\n    var319!val!0)\n  (define-fun var2729!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var923-allNextStates () var319\n    var319!val!0)\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\n    0)\n  (define-fun put/1981026245 ((x!0 var319) (x!1 var669) (x!2 var669)) var669\n    var669!val!0)\n  (define-fun cast-from-String-to-var669 ((x!0 String)) var669\n    var669!val!0)\n  (define-fun cast-from-__Array__Int__Int__-to-var669 ((x!0 (Array Int Int))) var669\n    var669!val!0)\n)\n(error \"line 53 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168001536,
            "run_time": 0.9316661357879639,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3763!1 () String \"{ };\")\r\n  (define-fun var3352!2 () String \"{ \")\r\n  (define-fun var3352!1 () String \"\")\r\n  (define-fun var3548 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 0) 0 1))\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int (ite (= x!0 ((as const (Array Int Int)) 0)) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: int[]",
            "r12 = \"{ \"",
            "i3 = 0",
            "$i4 = lengthof r0",
            "if i3 >= $i4 goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"};\")",
            "r13 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r4 = <org.javacc.parser.NfaState: java.util.Hashtable allNextStates>",
            "virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r13, r0)",
            "return r13"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__makeToolNameList__830449084\\737.smt2",
        "z3": {
            "memory": 103919616,
            "run_time": 60.01213073730469,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8921088,
            "run_time": 0.061065673828125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var933 is 1\r\n; rep: (as @var933_0 var933)\r\n; cardinality of var191 is 1\r\n; rep: (as @var191_0 var191)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var191-init () var191 (as @var191_0 var191))\r\n(define-fun <init>/-325640736 ((BOUND_VARIABLE_1827 var191)) void (as @void_0 void))\r\n(define-fun null-String () String \"\")\r\n(define-fun var1838 () Stringu{d}\\u{a}\")\r\n(define-fun var3516!1 () var191 (as @var191_0 var191))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 43708416,
            "run_time": 60.00898838043213,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 200294400,
            "run_time": 1.0215718746185303,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.IllegalArgumentException: cannot execute actions List(AddFormula((! (str_empty(all_146_7) & str_empty(all_93_0)))))\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCGlobals__makeToolNameList__830449084\\737.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nAssuming all_28_4 = \"\"\r\nAssuming all_28_3 = \"\"\r\nAssuming all_14_4 = \"\"\r\nApplying Nielsen transformation (# word equations: 1), splitting all_24_4\r\n  all_24_2 . all_24_4 == all_14_3 . \"\r\"\r\nAssuming all_21_4 = \"\"\r\nAssuming all_21_3 = \"\"\r\nApplying Nielsen transformation (# word equations: 1), splitting \"\n\"\r\n  all_24_2 . all_24_4 == all_28_3 . \"\n\"\r\nAssuming all_24_4 = \"\"\r\nApplying Nielsen transformation (# word equations: 1), splitting all_125_0\r\n  all_24_2 . all_24_4 == all_21_3 . \"\r\"\r\n\r\n774ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: int indexOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int)>": 3
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r7 = new java.util.ArrayList",
            "specialinvoke $r7.<java.util.ArrayList: void <init>()>()",
            "i9 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(10)",
            "$i14 = (int) -1",
            "if i9 != $i14 goto $i8 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(13)",
            "$i8 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(13)",
            "i10 = $i8",
            "$i16 = (int) -1",
            "if $i8 != $i16 goto (branch)",
            "if i9 >= i10 goto $i11 = i10",
            "$i11 = i10",
            "if $i11 != 1000 goto r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i11)",
            "r4 = r1",
            "goto [?= $i0 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58)]",
            "$i0 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58)",
            "$i18 = (int) -1",
            "if $i0 != $i18 goto $i1 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58)",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaFiles__gen_TokenMgrError__-462046811\\1088.smt2",
        "z3": {
            "memory": 32612352,
            "run_time": 60.009347438812256,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.045682668685913086,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2065 is 2\r\n; rep: (as @var2065_0 var2065)\r\n; rep: (as @var2065_1 var2065)\r\n; cardinality of var55 is 1\r\n; rep: (as @var55_0 var55)\r\n; cardinality of var733 is 1\r\n; rep: (as @var733_0 var733)\r\n; cardinality of var153 is 2\r\n; rep: (as @var153_0 var153)\r\n; rep: (as @var153_1 var153)\r\n; cardinality of var478 is 1\r\n; rep: (as @var478_0 var478)\r\n; cardinality of var233 is 1\r\n; rep: (as @var233_0 var233)\r\n; cardinality of var3413 is 1\r\n; rep: (as @var3413_0 var3413)\r\n; cardinality of var3392 is 1\r\n; rep: (as @var3392_0 var3392)\r\n; cardinality of var1937 is 1\r\n; rep: (as @var1937_0 var1937)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var55_isLegacyExceptionHandling/967608559 () Bool false)\r\n(define-fun var733-init () var733 (as @var733_0 var733))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1128 String) (BOUND_VARIABLE_1129 var3413)) String \"\")\r\n(define-fun cast-from-var153-to-var3413 ((BOUND_VARIABLE_1132 var153)) var3413 (as @var3413_0 var3413))\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_1135 var478) (BOUND_VARIABLE_1136 String)) void (as @void_0 void))\r\n(define-fun var3392_semantic_error/-498493661 ((BOUND_VARIABLE_1139 String)) void (as @void_0 void))\r\n(define-fun var1937-init () var1937 (as @var1937_0 var1937))\r\n(define-fun <init>/1750087229 ((BOUND_VARIABLE_1142 var1937)) void (as @void_0 void))\r\n(define-fun null-var2065 () var2065 (as @var2065_0 var2065))\r\n(define-fun null-var153 () var153 (as @var153_0 var153))\r\n(define-fun var233-err () var478 (as @var478_0 var478))\r\n(define-fun var494 () var2065 (as @var2065_1 var2065))\r\n(define-fun var183 () var153 (as @var153_1 var153))\r\n(define-fun var3886!1 () String \"\")\r\n(define-fun var3886!2 () String \"Failed to create \")\r\n(define-fun var2242!1 () String \"Failed to create TokenMgrException.java\")\r\n(define-fun var1852!1 () String \"Failed to create TokenMgrException.java \")\r\n(define-fun var1789!1 () String \"Failed to create TokenMgrException.java \")\r\n(define-fun var598!1 () var478 (as @var478_0 var478))\r\n(define-fun var1925!1 () String \"\")\r\n(define-fun var768!1 () String \"\")\r\n(define-fun var768!2 () String \"Could not open file \")\r\n(define-fun var1530!1 () String \"Could not open file TokenMgrException.java\")\r\n(define-fun var798!1 () String \"Could not open file TokenMgrException.java for writing.\")\r\n(define-fun var347!1 () String \"\")\r\n(define-fun var1000!1 () var1937 (as @var1937_0 var1937))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37433344,
            "run_time": 0.06124544143676758,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var153:\n  ;;   var153!val!1 var153!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var153!val!1 () var153)\n  (declare-fun var153!val!0 () var153)\n  ;; cardinality constraint:\n  (forall ((x var153)) (or (= x var153!val!1) (= x var153!val!0)))\n  ;; -----------\n  ;; universe for var2065:\n  ;;   var2065!val!1 var2065!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2065!val!1 () var2065)\n  (declare-fun var2065!val!0 () var2065)\n  ;; cardinality constraint:\n  (forall ((x var2065)) (or (= x var2065!val!1) (= x var2065!val!0)))\n  ;; -----------\n  (define-fun var1510 () Bool\n    var55_isLegacyExceptionHandling/967608559)\n  (define-fun var3886 () String\n    String-init)\n  (define-fun var1108 () String\n    (append/-1031950772\n  (str.++ var3886!1 \"Failed to create \" \"TokenMgrException.java\" \" \")\n  (cast-from-var153-to-var3413 var183)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var2065 () var2065\n    var2065!val!1)\n  (define-fun var1789 () String\n    (str.++ var3886!1 \"Failed to create \" \"TokenMgrException.java\" \" \"))\n  (define-fun var798 () String\n    (str.++ var768!1 \"Could not open file \" \"TokenMgrException.java\"))\n  (define-fun var1789!1 () String\n    \"Failed to create TokenMgrException.java \")\n  (define-fun var598 () var478\n    var233-err)\n  (define-fun var2755 () String\n    \"TokenMgrException.java\")\n  (define-fun var314 () var733\n    var733-init)\n  (define-fun var183 () var153\n    var153!val!0)\n  (define-fun var1852 () String\n    (str.++ var3886!1 \"Failed to create \" \"TokenMgrException.java\"))\n  (define-fun var1000 () var1937\n    var1937-init)\n  (define-fun var3106 () String\n    \"TokenMgrException.java\")\n  (define-fun var1852!1 () String\n    \"Failed to create TokenMgrException.java \")\n  (define-fun var781 () String\n    \"TokenMgrException.java\")\n  (define-fun var2242 () String\n    (str.++ var3886!1 \"Failed to create \"))\n  (define-fun var1925 () String\n    (append/-1031950772\n  (str.++ var3886!1 \"Failed to create \" \"TokenMgrException.java\" \" \")\n  (cast-from-var153-to-var3413 var183)))\n  (define-fun var768 () String\n    String-init)\n  (define-fun var1530 () String\n    (str.++ var768!1 \"Could not open file \"))\n  (define-fun var1415 () String\n    (str.++ var768!1\n        \"Could not open file \"\n        \"TokenMgrException.java\"\n        \" for writing.\"))\n  (define-fun var347 () String\n    (str.++ var768!1\n        \"Could not open file \"\n        \"TokenMgrException.java\"\n        \" for writing.\"))\n  (define-fun null-var153 () var153\n    var153!val!1)\n  (define-fun var494 () var2065\n    var2065!val!0)\n  (define-fun var3886!1 () String\n    \"\")\n  (define-fun var2242!1 () String\n    \"Failed to create TokenMgrException.java\")\n  (define-fun var3886!2 () String\n    \"Failed to create \")\n  (define-fun var55_isLegacyExceptionHandling/967608559 () Bool\n    false)\n  (define-fun var1530!1 () String\n    \"Could not open file TokenMgrException.java\")\n  (define-fun var768!2 () String\n    \"Could not open file \")\n  (define-fun var768!1 () String\n    \"\")\n  (define-fun var798!1 () String\n    \"Could not open file TokenMgrException.java for writing.\")\n  (define-fun var733-init () var733\n    var733!val!0)\n  (define-fun var1000!1 () var1937\n    var1937!val!0)\n  (define-fun var233-err () var478\n    var478!val!0)\n  (define-fun var347!1 () String\n    \"\")\n  (define-fun var598!1 () var478\n    var478!val!0)\n  (define-fun var1925!1 () String\n    \"\")\n  (define-fun var1937-init () var1937\n    var1937!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3413)) String\n    \"\")\n  (define-fun var3392_semantic_error/-498493661 ((x!0 String)) void\n    void!val!0)\n  (define-fun println/1773605060 ((x!0 var478) (x!1 String)) void\n    void!val!0)\n  (define-fun <init>/1750087229 ((x!0 var1937)) void\n    void!val!0)\n  (define-fun cast-from-var153-to-var3413 ((x!0 var153)) var3413\n    var3413!val!0)\n)\n(error \"line 103 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 197054464,
            "run_time": 1.178149700164795,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var798!1 () String \"Could not open file TokenMgrException.java for writing.\")\r\n  (define-fun var1530!1 () String \"Could not open file TokenMgrException.java\")\r\n  (define-fun var768!2 () String \"Could not open file \")\r\n  (define-fun var768!1 () String \"\")\r\n  (define-fun var1789!1 () String \"Failed to create TokenMgrException.java \")\r\n  (define-fun var1852!1 () String \"Failed to create TokenMgrException.java \")\r\n  (define-fun var2242!1 () String \"Failed to create TokenMgrException.java\")\r\n  (define-fun var3886!2 () String \"Failed to create \")\r\n  (define-fun var3886!1 () String \"\")\r\n  (define-fun var183 () var153 var153!122)\r\n  (define-fun var494 () var2065 var2065!120)\r\n  (define-fun null-var153 () var153 var153!118)\r\n  (define-fun null-var2065 () var2065 var2065!116)\r\n  (define-fun var3413!148 () var3413 (cast-from-var153-to-var3413 var153!122))\r\n  (define-fun var55_isLegacyExceptionHandling/967608559 () Bool false)\r\n  (define-fun abbrev_121 ((x!0 Int)) String (ite (= x!0 0) \"Could not open file \" \"\"))\r\n  (define-fun abbrev_119 ((x!0 Int)) String (ite (= x!0 0) \"TokenMgrException.java\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 27,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r8 := @parameter0: org.javacc.parser.JavaFiles$JavaResourceTemplateLocations",
            "z0 = staticinvoke <org.javacc.parser.Options: boolean isLegacyExceptionHandling()>()",
            "if z0 == 0 goto $r44 = \"TokenMgrException.java\"",
            "$r44 = \"TokenMgrException.java\"",
            "$r43 = \"TokenMgrException.java\"",
            "r0 = $r43",
            "$r1 = new java.io.File",
            "$r25 := @caughtexception",
            "$r27 = <java.lang.System: java.io.PrintStream err>",
            "$r26 = new java.lang.StringBuilder",
            "specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()",
            "$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to create \")",
            "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")",
            "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25)",
            "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r27.<java.io.PrintStream: void println(java.lang.String)>($r32)",
            "$r33 = new java.lang.StringBuilder",
            "specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()",
            "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not open file \")",
            "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for writing.\")",
            "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void semantic_error(java.lang.String)>($r37)",
            "$r38 = new java.lang.Error",
            "specialinvoke $r38.<java.lang.Error: void <init>()>()",
            "throw $r38"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__getIdString__-267384014\\670.smt2",
        "z3": {
            "memory": 32112640,
            "run_time": 60.00609540939331,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1695744,
            "run_time": 0.0307309627532959,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2925 is 2\r\n; rep: (as @var2925_0 var2925)\r\n; rep: (as @var2925_1 var2925)\r\n; cardinality of var1042 is 1\r\n; rep: (as @var1042_0 var1042)\r\n; cardinality of var3512 is 1\r\n; rep: (as @var3512_0 var3512)\r\n; cardinality of var3324 is 1\r\n; rep: (as @var3324_0 var3324)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2925_size/-959786421 ((_arg_1 var2925)) Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2925_get/-1216255739 ((_arg_1 var2925) (_arg_2 Int)) var3512 (as @var3512_0 var3512))\r\n(define-fun cast-from-var3512-to-String ((_arg_1 var3512)) String \"\")\r\n(define-fun var3324_addUnicodeEscapes/1686793564 ((BOUND_VARIABLE_851 String)) String \"\")\r\n(define-fun null-var2925 () var2925 (as @var2925_0 var2925))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var729 () var2925 (as @var2925_1 var2925))\r\n(define-fun var171 () String \"\")\r\n(define-fun var1477!1 () String \"\")\r\n(define-fun var1477!2 () String \"Generated By:\")\r\n(define-fun var2517!1 () String \"Generated By:\")\r\n(define-fun var577!1 () String \"Generated By::\")\r\n(define-fun var3055!1 () String \"\")\r\n(define-fun var3055!2 () String \"Generated By::\")\r\n(define-fun var2253!1 () String \"Generated By:: Do not edit this line. \")\r\n(define-fun var342!1 () String \"Generated By:: Do not edit this line. \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35000320,
            "run_time": 0.07889437675476074,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 80 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 81 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 201940992,
            "run_time": 1.1142520904541016,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2925/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCGlobals__getIdString__-267384014\\670.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2253!1 =\r\n     concat(all_39_7, \" Do not edit this line. \")\r\n   var3055!2 =\r\n     concat(all_36_6, \":\")\r\n   var577!1 =\r\n     concat(all_33_4, \":\")\r\n   all_30_4 =\r\n     concat(all_30_5, \":\")\r\n   var342!1 =\r\n     concat(all_24_3, all_24_2)\r\n   var2517!1 =\r\n     concat(\"Generated By:\", all_27_3)\r\n   all_24_3 =\r\n     concat(all_42_8, \" Do not edit this line. \")\r\n   all_39_7 =\r\n     concat(all_39_8, \":\")\r\n   all_36_6 =\r\n     concat(\"Generated By:\", all_27_3)\r\n   all_33_4 =\r\n     concat(\"Generated By:\", all_27_3)\r\n   all_30_5 =\r\n     concat(\"Generated By:\", all_27_3)\r\n   all_42_8 =\r\n     concat(all_42_9, \":\")\r\n   all_39_8 =\r\n     concat(\"Generated By:\", all_27_3)\r\n   all_42_9 =\r\n     concat(\"Generated By:\", all_27_3)\r\n\r\n879ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 24,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.util.List",
            "r9 := @parameter1: java.lang.String",
            "r22 = \"Generated By:\"",
            "i3 = 0",
            "$i0 = interfaceinvoke r0.<java.util.List: int size()>()",
            "$i1 = $i0 - 1",
            "if i3 >= $i1 goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r22)",
            "$r2 = interfaceinvoke r0.<java.util.List: java.lang.Object get(int)>(i3)",
            "$r3 = (java.lang.String) $r2",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")",
            "r23 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i2 = virtualinvoke r23.<java.lang.String: int length()>()",
            "if $i2 <= 200 goto $r7 = new java.lang.StringBuilder",
            "$r7 = new java.lang.StringBuilder",
            "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r23)",
            "$r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Do not edit this line. \")",
            "$r10 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String addUnicodeEscapes(java.lang.String)>(r9)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r13"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaFiles__gen_Token__1828438709\\1141.smt2",
        "z3": {
            "memory": 32251904,
            "run_time": 0.05855536460876465,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var330:\r\n  ;;   var330!val!0 var330!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var330!val!0 () var330)\r\n  (declare-fun var330!val!1 () var330)\r\n  ;; cardinality constraint:\r\n  (forall ((x var330)) (or (= x var330!val!0) (= x var330!val!1)))\r\n  ;; -----------\r\n  ;; universe for var319:\r\n  ;;   var319!val!1 var319!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var319!val!1 () var319)\r\n  (declare-fun var319!val!0 () var319)\r\n  ;; cardinality constraint:\r\n  (forall ((x var319)) (or (= x var319!val!1) (= x var319!val!0)))\r\n  ;; -----------\r\n  (define-fun var3704 () String\r\n    (str.++ var947!1 \"Failed to create Token \"))\r\n  (define-fun var3564 () var3808\r\n    var3808-init)\r\n  (define-fun var662 () String\r\n    (append/-1031950772\r\n  (str.++ var947!1 \"Failed to create Token \")\r\n  (cast-from-var330-to-var2335 var3538)))\r\n  (define-fun var3704!1 () String\r\n    \"Failed to create Token \")\r\n  (define-fun var2162 () var992\r\n    var992-init)\r\n  (define-fun var1161 () var319\r\n    var319!val!0)\r\n  (define-fun null-var330 () var330\r\n    var330!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1402 () var1330\r\n    var3519-err)\r\n  (define-fun var3861 () String\r\n    (append/-1031950772\r\n  (str.++ var947!1 \"Failed to create Token \")\r\n  (cast-from-var330-to-var2335 var3538)))\r\n  (define-fun null-var319 () var319\r\n    var319!val!1)\r\n  (define-fun var947 () String\r\n    String-init)\r\n  (define-fun var3538 () var330\r\n    var330!val!0)\r\n  (define-fun var947!1 () String\r\n    \"\")\r\n  (define-fun var947!2 () String\r\n    \"Failed to create Token \")\r\n  (define-fun var1402!1 () var1330\r\n    var1330!val!0)\r\n  (define-fun var3519-err () var1330\r\n    var1330!val!0)\r\n  (define-fun var3861!1 () String\r\n    \"\")\r\n  (define-fun var3808-init () var3808\r\n    var3808!val!0)\r\n  (define-fun var3115 () String\r\n    \"\")\r\n  (define-fun var2162!1 () var992\r\n    var992!val!0)\r\n  (define-fun var992-init () var992\r\n    var992!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2335)) String\r\n    \"\")\r\n  (define-fun println/1773605060 ((x!0 var1330) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun <init>/1750087229 ((x!0 var992)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var330-to-var2335 ((x!0 var330)) var2335\r\n    var2335!val!0)\r\n  (define-fun var2534_semantic_error/-498493661 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 67 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015410184860229492,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var319 is 2\r\n; rep: (as @var319_0 var319)\r\n; rep: (as @var319_1 var319)\r\n; cardinality of var3808 is 1\r\n; rep: (as @var3808_0 var3808)\r\n; cardinality of var330 is 2\r\n; rep: (as @var330_0 var330)\r\n; rep: (as @var330_1 var330)\r\n; cardinality of var1330 is 1\r\n; rep: (as @var1330_0 var1330)\r\n; cardinality of var3519 is 1\r\n; rep: (as @var3519_0 var3519)\r\n; cardinality of var2335 is 1\r\n; rep: (as @var2335_0 var2335)\r\n; cardinality of var2534 is 1\r\n; rep: (as @var2534_0 var2534)\r\n; cardinality of var992 is 1\r\n; rep: (as @var992_0 var992)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3808-init () var3808 (as @var3808_0 var3808))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_933 String) (BOUND_VARIABLE_934 var2335)) String \"\")\r\n(define-fun cast-from-var330-to-var2335 ((BOUND_VARIABLE_937 var330)) var2335 (as @var2335_0 var2335))\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_940 var1330) (BOUND_VARIABLE_941 String)) void (as @void_0 void))\r\n(define-fun var2534_semantic_error/-498493661 ((BOUND_VARIABLE_944 String)) void (as @void_0 void))\r\n(define-fun var992-init () var992 (as @var992_0 var992))\r\n(define-fun <init>/1750087229 ((BOUND_VARIABLE_947 var992)) void (as @void_0 void))\r\n(define-fun null-var319 () var319 (as @var319_0 var319))\r\n(define-fun null-var330 () var330 (as @var330_0 var330))\r\n(define-fun var3519-err () var1330 (as @var1330_0 var1330))\r\n(define-fun var1161 () var319 (as @var319_1 var319))\r\n(define-fun var3538 () var330 (as @var330_1 var330))\r\n(define-fun var947!1 () String \"\")\r\n(define-fun var947!2 () String \"Failed to create Token \")\r\n(define-fun var3704!1 () String \"Failed to create Token \")\r\n(define-fun var1402!1 () var1330 (as @var1330_0 var1330))\r\n(define-fun var3861!1 () String \"\")\r\n(define-fun var3115 () String \"\")\r\n(define-fun var2162!1 () var992 (as @var992_0 var992))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37294080,
            "run_time": 0.06195664405822754,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var330:\n  ;;   var330!val!0 var330!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var330!val!0 () var330)\n  (declare-fun var330!val!1 () var330)\n  ;; cardinality constraint:\n  (forall ((x var330)) (or (= x var330!val!0) (= x var330!val!1)))\n  ;; -----------\n  ;; universe for var319:\n  ;;   var319!val!1 var319!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var319!val!1 () var319)\n  (declare-fun var319!val!0 () var319)\n  ;; cardinality constraint:\n  (forall ((x var319)) (or (= x var319!val!1) (= x var319!val!0)))\n  ;; -----------\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1161 () var319\n    var319!val!0)\n  (define-fun null-var330 () var330\n    var330!val!1)\n  (define-fun var3704 () String\n    (str.++ var947!1 \"Failed to create Token \"))\n  (define-fun var3704!1 () String\n    \"Failed to create Token \")\n  (define-fun null-var319 () var319\n    var319!val!1)\n  (define-fun var1402 () var1330\n    var3519-err)\n  (define-fun var662 () String\n    (append/-1031950772\n  (str.++ var947!1 \"Failed to create Token \")\n  (cast-from-var330-to-var2335 var3538)))\n  (define-fun var3564 () var3808\n    var3808-init)\n  (define-fun var947!2 () String\n    \"Failed to create Token \")\n  (define-fun var3861 () String\n    (append/-1031950772\n  (str.++ var947!1 \"Failed to create Token \")\n  (cast-from-var330-to-var2335 var3538)))\n  (define-fun var2162 () var992\n    var992-init)\n  (define-fun var947 () String\n    String-init)\n  (define-fun var3538 () var330\n    var330!val!0)\n  (define-fun var947!1 () String\n    \"\")\n  (define-fun var1402!1 () var1330\n    var1330!val!0)\n  (define-fun var3519-err () var1330\n    var1330!val!0)\n  (define-fun var3861!1 () String\n    \"\")\n  (define-fun var3808-init () var3808\n    var3808!val!0)\n  (define-fun var3115 () String\n    \"\")\n  (define-fun var2162!1 () var992\n    var992!val!0)\n  (define-fun var992-init () var992\n    var992!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2335)) String\n    \"\")\n  (define-fun println/1773605060 ((x!0 var1330) (x!1 String)) void\n    void!val!0)\n  (define-fun <init>/1750087229 ((x!0 var992)) void\n    void!val!0)\n  (define-fun cast-from-var330-to-var2335 ((x!0 var330)) var2335\n    var2335!val!0)\n  (define-fun var2534_semantic_error/-498493661 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 67 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180682752,
            "run_time": 0.9603400230407715,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3704!1 () String \"Failed to create Token \")\r\n  (define-fun var947!2 () String \"Failed to create Token \")\r\n  (define-fun var947!1 () String \"\")\r\n  (define-fun var3538 () var330 var330!54)\r\n  (define-fun var1161 () var319 var319!52)\r\n  (define-fun null-var330 () var330 var330!50)\r\n  (define-fun null-var319 () var319 var319!48)\r\n  (define-fun abbrev_116 ((x!0 Int)) String (ite (= x!0 0) \"Failed to create Token \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r7 := @parameter0: org.javacc.parser.JavaFiles$JavaResourceTemplateLocations",
            "$r0 = new java.io.File",
            "$r24 := @caughtexception",
            "$r26 = <java.lang.System: java.io.PrintStream err>",
            "$r25 = new java.lang.StringBuilder",
            "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()",
            "$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to create Token \")",
            "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r24)",
            "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r26.<java.io.PrintStream: void println(java.lang.String)>($r29)",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void semantic_error(java.lang.String)>(\"Could not open file Token.java for writing.\")",
            "$r30 = new java.lang.Error",
            "specialinvoke $r30.<java.lang.Error: void <init>()>()",
            "throw $r30"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaFiles__getVersion__-480450141\\815.smt2",
        "z3": {
            "memory": 12804096,
            "run_time": 0.07729935646057129,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var121:\r\n  ;;   var121!val!0 var121!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var121!val!0 () var121)\r\n  (declare-fun var121!val!1 () var121)\r\n  ;; cardinality constraint:\r\n  (forall ((x var121)) (or (= x var121!val!0) (= x var121!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3103:\r\n  ;;   var3103!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3103!val!0 () var3103)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3103)) (= x var3103!val!0))\r\n  ;; -----------\r\n  (define-fun var3849 () String\r\n    (str.++ var3737!1\r\n        \"/* \"\r\n        (var1025_getIdString/-826932917 \"JavaCC\" var1115)\r\n        \" Version \"))\r\n  (define-fun var2531 () String\r\n    var2355-majorDotMinor)\r\n  (define-fun var226 () String\r\n    (str.++ var3737!1\r\n        \"/* \"\r\n        (var1025_getIdString/-826932917 \"JavaCC\" var1115)\r\n        \" Version \"))\r\n  (define-fun var2338 () String\r\n    (var1363_replaceBackslash/-1635804809 var1115))\r\n  (define-fun var2403 () Bool\r\n    (exists/1072868559 var1422!1))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1422!1 () var3103\r\n    var3103!val!0)\r\n  (define-fun null-var121 () var121\r\n    var121!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1115 () String\r\n    \"A\")\r\n  (define-fun var3737 () String\r\n    String-init)\r\n  (define-fun var770 () var121\r\n    var121!val!0)\r\n  (define-fun var3790 () String\r\n    (var1025_getIdString/-826932917 \"JavaCC\" var1115))\r\n  (define-fun var3260 () var3103\r\n    var2189_getOutputDirectory/873146074)\r\n  (define-fun var1107 () String\r\n    (str.++ var3737!1 \"/* \" (var1025_getIdString/-826932917 \"JavaCC\" var1115)))\r\n  (define-fun var3929 () String\r\n    (str.++ var3737!1 \"/* \"))\r\n  (define-fun var1422 () var3103\r\n    var3103-init)\r\n  (define-fun var3929!1 () String\r\n    \"/* \")\r\n  (define-fun var3737!2 () String\r\n    \"/* \")\r\n  (define-fun var3737!1 () String\r\n    \"\")\r\n  (define-fun var1107!1 () String\r\n    \"/*  Version \")\r\n  (define-fun var3260!1 () var3103\r\n    var3103!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2189_getOutputDirectory/873146074 () var3103\r\n    var3103!val!0)\r\n  (define-fun var3103-init () var3103\r\n    var3103!val!0)\r\n  (define-fun var2355-majorDotMinor () String\r\n    \"\")\r\n  (define-fun var2338!1 () String\r\n    \"\")\r\n  (define-fun exists/1072868559 ((x!0 var3103)) Bool\r\n    false)\r\n  (define-fun var1025_getIdString/-826932917 ((x!0 String) (x!1 String)) String\r\n    \"\")\r\n  (define-fun var1363_replaceBackslash/-1635804809 ((x!0 String)) String\r\n    \"\")\r\n  (define-fun <init>/-1833447926 ((x!0 var3103) (x!1 var3103) (x!2 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 69 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.030560731887817383,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3664 is 1\r\n; rep: (as @var3664_0 var3664)\r\n; cardinality of var1025 is 1\r\n; rep: (as @var1025_0 var1025)\r\n; cardinality of var3103 is 1\r\n; rep: (as @var3103_0 var3103)\r\n; cardinality of var2189 is 1\r\n; rep: (as @var2189_0 var2189)\r\n; cardinality of var1363 is 1\r\n; rep: (as @var1363_0 var1363)\r\n; cardinality of var2355 is 1\r\n; rep: (as @var2355_0 var2355)\r\n; cardinality of var121 is 2\r\n; rep: (as @var121_0 var121)\r\n; rep: (as @var121_1 var121)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var1025_getIdString/-826932917 ((BOUND_VARIABLE_693 String) (BOUND_VARIABLE_694 String)) String \"\")\r\n(define-fun var3103-init () var3103 (as @var3103_0 var3103))\r\n(define-fun var2189_getOutputDirectory/873146074 () var3103 (as @var3103_0 var3103))\r\n(define-fun var1363_replaceBackslash/-1635804809 ((BOUND_VARIABLE_697 String)) String \"\")\r\n(define-fun <init>/-1833447926 ((BOUND_VARIABLE_700 var3103) (BOUND_VARIABLE_701 var3103) (BOUND_VARIABLE_702 String)) void (as @void_0 void))\r\n(define-fun exists/1072868559 ((_arg_1 var3103)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2355-majorDotMinor () String \"\")\r\n(define-fun null-var121 () var121 (as @var121_0 var121))\r\n(define-fun var1115 () String \"\")\r\n(define-fun var3737!1 () String \"\")\r\n(define-fun var3737!2 () String \"/* \")\r\n(define-fun var3929!1 () String \"/* \")\r\n(define-fun var1107!1 () String \"/*  Version \")\r\n(define-fun var1422!1 () var3103 (as @var3103_0 var3103))\r\n(define-fun var3260!1 () var3103 (as @var3103_0 var3103))\r\n(define-fun var2338!1 () String \"\")\r\n(define-fun var770 () var121 (as @var121_1 var121))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37113856,
            "run_time": 0.04562211036682129,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var121:\n  ;;   var121!val!0 var121!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var121!val!0 () var121)\n  (declare-fun var121!val!1 () var121)\n  ;; cardinality constraint:\n  (forall ((x var121)) (or (= x var121!val!0) (= x var121!val!1)))\n  ;; -----------\n  ;; universe for var3103:\n  ;;   var3103!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3103!val!0 () var3103)\n  ;; cardinality constraint:\n  (forall ((x var3103)) (= x var3103!val!0))\n  ;; -----------\n  (define-fun var1107!1 () String\n    \"/*  Version \")\n  (define-fun var3737!1 () String\n    \"\")\n  (define-fun var3737!2 () String\n    \"/* \")\n  (define-fun var3929!1 () String\n    \"/* \")\n  (define-fun var226 () String\n    (str.++ var3737!1\n        \"/* \"\n        (var1025_getIdString/-826932917 \"JavaCC\" var1115)\n        \" Version \"))\n  (define-fun var3849 () String\n    (str.++ var3737!1\n        \"/* \"\n        (var1025_getIdString/-826932917 \"JavaCC\" var1115)\n        \" Version \"))\n  (define-fun var2531 () String\n    var2355-majorDotMinor)\n  (define-fun var3260 () var3103\n    var2189_getOutputDirectory/873146074)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3790 () String\n    (var1025_getIdString/-826932917 \"JavaCC\" var1115))\n  (define-fun var1422!1 () var3103\n    var3103!val!0)\n  (define-fun null-var121 () var121\n    var121!val!1)\n  (define-fun var3737 () String\n    String-init)\n  (define-fun var770 () var121\n    var121!val!0)\n  (define-fun var2338 () String\n    (var1363_replaceBackslash/-1635804809 var1115))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3929 () String\n    (str.++ var3737!1 \"/* \"))\n  (define-fun var1107 () String\n    (str.++ var3737!1 \"/* \" (var1025_getIdString/-826932917 \"JavaCC\" var1115)))\n  (define-fun var1115 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1422 () var3103\n    var3103-init)\n  (define-fun var2403 () Bool\n    (exists/1072868559 var1422!1))\n  (define-fun var3260!1 () var3103\n    var3103!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2189_getOutputDirectory/873146074 () var3103\n    var3103!val!0)\n  (define-fun var3103-init () var3103\n    var3103!val!0)\n  (define-fun var2355-majorDotMinor () String\n    \"\")\n  (define-fun var2338!1 () String\n    \"\")\n  (define-fun exists/1072868559 ((x!0 var3103)) Bool\n    false)\n  (define-fun var1025_getIdString/-826932917 ((x!0 String) (x!1 String)) String\n    \"\")\n  (define-fun var1363_replaceBackslash/-1635804809 ((x!0 String)) String\n    \"\")\n  (define-fun <init>/-1833447926 ((x!0 var3103) (x!1 var3103) (x!2 String)) void\n    void!val!0)\n)\n(error \"line 69 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 170954752,
            "run_time": 0.7921350002288818,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var121/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaFiles__getVersion__-480450141\\815.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1107!1 =\r\n     concat(all_32_4, \" Version \")\r\n   var3929!1 =\r\n     concat(\"/* \", all_29_3)\r\n   all_32_4 =\r\n     concat(\"/* \", all_29_3)\r\n\r\n556ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/* \")",
            "$r2 = staticinvoke <org.javacc.parser.JavaFiles: java.lang.String getIdString(java.lang.String,java.lang.String)>(\"JavaCC\", r1)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Version \")",
            "r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r7 = new java.io.File",
            "$r9 = staticinvoke <org.javacc.parser.Options: java.io.File getOutputDirectory()>()",
            "$r8 = staticinvoke <org.javacc.parser.JavaFiles: java.lang.String replaceBackslash(java.lang.String)>(r1)",
            "specialinvoke $r7.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, $r8)",
            "$z0 = virtualinvoke $r7.<java.io.File: boolean exists()>()",
            "if $z0 != 0 goto r22 = null",
            "$r13 = <org.javacc.Version: java.lang.String majorDotMinor>",
            "$r20 := @caughtexception",
            "return 0.0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__PrintBoilerPlate__1887603335\\2773.smt2",
        "z3": {
            "memory": 32145408,
            "run_time": 0.08371543884277344,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 275 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9904128,
            "run_time": 0.015347719192504883,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35799040,
            "run_time": 0.04450058937072754,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 275 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 325640192,
            "run_time": 1.1492528915405273,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 90,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.CodeGenerator",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z0 == 0 goto $r54 = \"\"",
            "$r54 = \"\"",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjCheckNAdd(int state)\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r5",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r1)",
            "$r6 = newarray (java.lang.Object)[1]",
            "$r6[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r6)",
            "$r7 = newarray (java.lang.Object)[1]",
            "$r7[0] = \"   if (jjrounds[state] != jjround)\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r7)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"   {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r8)",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r9[0] = \"      jjstateSet[jjnewStateCnt++] = state;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r9)",
            "$r10 = newarray (java.lang.Object)[1]",
            "$r10[0] = \"      jjrounds[state] = jjround;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r10)",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \"   }\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r11)",
            "$r12 = newarray (java.lang.Object)[1]",
            "$r12[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r12)",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r14 = new java.lang.StringBuilder",
            "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()",
            "$z1 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z1 == 0 goto $r55 = \"\"",
            "$r55 = \"static \"",
            "goto [?= $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55)]",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjAddStates(int start, int end)\")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r13[0] = $r17",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r13)",
            "$r18 = newarray (java.lang.Object)[1]",
            "$r18[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r18)",
            "$r19 = newarray (java.lang.Object)[1]",
            "$r19[0] = \"   do {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r19)",
            "$r20 = newarray (java.lang.Object)[1]",
            "$r20[0] = \"      jjstateSet[jjnewStateCnt++] = jjnextStates[start];\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r20)",
            "$r21 = newarray (java.lang.Object)[1]",
            "$r21[0] = \"   } while (start++ != end);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r21)",
            "$r22 = newarray (java.lang.Object)[1]",
            "$r22[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r22)",
            "$r23 = newarray (java.lang.Object)[1]",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$z2 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z2 == 0 goto $r56 = \"\"",
            "$r56 = \"static \"",
            "goto [?= $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)]",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjCheckNAddTwoStates(int state1, int state2)\")",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r23[0] = $r27",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r23)",
            "$r28 = newarray (java.lang.Object)[1]",
            "$r28[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r28)",
            "$r29 = newarray (java.lang.Object)[1]",
            "$r29[0] = \"   jjCheckNAdd(state1);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r29)",
            "$r30 = newarray (java.lang.Object)[1]",
            "$r30[0] = \"   jjCheckNAdd(state2);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r30)",
            "$r31 = newarray (java.lang.Object)[1]",
            "$r31[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r31)",
            "$r32 = newarray (java.lang.Object)[1]",
            "$r32[0] = \"\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r32)",
            "$z3 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesDualNeeded>",
            "if $z3 == 0 goto $z6 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesUnaryNeeded>",
            "$z6 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesUnaryNeeded>",
            "if $z6 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__PrintBoilerPlate__1887603335\\2782.smt2",
        "z3": {
            "memory": 29503488,
            "run_time": 0.04523110389709473,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 274 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9961472,
            "run_time": 0.0157320499420166,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35786752,
            "run_time": 0.07642769813537598,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 274 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 324358144,
            "run_time": 1.1528401374816895,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 90,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.CodeGenerator",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z0 == 0 goto $r54 = \"\"",
            "$r54 = \"\"",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjCheckNAdd(int state)\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r5",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r1)",
            "$r6 = newarray (java.lang.Object)[1]",
            "$r6[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r6)",
            "$r7 = newarray (java.lang.Object)[1]",
            "$r7[0] = \"   if (jjrounds[state] != jjround)\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r7)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"   {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r8)",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r9[0] = \"      jjstateSet[jjnewStateCnt++] = state;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r9)",
            "$r10 = newarray (java.lang.Object)[1]",
            "$r10[0] = \"      jjrounds[state] = jjround;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r10)",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \"   }\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r11)",
            "$r12 = newarray (java.lang.Object)[1]",
            "$r12[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r12)",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r14 = new java.lang.StringBuilder",
            "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()",
            "$z1 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z1 == 0 goto $r55 = \"\"",
            "$r55 = \"static \"",
            "goto [?= $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55)]",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjAddStates(int start, int end)\")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r13[0] = $r17",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r13)",
            "$r18 = newarray (java.lang.Object)[1]",
            "$r18[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r18)",
            "$r19 = newarray (java.lang.Object)[1]",
            "$r19[0] = \"   do {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r19)",
            "$r20 = newarray (java.lang.Object)[1]",
            "$r20[0] = \"      jjstateSet[jjnewStateCnt++] = jjnextStates[start];\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r20)",
            "$r21 = newarray (java.lang.Object)[1]",
            "$r21[0] = \"   } while (start++ != end);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r21)",
            "$r22 = newarray (java.lang.Object)[1]",
            "$r22[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r22)",
            "$r23 = newarray (java.lang.Object)[1]",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$z2 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z2 == 0 goto $r56 = \"\"",
            "$r56 = \"\"",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjCheckNAddTwoStates(int state1, int state2)\")",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r23[0] = $r27",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r23)",
            "$r28 = newarray (java.lang.Object)[1]",
            "$r28[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r28)",
            "$r29 = newarray (java.lang.Object)[1]",
            "$r29[0] = \"   jjCheckNAdd(state1);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r29)",
            "$r30 = newarray (java.lang.Object)[1]",
            "$r30[0] = \"   jjCheckNAdd(state2);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r30)",
            "$r31 = newarray (java.lang.Object)[1]",
            "$r31[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r31)",
            "$r32 = newarray (java.lang.Object)[1]",
            "$r32[0] = \"\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r32)",
            "$z3 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesDualNeeded>",
            "if $z3 == 0 goto $z6 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesUnaryNeeded>",
            "$z6 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesUnaryNeeded>",
            "if $z6 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__PrintBoilerPlate__1887603335\\2790.smt2",
        "z3": {
            "memory": 31686656,
            "run_time": 0.04336404800415039,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 274 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9912320,
            "run_time": 0.015531063079833984,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35946496,
            "run_time": 0.04606962203979492,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 274 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 325746688,
            "run_time": 1.1806719303131104,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 90,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.CodeGenerator",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z0 == 0 goto $r54 = \"\"",
            "$r54 = \"\"",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjCheckNAdd(int state)\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r5",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r1)",
            "$r6 = newarray (java.lang.Object)[1]",
            "$r6[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r6)",
            "$r7 = newarray (java.lang.Object)[1]",
            "$r7[0] = \"   if (jjrounds[state] != jjround)\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r7)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"   {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r8)",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r9[0] = \"      jjstateSet[jjnewStateCnt++] = state;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r9)",
            "$r10 = newarray (java.lang.Object)[1]",
            "$r10[0] = \"      jjrounds[state] = jjround;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r10)",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \"   }\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r11)",
            "$r12 = newarray (java.lang.Object)[1]",
            "$r12[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r12)",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r14 = new java.lang.StringBuilder",
            "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()",
            "$z1 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z1 == 0 goto $r55 = \"\"",
            "$r55 = \"\"",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjAddStates(int start, int end)\")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r13[0] = $r17",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r13)",
            "$r18 = newarray (java.lang.Object)[1]",
            "$r18[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r18)",
            "$r19 = newarray (java.lang.Object)[1]",
            "$r19[0] = \"   do {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r19)",
            "$r20 = newarray (java.lang.Object)[1]",
            "$r20[0] = \"      jjstateSet[jjnewStateCnt++] = jjnextStates[start];\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r20)",
            "$r21 = newarray (java.lang.Object)[1]",
            "$r21[0] = \"   } while (start++ != end);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r21)",
            "$r22 = newarray (java.lang.Object)[1]",
            "$r22[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r22)",
            "$r23 = newarray (java.lang.Object)[1]",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$z2 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z2 == 0 goto $r56 = \"\"",
            "$r56 = \"static \"",
            "goto [?= $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)]",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjCheckNAddTwoStates(int state1, int state2)\")",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r23[0] = $r27",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r23)",
            "$r28 = newarray (java.lang.Object)[1]",
            "$r28[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r28)",
            "$r29 = newarray (java.lang.Object)[1]",
            "$r29[0] = \"   jjCheckNAdd(state1);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r29)",
            "$r30 = newarray (java.lang.Object)[1]",
            "$r30[0] = \"   jjCheckNAdd(state2);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r30)",
            "$r31 = newarray (java.lang.Object)[1]",
            "$r31[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r31)",
            "$r32 = newarray (java.lang.Object)[1]",
            "$r32[0] = \"\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r32)",
            "$z3 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesDualNeeded>",
            "if $z3 == 0 goto $z6 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesUnaryNeeded>",
            "$z6 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesUnaryNeeded>",
            "if $z6 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParser__ResultType__1872188680\\3018.smt2",
        "z3": {
            "memory": 32006144,
            "run_time": 60.00560688972473,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9945088,
            "run_time": 0.015576362609863281,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var871 is 3\r\n; rep: (as @var871_0 var871)\r\n; rep: (as @var871_1 var871)\r\n; rep: (as @var871_2 var871)\r\n; cardinality of var3878 is 2\r\n; rep: (as @var3878_0 var3878)\r\n; rep: (as @var3878_1 var3878)\r\n; cardinality of var1073 is 1\r\n; rep: (as @var1073_0 var1073)\r\n; cardinality of var448 is 1\r\n; rep: (as @var448_0 var448)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getToken/1999213251 ((_arg_1 var871) (_arg_2 Int)) var1073 (as @var1073_0 var1073))\r\n(define-fun jj_ntk/549669294 ((_arg_1 var871)) Int (ite (= (as @var871_1 var871) _arg_1) 78 0))\r\n(define-fun jj_consume_token/1648575159 ((BOUND_VARIABLE_881 var871) (BOUND_VARIABLE_882 Int)) var1073 (as @var1073_0 var1073))\r\n(define-fun jj_la1/549669294 ((BOUND_VARIABLE_885 var871)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun jj_gen/549669294 ((_arg_1 var871)) Int 0)\r\n(define-fun image/197050796 ((BOUND_VARIABLE_888 var1073)) String \"\")\r\n(define-fun isAllowed/-930151217 ((_arg_1 var871) (_arg_2 var1073)) Bool false)\r\n(define-fun var448-init () var448 (as @var448_0 var448))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1157378735 ((BOUND_VARIABLE_891 var448) (BOUND_VARIABLE_892 String)) void (as @void_0 void))\r\n(define-fun null-var871 () var871 (as @var871_0 var871))\r\n(define-fun null-var3878 () var3878 (as @var3878_0 var3878))\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var3455 () var871 (as @var871_1 var871))\r\n(define-fun var105 () var3878 (as @var3878_1 var3878))\r\n(define-fun var3455!1 () var871 (as @var871_2 var871))\r\n(define-fun var3328 () Int 0)\r\n(define-fun var540!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1738!1 () String \"\")\r\n(define-fun var1738!2 () String \"\")\r\n(define-fun var3067!1 () String \" is invalid in this context\")\r\n(define-fun var1!1 () var448 (as @var448_0 var448))\r\n(define-fun var2885!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36646912,
            "run_time": 0.04594826698303223,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var871:\n  ;;   var871!val!0 var871!val!1 var871!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var871!val!0 () var871)\n  (declare-fun var871!val!1 () var871)\n  (declare-fun var871!val!2 () var871)\n  ;; cardinality constraint:\n  (forall ((x var871))\n          (or (= x var871!val!0) (= x var871!val!1) (= x var871!val!2)))\n  ;; -----------\n  ;; universe for var1073:\n  ;;   var1073!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1073!val!0 () var1073)\n  ;; cardinality constraint:\n  (forall ((x var1073)) (= x var1073!val!0))\n  ;; -----------\n  ;; universe for var3878:\n  ;;   var3878!val!0 var3878!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3878!val!0 () var3878)\n  (declare-fun var3878!val!1 () var3878)\n  ;; cardinality constraint:\n  (forall ((x var3878)) (or (= x var3878!val!0) (= x var3878!val!1)))\n  ;; -----------\n  (define-fun var128 () var1073\n    (getToken/1999213251 var3455!1 0))\n  (define-fun var3455 () var871\n    var871!val!0)\n  (define-fun var1738 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var329 () Int\n    (jj_gen/549669294 var3455!1))\n  (define-fun null-var3878 () var3878\n    var3878!val!1)\n  (define-fun var678 () String\n    (image/197050796 (getToken/1999213251 var3455 1)))\n  (define-fun var540!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var2451 () var1073\n    (getToken/1999213251 var3455 1))\n  (define-fun var309 () Int\n    (jj_ntk/549669294 var3455!1))\n  (define-fun var1124 () String\n    (image/197050796 (getToken/1999213251 var3455 1)))\n  (define-fun var3067 () String\n    (str.++ var1738!1 (image/197050796 (getToken/1999213251 var3455 1))))\n  (define-fun var2885 () String\n    (str.++ var1738!1\n        (image/197050796 (getToken/1999213251 var3455 1))\n        \" is invalid in this context\"))\n  (define-fun var1265 () Bool\n    (isAllowed/-930151217 var3455!1 (getToken/1999213251 var3455 1)))\n  (define-fun var1995 () Int\n    (jj_ntk/549669294 var3455))\n  (define-fun null-var871 () var871\n    var871!val!1)\n  (define-fun var540 () (Array Int Int)\n    (jj_la1/549669294 var3455!1))\n  (define-fun var2834 () var1073\n    (getToken/1999213251 var3455 1))\n  (define-fun var251 () Int\n    (- 1))\n  (define-fun var3455!1 () var871\n    var871!val!2)\n  (define-fun var1753 () String\n    (str.++ var1738!1\n        (image/197050796 (getToken/1999213251 var3455 1))\n        \" is invalid in this context\"))\n  (define-fun var105 () var3878\n    var3878!val!0)\n  (define-fun var124 () Int\n    (- 1))\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 0 1))\n  (define-fun var1092 () Int\n    (jj_ntk/549669294 var3455))\n  (define-fun var1 () var448\n    var448-init)\n  (define-fun var1757 () Int\n    (jj_ntk/549669294 var3455!1))\n  (define-fun var1738!2 () String\n    \"\")\n  (define-fun var3067!1 () String\n    \" is invalid in this context\")\n  (define-fun var1738!1 () String\n    \"\")\n  (define-fun var1!1 () var448\n    var448!val!0)\n  (define-fun var2885!1 () String\n    \"\")\n  (define-fun var448-init () var448\n    var448!val!0)\n  (define-fun var3328 () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun jj_ntk/549669294 ((x!0 var871)) Int\n    (ite (= x!0 var871!val!2) 0\n      78))\n  (define-fun isAllowed/-930151217 ((x!0 var871) (x!1 var1073)) Bool\n    false)\n  (define-fun getToken/1999213251 ((x!0 var871) (x!1 Int)) var1073\n    var1073!val!0)\n  (define-fun jj_gen/549669294 ((x!0 var871)) Int\n    0)\n  (define-fun image/197050796 ((x!0 var1073)) String\n    \"\")\n  (define-fun jj_la1/549669294 ((x!0 var871)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun jj_consume_token/1648575159 ((x!0 var871) (x!1 Int)) var1073\n    var1073!val!0)\n  (define-fun <init>/1157378735 ((x!0 var448) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 98 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 187789312,
            "run_time": 0.9501683712005615,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3878/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCParser__ResultType__1872188680\\3018.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_35_3 =\r\n     concat(var1738!2, \" is invalid in this context\")\r\n   var3067!1 =\r\n     concat(var1738!2, \" is invalid in this context\")\r\n\r\n711ms\r\n"
        },
        "undefined_function_count": 10,
        "assertion_count": 26,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCCParser",
            "r16 := @parameter0: java.util.List",
            "r1 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(1)",
            "if r16 != null goto $i0 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i0 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i16 = (int) -1",
            "if $i0 != $i16 goto $i10 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i10 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "lookupswitch($i10) {     case 30: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 32: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 35: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 37: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 41: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 48: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 55: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 57: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 66: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 78: goto specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(78);     case 81: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 110: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 151: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     default: goto $r13 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>; }",
            "specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(78)",
            "$i1 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i18 = (int) -1",
            "if $i1 != $i18 goto $i11 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i11 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "lookupswitch($i11) {     case 121: goto specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(121);     default: goto $r8 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>; }",
            "$r8 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>",
            "$i2 = r0.<org.javacc.parser.JavaCCParser: int jj_gen>",
            "$r8[114] = $i2",
            "goto [?= $r17 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(0)]",
            "$r17 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(0)",
            "r18 = r1",
            "$r19 = r18.<org.javacc.parser.Token: java.lang.String image>",
            "$z0 = specialinvoke r0.<org.javacc.parser.JavaCCParser: boolean isAllowed(org.javacc.parser.Token)>(r18)",
            "if $z0 == 0 goto $r24 = new org.javacc.parser.ParseException",
            "$r24 = new org.javacc.parser.ParseException",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = r18.<org.javacc.parser.Token: java.lang.String image>",
            "$r5 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is invalid in this context\")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r24.<org.javacc.parser.ParseException: void <init>(java.lang.String)>($r7)",
            "throw $r24"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParser__ResultType__1872188680\\2862.smt2",
        "z3": {
            "memory": 32055296,
            "run_time": 60.00311326980591,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9945088,
            "run_time": 0.015569686889648438,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3400 is 3\r\n; rep: (as @var3400_0 var3400)\r\n; rep: (as @var3400_1 var3400)\r\n; rep: (as @var3400_2 var3400)\r\n; cardinality of var1466 is 2\r\n; rep: (as @var1466_0 var1466)\r\n; rep: (as @var1466_1 var1466)\r\n; cardinality of var1608 is 1\r\n; rep: (as @var1608_0 var1608)\r\n; cardinality of var806 is 1\r\n; rep: (as @var806_0 var806)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getToken/1999213251 ((_arg_1 var3400) (_arg_2 Int)) var1608 (as @var1608_0 var1608))\r\n(define-fun jj_ntk/549669294 ((_arg_1 var3400)) Int (ite (= (as @var3400_1 var3400) _arg_1) (- 1) 0))\r\n(define-fun jj_ntk/-941081802 ((_arg_1 var3400)) Int 78)\r\n(define-fun jj_consume_token/1648575159 ((BOUND_VARIABLE_891 var3400) (BOUND_VARIABLE_892 Int)) var1608 (as @var1608_0 var1608))\r\n(define-fun jj_la1/549669294 ((BOUND_VARIABLE_895 var3400)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun jj_gen/549669294 ((_arg_1 var3400)) Int 0)\r\n(define-fun image/197050796 ((BOUND_VARIABLE_898 var1608)) String \"\")\r\n(define-fun isAllowed/-930151217 ((_arg_1 var3400) (_arg_2 var1608)) Bool false)\r\n(define-fun var806-init () var806 (as @var806_0 var806))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1157378735 ((BOUND_VARIABLE_901 var806) (BOUND_VARIABLE_902 String)) void (as @void_0 void))\r\n(define-fun null-var3400 () var3400 (as @var3400_0 var3400))\r\n(define-fun null-var1466 () var1466 (as @var1466_0 var1466))\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var2432 () var3400 (as @var3400_1 var3400))\r\n(define-fun var1420 () var1466 (as @var1466_1 var1466))\r\n(define-fun var2432!1 () var3400 (as @var3400_2 var3400))\r\n(define-fun var100 () Int 0)\r\n(define-fun var1305!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1724!1 () String \"\")\r\n(define-fun var1724!2 () String \"\")\r\n(define-fun var2873!1 () String \" is invalid in this context\")\r\n(define-fun var3725!1 () var806 (as @var806_0 var806))\r\n(define-fun var2516!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35766272,
            "run_time": 0.07753586769104004,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1608:\n  ;;   var1608!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1608!val!0 () var1608)\n  ;; cardinality constraint:\n  (forall ((x var1608)) (= x var1608!val!0))\n  ;; -----------\n  ;; universe for var3400:\n  ;;   var3400!val!2 var3400!val!0 var3400!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3400!val!2 () var3400)\n  (declare-fun var3400!val!0 () var3400)\n  (declare-fun var3400!val!1 () var3400)\n  ;; cardinality constraint:\n  (forall ((x var3400))\n          (or (= x var3400!val!2) (= x var3400!val!0) (= x var3400!val!1)))\n  ;; -----------\n  ;; universe for var1466:\n  ;;   var1466!val!0 var1466!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1466!val!0 () var1466)\n  (declare-fun var1466!val!1 () var1466)\n  ;; cardinality constraint:\n  (forall ((x var1466)) (or (= x var1466!val!0) (= x var1466!val!1)))\n  ;; -----------\n  (define-fun var3725 () var806\n    var806-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2516 () String\n    (str.++ var1724!1\n        (image/197050796 (getToken/1999213251 var2432 1))\n        \" is invalid in this context\"))\n  (define-fun var2873 () String\n    (str.++ var1724!1 (image/197050796 (getToken/1999213251 var2432 1))))\n  (define-fun var796 () var1608\n    (getToken/1999213251 var2432 1))\n  (define-fun var1305!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var2127 () Int\n    (jj_ntk/549669294 var2432!1))\n  (define-fun var689 () var1608\n    (getToken/1999213251 var2432 1))\n  (define-fun var1568 () Int\n    (jj_ntk/549669294 var2432!1))\n  (define-fun var2066 () Int\n    (- 1))\n  (define-fun null-var1466 () var1466\n    var1466!val!1)\n  (define-fun var3362 () String\n    (image/197050796 (getToken/1999213251 var2432 1)))\n  (define-fun var335 () Int\n    (jj_gen/549669294 var2432!1))\n  (define-fun var1951 () var1608\n    (getToken/1999213251 var2432!1 0))\n  (define-fun var1305 () (Array Int Int)\n    (jj_la1/549669294 var2432!1))\n  (define-fun null-var3400 () var3400\n    var3400!val!1)\n  (define-fun var2432 () var3400\n    var3400!val!0)\n  (define-fun var1420 () var1466\n    var1466!val!0)\n  (define-fun var1821 () Int\n    (- 1))\n  (define-fun var2432!1 () var3400\n    var3400!val!2)\n  (define-fun var2542 () Int\n    (jj_ntk/549669294 var2432))\n  (define-fun var2736 () Int\n    (jj_ntk/-941081802 var2432))\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 0 1))\n  (define-fun var2299 () Bool\n    (isAllowed/-930151217 var2432!1 (getToken/1999213251 var2432 1)))\n  (define-fun var2013 () String\n    (image/197050796 (getToken/1999213251 var2432 1)))\n  (define-fun var1548 () String\n    (str.++ var1724!1\n        (image/197050796 (getToken/1999213251 var2432 1))\n        \" is invalid in this context\"))\n  (define-fun var1724 () String\n    String-init)\n  (define-fun var1724!2 () String\n    \"\")\n  (define-fun var1724!1 () String\n    \"\")\n  (define-fun var2873!1 () String\n    \" is invalid in this context\")\n  (define-fun var100 () Int\n    0)\n  (define-fun var3725!1 () var806\n    var806!val!0)\n  (define-fun var806-init () var806\n    var806!val!0)\n  (define-fun var2516!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun jj_ntk/549669294 ((x!0 var3400)) Int\n    (ite (= x!0 var3400!val!2) 0\n      (- 1)))\n  (define-fun jj_ntk/-941081802 ((x!0 var3400)) Int\n    78)\n  (define-fun getToken/1999213251 ((x!0 var3400) (x!1 Int)) var1608\n    var1608!val!0)\n  (define-fun isAllowed/-930151217 ((x!0 var3400) (x!1 var1608)) Bool\n    false)\n  (define-fun jj_gen/549669294 ((x!0 var3400)) Int\n    0)\n  (define-fun image/197050796 ((x!0 var1608)) String\n    \"\")\n  (define-fun jj_la1/549669294 ((x!0 var3400)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun jj_consume_token/1648575159 ((x!0 var3400) (x!1 Int)) var1608\n    var1608!val!0)\n  (define-fun <init>/1157378735 ((x!0 var806) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 101 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 185057280,
            "run_time": 0.9482333660125732,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3400/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCParser__ResultType__1872188680\\2862.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_33_3 =\r\n     concat(var1724!2, \" is invalid in this context\")\r\n   var2873!1 =\r\n     concat(var1724!2, \" is invalid in this context\")\r\n\r\n706ms\r\n"
        },
        "undefined_function_count": 11,
        "assertion_count": 27,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCCParser",
            "r16 := @parameter0: java.util.List",
            "r1 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(1)",
            "if r16 != null goto $i0 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i0 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i16 = (int) -1",
            "if $i0 != $i16 goto $i10 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i10 = specialinvoke r0.<org.javacc.parser.JavaCCParser: int jj_ntk()>()",
            "goto [?= (branch)]",
            "lookupswitch($i10) {     case 30: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 32: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 35: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 37: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 41: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 48: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 55: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 57: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 66: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 78: goto specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(78);     case 81: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 110: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 151: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     default: goto $r13 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>; }",
            "specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(78)",
            "$i1 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i18 = (int) -1",
            "if $i1 != $i18 goto $i11 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i11 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "lookupswitch($i11) {     case 121: goto specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(121);     default: goto $r8 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>; }",
            "$r8 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>",
            "$i2 = r0.<org.javacc.parser.JavaCCParser: int jj_gen>",
            "$r8[114] = $i2",
            "goto [?= $r17 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(0)]",
            "$r17 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(0)",
            "r18 = r1",
            "$r19 = r18.<org.javacc.parser.Token: java.lang.String image>",
            "$z0 = specialinvoke r0.<org.javacc.parser.JavaCCParser: boolean isAllowed(org.javacc.parser.Token)>(r18)",
            "if $z0 == 0 goto $r24 = new org.javacc.parser.ParseException",
            "$r24 = new org.javacc.parser.ParseException",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = r18.<org.javacc.parser.Token: java.lang.String image>",
            "$r5 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is invalid in this context\")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r24.<org.javacc.parser.ParseException: void <init>(java.lang.String)>($r7)",
            "throw $r24"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCharStream__GetImage__-548567356\\1637.smt2",
        "z3": {
            "memory": 31948800,
            "run_time": 0.05908036231994629,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1974:\r\n  ;;   var1974!val!0 var1974!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1974!val!0 () var1974)\r\n  (declare-fun var1974!val!1 () var1974)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1974)) (or (= x var1974!val!0) (= x var1974!val!1)))\r\n  ;; -----------\r\n  (define-fun var3777 () Int\r\n    (- (bufpos/-1620628507 var2895) (tokenBegin/-1620628507 var2895)))\r\n  (define-fun var2458 () Int\r\n    (tokenBegin/-1620628507 var2895))\r\n  (define-fun var1151 () Int\r\n    (tokenBegin/-1620628507 var2895))\r\n  (define-fun var2090 () Int\r\n    (bufpos/-1620628507 var2895))\r\n  (define-fun var3168 () Int\r\n    (bufpos/-1620628507 var2895))\r\n  (define-fun var2895 () var1974\r\n    var1974!val!0)\r\n  (define-fun var3973 () Int\r\n    (+ (- (bufpos/-1620628507 var2895) (tokenBegin/-1620628507 var2895)) 1))\r\n  (define-fun null-var1974 () var1974\r\n    var1974!val!1)\r\n  (define-fun var2110 () Int\r\n    (tokenBegin/-1620628507 var2895))\r\n  (define-fun var2479 () String\r\n    String-init)\r\n  (define-fun var785 () (Array Int Int)\r\n    (buffer/-1620628507 var2895))\r\n  (define-fun var785!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var1151!1 () Int\r\n    0)\r\n  (define-fun var2479!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3973!1 () Int\r\n    0)\r\n  (define-fun bufpos/-1620628507 ((x!0 var1974)) Int\r\n    0)\r\n  (define-fun tokenBegin/-1620628507 ((x!0 var1974)) Int\r\n    0)\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n  (define-fun buffer/-1620628507 ((x!0 var1974)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9969664,
            "run_time": 0.015677452087402344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1974 is 2\r\n; rep: (as @var1974_0 var1974)\r\n; rep: (as @var1974_1 var1974)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun bufpos/-1620628507 ((_arg_1 var1974)) Int 0)\r\n(define-fun tokenBegin/-1620628507 ((_arg_1 var1974)) Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun buffer/-1620628507 ((BOUND_VARIABLE_486 var1974)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_491 String) (BOUND_VARIABLE_492 (Array Int Int)) (BOUND_VARIABLE_493 Int) (BOUND_VARIABLE_494 Int)) void (as @void_0 void))\r\n(define-fun null-var1974 () var1974 (as @var1974_0 var1974))\r\n(define-fun var2895 () var1974 (as @var1974_1 var1974))\r\n(define-fun var2479!1 () String \"\")\r\n(define-fun var785!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1151!1 () Int 0)\r\n(define-fun var3973!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35725312,
            "run_time": 0.07591652870178223,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1974:\n  ;;   var1974!val!0 var1974!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1974!val!0 () var1974)\n  (declare-fun var1974!val!1 () var1974)\n  ;; cardinality constraint:\n  (forall ((x var1974)) (or (= x var1974!val!0) (= x var1974!val!1)))\n  ;; -----------\n  (define-fun var2458 () Int\n    (tokenBegin/-1620628507 var2895))\n  (define-fun var785 () (Array Int Int)\n    (buffer/-1620628507 var2895))\n  (define-fun var3777 () Int\n    (- (bufpos/-1620628507 var2895) (tokenBegin/-1620628507 var2895)))\n  (define-fun var1151 () Int\n    (tokenBegin/-1620628507 var2895))\n  (define-fun var2479 () String\n    String-init)\n  (define-fun var2895 () var1974\n    var1974!val!0)\n  (define-fun var2090 () Int\n    (bufpos/-1620628507 var2895))\n  (define-fun null-var1974 () var1974\n    var1974!val!1)\n  (define-fun var3168 () Int\n    (bufpos/-1620628507 var2895))\n  (define-fun var3973 () Int\n    (+ (- (bufpos/-1620628507 var2895) (tokenBegin/-1620628507 var2895)) 1))\n  (define-fun var2110 () Int\n    (tokenBegin/-1620628507 var2895))\n  (define-fun var785!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var1151!1 () Int\n    0)\n  (define-fun var2479!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3973!1 () Int\n    0)\n  (define-fun bufpos/-1620628507 ((x!0 var1974)) Int\n    0)\n  (define-fun tokenBegin/-1620628507 ((x!0 var1974)) Int\n    0)\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n  (define-fun buffer/-1620628507 ((x!0 var1974)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n)\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168284160,
            "run_time": 0.7756056785583496,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2895 () var1974 var1974!4)\r\n  (define-fun null-var1974 () var1974 var1974!2)\r\n  (define-fun tokenBegin/-1620628507 ((x!0 var1974)) Int (ite (= x!0 var1974!4) 7 0))\r\n  (define-fun bufpos/-1620628507 ((x!0 var1974)) Int (ite (= x!0 var1974!4) 7 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: void <init>(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCharStream",
            "$i1 = r0.<org.javacc.parser.JavaCharStream: int bufpos>",
            "$i0 = r0.<org.javacc.parser.JavaCharStream: int tokenBegin>",
            "if $i1 < $i0 goto $r1 = new java.lang.StringBuilder",
            "$r9 = new java.lang.String",
            "$r10 = r0.<org.javacc.parser.JavaCharStream: char[] buffer>",
            "$i12 = r0.<org.javacc.parser.JavaCharStream: int tokenBegin>",
            "$i9 = r0.<org.javacc.parser.JavaCharStream: int bufpos>",
            "$i8 = r0.<org.javacc.parser.JavaCharStream: int tokenBegin>",
            "$i10 = $i9 - $i8",
            "$i11 = $i10 + 1",
            "specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r10, $i12, $i11)",
            "return $r9"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCParser__ResultType__1872188680\\2864.smt2",
        "z3": {
            "memory": 16216064,
            "run_time": 0.05963706970214844,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1521:\r\n  ;;   var1521!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1521!val!0 () var1521)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1521)) (= x var1521!val!0))\r\n  ;; -----------\r\n  ;; universe for var678:\r\n  ;;   var678!val!0 var678!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var678!val!0 () var678)\r\n  (declare-fun var678!val!1 () var678)\r\n  ;; cardinality constraint:\r\n  (forall ((x var678)) (or (= x var678!val!0) (= x var678!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1650:\r\n  ;;   var1650!val!2 var1650!val!0 var1650!val!1 var1650!val!3 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1650!val!2 () var1650)\r\n  (declare-fun var1650!val!0 () var1650)\r\n  (declare-fun var1650!val!1 () var1650)\r\n  (declare-fun var1650!val!3 () var1650)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1650))\r\n          (or (= x var1650!val!2)\r\n              (= x var1650!val!0)\r\n              (= x var1650!val!1)\r\n              (= x var1650!val!3)))\r\n  ;; -----------\r\n  (define-fun var438 () var678\r\n    var678!val!0)\r\n  (define-fun var2587 () var1932\r\n    var1932-init)\r\n  (define-fun var762 () String\r\n    (str.++ var3707!1\r\n        (image/197050796 (getToken/1999213251 var1563 1))\r\n        \" is invalid in this context\"))\r\n  (define-fun var3961 () Int\r\n    (jj_ntk/549669294 var1563))\r\n  (define-fun var3037 () var1521\r\n    (getToken/1999213251 var1563!2 0))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3000 () Int\r\n    (- 1))\r\n  (define-fun var346 () Int\r\n    (jj_ntk/-941081802 var1563!1))\r\n  (define-fun var61 () Int\r\n    (jj_ntk/549669294 var1563!1))\r\n  (define-fun var1563!2 () var1650\r\n    var1650!val!3)\r\n  (define-fun var2968 () String\r\n    (image/197050796 (getToken/1999213251 var1563 1)))\r\n  (define-fun var1742 () String\r\n    (str.++ var3707!1 (image/197050796 (getToken/1999213251 var1563 1))))\r\n  (define-fun var1563!1 () var1650\r\n    var1650!val!2)\r\n  (define-fun var3618 () Int\r\n    (jj_ntk/549669294 var1563))\r\n  (define-fun var3707 () String\r\n    String-init)\r\n  (define-fun var3658 () var1521\r\n    (getToken/1999213251 var1563 1))\r\n  (define-fun var1563 () var1650\r\n    var1650!val!0)\r\n  (define-fun null-var1650 () var1650\r\n    var1650!val!1)\r\n  (define-fun var3358 () Int\r\n    (- 1))\r\n  (define-fun var2363 () var1521\r\n    (getToken/1999213251 var1563 1))\r\n  (define-fun null-var678 () var678\r\n    var678!val!1)\r\n  (define-fun var224 () Bool\r\n    (isAllowed/-930151217 var1563!2 (getToken/1999213251 var1563 1)))\r\n  (define-fun var2449 () String\r\n    (image/197050796 (getToken/1999213251 var1563 1)))\r\n  (define-fun var2012 () String\r\n    (str.++ var3707!1\r\n        (image/197050796 (getToken/1999213251 var1563 1))\r\n        \" is invalid in this context\"))\r\n  (define-fun var3707!1 () String\r\n    \"\")\r\n  (define-fun var3707!2 () String\r\n    \"\")\r\n  (define-fun var1742!1 () String\r\n    \" is invalid in this context\")\r\n  (define-fun var1932-init () var1932\r\n    var1932!val!0)\r\n  (define-fun var2587!1 () var1932\r\n    var1932!val!0)\r\n  (define-fun var1097 () Int\r\n    0)\r\n  (define-fun var1367 () Int\r\n    0)\r\n  (define-fun var2012!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun jj_ntk/549669294 ((x!0 var1650)) Int\r\n    (ite (= x!0 var1650!val!2) (- 1)\r\n      78))\r\n  (define-fun jj_ntk/-941081802 ((x!0 var1650)) Int\r\n    121)\r\n  (define-fun getToken/1999213251 ((x!0 var1650) (x!1 Int)) var1521\r\n    var1521!val!0)\r\n  (define-fun isAllowed/-930151217 ((x!0 var1650) (x!1 var1521)) Bool\r\n    false)\r\n  (define-fun image/197050796 ((x!0 var1521)) String\r\n    \"\")\r\n  (define-fun jj_consume_token/1648575159 ((x!0 var1650) (x!1 Int)) var1521\r\n    var1521!val!0)\r\n  (define-fun <init>/1157378735 ((x!0 var1932) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 98 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9969664,
            "run_time": 0.014801502227783203,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1650 is 4\r\n; rep: (as @var1650_0 var1650)\r\n; rep: (as @var1650_1 var1650)\r\n; rep: (as @var1650_2 var1650)\r\n; rep: (as @var1650_3 var1650)\r\n; cardinality of var678 is 2\r\n; rep: (as @var678_0 var678)\r\n; rep: (as @var678_1 var678)\r\n; cardinality of var1521 is 1\r\n; rep: (as @var1521_0 var1521)\r\n; cardinality of var1932 is 1\r\n; rep: (as @var1932_0 var1932)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getToken/1999213251 ((_arg_1 var1650) (_arg_2 Int)) var1521 (as @var1521_0 var1521))\r\n(define-fun jj_ntk/549669294 ((_arg_1 var1650)) Int (ite (= (as @var1650_1 var1650) _arg_1) 78 (- 1)))\r\n(define-fun jj_consume_token/1648575159 ((BOUND_VARIABLE_809 var1650) (BOUND_VARIABLE_810 Int)) var1521 (as @var1521_0 var1521))\r\n(define-fun jj_ntk/-941081802 ((_arg_1 var1650)) Int 121)\r\n(define-fun image/197050796 ((BOUND_VARIABLE_813 var1521)) String \"\")\r\n(define-fun isAllowed/-930151217 ((_arg_1 var1650) (_arg_2 var1521)) Bool false)\r\n(define-fun var1932-init () var1932 (as @var1932_0 var1932))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1157378735 ((BOUND_VARIABLE_816 var1932) (BOUND_VARIABLE_817 String)) void (as @void_0 void))\r\n(define-fun null-var1650 () var1650 (as @var1650_0 var1650))\r\n(define-fun null-var678 () var678 (as @var678_0 var678))\r\n(define-fun var1563 () var1650 (as @var1650_1 var1650))\r\n(define-fun var438 () var678 (as @var678_1 var678))\r\n(define-fun var1563!1 () var1650 (as @var1650_2 var1650))\r\n(define-fun var1097 () Int 0)\r\n(define-fun var1563!2 () var1650 (as @var1650_3 var1650))\r\n(define-fun var1367 () Int 0)\r\n(define-fun var3707!1 () String \"\")\r\n(define-fun var3707!2 () String \"\")\r\n(define-fun var1742!1 () String \" is invalid in this context\")\r\n(define-fun var2587!1 () var1932 (as @var1932_0 var1932))\r\n(define-fun var2012!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36290560,
            "run_time": 0.046900272369384766,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1521:\n  ;;   var1521!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1521!val!0 () var1521)\n  ;; cardinality constraint:\n  (forall ((x var1521)) (= x var1521!val!0))\n  ;; -----------\n  ;; universe for var678:\n  ;;   var678!val!0 var678!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var678!val!0 () var678)\n  (declare-fun var678!val!1 () var678)\n  ;; cardinality constraint:\n  (forall ((x var678)) (or (= x var678!val!0) (= x var678!val!1)))\n  ;; -----------\n  ;; universe for var1650:\n  ;;   var1650!val!2 var1650!val!0 var1650!val!1 var1650!val!3 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1650!val!2 () var1650)\n  (declare-fun var1650!val!0 () var1650)\n  (declare-fun var1650!val!1 () var1650)\n  (declare-fun var1650!val!3 () var1650)\n  ;; cardinality constraint:\n  (forall ((x var1650))\n          (or (= x var1650!val!2)\n              (= x var1650!val!0)\n              (= x var1650!val!1)\n              (= x var1650!val!3)))\n  ;; -----------\n  (define-fun var61 () Int\n    (jj_ntk/549669294 var1563!1))\n  (define-fun var2012 () String\n    (str.++ var3707!1\n        (image/197050796 (getToken/1999213251 var1563 1))\n        \" is invalid in this context\"))\n  (define-fun var762 () String\n    (str.++ var3707!1\n        (image/197050796 (getToken/1999213251 var1563 1))\n        \" is invalid in this context\"))\n  (define-fun var438 () var678\n    var678!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2968 () String\n    (image/197050796 (getToken/1999213251 var1563 1)))\n  (define-fun var3618 () Int\n    (jj_ntk/549669294 var1563))\n  (define-fun var1742 () String\n    (str.++ var3707!1 (image/197050796 (getToken/1999213251 var1563 1))))\n  (define-fun var3658 () var1521\n    (getToken/1999213251 var1563 1))\n  (define-fun var3358 () Int\n    (- 1))\n  (define-fun var1563!2 () var1650\n    var1650!val!3)\n  (define-fun var2363 () var1521\n    (getToken/1999213251 var1563 1))\n  (define-fun var3707 () String\n    String-init)\n  (define-fun var224 () Bool\n    (isAllowed/-930151217 var1563!2 (getToken/1999213251 var1563 1)))\n  (define-fun var1563!1 () var1650\n    var1650!val!2)\n  (define-fun var2449 () String\n    (image/197050796 (getToken/1999213251 var1563 1)))\n  (define-fun var1563 () var1650\n    var1650!val!0)\n  (define-fun null-var1650 () var1650\n    var1650!val!1)\n  (define-fun var2587 () var1932\n    var1932-init)\n  (define-fun var3961 () Int\n    (jj_ntk/549669294 var1563))\n  (define-fun null-var678 () var678\n    var678!val!1)\n  (define-fun var3037 () var1521\n    (getToken/1999213251 var1563!2 0))\n  (define-fun var3000 () Int\n    (- 1))\n  (define-fun var346 () Int\n    (jj_ntk/-941081802 var1563!1))\n  (define-fun var3707!1 () String\n    \"\")\n  (define-fun var3707!2 () String\n    \"\")\n  (define-fun var1742!1 () String\n    \" is invalid in this context\")\n  (define-fun var1932-init () var1932\n    var1932!val!0)\n  (define-fun var2587!1 () var1932\n    var1932!val!0)\n  (define-fun var1097 () Int\n    0)\n  (define-fun var1367 () Int\n    0)\n  (define-fun var2012!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun jj_ntk/549669294 ((x!0 var1650)) Int\n    (ite (= x!0 var1650!val!2) (- 1)\n      78))\n  (define-fun jj_ntk/-941081802 ((x!0 var1650)) Int\n    121)\n  (define-fun getToken/1999213251 ((x!0 var1650) (x!1 Int)) var1521\n    var1521!val!0)\n  (define-fun isAllowed/-930151217 ((x!0 var1650) (x!1 var1521)) Bool\n    false)\n  (define-fun image/197050796 ((x!0 var1521)) String\n    \"\")\n  (define-fun jj_consume_token/1648575159 ((x!0 var1650) (x!1 Int)) var1521\n    var1521!val!0)\n  (define-fun <init>/1157378735 ((x!0 var1932) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 98 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169390080,
            "run_time": 0.961801290512085,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var678/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCParser__ResultType__1872188680\\2864.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_28_3 =\r\n     concat(var3707!2, \" is invalid in this context\")\r\n   var1742!1 =\r\n     concat(var3707!2, \" is invalid in this context\")\r\n\r\n694ms\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 26,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCCParser",
            "r16 := @parameter0: java.util.List",
            "r1 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(1)",
            "if r16 != null goto $i0 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i0 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i16 = (int) -1",
            "if $i0 != $i16 goto $i10 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i10 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "lookupswitch($i10) {     case 30: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 32: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 35: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 37: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 41: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 48: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 55: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 57: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 66: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 78: goto specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(78);     case 81: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 110: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     case 151: goto $i3 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>;     default: goto $r13 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>; }",
            "specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(78)",
            "$i1 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i18 = (int) -1",
            "if $i1 != $i18 goto $i11 = r0.<org.javacc.parser.JavaCCParser: int jj_ntk>",
            "$i11 = specialinvoke r0.<org.javacc.parser.JavaCCParser: int jj_ntk()>()",
            "goto [?= (branch)]",
            "lookupswitch($i11) {     case 121: goto specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(121);     default: goto $r8 = r0.<org.javacc.parser.JavaCCParser: int[] jj_la1>; }",
            "specialinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token jj_consume_token(int)>(121)",
            "goto [?= $r17 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(0)]",
            "$r17 = virtualinvoke r0.<org.javacc.parser.JavaCCParser: org.javacc.parser.Token getToken(int)>(0)",
            "r18 = r1",
            "$r19 = r18.<org.javacc.parser.Token: java.lang.String image>",
            "$z0 = specialinvoke r0.<org.javacc.parser.JavaCCParser: boolean isAllowed(org.javacc.parser.Token)>(r18)",
            "if $z0 == 0 goto $r24 = new org.javacc.parser.ParseException",
            "$r24 = new org.javacc.parser.ParseException",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = r18.<org.javacc.parser.Token: java.lang.String image>",
            "$r5 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is invalid in this context\")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r24.<org.javacc.parser.ParseException: void <init>(java.lang.String)>($r7)",
            "throw $r24"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCharStream__GetImage__-548567356\\1663.smt2",
        "z3": {
            "memory": 28598272,
            "run_time": 0.09165143966674805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var465:\r\n  ;;   var465!val!0 var465!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var465!val!0 () var465)\r\n  (declare-fun var465!val!1 () var465)\r\n  ;; cardinality constraint:\r\n  (forall ((x var465)) (or (= x var465!val!0) (= x var465!val!1)))\r\n  ;; -----------\r\n  (define-fun var1377 () Int\r\n    (bufsize/-1620628507 var1206))\r\n  (define-fun var676 () String\r\n    (str.++ var981!1 var544!1 var2539!1))\r\n  (define-fun var3029 () Int\r\n    (- (bufsize/-1620628507 var1206) (tokenBegin/-1620628507 var1206)))\r\n  (define-fun var544 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2089 () Int\r\n    (bufpos/-1620628507 var1206))\r\n  (define-fun var1206 () var465\r\n    var465!val!0)\r\n  (define-fun null-var465 () var465\r\n    var465!val!1)\r\n  (define-fun var2539 () String\r\n    String-init)\r\n  (define-fun var500 () Int\r\n    (bufpos/-1620628507 var1206))\r\n  (define-fun var3318 () String\r\n    (str.++ var981!1 var544!1 var2539!1))\r\n  (define-fun var666 () Int\r\n    (tokenBegin/-1620628507 var1206))\r\n  (define-fun var984 () String\r\n    (str.++ var981!1 var544!1))\r\n  (define-fun var1728 () Int\r\n    (tokenBegin/-1620628507 var1206))\r\n  (define-fun var2284 () Int\r\n    (tokenBegin/-1620628507 var1206))\r\n  (define-fun var2166 () Int\r\n    (+ (bufpos/-1620628507 var1206) 1))\r\n  (define-fun var1093 () (Array Int Int)\r\n    (buffer/-1620628507 var1206))\r\n  (define-fun var3692 () (Array Int Int)\r\n    (buffer/-1620628507 var1206))\r\n  (define-fun var981 () String\r\n    String-init)\r\n  (define-fun var981!1 () String\r\n    \"\")\r\n  (define-fun var544!1 () String\r\n    \"\")\r\n  (define-fun var981!2 () String\r\n    \"\")\r\n  (define-fun var2539!1 () String\r\n    \"\")\r\n  (define-fun var984!1 () String\r\n    \"\")\r\n  (define-fun var2166!1 () Int\r\n    0)\r\n  (define-fun var1728!1 () Int\r\n    0)\r\n  (define-fun var3692!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var2005 () Int\r\n    0)\r\n  (define-fun var3029!1 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1093!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun bufpos/-1620628507 ((x!0 var465)) Int\r\n    0)\r\n  (define-fun tokenBegin/-1620628507 ((x!0 var465)) Int\r\n    1)\r\n  (define-fun buffer/-1620628507 ((x!0 var465)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun bufsize/-1620628507 ((x!0 var465)) Int\r\n    0)\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 66 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9969664,
            "run_time": 0.015514135360717773,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var465 is 2\r\n; rep: (as @var465_0 var465)\r\n; rep: (as @var465_1 var465)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun bufpos/-1620628507 ((_arg_1 var465)) Int (- 1))\r\n(define-fun tokenBegin/-1620628507 ((_arg_1 var465)) Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun buffer/-1620628507 ((BOUND_VARIABLE_592 var465)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun bufsize/-1620628507 ((BOUND_VARIABLE_597 var465)) Int 0)\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_600 String) (BOUND_VARIABLE_601 (Array Int Int)) (BOUND_VARIABLE_602 Int) (BOUND_VARIABLE_603 Int)) void (as @void_0 void))\r\n(define-fun null-var465 () var465 (as @var465_0 var465))\r\n(define-fun var1206 () var465 (as @var465_1 var465))\r\n(define-fun var981!1 () String \"\")\r\n(define-fun var544!1 () String \"\")\r\n(define-fun var1093!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1728!1 () Int 0)\r\n(define-fun var3029!1 () Int 0)\r\n(define-fun var981!2 () String \"\")\r\n(define-fun var2539!1 () String \"\")\r\n(define-fun var3692!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2005 () Int 0)\r\n(define-fun var2166!1 () Int 0)\r\n(define-fun var984!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36704256,
            "run_time": 0.06241893768310547,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var465:\n  ;;   var465!val!0 var465!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var465!val!0 () var465)\n  (declare-fun var465!val!1 () var465)\n  ;; cardinality constraint:\n  (forall ((x var465)) (or (= x var465!val!0) (= x var465!val!1)))\n  ;; -----------\n  (define-fun var666 () Int\n    (tokenBegin/-1620628507 var1206))\n  (define-fun var544 () String\n    String-init)\n  (define-fun var500 () Int\n    (bufpos/-1620628507 var1206))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1093 () (Array Int Int)\n    (buffer/-1620628507 var1206))\n  (define-fun var3692 () (Array Int Int)\n    (buffer/-1620628507 var1206))\n  (define-fun var984 () String\n    (str.++ var981!1 var544!1))\n  (define-fun var2539 () String\n    String-init)\n  (define-fun var1206 () var465\n    var465!val!0)\n  (define-fun null-var465 () var465\n    var465!val!1)\n  (define-fun var3318 () String\n    (str.++ var981!1 var544!1 var2539!1))\n  (define-fun var1728 () Int\n    (tokenBegin/-1620628507 var1206))\n  (define-fun var2284 () Int\n    (tokenBegin/-1620628507 var1206))\n  (define-fun var2166 () Int\n    (+ (bufpos/-1620628507 var1206) 1))\n  (define-fun var3029 () Int\n    (- (bufsize/-1620628507 var1206) (tokenBegin/-1620628507 var1206)))\n  (define-fun var1377 () Int\n    (bufsize/-1620628507 var1206))\n  (define-fun var981 () String\n    String-init)\n  (define-fun var2089 () Int\n    (bufpos/-1620628507 var1206))\n  (define-fun var676 () String\n    (str.++ var981!1 var544!1 var2539!1))\n  (define-fun var981!1 () String\n    \"\")\n  (define-fun var544!1 () String\n    \"\")\n  (define-fun var981!2 () String\n    \"\")\n  (define-fun var2539!1 () String\n    \"\")\n  (define-fun var984!1 () String\n    \"\")\n  (define-fun var2166!1 () Int\n    0)\n  (define-fun var1728!1 () Int\n    0)\n  (define-fun var3692!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var2005 () Int\n    0)\n  (define-fun var3029!1 () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1093!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun bufpos/-1620628507 ((x!0 var465)) Int\n    0)\n  (define-fun tokenBegin/-1620628507 ((x!0 var465)) Int\n    1)\n  (define-fun buffer/-1620628507 ((x!0 var465)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun bufsize/-1620628507 ((x!0 var465)) Int\n    0)\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 66 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 172093440,
            "run_time": 0.8679342269897461,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var465/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCharStream__GetImage__-548567356\\1663.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var984!1 =\r\n     concat(var544!1, var2539!1)\r\n\r\n627ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.String: void <init>(char[],int,int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: void <init>(char[],int,int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.String: void <init>(char[],int,int)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.JavaCharStream",
            "$i1 = r0.<org.javacc.parser.JavaCharStream: int bufpos>",
            "$i0 = r0.<org.javacc.parser.JavaCharStream: int tokenBegin>",
            "if $i1 < $i0 goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = new java.lang.String",
            "$r3 = r0.<org.javacc.parser.JavaCharStream: char[] buffer>",
            "$i5 = r0.<org.javacc.parser.JavaCharStream: int tokenBegin>",
            "$i3 = r0.<org.javacc.parser.JavaCharStream: int bufsize>",
            "$i2 = r0.<org.javacc.parser.JavaCharStream: int tokenBegin>",
            "$i4 = $i3 - $i2",
            "specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r3, $i5, $i4)",
            "$r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r4 = new java.lang.String",
            "$r5 = r0.<org.javacc.parser.JavaCharStream: char[] buffer>",
            "$i6 = r0.<org.javacc.parser.JavaCharStream: int bufpos>",
            "$i7 = $i6 + 1",
            "specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>($r5, 0, $i7)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__PrintNoBreak__1034990844\\2036.smt2",
        "z3": {
            "memory": 32460800,
            "run_time": 0.0529026985168457,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var402:\r\n  ;;   var402!val!0 var402!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var402!val!0 () var402)\r\n  (declare-fun var402!val!1 () var402)\r\n  ;; cardinality constraint:\r\n  (forall ((x var402)) (or (= x var402!val!0) (= x var402!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3632:\r\n  ;;   var3632!val!0 var3632!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3632!val!0 () var3632)\r\n  (declare-fun var3632!val!1 () var3632)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3632)) (or (= x var3632!val!0) (= x var3632!val!1)))\r\n  ;; -----------\r\n  (define-fun null-Int () Int\r\n    39)\r\n  (define-fun var1788 () var402\r\n    var402!val!0)\r\n  (define-fun var341 () Int\r\n    (inNextOf/1847772117 var776))\r\n  (define-fun var752!1 () (Array Int Bool)\r\n    ((as const (Array Int Bool)) true))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3399 () String\r\n    String-init)\r\n  (define-fun var1317 () String\r\n    (str.++ var3399!1\r\n        \"               case \"\r\n        (str.from_int (stateName/1847772117 var776))\r\n        \":\\n\"))\r\n  (define-fun var752 () (Array Int Bool)\r\n    ((as const (Array Int Bool)) true))\r\n  (define-fun var2294 () Int\r\n    38)\r\n  (define-fun var1662 () Int\r\n    (let ((a!1 (ite (< (select (asciiMoves/1847772117 var776) var2294) 0) (- 1) 0)))\r\n  (ite (> (select (asciiMoves/1847772117 var776) var2294) 0) 1 a!1)))\r\n  (define-fun var3803!1 () String\r\n    \"               case \")\r\n  (define-fun null-var3632 () var3632\r\n    var3632!val!1)\r\n  (define-fun var1146 () (Array Int Int)\r\n    (asciiMoves/1847772117 var776))\r\n  (define-fun var2562 () String\r\n    (str.++ var3399!1\r\n        \"               case \"\r\n        (str.from_int (stateName/1847772117 var776))\r\n        \":\\n\"))\r\n  (define-fun var2427 () String\r\n    (str.++ var3399!1\r\n        \"               case \"\r\n        (str.from_int (stateName/1847772117 var776))))\r\n  (define-fun var776 () var3632\r\n    var3632!val!0)\r\n  (define-fun null-var402 () var402\r\n    var402!val!1)\r\n  (define-fun var2590 () Int\r\n    (stateName/1847772117 var776))\r\n  (define-fun var1411 () Int\r\n    (stateName/1847772117 var776))\r\n  (define-fun var1499 () Int\r\n    (select (asciiMoves/1847772117 var776) var2294))\r\n  (define-fun var3803 () String\r\n    (str.++ var3399!1 \"               case \"))\r\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool)\r\n    (store ((as const (Array Int Bool)) true) 0 false))\r\n  (define-fun var2427!1 () String\r\n    \"               case 0:\\n\")\r\n  (define-fun var3399!1 () String\r\n    \"\")\r\n  (define-fun var3399!2 () String\r\n    \"               case \")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun asciiMoves/1847772117 ((x!0 var3632)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun inNextOf/1847772117 ((x!0 var3632)) Int\r\n    1)\r\n  (define-fun stateName/1847772117 ((x!0 var3632)) Int\r\n    0)\r\n)\r\n(error \"line 66 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9945088,
            "run_time": 0.01602625846862793,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3632 is 2\r\n; rep: (as @var3632_0 var3632)\r\n; rep: (as @var3632_1 var3632)\r\n; cardinality of var402 is 2\r\n; rep: (as @var402_0 var402)\r\n; rep: (as @var402_1 var402)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun inNextOf/1847772117 ((_arg_1 var3632)) Int 1)\r\n(define-fun stateName/1847772117 ((_arg_1 var3632)) Int 1)\r\n(define-fun asciiMoves/1847772117 ((_arg_1 var3632)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun String-init () String \"\")\r\n(define-fun null-var3632 () var3632 (as @var3632_0 var3632))\r\n(define-fun null-var402 () var402 (as @var402_0 var402))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-__Array__Int__Bool__ () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n(define-fun var776 () var3632 (as @var3632_1 var3632))\r\n(define-fun var1788 () var402 (as @var402_1 var402))\r\n(define-fun var2294 () Int 0)\r\n(define-fun var752 () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var752!1 () (Array Int Bool) (store ((as const (Array Int Bool)) true) 0 false))\r\n(define-fun var3399!1 () String \"\")\r\n(define-fun var3399!2 () String \"               case \")\r\n(define-fun var3803!1 () String \"               case \")\r\n(define-fun var2427!1 () String \"               case 1:\\u{5c}n\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37289984,
            "run_time": 0.06142020225524902,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var402:\n  ;;   var402!val!0 var402!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var402!val!0 () var402)\n  (declare-fun var402!val!1 () var402)\n  ;; cardinality constraint:\n  (forall ((x var402)) (or (= x var402!val!0) (= x var402!val!1)))\n  ;; -----------\n  ;; universe for var3632:\n  ;;   var3632!val!0 var3632!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3632!val!0 () var3632)\n  (declare-fun var3632!val!1 () var3632)\n  ;; cardinality constraint:\n  (forall ((x var3632)) (or (= x var3632!val!0) (= x var3632!val!1)))\n  ;; -----------\n  (define-fun var1662 () Int\n    (let ((a!1 (ite (< (select (asciiMoves/1847772117 var776) var2294) 0) (- 1) 0)))\n  (ite (> (select (asciiMoves/1847772117 var776) var2294) 0) 1 a!1)))\n  (define-fun null-Int () Int\n    8856)\n  (define-fun var1788 () var402\n    var402!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var752!1 () (Array Int Bool)\n    ((as const (Array Int Bool)) true))\n  (define-fun var3399 () String\n    String-init)\n  (define-fun var1317 () String\n    (str.++ var3399!1\n        \"               case \"\n        (str.from_int (stateName/1847772117 var776))\n        \":\\n\"))\n  (define-fun var2590 () Int\n    (stateName/1847772117 var776))\n  (define-fun var752 () (Array Int Bool)\n    ((as const (Array Int Bool)) true))\n  (define-fun var2294 () Int\n    8855)\n  (define-fun var3399!2 () String\n    \"               case \")\n  (define-fun var1411 () Int\n    (stateName/1847772117 var776))\n  (define-fun null-var3632 () var3632\n    var3632!val!1)\n  (define-fun var1499 () Int\n    (select (asciiMoves/1847772117 var776) var2294))\n  (define-fun var2562 () String\n    (str.++ var3399!1\n        \"               case \"\n        (str.from_int (stateName/1847772117 var776))\n        \":\\n\"))\n  (define-fun var2427 () String\n    (str.++ var3399!1\n        \"               case \"\n        (str.from_int (stateName/1847772117 var776))))\n  (define-fun var776 () var3632\n    var3632!val!0)\n  (define-fun var3803!1 () String\n    \"               case \")\n  (define-fun null-var402 () var402\n    var402!val!1)\n  (define-fun var341 () Int\n    (inNextOf/1847772117 var776))\n  (define-fun var1146 () (Array Int Int)\n    (asciiMoves/1847772117 var776))\n  (define-fun var3803 () String\n    (str.++ var3399!1 \"               case \"))\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool)\n    (store ((as const (Array Int Bool)) true) 0 false))\n  (define-fun var2427!1 () String\n    \"               case 0:\\n\")\n  (define-fun var3399!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun asciiMoves/1847772117 ((x!0 var3632)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun inNextOf/1847772117 ((x!0 var3632)) Int\n    1)\n  (define-fun stateName/1847772117 ((x!0 var3632)) Int\n    0)\n)\n(error \"line 66 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 215392256,
            "run_time": 1.1807365417480469,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2427!1 () String \"               case :\\u{5c}n\")\r\n  (define-fun var3803!1 () String \"               case \")\r\n  (define-fun var3399!2 () String \"               case \")\r\n  (define-fun var3399!1 () String \"\")\r\n  (define-fun var752!1 () (Array Int Bool) (store ((as const (Array Int Bool)) false) (- 6) true))\r\n  (define-fun var752 () (Array Int Bool) (store ((as const (Array Int Bool)) false) (- 6) true))\r\n  (define-fun var2294 () Int 0)\r\n  (define-fun var1788 () var402 var402!48)\r\n  (define-fun var776 () var3632 var3632!46)\r\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-var402 () var402 var402!44)\r\n  (define-fun null-var3632 () var3632 var3632!42)\r\n  (define-fun abbrev_126 ((x!0 Int)) String (ite (= x!0 0) \"               case \" \"\"))\r\n  (define-fun asciiMoves/1847772117 ((x!0 var3632)) (Array Int Int) (ite (= x!0 var3632!46) (store ((as const (Array Int Int)) 30) 0 0) ((as const (Array Int Int)) 0)))\r\n  (define-fun stateName/1847772117 ((x!0 var3632)) Int (ite (= x!0 var3632!46) (- 6) 0))\r\n  (define-fun inNextOf/1847772117 ((x!0 var3632)) Int (ite (= x!0 var3632!46) 1 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.NfaState",
            "r7 := @parameter0: org.javacc.parser.CodeGenerator",
            "i2 := @parameter1: int",
            "r1 := @parameter2: boolean[]",
            "$i0 = r0.<org.javacc.parser.NfaState: int inNextOf>",
            "if $i0 == 1 goto $i1 = r0.<org.javacc.parser.NfaState: int stateName>",
            "$i1 = r0.<org.javacc.parser.NfaState: int stateName>",
            "r1[$i1] = 1",
            "if i2 < 0 goto $i3 = r0.<org.javacc.parser.NfaState: int nonAsciiMethod>",
            "$r14 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$l6 = $r14[i2]",
            "$b7 = $l6 cmp 0L",
            "if $b7 == 0 goto $r25 = new java.lang.StringBuilder",
            "$r25 = new java.lang.StringBuilder",
            "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"               case \")",
            "$i4 = r0.<org.javacc.parser.NfaState: int stateName>",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\\n\")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NormalProduction__dump__220939698\\1134.smt2",
        "z3": {
            "memory": 25141248,
            "run_time": 0.07178878784179688,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var451:\r\n  ;;   var451!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var451!val!0 () var451)\r\n  ;; cardinality constraint:\r\n  (forall ((x var451)) (= x var451!val!0))\r\n  ;; -----------\r\n  ;; universe for var3292:\r\n  ;;   var3292!val!0 var3292!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3292!val!0 () var3292)\r\n  (declare-fun var3292!val!1 () var3292)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3292)) (or (= x var3292!val!0) (= x var3292!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3298:\r\n  ;;   var3298!val!0 var3298!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3298!val!0 () var3298)\r\n  (declare-fun var3298!val!1 () var3298)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3298)) (or (= x var3298!val!0) (= x var3298!val!1)))\r\n  ;; -----------\r\n  (define-fun var1487 () String\r\n    (getLhs/-759107248 var1393))\r\n  (define-fun var2651!1 () String\r\n    \"\")\r\n  (define-fun null-var3292 () var3292\r\n    var3292!val!1)\r\n  (define-fun var1699 () String\r\n    (append/1845021834\r\n  (dumpPrefix/1891816110 var1393 var1575)\r\n  (var2362_identityHashCode/1096208673 (cast-from-var3292-to-var451 var1393))))\r\n  (define-fun var3624 () Int\r\n    (var2362_identityHashCode/1096208673 (cast-from-var3292-to-var451 var1393)))\r\n  (define-fun var654 () String\r\n    (let ((a!1 (append/1183289509\r\n             (append/1845021834\r\n               (dumpPrefix/1891816110 var1393 var1575)\r\n               (var2362_identityHashCode/1096208673\r\n                 (cast-from-var3292-to-var451 var1393)))\r\n             32)))\r\n  (str.++ (append/1183289509 (str.++ a!1 (getSimpleName/914355158 var1393)) 32)\r\n          (getLhs/-759107248 var1393))))\r\n  (define-fun var912!1 () String\r\n    \"\")\r\n  (define-fun var912 () String\r\n    (let ((a!1 (append/1183289509\r\n             (append/1845021834\r\n               (dumpPrefix/1891816110 var1393 var1575)\r\n               (var2362_identityHashCode/1096208673\r\n                 (cast-from-var3292-to-var451 var1393)))\r\n             32)))\r\n  (append/1183289509 (str.++ a!1 (getSimpleName/914355158 var1393)) 32)))\r\n  (define-fun var1575 () Int\r\n    2)\r\n  (define-fun var2801 () String\r\n    (let ((a!1 (append/1183289509\r\n             (append/1845021834\r\n               (dumpPrefix/1891816110 var1393 var1575)\r\n               (var2362_identityHashCode/1096208673\r\n                 (cast-from-var3292-to-var451 var1393)))\r\n             32)))\r\n  (str.++ a!1 (getSimpleName/914355158 var1393))))\r\n  (define-fun var2651 () String\r\n    (append/1183289509\r\n  (append/1845021834\r\n    (dumpPrefix/1891816110 var1393 var1575)\r\n    (var2362_identityHashCode/1096208673 (cast-from-var3292-to-var451 var1393)))\r\n  32))\r\n  (define-fun var1485 () var3298\r\n    var3298!val!0)\r\n  (define-fun var3060 () Bool\r\n    (var3298_contains/1636690605 var1485 (cast-from-var3292-to-var451 var1393)))\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var1393 () var3292\r\n    var3292!val!0)\r\n  (define-fun null-var3298 () var3298\r\n    var3298!val!1)\r\n  (define-fun var1963 () String\r\n    (dumpPrefix/1891816110 var1393 var1575))\r\n  (define-fun var1365 () String\r\n    (getSimpleName/914355158 var1393))\r\n  (define-fun cast-from-var3292-to-var451 ((x!0 var3292)) var451\r\n    var451!val!0)\r\n  (define-fun dumpPrefix/1891816110 ((x!0 var3292) (x!1 Int)) String\r\n    \"!0!\")\r\n  (define-fun var2362_identityHashCode/1096208673 ((x!0 var451)) Int\r\n    3)\r\n  (define-fun append/1183289509 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun getSimpleName/914355158 ((x!0 var3292)) String\r\n    \"!0!\")\r\n  (define-fun append/1845021834 ((x!0 String) (x!1 Int)) String\r\n    \"!0!\")\r\n  (define-fun var3298_contains/1636690605 ((x!0 var3298) (x!1 var451)) Bool\r\n    true)\r\n  (define-fun getLhs/-759107248 ((x!0 var3292)) String\r\n    \"\")\r\n)\r\n(error \"line 56 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9965568,
            "run_time": 0.016020536422729492,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3292 is 2\r\n; rep: (as @var3292_0 var3292)\r\n; rep: (as @var3292_1 var3292)\r\n; cardinality of var3298 is 2\r\n; rep: (as @var3298_0 var3298)\r\n; rep: (as @var3298_1 var3298)\r\n; cardinality of var2362 is 1\r\n; rep: (as @var2362_0 var2362)\r\n; cardinality of var451 is 1\r\n; rep: (as @var451_0 var451)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun dumpPrefix/1891816110 ((_arg_1 var3292) (_arg_2 Int)) String \"A\")\r\n(define-fun var2362_identityHashCode/1096208673 ((_arg_1 var451)) Int 2)\r\n(define-fun cast-from-var3292-to-var451 ((_arg_1 var3292)) var451 (as @var451_0 var451))\r\n(define-fun append/1845021834 ((_arg_1 String) (_arg_2 Int)) String \"B\")\r\n(define-fun append/1183289509 ((_arg_1 String) (_arg_2 Int)) String \"\")\r\n(define-fun getSimpleName/914355158 ((_arg_1 var3292)) String \"\")\r\n(define-fun getLhs/-759107248 ((BOUND_VARIABLE_936 var3292)) String \"\")\r\n(define-fun var3298_contains/1636690605 ((_arg_1 var3298) (_arg_2 var451)) Bool true)\r\n(define-fun null-var3292 () var3292 (as @var3292_0 var3292))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var3298 () var3298 (as @var3298_0 var3298))\r\n(define-fun var1393 () var3292 (as @var3292_1 var3292))\r\n(define-fun var1575 () Int 0)\r\n(define-fun var1485 () var3298 (as @var3298_1 var3298))\r\n(define-fun var2651!1 () String \"\")\r\n(define-fun var912!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35762176,
            "run_time": 0.046617984771728516,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 55 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 56 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165978112,
            "run_time": 0.9007179737091064,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3292/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.NormalProduction__dump__220939698\\1134.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_22_3 =\r\n     concat(all_20_0, all_22_4)\r\n   var912!1 =\r\n     concat(all_22_2, rhs)\r\n   var2651!1 =\r\n     concat(all_20_0, rhs)\r\n\r\n658ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(int)>": 1,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>": 2,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.NormalProduction",
            "i0 := @parameter0: int",
            "r9 := @parameter1: java.util.Set",
            "$r1 = virtualinvoke r0.<org.javacc.parser.NormalProduction: java.lang.StringBuffer dumpPrefix(int)>(i0)",
            "$i1 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0)",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1)",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32)",
            "$r3 = virtualinvoke r0.<org.javacc.parser.NormalProduction: java.lang.String getSimpleName()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32)",
            "$r6 = virtualinvoke r0.<org.javacc.parser.NormalProduction: java.lang.String getLhs()>()",
            "r8 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6)",
            "$z0 = interfaceinvoke r9.<java.util.Set: boolean contains(java.lang.Object)>(r0)",
            "if $z0 != 0 goto return r8",
            "return r8"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NormalProduction__getSimpleName__914355158\\1071-deviant-0.smt2",
        "z3": {
            "memory": 32055296,
            "run_time": 0.05817890167236328,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var41:\r\n  ;;   var41!val!1 var41!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var41!val!1 () var41)\r\n  (declare-fun var41!val!0 () var41)\r\n  ;; cardinality constraint:\r\n  (forall ((x var41)) (or (= x var41!val!1) (= x var41!val!0)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  ;; universe for var565:\r\n  ;;   var565!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var565!val!0 () var565)\r\n  ;; cardinality constraint:\r\n  (forall ((x var565)) (= x var565!val!0))\r\n  ;; -----------\r\n  (define-fun var2803 () Int\r\n    (let ((a!1 (lastIndexOf/-618837785\r\n             (getName/-1958580599\r\n               (getClass/1258963082 (cast-from-var41-to-var565 var3338)))\r\n             \".\")))\r\n  (+ a!1 1)))\r\n  (define-fun var700 () Int\r\n    (lastIndexOf/-618837785\r\n  (getName/-1958580599\r\n    (getClass/1258963082 (cast-from-var41-to-var565 var3338)))\r\n  \".\"))\r\n  (define-fun var2943 () ClassObject\r\n    (getClass/1258963082 (cast-from-var41-to-var565 var3338)))\r\n  (define-fun var3338 () var41\r\n    var41!val!0)\r\n  (define-fun null-var41 () var41\r\n    var41!val!1)\r\n  (define-fun var2521 () String\r\n    (getName/-1958580599 (getClass/1258963082 (cast-from-var41-to-var565 var3338))))\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun cast-from-var41-to-var565 ((x!0 var41)) var565\r\n    var565!val!0)\r\n  (define-fun getClass/1258963082 ((x!0 var565)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int\r\n    0)\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9969664,
            "run_time": 0.015109777450561523,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var41 is 2\r\n; rep: (as @var41_0 var41)\r\n; rep: (as @var41_1 var41)\r\n; cardinality of var565 is 1\r\n; rep: (as @var565_0 var565)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getClass/1258963082 ((_arg_1 var565)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var41-to-var565 ((_arg_1 var41)) var565 (as @var565_0 var565))\r\n(define-fun getName/-1958580599 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun lastIndexOf/-618837785 ((_arg_1 String) (_arg_2 String)) Int (- 2))\r\n(define-fun null-var41 () var41 (as @var41_0 var41))\r\n(define-fun var3338 () var41 (as @var41_1 var41))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36585472,
            "run_time": 0.0466001033782959,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 26 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173498368,
            "run_time": 0.8394725322723389,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3338 () var41 var41!6)\r\n  (define-fun null-var41 () var41 var41!4)\r\n  (define-fun var565!18 () var565 (cast-from-var41-to-var565 var41!6))\r\n  (define-fun ClassObject!20 () ClassObject (getClass/1258963082 var565!18))\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int (ite (and (= x!0 \"\\u{0}\") (= x!1 \".\")) (- 2) 0))\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String (ite (= x!0 ClassObject!20) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int lastIndexOf(java.lang.String)>",
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: int lastIndexOf(java.lang.String)>": 1,
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.NormalProduction",
            "$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>()",
            "$i0 = virtualinvoke r2.<java.lang.String: int lastIndexOf(java.lang.String)>(\".\")",
            "$i1 = $i0 + 1",
            "$r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NormalProduction__getSimpleName__914355158\\1071.smt2",
        "z3": {
            "memory": 32047104,
            "run_time": 0.042887210845947266,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var41:\r\n  ;;   var41!val!1 var41!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var41!val!1 () var41)\r\n  (declare-fun var41!val!0 () var41)\r\n  ;; cardinality constraint:\r\n  (forall ((x var41)) (or (= x var41!val!1) (= x var41!val!0)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  ;; universe for var565:\r\n  ;;   var565!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var565!val!0 () var565)\r\n  ;; cardinality constraint:\r\n  (forall ((x var565)) (= x var565!val!0))\r\n  ;; -----------\r\n  (define-fun var2803 () Int\r\n    (let ((a!1 (lastIndexOf/-618837785\r\n             (getName/-1958580599\r\n               (getClass/1258963082 (cast-from-var41-to-var565 var3338)))\r\n             \".\")))\r\n  (+ a!1 1)))\r\n  (define-fun var700 () Int\r\n    (lastIndexOf/-618837785\r\n  (getName/-1958580599\r\n    (getClass/1258963082 (cast-from-var41-to-var565 var3338)))\r\n  \".\"))\r\n  (define-fun var2943 () ClassObject\r\n    (getClass/1258963082 (cast-from-var41-to-var565 var3338)))\r\n  (define-fun var3338 () var41\r\n    var41!val!0)\r\n  (define-fun var26 () String\r\n    (let ((a!1 (lastIndexOf/-618837785\r\n             (getName/-1958580599\r\n               (getClass/1258963082 (cast-from-var41-to-var565 var3338)))\r\n             \".\"))\r\n      (a!2 (str.len (getName/-1958580599\r\n                      (getClass/1258963082 (cast-from-var41-to-var565 var3338))))))\r\n  (str.substr (getName/-1958580599\r\n                (getClass/1258963082 (cast-from-var41-to-var565 var3338)))\r\n              (+ a!1 1)\r\n              (- a!2 (+ a!1 1)))))\r\n  (define-fun null-var41 () var41\r\n    var41!val!1)\r\n  (define-fun var2521 () String\r\n    (getName/-1958580599 (getClass/1258963082 (cast-from-var41-to-var565 var3338))))\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun cast-from-var41-to-var565 ((x!0 var41)) var565\r\n    var565!val!0)\r\n  (define-fun getClass/1258963082 ((x!0 var565)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int\r\n    (- 1))\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9969664,
            "run_time": 0.015815019607543945,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var41 is 2\r\n; rep: (as @var41_0 var41)\r\n; rep: (as @var41_1 var41)\r\n; cardinality of var565 is 1\r\n; rep: (as @var565_0 var565)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getClass/1258963082 ((_arg_1 var565)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var41-to-var565 ((_arg_1 var41)) var565 (as @var565_0 var565))\r\n(define-fun getName/-1958580599 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun lastIndexOf/-618837785 ((_arg_1 String) (_arg_2 String)) Int (- 1))\r\n(define-fun null-var41 () var41 (as @var41_0 var41))\r\n(define-fun var3338 () var41 (as @var41_1 var41))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36577280,
            "run_time": 0.045682430267333984,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 28 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153628672,
            "run_time": 0.6634540557861328,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var41/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.NormalProduction__getSimpleName__914355158\\1071.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n\r\n465ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int lastIndexOf(java.lang.String)>",
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: int lastIndexOf(java.lang.String)>": 1,
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.NormalProduction",
            "$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>()",
            "$i0 = virtualinvoke r2.<java.lang.String: int lastIndexOf(java.lang.String)>(\".\")",
            "$i1 = $i0 + 1",
            "$r3 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int)>($i1)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.OneOrMore__dump__1432586630\\1091.smt2",
        "z3": {
            "memory": 21598208,
            "run_time": 0.07624030113220215,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1238:\r\n  ;;   var1238!val!1 var1238!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1238!val!1 () var1238)\r\n  (declare-fun var1238!val!0 () var1238)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1238)) (or (= x var1238!val!1) (= x var1238!val!0)))\r\n  ;; -----------\r\n  ;; universe for var671:\r\n  ;;   var671!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var671!val!0 () var671)\r\n  ;; cardinality constraint:\r\n  (forall ((x var671)) (= x var671!val!0))\r\n  ;; -----------\r\n  ;; universe for var1216:\r\n  ;;   var1216!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1216!val!0 () var1216)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1216)) (= x var1216!val!0))\r\n  ;; -----------\r\n  ;; universe for var3308:\r\n  ;;   var3308!val!0 var3308!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3308!val!0 () var3308)\r\n  (declare-fun var3308!val!1 () var3308)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3308)) (or (= x var3308!val!0) (= x var3308!val!1)))\r\n  ;; -----------\r\n  (define-fun var159!1 () String\r\n    \"\")\r\n  (define-fun null-var3308 () var3308\r\n    var3308!val!1)\r\n  (define-fun var709 () String\r\n    (dump/1891027141 (expansion/-165429231 var1230!1) (+ var2243 1) var3527!1))\r\n  (define-fun null-var1238 () var1238\r\n    var1238!val!1)\r\n  (define-fun var1918 () String\r\n    var3308-eol)\r\n  (define-fun var159 () String\r\n    (dump/1891027141 (cast-from-var3308-to-var1216 var1230) var2243 var3527))\r\n  (define-fun var549 () Int\r\n    (+ var2243 1))\r\n  (define-fun var1230 () var3308\r\n    var3308!val!0)\r\n  (define-fun var2243 () Int\r\n    2)\r\n  (define-fun var3527 () var1238\r\n    var1238!val!0)\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var1652 () var1216\r\n    (expansion/-165429231 var1230!1))\r\n  (define-fun var3967 () String\r\n    (str.++ (dump/1891027141 (cast-from-var3308-to-var1216 var1230) var2243 var3527)\r\n        var3308-eol))\r\n  (define-fun var3524 () Bool\r\n    (var1238_contains/1636690605 var3527 (cast-from-var3308-to-var671 var1230)))\r\n  (define-fun var1230!1 () var3308\r\n    var3308!val!0)\r\n  (define-fun var3308-eol () String\r\n    \"\")\r\n  (define-fun var3527!1 () var1238\r\n    var1238!val!1)\r\n  (define-fun var709!1 () String\r\n    \"\")\r\n  (define-fun var3967!1 () String\r\n    \"\")\r\n  (define-fun cast-from-var3308-to-var671 ((x!0 var3308)) var671\r\n    var671!val!0)\r\n  (define-fun var1238_contains/1636690605 ((x!0 var1238) (x!1 var671)) Bool\r\n    false)\r\n  (define-fun cast-from-var3308-to-var1216 ((x!0 var3308)) var1216\r\n    var1216!val!0)\r\n  (define-fun dump/1891027141 ((x!0 var1216) (x!1 Int) (x!2 var1238)) String\r\n    \"\")\r\n  (define-fun var1238_add/-1142548109 ((x!0 var1238) (x!1 var671)) Bool\r\n    false)\r\n  (define-fun append/1671819796 ((x!0 String) (x!1 String)) String\r\n    \"\")\r\n  (define-fun expansion/-165429231 ((x!0 var3308)) var1216\r\n    var1216!val!0)\r\n)\r\n(error \"line 55 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9928704,
            "run_time": 0.014608383178710938,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3308 is 2\r\n; rep: (as @var3308_0 var3308)\r\n; rep: (as @var3308_1 var3308)\r\n; cardinality of var1238 is 2\r\n; rep: (as @var1238_0 var1238)\r\n; rep: (as @var1238_1 var1238)\r\n; cardinality of var1216 is 1\r\n; rep: (as @var1216_0 var1216)\r\n; cardinality of var671 is 1\r\n; rep: (as @var671_0 var671)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun dump/1891027141 ((_arg_1 var1216) (_arg_2 Int) (_arg_3 var1238)) String \"\")\r\n(define-fun cast-from-var3308-to-var1216 ((_arg_1 var3308)) var1216 (as @var1216_0 var1216))\r\n(define-fun var1238_contains/1636690605 ((_arg_1 var1238) (_arg_2 var671)) Bool false)\r\n(define-fun cast-from-var3308-to-var671 ((_arg_1 var3308)) var671 (as @var671_0 var671))\r\n(define-fun var1238_add/-1142548109 ((BOUND_VARIABLE_705 var1238) (BOUND_VARIABLE_706 var671)) Bool false)\r\n(define-fun expansion/-165429231 ((BOUND_VARIABLE_709 var3308)) var1216 (as @var1216_0 var1216))\r\n(define-fun append/1671819796 ((BOUND_VARIABLE_712 String) (BOUND_VARIABLE_713 String)) String \"\")\r\n(define-fun null-var3308 () var3308 (as @var3308_0 var3308))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var1238 () var1238 (as @var1238_0 var1238))\r\n(define-fun var3308-eol () String \"\")\r\n(define-fun var1230 () var3308 (as @var3308_1 var3308))\r\n(define-fun var2243 () Int 0)\r\n(define-fun var3527 () var1238 (as @var1238_1 var1238))\r\n(define-fun var3527!1 () var1238 (as @var1238_0 var1238))\r\n(define-fun var1230!1 () var3308 (as @var3308_0 var3308))\r\n(define-fun var159!1 () String \"\")\r\n(define-fun var3967!1 () String \"\")\r\n(define-fun var709!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36544512,
            "run_time": 0.04613351821899414,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 54 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 55 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154976256,
            "run_time": 0.7116703987121582,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.OneOrMore__dump__1432586630\\1091.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var159!1 =\r\n     concat(all_18_0, rhs)\r\n   ... sat\r\n\r\n479ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.OneOrMore",
            "i0 := @parameter0: int",
            "r1 := @parameter1: java.util.Set",
            "r2 = specialinvoke r0.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>(i0, r1)",
            "$z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r0)",
            "if $z0 == 0 goto interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)",
            "interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)",
            "$r3 = <org.javacc.parser.OneOrMore: java.lang.String eol>",
            "$r6 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3)",
            "$r4 = r0.<org.javacc.parser.OneOrMore: org.javacc.parser.Expansion expansion>",
            "$i1 = i0 + 1",
            "$r5 = virtualinvoke $r4.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>($i1, r1)",
            "virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>($r5)",
            "return r2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__getBooleanType__-2111917935\\2121.smt2",
        "z3": {
            "memory": 32002048,
            "run_time": 0.04235672950744629,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1917_isOutputLanguageJava/1735442213 () Bool\r\n    false)\r\n  (define-fun var1917_getOutputLanguage/-1523304050 () String\r\n    \"c++\")\r\n  (define-fun var301 () Bool\r\n    var1917_isOutputLanguageJava/1735442213)\r\n  (define-fun var736 () String\r\n    var1917_getOutputLanguage/-1523304050)\r\n  (define-fun var1430 () Bool\r\n    (= var1917_getOutputLanguage/-1523304050 \"c++\"))\r\n)\r\n(error \"line 21 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9965568,
            "run_time": 0.01539754867553711,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1917 is 1\r\n; rep: (as @var1917_0 var1917)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1917_isOutputLanguageJava/1735442213 () Bool false)\r\n(define-fun var1917_getOutputLanguage/-1523304050 () String \"c++\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35893248,
            "run_time": 0.0463411808013916,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1917_isOutputLanguageJava/1735442213 () Bool\n    false)\n  (define-fun var1917_getOutputLanguage/-1523304050 () String\n    \"c++\")\n  (define-fun var301 () Bool\n    var1917_isOutputLanguageJava/1735442213)\n  (define-fun var736 () String\n    var1917_getOutputLanguage/-1523304050)\n  (define-fun var1430 () Bool\n    (= var1917_getOutputLanguage/-1523304050 \"c++\"))\n)\n(error \"line 21 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 143089664,
            "run_time": 0.650672197341919,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1917_getOutputLanguage/-1523304050 () String \"c++\")\r\n  (define-fun var1917_isOutputLanguageJava/1735442213 () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean isOutputLanguageJava()>()",
            "if $z0 == 0 goto $r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$z1 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(\"c++\")",
            "if $z1 == 0 goto $r1 = new java.lang.RuntimeException",
            "return \"bool\""
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__getBooleanType__-2111917935\\2136.smt2",
        "z3": {
            "memory": 31514624,
            "run_time": 0.03894352912902832,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1177 () Bool\r\n    var1200_isOutputLanguageJava/1735442213)\r\n  (define-fun var1200_getOutputLanguage/-1523304050 () String\r\n    \"\")\r\n  (define-fun var2791 () String\r\n    var1200_getOutputLanguage/-1523304050)\r\n  (define-fun var2036 () var3936\r\n    var3936-init)\r\n  (define-fun var3798 () String\r\n    (str.++ var3865!1 \"Language type not fully supported : \"))\r\n  (define-fun var1136 () String\r\n    (str.++ var3865!1\r\n        \"Language type not fully supported : \"\r\n        var1200_getOutputLanguage/-1523304050))\r\n  (define-fun var3865 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var459 () String\r\n    var1200_getOutputLanguage/-1523304050)\r\n  (define-fun var1876 () String\r\n    (str.++ var3865!1\r\n        \"Language type not fully supported : \"\r\n        var1200_getOutputLanguage/-1523304050))\r\n  (define-fun var3353 () Bool\r\n    (= var1200_getOutputLanguage/-1523304050 \"c++\"))\r\n  (define-fun var1200_isOutputLanguageJava/1735442213 () Bool\r\n    false)\r\n  (define-fun var3865!1 () String\r\n    \"\")\r\n  (define-fun var3798!1 () String\r\n    \"Language type not fully supported : \")\r\n  (define-fun var3865!2 () String\r\n    \"Language type not fully supported : \")\r\n  (define-fun var3936-init () var3936\r\n    var3936!val!0)\r\n  (define-fun var2036!1 () var3936\r\n    var3936!val!0)\r\n  (define-fun var1876!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun <init>/-1084991535 ((x!0 var3936) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9945088,
            "run_time": 0.01414036750793457,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1200 is 1\r\n; rep: (as @var1200_0 var1200)\r\n; cardinality of var3936 is 1\r\n; rep: (as @var3936_0 var3936)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1200_isOutputLanguageJava/1735442213 () Bool false)\r\n(define-fun var1200_getOutputLanguage/-1523304050 () String \"\")\r\n(define-fun var3936-init () var3936 (as @var3936_0 var3936))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1084991535 ((BOUND_VARIABLE_613 var3936) (BOUND_VARIABLE_614 String)) void (as @void_0 void))\r\n(define-fun var3865!1 () String \"\")\r\n(define-fun var3865!2 () String \"Language type not fully supported : \")\r\n(define-fun var3798!1 () String \"Language type not fully supported : \")\r\n(define-fun var2036!1 () var3936 (as @var3936_0 var3936))\r\n(define-fun var1876!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36552704,
            "run_time": 0.04581141471862793,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3798 () String\n    (str.++ var3865!1 \"Language type not fully supported : \"))\n  (define-fun var3353 () Bool\n    (= var1200_getOutputLanguage/-1523304050 \"c++\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1177 () Bool\n    var1200_isOutputLanguageJava/1735442213)\n  (define-fun var2036 () var3936\n    var3936-init)\n  (define-fun var3865 () String\n    String-init)\n  (define-fun var459 () String\n    var1200_getOutputLanguage/-1523304050)\n  (define-fun var1200_getOutputLanguage/-1523304050 () String\n    \"\")\n  (define-fun var2791 () String\n    var1200_getOutputLanguage/-1523304050)\n  (define-fun var1136 () String\n    (str.++ var3865!1\n        \"Language type not fully supported : \"\n        var1200_getOutputLanguage/-1523304050))\n  (define-fun var1876 () String\n    (str.++ var3865!1\n        \"Language type not fully supported : \"\n        var1200_getOutputLanguage/-1523304050))\n  (define-fun var1200_isOutputLanguageJava/1735442213 () Bool\n    false)\n  (define-fun var3865!1 () String\n    \"\")\n  (define-fun var3798!1 () String\n    \"Language type not fully supported : \")\n  (define-fun var3865!2 () String\n    \"Language type not fully supported : \")\n  (define-fun var3936-init () var3936\n    var3936!val!0)\n  (define-fun var2036!1 () var3936\n    var3936!val!0)\n  (define-fun var1876!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun <init>/-1084991535 ((x!0 var3936) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 203534336,
            "run_time": 1.0550646781921387,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3798!1 () String \"Language type not fully supported : \")\r\n  (define-fun var3865!2 () String \"Language type not fully supported : \")\r\n  (define-fun var3865!1 () String \"\")\r\n  (define-fun var1200_getOutputLanguage/-1523304050 () String \"\")\r\n  (define-fun var1200_isOutputLanguageJava/1735442213 () Bool false)\r\n  (define-fun abbrev_107 ((x!0 Int)) String (ite (= x!0 0) \"Language type not fully supported : \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean isOutputLanguageJava()>()",
            "if $z0 == 0 goto $r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$z1 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(\"c++\")",
            "if $z1 == 0 goto $r1 = new java.lang.RuntimeException",
            "$r1 = new java.lang.RuntimeException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Language type not fully supported : \")",
            "$r3 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__getGrammarEncoding__443734009\\1956.smt2",
        "z3": {
            "memory": 10465280,
            "run_time": 0.046698808670043945,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1698 () var1783\r\n    var1402_getProperties/656610844)\r\n  (define-fun var2135 () Bool\r\n    (= (var752_stringValue/-689356382 \"GRAMMAR_ENCODING\") \"\"))\r\n  (define-fun var2065 () String\r\n    (var752_stringValue/-689356382 \"GRAMMAR_ENCODING\"))\r\n  (define-fun var3809 () String\r\n    (getProperty/1391780669 var1402_getProperties/656610844 \"file.encoding\"))\r\n  (define-fun var1402_getProperties/656610844 () var1783\r\n    var1783!val!0)\r\n  (define-fun var752_stringValue/-689356382 ((x!0 String)) String\r\n    \"\")\r\n  (define-fun getProperty/1391780669 ((x!0 var1783) (x!1 String)) String\r\n    \"\")\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9969664,
            "run_time": 0.015574455261230469,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var752 is 1\r\n; rep: (as @var752_0 var752)\r\n; cardinality of var1783 is 1\r\n; rep: (as @var1783_0 var1783)\r\n; cardinality of var1402 is 1\r\n; rep: (as @var1402_0 var1402)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var752_stringValue/-689356382 ((_arg_1 String)) String \"\")\r\n(define-fun var1402_getProperties/656610844 () var1783 (as @var1783_0 var1783))\r\n(define-fun getProperty/1391780669 ((BOUND_VARIABLE_510 var1783) (BOUND_VARIABLE_511 String)) String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36515840,
            "run_time": 0.0461275577545166,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 23 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 147775488,
            "run_time": 0.7035889625549316,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var752_stringValue/-689356382 ((x!0 String)) String (ite (= x!0 \"GRAMMAR_ENCODING\") \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "$r0 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"GRAMMAR_ENCODING\")",
            "$z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 == 0 goto $r1 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"GRAMMAR_ENCODING\")",
            "$r2 = staticinvoke <java.lang.System: java.util.Properties getProperties()>()",
            "$r3 = virtualinvoke $r2.<java.util.Properties: java.lang.String getProperty(java.lang.String)>(\"file.encoding\")",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__getGrammarEncoding__443734009\\1972.smt2",
        "z3": {
            "memory": 31453184,
            "run_time": 0.04404878616333008,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var172 () String\r\n    (var536_stringValue/-689356382 \"GRAMMAR_ENCODING\"))\r\n  (define-fun var2164 () String\r\n    (var536_stringValue/-689356382 \"GRAMMAR_ENCODING\"))\r\n  (define-fun var233 () Bool\r\n    (= (var536_stringValue/-689356382 \"GRAMMAR_ENCODING\") \"\"))\r\n  (define-fun var536_stringValue/-689356382 ((x!0 String)) String\r\n    \"B\")\r\n)\r\n(error \"line 18 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9969664,
            "run_time": 0.01595902442932129,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var536 is 1\r\n; rep: (as @var536_0 var536)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var536_stringValue/-689356382 ((_arg_1 String)) String \"GRAMMAR_ENCODING\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36511744,
            "run_time": 0.04664802551269531,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 17 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 18 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140361728,
            "run_time": 0.7327442169189453,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var536_stringValue/-689356382 ((x!0 String)) String (ite (= x!0 \"GRAMMAR_ENCODING\") \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "$r0 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"GRAMMAR_ENCODING\")",
            "$z0 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 == 0 goto $r1 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"GRAMMAR_ENCODING\")",
            "$r1 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"GRAMMAR_ENCODING\")",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__getOptionsString__1588210731\\1185.smt2",
        "z3": {
            "memory": 32047104,
            "run_time": 0.04369640350341797,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-__Array__Int__String__ () (Array Int String)\r\n    ((as const (Array Int String)) \"!1!\"))\r\n  (define-fun var612 () String\r\n    var254!1)\r\n  (define-fun var254 () String\r\n    String-init)\r\n  (define-fun var3425 () (Array Int String)\r\n    ((as const (Array Int String)) \"!0!\"))\r\n  (define-fun var1528 () Int\r\n    0)\r\n  (define-fun var3868 () Int\r\n    (getLength-Arr-String-1 var3425))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var254!1 () String\r\n    \"\")\r\n  (define-fun getLength-Arr-String-1 ((x!0 (Array Int String))) Int\r\n    0)\r\n  (define-fun <init>/-1430969082 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10010624,
            "run_time": 0.015541791915893555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1430969082 ((BOUND_VARIABLE_540 String)) void (as @void_0 void))\r\n(define-fun getLength-Arr-String-1 ((_arg_1 (Array Int String))) Int 0)\r\n(define-fun null-__Array__Int__String__ () (Array Int String) ((as const (Array Int String)) \"A\"))\r\n(define-fun var3425 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var254!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35737600,
            "run_time": 0.04605531692504883,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 28 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152801280,
            "run_time": 0.7626612186431885,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3425 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n  (define-fun null-__Array__Int__String__ () (Array Int String) (store ((as const (Array Int String)) \"\") 0 \"\\u{0}\"))\r\n  (define-fun getLength-Arr-String-1 ((x!0 (Array Int String))) Int (ite (= x!0 ((as const (Array Int String)) \"\")) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String[]",
            "$r0 = new java.lang.StringBuffer",
            "specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()",
            "i3 = 0",
            "$i0 = lengthof r1",
            "if i3 >= $i0 goto $r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>()",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__getParserCodeGenerator__-747227540\\1574.smt2",
        "z3": {
            "memory": 10096640,
            "run_time": 0.04566812515258789,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1002 () String\r\n    null-String)\r\n  (define-fun var853 () Bool\r\n    (= (var2713_stringValue/-689356382 \"PARSER_CODE_GENERATOR\") \"\"))\r\n  (define-fun var1257 () String\r\n    (var2713_stringValue/-689356382 \"PARSER_CODE_GENERATOR\"))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2713_stringValue/-689356382 ((x!0 String)) String\r\n    \"\")\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9969664,
            "run_time": 0.016141891479492188,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2713 is 1\r\n; rep: (as @var2713_0 var2713)\r\n; cardinality of var3654 is 1\r\n; rep: (as @var3654_0 var3654)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2713_stringValue/-689356382 ((_arg_1 String)) String \"\")\r\n(define-fun null-String () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35717120,
            "run_time": 0.046669960021972656,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 21 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 22 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 144986112,
            "run_time": 0.6816234588623047,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun abbrev_6 ((x!0 Int)) String (ite (= x!0 0) \"\" \"\"))\r\n  (define-fun var2713_stringValue/-689356382 ((x!0 String)) String (ite (= x!0 \"PARSER_CODE_GENERATOR\") \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"PARSER_CODE_GENERATOR\")",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 == 0 goto $r1 = r0",
            "$r1 = null",
            "goto [?= return $r1]",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__getParserCodeGenerator__-747227540\\1596.smt2",
        "z3": {
            "memory": 32415744,
            "run_time": 0.039002418518066406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var683 () String\r\n    (var1555_stringValue/-689356382 \"PARSER_CODE_GENERATOR\"))\r\n  (define-fun var949 () String\r\n    (var1555_stringValue/-689356382 \"PARSER_CODE_GENERATOR\"))\r\n  (define-fun var896 () Bool\r\n    (= (var1555_stringValue/-689356382 \"PARSER_CODE_GENERATOR\") \"\"))\r\n  (define-fun var1555_stringValue/-689356382 ((x!0 String)) String\r\n    \"B\")\r\n)\r\n(error \"line 19 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9945088,
            "run_time": 0.015741825103759766,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1555 is 1\r\n; rep: (as @var1555_0 var1555)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1555_stringValue/-689356382 ((_arg_1 String)) String \"PARSER_CODE_GENERATOR\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36229120,
            "run_time": 0.04569387435913086,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 18 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 19 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 158728192,
            "run_time": 0.7587814331054688,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun abbrev_5 ((x!0 Int)) String (ite (= x!0 0) \"\\u{0}\" \"\"))\r\n  (define-fun var1555_stringValue/-689356382 ((x!0 String)) String (ite (= x!0 \"PARSER_CODE_GENERATOR\") \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"PARSER_CODE_GENERATOR\")",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 == 0 goto $r1 = r0",
            "$r1 = r0",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__getStackLimit__1399898548\\2198.smt2",
        "z3": {
            "memory": 32063488,
            "run_time": 0.04473590850830078,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3461 () Bool\r\n    (= (var676_stringValue/-689356382 \"STACK_LIMIT\") \"0\"))\r\n  (define-fun var2847 () String\r\n    (var676_stringValue/-689356382 \"STACK_LIMIT\"))\r\n  (define-fun var676_stringValue/-689356382 ((x!0 String)) String\r\n    (ite (= x!0\r\n            (str.++ (seq.unit (_ Char 83))\r\n                    (seq.unit (_ Char 84))\r\n                    (seq.unit (_ Char 65))\r\n                    (seq.unit (_ Char 67))\r\n                    (seq.unit (_ Char 75))\r\n                    (seq.unit (_ Char 95))\r\n                    (seq.unit (_ Char 76))\r\n                    (seq.unit (_ Char 73))\r\n                    (seq.unit (_ Char 77))\r\n                    (seq.unit (_ Char 73))\r\n                    (seq.unit (_ Char 84))))\r\n      \"0\"\r\n      \"0\"))\r\n)\r\n(error \"line 17 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9969664,
            "run_time": 0.015180110931396484,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var676 is 1\r\n; rep: (as @var676_0 var676)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var676_stringValue/-689356382 ((_arg_1 String)) String \"0\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36519936,
            "run_time": 0.04688906669616699,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 16 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 17 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 145694720,
            "run_time": 0.714033842086792,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var676_stringValue/-689356382 ((x!0 String)) String (ite (= x!0 \"STACK_LIMIT\") \"0\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"STACK_LIMIT\")",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"0\")",
            "if $z0 == 0 goto return r0",
            "return \"\""
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__getStackLimit__1399898548\\2205.smt2",
        "z3": {
            "memory": 32133120,
            "run_time": 0.04661989212036133,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var156 () Bool\r\n    (= (var3492_stringValue/-689356382 \"STACK_LIMIT\") \"0\"))\r\n  (define-fun var319 () String\r\n    (var3492_stringValue/-689356382 \"STACK_LIMIT\"))\r\n  (define-fun var3492_stringValue/-689356382 ((x!0 String)) String\r\n    \"\")\r\n)\r\n(error \"line 17 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9969664,
            "run_time": 0.015235662460327148,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3492 is 1\r\n; rep: (as @var3492_0 var3492)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3492_stringValue/-689356382 ((_arg_1 String)) String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35807232,
            "run_time": 0.04589581489562988,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 16 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 17 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 144609280,
            "run_time": 0.7058382034301758,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3492_stringValue/-689356382 ((x!0 String)) String (ite (= x!0 \"STACK_LIMIT\") \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"STACK_LIMIT\")",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"0\")",
            "if $z0 == 0 goto return r0",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__getTokenManagerCodeGenerator__1086411585\\1603.smt2",
        "z3": {
            "memory": 32145408,
            "run_time": 0.04433131217956543,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var773 () String\r\n    null-String)\r\n  (define-fun var2045 () String\r\n    (var841_stringValue/-689356382 \"TOKEN_MANAGER_CODE_GENERATOR\"))\r\n  (define-fun var3787 () Bool\r\n    (= (var841_stringValue/-689356382 \"TOKEN_MANAGER_CODE_GENERATOR\") \"\"))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var841_stringValue/-689356382 ((x!0 String)) String\r\n    \"\")\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9945088,
            "run_time": 0.01523900032043457,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var841 is 1\r\n; rep: (as @var841_0 var841)\r\n; cardinality of var1911 is 1\r\n; rep: (as @var1911_0 var1911)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var841_stringValue/-689356382 ((_arg_1 String)) String \"\")\r\n(define-fun null-String () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36511744,
            "run_time": 0.047235965728759766,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 21 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 22 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 146964480,
            "run_time": 0.7632980346679688,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun abbrev_6 ((x!0 Int)) String (ite (= x!0 0) \"\" \"\"))\r\n  (define-fun var841_stringValue/-689356382 ((x!0 String)) String (ite (= x!0 \"TOKEN_MANAGER_CODE_GENERATOR\") \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"TOKEN_MANAGER_CODE_GENERATOR\")",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 == 0 goto $r1 = r0",
            "$r1 = null",
            "goto [?= return $r1]",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__getTokenManagerCodeGenerator__1086411585\\1627.smt2",
        "z3": {
            "memory": 10092544,
            "run_time": 0.045144081115722656,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3930 () String\r\n    (var3139_stringValue/-689356382 \"TOKEN_MANAGER_CODE_GENERATOR\"))\r\n  (define-fun var903 () Bool\r\n    (= (var3139_stringValue/-689356382 \"TOKEN_MANAGER_CODE_GENERATOR\") \"\"))\r\n  (define-fun var2116 () String\r\n    (var3139_stringValue/-689356382 \"TOKEN_MANAGER_CODE_GENERATOR\"))\r\n  (define-fun var3139_stringValue/-689356382 ((x!0 String)) String\r\n    \"B\")\r\n)\r\n(error \"line 19 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9945088,
            "run_time": 0.015096664428710938,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3139 is 1\r\n; rep: (as @var3139_0 var3139)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3139_stringValue/-689356382 ((_arg_1 String)) String \"TOKEN_MANAGER_CODE_GENERATOR\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36528128,
            "run_time": 0.04542422294616699,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 18 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 19 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 157712384,
            "run_time": 0.7569541931152344,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun abbrev_5 ((x!0 Int)) String (ite (= x!0 0) \"\\u{0}\" \"\"))\r\n  (define-fun var3139_stringValue/-689356382 ((x!0 String)) String (ite (= x!0 \"TOKEN_MANAGER_CODE_GENERATOR\") \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"TOKEN_MANAGER_CODE_GENERATOR\")",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 == 0 goto $r1 = r0",
            "$r1 = r0",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__init__-1293859844\\1077.smt2",
        "z3": {
            "memory": 19374080,
            "run_time": 0.07098746299743652,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1673:\r\n  ;;   var1673!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1673!val!0 () var1673)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1673)) (= x var1673!val!0))\r\n  ;; -----------\r\n  ;; universe for Iterator:\r\n  ;;   Iterator!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun Iterator!val!0 () Iterator)\r\n  ;; cardinality constraint:\r\n  (forall ((x Iterator)) (= x Iterator!val!0))\r\n  ;; -----------\r\n  (define-fun var3446 () var1349\r\n    (cast-from-var1911-to-var1349 var223!1))\r\n  (define-fun var2351 () var3767\r\n    var3767-init)\r\n  (define-fun var1686 () var1349\r\n    var874-optionValues)\r\n  (define-fun var535 () var217\r\n    (var217_valueOf/1602327315 false))\r\n  (define-fun var716 () Bool\r\n    false)\r\n  (define-fun var1450 () var2013\r\n    (var1349_get/1088891777\r\n  var874-optionValues\r\n  (cast-from-String-to-var2013 \"JAVA_TEMPLATE_TYPE\")))\r\n  (define-fun var3704 () String\r\n    \"classic\")\r\n  (define-fun var1048 () var3767\r\n    var3767-init)\r\n  (define-fun var223 () var1911\r\n    var1911-init)\r\n  (define-fun var3699 () var1673\r\n    (cast-from-var3767-to-var1673 var1048!1))\r\n  (define-fun var3215 () var1673\r\n    var874-userOptions)\r\n  (define-fun var3871 () Bool\r\n    (Iterator_hasNext/-1669924200 (var1673_iterator/1911472585 var874-userOptions)))\r\n  (define-fun var1134 () var1673\r\n    (cast-from-var3767-to-var1673 var2351!1))\r\n  (define-fun var874-userOptions () var1673\r\n    var1673!val!0)\r\n  (define-fun var2352 () var1349\r\n    var874-optionValues)\r\n  (define-fun var3238 () Iterator\r\n    (var1673_iterator/1911472585 var874-userOptions))\r\n  (define-fun var874-optionValues () var1349\r\n    var1349!val!0)\r\n  (define-fun var2351!1 () var3767\r\n    var3767!val!0)\r\n  (define-fun var223!1 () var1911\r\n    var1911!val!0)\r\n  (define-fun var731 () String\r\n    \"\")\r\n  (define-fun var3767-init () var3767\r\n    var3767!val!0)\r\n  (define-fun var1911-init () var1911\r\n    var1911!val!0)\r\n  (define-fun var535!1 () var217\r\n    var217!val!0)\r\n  (define-fun var1048!1 () var3767\r\n    var3767!val!0)\r\n  (define-fun var1686!1 () var1349\r\n    var1349!val!0)\r\n  (define-fun var1673_iterator/1911472585 ((x!0 var1673)) Iterator\r\n    Iterator!val!0)\r\n  (define-fun Iterator_hasNext/-1669924200 ((x!0 Iterator)) Bool\r\n    false)\r\n  (define-fun <init>/451842749 ((x!0 var3767)) void\r\n    void!val!0)\r\n  (define-fun var1349_get/1088891777 ((x!0 var1349) (x!1 var2013)) var2013\r\n    var2013!val!0)\r\n  (define-fun cast-from-var3767-to-var1673 ((x!0 var3767)) var1673\r\n    var1673!val!0)\r\n  (define-fun var217_valueOf/1602327315 ((x!0 Bool)) var217\r\n    var217!val!0)\r\n  (define-fun <init>/-201242697 ((x!0 var1911)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var1911-to-var1349 ((x!0 var1911)) var1349\r\n    var1349!val!0)\r\n  (define-fun var1349_put/1464166817 ((x!0 var1349) (x!1 var2013) (x!2 var2013)) var2013\r\n    var2013!val!0)\r\n  (define-fun cast-from-String-to-var2013 ((x!0 String)) var2013\r\n    var2013!val!0)\r\n  (define-fun cast-from-var217-to-var2013 ((x!0 var217)) var2013\r\n    var2013!val!0)\r\n)\r\n(error \"line 68 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9945088,
            "run_time": 0.015635967254638672,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1911 is 1\r\n; rep: (as @var1911_0 var1911)\r\n; cardinality of var1349 is 1\r\n; rep: (as @var1349_0 var1349)\r\n; cardinality of var3767 is 1\r\n; rep: (as @var3767_0 var3767)\r\n; cardinality of var1673 is 1\r\n; rep: (as @var1673_0 var1673)\r\n; cardinality of var874 is 1\r\n; rep: (as @var874_0 var874)\r\n; cardinality of var2013 is 1\r\n; rep: (as @var2013_0 var2013)\r\n; cardinality of var217 is 1\r\n; rep: (as @var217_0 var217)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1911-init () var1911 (as @var1911_0 var1911))\r\n(define-fun <init>/-201242697 ((BOUND_VARIABLE_554 var1911)) void (as @void_0 void))\r\n(define-fun cast-from-var1911-to-var1349 ((BOUND_VARIABLE_557 var1911)) var1349 (as @var1349_0 var1349))\r\n(define-fun var3767-init () var3767 (as @var3767_0 var3767))\r\n(define-fun <init>/451842749 ((BOUND_VARIABLE_560 var3767)) void (as @void_0 void))\r\n(define-fun cast-from-var3767-to-var1673 ((BOUND_VARIABLE_563 var3767)) var1673 (as @var1673_0 var1673))\r\n(define-fun var1673_iterator/1911472585 ((_arg_1 var1673)) Iterator (as @Iterator_0 Iterator))\r\n(define-fun Iterator_hasNext/-1669924200 ((_arg_1 Iterator)) Bool false)\r\n(define-fun var1349_get/1088891777 ((BOUND_VARIABLE_566 var1349) (BOUND_VARIABLE_567 var2013)) var2013 (as @var2013_0 var2013))\r\n(define-fun cast-from-String-to-var2013 ((BOUND_VARIABLE_570 String)) var2013 (as @var2013_0 var2013))\r\n(define-fun var217_valueOf/1602327315 ((BOUND_VARIABLE_573 Bool)) var217 (as @var217_0 var217))\r\n(define-fun var1349_put/1464166817 ((BOUND_VARIABLE_576 var1349) (BOUND_VARIABLE_577 var2013) (BOUND_VARIABLE_578 var2013)) var2013 (as @var2013_0 var2013))\r\n(define-fun cast-from-var217-to-var2013 ((BOUND_VARIABLE_581 var217)) var2013 (as @var2013_0 var2013))\r\n(define-fun var874-userOptions () var1673 (as @var1673_0 var1673))\r\n(define-fun var874-optionValues () var1349 (as @var1349_0 var1349))\r\n(define-fun var223!1 () var1911 (as @var1911_0 var1911))\r\n(define-fun var1048!1 () var3767 (as @var3767_0 var3767))\r\n(define-fun var2351!1 () var3767 (as @var3767_0 var3767))\r\n(define-fun var1686!1 () var1349 (as @var1349_0 var1349))\r\n(define-fun var731 () String \"\")\r\n(define-fun var535!1 () var217 (as @var217_0 var217))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35930112,
            "run_time": 0.04535555839538574,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1673:\n  ;;   var1673!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1673!val!0 () var1673)\n  ;; cardinality constraint:\n  (forall ((x var1673)) (= x var1673!val!0))\n  ;; -----------\n  ;; universe for Iterator:\n  ;;   Iterator!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun Iterator!val!0 () Iterator)\n  ;; cardinality constraint:\n  (forall ((x Iterator)) (= x Iterator!val!0))\n  ;; -----------\n  (define-fun var1048 () var3767\n    var3767-init)\n  (define-fun var223 () var1911\n    var1911-init)\n  (define-fun var3699 () var1673\n    (cast-from-var3767-to-var1673 var1048!1))\n  (define-fun var3215 () var1673\n    var874-userOptions)\n  (define-fun var3871 () Bool\n    (Iterator_hasNext/-1669924200 (var1673_iterator/1911472585 var874-userOptions)))\n  (define-fun var3704 () String\n    \"classic\")\n  (define-fun var1134 () var1673\n    (cast-from-var3767-to-var1673 var2351!1))\n  (define-fun var2352 () var1349\n    var874-optionValues)\n  (define-fun var3238 () Iterator\n    (var1673_iterator/1911472585 var874-userOptions))\n  (define-fun var3446 () var1349\n    (cast-from-var1911-to-var1349 var223!1))\n  (define-fun var2351 () var3767\n    var3767-init)\n  (define-fun var1686 () var1349\n    var874-optionValues)\n  (define-fun var535 () var217\n    (var217_valueOf/1602327315 false))\n  (define-fun var874-userOptions () var1673\n    var1673!val!0)\n  (define-fun var1450 () var2013\n    (var1349_get/1088891777\n  var874-optionValues\n  (cast-from-String-to-var2013 \"JAVA_TEMPLATE_TYPE\")))\n  (define-fun var716 () Bool\n    false)\n  (define-fun var874-optionValues () var1349\n    var1349!val!0)\n  (define-fun var2351!1 () var3767\n    var3767!val!0)\n  (define-fun var223!1 () var1911\n    var1911!val!0)\n  (define-fun var731 () String\n    \"\")\n  (define-fun var3767-init () var3767\n    var3767!val!0)\n  (define-fun var1911-init () var1911\n    var1911!val!0)\n  (define-fun var535!1 () var217\n    var217!val!0)\n  (define-fun var1048!1 () var3767\n    var3767!val!0)\n  (define-fun var1686!1 () var1349\n    var1349!val!0)\n  (define-fun var1673_iterator/1911472585 ((x!0 var1673)) Iterator\n    Iterator!val!0)\n  (define-fun Iterator_hasNext/-1669924200 ((x!0 Iterator)) Bool\n    false)\n  (define-fun <init>/451842749 ((x!0 var3767)) void\n    void!val!0)\n  (define-fun var1349_get/1088891777 ((x!0 var1349) (x!1 var2013)) var2013\n    var2013!val!0)\n  (define-fun cast-from-var3767-to-var1673 ((x!0 var3767)) var1673\n    var1673!val!0)\n  (define-fun var217_valueOf/1602327315 ((x!0 Bool)) var217\n    var217!val!0)\n  (define-fun <init>/-201242697 ((x!0 var1911)) void\n    void!val!0)\n  (define-fun cast-from-var1911-to-var1349 ((x!0 var1911)) var1349\n    var1349!val!0)\n  (define-fun var1349_put/1464166817 ((x!0 var1349) (x!1 var2013) (x!2 var2013)) var2013\n    var2013!val!0)\n  (define-fun cast-from-String-to-var2013 ((x!0 String)) var2013\n    var2013!val!0)\n  (define-fun cast-from-var217-to-var2013 ((x!0 var217)) var2013\n    var2013!val!0)\n)\n(error \"line 68 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152952832,
            "run_time": 0.7140955924987793,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var874-userOptions () var1673 var1673!2)\r\n  (define-fun Iterator!24 () Iterator (var1673_iterator/1911472585 var1673!2))\r\n  (define-fun Iterator_hasNext/-1669924200 ((x!0 Iterator)) Bool (ite (= x!0 Iterator!24) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 13,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "$r0 = new java.util.HashMap",
            "specialinvoke $r0.<java.util.HashMap: void <init>()>()",
            "<org.javacc.parser.Options: java.util.Map optionValues> = $r0",
            "$r1 = new java.util.HashSet",
            "specialinvoke $r1.<java.util.HashSet: void <init>()>()",
            "<org.javacc.parser.Options: java.util.Set cmdLineSetting> = $r1",
            "$r2 = new java.util.HashSet",
            "specialinvoke $r2.<java.util.HashSet: void <init>()>()",
            "<org.javacc.parser.Options: java.util.Set inputFileSetting> = $r2",
            "$r3 = <org.javacc.parser.Options: java.util.Set userOptions>",
            "r12 = interfaceinvoke $r3.<java.util.Set: java.util.Iterator iterator()>()",
            "$z0 = interfaceinvoke r12.<java.util.Iterator: boolean hasNext()>()",
            "if $z0 == 0 goto $r4 = <org.javacc.parser.Options: java.util.Map optionValues>",
            "$r4 = <org.javacc.parser.Options: java.util.Map optionValues>",
            "r14 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(\"JAVA_TEMPLATE_TYPE\")",
            "$r5 = \"classic\"",
            "z1 = virtualinvoke $r5.<java.lang.String: boolean equals(java.lang.Object)>(r14)",
            "$r6 = <org.javacc.parser.Options: java.util.Map optionValues>",
            "$r7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(z1)",
            "interfaceinvoke $r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"LEGACY_EXCEPTION_HANDLING\", $r7)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__tryExpansionUnit__1990152705\\879.smt2",
        "z3": {
            "memory": 31600640,
            "run_time": 60.00910425186157,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12537856,
            "run_time": 60.01503324508667,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37318656,
            "run_time": 60.000972032547,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180609024,
            "run_time": 0.8641433715820312,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var727/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPCodeGenerator__tryExpansionUnit__1990152705\\879.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3312!1 =\r\n     concat(var436!1, \"}\")\r\n   var1734!1 =\r\n     concat(var436!1, \"} {\")\r\n   var1064!1 =\r\n     concat(var436, \"try {\")\r\n\r\n625ms\r\n"
        },
        "undefined_function_count": 15,
        "assertion_count": 36,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r7 := @this: org.javacc.jjtree.CPPCodeGenerator",
            "r9 := @parameter0: org.javacc.jjtree.NodeScope",
            "r0 := @parameter1: org.javacc.jjtree.IO",
            "r2 := @parameter2: java.lang.String",
            "r6 := @parameter3: org.javacc.jjtree.JJTreeNode",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"try {\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r5)",
            "staticinvoke <org.javacc.jjtree.CPPCodeGenerator: void closeJJTreeComment(org.javacc.jjtree.IO)>(r0)",
            "virtualinvoke r6.<org.javacc.jjtree.JJTreeNode: java.lang.Object jjtAccept(org.javacc.jjtree.JJTreeParserVisitor,java.lang.Object)>(r7, r0)",
            "staticinvoke <org.javacc.jjtree.CPPCodeGenerator: void openJJTreeComment(org.javacc.jjtree.IO,java.lang.String)>(r0, null)",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println()>()",
            "$r8 = new java.util.Hashtable",
            "specialinvoke $r8.<java.util.Hashtable: void <init>()>()",
            "staticinvoke <org.javacc.jjtree.CPPCodeGenerator: void findThrown(org.javacc.jjtree.NodeScope,java.util.Hashtable,org.javacc.jjtree.JJTreeNode)>(r9, $r8, r6)",
            "r10 = virtualinvoke $r8.<java.util.Hashtable: java.util.Enumeration elements()>()",
            "specialinvoke r7.<org.javacc.jjtree.CPPCodeGenerator: void insertCatchBlocks(org.javacc.jjtree.NodeScope,org.javacc.jjtree.IO,java.util.Enumeration,java.lang.String)>(r9, r0, r10, r2)",
            "$r11 = new java.lang.StringBuilder",
            "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"} {\")",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r14)",
            "$z0 = virtualinvoke r9.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()",
            "if $z0 == 0 goto $r15 = new java.lang.StringBuilder",
            "$r15 = new java.lang.StringBuilder",
            "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"}\")",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r18)",
            "staticinvoke <org.javacc.jjtree.CPPCodeGenerator: void closeJJTreeComment(org.javacc.jjtree.IO)>(r0)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__DumpAsciiMove__-1297829632\\2135.smt2",
        "z3": {
            "memory": 32690176,
            "run_time": 60.00636029243469,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14217216,
            "run_time": 0.030488014221191406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2615 is 2\r\n; rep: (as @var2615_0 var2615)\r\n; rep: (as @var2615_1 var2615)\r\n; cardinality of var3326 is 2\r\n; rep: (as @var3326_0 var3326)\r\n; rep: (as @var3326_1 var3326)\r\n; cardinality of var3269 is 1\r\n; rep: (as @var3269_0 var3269)\r\n; cardinality of var984 is 3\r\n; rep: (as @var984_0 var984)\r\n; rep: (as @var984_1 var984)\r\n; rep: (as @var984_2 var984)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun selfLoop/-2129610754 ((_arg_1 var2615)) Bool false)\r\n(define-fun var3269_size/-959786421 ((_arg_1 var3269)) Int 0)\r\n(define-fun asciiMoves/1847772117 ((_arg_1 var2615)) (Array Int Int) (store ((as const (Array Int Int)) 0) 0 (- 1)))\r\n(define-fun var2615_OnlyOneBitSet/-1979413806 ((_arg_1 Int)) Int (- 2))\r\n(define-fun kindToPrint/1847772117 ((_arg_1 var2615)) Int 2147483647)\r\n(define-fun arr-var984-init () (Array Int var984) ((as const (Array Int var984)) (as @var984_0 var984)))\r\n(define-fun String-init () String \"\")\r\n(define-fun cast-from-String-to-var984 ((_arg_1 String)) var984 (ite (= \"                  if (curChar == )\" _arg_1) (as @var984_0 var984) (as @var984_2 var984)))\r\n(define-fun genCodeLine/787715242 ((BOUND_VARIABLE_1960 var3326) (BOUND_VARIABLE_1961 (Array Int var984))) void (as @void_0 void))\r\n(define-fun next/1847772117 ((_arg_1 var2615)) var2615 (as @var2615_1 var2615))\r\n(define-fun null-var2615 () var2615 (as @var2615_1 var2615))\r\n(define-fun null-var3326 () var3326 (as @var3326_0 var3326))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-__Array__Int__Bool__ () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n(define-fun var2615-allStates () var3269 (as @var3269_0 var3269))\r\n(define-fun null-__Array__Int__var984__ () (Array Int var984) ((as const (Array Int var984)) (as @var984_1 var984)))\r\n(define-fun var2934 () var2615 (as @var2615_0 var2615))\r\n(define-fun var1866 () var3326 (as @var3326_1 var3326))\r\n(define-fun var2309 () Int 0)\r\n(define-fun var791 () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var548!1 () String \"\")\r\n(define-fun var548!2 () String \"                  if (curChar == \")\r\n(define-fun var3255!1 () String \"                  if (curChar == \")\r\n(define-fun var131!1 () String \"                  if (curChar == )\")\r\n(define-fun var2011!1 () (Array Int var984) ((as const (Array Int var984)) (as @var984_0 var984)))\r\n(define-fun var1866!1 () var3326 (as @var3326_0 var3326))\r\n(define-fun var2011!2 () (Array Int var984) ((as const (Array Int var984)) (as @var984_0 var984)))\r\n(define-fun var234!1 () (Array Int var984) ((as const (Array Int var984)) (as @var984_2 var984)))\r\n(define-fun var1866!2 () var3326 (as @var3326_0 var3326))\r\n(define-fun var234!2 () (Array Int var984) ((as const (Array Int var984)) (as @var984_0 var984)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37752832,
            "run_time": 0.09204459190368652,
            "is_sat": "",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 223166464,
            "run_time": 1.240049123764038,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var234!1 () (Array Int var984) (store ((as const (Array Int var984)) var984!4294967332) 0 var984!4294967324))\r\n  (define-fun var2011!1 () (Array Int var984) (store ((as const (Array Int var984)) var984!4294967330) 0 var984!4294967326))\r\n  (define-fun var131!1 () String \"                  if (curChar == )\")\r\n  (define-fun var3255!1 () String \"                  if (curChar == \")\r\n  (define-fun var548!2 () String \"                  if (curChar == \")\r\n  (define-fun var548!1 () String \"\")\r\n  (define-fun var791 () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n  (define-fun var2309 () Int 2147483653)\r\n  (define-fun var1866 () var3326 var3326!4294967304)\r\n  (define-fun var2934 () var2615 var2615!4294967302)\r\n  (define-fun null-__Array__Int__var984__ () (Array Int var984) ((as const (Array Int var984)) var984!0))\r\n  (define-fun var2615-allStates () var3269 var3269!4294967300)\r\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool) (store ((as const (Array Int Bool)) true) 0 false))\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3326 () var3326 var3326!4294967298)\r\n  (define-fun null-var2615 () var2615 var2615!4294967296)\r\n  (define-fun var2615!4294967296 () var2615 (next/1847772117 var2615!4294967302))\r\n  (define-fun var984!4294967326 () var984 (cast-from-String-to-var984 \"                  if (curChar == )\"))\r\n  (define-fun var984!4294967324 () var984 (cast-from-String-to-var984 \"                  break;\"))\r\n  (define-fun abbrev_122 ((x!0 Int)) String (ite (= x!0 0) \"                  if (curChar == \" \"\"))\r\n  (define-fun kindToPrint/1847772117 ((x!0 var2615)) Int (ite (= x!0 var2615!4294967302) 2147483647 0))\r\n  (define-fun var2615_OnlyOneBitSet/-1979413806 ((x!0 Int)) Int (ite (= x!0 (- 1)) (- 137438953798) 0))\r\n  (define-fun asciiMoves/1847772117 ((x!0 var2615)) (Array Int Int) (ite (= x!0 var2615!4294967302) (store ((as const (Array Int Int)) 2147483664) 2147483653 (- 1)) ((as const (Array Int Int)) 0)))\r\n  (define-fun var3269_size/-959786421 ((x!0 var3269)) Int (ite (= x!0 var3269!4294967300) 0 0))\r\n  (define-fun selfLoop/-2129610754 ((x!0 var2615)) Bool (ite (= x!0 var2615!4294967302) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 10,
        "assertion_count": 31,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.NfaState",
            "r4 := @parameter0: org.javacc.parser.CodeGenerator",
            "i0 := @parameter1: int",
            "r145 := @parameter2: boolean[]",
            "$z0 = specialinvoke r0.<org.javacc.parser.NfaState: boolean selfLoop()>()",
            "if $z0 == 0 goto $z6 = 0",
            "$z6 = 0",
            "z7 = $z6",
            "z8 = 1",
            "z15 = 1",
            "z14 = 1",
            "z13 = 1",
            "z12 = 1",
            "z11 = 1",
            "i52 = 0",
            "$r172 = <org.javacc.parser.NfaState: java.util.List allStates>",
            "$i53 = interfaceinvoke $r172.<java.util.List: int size()>()",
            "if i52 >= $i53 goto $r1 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$r1 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$l1 = $r1[i0]",
            "i55 = staticinvoke <org.javacc.parser.NfaState: int OnlyOneBitSet(long)>($l1)",
            "$r2 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$l2 = $r2[i0]",
            "$b3 = $l2 cmp -1L",
            "if $b3 == 0 goto r175 = \"\"",
            "r175 = \"\"",
            "r181 = \"\"",
            "r180 = \"\"",
            "r179 = \"\"",
            "r178 = \"\"",
            "r177 = \"\"",
            "$i56 = r0.<org.javacc.parser.NfaState: int kindToPrint>",
            "if $i56 == 2147483647 goto $i65 = (int) -1",
            "$i65 = (int) -1",
            "if i55 == $i65 goto $r3 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$r71 = newarray (java.lang.Object)[1]",
            "$r192 = new java.lang.StringBuilder",
            "specialinvoke $r192.<java.lang.StringBuilder: void <init>()>()",
            "$r73 = virtualinvoke $r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"                  if (curChar == \")",
            "$i19 = 64 * i0",
            "$i20 = $i19 + i55",
            "$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20)",
            "$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r71[0] = $r76",
            "virtualinvoke r4.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r71)",
            "r175 = \"   \"",
            "r181 = \"   \"",
            "r180 = \"   \"",
            "r179 = \"   \"",
            "r178 = \"   \"",
            "r177 = \"   \"",
            "goto [?= $r176 = r0.<org.javacc.parser.NfaState: org.javacc.parser.NfaState next>]",
            "$r176 = r0.<org.javacc.parser.NfaState: org.javacc.parser.NfaState next>",
            "if $r176 == null goto (branch)",
            "if z12 == 0 goto $r5 = newarray (java.lang.Object)[1]",
            "$r6 = newarray (java.lang.Object)[1]",
            "$r6[0] = \"                  break;\"",
            "virtualinvoke r4.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r6)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__DumpAsciiMove__-1297829632\\2155.smt2",
        "z3": {
            "memory": 28446720,
            "run_time": 0.05948162078857422,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 134 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9969664,
            "run_time": 0.015897035598754883,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35926016,
            "run_time": 0.046984195709228516,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 134 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 185909248,
            "run_time": 0.8209412097930908,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 10,
        "assertion_count": 31,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.NfaState",
            "r4 := @parameter0: org.javacc.parser.CodeGenerator",
            "i0 := @parameter1: int",
            "r145 := @parameter2: boolean[]",
            "$z0 = specialinvoke r0.<org.javacc.parser.NfaState: boolean selfLoop()>()",
            "if $z0 == 0 goto $z6 = 0",
            "$z6 = 0",
            "z7 = $z6",
            "z8 = 1",
            "z15 = 1",
            "z14 = 1",
            "z13 = 1",
            "z12 = 1",
            "z11 = 1",
            "i52 = 0",
            "$r172 = <org.javacc.parser.NfaState: java.util.List allStates>",
            "$i53 = interfaceinvoke $r172.<java.util.List: int size()>()",
            "if i52 >= $i53 goto $r1 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$r1 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$l1 = $r1[i0]",
            "i55 = staticinvoke <org.javacc.parser.NfaState: int OnlyOneBitSet(long)>($l1)",
            "$r2 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$l2 = $r2[i0]",
            "$b3 = $l2 cmp -1L",
            "if $b3 == 0 goto r175 = \"\"",
            "r175 = \"\"",
            "r181 = \"\"",
            "r180 = \"\"",
            "r179 = \"\"",
            "r178 = \"\"",
            "r177 = \"\"",
            "$i56 = r0.<org.javacc.parser.NfaState: int kindToPrint>",
            "if $i56 == 2147483647 goto $i65 = (int) -1",
            "$i65 = (int) -1",
            "if i55 == $i65 goto $r3 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$r71 = newarray (java.lang.Object)[1]",
            "$r192 = new java.lang.StringBuilder",
            "specialinvoke $r192.<java.lang.StringBuilder: void <init>()>()",
            "$r73 = virtualinvoke $r192.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"                  if (curChar == \")",
            "$i19 = 64 * i0",
            "$i20 = $i19 + i55",
            "$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i20)",
            "$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r71[0] = $r76",
            "virtualinvoke r4.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r71)",
            "r175 = \"   \"",
            "r181 = \"   \"",
            "r180 = \"   \"",
            "r179 = \"   \"",
            "r178 = \"   \"",
            "r177 = \"   \"",
            "goto [?= $r176 = r0.<org.javacc.parser.NfaState: org.javacc.parser.NfaState next>]",
            "$r176 = r0.<org.javacc.parser.NfaState: org.javacc.parser.NfaState next>",
            "if $r176 == null goto (branch)",
            "if z12 == 0 goto $r5 = newarray (java.lang.Object)[1]",
            "$r5 = newarray (java.lang.Object)[1]",
            "$r5[0] = \"                  break;\"",
            "virtualinvoke r4.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r5)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__DumpStatesForKind__616829560\\3039.smt2",
        "z3": {
            "memory": 32985088,
            "run_time": 60.01497530937195,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14024704,
            "run_time": 0.030495166778564453,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1478 is 3\r\n; rep: (as @var1478_0 var1478)\r\n; rep: (as @var1478_1 var1478)\r\n; rep: (as @var1478_2 var1478)\r\n; cardinality of var3524 is 1\r\n; rep: (as @var3524_0 var3524)\r\n; cardinality of var732 is 3\r\n; rep: (as @var732_0 var732)\r\n; rep: (as @var732_1 var732)\r\n; rep: (as @var732_2 var732)\r\n; cardinality of var2484 is 1\r\n; rep: (as @var2484_0 var2484)\r\n; cardinality of var3433 is 1\r\n; rep: (as @var3433_0 var3433)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun isJavaLanguage/-1752064482 ((_arg_1 var1478)) Bool (= (as @var1478_1 var1478) _arg_1))\r\n(define-fun var3524_DumpStatesForState/-476328967 ((BOUND_VARIABLE_2048 var1478)) void (as @void_0 void))\r\n(define-fun switchToStaticsFile/-245861004 ((BOUND_VARIABLE_2051 var1478)) void (as @void_0 void))\r\n(define-fun arr-var732-init () (Array Int var732) ((as const (Array Int var732)) (as @var732_0 var732)))\r\n(define-fun String-init () String \"\")\r\n(define-fun cast-from-String-to-var732 ((_arg_1 String)) var732 (ite (= \"static const int kindForState[][] = \" _arg_1) (as @var732_0 var732) (as @var732_2 var732)))\r\n(define-fun genCode/442726974 ((BOUND_VARIABLE_2054 var1478) (BOUND_VARIABLE_2055 (Array Int var732))) void (as @void_0 void))\r\n(define-fun genCodeLine/787715242 ((BOUND_VARIABLE_2058 var1478) (BOUND_VARIABLE_2059 (Array Int var732))) void (as @void_0 void))\r\n(define-fun null-var1478 () var1478 (as @var1478_0 var1478))\r\n(define-fun var3433-lg () var2484 (as @var2484_0 var2484))\r\n(define-fun var2484-stateSetSize () Int (- 1))\r\n(define-fun null-__Array__Int__var732__ () (Array Int var732) ((as const (Array Int var732)) (as @var732_1 var732)))\r\n(define-fun var3524-kinds () (Array Int (Array Int Int)) ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)))\r\n(define-fun null-__Array__Int____Array__Int__Int____ () (Array Int (Array Int Int)) ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)))\r\n(define-fun var3683 () var1478 (as @var1478_1 var1478))\r\n(define-fun var3683!1 () var1478 (as @var1478_2 var1478))\r\n(define-fun var3683!2 () var1478 (as @var1478_0 var1478))\r\n(define-fun var1715!1 () String \"\")\r\n(define-fun var1715!2 () String \"static const int kindForState[\")\r\n(define-fun var2806!1 () String \"static const int kindForState[\")\r\n(define-fun var2439!1 () String \"static const int kindForState[][\")\r\n(define-fun var2402!1 () String \"static const int kindForState[][\")\r\n(define-fun var3261!1 () String \"static const int kindForState[][] = \")\r\n(define-fun var725!1 () (Array Int var732) ((as const (Array Int var732)) (as @var732_0 var732)))\r\n(define-fun var3683!3 () var1478 (as @var1478_0 var1478))\r\n(define-fun var725!2 () (Array Int var732) ((as const (Array Int var732)) (as @var732_0 var732)))\r\n(define-fun var2140!1 () (Array Int var732) ((as const (Array Int var732)) (as @var732_2 var732)))\r\n(define-fun var3683!4 () var1478 (as @var1478_0 var1478))\r\n(define-fun var2140!2 () (Array Int var732) ((as const (Array Int var732)) (as @var732_0 var732)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38297600,
            "run_time": 0.09466361999511719,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 105 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 106 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 212410368,
            "run_time": 1.1034891605377197,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2140!1 () (Array Int var732) (store ((as const (Array Int var732)) var732!236) 0 var732!230))\r\n  (define-fun var725!1 () (Array Int var732) (store ((as const (Array Int var732)) var732!234) 0 var732!232))\r\n  (define-fun var3261!1 () String \"static const int kindForState[][] = \")\r\n  (define-fun var2402!1 () String \"static const int kindForState[][\")\r\n  (define-fun var2439!1 () String \"static const int kindForState[][\")\r\n  (define-fun var2806!1 () String \"static const int kindForState[\")\r\n  (define-fun var1715!2 () String \"static const int kindForState[\")\r\n  (define-fun var1715!1 () String \"\")\r\n  (define-fun var3683!1 () var1478 var1478!210)\r\n  (define-fun var3683 () var1478 var1478!208)\r\n  (define-fun null-__Array__Int____Array__Int__Int____ () (Array Int (Array Int Int)) ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)))\r\n  (define-fun var3524-kinds () (Array Int (Array Int Int)) ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)))\r\n  (define-fun null-__Array__Int__var732__ () (Array Int var732) ((as const (Array Int var732)) var732!0))\r\n  (define-fun var2484-stateSetSize () Int (- 6))\r\n  (define-fun null-var1478 () var1478 var1478!206)\r\n  (define-fun var732!232 () var732 (cast-from-String-to-var732 \"static const int kindForState[][] = \"))\r\n  (define-fun var732!230 () var732 (cast-from-String-to-var732 \"null;\"))\r\n  (define-fun abbrev_114 ((x!0 Int)) String (ite (= x!0 0) \"static const int kindForState[\" \"\"))\r\n  (define-fun isJavaLanguage/-1752064482 ((x!0 var1478)) Bool (ite (= x!0 var1478!208) true (ite (= x!0 var1478!210) false true)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 28,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.CodeGenerator",
            "$z0 = virtualinvoke r0.<org.javacc.parser.CodeGenerator: boolean isJavaLanguage()>()",
            "if $z0 == 0 goto staticinvoke <org.javacc.parser.NfaState: void DumpStatesForStateCPP(org.javacc.parser.CodeGenerator)>(r0)",
            "staticinvoke <org.javacc.parser.NfaState: void DumpStatesForState(org.javacc.parser.CodeGenerator)>(r0)",
            "goto [?= z2 = 0]",
            "z2 = 0",
            "$z1 = virtualinvoke r0.<org.javacc.parser.CodeGenerator: boolean isJavaLanguage()>()",
            "if $z1 == 0 goto virtualinvoke r0.<org.javacc.parser.CodeGenerator: void switchToStaticsFile()>()",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void switchToStaticsFile()>()",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"static const int kindForState[\")",
            "$r3 = <org.javacc.parser.Main: org.javacc.parser.LexGen lg>",
            "$i0 = <org.javacc.parser.LexGen: int stateSetSize>",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"][\")",
            "$r6 = <org.javacc.parser.Main: org.javacc.parser.LexGen lg>",
            "$i1 = <org.javacc.parser.LexGen: int stateSetSize>",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r10",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCode(java.lang.Object[])>($r1)",
            "$r11 = <org.javacc.parser.NfaState: int[][] kinds>",
            "if $r11 != null goto $r12 = newarray (java.lang.Object)[1]",
            "$r25 = newarray (java.lang.Object)[1]",
            "$r25[0] = \"null;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r25)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__DumpStatesForKind__616829560\\3048.smt2",
        "z3": {
            "memory": 32399360,
            "run_time": 0.06113457679748535,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2058:\r\n  ;;   var2058!val!1 var2058!val!0 var2058!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2058!val!1 () var2058)\r\n  (declare-fun var2058!val!0 () var2058)\r\n  (declare-fun var2058!val!2 () var2058)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2058))\r\n          (or (= x var2058!val!1) (= x var2058!val!0) (= x var2058!val!2)))\r\n  ;; -----------\r\n  ;; universe for var522:\r\n  ;;   var522!val!0 var522!val!1 var522!val!5 var522!val!2 var522!val!3 var522!val!4 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var522!val!0 () var522)\r\n  (declare-fun var522!val!1 () var522)\r\n  (declare-fun var522!val!5 () var522)\r\n  (declare-fun var522!val!2 () var522)\r\n  (declare-fun var522!val!3 () var522)\r\n  (declare-fun var522!val!4 () var522)\r\n  ;; cardinality constraint:\r\n  (forall ((x var522))\r\n          (or (= x var522!val!0)\r\n              (= x var522!val!1)\r\n              (= x var522!val!5)\r\n              (= x var522!val!2)\r\n              (= x var522!val!3)\r\n              (= x var522!val!4)))\r\n  ;; -----------\r\n  (define-fun var422 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var1001!1 () (Array Int var522)\r\n    (store ((as const (Array Int var522)) var522!val!0) 2 var522!val!2))\r\n  (define-fun var829 () var2058\r\n    var2058!val!0)\r\n  (define-fun null-__Array__Int__var522__ () (Array Int var522)\r\n    (store ((as const (Array Int var522)) var522!val!4) 2 var522!val!3))\r\n  (define-fun null-var2058 () var2058\r\n    var2058!val!1)\r\n  (define-fun var829!1 () var2058\r\n    var2058!val!2)\r\n  (define-fun var3037!1 () (Array Int var522)\r\n    (store ((as const (Array Int var522)) var522!val!5) 0 var522!val!1))\r\n  (define-fun var1001 () (Array Int var522)\r\n    arr-var522-init)\r\n  (define-fun var2624 () (Array Int (Array Int Int))\r\n    var1349-kinds)\r\n  (define-fun var951 () Bool\r\n    (isJavaLanguage/-1752064482 var829))\r\n  (define-fun var614 () Bool\r\n    (isJavaLanguage/-1752064482 var829!1))\r\n  (define-fun var3037 () (Array Int var522)\r\n    arr-var522-init)\r\n  (define-fun null-__Array__Int____Array__Int__Int____ () (Array Int (Array Int Int))\r\n    ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)))\r\n  (define-fun var1349-kinds () (Array Int (Array Int Int))\r\n    ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)))\r\n  (define-fun var3037!2 () (Array Int var522)\r\n    ((as const (Array Int var522)) var522!val!0))\r\n  (define-fun var829!2 () var2058\r\n    var2058!val!1)\r\n  (define-fun var829!3 () var2058\r\n    var2058!val!1)\r\n  (define-fun arr-var522-init () (Array Int var522)\r\n    ((as const (Array Int var522)) var522!val!0))\r\n  (define-fun var1001!2 () (Array Int var522)\r\n    ((as const (Array Int var522)) var522!val!0))\r\n  (define-fun isJavaLanguage/-1752064482 ((x!0 var2058)) Bool\r\n    (ite (= x!0 var2058!val!2) true\r\n      false))\r\n  (define-fun k!1 ((x!0 Int)) var522\r\n    (ite (= x!0 2) var522!val!3\r\n      var522!val!4))\r\n  (define-fun k!2 ((x!0 Int)) var522\r\n    (ite (= x!0 0) var522!val!1\r\n      var522!val!5))\r\n  (define-fun cast-from-String-to-var522 ((x!0 String)) var522\r\n    (ite (= x!0\r\n            (str.++ (seq.unit (_ Char 110))\r\n                    (seq.unit (_ Char 117))\r\n                    (seq.unit (_ Char 108))\r\n                    (seq.unit (_ Char 108))\r\n                    (seq.unit (_ Char 59))))\r\n      var522!val!1\r\n      var522!val!0))\r\n  (define-fun genCodeLine/787715242 ((x!0 var2058) (x!1 (Array Int var522))) void\r\n    void!val!0)\r\n  (define-fun genCode/442726974 ((x!0 var2058) (x!1 (Array Int var522))) void\r\n    void!val!0)\r\n  (define-fun var1349_DumpStatesForStateCPP/11920310 ((x!0 var2058)) void\r\n    void!val!0)\r\n)\r\n(error \"line 61 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9973760,
            "run_time": 0.014682769775390625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2058 is 3\r\n; rep: (as @var2058_0 var2058)\r\n; rep: (as @var2058_1 var2058)\r\n; rep: (as @var2058_2 var2058)\r\n; cardinality of var1349 is 1\r\n; rep: (as @var1349_0 var1349)\r\n; cardinality of var522 is 3\r\n; rep: (as @var522_0 var522)\r\n; rep: (as @var522_1 var522)\r\n; rep: (as @var522_2 var522)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun isJavaLanguage/-1752064482 ((_arg_1 var2058)) Bool (= (as @var2058_2 var2058) _arg_1))\r\n(define-fun var1349_DumpStatesForStateCPP/11920310 ((BOUND_VARIABLE_698 var2058)) void (as @void_0 void))\r\n(define-fun arr-var522-init () (Array Int var522) ((as const (Array Int var522)) (as @var522_0 var522)))\r\n(define-fun cast-from-String-to-var522 ((_arg_1 String)) var522 (ite (= \"protected static final int[][] kindForState = \" _arg_1) (as @var522_0 var522) (as @var522_2 var522)))\r\n(define-fun genCode/442726974 ((BOUND_VARIABLE_701 var2058) (BOUND_VARIABLE_702 (Array Int var522))) void (as @void_0 void))\r\n(define-fun genCodeLine/787715242 ((BOUND_VARIABLE_705 var2058) (BOUND_VARIABLE_706 (Array Int var522))) void (as @void_0 void))\r\n(define-fun null-var2058 () var2058 (as @var2058_0 var2058))\r\n(define-fun null-__Array__Int__var522__ () (Array Int var522) ((as const (Array Int var522)) (as @var522_1 var522)))\r\n(define-fun var1349-kinds () (Array Int (Array Int Int)) ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)))\r\n(define-fun null-__Array__Int____Array__Int__Int____ () (Array Int (Array Int Int)) ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)))\r\n(define-fun var829 () var2058 (as @var2058_1 var2058))\r\n(define-fun var829!1 () var2058 (as @var2058_2 var2058))\r\n(define-fun var1001!1 () (Array Int var522) ((as const (Array Int var522)) (as @var522_0 var522)))\r\n(define-fun var829!2 () var2058 (as @var2058_0 var2058))\r\n(define-fun var1001!2 () (Array Int var522) ((as const (Array Int var522)) (as @var522_0 var522)))\r\n(define-fun var3037!1 () (Array Int var522) ((as const (Array Int var522)) (as @var522_2 var522)))\r\n(define-fun var829!3 () var2058 (as @var2058_0 var2058))\r\n(define-fun var3037!2 () (Array Int var522) ((as const (Array Int var522)) (as @var522_0 var522)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35852288,
            "run_time": 0.04714679718017578,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2058:\n  ;;   var2058!val!1 var2058!val!0 var2058!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2058!val!1 () var2058)\n  (declare-fun var2058!val!0 () var2058)\n  (declare-fun var2058!val!2 () var2058)\n  ;; cardinality constraint:\n  (forall ((x var2058))\n          (or (= x var2058!val!1) (= x var2058!val!0) (= x var2058!val!2)))\n  ;; -----------\n  ;; universe for var522:\n  ;;   var522!val!0 var522!val!1 var522!val!5 var522!val!2 var522!val!3 var522!val!4 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var522!val!0 () var522)\n  (declare-fun var522!val!1 () var522)\n  (declare-fun var522!val!5 () var522)\n  (declare-fun var522!val!2 () var522)\n  (declare-fun var522!val!3 () var522)\n  (declare-fun var522!val!4 () var522)\n  ;; cardinality constraint:\n  (forall ((x var522))\n          (or (= x var522!val!0)\n              (= x var522!val!1)\n              (= x var522!val!5)\n              (= x var522!val!2)\n              (= x var522!val!3)\n              (= x var522!val!4)))\n  ;; -----------\n  (define-fun var951 () Bool\n    (isJavaLanguage/-1752064482 var829))\n  (define-fun null-__Array__Int__var522__ () (Array Int var522)\n    (store ((as const (Array Int var522)) var522!val!4) 2 var522!val!3))\n  (define-fun var614 () Bool\n    (isJavaLanguage/-1752064482 var829!1))\n  (define-fun var2624 () (Array Int (Array Int Int))\n    var1349-kinds)\n  (define-fun var829 () var2058\n    var2058!val!0)\n  (define-fun var422 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var3037!1 () (Array Int var522)\n    (store ((as const (Array Int var522)) var522!val!5) 0 var522!val!1))\n  (define-fun null-var2058 () var2058\n    var2058!val!1)\n  (define-fun var829!1 () var2058\n    var2058!val!2)\n  (define-fun var1001 () (Array Int var522)\n    arr-var522-init)\n  (define-fun var3037 () (Array Int var522)\n    arr-var522-init)\n  (define-fun var1001!1 () (Array Int var522)\n    (store ((as const (Array Int var522)) var522!val!2) 0 var522!val!0))\n  (define-fun null-__Array__Int____Array__Int__Int____ () (Array Int (Array Int Int))\n    ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)))\n  (define-fun var1349-kinds () (Array Int (Array Int Int))\n    ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)))\n  (define-fun var3037!2 () (Array Int var522)\n    ((as const (Array Int var522)) var522!val!0))\n  (define-fun var829!2 () var2058\n    var2058!val!1)\n  (define-fun var829!3 () var2058\n    var2058!val!1)\n  (define-fun arr-var522-init () (Array Int var522)\n    ((as const (Array Int var522)) var522!val!0))\n  (define-fun var1001!2 () (Array Int var522)\n    ((as const (Array Int var522)) var522!val!0))\n  (define-fun cast-from-String-to-var522 ((x!0 String)) var522\n    (ite (= x!0 \"null;\") var522!val!1\n      var522!val!0))\n  (define-fun k!1 ((x!0 Int)) var522\n    (ite (= x!0 2) var522!val!3\n      var522!val!4))\n  (define-fun k!2 ((x!0 Int)) var522\n    (ite (= x!0 0) var522!val!1\n      var522!val!5))\n  (define-fun isJavaLanguage/-1752064482 ((x!0 var2058)) Bool\n    (ite (= x!0 var2058!val!2) true\n      false))\n  (define-fun genCodeLine/787715242 ((x!0 var2058) (x!1 (Array Int var522))) void\n    void!val!0)\n  (define-fun genCode/442726974 ((x!0 var2058) (x!1 (Array Int var522))) void\n    void!val!0)\n  (define-fun var1349_DumpStatesForStateCPP/11920310 ((x!0 var2058)) void\n    void!val!0)\n)\n(error \"line 61 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182947840,
            "run_time": 0.9124503135681152,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3037!1 () (Array Int var522) (store ((as const (Array Int var522)) var522!130) 0 var522!126))\r\n  (define-fun var1001!1 () (Array Int var522) (store ((as const (Array Int var522)) var522!128) 0 var522!124))\r\n  (define-fun var829!1 () var2058 var2058!108)\r\n  (define-fun var829 () var2058 var2058!106)\r\n  (define-fun null-__Array__Int____Array__Int__Int____ () (Array Int (Array Int Int)) ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)))\r\n  (define-fun var1349-kinds () (Array Int (Array Int Int)) ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)))\r\n  (define-fun null-__Array__Int__var522__ () (Array Int var522) ((as const (Array Int var522)) var522!0))\r\n  (define-fun null-var2058 () var2058 var2058!104)\r\n  (define-fun var522!126 () var522 (cast-from-String-to-var522 \"null;\"))\r\n  (define-fun var522!124 () var522 (cast-from-String-to-var522 \"protected static final int[][] kindForState = \"))\r\n  (define-fun isJavaLanguage/-1752064482 ((x!0 var2058)) Bool (ite (= x!0 var2058!106) false (ite (= x!0 var2058!108) true true)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 14,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.CodeGenerator",
            "$z0 = virtualinvoke r0.<org.javacc.parser.CodeGenerator: boolean isJavaLanguage()>()",
            "if $z0 == 0 goto staticinvoke <org.javacc.parser.NfaState: void DumpStatesForStateCPP(org.javacc.parser.CodeGenerator)>(r0)",
            "staticinvoke <org.javacc.parser.NfaState: void DumpStatesForStateCPP(org.javacc.parser.CodeGenerator)>(r0)",
            "z2 = 0",
            "$z1 = virtualinvoke r0.<org.javacc.parser.CodeGenerator: boolean isJavaLanguage()>()",
            "if $z1 == 0 goto virtualinvoke r0.<org.javacc.parser.CodeGenerator: void switchToStaticsFile()>()",
            "$r26 = newarray (java.lang.Object)[1]",
            "$r26[0] = \"protected static final int[][] kindForState = \"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCode(java.lang.Object[])>($r26)",
            "goto [?= $r11 = <org.javacc.parser.NfaState: int[][] kinds>]",
            "$r11 = <org.javacc.parser.NfaState: int[][] kinds>",
            "if $r11 != null goto $r12 = newarray (java.lang.Object)[1]",
            "$r25 = newarray (java.lang.Object)[1]",
            "$r25[0] = \"null;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r25)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPNodeFiles__generateVisitorInterface__415263387\\898.smt2",
        "z3": {
            "memory": 32030720,
            "run_time": 60.00259065628052,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.029149770736694336,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var355 is 2\r\n; rep: (as @var355_0 var355)\r\n; rep: (as @var355_1 var355)\r\n; cardinality of var3092 is 1\r\n; rep: (as @var3092_0 var3092)\r\n; cardinality of var2614 is 1\r\n; rep: (as @var2614_0 var2614)\r\n; cardinality of var159 is 1\r\n; rep: (as @var159_0 var159)\r\n; cardinality of var3243 is 1\r\n; rep: (as @var3243_0 var3243)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3092_visitorClass/-25171238 () String \"\")\r\n(define-fun var159_getNodeNames/-49238214 () var2614 (as @var2614_0 var2614))\r\n(define-fun String-init () String \"\")\r\n(define-fun println/-1226480079 ((BOUND_VARIABLE_888 var355) (BOUND_VARIABLE_889 String)) void (as @void_0 void))\r\n(define-fun var3092_getVisitorArgumentType/1105650101 () String \"\")\r\n(define-fun var3092_getVisitorReturnType/1747350434 () String \"\")\r\n(define-fun var3243_getVisitorDataType/823598082 () String \"\")\r\n(define-fun var3243_getMulti/-1858061690 () Bool false)\r\n(define-fun null-var355 () var355 (as @var355_0 var355))\r\n(define-fun var511 () var355 (as @var355_1 var355))\r\n(define-fun var3030!1 () String \"\")\r\n(define-fun var3030!2 () String \"class \")\r\n(define-fun var2240!1 () String \"class \")\r\n(define-fun var511!1 () var355 (as @var355_0 var355))\r\n(define-fun var2251!1 () String \"\")\r\n(define-fun var511!2 () var355 (as @var355_0 var355))\r\n(define-fun var860 () String \"\")\r\n(define-fun var511!3 () var355 (as @var355_0 var355))\r\n(define-fun var3405 () String \"\")\r\n(define-fun var193!1 () String \"\")\r\n(define-fun var193!2 () String \"  virtual \")\r\n(define-fun var1605!1 () String \"  virtual \")\r\n(define-fun var2613!1 () String \"  virtual  visit(const SimpleNode *node, \")\r\n(define-fun var3912!1 () String \"  virtual  visit(const SimpleNode *node, \")\r\n(define-fun var31!1 () String \"  virtual  visit(const SimpleNode *node,  data) = 0;\")\r\n(define-fun var511!4 () var355 (as @var355_0 var355))\r\n(define-fun var3618!1 () String \"\")\r\n(define-fun var3863!1 () String \"\")\r\n(define-fun var3863!2 () String \"  virtual ~\")\r\n(define-fun var1516!1 () String \"  virtual ~\")\r\n(define-fun var2592!1 () String \"  virtual ~() { }\")\r\n(define-fun var511!5 () var355 (as @var355_0 var355))\r\n(define-fun var2453!1 () String \"\")\r\n(define-fun var511!6 () var355 (as @var355_0 var355))\r\n(define-fun var1934 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36544512,
            "run_time": 60.005322217941284,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 187486208,
            "run_time": 0.9267537593841553,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var355/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPNodeFiles__generateVisitorInterface__415263387\\898.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2592!1 =\r\n     concat(all_47_4, \"() { }\")\r\n   var2613!1 =\r\n     concat(all_44_4, \" visit(const SimpleNode *node, \")\r\n   var31!1 =\r\n     concat(all_41_3, \" data) = 0;\")\r\n   var3912!1 =\r\n     concat(all_29_2, var3092_getVisitorArgumentType/1105650101)\r\n   var1516!1 =\r\n     concat(\"  virtual ~\", var3092_visitorClass/-25171238)\r\n   var1605!1 =\r\n     concat(\"  virtual \", var3092_getVisitorReturnType/1747350434)\r\n   var2240!1 =\r\n     concat(\"class \", var3092_visitorClass/-25171238)\r\n   all_41_3 =\r\n     concat(all_29_2, var3092_getVisitorArgumentType/1105650101)\r\n   all_47_4 =\r\n     concat(\"  virtual ~\", var3092_visitorClass/-25171238)\r\n   all_44_4 =\r\n     concat(\"  virtual \", var3092_getVisitorReturnType/1747350434)\r\n   all_29_2 =\r\n     concat(all_50_5, \" visit(const SimpleNode *node, \")\r\n   all_50_5 =\r\n     concat(\"  virtual \", var3092_getVisitorReturnType/1747350434)\r\n\r\n711ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 39,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 10,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.io.PrintWriter",
            "r0 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String visitorClass()>()",
            "r1 = staticinvoke <org.javacc.jjtree.ASTNodeDescriptor: java.util.List getNodeNames()>()",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"class \")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r6)",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(\"{\")",
            "r40 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String getVisitorArgumentType()>()",
            "r7 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String getVisitorReturnType()>()",
            "$r8 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getVisitorDataType()>()",
            "$z0 = virtualinvoke $r8.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 != 0 goto virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(\"  public:\")",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(\"  public:\")",
            "$r9 = new java.lang.StringBuilder",
            "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  virtual \")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" visit(const SimpleNode *node, \")",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r40)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" data) = 0;\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r15)",
            "$z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getMulti()>()",
            "if $z1 == 0 goto $r16 = new java.lang.StringBuilder",
            "$r16 = new java.lang.StringBuilder",
            "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  virtual ~\")",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"() { }\")",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r20)",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(\"};\")",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPNodeFiles__getVisitMethodName__-1596871544\\796.smt2",
        "z3": {
            "memory": 32583680,
            "run_time": 0.05755472183227539,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2548 () String\r\n    \"VISITOR_METHOD_NAME_INCLUDES_TYPE_NAME\")\r\n  (define-fun var833 () String\r\n    var213!1)\r\n  (define-fun var3531 () Bool\r\n    (var1516_booleanValue/1280995494 \"VISITOR_METHOD_NAME_INCLUDES_TYPE_NAME\"))\r\n  (define-fun var213 () String\r\n    String-init)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var213!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2507 () String\r\n    \"\")\r\n  (define-fun var1516_booleanValue/1280995494 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun <init>/2110755883 ((x!0 String) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9949184,
            "run_time": 0.016538381576538086,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1920 is 1\r\n; rep: (as @var1920_0 var1920)\r\n; cardinality of var1516 is 1\r\n; rep: (as @var1516_0 var1516)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/2110755883 ((BOUND_VARIABLE_553 String) (BOUND_VARIABLE_554 String)) void (as @void_0 void))\r\n(define-fun var1516_booleanValue/1280995494 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2548 () String \"\")\r\n(define-fun var213!1 () String \"\")\r\n(define-fun var2507 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36589568,
            "run_time": 0.07697033882141113,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var213 () String\n    String-init)\n  (define-fun var3531 () Bool\n    (var1516_booleanValue/1280995494 \"VISITOR_METHOD_NAME_INCLUDES_TYPE_NAME\"))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var833 () String\n    var213!1)\n  (define-fun var2548 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var213!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2507 () String\n    \"\")\n  (define-fun var1516_booleanValue/1280995494 ((x!0 String)) Bool\n    false)\n  (define-fun <init>/2110755883 ((x!0 String) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152367104,
            "run_time": 0.7747836112976074,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2548 () String \"E\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun abbrev_7_def () Bool false)\r\n  (define-fun abbrev_7 () Bool false)\r\n  (define-fun var1516_booleanValue/1280995494 ((x!0 String)) Bool (ite (= x!0 \"VISITOR_METHOD_NAME_INCLUDES_TYPE_NAME\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>(java.lang.String)>": 1,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.String",
            "$r0 = new java.lang.StringBuffer",
            "specialinvoke $r0.<java.lang.StringBuffer: void <init>(java.lang.String)>(\"visit\")",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean booleanValue(java.lang.String)>(\"VISITOR_METHOD_NAME_INCLUDES_TYPE_NAME\")",
            "if $z0 == 0 goto $r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r1 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>()",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPNodeFiles__jjtreeASTCodeFile__-1465874834\\419.smt2",
        "z3": {
            "memory": 32227328,
            "run_time": 0.059599876403808594,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var979 () String\r\n    (str.++ var3521!1 var2686 \".cc\"))\r\n  (define-fun var2686 () String\r\n    \"A\")\r\n  (define-fun var3877 () String\r\n    (str.++ var3521!1 var2686))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2659 () var1859\r\n    var1859-init)\r\n  (define-fun var3521 () String\r\n    String-init)\r\n  (define-fun var959 () String\r\n    (str.++ var3521!1 var2686 \".cc\"))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var241 () String\r\n    (getAbsolutePath/-802773300 var2659!1))\r\n  (define-fun var1679 () var1859\r\n    var470_getJJTreeOutputDirectory/-709711143)\r\n  (define-fun var3521!1 () String\r\n    \"\")\r\n  (define-fun var3521!2 () String\r\n    \"A\")\r\n  (define-fun var3877!1 () String\r\n    \"A.cc\")\r\n  (define-fun var979!1 () String\r\n    \"\")\r\n  (define-fun var470_getJJTreeOutputDirectory/-709711143 () var1859\r\n    var1859!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1859-init () var1859\r\n    var1859!val!0)\r\n  (define-fun var1679!1 () var1859\r\n    var1859!val!0)\r\n  (define-fun var2659!1 () var1859\r\n    var1859!val!0)\r\n  (define-fun getAbsolutePath/-802773300 ((x!0 var1859)) String\r\n    \"\")\r\n  (define-fun <init>/-1833447926 ((x!0 var1859) (x!1 var1859) (x!2 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 49 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9949184,
            "run_time": 0.015029430389404297,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var209 is 1\r\n; rep: (as @var209_0 var209)\r\n; cardinality of var1859 is 1\r\n; rep: (as @var1859_0 var1859)\r\n; cardinality of var470 is 1\r\n; rep: (as @var470_0 var470)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1859-init () var1859 (as @var1859_0 var1859))\r\n(define-fun var470_getJJTreeOutputDirectory/-709711143 () var1859 (as @var1859_0 var1859))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1833447926 ((BOUND_VARIABLE_600 var1859) (BOUND_VARIABLE_601 var1859) (BOUND_VARIABLE_602 String)) void (as @void_0 void))\r\n(define-fun getAbsolutePath/-802773300 ((BOUND_VARIABLE_605 var1859)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2686 () String \"\")\r\n(define-fun var3521!1 () String \"\")\r\n(define-fun var3521!2 () String \"\")\r\n(define-fun var3877!1 () String \".cc\")\r\n(define-fun var2659!1 () var1859 (as @var1859_0 var1859))\r\n(define-fun var1679!1 () var1859 (as @var1859_0 var1859))\r\n(define-fun var979!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35930112,
            "run_time": 0.07767152786254883,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3877!1 () String\n    \"\\u{0}\\u{0}.cc\")\n  (define-fun var3521!2 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3521!1 () String\n    \"\")\n  (define-fun var3521 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1679 () var1859\n    var470_getJJTreeOutputDirectory/-709711143)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var959 () String\n    (str.++ var3521!1 var2686 \".cc\"))\n  (define-fun var2686 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var979 () String\n    (str.++ var3521!1 var2686 \".cc\"))\n  (define-fun var2659 () var1859\n    var1859-init)\n  (define-fun var3877 () String\n    (str.++ var3521!1 var2686))\n  (define-fun var241 () String\n    (getAbsolutePath/-802773300 var2659!1))\n  (define-fun var979!1 () String\n    \"\")\n  (define-fun var470_getJJTreeOutputDirectory/-709711143 () var1859\n    var1859!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1859-init () var1859\n    var1859!val!0)\n  (define-fun var1679!1 () var1859\n    var1859!val!0)\n  (define-fun var2659!1 () var1859\n    var1859!val!0)\n  (define-fun getAbsolutePath/-802773300 ((x!0 var1859)) String\n    \"\")\n  (define-fun <init>/-1833447926 ((x!0 var1859) (x!1 var1859) (x!2 String)) void\n    void!val!0)\n)\n(error \"line 49 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173019136,
            "run_time": 0.8981938362121582,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3877!1 () String \".cc\")\r\n  (define-fun var3521!2 () String \"\")\r\n  (define-fun var3521!1 () String \"\")\r\n  (define-fun var2686 () String \"\")\r\n  (define-fun null-String () String \"c\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.String",
            "$r0 = new java.io.File",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.io.File getJJTreeOutputDirectory()>()",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".cc\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.io.File: void <init>(java.io.File,java.lang.String)>($r6, $r5)",
            "$r7 = virtualinvoke $r0.<java.io.File: java.lang.String getAbsolutePath()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__processCPPNamespaceOption__2009307735\\2082.smt2",
        "z3": {
            "memory": 31985664,
            "run_time": 0.0518031120300293,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3472 () Int\r\n    (str.len var1932))\r\n  (define-fun var1932 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n)\r\n(error \"line 19 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9965568,
            "run_time": 0.015059947967529297,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var88 is 1\r\n; rep: (as @var88_0 var88)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1932 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37003264,
            "run_time": 0.0779728889465332,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1932 () String\n    \"\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3472 () Int\n    (str.len var1932))\n)\n(error \"line 19 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140341248,
            "run_time": 0.7004251480102539,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1932 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if $i0 <= 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__setCmdLineOption__-430146320\\1333-deviant-0.smt2",
        "z3": {
            "memory": 27328512,
            "run_time": 0.06023001670837402,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var889 () String\r\n    \"\")\r\n  (define-fun var3394-optionValues () var3674\r\n    var3674!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var512-out () var1554\r\n    var1554!val!0)\r\n  (define-fun cast-from-String-to-var1541 ((x!0 String)) var1541\r\n    var1541!val!0)\r\n  (define-fun var3674_containsKey/1715618542 ((x!0 var3674) (x!1 var1541)) Bool\r\n    false)\r\n  (define-fun println/1773605060 ((x!0 var1554) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 34 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9949184,
            "run_time": 0.015655517578125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var276 is 1\r\n; rep: (as @var276_0 var276)\r\n; cardinality of var3674 is 1\r\n; rep: (as @var3674_0 var3674)\r\n; cardinality of var3394 is 1\r\n; rep: (as @var3394_0 var3394)\r\n; cardinality of var1541 is 1\r\n; rep: (as @var1541_0 var1541)\r\n; cardinality of var1554 is 1\r\n; rep: (as @var1554_0 var1554)\r\n; cardinality of var512 is 1\r\n; rep: (as @var512_0 var512)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3674_containsKey/1715618542 ((BOUND_VARIABLE_667 var3674) (BOUND_VARIABLE_668 var1541)) Bool false)\r\n(define-fun cast-from-String-to-var1541 ((BOUND_VARIABLE_671 String)) var1541 (as @var1541_0 var1541))\r\n(define-fun String-init () String \"\")\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_674 var1554) (BOUND_VARIABLE_675 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3394-optionValues () var3674 (as @var3674_0 var3674))\r\n(define-fun var512-out () var1554 (as @var1554_0 var1554))\r\n(define-fun var889 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36323328,
            "run_time": 0.07832956314086914,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var889 () String\n    \"\")\n  (define-fun var3394-optionValues () var3674\n    var3674!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var512-out () var1554\n    var1554!val!0)\n  (define-fun cast-from-String-to-var1541 ((x!0 String)) var1541\n    var1541!val!0)\n  (define-fun var3674_containsKey/1715618542 ((x!0 var3674) (x!1 var1541)) Bool\n    false)\n  (define-fun println/1773605060 ((x!0 var1554) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 34 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 178532352,
            "run_time": 0.7880077362060547,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var889 () String \"\")\r\n  (define-fun null-String () String \"a\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: java.lang.String substring(int)>",
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: java.lang.String toUpperCase()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1,
            "<java.lang.String: java.lang.String substring(int)>": 1,
            "<java.lang.String: int indexOf(int)>": 2,
            "<java.lang.String: java.lang.String toUpperCase()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i22 = (int) $c0",
            "if $i22 != 45 goto r38 = r0",
            "r38 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1)",
            "goto [?= $i7 = virtualinvoke r38.<java.lang.String: int indexOf(int)>(61)]",
            "$i7 = virtualinvoke r38.<java.lang.String: int indexOf(int)>(61)",
            "$i8 = virtualinvoke r38.<java.lang.String: int indexOf(int)>(58)",
            "if $i7 >= 0 goto (branch)",
            "i20 = $i8",
            "goto [?= (branch)]",
            "if i20 >= 0 goto $r1 = virtualinvoke r38.<java.lang.String: java.lang.String substring(int,int)>(0, i20)",
            "r39 = virtualinvoke r38.<java.lang.String: java.lang.String toUpperCase()>()",
            "$r36 = <org.javacc.parser.Options: java.util.Map optionValues>",
            "$z4 = interfaceinvoke $r36.<java.util.Map: boolean containsKey(java.lang.Object)>(r39)",
            "if $z4 == 0 goto $i4 = virtualinvoke r39.<java.lang.String: int length()>()",
            "$i4 = virtualinvoke r39.<java.lang.String: int length()>()",
            "if $i4 <= 2 goto $r41 = <java.lang.System: java.io.PrintStream out>",
            "$r41 = <java.lang.System: java.io.PrintStream out>",
            "$r50 = new java.lang.StringBuilder",
            "specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()",
            "$r43 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Warning: Bad option \\\"\")",
            "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" will be ignored.\")",
            "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r46)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__setCmdLineOption__-430146320\\1333-deviant-1.smt2",
        "z3": {
            "memory": 27557888,
            "run_time": 0.04450035095214844,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 38 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9949184,
            "run_time": 0.01570725440979004,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35864576,
            "run_time": 0.07745766639709473,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 38 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164716544,
            "run_time": 0.7547733783721924,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: java.lang.String substring(int)>",
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: java.lang.String toUpperCase()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1,
            "<java.lang.String: java.lang.String substring(int)>": 1,
            "<java.lang.String: int indexOf(int)>": 2,
            "<java.lang.String: java.lang.String toUpperCase()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i22 = (int) $c0",
            "if $i22 != 45 goto r38 = r0",
            "r38 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1)",
            "goto [?= $i7 = virtualinvoke r38.<java.lang.String: int indexOf(int)>(61)]",
            "$i7 = virtualinvoke r38.<java.lang.String: int indexOf(int)>(61)",
            "$i8 = virtualinvoke r38.<java.lang.String: int indexOf(int)>(58)",
            "if $i7 >= 0 goto (branch)",
            "i20 = $i8",
            "goto [?= (branch)]",
            "if i20 >= 0 goto $r1 = virtualinvoke r38.<java.lang.String: java.lang.String substring(int,int)>(0, i20)",
            "r39 = virtualinvoke r38.<java.lang.String: java.lang.String toUpperCase()>()",
            "$r36 = <org.javacc.parser.Options: java.util.Map optionValues>",
            "$z4 = interfaceinvoke $r36.<java.util.Map: boolean containsKey(java.lang.Object)>(r39)",
            "if $z4 == 0 goto $i4 = virtualinvoke r39.<java.lang.String: int length()>()",
            "$i4 = virtualinvoke r39.<java.lang.String: int length()>()",
            "if $i4 <= 2 goto $r41 = <java.lang.System: java.io.PrintStream out>",
            "$r41 = <java.lang.System: java.io.PrintStream out>",
            "$r50 = new java.lang.StringBuilder",
            "specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()",
            "$r43 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Warning: Bad option \\\"\")",
            "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" will be ignored.\")",
            "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r46)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__makeToolNameList__830449084\\745-deviant-0.smt2",
        "z3": {
            "memory": 28483584,
            "run_time": 0.05904698371887207,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 41 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015561103820800781,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35725312,
            "run_time": 0.06258583068847656,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 41 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 259592192,
            "run_time": 60.00432014465332,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: java.lang.String substring(int,int)>",
            "<java.lang.String: int indexOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int)>": 3,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r7 = new java.util.ArrayList",
            "specialinvoke $r7.<java.util.ArrayList: void <init>()>()",
            "i9 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(10)",
            "$i14 = (int) -1",
            "if i9 != $i14 goto $i8 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(13)",
            "$i8 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(13)",
            "i10 = $i8",
            "$i16 = (int) -1",
            "if $i8 != $i16 goto (branch)",
            "if i9 >= i10 goto $i11 = i10",
            "$i11 = i10",
            "if $i11 != 1000 goto r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i11)",
            "r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i11)",
            "$i0 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58)",
            "$i18 = (int) -1",
            "if $i0 != $i18 goto $i1 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58)",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__setCmdLineOption__-430146320\\1333.smt2",
        "z3": {
            "memory": 31956992,
            "run_time": 0.07488465309143066,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(error \"line 88 column 10: model is not available\")\r\n(error \"line 89 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 17264640,
            "run_time": 0.05979299545288086,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var276 is 1\r\n; rep: (as @var276_0 var276)\r\n; cardinality of var3674 is 1\r\n; rep: (as @var3674_0 var3674)\r\n; cardinality of var3394 is 1\r\n; rep: (as @var3394_0 var3394)\r\n; cardinality of var1541 is 1\r\n; rep: (as @var1541_0 var1541)\r\n; cardinality of var1554 is 1\r\n; rep: (as @var1554_0 var1554)\r\n; cardinality of var512 is 1\r\n; rep: (as @var512_0 var512)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3674_containsKey/1715618542 ((_arg_1 var3674) (_arg_2 var1541)) Bool false)\r\n(define-fun cast-from-String-to-var1541 ((_arg_1 String)) var1541 (as @var1541_0 var1541))\r\n(define-fun String-init () String \"\")\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_3821 var1554) (BOUND_VARIABLE_3822 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"\")\r\n(define-fun var3394-optionValues () var3674 (as @var3674_0 var3674))\r\n(define-fun var512-out () var1554 (as @var1554_0 var1554))\r\n(define-fun var889 () String \"-\")\r\n(define-fun var490!1 () String \"\")\r\n(define-fun var490!2 () String \"Warning: Bad option \"\"\")\r\n(define-fun var842!1 () String \"Warning: Bad option \"\"-\")\r\n(define-fun var1531!1 () String \"Warning: Bad option \"\"-\"\" will be ignored.\")\r\n(define-fun var2299!1 () var1554 (as @var1554_0 var1554))\r\n(define-fun var589!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35819520,
            "run_time": 0.0779421329498291,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 88 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 89 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 209960960,
            "run_time": 1.040097713470459,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_24_0, 45)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.Options__setCmdLineOption__-430146320\\1333.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n787ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 24,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: java.lang.String substring(int)>",
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: java.lang.String toUpperCase()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1,
            "<java.lang.String: java.lang.String substring(int)>": 1,
            "<java.lang.String: int indexOf(int)>": 2,
            "<java.lang.String: java.lang.String toUpperCase()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i22 = (int) $c0",
            "if $i22 != 45 goto r38 = r0",
            "r38 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(1)",
            "goto [?= $i7 = virtualinvoke r38.<java.lang.String: int indexOf(int)>(61)]",
            "$i7 = virtualinvoke r38.<java.lang.String: int indexOf(int)>(61)",
            "$i8 = virtualinvoke r38.<java.lang.String: int indexOf(int)>(58)",
            "if $i7 >= 0 goto (branch)",
            "i20 = $i8",
            "goto [?= (branch)]",
            "if i20 >= 0 goto $r1 = virtualinvoke r38.<java.lang.String: java.lang.String substring(int,int)>(0, i20)",
            "r39 = virtualinvoke r38.<java.lang.String: java.lang.String toUpperCase()>()",
            "$r36 = <org.javacc.parser.Options: java.util.Map optionValues>",
            "$z4 = interfaceinvoke $r36.<java.util.Map: boolean containsKey(java.lang.Object)>(r39)",
            "if $z4 == 0 goto $i4 = virtualinvoke r39.<java.lang.String: int length()>()",
            "$i4 = virtualinvoke r39.<java.lang.String: int length()>()",
            "if $i4 <= 2 goto $r41 = <java.lang.System: java.io.PrintStream out>",
            "$r41 = <java.lang.System: java.io.PrintStream out>",
            "$r50 = new java.lang.StringBuilder",
            "specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()",
            "$r43 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Warning: Bad option \\\"\")",
            "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" will be ignored.\")",
            "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r46)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__setCmdLineOption__-430146320\\1468-deviant-0.smt2",
        "z3": {
            "memory": 28606464,
            "run_time": 0.0594022274017334,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2435 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3900-optionValues () var1511\r\n    var1511!val!0)\r\n  (define-fun var1812-out () var624\r\n    var624!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-String-to-var2 ((x!0 String)) var2\r\n    var2!val!0)\r\n  (define-fun println/1773605060 ((x!0 var624) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun var1511_containsKey/1715618542 ((x!0 var1511) (x!1 var2)) Bool\r\n    false)\r\n)\r\n(error \"line 33 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10018816,
            "run_time": 0.015969276428222656,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var164 is 1\r\n; rep: (as @var164_0 var164)\r\n; cardinality of var1511 is 1\r\n; rep: (as @var1511_0 var1511)\r\n; cardinality of var3900 is 1\r\n; rep: (as @var3900_0 var3900)\r\n; cardinality of var2 is 1\r\n; rep: (as @var2_0 var2)\r\n; cardinality of var624 is 1\r\n; rep: (as @var624_0 var624)\r\n; cardinality of var1812 is 1\r\n; rep: (as @var1812_0 var1812)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1511_containsKey/1715618542 ((BOUND_VARIABLE_654 var1511) (BOUND_VARIABLE_655 var2)) Bool false)\r\n(define-fun cast-from-String-to-var2 ((BOUND_VARIABLE_658 String)) var2 (as @var2_0 var2))\r\n(define-fun String-init () String \"\")\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_661 var624) (BOUND_VARIABLE_662 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3900-optionValues () var1511 (as @var1511_0 var1511))\r\n(define-fun var1812-out () var624 (as @var624_0 var624))\r\n(define-fun var2435 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35733504,
            "run_time": 0.06028389930725098,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2435 () String\n    \"\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3900-optionValues () var1511\n    var1511!val!0)\n  (define-fun var1812-out () var624\n    var624!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun cast-from-String-to-var2 ((x!0 String)) var2\n    var2!val!0)\n  (define-fun println/1773605060 ((x!0 var624) (x!1 String)) void\n    void!val!0)\n  (define-fun var1511_containsKey/1715618542 ((x!0 var1511) (x!1 var2)) Bool\n    false)\n)\n(error \"line 33 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182120448,
            "run_time": 0.8243408203125,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2435 () String \"\")\r\n  (define-fun null-String () String \"a\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: java.lang.String toUpperCase()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1,
            "<java.lang.String: int indexOf(int)>": 2,
            "<java.lang.String: java.lang.String toUpperCase()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i22 = (int) $c0",
            "if $i22 != 45 goto r38 = r0",
            "r38 = r0",
            "$i7 = virtualinvoke r38.<java.lang.String: int indexOf(int)>(61)",
            "$i8 = virtualinvoke r38.<java.lang.String: int indexOf(int)>(58)",
            "if $i7 >= 0 goto (branch)",
            "i20 = $i8",
            "goto [?= (branch)]",
            "if i20 >= 0 goto $r1 = virtualinvoke r38.<java.lang.String: java.lang.String substring(int,int)>(0, i20)",
            "r39 = virtualinvoke r38.<java.lang.String: java.lang.String toUpperCase()>()",
            "$r36 = <org.javacc.parser.Options: java.util.Map optionValues>",
            "$z4 = interfaceinvoke $r36.<java.util.Map: boolean containsKey(java.lang.Object)>(r39)",
            "if $z4 == 0 goto $i4 = virtualinvoke r39.<java.lang.String: int length()>()",
            "$i4 = virtualinvoke r39.<java.lang.String: int length()>()",
            "if $i4 <= 2 goto $r41 = <java.lang.System: java.io.PrintStream out>",
            "$r41 = <java.lang.System: java.io.PrintStream out>",
            "$r50 = new java.lang.StringBuilder",
            "specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()",
            "$r43 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Warning: Bad option \\\"\")",
            "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" will be ignored.\")",
            "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r46)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__makeToolNameList__830449084\\745.smt2",
        "z3": {
            "memory": 33361920,
            "run_time": 0.08936429023742676,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1366 () String\r\n    (str.substr var971 0 (- (str.indexof var971 (str.from_code 13) 0) 0)))\r\n  (define-fun var3281 () Int\r\n    (- 1))\r\n  (define-fun var3868 () Int\r\n    (str.indexof var971 (str.from_code 10) 0))\r\n  (define-fun var1966 () Int\r\n    (let ((a!1 (str.substr var971 0 (- (str.indexof var971 (str.from_code 13) 0) 0))))\r\n  (str.indexof a!1 (str.from_code 58) 0)))\r\n  (define-fun var1389 () Int\r\n    (str.indexof var971 (str.from_code 13) 0))\r\n  (define-fun var2398 () Int\r\n    (str.indexof var971 (str.from_code 13) 0))\r\n  (define-fun var1776 () Int\r\n    (str.indexof var971 (str.from_code 13) 0))\r\n  (define-fun var2986 () var929\r\n    var929-init)\r\n  (define-fun var1431 () Int\r\n    (- 1))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1715 () Int\r\n    (- 1))\r\n  (define-fun var971 () String\r\n    \"\\u{d}\\u{a}\")\r\n  (define-fun var929-init () var929\r\n    var929!val!0)\r\n  (define-fun var2986!1 () var929\r\n    var929!val!0)\r\n  (define-fun <init>/-325640736 ((x!0 var929)) void\r\n    void!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13971456,
            "run_time": 0.031982421875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1500 is 1\r\n; rep: (as @var1500_0 var1500)\r\n; cardinality of var929 is 1\r\n; rep: (as @var929_0 var929)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var929-init () var929 (as @var929_0 var929))\r\n(define-fun <init>/-325640736 ((BOUND_VARIABLE_1671 var929)) void (as @void_0 void))\r\n(define-fun null-String () String \"\")\r\n(define-fun var971 () String \"\\u{d}\\u{a}\")\r\n(define-fun var2986!1 () var929 (as @var929_0 var929))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39022592,
            "run_time": 0.12278103828430176,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1431 () Int\n    (- 1))\n  (define-fun var1389 () Int\n    (str.indexof var971 (str.from_code 13) 0))\n  (define-fun var2986 () var929\n    var929-init)\n  (define-fun var3868 () Int\n    (str.indexof var971 (str.from_code 10) 0))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var971 () String\n    \"\\u{0}\\u{d}\\u{a}\\u{0}\")\n  (define-fun var1366 () String\n    (str.substr var971 0 (- (str.indexof var971 (str.from_code 13) 0) 0)))\n  (define-fun var3281 () Int\n    (- 1))\n  (define-fun var2398 () Int\n    (str.indexof var971 (str.from_code 13) 0))\n  (define-fun var1966 () Int\n    (let ((a!1 (str.substr var971 0 (- (str.indexof var971 (str.from_code 13) 0) 0))))\n  (str.indexof a!1 (str.from_code 58) 0)))\n  (define-fun var1715 () Int\n    (- 1))\n  (define-fun var1776 () Int\n    (str.indexof var971 (str.from_code 13) 0))\n  (define-fun var929-init () var929\n    var929!val!0)\n  (define-fun var2986!1 () var929\n    var929!val!0)\n  (define-fun <init>/-325640736 ((x!0 var929)) void\n    void!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 211128320,
            "run_time": 1.2473347187042236,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.IllegalArgumentException: cannot execute actions List(AddFormula((! (str_empty(all_293_1) & str_empty(all_258_1)))))\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.JavaCCGlobals__makeToolNameList__830449084\\745.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nDecomposing equation:\r\n  all_48_1 . all_51_4 == all_46_1 . all_46_4\r\nAssuming all_23_4 = \"\"\r\nAssuming all_46_3 = \"\"\r\nAssuming all_45_4 = \"\"\r\nAssuming all_20_4 = \"\"\r\nAssuming all_45_3 = \"\"\r\nAssuming all_20_3 = \"\"\r\nApplying Nielsen transformation (# word equations: 1), splitting \"\r\"\r\n  \"\r\" . all_46_4 == all_20_3 . \"\r\"\r\nAssuming all_23_3 = \"\"\r\nAssuming all_46_4 = \"\"\r\nAssuming all_29_4 = \"\"\r\nApplying Nielsen transformation (# word equations: 1), splitting all_46_4\r\n  \"\r\" . all_46_4 == all_34_1 . all_34_3\r\nAssuming all_34_2 = \"\"\r\nApplying Nielsen transformation (# word equations: 1), splitting all_234_0\r\n  \"\r\" . all_46_4 == all_45_3 . \"\r\"\r\nApplying Nielsen transformation (# word equations: 1), splitting all_29_3\r\n  all_29_3 . \"\r\" == all_23_3 . \"\n\"\r\nApplying Nielsen transformation (# word equations: 1), splitting all_234_1\r\n  \"\r\" . all_46_4 == all_23_3 . \"\n\"\r\nApplying Nielsen transformation (# word equations: 1), splitting all_29_3\r\n  all_29_3 . \"\r\" == \"\r\" . all_46_4\r\n\r\n987ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: java.lang.String substring(int,int)>",
            "<java.lang.String: int indexOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int)>": 3,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r7 = new java.util.ArrayList",
            "specialinvoke $r7.<java.util.ArrayList: void <init>()>()",
            "i9 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(10)",
            "$i14 = (int) -1",
            "if i9 != $i14 goto $i8 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(13)",
            "$i8 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(13)",
            "i10 = $i8",
            "$i16 = (int) -1",
            "if $i8 != $i16 goto (branch)",
            "if i9 >= i10 goto $i11 = i10",
            "$i11 = i10",
            "if $i11 != 1000 goto r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i11)",
            "r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i11)",
            "$i0 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58)",
            "$i18 = (int) -1",
            "if $i0 != $i18 goto $i1 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58)",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__printTokenOnly__-838714678\\946-deviant-0.smt2",
        "z3": {
            "memory": 31473664,
            "run_time": 0.04227900505065918,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1610:\r\n  ;;   var1610!val!1 var1610!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1610!val!1 () var1610)\r\n  (declare-fun var1610!val!0 () var1610)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1610)) (or (= x var1610!val!1) (= x var1610!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2763:\r\n  ;;   var2763!val!1 var2763!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2763!val!1 () var2763)\r\n  (declare-fun var2763!val!0 () var2763)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2763)) (or (= x var2763!val!1) (= x var2763!val!0)))\r\n  ;; -----------\r\n  (define-fun var200 () Int\r\n    (beginLine/197050796 var3308))\r\n  (define-fun var2400 () Int\r\n    var1493-cline)\r\n  (define-fun var3308 () var1610\r\n    var1610!val!0)\r\n  (define-fun null-var1610 () var1610\r\n    var1610!val!1)\r\n  (define-fun var3729 () Int\r\n    var1493-ccol)\r\n  (define-fun var359 () var2763\r\n    var2763!val!0)\r\n  (define-fun var2266 () Int\r\n    (str.len (image/197050796 var3308)))\r\n  (define-fun null-var2763 () var2763\r\n    var2763!val!1)\r\n  (define-fun var2467 () Int\r\n    (endLine/197050796 var3308))\r\n  (define-fun var88 () Int\r\n    (+ (endColumn/197050796 var3308) 1))\r\n  (define-fun var1493-cline () Int\r\n    0)\r\n  (define-fun var798 () Int\r\n    (beginColumn/197050796 var3308))\r\n  (define-fun var1792 () String\r\n    (var1493_addUnicodeEscapes/1686793564 (image/197050796 var3308)))\r\n  (define-fun var2854 () String\r\n    (image/197050796 var3308))\r\n  (define-fun var7 () Int\r\n    (endLine/197050796 var3308))\r\n  (define-fun var2433 () Int\r\n    (endColumn/197050796 var3308))\r\n  (define-fun var911 () Int\r\n    (+ (endColumn/197050796 var3308) 1))\r\n  (define-fun var3337 () Int\r\n    (- (str.len (image/197050796 var3308)) 1))\r\n  (define-fun var1286 () Int\r\n    (kind/197050796 var3308))\r\n  (define-fun var1493-ccol () Int\r\n    0)\r\n  (define-fun var769 () String\r\n    (image/197050796 var3308))\r\n  (define-fun var3876 () String\r\n    (image/197050796 var3308))\r\n  (define-fun var359!1 () var2763\r\n    var2763!val!1)\r\n  (define-fun var1792!1 () String\r\n    \"\")\r\n  (define-fun kind/197050796 ((x!0 var1610)) Int\r\n    94)\r\n  (define-fun image/197050796 ((x!0 var1610)) String\r\n    \"\")\r\n  (define-fun beginColumn/197050796 ((x!0 var1610)) Int\r\n    0)\r\n  (define-fun beginLine/197050796 ((x!0 var1610)) Int\r\n    0)\r\n  (define-fun endLine/197050796 ((x!0 var1610)) Int\r\n    0)\r\n  (define-fun print/-2007916749 ((x!0 var2763) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun endColumn/197050796 ((x!0 var1610)) Int\r\n    0)\r\n  (define-fun var1493_addUnicodeEscapes/1686793564 ((x!0 String)) String\r\n    \"\")\r\n)\r\n(error \"line 63 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10100736,
            "run_time": 0.015198707580566406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1610 is 2\r\n; rep: (as @var1610_0 var1610)\r\n; rep: (as @var1610_1 var1610)\r\n; cardinality of var2763 is 2\r\n; rep: (as @var2763_0 var2763)\r\n; rep: (as @var2763_1 var2763)\r\n; cardinality of var1493 is 1\r\n; rep: (as @var1493_0 var1493)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun beginLine/197050796 ((_arg_1 var1610)) Int 0)\r\n(define-fun beginColumn/197050796 ((_arg_1 var1610)) Int 0)\r\n(define-fun kind/197050796 ((_arg_1 var1610)) Int 94)\r\n(define-fun image/197050796 ((_arg_1 var1610)) String \"\")\r\n(define-fun var1493_addUnicodeEscapes/1686793564 ((BOUND_VARIABLE_657 String)) String \"\")\r\n(define-fun print/-2007916749 ((BOUND_VARIABLE_660 var2763) (BOUND_VARIABLE_661 String)) void (as @void_0 void))\r\n(define-fun endLine/197050796 ((BOUND_VARIABLE_664 var1610)) Int 0)\r\n(define-fun endColumn/197050796 ((BOUND_VARIABLE_667 var1610)) Int 0)\r\n(define-fun null-var1610 () var1610 (as @var1610_0 var1610))\r\n(define-fun null-var2763 () var2763 (as @var2763_0 var2763))\r\n(define-fun var1493-cline () Int 0)\r\n(define-fun var1493-ccol () Int 0)\r\n(define-fun var3308 () var1610 (as @var1610_1 var1610))\r\n(define-fun var359 () var2763 (as @var2763_1 var2763))\r\n(define-fun var359!1 () var2763 (as @var2763_0 var2763))\r\n(define-fun var1792!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36622336,
            "run_time": 0.04705190658569336,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 62 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 63 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167108608,
            "run_time": 0.8372945785522461,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var359 () var2763 var2763!196)\r\n  (define-fun var3308 () var1610 var1610!194)\r\n  (define-fun var1493-ccol () Int 105)\r\n  (define-fun var1493-cline () Int 106)\r\n  (define-fun null-var2763 () var2763 var2763!192)\r\n  (define-fun null-var1610 () var1610 var1610!190)\r\n  (define-fun image/197050796 ((x!0 var1610)) String (ite (= x!0 var1610!194) \"\" \"\"))\r\n  (define-fun kind/197050796 ((x!0 var1610)) Int (ite (= x!0 var1610!194) 94 0))\r\n  (define-fun beginColumn/197050796 ((x!0 var1610)) Int (ite (= x!0 var1610!194) 105 0))\r\n  (define-fun beginLine/197050796 ((x!0 var1610)) Int (ite (= x!0 var1610!194) 106 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.Token",
            "r1 := @parameter1: java.io.PrintWriter",
            "$i1 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i0 = r0.<org.javacc.parser.Token: int beginLine>",
            "if $i1 >= $i0 goto $i3 = <org.javacc.parser.JavaCCGlobals: int ccol>",
            "$i3 = <org.javacc.parser.JavaCCGlobals: int ccol>",
            "$i2 = r0.<org.javacc.parser.Token: int beginColumn>",
            "if $i3 >= $i2 goto $i4 = r0.<org.javacc.parser.Token: int kind>",
            "$i4 = r0.<org.javacc.parser.Token: int kind>",
            "if $i4 == 94 goto $r2 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r2 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r3 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String addUnicodeEscapes(java.lang.String)>($r2)",
            "virtualinvoke r1.<java.io.PrintWriter: void print(java.lang.String)>($r3)",
            "goto [?= $i5 = r0.<org.javacc.parser.Token: int endLine>]",
            "$i5 = r0.<org.javacc.parser.Token: int endLine>",
            "<org.javacc.parser.JavaCCGlobals: int cline> = $i5",
            "$i6 = r0.<org.javacc.parser.Token: int endColumn>",
            "$i7 = $i6 + 1",
            "<org.javacc.parser.JavaCCGlobals: int ccol> = $i7",
            "$r5 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$r4 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$i8 = virtualinvoke $r4.<java.lang.String: int length()>()",
            "$i9 = $i8 - 1",
            "$c13 = virtualinvoke $r5.<java.lang.String: char charAt(int)>($i9)",
            "$i18 = (int) $c13",
            "if $i18 == 10 goto $i10 = <org.javacc.parser.JavaCCGlobals: int cline>",
            "$i19 = (int) $c13",
            "if $i19 != 13 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.LexGenCPP__dumpBoilerPlateInHeader__602690755\\1069.smt2",
        "z3": {
            "memory": 35962880,
            "run_time": 60.00193500518799,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 17358848,
            "run_time": 60.00724506378174,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39206912,
            "run_time": 0.15635967254638672,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 267 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 268 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 375263232,
            "run_time": 1.6032259464263916,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var370/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.LexGenCPP__dumpBoilerPlateInHeader__602690755\\1069.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_104_4 =\r\n     concat(all_104_5, \"();\")\r\n   var2319!1 =\r\n     concat(all_94_4, \"(JAVACC_CHARSTREAM *stream, int lexState = \")\r\n   var2837!1 =\r\n     concat(all_91_4, \"();\")\r\n   all_85_3 =\r\n     concat(all_85_4, \" vec);\")\r\n   var3329!1 =\r\n     concat(all_76_3, \" vec);\")\r\n   all_88_3 =\r\n     concat(all_19_0, \");\")\r\n   var1212!1 =\r\n     concat(all_19_0, \");\")\r\n   var855!1 =\r\n     concat(\"  const JJSimpleString jjKindsForBitVector(int i, \", var1691_getLongType/-387263599)\r\n   var2799!1 =\r\n     concat(\"  virtual ~\", var370-tokMgrClassName)\r\n   var56!1 =\r\n     concat(\"  \", var370-tokMgrClassName)\r\n   var3143!1 =\r\n     concat(all_19_0, rhs)\r\n   all_19_0 =\r\n     concat(all_100_5, \"(JAVACC_CHARSTREAM *stream, int lexState = \")\r\n   all_85_4 =\r\n     concat(\"  const JJSimpleString jjKindsForBitVector(int i, \", var1691_getLongType/-387263599)\r\n   all_76_3 =\r\n     concat(\"  const JJSimpleString jjKindsForBitVector(int i, \", var1691_getLongType/-387263599)\r\n   all_104_5 =\r\n     concat(\"  virtual ~\", var370-tokMgrClassName)\r\n   all_91_4 =\r\n     concat(\"  virtual ~\", var370-tokMgrClassName)\r\n   all_94_4 =\r\n     concat(\"  \", var370-tokMgrClassName)\r\n   all_100_5 =\r\n     concat(\"  \", var370-tokMgrClassName)\r\n\r\n1205ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 90,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 12,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 4
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.LexGenCPP",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void switchToIncludeFile()>()",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r1[0] = \"#ifndef JAVACC_CHARSTREAM\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r1)",
            "$r2 = newarray (java.lang.Object)[1]",
            "$r2[0] = \"#define JAVACC_CHARSTREAM CharStream\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r2)",
            "$r3 = newarray (java.lang.Object)[1]",
            "$r3[0] = \"#endif\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r3)",
            "$r4 = newarray (java.lang.Object)[1]",
            "$r4[0] = \"\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r4)",
            "$r5 = newarray (java.lang.Object)[1]",
            "$r5[0] = \"private:\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r5)",
            "$r6 = newarray (java.lang.Object)[1]",
            "$r6[0] = \"  void ReInitRounds();\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r6)",
            "$r7 = newarray (java.lang.Object)[1]",
            "$r7[0] = \"\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r7)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"public:\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r8)",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r10 = new java.lang.StringBuilder",
            "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()",
            "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  \")",
            "$r11 = <org.javacc.parser.LexGenCPP: java.lang.String tokMgrClassName>",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(JAVACC_CHARSTREAM *stream, int lexState = \")",
            "$i0 = <org.javacc.parser.LexGenCPP: int defaultLexState>",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\");\")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r9[0] = $r17",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r9)",
            "$r18 = newarray (java.lang.Object)[1]",
            "$r19 = new java.lang.StringBuilder",
            "specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()",
            "$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  virtual ~\")",
            "$r20 = <org.javacc.parser.LexGenCPP: java.lang.String tokMgrClassName>",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"();\")",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r18[0] = $r24",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r18)",
            "$r25 = newarray (java.lang.Object)[1]",
            "$r26 = new java.lang.StringBuilder",
            "specialinvoke $r26.<java.lang.StringBuilder: void <init>()>()",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  void ReInit(JAVACC_CHARSTREAM *stream, int lexState = \")",
            "$i1 = <org.javacc.parser.LexGenCPP: int defaultLexState>",
            "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)",
            "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\");\")",
            "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r25[0] = $r30",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r25)",
            "$r31 = newarray (java.lang.Object)[1]",
            "$r31[0] = \"  void SwitchTo(int lexState);\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r31)",
            "$r32 = newarray (java.lang.Object)[1]",
            "$r32[0] = \"  void clear();\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r32)",
            "$r33 = newarray (java.lang.Object)[1]",
            "$r34 = new java.lang.StringBuilder",
            "specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()",
            "$r36 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  const JJSimpleString jjKindsForBitVector(int i, \")",
            "$r35 = staticinvoke <org.javacc.parser.Options: java.lang.String getLongType()>()",
            "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r35)",
            "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" vec);\")",
            "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r33[0] = $r39",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r33)",
            "$r40 = newarray (java.lang.Object)[1]",
            "$r40[0] = \"  const JJSimpleString jjKindsForStateVector(int lexState, int vec[], int start, int end);\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r40)",
            "$r41 = newarray (java.lang.Object)[1]",
            "$r41[0] = \"\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r41)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__upgradeValue__1231261006\\1240.smt2",
        "z3": {
            "memory": 30879744,
            "run_time": 0.03891253471374512,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(error \"line 22 column 10: model is not available\")\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14958592,
            "run_time": 0.030980348587036133,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2421 is 1\r\n; rep: (as @var2421_0 var2421)\r\n; cardinality of var640 is 2\r\n; rep: (as @var640_0 var640)\r\n; rep: (as @var640_1 var640)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"[\")\r\n(define-fun null-var640 () var640 (as @var640_0 var640))\r\n(define-fun var301 () String \"\")\r\n(define-fun var3673 () var640 (as @var640_1 var640))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36536320,
            "run_time": 0.04622840881347656,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 22 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 326606848,
            "run_time": 1.7795171737670898,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3673 () var640 var640!130)\r\n  (define-fun var301 () String \"\")\r\n  (define-fun null-var640 () var640 var640!128)\r\n  (define-fun null-String () String \"a\")\r\n  (define-fun equalsIgnoreCase/-92311102 ((x!0 String) (x!1 String)) Bool (ite (and (= x!0 \"\") (= x!1 \"NODE_FACTORY\")) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r3 := @parameter1: java.lang.Object",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"NODE_FACTORY\")",
            "if $z0 == 0 goto return r3",
            "return r3"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.LexGenCPP__PrintClassHead__576427989\\909.smt2",
        "z3": {
            "memory": 33370112,
            "run_time": 60.008662939071655,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 17055744,
            "run_time": 60.013880491256714,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34975744,
            "run_time": 0.06119370460510254,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 321 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 322 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 377839616,
            "run_time": 1.7740161418914795,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3771/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.LexGenCPP__PrintClassHead__576427989\\909.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_101_4 =\r\n     concat(all_101_5, \";\")\r\n   all_68_0 =\r\n     concat(all_97_5, \"Constants.h\\u{0}22\")\r\n   var1919!1 =\r\n     concat(all_94_4, \";\")\r\n   var3487!1 =\r\n     concat(all_91_4, \"Constants.h\\u{0}22\")\r\n   var3356!1 =\r\n     concat(\", public \", all_36_0)\r\n   all_30_0 =\r\n     concat(\"public TokenManager\", all_123_1)\r\n   var3512!1 =\r\n     concat(\"public TokenManager\", all_104_5)\r\n   var1883!1 =\r\n     concat(\"class \", var2152-cu_name)\r\n   var3343!1 =\r\n     concat(\"#include \\u{0}22\", var2152-cu_name)\r\n   all_123_1 =\r\n     concat(\", public \", all_36_0)\r\n   all_104_5 =\r\n     concat(\", public \", all_36_0)\r\n   all_101_5 =\r\n     concat(\"class \", var2152-cu_name)\r\n   all_94_4 =\r\n     concat(\"class \", var2152-cu_name)\r\n   all_97_5 =\r\n     concat(\"#include \\u{0}22\", var2152-cu_name)\r\n   all_91_4 =\r\n     concat(\"#include \\u{0}22\", var2152-cu_name)\r\n\r\n1424ms\r\n"
        },
        "undefined_function_count": 19,
        "assertion_count": 93,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 10,
            "<java.lang.StringBuilder: java.lang.String toString()>": 4,
            "<java.lang.String: int length()>": 2
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.parser.LexGenCPP",
            "$r0 = new java.util.ArrayList",
            "$r1 = <org.javacc.parser.JavaCCGlobals: java.util.List toolNames>",
            "specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1)",
            "interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(\"JavaCC\")",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void switchToStaticsFile()>()",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void switchToIncludeFile()>()",
            "$r3 = newarray (java.lang.Object)[1]",
            "$r3[0] = \"#include \\\"stdio.h\\\"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r3)",
            "$r4 = newarray (java.lang.Object)[1]",
            "$r4[0] = \"#include \\\"JavaCC.h\\\"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r4)",
            "$r5 = newarray (java.lang.Object)[1]",
            "$r5[0] = \"#include \\\"CharStream.h\\\"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r5)",
            "$r6 = newarray (java.lang.Object)[1]",
            "$r6[0] = \"#include \\\"Token.h\\\"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r6)",
            "$r7 = newarray (java.lang.Object)[1]",
            "$r7[0] = \"#include \\\"ErrorHandler.h\\\"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r7)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"#include \\\"TokenManager.h\\\"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r8)",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r10 = new java.lang.StringBuilder",
            "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()",
            "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"#include \\\"\")",
            "$r11 = <org.javacc.parser.JavaCCGlobals: java.lang.String cu_name>",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Constants.h\\\"\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r9[0] = $r15",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r9)",
            "$r16 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"TOKEN_MANAGER_INCLUDE\")",
            "$i0 = virtualinvoke $r16.<java.lang.String: int length()>()",
            "if $i0 <= 0 goto $r17 = newarray (java.lang.Object)[1]",
            "$r17 = newarray (java.lang.Object)[1]",
            "$r17[0] = \"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r17)",
            "$r18 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"NAMESPACE\")",
            "$i1 = virtualinvoke $r18.<java.lang.String: int length()>()",
            "if $i1 <= 0 goto $r19 = newarray (java.lang.Object)[1]",
            "$r19 = newarray (java.lang.Object)[1]",
            "$r20 = new java.lang.StringBuilder",
            "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()",
            "$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"class \")",
            "$r21 = <org.javacc.parser.JavaCCGlobals: java.lang.String cu_name>",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\";\")",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r19[0] = $r25",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r19)",
            "$r26 = newarray (java.lang.Object)[1]",
            "$r26[0] = \"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r26)",
            "$r27 = newarray (java.lang.Object)[1]",
            "$r27[0] = \"/** Token Manager. */\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r27)",
            "$r94 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"TOKEN_MANAGER_SUPER_CLASS\")",
            "$r30 = <org.javacc.parser.LexGenCPP: java.lang.String tokMgrClassName>",
            "$r37 = newarray (java.lang.String)[0]",
            "$r28 = newarray (java.lang.String)[1]",
            "$r29 = new java.lang.StringBuilder",
            "specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()",
            "$r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"public TokenManager\")",
            "if $r94 != null goto $r31 = new java.lang.StringBuilder",
            "$r31 = new java.lang.StringBuilder",
            "specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()",
            "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", public \")",
            "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r94)",
            "$r102 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102)",
            "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r28[0] = $r36",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genClassStart(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>(null, $r30, $r37, $r28)",
            "$r38 = <org.javacc.parser.JavaCCGlobals: java.util.List token_mgr_decls>",
            "if $r38 == null goto $z0 = staticinvoke <org.javacc.parser.Options: boolean getCommonTokenAction()>()",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean getCommonTokenAction()>()",
            "if $z0 == 0 goto $r105 = newarray (java.lang.Object)[1]",
            "$r105 = newarray (java.lang.Object)[1]",
            "$r105[0] = \"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r105)",
            "$r106 = newarray (java.lang.Object)[1]",
            "$r106[0] = \"  FILE *debugStream;\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r106)",
            "$r107 = <org.javacc.parser.LexGenCPP: java.lang.String tokMgrClassName>",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void generateMethodDefHeader(java.lang.String,java.lang.String,java.lang.String)>(\"  void \", $r107, \"setDebugStream(FILE *ds)\")",
            "$r108 = newarray (java.lang.Object)[1]",
            "$r108[0] = \"{ debugStream = ds; }\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r108)",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void switchToIncludeFile()>()",
            "$z4 = staticinvoke <org.javacc.parser.Options: boolean getTokenManagerUsesParser()>()",
            "if $z4 == 0 goto virtualinvoke r2.<org.javacc.parser.LexGenCPP: void switchToMainFile()>()",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void switchToMainFile()>()",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.OtherFilesGenCPP__printCharArray__-519201871\\1170.smt2",
        "z3": {
            "memory": 32137216,
            "run_time": 0.04511666297912598,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3909:\r\n  ;;   var3909!val!0 var3909!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3909!val!0 () var3909)\r\n  (declare-fun var3909!val!1 () var3909)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3909)) (or (= x var3909!val!0) (= x var3909!val!1)))\r\n  ;; -----------\r\n  (define-fun var2194 () Int\r\n    0)\r\n  (define-fun var1673 () Int\r\n    (str.len var3135))\r\n  (define-fun null-var3909 () var3909\r\n    var3909!val!1)\r\n  (define-fun var3135 () String\r\n    \"\")\r\n  (define-fun var1956 () var3909\r\n    var3909!val!0)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1956!2 () var3909\r\n    var3909!val!0)\r\n  (define-fun var3704 () String\r\n    \"\")\r\n  (define-fun var1956!1 () var3909\r\n    var3909!val!0)\r\n  (define-fun var1437 () String\r\n    \"\")\r\n  (define-fun print/-2007916749 ((x!0 var3909) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10313728,
            "run_time": 0.030710220336914062,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3909 is 2\r\n; rep: (as @var3909_0 var3909)\r\n; rep: (as @var3909_1 var3909)\r\n; cardinality of var1305 is 1\r\n; rep: (as @var1305_0 var1305)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun print/-2007916749 ((BOUND_VARIABLE_521 var3909) (BOUND_VARIABLE_522 String)) void (as @void_0 void))\r\n(define-fun null-var3909 () var3909 (as @var3909_0 var3909))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1956 () var3909 (as @var3909_1 var3909))\r\n(define-fun var3135 () String \"\")\r\n(define-fun var1956!1 () var3909 (as @var3909_0 var3909))\r\n(define-fun var1437 () String \"\")\r\n(define-fun var1956!2 () var3909 (as @var3909_0 var3909))\r\n(define-fun var3704 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37048320,
            "run_time": 0.06137657165527344,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3909:\n  ;;   var3909!val!0 var3909!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3909!val!0 () var3909)\n  (declare-fun var3909!val!1 () var3909)\n  ;; cardinality constraint:\n  (forall ((x var3909)) (or (= x var3909!val!0) (= x var3909!val!1)))\n  ;; -----------\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2194 () Int\n    0)\n  (define-fun var1673 () Int\n    (str.len var3135))\n  (define-fun null-var3909 () var3909\n    var3909!val!1)\n  (define-fun var1956 () var3909\n    var3909!val!0)\n  (define-fun var3135 () String\n    \"\")\n  (define-fun var1956!2 () var3909\n    var3909!val!0)\n  (define-fun var3704 () String\n    \"\")\n  (define-fun var1956!1 () var3909\n    var3909!val!0)\n  (define-fun var1437 () String\n    \"\")\n  (define-fun print/-2007916749 ((x!0 var3909) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151838720,
            "run_time": 0.771794319152832,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3135 () String \"\")\r\n  (define-fun var1956 () var3909 var3909!4)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var3909 () var3909 var3909!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.io.PrintWriter",
            "r1 := @parameter1: java.lang.String",
            "virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(\"{\")",
            "i2 = 0",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "if i2 >= $i0 goto virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(\"0}\")",
            "virtualinvoke r0.<java.io.PrintWriter: void print(java.lang.String)>(\"0}\")",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.OutputFile$TrapClosePrintWriter__close__-372560264\\1149.smt2",
        "z3": {
            "memory": 15552512,
            "run_time": 0.07726550102233887,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var26:\r\n  ;;   var26!val!1 var26!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var26!val!1 () var26)\r\n  (declare-fun var26!val!0 () var26)\r\n  ;; cardinality constraint:\r\n  (forall ((x var26)) (or (= x var26!val!1) (= x var26!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3009:\r\n  ;;   var3009!val!1 var3009!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3009!val!1 () var3009)\r\n  (declare-fun var3009!val!0 () var3009)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3009)) (or (= x var3009!val!1) (= x var3009!val!0)))\r\n  ;; -----------\r\n  (define-fun var181 () var102\r\n    (this$0/-1828164625 var326))\r\n  (define-fun var1501 () var2691\r\n    (file/-884741558 (this$0/-1828164625 var326)))\r\n  (define-fun null-var3009 () var3009\r\n    var3009!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3134 () String\r\n    (str.++ var479!1\r\n        \"Could not close \"\r\n        (getAbsolutePath/-802773300\r\n          (file/-884741558 (this$0/-1828164625 var326)))))\r\n  (define-fun var1152 () String\r\n    (str.++ var479!1\r\n        \"Could not close \"\r\n        (getAbsolutePath/-802773300\r\n          (file/-884741558 (this$0/-1828164625 var326)))))\r\n  (define-fun var3561 () var413\r\n    var2921-err)\r\n  (define-fun var72 () String\r\n    (getAbsolutePath/-802773300 (file/-884741558 (this$0/-1828164625 var326))))\r\n  (define-fun null-var26 () var26\r\n    var26!val!1)\r\n  (define-fun var1692 () String\r\n    (str.++ var479!1 \"Could not close \"))\r\n  (define-fun var326 () var26\r\n    var26!val!0)\r\n  (define-fun var1457 () var3009\r\n    var3009!val!0)\r\n  (define-fun var479 () String\r\n    String-init)\r\n  (define-fun var851 () var102\r\n    (this$0/-1828164625 var326))\r\n  (define-fun var479!2 () String\r\n    \"Could not close \")\r\n  (define-fun var1692!1 () String\r\n    \"Could not close \")\r\n  (define-fun var479!1 () String\r\n    \"\")\r\n  (define-fun var2921-err () var413\r\n    var413!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3561!1 () var413\r\n    var413!val!0)\r\n  (define-fun var1152!1 () String\r\n    \"\")\r\n  (define-fun this$0/-1828164625 ((x!0 var26)) var102\r\n    var102!val!0)\r\n  (define-fun file/-884741558 ((x!0 var102)) var2691\r\n    var2691!val!0)\r\n  (define-fun getAbsolutePath/-802773300 ((x!0 var2691)) String\r\n    \"\")\r\n  (define-fun println/1773605060 ((x!0 var413) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 59 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10272768,
            "run_time": 0.014556169509887695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var26 is 2\r\n; rep: (as @var26_0 var26)\r\n; rep: (as @var26_1 var26)\r\n; cardinality of var102 is 1\r\n; rep: (as @var102_0 var102)\r\n; cardinality of var3009 is 2\r\n; rep: (as @var3009_0 var3009)\r\n; rep: (as @var3009_1 var3009)\r\n; cardinality of var413 is 1\r\n; rep: (as @var413_0 var413)\r\n; cardinality of var2921 is 1\r\n; rep: (as @var2921_0 var2921)\r\n; cardinality of var2691 is 1\r\n; rep: (as @var2691_0 var2691)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun this$0/-1828164625 ((BOUND_VARIABLE_550 var26)) var102 (as @var102_0 var102))\r\n(define-fun String-init () String \"\")\r\n(define-fun file/-884741558 ((BOUND_VARIABLE_553 var102)) var2691 (as @var2691_0 var2691))\r\n(define-fun getAbsolutePath/-802773300 ((BOUND_VARIABLE_556 var2691)) String \"\")\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_559 var413) (BOUND_VARIABLE_560 String)) void (as @void_0 void))\r\n(define-fun null-var26 () var26 (as @var26_0 var26))\r\n(define-fun null-var3009 () var3009 (as @var3009_0 var3009))\r\n(define-fun var2921-err () var413 (as @var413_0 var413))\r\n(define-fun var326 () var26 (as @var26_1 var26))\r\n(define-fun var1457 () var3009 (as @var3009_1 var3009))\r\n(define-fun var479!1 () String \"\")\r\n(define-fun var479!2 () String \"Could not close \")\r\n(define-fun var1692!1 () String \"Could not close \")\r\n(define-fun var3561!1 () var413 (as @var413_0 var413))\r\n(define-fun var1152!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36380672,
            "run_time": 0.04607582092285156,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var26:\n  ;;   var26!val!1 var26!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var26!val!1 () var26)\n  (declare-fun var26!val!0 () var26)\n  ;; cardinality constraint:\n  (forall ((x var26)) (or (= x var26!val!1) (= x var26!val!0)))\n  ;; -----------\n  ;; universe for var3009:\n  ;;   var3009!val!1 var3009!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3009!val!1 () var3009)\n  (declare-fun var3009!val!0 () var3009)\n  ;; cardinality constraint:\n  (forall ((x var3009)) (or (= x var3009!val!1) (= x var3009!val!0)))\n  ;; -----------\n  (define-fun var3561 () var413\n    var2921-err)\n  (define-fun var3134 () String\n    (str.++ var479!1\n        \"Could not close \"\n        (getAbsolutePath/-802773300\n          (file/-884741558 (this$0/-1828164625 var326)))))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1152 () String\n    (str.++ var479!1\n        \"Could not close \"\n        (getAbsolutePath/-802773300\n          (file/-884741558 (this$0/-1828164625 var326)))))\n  (define-fun null-var3009 () var3009\n    var3009!val!1)\n  (define-fun var72 () String\n    (getAbsolutePath/-802773300 (file/-884741558 (this$0/-1828164625 var326))))\n  (define-fun null-var26 () var26\n    var26!val!1)\n  (define-fun var1692 () String\n    (str.++ var479!1 \"Could not close \"))\n  (define-fun var479 () String\n    String-init)\n  (define-fun var851 () var102\n    (this$0/-1828164625 var326))\n  (define-fun var326 () var26\n    var26!val!0)\n  (define-fun var1457 () var3009\n    var3009!val!0)\n  (define-fun var181 () var102\n    (this$0/-1828164625 var326))\n  (define-fun var1501 () var2691\n    (file/-884741558 (this$0/-1828164625 var326)))\n  (define-fun var479!2 () String\n    \"Could not close \")\n  (define-fun var1692!1 () String\n    \"Could not close \")\n  (define-fun var479!1 () String\n    \"\")\n  (define-fun var2921-err () var413\n    var413!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3561!1 () var413\n    var413!val!0)\n  (define-fun var1152!1 () String\n    \"\")\n  (define-fun this$0/-1828164625 ((x!0 var26)) var102\n    var102!val!0)\n  (define-fun file/-884741558 ((x!0 var102)) var2691\n    var2691!val!0)\n  (define-fun getAbsolutePath/-802773300 ((x!0 var2691)) String\n    \"\")\n  (define-fun println/1773605060 ((x!0 var413) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 59 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179994624,
            "run_time": 0.7880327701568604,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3009/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.OutputFile$TrapClosePrintWriter__close__-372560264\\1149.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1692!1 =\r\n     concat(\"Could not close \", all_25_3)\r\n\r\n553ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.OutputFile$TrapClosePrintWriter",
            "$r1 = r0.<org.javacc.parser.OutputFile$TrapClosePrintWriter: org.javacc.parser.OutputFile this$0>",
            "$r2 := @caughtexception",
            "$r4 = <java.lang.System: java.io.PrintStream err>",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not close \")",
            "$r5 = r0.<org.javacc.parser.OutputFile$TrapClosePrintWriter: org.javacc.parser.OutputFile this$0>",
            "$r6 = $r5.<org.javacc.parser.OutputFile: java.io.File file>",
            "$r7 = virtualinvoke $r6.<java.io.File: java.lang.String getAbsolutePath()>()",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r4.<java.io.PrintStream: void println(java.lang.String)>($r10)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.OutputFile__checkOptions__-105689666\\1214.smt2",
        "z3": {
            "memory": 31825920,
            "run_time": 0.04323744773864746,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1389:\r\n  ;;   var1389!val!0 var1389!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1389!val!0 () var1389)\r\n  (declare-fun var1389!val!1 () var1389)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1389)) (or (= x var1389!val!0) (= x var1389!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1304:\r\n  ;;   var1304!val!0 var1304!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1304!val!0 () var1304)\r\n  (declare-fun var1304!val!1 () var1304)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1304)) (or (= x var1304!val!0) (= x var1304!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1243:\r\n  ;;   var1243!val!0 var1243!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1243!val!0 () var1243)\r\n  (declare-fun var1243!val!1 () var1243)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1243)) (or (= x var1243!val!0) (= x var1243!val!1)))\r\n  ;; -----------\r\n  (define-fun var3830 () var1243\r\n    var1243!val!0)\r\n  (define-fun var2050 () String\r\n    (str.++ var3443!1\r\n        \"Could not open file \"\r\n        (getName/1128186653 var1400)\r\n        \" for writing.\"))\r\n  (define-fun var1400 () var1304\r\n    var1304!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1769 () var3157\r\n    var3157-init)\r\n  (define-fun var3239 () var1629\r\n    var1629-init)\r\n  (define-fun var3443 () String\r\n    String-init)\r\n  (define-fun var2262 () (Array Int String)\r\n    ((as const (Array Int String)) \"A\"))\r\n  (define-fun var2833 () String\r\n    (getName/1128186653 var1400))\r\n  (define-fun null-__Array__Int__String__ () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun var797 () String\r\n    (str.++ var3443!1 \"Could not open file \" (getName/1128186653 var1400)))\r\n  (define-fun var2175 () String\r\n    (str.++ var3443!1 \"Could not open file \"))\r\n  (define-fun null-var1243 () var1243\r\n    var1243!val!1)\r\n  (define-fun var3326 () var1798\r\n    var1798-init)\r\n  (define-fun null-var1389 () var1389\r\n    var1389!val!1)\r\n  (define-fun var3856 () String\r\n    (str.++ var3443!1\r\n        \"Could not open file \"\r\n        (getName/1128186653 var1400)\r\n        \" for writing.\"))\r\n  (define-fun var1720 () var1389\r\n    var1389!val!0)\r\n  (define-fun null-var1304 () var1304\r\n    var1304!val!1)\r\n  (define-fun var3443!1 () String\r\n    \"\")\r\n  (define-fun var797!1 () String\r\n    \"Could not open file  for writing.\")\r\n  (define-fun var2175!1 () String\r\n    \"Could not open file \")\r\n  (define-fun var3443!2 () String\r\n    \"Could not open file \")\r\n  (define-fun var1629-init () var1629\r\n    var1629!val!0)\r\n  (define-fun var3157-init () var3157\r\n    var3157!val!0)\r\n  (define-fun var1798-init () var1798\r\n    var1798!val!0)\r\n  (define-fun var3326!1 () var1798\r\n    var1798!val!0)\r\n  (define-fun var3856!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getName/1128186653 ((x!0 var1304)) String\r\n    \"\")\r\n  (define-fun <init>/1750087229 ((x!0 var1798)) void\r\n    void!val!0)\r\n  (define-fun var9_semantic_error/-498493661 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 71 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10317824,
            "run_time": 0.015605688095092773,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1389 is 2\r\n; rep: (as @var1389_0 var1389)\r\n; rep: (as @var1389_1 var1389)\r\n; cardinality of var1304 is 2\r\n; rep: (as @var1304_0 var1304)\r\n; rep: (as @var1304_1 var1304)\r\n; cardinality of var3157 is 1\r\n; rep: (as @var3157_0 var3157)\r\n; cardinality of var1629 is 1\r\n; rep: (as @var1629_0 var1629)\r\n; cardinality of var1243 is 2\r\n; rep: (as @var1243_0 var1243)\r\n; rep: (as @var1243_1 var1243)\r\n; cardinality of var9 is 1\r\n; rep: (as @var9_0 var9)\r\n; cardinality of var1798 is 1\r\n; rep: (as @var1798_0 var1798)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3157-init () var3157 (as @var3157_0 var3157))\r\n(define-fun var1629-init () var1629 (as @var1629_0 var1629))\r\n(define-fun String-init () String \"\")\r\n(define-fun getName/1128186653 ((BOUND_VARIABLE_680 var1304)) String \"\")\r\n(define-fun var9_semantic_error/-498493661 ((BOUND_VARIABLE_683 String)) void (as @void_0 void))\r\n(define-fun var1798-init () var1798 (as @var1798_0 var1798))\r\n(define-fun <init>/1750087229 ((BOUND_VARIABLE_686 var1798)) void (as @void_0 void))\r\n(define-fun null-var1389 () var1389 (as @var1389_0 var1389))\r\n(define-fun null-var1304 () var1304 (as @var1304_0 var1304))\r\n(define-fun null-__Array__Int__String__ () (Array Int String) ((as const (Array Int String)) \"A\"))\r\n(define-fun null-var1243 () var1243 (as @var1243_0 var1243))\r\n(define-fun var1720 () var1389 (as @var1389_1 var1389))\r\n(define-fun var1400 () var1304 (as @var1304_1 var1304))\r\n(define-fun var2262 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var3830 () var1243 (as @var1243_1 var1243))\r\n(define-fun var3443!1 () String \"\")\r\n(define-fun var3443!2 () String \"Could not open file \")\r\n(define-fun var2175!1 () String \"Could not open file \")\r\n(define-fun var797!1 () String \"Could not open file  for writing.\")\r\n(define-fun var3856!1 () String \"\")\r\n(define-fun var3326!1 () var1798 (as @var1798_0 var1798))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35794944,
            "run_time": 0.046637773513793945,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 70 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 71 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 174800896,
            "run_time": 0.8967547416687012,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1304/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.OutputFile__checkOptions__-105689666\\1214.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var797!1 =\r\n     concat(all_34_3, \" for writing.\")\r\n   var2175!1 =\r\n     concat(\"Could not open file \", all_31_2)\r\n   all_34_3 =\r\n     concat(\"Could not open file \", all_31_2)\r\n\r\n646ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r20 := @this: org.javacc.parser.OutputFile",
            "r2 := @parameter0: java.io.File",
            "r4 := @parameter1: java.lang.String[]",
            "$r22 = new java.io.BufferedReader",
            "$r21 = new java.io.FileReader",
            "$r12 := @caughtexception",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$r15 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not open file \")",
            "$r14 = virtualinvoke r2.<java.io.File: java.lang.String getName()>()",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for writing.\")",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void semantic_error(java.lang.String)>($r18)",
            "$r25 = new java.lang.Error",
            "specialinvoke $r25.<java.lang.Error: void <init>()>()",
            "throw $r25"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__setCmdLineOption__-430146320\\1468.smt2",
        "z3": {
            "memory": 33972224,
            "run_time": 0.07005620002746582,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(error \"line 85 column 10: model is not available\")\r\n(error \"line 86 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 55832576,
            "run_time": 6.954614162445068,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var164 is 1\r\n; rep: (as @var164_0 var164)\r\n; cardinality of var1511 is 1\r\n; rep: (as @var1511_0 var1511)\r\n; cardinality of var3900 is 1\r\n; rep: (as @var3900_0 var3900)\r\n; cardinality of var2 is 1\r\n; rep: (as @var2_0 var2)\r\n; cardinality of var624 is 1\r\n; rep: (as @var624_0 var624)\r\n; cardinality of var1812 is 1\r\n; rep: (as @var1812_0 var1812)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1511_containsKey/1715618542 ((_arg_1 var1511) (_arg_2 var2)) Bool false)\r\n(define-fun cast-from-String-to-var2 ((_arg_1 String)) var2 (as @var2_0 var2))\r\n(define-fun String-init () String \"\")\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_148699 var624) (BOUND_VARIABLE_148700 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"\")\r\n(define-fun var3900-optionValues () var1511 (as @var1511_0 var1511))\r\n(define-fun var1812-out () var624 (as @var624_0 var624))\r\n(define-fun var2435 () String \"\\u{0}\")\r\n(define-fun var31!1 () String \"\")\r\n(define-fun var31!2 () String \"Warning: Bad option \"\"\")\r\n(define-fun var3011!1 () String \"Warning: Bad option \"\"\\u{0}\")\r\n(define-fun var1903!1 () String \"Warning: Bad option \"\"\\u{0}\"\" will be ignored.\")\r\n(define-fun var3584!1 () var624 (as @var624_0 var624))\r\n(define-fun var3559!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36851712,
            "run_time": 0.047423601150512695,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 85 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 86 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 191074304,
            "run_time": 0.8926076889038086,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_27_1, all_27_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.Options__setCmdLineOption__-430146320\\1468.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n665ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 23,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: java.lang.String toUpperCase()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1,
            "<java.lang.String: int indexOf(int)>": 2,
            "<java.lang.String: java.lang.String toUpperCase()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i22 = (int) $c0",
            "if $i22 != 45 goto r38 = r0",
            "r38 = r0",
            "$i7 = virtualinvoke r38.<java.lang.String: int indexOf(int)>(61)",
            "$i8 = virtualinvoke r38.<java.lang.String: int indexOf(int)>(58)",
            "if $i7 >= 0 goto (branch)",
            "i20 = $i8",
            "goto [?= (branch)]",
            "if i20 >= 0 goto $r1 = virtualinvoke r38.<java.lang.String: java.lang.String substring(int,int)>(0, i20)",
            "r39 = virtualinvoke r38.<java.lang.String: java.lang.String toUpperCase()>()",
            "$r36 = <org.javacc.parser.Options: java.util.Map optionValues>",
            "$z4 = interfaceinvoke $r36.<java.util.Map: boolean containsKey(java.lang.Object)>(r39)",
            "if $z4 == 0 goto $i4 = virtualinvoke r39.<java.lang.String: int length()>()",
            "$i4 = virtualinvoke r39.<java.lang.String: int length()>()",
            "if $i4 <= 2 goto $r41 = <java.lang.System: java.io.PrintStream out>",
            "$r41 = <java.lang.System: java.io.PrintStream out>",
            "$r50 = new java.lang.StringBuilder",
            "specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()",
            "$r43 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Warning: Bad option \\\"\")",
            "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" will be ignored.\")",
            "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r41.<java.io.PrintStream: void println(java.lang.String)>($r46)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__setInputFileOption__-581863023\\1263.smt2",
        "z3": {
            "memory": 32690176,
            "run_time": 0.043900489807128906,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(error \"line 62 column 10: model is not available\")\r\n(error \"line 63 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14925824,
            "run_time": 0.030275344848632812,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2911 is 5\r\n; rep: (as @var2911_0 var2911)\r\n; rep: (as @var2911_1 var2911)\r\n; rep: (as @var2911_2 var2911)\r\n; rep: (as @var2911_3 var2911)\r\n; rep: (as @var2911_4 var2911)\r\n; cardinality of var1817 is 1\r\n; rep: (as @var1817_0 var1817)\r\n; cardinality of var1477 is 1\r\n; rep: (as @var1477_0 var1477)\r\n; cardinality of var25 is 1\r\n; rep: (as @var25_0 var25)\r\n; cardinality of var1877 is 1\r\n; rep: (as @var1877_0 var1877)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1477_containsKey/1715618542 ((_arg_1 var1477) (_arg_2 var2911)) Bool false)\r\n(define-fun cast-from-String-to-var2911 ((_arg_1 String)) var2911 (as @var2911_4 var2911))\r\n(define-fun String-init () String \"\")\r\n(define-fun var1877_warning/-2079397673 ((BOUND_VARIABLE_3206 var2911) (BOUND_VARIABLE_3207 String)) void (as @void_0 void))\r\n(define-fun null-var2911 () var2911 (as @var2911_0 var2911))\r\n(define-fun null-String () String \"[\")\r\n(define-fun var25-optionValues () var1477 (as @var1477_0 var1477))\r\n(define-fun var2189 () var2911 (as @var2911_1 var2911))\r\n(define-fun var2673 () var2911 (as @var2911_2 var2911))\r\n(define-fun var1809 () String \"\")\r\n(define-fun var601 () var2911 (as @var2911_3 var2911))\r\n(define-fun var3039!1 () String \"\")\r\n(define-fun var3039!2 () String \"Bad option name \"\"\")\r\n(define-fun var1125!1 () String \"Bad option name \"\"\")\r\n(define-fun var1682!1 () String \"Bad option name \"\"\"\".  Option setting will be ignored.\")\r\n(define-fun var2189!1 () var2911 (as @var2911_0 var2911))\r\n(define-fun var2882!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36544512,
            "run_time": 0.04570651054382324,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 62 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 63 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 211947520,
            "run_time": 0.869377613067627,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2911/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.Options__setInputFileOption__-581863023\\1263.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_21_2 =\r\n     replaceall(all_43_0, \"Z\")\r\n   all_32_4 =\r\n     concat(all_32_5, \"\\u{0}22.  Option setting will be ignored.\")\r\n   var1682!1 =\r\n     concat(all_29_4, \"\\u{0}22.  Option setting will be ignored.\")\r\n   var1125!1 =\r\n     concat(\"Bad option name \\u{0}22\", var1809)\r\n   all_43_0 =\r\n     replaceall(all_43_1, \"Y\")\r\n   all_32_5 =\r\n     concat(\"Bad option name \\u{0}22\", var1809)\r\n   all_29_4 =\r\n     concat(\"Bad option name \\u{0}22\", var1809)\r\n   all_43_1 =\r\n     replaceall(all_43_2, \"X\")\r\n   all_43_2 =\r\n     replaceall(all_43_3, \"W\")\r\n   all_43_3 =\r\n     replaceall(all_43_4, \"V\")\r\n   all_43_4 =\r\n     replaceall(all_43_5, \"U\")\r\n   all_43_5 =\r\n     replaceall(all_43_6, \"T\")\r\n   all_43_6 =\r\n     replaceall(all_43_7, \"S\")\r\n   all_43_7 =\r\n     replaceall(all_43_8, \"R\")\r\n   all_43_8 =\r\n     replaceall(all_43_9, \"Q\")\r\n   all_43_9 =\r\n     replaceall(all_43_10, \"P\")\r\n   all_43_10 =\r\n     replaceall(all_43_11, \"O\")\r\n   all_43_11 =\r\n     replaceall(all_43_12, \"N\")\r\n   all_43_12 =\r\n     replaceall(all_43_13, \"M\")\r\n   all_43_13 =\r\n     replaceall(all_43_14, \"L\")\r\n   all_43_14 =\r\n     replaceall(all_43_15, \"K\")\r\n   all_43_15 =\r\n     replaceall(all_43_16, \"J\")\r\n   all_43_16 =\r\n     replaceall(all_43_17, \"I\")\r\n   all_43_17 =\r\n     replaceall(all_43_18, \"H\")\r\n   all_43_18 =\r\n     replaceall(all_43_19, \"G\")\r\n   all_43_19 =\r\n     replaceall(all_43_20, \"F\")\r\n   all_43_20 =\r\n     replaceall(all_43_21, \"E\")\r\n   all_43_21 =\r\n     replaceall(all_43_22, \"D\")\r\n   all_43_22 =\r\n     replaceall(all_43_23, \"C\")\r\n   all_43_23 =\r\n     replaceall(all_43_24, \"B\")\r\n   all_43_24 =\r\n     replaceall(var1809, \"A\")\r\n\r\n625ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.String: java.lang.String toUpperCase()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toUpperCase()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r36 := @parameter0: java.lang.Object",
            "r10 := @parameter1: java.lang.Object",
            "r0 := @parameter2: java.lang.String",
            "r54 := @parameter3: java.lang.Object",
            "r1 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>()",
            "$r2 = <org.javacc.parser.Options: java.util.Map optionValues>",
            "$z0 = interfaceinvoke $r2.<java.util.Map: boolean containsKey(java.lang.Object)>(r1)",
            "if $z0 != 0 goto $r3 = <org.javacc.parser.Options: java.util.Map optionValues>",
            "$r49 = new java.lang.StringBuilder",
            "specialinvoke $r49.<java.lang.StringBuilder: void <init>()>()",
            "$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Bad option name \\\"\")",
            "$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\".  Option setting will be ignored.\")",
            "$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void warning(java.lang.Object,java.lang.String)>(r36, $r53)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__setStringOption__1913293424\\2065.smt2",
        "z3": {
            "memory": 33083392,
            "run_time": 0.057579755783081055,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(error \"line 32 column 10: model is not available\")\r\n(error \"line 33 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 15360000,
            "run_time": 0.031118154525756836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var373 is 1\r\n; rep: (as @var373_0 var373)\r\n; cardinality of var868 is 1\r\n; rep: (as @var868_0 var868)\r\n; cardinality of var3757 is 1\r\n; rep: (as @var3757_0 var3757)\r\n; cardinality of var3694 is 1\r\n; rep: (as @var3694_0 var3694)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var868_put/1464166817 ((BOUND_VARIABLE_3216 var868) (BOUND_VARIABLE_3217 var3694) (BOUND_VARIABLE_3218 var3694)) var3694 (as @var3694_0 var3694))\r\n(define-fun cast-from-String-to-var3694 ((BOUND_VARIABLE_3221 String)) var3694 (as @var3694_0 var3694))\r\n(define-fun null-String () String \"[\")\r\n(define-fun var3757-optionValues () var868 (as @var868_0 var868))\r\n(define-fun var530 () String \"\")\r\n(define-fun var419 () String \"\")\r\n(define-fun var2000!1 () var868 (as @var868_0 var868))\r\n(define-fun var530!1 () String \"\")\r\n(define-fun var419!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36577280,
            "run_time": 0.047280073165893555,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 32 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 33 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 296603648,
            "run_time": 1.2422642707824707,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var530!1 () String \"\")\r\n  (define-fun var419 () String \"a\")\r\n  (define-fun var530 () String \"a\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun equalsIgnoreCase/-92311102 ((x!0 String) (x!1 String)) Bool (ite (and (= x!0 \"\") (= x!1 \"NAMESPACE\")) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$r2 = <org.javacc.parser.Options: java.util.Map optionValues>",
            "interfaceinvoke $r2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r1)",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"NAMESPACE\")",
            "if $z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__stringBufOrBuild__-1076446604\\1986.smt2",
        "z3": {
            "memory": 7274496,
            "run_time": 0.060747623443603516,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3593_getOutputLanguage/-1523304050 () String\r\n    \"c++\")\r\n  (define-fun var3593_isOutputLanguageJava/1735442213 () Bool\r\n    false)\r\n  (define-fun var3330 () String\r\n    var3593_getOutputLanguage/-1523304050)\r\n  (define-fun var1112 () Bool\r\n    (= var3593_getOutputLanguage/-1523304050 \"c++\"))\r\n  (define-fun var2581 () Bool\r\n    var3593_isOutputLanguageJava/1735442213)\r\n)\r\n(error \"line 21 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10256384,
            "run_time": 0.01552891731262207,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3593 is 1\r\n; rep: (as @var3593_0 var3593)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3593_isOutputLanguageJava/1735442213 () Bool false)\r\n(define-fun var3593_getOutputLanguage/-1523304050 () String \"c++\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35954688,
            "run_time": 0.04669904708862305,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3593_getOutputLanguage/-1523304050 () String\n    \"c++\")\n  (define-fun var3593_isOutputLanguageJava/1735442213 () Bool\n    false)\n  (define-fun var2581 () Bool\n    var3593_isOutputLanguageJava/1735442213)\n  (define-fun var3330 () String\n    var3593_getOutputLanguage/-1523304050)\n  (define-fun var1112 () Bool\n    (= var3593_getOutputLanguage/-1523304050 \"c++\"))\n)\n(error \"line 21 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140148736,
            "run_time": 0.6358649730682373,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3593_getOutputLanguage/-1523304050 () String \"c++\")\r\n  (define-fun var3593_isOutputLanguageJava/1735442213 () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean isOutputLanguageJava()>()",
            "if $z0 == 0 goto $r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$z1 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(\"c++\")",
            "if $z1 == 0 goto $r1 = new java.lang.RuntimeException",
            "return \"StringBuffer\""
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__stringBufOrBuild__-1076446604\\2000.smt2",
        "z3": {
            "memory": 32346112,
            "run_time": 0.04339909553527832,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1243 () String\r\n    var3937_getOutputLanguage/-1523304050)\r\n  (define-fun var2196 () Bool\r\n    (= var3937_getOutputLanguage/-1523304050 \"c++\"))\r\n  (define-fun var397 () String\r\n    String-init)\r\n  (define-fun var2390 () String\r\n    (str.++ var397!1\r\n        \"Output language type not fully implemented : \"\r\n        var3937_getOutputLanguage/-1523304050))\r\n  (define-fun var2547 () var2274\r\n    var2274-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3932 () Bool\r\n    var3937_isOutputLanguageJava/1735442213)\r\n  (define-fun var2291 () String\r\n    var3937_getOutputLanguage/-1523304050)\r\n  (define-fun var3937_getOutputLanguage/-1523304050 () String\r\n    \"\")\r\n  (define-fun var750 () String\r\n    (str.++ var397!1 \"Output language type not fully implemented : \"))\r\n  (define-fun var1364 () String\r\n    (str.++ var397!1\r\n        \"Output language type not fully implemented : \"\r\n        var3937_getOutputLanguage/-1523304050))\r\n  (define-fun var397!1 () String\r\n    \"\")\r\n  (define-fun var3937_isOutputLanguageJava/1735442213 () Bool\r\n    false)\r\n  (define-fun var397!2 () String\r\n    \"Output language type not fully implemented : \")\r\n  (define-fun var750!1 () String\r\n    \"Output language type not fully implemented : \")\r\n  (define-fun var2547!1 () var2274\r\n    var2274!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1364!1 () String\r\n    \"\")\r\n  (define-fun var2274-init () var2274\r\n    var2274!val!0)\r\n  (define-fun <init>/-1084991535 ((x!0 var2274) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10313728,
            "run_time": 0.016096830368041992,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3937 is 1\r\n; rep: (as @var3937_0 var3937)\r\n; cardinality of var2274 is 1\r\n; rep: (as @var2274_0 var2274)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3937_isOutputLanguageJava/1735442213 () Bool false)\r\n(define-fun var3937_getOutputLanguage/-1523304050 () String \"\")\r\n(define-fun var2274-init () var2274 (as @var2274_0 var2274))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1084991535 ((BOUND_VARIABLE_613 var2274) (BOUND_VARIABLE_614 String)) void (as @void_0 void))\r\n(define-fun var397!1 () String \"\")\r\n(define-fun var397!2 () String \"Output language type not fully implemented : \")\r\n(define-fun var750!1 () String \"Output language type not fully implemented : \")\r\n(define-fun var2547!1 () var2274 (as @var2274_0 var2274))\r\n(define-fun var1364!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36331520,
            "run_time": 0.04592108726501465,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2390 () String\n    (str.++ var397!1\n        \"Output language type not fully implemented : \"\n        var3937_getOutputLanguage/-1523304050))\n  (define-fun var2196 () Bool\n    (= var3937_getOutputLanguage/-1523304050 \"c++\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3937_getOutputLanguage/-1523304050 () String\n    \"\")\n  (define-fun var2291 () String\n    var3937_getOutputLanguage/-1523304050)\n  (define-fun var2547 () var2274\n    var2274-init)\n  (define-fun var397 () String\n    String-init)\n  (define-fun var750 () String\n    (str.++ var397!1 \"Output language type not fully implemented : \"))\n  (define-fun var1243 () String\n    var3937_getOutputLanguage/-1523304050)\n  (define-fun var3932 () Bool\n    var3937_isOutputLanguageJava/1735442213)\n  (define-fun var1364 () String\n    (str.++ var397!1\n        \"Output language type not fully implemented : \"\n        var3937_getOutputLanguage/-1523304050))\n  (define-fun var397!1 () String\n    \"\")\n  (define-fun var3937_isOutputLanguageJava/1735442213 () Bool\n    false)\n  (define-fun var397!2 () String\n    \"Output language type not fully implemented : \")\n  (define-fun var750!1 () String\n    \"Output language type not fully implemented : \")\n  (define-fun var2547!1 () var2274\n    var2274!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1364!1 () String\n    \"\")\n  (define-fun var2274-init () var2274\n    var2274!val!0)\n  (define-fun <init>/-1084991535 ((x!0 var2274) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 202768384,
            "run_time": 0.9580707550048828,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var750!1 () String \"Output language type not fully implemented : \")\r\n  (define-fun var397!2 () String \"Output language type not fully implemented : \")\r\n  (define-fun var397!1 () String \"\")\r\n  (define-fun var3937_getOutputLanguage/-1523304050 () String \"\")\r\n  (define-fun var3937_isOutputLanguageJava/1735442213 () Bool false)\r\n  (define-fun abbrev_107 ((x!0 Int)) String (ite (= x!0 0) \"Output language type not fully implemented : \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean isOutputLanguageJava()>()",
            "if $z0 == 0 goto $r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$z1 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(\"c++\")",
            "if $z1 == 0 goto $r1 = new java.lang.RuntimeException",
            "$r1 = new java.lang.RuntimeException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Output language type not fully implemented : \")",
            "$r3 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.OutputFile__toHexString__-1007528507\\1310.smt2",
        "z3": {
            "memory": 31707136,
            "run_time": 0.04014468193054199,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2102 () String\r\n    String-init)\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 0) 0 1))\r\n  (define-fun var1685 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var735 () Int\r\n    0)\r\n  (define-fun var2843 () Int\r\n    (getLength-Arr-Int-1 var1685))\r\n  (define-fun var2691 () String\r\n    var2102!1)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2482 () Int\r\n    0)\r\n  (define-fun var2102!1 () String\r\n    \"\")\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\r\n    0)\r\n  (define-fun <init>/1906106355 ((x!0 String) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10297344,
            "run_time": 0.015445470809936523,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1906106355 ((BOUND_VARIABLE_488 String) (BOUND_VARIABLE_489 Int)) void (as @void_0 void))\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 0)\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var1685 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2102!1 () String \"\")\r\n(define-fun var2482 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36560896,
            "run_time": 0.04613327980041504,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 0 1))\n  (define-fun var735 () Int\n    0)\n  (define-fun var2843 () Int\n    (getLength-Arr-Int-1 var1685))\n  (define-fun var2691 () String\n    var2102!1)\n  (define-fun var2102 () String\n    String-init)\n  (define-fun var1685 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2482 () Int\n    0)\n  (define-fun var2102!1 () String\n    \"\")\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\n    0)\n  (define-fun <init>/1906106355 ((x!0 String) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150925312,
            "run_time": 0.6644465923309326,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1685 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 0) 0 1))\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int (ite (= x!0 ((as const (Array Int Int)) 0)) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>(int)>",
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>(int)>": 1,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: byte[]",
            "$r6 = new java.lang.StringBuffer",
            "specialinvoke $r6.<java.lang.StringBuffer: void <init>(int)>(32)",
            "i7 = 0",
            "$i0 = lengthof r1",
            "if i7 >= $i0 goto $r2 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r2 = virtualinvoke $r6.<java.lang.StringBuffer: java.lang.String toString()>()",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__PrintNoBreak__1034990844\\2042.smt2",
        "z3": {
            "memory": 32649216,
            "run_time": 60.008851528167725,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14364672,
            "run_time": 0.03086709976196289,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1321 is 2\r\n; rep: (as @var1321_0 var1321)\r\n; rep: (as @var1321_1 var1321)\r\n; cardinality of var2801 is 2\r\n; rep: (as @var2801_0 var2801)\r\n; rep: (as @var2801_1 var2801)\r\n; cardinality of var3007 is 2\r\n; rep: (as @var3007_0 var3007)\r\n; rep: (as @var3007_1 var3007)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun inNextOf/1847772117 ((_arg_1 var1321)) Int 1)\r\n(define-fun stateName/1847772117 ((_arg_1 var1321)) Int (- 1))\r\n(define-fun nonAsciiMethod/1847772117 ((_arg_1 var1321)) Int 0)\r\n(define-fun arr-var3007-init () (Array Int var3007) ((as const (Array Int var3007)) (as @var3007_0 var3007)))\r\n(define-fun String-init () String \"\")\r\n(define-fun cast-from-String-to-var3007 ((_arg_1 String)) var3007 (as @var3007_1 var3007))\r\n(define-fun genCodeLine/787715242 ((BOUND_VARIABLE_1442 var2801) (BOUND_VARIABLE_1443 (Array Int var3007))) void (as @void_0 void))\r\n(define-fun DumpNonAsciiMoveForCompositeState/1800165787 ((BOUND_VARIABLE_1446 var1321) (BOUND_VARIABLE_1447 var2801)) void (as @void_0 void))\r\n(define-fun null-var1321 () var1321 (as @var1321_0 var1321))\r\n(define-fun null-var2801 () var2801 (as @var2801_0 var2801))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun null-__Array__Int__Bool__ () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n(define-fun null-__Array__Int__var3007__ () (Array Int var3007) (store ((as const (Array Int var3007)) (as @var3007_1 var3007)) 0 (as @var3007_0 var3007)))\r\n(define-fun var2727 () var1321 (as @var1321_1 var1321))\r\n(define-fun var1344 () var2801 (as @var2801_1 var2801))\r\n(define-fun var1459 () Int (- 1))\r\n(define-fun var3239 () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var3239!1 () (Array Int Bool) (store ((as const (Array Int Bool)) true) 0 false))\r\n(define-fun var2123!1 () String \"\")\r\n(define-fun var2123!2 () String \"               case \")\r\n(define-fun var3852!1 () String \"               case \")\r\n(define-fun var2299!1 () String \"               case :\")\r\n(define-fun var3085!1 () (Array Int var3007) (store ((as const (Array Int var3007)) (as @var3007_0 var3007)) 0 (as @var3007_1 var3007)))\r\n(define-fun var1344!1 () var2801 (as @var2801_0 var2801))\r\n(define-fun var3085!2 () (Array Int var3007) ((as const (Array Int var3007)) (as @var3007_0 var3007)))\r\n(define-fun var2727!1 () var1321 (as @var1321_0 var1321))\r\n(define-fun var1344!2 () var2801 (as @var2801_0 var2801))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37552128,
            "run_time": 0.09050178527832031,
            "is_sat": "",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 236634112,
            "run_time": 1.0241649150848389,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3085!1 () (Array Int var3007) (store ((as const (Array Int var3007)) var3007!108) 0 var3007!106))\r\n  (define-fun var2299!1 () String \"               case :\")\r\n  (define-fun var3852!1 () String \"               case \")\r\n  (define-fun var2123!2 () String \"               case \")\r\n  (define-fun var2123!1 () String \"\")\r\n  (define-fun var3239!1 () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n  (define-fun var3239 () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n  (define-fun var1459 () Int (- 1))\r\n  (define-fun var1344 () var2801 var2801!90)\r\n  (define-fun var2727 () var1321 var1321!88)\r\n  (define-fun null-__Array__Int__var3007__ () (Array Int var3007) ((as const (Array Int var3007)) var3007!0))\r\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool) (store ((as const (Array Int Bool)) true) 0 false))\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var2801 () var2801 var2801!86)\r\n  (define-fun null-var1321 () var1321 var1321!84)\r\n  (define-fun var3007!106 () var3007 (cast-from-String-to-var3007 \"               case :\"))\r\n  (define-fun abbrev_123 ((x!0 Int)) String (ite (= x!0 0) \"               case \" \"\"))\r\n  (define-fun nonAsciiMethod/1847772117 ((x!0 var1321)) Int (ite (= x!0 var1321!88) 52 0))\r\n  (define-fun stateName/1847772117 ((x!0 var1321)) Int (ite (= x!0 var1321!88) (- 6) 0))\r\n  (define-fun inNextOf/1847772117 ((x!0 var1321)) Int (ite (= x!0 var1321!88) 1 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 22,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.NfaState",
            "r7 := @parameter0: org.javacc.parser.CodeGenerator",
            "i2 := @parameter1: int",
            "r1 := @parameter2: boolean[]",
            "$i0 = r0.<org.javacc.parser.NfaState: int inNextOf>",
            "if $i0 == 1 goto $i1 = r0.<org.javacc.parser.NfaState: int stateName>",
            "$i1 = r0.<org.javacc.parser.NfaState: int stateName>",
            "r1[$i1] = 1",
            "if i2 < 0 goto $i3 = r0.<org.javacc.parser.NfaState: int nonAsciiMethod>",
            "$i3 = r0.<org.javacc.parser.NfaState: int nonAsciiMethod>",
            "$i10 = (int) -1",
            "if $i3 == $i10 goto $r25 = new java.lang.StringBuilder",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$r10 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"               case \")",
            "$i5 = r0.<org.javacc.parser.NfaState: int stateName>",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r8[0] = $r13",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r8)",
            "specialinvoke r0.<org.javacc.parser.NfaState: void DumpNonAsciiMoveForCompositeState(org.javacc.parser.CodeGenerator)>(r7)",
            "return \"\""
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__PrintNoBreak__1034990844\\2049.smt2",
        "z3": {
            "memory": 9543680,
            "run_time": 0.05981135368347168,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3164:\r\n  ;;   var3164!val!1 var3164!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3164!val!1 () var3164)\r\n  (declare-fun var3164!val!0 () var3164)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3164)) (or (= x var3164!val!1) (= x var3164!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1606:\r\n  ;;   var1606!val!1 var1606!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1606!val!1 () var1606)\r\n  (declare-fun var1606!val!0 () var1606)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1606)) (or (= x var1606!val!1) (= x var1606!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var3164 () var3164\r\n    var3164!val!1)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var262 () var1606\r\n    var1606!val!0)\r\n  (define-fun var1897 () Int\r\n    (- 1))\r\n  (define-fun var3139 () String\r\n    (str.++ var3313!1\r\n        \"               case \"\r\n        (str.from_int (stateName/1847772117 var262))))\r\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool)\r\n    (store ((as const (Array Int Bool)) true) 0 false))\r\n  (define-fun var3223!1 () String\r\n    \"               case \")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3178 () (Array Int Bool)\r\n    ((as const (Array Int Bool)) true))\r\n  (define-fun var3178!1 () (Array Int Bool)\r\n    ((as const (Array Int Bool)) true))\r\n  (define-fun var3313 () String\r\n    String-init)\r\n  (define-fun var2529 () Int\r\n    (stateName/1847772117 var262))\r\n  (define-fun var1827 () Int\r\n    (nonAsciiMethod/1847772117 var262))\r\n  (define-fun var3160 () Int\r\n    (stateName/1847772117 var262))\r\n  (define-fun var1959 () Int\r\n    (- 1))\r\n  (define-fun var3486 () var3164\r\n    var3164!val!0)\r\n  (define-fun var440 () Int\r\n    (inNextOf/1847772117 var262))\r\n  (define-fun var625 () String\r\n    (str.++ var3313!1\r\n        \"               case \"\r\n        (str.from_int (stateName/1847772117 var262))\r\n        \":\\n\"))\r\n  (define-fun null-var1606 () var1606\r\n    var1606!val!1)\r\n  (define-fun var1376 () String\r\n    (str.++ var3313!1\r\n        \"               case \"\r\n        (str.from_int (stateName/1847772117 var262))\r\n        \":\\n\"))\r\n  (define-fun var3223 () String\r\n    (str.++ var3313!1 \"               case \"))\r\n  (define-fun var3313!1 () String\r\n    \"\")\r\n  (define-fun var3313!2 () String\r\n    \"               case \")\r\n  (define-fun var3139!1 () String\r\n    \"               case 0:\\n\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun inNextOf/1847772117 ((x!0 var1606)) Int\r\n    1)\r\n  (define-fun nonAsciiMethod/1847772117 ((x!0 var1606)) Int\r\n    (- 1))\r\n  (define-fun stateName/1847772117 ((x!0 var1606)) Int\r\n    0)\r\n)\r\n(error \"line 66 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10297344,
            "run_time": 0.015569925308227539,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1606 is 2\r\n; rep: (as @var1606_0 var1606)\r\n; rep: (as @var1606_1 var1606)\r\n; cardinality of var3164 is 2\r\n; rep: (as @var3164_0 var3164)\r\n; rep: (as @var3164_1 var3164)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun inNextOf/1847772117 ((_arg_1 var1606)) Int 1)\r\n(define-fun stateName/1847772117 ((_arg_1 var1606)) Int 1)\r\n(define-fun nonAsciiMethod/1847772117 ((_arg_1 var1606)) Int (- 1))\r\n(define-fun String-init () String \"\")\r\n(define-fun null-var1606 () var1606 (as @var1606_0 var1606))\r\n(define-fun null-var3164 () var3164 (as @var3164_0 var3164))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun null-__Array__Int__Bool__ () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n(define-fun var262 () var1606 (as @var1606_1 var1606))\r\n(define-fun var3486 () var3164 (as @var3164_1 var3164))\r\n(define-fun var1959 () Int (- 1))\r\n(define-fun var3178 () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var3178!1 () (Array Int Bool) (store ((as const (Array Int Bool)) true) 0 false))\r\n(define-fun var3313!1 () String \"\")\r\n(define-fun var3313!2 () String \"               case \")\r\n(define-fun var3223!1 () String \"               case \")\r\n(define-fun var3139!1 () String \"               case 1:\\u{5c}n\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36831232,
            "run_time": 0.04743361473083496,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3164:\n  ;;   var3164!val!1 var3164!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3164!val!1 () var3164)\n  (declare-fun var3164!val!0 () var3164)\n  ;; cardinality constraint:\n  (forall ((x var3164)) (or (= x var3164!val!1) (= x var3164!val!0)))\n  ;; -----------\n  ;; universe for var1606:\n  ;;   var1606!val!1 var1606!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1606!val!1 () var1606)\n  (declare-fun var1606!val!0 () var1606)\n  ;; cardinality constraint:\n  (forall ((x var1606)) (or (= x var1606!val!1) (= x var1606!val!0)))\n  ;; -----------\n  (define-fun null-var3164 () var3164\n    var3164!val!1)\n  (define-fun null-Int () Int\n    0)\n  (define-fun var262 () var1606\n    var1606!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2529 () Int\n    (stateName/1847772117 var262))\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool)\n    (store ((as const (Array Int Bool)) true) 0 false))\n  (define-fun var1827 () Int\n    (nonAsciiMethod/1847772117 var262))\n  (define-fun var3160 () Int\n    (stateName/1847772117 var262))\n  (define-fun var3178 () (Array Int Bool)\n    ((as const (Array Int Bool)) true))\n  (define-fun var3313 () String\n    String-init)\n  (define-fun var3178!1 () (Array Int Bool)\n    ((as const (Array Int Bool)) true))\n  (define-fun var3223!1 () String\n    \"               case \")\n  (define-fun var440 () Int\n    (inNextOf/1847772117 var262))\n  (define-fun var3139!1 () String\n    \"               case 0:\\n\")\n  (define-fun var1897 () Int\n    (- 1))\n  (define-fun var1959 () Int\n    (- 1))\n  (define-fun var3486 () var3164\n    var3164!val!0)\n  (define-fun var3223 () String\n    (str.++ var3313!1 \"               case \"))\n  (define-fun var1376 () String\n    (str.++ var3313!1\n        \"               case \"\n        (str.from_int (stateName/1847772117 var262))\n        \":\\n\"))\n  (define-fun var625 () String\n    (str.++ var3313!1\n        \"               case \"\n        (str.from_int (stateName/1847772117 var262))\n        \":\\n\"))\n  (define-fun null-var1606 () var1606\n    var1606!val!1)\n  (define-fun var3139 () String\n    (str.++ var3313!1\n        \"               case \"\n        (str.from_int (stateName/1847772117 var262))))\n  (define-fun var3313!1 () String\n    \"\")\n  (define-fun var3313!2 () String\n    \"               case \")\n  (define-fun String-init () String\n    \"\")\n  (define-fun inNextOf/1847772117 ((x!0 var1606)) Int\n    1)\n  (define-fun nonAsciiMethod/1847772117 ((x!0 var1606)) Int\n    (- 1))\n  (define-fun stateName/1847772117 ((x!0 var1606)) Int\n    0)\n)\n(error \"line 66 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 208904192,
            "run_time": 1.0078990459442139,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3139!1 () String \"               case :\\u{5c}n\")\r\n  (define-fun var3223!1 () String \"               case \")\r\n  (define-fun var3313!2 () String \"               case \")\r\n  (define-fun var3313!1 () String \"\")\r\n  (define-fun var3178!1 () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n  (define-fun var3178 () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n  (define-fun var1959 () Int (- 1))\r\n  (define-fun var3486 () var3164 var3164!48)\r\n  (define-fun var262 () var1606 var1606!46)\r\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool) (store ((as const (Array Int Bool)) true) 0 false))\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3164 () var3164 var3164!44)\r\n  (define-fun null-var1606 () var1606 var1606!42)\r\n  (define-fun abbrev_119 ((x!0 Int)) String (ite (= x!0 0) \"               case \" \"\"))\r\n  (define-fun nonAsciiMethod/1847772117 ((x!0 var1606)) Int (ite (= x!0 var1606!46) (- 1) 0))\r\n  (define-fun stateName/1847772117 ((x!0 var1606)) Int (ite (= x!0 var1606!46) (- 6) 0))\r\n  (define-fun inNextOf/1847772117 ((x!0 var1606)) Int (ite (= x!0 var1606!46) 1 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.NfaState",
            "r7 := @parameter0: org.javacc.parser.CodeGenerator",
            "i2 := @parameter1: int",
            "r1 := @parameter2: boolean[]",
            "$i0 = r0.<org.javacc.parser.NfaState: int inNextOf>",
            "if $i0 == 1 goto $i1 = r0.<org.javacc.parser.NfaState: int stateName>",
            "$i1 = r0.<org.javacc.parser.NfaState: int stateName>",
            "r1[$i1] = 1",
            "if i2 < 0 goto $i3 = r0.<org.javacc.parser.NfaState: int nonAsciiMethod>",
            "$i3 = r0.<org.javacc.parser.NfaState: int nonAsciiMethod>",
            "$i10 = (int) -1",
            "if $i3 == $i10 goto $r25 = new java.lang.StringBuilder",
            "$r25 = new java.lang.StringBuilder",
            "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"               case \")",
            "$i4 = r0.<org.javacc.parser.NfaState: int stateName>",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\\n\")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NonTerminal__dump__-1902523365\\1008.smt2",
        "z3": {
            "memory": 31748096,
            "run_time": 0.07430052757263184,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1125:\r\n  ;;   var1125!val!0 var1125!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1125!val!0 () var1125)\r\n  (declare-fun var1125!val!1 () var1125)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1125)) (or (= x var1125!val!0) (= x var1125!val!1)))\r\n  ;; -----------\r\n  ;; universe for var463:\r\n  ;;   var463!val!1 var463!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var463!val!1 () var463)\r\n  (declare-fun var463!val!0 () var463)\r\n  ;; cardinality constraint:\r\n  (forall ((x var463)) (or (= x var463!val!1) (= x var463!val!0)))\r\n  ;; -----------\r\n  ;; universe for var542:\r\n  ;;   var542!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var542!val!0 () var542)\r\n  ;; cardinality constraint:\r\n  (forall ((x var542)) (= x var542!val!0))\r\n  ;; -----------\r\n  (define-fun var2681 () String\r\n    (append/1183289509\r\n  (dump/1891027141 (cast-from-var463-to-var542 var310) var2057 var3017)\r\n  32))\r\n  (define-fun null-var1125 () var1125\r\n    var1125!val!1)\r\n  (define-fun null-var463 () var463\r\n    var463!val!1)\r\n  (define-fun var1877 () String\r\n    (dump/1891027141 (cast-from-var463-to-var542 var310) var2057 var3017))\r\n  (define-fun var185 () String\r\n    (str.++ (append/1183289509\r\n          (dump/1891027141 (cast-from-var463-to-var542 var310) var2057 var3017)\r\n          32)\r\n        (name/683194844 var310)))\r\n  (define-fun var310 () var463\r\n    var463!val!0)\r\n  (define-fun var546 () String\r\n    (name/683194844 var310))\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var3017 () var1125\r\n    var1125!val!0)\r\n  (define-fun var2681!1 () String\r\n    \"\")\r\n  (define-fun var2057 () Int\r\n    2)\r\n  (define-fun cast-from-var463-to-var542 ((x!0 var463)) var542\r\n    var542!val!0)\r\n  (define-fun dump/1891027141 ((x!0 var542) (x!1 Int) (x!2 var1125)) String\r\n    \"!0!\")\r\n  (define-fun append/1183289509 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun name/683194844 ((x!0 var463)) String\r\n    \"\")\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10297344,
            "run_time": 0.015306472778320312,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var463 is 2\r\n; rep: (as @var463_0 var463)\r\n; rep: (as @var463_1 var463)\r\n; cardinality of var1125 is 2\r\n; rep: (as @var1125_0 var1125)\r\n; rep: (as @var1125_1 var1125)\r\n; cardinality of var542 is 1\r\n; rep: (as @var542_0 var542)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun dump/1891027141 ((_arg_1 var542) (_arg_2 Int) (_arg_3 var1125)) String \"A\")\r\n(define-fun cast-from-var463-to-var542 ((_arg_1 var463)) var542 (as @var542_0 var542))\r\n(define-fun append/1183289509 ((_arg_1 String) (_arg_2 Int)) String \"\")\r\n(define-fun name/683194844 ((BOUND_VARIABLE_649 var463)) String \"\")\r\n(define-fun null-var463 () var463 (as @var463_0 var463))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var1125 () var1125 (as @var1125_0 var1125))\r\n(define-fun var310 () var463 (as @var463_1 var463))\r\n(define-fun var2057 () Int 0)\r\n(define-fun var3017 () var1125 (as @var1125_1 var1125))\r\n(define-fun var2681!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36737024,
            "run_time": 0.04752707481384277,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 35 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165072896,
            "run_time": 0.6360652446746826,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.NonTerminal__dump__-1902523365\\1008.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2681!1 =\r\n     concat(all_16_0, rhs)\r\n   ... sat\r\n\r\n439ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>": 1,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.NonTerminal",
            "i0 := @parameter0: int",
            "r1 := @parameter1: java.util.Set",
            "$r2 = specialinvoke r0.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>(i0, r1)",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32)",
            "$r3 = r0.<org.javacc.parser.NonTerminal: java.lang.String name>",
            "r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3)",
            "return r5"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NormalProduction__dumpPrefix__1891816110\\1034.smt2",
        "z3": {
            "memory": 32169984,
            "run_time": 0.04457974433898926,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3665:\r\n  ;;   var3665!val!1 var3665!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3665!val!1 () var3665)\r\n  (declare-fun var3665!val!0 () var3665)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3665)) (or (= x var3665!val!1) (= x var3665!val!0)))\r\n  ;; -----------\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun var1105 () Int\r\n    0)\r\n  (define-fun var206 () Int\r\n    0)\r\n  (define-fun null-var3665 () var3665\r\n    var3665!val!1)\r\n  (define-fun var1398 () String\r\n    String-init)\r\n  (define-fun var2801 () var3665\r\n    var3665!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1516 () Int\r\n    0)\r\n  (define-fun var1398!1 () String\r\n    \"\")\r\n  (define-fun <init>/1906106355 ((x!0 String) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10297344,
            "run_time": 0.015929222106933594,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3665 is 2\r\n; rep: (as @var3665_0 var3665)\r\n; rep: (as @var3665_1 var3665)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1906106355 ((BOUND_VARIABLE_448 String) (BOUND_VARIABLE_449 Int)) void (as @void_0 void))\r\n(define-fun null-var3665 () var3665 (as @var3665_0 var3665))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2801 () var3665 (as @var3665_1 var3665))\r\n(define-fun var1105 () Int 0)\r\n(define-fun var1398!1 () String \"\")\r\n(define-fun var1516 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36442112,
            "run_time": 0.04672884941101074,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3665:\n  ;;   var3665!val!1 var3665!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3665!val!1 () var3665)\n  (declare-fun var3665!val!0 () var3665)\n  ;; cardinality constraint:\n  (forall ((x var3665)) (or (= x var3665!val!1) (= x var3665!val!0)))\n  ;; -----------\n  (define-fun var206 () Int\n    0)\n  (define-fun null-Int () Int\n    1)\n  (define-fun var1105 () Int\n    0)\n  (define-fun var1398 () String\n    String-init)\n  (define-fun null-var3665 () var3665\n    var3665!val!1)\n  (define-fun var2801 () var3665\n    var3665!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1516 () Int\n    0)\n  (define-fun var1398!1 () String\n    \"\")\n  (define-fun <init>/1906106355 ((x!0 String) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132444160,
            "run_time": 0.6064062118530273,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1105 () Int 0)\r\n  (define-fun var2801 () var3665 var3665!4)\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-var3665 () var3665 var3665!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>(int)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>(int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.parser.NormalProduction",
            "i0 := @parameter0: int",
            "$r0 = new java.lang.StringBuffer",
            "specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>(128)",
            "i1 = 0",
            "if i1 >= i0 goto return $r0",
            "return $r0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JavaCodeGenerator__visit__-766352297\\242.smt2",
        "z3": {
            "memory": 32370688,
            "run_time": 60.00548529624939,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9916416,
            "run_time": 0.015633344650268555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3239 is 2\r\n; rep: (as @var3239_0 var3239)\r\n; rep: (as @var3239_1 var3239)\r\n; cardinality of var1453 is 2\r\n; rep: (as @var1453_0 var1453)\r\n; rep: (as @var1453_1 var1453)\r\n; cardinality of var2490 is 2\r\n; rep: (as @var2490_0 var2490)\r\n; rep: (as @var2490_1 var2490)\r\n; cardinality of var2189 is 1\r\n; rep: (as @var2189_0 var2189)\r\n; cardinality of var3427 is 1\r\n; rep: (as @var3427_0 var3427)\r\n; cardinality of var3215 is 1\r\n; rep: (as @var3215_0 var3215)\r\n; cardinality of var1714 is 1\r\n; rep: (as @var1714_0 var1714)\r\n; cardinality of var670 is 1\r\n; rep: (as @var670_0 var670)\r\n; cardinality of var929 is 1\r\n; rep: (as @var929_0 var929)\r\n; cardinality of var2342 is 1\r\n; rep: (as @var2342_0 var2342)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var2490-to-var2189 ((BOUND_VARIABLE_628 var2490)) var2189 (as @var2189_0 var2189))\r\n(define-fun String-init () String \"\")\r\n(define-fun var1714-init () var1714 (as @var1714_0 var1714))\r\n(define-fun getOutputFileName/1535357316 ((BOUND_VARIABLE_631 var2189)) String \"\")\r\n(define-fun <init>/-1681595970 ((BOUND_VARIABLE_634 var1714) (BOUND_VARIABLE_635 String)) void (as @void_0 void))\r\n(define-fun getName/1128186653 ((BOUND_VARIABLE_638 var1714)) String \"\")\r\n(define-fun var670_getIdString/-267384014 ((BOUND_VARIABLE_641 var3427) (BOUND_VARIABLE_642 String)) String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_645 var2189) (BOUND_VARIABLE_646 String)) void (as @void_0 void))\r\n(define-fun print/-1652180213 ((BOUND_VARIABLE_649 var2189) (BOUND_VARIABLE_650 String)) void (as @void_0 void))\r\n(define-fun childrenAccept/-572725015 ((BOUND_VARIABLE_653 var929) (BOUND_VARIABLE_654 var2342) (BOUND_VARIABLE_655 var2490)) var2490 (as @var2490_0 var2490))\r\n(define-fun cast-from-var1453-to-var929 ((BOUND_VARIABLE_658 var1453)) var929 (as @var929_0 var929))\r\n(define-fun cast-from-var3239-to-var2342 ((BOUND_VARIABLE_661 var3239)) var2342 (as @var2342_0 var2342))\r\n(define-fun cast-from-var2189-to-var2490 ((BOUND_VARIABLE_664 var2189)) var2490 (as @var2490_0 var2490))\r\n(define-fun null-var3239 () var3239 (as @var3239_0 var3239))\r\n(define-fun null-var1453 () var1453 (as @var1453_0 var1453))\r\n(define-fun null-var2490 () var2490 (as @var2490_0 var2490))\r\n(define-fun var3215-toolList () var3427 (as @var3427_0 var3427))\r\n(define-fun var1564 () var3239 (as @var3239_1 var3239))\r\n(define-fun var2056 () var1453 (as @var1453_1 var1453))\r\n(define-fun var1898 () var2490 (as @var2490_1 var2490))\r\n(define-fun var3052!1 () String \"\")\r\n(define-fun var3052!2 () String \"/*@bgen(jjtree) \")\r\n(define-fun var1541!1 () var1714 (as @var1714_0 var1714))\r\n(define-fun var2716!1 () String \"\")\r\n(define-fun var2672!1 () String \"/*@bgen(jjtree) \")\r\n(define-fun var2316!1 () String \"/*@bgen(jjtree)  */\")\r\n(define-fun var536!1 () var2189 (as @var2189_0 var2189))\r\n(define-fun var955!1 () String \"\")\r\n(define-fun var536!2 () var2189 (as @var2189_0 var2189))\r\n(define-fun var3765 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36446208,
            "run_time": 60.006476163864136,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181211136,
            "run_time": 0.8789527416229248,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1453/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JavaCodeGenerator__visit__-766352297\\242.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_39_4 =\r\n     concat(all_39_5, \" */\")\r\n   var2316!1 =\r\n     concat(all_36_4, \" */\")\r\n   var2672!1 =\r\n     concat(\"/*@bgen(jjtree) \", all_33_3)\r\n   all_39_5 =\r\n     concat(\"/*@bgen(jjtree) \", all_33_3)\r\n   all_36_4 =\r\n     concat(\"/*@bgen(jjtree) \", all_33_3)\r\n\r\n645ms\r\n"
        },
        "undefined_function_count": 13,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r13 := @this: org.javacc.jjtree.JavaCodeGenerator",
            "r12 := @parameter0: org.javacc.jjtree.ASTGrammar",
            "r0 := @parameter1: java.lang.Object",
            "r1 = (org.javacc.jjtree.IO) r0",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/*@bgen(jjtree) \")",
            "$r4 = <org.javacc.jjtree.JJTreeGlobals: java.util.List toolList>",
            "$r3 = new java.io.File",
            "$r5 = virtualinvoke r1.<org.javacc.jjtree.IO: java.lang.String getOutputFileName()>()",
            "specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r5)",
            "$r6 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>()",
            "$r7 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String getIdString(java.util.List,java.lang.String)>($r4, $r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" */\")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r1.<org.javacc.jjtree.IO: void println(java.lang.String)>($r11)",
            "virtualinvoke r1.<org.javacc.jjtree.IO: void print(java.lang.String)>(\"/*@egen*/\")",
            "$r14 = virtualinvoke r12.<org.javacc.jjtree.ASTGrammar: java.lang.Object childrenAccept(org.javacc.jjtree.JJTreeParserVisitor,java.lang.Object)>(r13, r1)",
            "return $r14"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPJJTreeState__generateTreeState__1742265195\\188.smt2",
        "z3": {
            "memory": 32067584,
            "run_time": 60.00753355026245,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9936896,
            "run_time": 0.045867204666137695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var307 is 1\r\n; rep: (as @var307_0 var307)\r\n; cardinality of var620 is 1\r\n; rep: (as @var620_0 var620)\r\n; cardinality of var921 is 1\r\n; rep: (as @var921_0 var921)\r\n; cardinality of var3448 is 1\r\n; rep: (as @var3448_0 var3448)\r\n; cardinality of var1859 is 1\r\n; rep: (as @var1859_0 var1859)\r\n; cardinality of var2358 is 1\r\n; rep: (as @var2358_0 var2358)\r\n; cardinality of var569 is 1\r\n; rep: (as @var569_0 var569)\r\n; cardinality of var484 is 1\r\n; rep: (as @var484_0 var484)\r\n; cardinality of var1486 is 1\r\n; rep: (as @var1486_0 var1486)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var620_getOptions/298379990 () var307 (as @var307_0 var307))\r\n(define-fun var307_put/1464166817 ((BOUND_VARIABLE_764 var307) (BOUND_VARIABLE_765 var3448) (BOUND_VARIABLE_766 var3448)) var3448 (as @var3448_0 var3448))\r\n(define-fun cast-from-String-to-var3448 ((BOUND_VARIABLE_769 String)) var3448 (as @var3448_0 var3448))\r\n(define-fun var1859-init () var1859 (as @var1859_0 var1859))\r\n(define-fun var2358_getJJTreeOutputDirectory/-709711143 () var1859 (as @var1859_0 var1859))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1833447926 ((BOUND_VARIABLE_772 var1859) (BOUND_VARIABLE_773 var1859) (BOUND_VARIABLE_774 String)) void (as @void_0 void))\r\n(define-fun getAbsolutePath/-802773300 ((BOUND_VARIABLE_777 var1859)) String \"\")\r\n(define-fun var569-init () var569 (as @var569_0 var569))\r\n(define-fun <init>/-1681595970 ((BOUND_VARIABLE_780 var1859) (BOUND_VARIABLE_781 String)) void (as @void_0 void))\r\n(define-fun arr-String-init () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun <init>/-19591195 ((BOUND_VARIABLE_786 var569) (BOUND_VARIABLE_787 var1859) (BOUND_VARIABLE_788 String) (BOUND_VARIABLE_789 (Array Int String))) void (as @void_0 void))\r\n(define-fun var1486_generateFile/-77302273 ((BOUND_VARIABLE_792 var569) (BOUND_VARIABLE_793 String) (BOUND_VARIABLE_794 var307)) void (as @void_0 void))\r\n(define-fun var921-parserName () String \"\")\r\n(define-fun var484-JJTStateVersion () String \"\")\r\n(define-fun var1890!1 () var307 (as @var307_0 var307))\r\n(define-fun var2623 () String \"\")\r\n(define-fun var376!1 () String \"\")\r\n(define-fun var2376!1 () String \"\")\r\n(define-fun var2376!2 () String \"JJT\")\r\n(define-fun var680!1 () String \"JJT\")\r\n(define-fun var147!1 () String \"JJTState\")\r\n(define-fun var1724!1 () var1859 (as @var1859_0 var1859))\r\n(define-fun var459!1 () var1859 (as @var1859_0 var1859))\r\n(define-fun var1404!1 () String \"\")\r\n(define-fun var2542!1 () String \"\")\r\n(define-fun var2542!2 () String \"\")\r\n(define-fun var2159!1 () String \".h\")\r\n(define-fun var2268!1 () var1859 (as @var1859_0 var1859))\r\n(define-fun var1075!1 () String \"\")\r\n(define-fun var175!1 () var569 (as @var569_0 var569))\r\n(define-fun var2268!2 () var1859 (as @var1859_0 var1859))\r\n(define-fun var2222!1 () String \"\")\r\n(define-fun var1278!1 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var175!2 () var569 (as @var569_0 var569))\r\n(define-fun var3048 () String \"\")\r\n(define-fun var1890!2 () var307 (as @var307_0 var307))\r\n(define-fun var2171!1 () String \"\")\r\n(define-fun var2171!2 () String \"\")\r\n(define-fun var2270!1 () String \".cc\")\r\n(define-fun var370!1 () var1859 (as @var1859_0 var1859))\r\n(define-fun var2796!1 () String \"\")\r\n(define-fun var2010!1 () var569 (as @var569_0 var569))\r\n(define-fun var370!2 () var1859 (as @var1859_0 var1859))\r\n(define-fun var3510!1 () String \"\")\r\n(define-fun var2333!1 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var2010!2 () var569 (as @var569_0 var569))\r\n(define-fun var998 () String \"\")\r\n(define-fun var1890!3 () var307 (as @var307_0 var307))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36032512,
            "run_time": 60.00657558441162,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 230440960,
            "run_time": 1.0532307624816895,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2270!1 () String \".cc\")\r\n  (define-fun var2171!2 () String \"\")\r\n  (define-fun var2171!1 () String \"\")\r\n  (define-fun var2159!1 () String \".h\")\r\n  (define-fun var2542!2 () String \"\")\r\n  (define-fun var2542!1 () String \"\")\r\n  (define-fun var1724!1 () var1859 var1859!2)\r\n  (define-fun var147!1 () String \"JJTState\")\r\n  (define-fun var680!1 () String \"JJT\")\r\n  (define-fun var2376!2 () String \"JJT\")\r\n  (define-fun var2376!1 () String \"\")\r\n  (define-fun var921-parserName () String \"\")\r\n  (define-fun getAbsolutePath/-802773300 ((x!0 var1859)) String (ite (= x!0 var1859!2) \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 13,
        "assertion_count": 29,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.util.Map getOptions()>()",
            "$r1 = <org.javacc.jjtree.JJTreeGlobals: java.lang.String parserName>",
            "interfaceinvoke r0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"PARSER_NAME\", $r1)",
            "$r2 = new java.io.File",
            "$r9 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.io.File getJJTreeOutputDirectory()>()",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"JJT\")",
            "$r4 = <org.javacc.jjtree.JJTreeGlobals: java.lang.String parserName>",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"State\")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r2.<java.io.File: void <init>(java.io.File,java.lang.String)>($r9, $r8)",
            "r10 = virtualinvoke $r2.<java.io.File: java.lang.String getAbsolutePath()>()",
            "$r11 = new org.javacc.parser.OutputFile",
            "$r12 = new java.io.File",
            "$r13 = new java.lang.StringBuilder",
            "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".h\")",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r12.<java.io.File: void <init>(java.lang.String)>($r16)",
            "$r18 = <org.javacc.jjtree.CPPJJTreeState: java.lang.String JJTStateVersion>",
            "$r17 = newarray (java.lang.String)[0]",
            "specialinvoke $r11.<org.javacc.parser.OutputFile: void <init>(java.io.File,java.lang.String,java.lang.String[])>($r12, $r18, $r17)",
            "staticinvoke <org.javacc.jjtree.CPPNodeFiles: void generateFile(org.javacc.parser.OutputFile,java.lang.String,java.util.Map)>($r11, \"/templates/cpp/JJTTreeState.h.template\", r0)",
            "$r19 = new org.javacc.parser.OutputFile",
            "$r20 = new java.io.File",
            "$r21 = new java.lang.StringBuilder",
            "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".cc\")",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r20.<java.io.File: void <init>(java.lang.String)>($r24)",
            "$r26 = <org.javacc.jjtree.CPPJJTreeState: java.lang.String JJTStateVersion>",
            "$r25 = newarray (java.lang.String)[0]",
            "specialinvoke $r19.<org.javacc.parser.OutputFile: void <init>(java.io.File,java.lang.String,java.lang.String[])>($r20, $r26, $r25)",
            "staticinvoke <org.javacc.jjtree.CPPNodeFiles: void generateFile(org.javacc.parser.OutputFile,java.lang.String,java.util.Map)>($r19, \"/templates/cpp/JJTTreeState.cc.template\", r0)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JavaCodeGenerator__insertOpenNodeCode__-1910072544\\640.smt2",
        "z3": {
            "memory": 32256000,
            "run_time": 60.007062673568726,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9949184,
            "run_time": 0.016089439392089844,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var868 is 2\r\n; rep: (as @var868_0 var868)\r\n; rep: (as @var868_1 var868)\r\n; cardinality of var33 is 2\r\n; rep: (as @var33_0 var33)\r\n; rep: (as @var33_1 var33)\r\n; cardinality of var856 is 2\r\n; rep: (as @var856_0 var856)\r\n; rep: (as @var856_1 var856)\r\n; cardinality of var537 is 1\r\n; rep: (as @var537_0 var537)\r\n; cardinality of var3260 is 1\r\n; rep: (as @var3260_0 var3260)\r\n; cardinality of var3394 is 1\r\n; rep: (as @var3394_0 var3394)\r\n; cardinality of var954 is 1\r\n; rep: (as @var954_0 var954)\r\n; cardinality of var2723 is 1\r\n; rep: (as @var2723_0 var2723)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun node_descriptor/-576648796 ((BOUND_VARIABLE_1346 var33)) var3260 (as @var3260_0 var3260))\r\n(define-fun getNodeType/-707025417 ((BOUND_VARIABLE_1349 var3260)) String \"\")\r\n(define-fun var3394_getNodeClass/-1384960322 () String \"\")\r\n(define-fun var954_ensure/-405642493 ((BOUND_VARIABLE_1352 var856) (BOUND_VARIABLE_1353 String)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun nodeVar/-576648796 ((BOUND_VARIABLE_1356 var33)) String \"\")\r\n(define-fun print/-1652180213 ((BOUND_VARIABLE_1359 var856) (BOUND_VARIABLE_1360 String)) void (as @void_0 void))\r\n(define-fun var2723_getStatic/-616544340 () Bool false)\r\n(define-fun var3394_getNodeUsesParser/1997544654 () Bool false)\r\n(define-fun var3394_getNodeFactory/-1655041108 () String \"*\")\r\n(define-fun getNodeId/-1379187338 ((BOUND_VARIABLE_1363 var3260)) String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_1366 var856) (BOUND_VARIABLE_1367 String)) void (as @void_0 void))\r\n(define-fun usesCloseNodeVar/-1769174946 ((_arg_1 var33)) Bool false)\r\n(define-fun openNode/114769770 ((BOUND_VARIABLE_1370 var3260) (BOUND_VARIABLE_1371 String)) String \"\")\r\n(define-fun var3394_getNodeScopeHook/893147786 () Bool false)\r\n(define-fun var3394_getTrackTokens/1877101562 () Bool false)\r\n(define-fun null-var868 () var868 (as @var868_0 var868))\r\n(define-fun null-var33 () var33 (as @var33_0 var33))\r\n(define-fun null-var856 () var856 (as @var856_0 var856))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3586 () var868 (as @var868_1 var868))\r\n(define-fun var1513 () var33 (as @var33_1 var33))\r\n(define-fun var2477 () var856 (as @var856_1 var856))\r\n(define-fun var2372 () String \"\")\r\n(define-fun var2477!1 () var856 (as @var856_0 var856))\r\n(define-fun var1074!1 () String \"\")\r\n(define-fun var2105!1 () String \"\")\r\n(define-fun var2105!2 () String \"\")\r\n(define-fun var2836!1 () String \"\")\r\n(define-fun var581!1 () String \" \")\r\n(define-fun var2506!1 () String \" \")\r\n(define-fun var3521!1 () String \"  = \")\r\n(define-fun var2477!2 () var856 (as @var856_0 var856))\r\n(define-fun var2490!1 () String \"\")\r\n(define-fun var1231!1 () String \"\")\r\n(define-fun var1231!2 () String \"(\")\r\n(define-fun var2835!1 () String \"(\")\r\n(define-fun var225!1 () String \"()\")\r\n(define-fun var3917!1 () String \"()\")\r\n(define-fun var1044!1 () String \"().jjtCreate(\")\r\n(define-fun var3371!1 () String \"().jjtCreate(\")\r\n(define-fun var896!1 () String \"().jjtCreate(\")\r\n(define-fun var1139!1 () String \"().jjtCreate();\")\r\n(define-fun var2477!3 () var856 (as @var856_0 var856))\r\n(define-fun var3088!1 () String \"\")\r\n(define-fun var3423!1 () String \"\")\r\n(define-fun var3423!2 () String \"\")\r\n(define-fun var1721!1 () String \"\")\r\n(define-fun var2477!4 () var856 (as @var856_0 var856))\r\n(define-fun var729!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37367808,
            "run_time": 60.006961822509766,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 390393856,
            "run_time": 1.2496488094329834,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var33/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JavaCodeGenerator__insertOpenNodeCode__-1910072544\\640.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1139!1 =\r\n     concat(all_70_7, \");\")\r\n   var896!1 =\r\n     concat(all_67_7, all_67_6)\r\n   var3521!1 =\r\n     concat(all_64_6, \" = \")\r\n   var1044!1 =\r\n     concat(all_61_5, \".jjtCreate(\")\r\n   var3371!1 =\r\n     concat(all_58_5, \".jjtCreate(\")\r\n   var2506!1 =\r\n     concat(all_55_6, all_43_4)\r\n   var3917!1 =\r\n     concat(all_52_4, all_37_3)\r\n   var581!1 =\r\n     concat(all_49_4, \" \")\r\n   var225!1 =\r\n     concat(all_46_4, \")\")\r\n   var1721!1 =\r\n     concat(var2372, all_43_3)\r\n   var2836!1 =\r\n     concat(var2372, all_37_3)\r\n   var2835!1 =\r\n     concat(\"(\", all_37_3)\r\n   all_70_7 =\r\n     concat(all_70_9, all_67_6)\r\n   all_67_7 =\r\n     concat(all_67_8, \".jjtCreate(\")\r\n   all_64_6 =\r\n     concat(all_64_8, all_43_4)\r\n   all_61_5 =\r\n     concat(all_61_6, all_37_3)\r\n   all_58_5 =\r\n     concat(all_58_6, all_37_3)\r\n   all_55_6 =\r\n     concat(all_55_7, \" \")\r\n   all_52_4 =\r\n     concat(all_52_5, \")\")\r\n   all_49_4 =\r\n     concat(var2372, all_37_3)\r\n   all_46_4 =\r\n     concat(\"(\", all_37_3)\r\n   all_70_9 =\r\n     concat(all_70_10, \".jjtCreate(\")\r\n   all_67_8 =\r\n     concat(all_67_9, all_37_3)\r\n   all_64_8 =\r\n     concat(all_64_9, \" \")\r\n   all_61_6 =\r\n     concat(all_61_7, \")\")\r\n   all_58_6 =\r\n     concat(all_58_7, \")\")\r\n   all_55_7 =\r\n     concat(var2372, all_37_3)\r\n   all_52_5 =\r\n     concat(\"(\", all_37_3)\r\n   all_70_10 =\r\n     concat(all_70_11, all_37_3)\r\n   all_67_9 =\r\n     concat(all_67_10, \")\")\r\n   all_64_9 =\r\n     concat(var2372, all_37_3)\r\n   all_61_7 =\r\n     concat(\"(\", all_37_3)\r\n   all_58_7 =\r\n     concat(\"(\", all_37_3)\r\n   all_70_11 =\r\n     concat(all_70_12, \")\")\r\n   all_67_10 =\r\n     concat(\"(\", all_37_3)\r\n   all_70_12 =\r\n     concat(\"(\", all_37_3)\r\n\r\n974ms\r\n"
        },
        "undefined_function_count": 16,
        "assertion_count": 63,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 15,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r73 := @this: org.javacc.jjtree.JavaCodeGenerator",
            "r0 := @parameter0: org.javacc.jjtree.NodeScope",
            "r4 := @parameter1: org.javacc.jjtree.IO",
            "r5 := @parameter2: java.lang.String",
            "$r1 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "r2 = virtualinvoke $r1.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String getNodeType()>()",
            "$r3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeClass()>()",
            "$i0 = virtualinvoke $r3.<java.lang.String: int length()>()",
            "if $i0 <= 0 goto r74 = r2",
            "r74 = r2",
            "staticinvoke <org.javacc.jjtree.NodeFiles: void ensure(org.javacc.jjtree.IO,java.lang.String)>(r4, r2)",
            "$r75 = new java.lang.StringBuilder",
            "specialinvoke $r75.<java.lang.StringBuilder: void <init>()>()",
            "$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74)",
            "$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")",
            "$r79 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "$r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79)",
            "$r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \")",
            "$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void print(java.lang.String)>($r82)",
            "$z5 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getStatic()>()",
            "if $z5 == 0 goto $r83 = \"this\"",
            "$r83 = \"this\"",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeUsesParser()>()",
            "if $z0 == 0 goto $r84 = \"\"",
            "$r84 = \"\"",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()",
            "$z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"*\")",
            "if $z1 == 0 goto $r7 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()",
            "$r58 = new java.lang.StringBuilder",
            "specialinvoke $r58.<java.lang.StringBuilder: void <init>()>()",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74)",
            "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74)",
            "$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".jjtCreate(\")",
            "$r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84)",
            "$r64 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r65 = virtualinvoke $r64.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String getNodeId()>()",
            "$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65)",
            "$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\");\")",
            "$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r69)",
            "goto [?= $z6 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()]",
            "$z6 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()",
            "if $z6 == 0 goto $r18 = new java.lang.StringBuilder",
            "$r18 = new java.lang.StringBuilder",
            "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()",
            "$r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r20 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r19 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "$r21 = virtualinvoke $r20.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String openNode(java.lang.String)>($r19)",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r24)",
            "$z2 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeScopeHook()>()",
            "if $z2 == 0 goto $z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "$z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "if $z3 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPNodeFiles__addType__-972038703\\197.smt2",
        "z3": {
            "memory": 32354304,
            "run_time": 0.045108795166015625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3749 () Bool\r\n    (= var3532 \"Node\"))\r\n  (define-fun var3532 () String\r\n    \"Node\")\r\n)\r\n(error \"line 18 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10321920,
            "run_time": 0.031226634979248047,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2966 is 1\r\n; rep: (as @var2966_0 var2966)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"\")\r\n(define-fun var3532 () String \"Node\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36593664,
            "run_time": 0.045675039291381836,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3749 () Bool\n    (= var3532 \"Node\"))\n  (define-fun null-String () String\n    \"\")\n  (define-fun var3532 () String\n    \"Node\")\n)\n(error \"line 18 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 142860288,
            "run_time": 0.7760274410247803,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3532 () String \"Node\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"Node\")",
            "if $z0 != 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JavaCodeGenerator__openJJTreeComment__-2036001483\\474.smt2",
        "z3": {
            "memory": 32317440,
            "run_time": 0.04259181022644043,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var318:\r\n  ;;   var318!val!0 var318!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var318!val!0 () var318)\r\n  (declare-fun var318!val!1 () var318)\r\n  ;; cardinality constraint:\r\n  (forall ((x var318)) (or (= x var318!val!0) (= x var318!val!1)))\r\n  ;; -----------\r\n  (define-fun var2440 () String\r\n    (str.++ var1903!1 \"/*@bgen(jjtree) \" var3084 \" */\"))\r\n  (define-fun var1365 () var318\r\n    var318!val!0)\r\n  (define-fun var3084 () String\r\n    \"A\")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1903 () String\r\n    String-init)\r\n  (define-fun var3133 () String\r\n    (str.++ var1903!1 \"/*@bgen(jjtree) \"))\r\n  (define-fun var3489 () String\r\n    (str.++ var1903!1 \"/*@bgen(jjtree) \" var3084 \" */\"))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun null-var318 () var318\r\n    var318!val!1)\r\n  (define-fun var250 () String\r\n    (str.++ var1903!1 \"/*@bgen(jjtree) \" var3084))\r\n  (define-fun var3133!1 () String\r\n    \"/*@bgen(jjtree) A\")\r\n  (define-fun var250!1 () String\r\n    \"/*@bgen(jjtree) A */\")\r\n  (define-fun var1903!2 () String\r\n    \"/*@bgen(jjtree) \")\r\n  (define-fun var1903!1 () String\r\n    \"\")\r\n  (define-fun var1365!1 () var318\r\n    var318!val!0)\r\n  (define-fun var2440!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun print/-1652180213 ((x!0 var318) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10297344,
            "run_time": 0.015164852142333984,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var318 is 2\r\n; rep: (as @var318_0 var318)\r\n; rep: (as @var318_1 var318)\r\n; cardinality of var1861 is 1\r\n; rep: (as @var1861_0 var1861)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun print/-1652180213 ((BOUND_VARIABLE_609 var318) (BOUND_VARIABLE_610 String)) void (as @void_0 void))\r\n(define-fun null-var318 () var318 (as @var318_0 var318))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1365 () var318 (as @var318_1 var318))\r\n(define-fun var3084 () String \"\")\r\n(define-fun var1903!1 () String \"\")\r\n(define-fun var1903!2 () String \"/*@bgen(jjtree) \")\r\n(define-fun var3133!1 () String \"/*@bgen(jjtree) \")\r\n(define-fun var250!1 () String \"/*@bgen(jjtree)  */\")\r\n(define-fun var1365!1 () var318 (as @var318_0 var318))\r\n(define-fun var2440!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35766272,
            "run_time": 0.061756134033203125,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var318:\n  ;;   var318!val!0 var318!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var318!val!0 () var318)\n  (declare-fun var318!val!1 () var318)\n  ;; cardinality constraint:\n  (forall ((x var318)) (or (= x var318!val!0) (= x var318!val!1)))\n  ;; -----------\n  (define-fun var1903!1 () String\n    \"\")\n  (define-fun var1903!2 () String\n    \"/*@bgen(jjtree) \")\n  (define-fun var250!1 () String\n    \"/*@bgen(jjtree) \\u{0}\\u{0} */\")\n  (define-fun var3133!1 () String\n    \"/*@bgen(jjtree) \\u{0}\\u{0}\")\n  (define-fun var1365 () var318\n    var318!val!0)\n  (define-fun var3084 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var318 () var318\n    var318!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1903 () String\n    String-init)\n  (define-fun var3489 () String\n    (str.++ var1903!1 \"/*@bgen(jjtree) \" var3084 \" */\"))\n  (define-fun var250 () String\n    (str.++ var1903!1 \"/*@bgen(jjtree) \" var3084))\n  (define-fun var2440 () String\n    (str.++ var1903!1 \"/*@bgen(jjtree) \" var3084 \" */\"))\n  (define-fun var3133 () String\n    (str.++ var1903!1 \"/*@bgen(jjtree) \"))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1365!1 () var318\n    var318!val!0)\n  (define-fun var2440!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun print/-1652180213 ((x!0 var318) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165625856,
            "run_time": 0.8205976486206055,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var318/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JavaCodeGenerator__openJJTreeComment__-2036001483\\474.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_23_4 =\r\n     concat(all_23_5, \" */\")\r\n   var250!1 =\r\n     concat(all_20_4, \" */\")\r\n   var3133!1 =\r\n     concat(\"/*@bgen(jjtree) \", var3084)\r\n   all_23_5 =\r\n     concat(\"/*@bgen(jjtree) \", var3084)\r\n   all_20_4 =\r\n     concat(\"/*@bgen(jjtree) \", var3084)\r\n\r\n575ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: org.javacc.jjtree.IO",
            "r0 := @parameter1: java.lang.String",
            "if r0 == null goto virtualinvoke r1.<org.javacc.jjtree.IO: void print(java.lang.String)>(\"/*@bgen(jjtree)*/\")",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/*@bgen(jjtree) \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" */\")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r1.<org.javacc.jjtree.IO: void print(java.lang.String)>($r6)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPNodeFiles__defaultVisitorClass__-1441149525\\933.smt2",
        "z3": {
            "memory": 32272384,
            "run_time": 0.04376506805419922,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3446-parserName () String\r\n    \"\")\r\n  (define-fun var3126!1 () String\r\n    \"DefaultVisitor\")\r\n  (define-fun var1784!2 () String\r\n    \"\")\r\n  (define-fun var1784!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1165 () String\r\n    (str.++ var1784!1 var3446-parserName \"DefaultVisitor\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1784 () String\r\n    String-init)\r\n  (define-fun var1906 () String\r\n    (str.++ var1784!1 var3446-parserName \"DefaultVisitor\"))\r\n  (define-fun var3016 () String\r\n    var3446-parserName)\r\n  (define-fun var3126 () String\r\n    (str.++ var1784!1 var3446-parserName))\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10297344,
            "run_time": 0.015892982482910156,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3446 is 1\r\n; rep: (as @var3446_0 var3446)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var3446-parserName () String \"\")\r\n(define-fun var1784!1 () String \"\")\r\n(define-fun var1784!2 () String \"\")\r\n(define-fun var3126!1 () String \"DefaultVisitor\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35930112,
            "run_time": 0.04600334167480469,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3446-parserName () String\n    \"\")\n  (define-fun var3126!1 () String\n    \"DefaultVisitor\")\n  (define-fun var1784!2 () String\n    \"\")\n  (define-fun var1784!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1165 () String\n    (str.++ var1784!1 var3446-parserName \"DefaultVisitor\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1784 () String\n    String-init)\n  (define-fun var1906 () String\n    (str.++ var1784!1 var3446-parserName \"DefaultVisitor\"))\n  (define-fun var3016 () String\n    var3446-parserName)\n  (define-fun var3126 () String\n    (str.++ var1784!1 var3446-parserName))\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167407616,
            "run_time": 0.8534257411956787,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3126!1 () String \"DefaultVisitor\")\r\n  (define-fun var1784!2 () String \"\")\r\n  (define-fun var1784!1 () String \"\")\r\n  (define-fun var3446-parserName () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r1 = <org.javacc.jjtree.JJTreeGlobals: java.lang.String parserName>",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"DefaultVisitor\")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JavaCodeGenerator__openJJTreeComment__-2036001483\\500.smt2",
        "z3": {
            "memory": 31719424,
            "run_time": 0.04285264015197754,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 26 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10321920,
            "run_time": 0.014911890029907227,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35856384,
            "run_time": 0.046610116958618164,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 26 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 130768896,
            "run_time": 0.6047275066375732,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r1 := @parameter0: org.javacc.jjtree.IO",
            "r0 := @parameter1: java.lang.String",
            "if r0 == null goto virtualinvoke r1.<org.javacc.jjtree.IO: void print(java.lang.String)>(\"/*@bgen(jjtree)*/\")",
            "virtualinvoke r1.<org.javacc.jjtree.IO: void print(java.lang.String)>(\"/*@bgen(jjtree)*/\")",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__insertOpenNodeCode__1284769165\\656.smt2",
        "z3": {
            "memory": 32227328,
            "run_time": 60.006043910980225,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9912320,
            "run_time": 0.015093326568603516,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1864 is 2\r\n; rep: (as @var1864_0 var1864)\r\n; rep: (as @var1864_1 var1864)\r\n; cardinality of var2312 is 2\r\n; rep: (as @var2312_0 var2312)\r\n; rep: (as @var2312_1 var2312)\r\n; cardinality of var23 is 2\r\n; rep: (as @var23_0 var23)\r\n; rep: (as @var23_1 var23)\r\n; cardinality of var2109 is 1\r\n; rep: (as @var2109_0 var2109)\r\n; cardinality of var1076 is 1\r\n; rep: (as @var1076_0 var1076)\r\n; cardinality of var2892 is 1\r\n; rep: (as @var2892_0 var2892)\r\n; cardinality of var3968 is 1\r\n; rep: (as @var3968_0 var3968)\r\n; cardinality of var1231 is 1\r\n; rep: (as @var1231_0 var1231)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun node_descriptor/-576648796 ((BOUND_VARIABLE_1359 var2312)) var1076 (as @var1076_0 var1076))\r\n(define-fun getNodeType/-707025417 ((BOUND_VARIABLE_1362 var1076)) String \"\")\r\n(define-fun var2892_getNodeClass/-1384960322 () String \"\")\r\n(define-fun var3968_addType/-972038703 ((BOUND_VARIABLE_1365 String)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun nodeVar/-576648796 ((BOUND_VARIABLE_1368 var2312)) String \"\")\r\n(define-fun print/-1652180213 ((BOUND_VARIABLE_1371 var23) (BOUND_VARIABLE_1372 String)) void (as @void_0 void))\r\n(define-fun var1231_getStatic/-616544340 () Bool true)\r\n(define-fun var2892_getNodeUsesParser/1997544654 () Bool false)\r\n(define-fun var2892_getNodeFactory/-1655041108 () String \"*\")\r\n(define-fun getNodeId/-1379187338 ((BOUND_VARIABLE_1375 var1076)) String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_1378 var23) (BOUND_VARIABLE_1379 String)) void (as @void_0 void))\r\n(define-fun usesCloseNodeVar/-1769174946 ((_arg_1 var2312)) Bool false)\r\n(define-fun openNode/114769770 ((BOUND_VARIABLE_1382 var1076) (BOUND_VARIABLE_1383 String)) String \"\")\r\n(define-fun var2892_getNodeScopeHook/893147786 () Bool false)\r\n(define-fun var2892_getTrackTokens/1877101562 () Bool false)\r\n(define-fun null-var1864 () var1864 (as @var1864_0 var1864))\r\n(define-fun null-var2312 () var2312 (as @var2312_0 var2312))\r\n(define-fun null-var23 () var23 (as @var23_0 var23))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3869 () var1864 (as @var1864_1 var1864))\r\n(define-fun var2462 () var2312 (as @var2312_1 var2312))\r\n(define-fun var3443 () var23 (as @var23_1 var23))\r\n(define-fun var2120 () String \"\")\r\n(define-fun var3163!1 () String \"\")\r\n(define-fun var277!1 () String \"\")\r\n(define-fun var277!2 () String \"\")\r\n(define-fun var2057!1 () String \"\")\r\n(define-fun var193!1 () String \" *\")\r\n(define-fun var479!1 () String \" *\")\r\n(define-fun var647!1 () String \" * = \")\r\n(define-fun var3443!1 () var23 (as @var23_0 var23))\r\n(define-fun var1209!1 () String \"\")\r\n(define-fun var1548!1 () String \"\")\r\n(define-fun var1548!2 () String \"(\")\r\n(define-fun var833!1 () String \"(\")\r\n(define-fun var3772!1 () String \"(*)\")\r\n(define-fun var2296!1 () String \"(*)\")\r\n(define-fun var662!1 () String \"(*)::jjtCreate(\")\r\n(define-fun var1624!1 () String \"(*)::jjtCreate(\")\r\n(define-fun var2424!1 () String \"(*)::jjtCreate(\")\r\n(define-fun var2342!1 () String \"(*)::jjtCreate();\")\r\n(define-fun var3443!2 () var23 (as @var23_0 var23))\r\n(define-fun var1578!1 () String \"\")\r\n(define-fun var54!1 () String \"\")\r\n(define-fun var54!2 () String \"\")\r\n(define-fun var522!1 () String \"\")\r\n(define-fun var3443!3 () var23 (as @var23_0 var23))\r\n(define-fun var3215!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37355520,
            "run_time": 60.01160001754761,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 386662400,
            "run_time": 1.1285653114318848,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2312/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPCodeGenerator__insertOpenNodeCode__1284769165\\656.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_73_7 =\r\n     concat(all_73_8, \");\")\r\n   var2342!1 =\r\n     concat(all_70_7, \");\")\r\n   var2424!1 =\r\n     concat(all_67_7, all_67_6)\r\n   var647!1 =\r\n     concat(all_64_6, \" = \")\r\n   var1624!1 =\r\n     concat(all_61_5, \"::jjtCreate(\")\r\n   var662!1 =\r\n     concat(all_58_5, \"::jjtCreate(\")\r\n   var479!1 =\r\n     concat(all_55_6, all_43_4)\r\n   var2296!1 =\r\n     concat(all_52_4, all_37_3)\r\n   var3772!1 =\r\n     concat(all_49_4, \"*)\")\r\n   var193!1 =\r\n     concat(all_46_4, \" *\")\r\n   var522!1 =\r\n     concat(var2120, all_43_3)\r\n   var2057!1 =\r\n     concat(var2120, all_37_3)\r\n   var833!1 =\r\n     concat(\"(\", all_37_3)\r\n   all_73_8 =\r\n     concat(all_73_10, all_67_6)\r\n   all_70_7 =\r\n     concat(all_70_9, all_67_6)\r\n   all_67_7 =\r\n     concat(all_67_8, \"::jjtCreate(\")\r\n   all_64_6 =\r\n     concat(all_64_8, all_43_4)\r\n   all_61_5 =\r\n     concat(all_61_6, all_37_3)\r\n   all_58_5 =\r\n     concat(all_58_6, all_37_3)\r\n   all_55_6 =\r\n     concat(all_55_7, \" *\")\r\n   all_52_4 =\r\n     concat(all_52_5, \"*)\")\r\n   all_46_4 =\r\n     concat(var2120, all_37_3)\r\n   all_49_4 =\r\n     concat(\"(\", all_37_3)\r\n   all_73_10 =\r\n     concat(all_73_11, \"::jjtCreate(\")\r\n   all_70_9 =\r\n     concat(all_70_10, \"::jjtCreate(\")\r\n   all_67_8 =\r\n     concat(all_67_9, all_37_3)\r\n   all_64_8 =\r\n     concat(all_64_9, \" *\")\r\n   all_61_6 =\r\n     concat(all_61_7, \"*)\")\r\n   all_58_6 =\r\n     concat(all_58_7, \"*)\")\r\n   all_55_7 =\r\n     concat(var2120, all_37_3)\r\n   all_52_5 =\r\n     concat(\"(\", all_37_3)\r\n   all_73_11 =\r\n     concat(all_73_12, all_37_3)\r\n   all_70_10 =\r\n     concat(all_70_11, all_37_3)\r\n   all_67_9 =\r\n     concat(all_67_10, \"*)\")\r\n   all_64_9 =\r\n     concat(var2120, all_37_3)\r\n   all_61_7 =\r\n     concat(\"(\", all_37_3)\r\n   all_58_7 =\r\n     concat(\"(\", all_37_3)\r\n   all_73_12 =\r\n     concat(all_73_13, \"*)\")\r\n   all_70_11 =\r\n     concat(all_70_12, \"*)\")\r\n   all_67_10 =\r\n     concat(\"(\", all_37_3)\r\n   all_73_13 =\r\n     concat(\"(\", all_37_3)\r\n   all_70_12 =\r\n     concat(\"(\", all_37_3)\r\n\r\n886ms\r\n"
        },
        "undefined_function_count": 16,
        "assertion_count": 63,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 15,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r70 := @this: org.javacc.jjtree.CPPCodeGenerator",
            "r0 := @parameter0: org.javacc.jjtree.NodeScope",
            "r4 := @parameter1: org.javacc.jjtree.IO",
            "r5 := @parameter2: java.lang.String",
            "$r1 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "r2 = virtualinvoke $r1.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String getNodeType()>()",
            "$r3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeClass()>()",
            "$i0 = virtualinvoke $r3.<java.lang.String: int length()>()",
            "if $i0 <= 0 goto r71 = r2",
            "r71 = r2",
            "staticinvoke <org.javacc.jjtree.CPPNodeFiles: void addType(java.lang.String)>(r2)",
            "$r72 = new java.lang.StringBuilder",
            "specialinvoke $r72.<java.lang.StringBuilder: void <init>()>()",
            "$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" *\")",
            "$r76 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "$r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76)",
            "$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \")",
            "$r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void print(java.lang.String)>($r79)",
            "$z5 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getStatic()>()",
            "if $z5 == 0 goto $r80 = \"this\"",
            "$r80 = \"null\"",
            "goto [?= $z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeUsesParser()>()]",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeUsesParser()>()",
            "if $z0 == 0 goto $r81 = \"\"",
            "$r81 = \"\"",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()",
            "$z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"*\")",
            "if $z1 == 0 goto $r7 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()",
            "$r55 = new java.lang.StringBuilder",
            "specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()",
            "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"*)\")",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"::jjtCreate(\")",
            "$r63 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)",
            "$r61 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r62 = virtualinvoke $r61.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String getNodeId()>()",
            "$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62)",
            "$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\");\")",
            "$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r66)",
            "goto [?= $z6 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()]",
            "$z6 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()",
            "if $z6 == 0 goto $r18 = new java.lang.StringBuilder",
            "$r18 = new java.lang.StringBuilder",
            "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()",
            "$r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r20 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r19 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "$r21 = virtualinvoke $r20.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String openNode(java.lang.String)>($r19)",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r24)",
            "$z2 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeScopeHook()>()",
            "if $z2 == 0 goto $z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "$z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "if $z3 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JavaCodeGenerator__insertOpenNodeCode__-1910072544\\625.smt2",
        "z3": {
            "memory": 32243712,
            "run_time": 60.0056266784668,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9945088,
            "run_time": 0.047182559967041016,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2258 is 2\r\n; rep: (as @var2258_0 var2258)\r\n; rep: (as @var2258_1 var2258)\r\n; cardinality of var3629 is 2\r\n; rep: (as @var3629_0 var3629)\r\n; rep: (as @var3629_1 var3629)\r\n; cardinality of var3353 is 2\r\n; rep: (as @var3353_0 var3353)\r\n; rep: (as @var3353_1 var3353)\r\n; cardinality of var2634 is 1\r\n; rep: (as @var2634_0 var2634)\r\n; cardinality of var202 is 1\r\n; rep: (as @var202_0 var202)\r\n; cardinality of var609 is 1\r\n; rep: (as @var609_0 var609)\r\n; cardinality of var1330 is 1\r\n; rep: (as @var1330_0 var1330)\r\n; cardinality of var2431 is 1\r\n; rep: (as @var2431_0 var2431)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun node_descriptor/-576648796 ((BOUND_VARIABLE_1359 var3629)) var202 (as @var202_0 var202))\r\n(define-fun getNodeType/-707025417 ((BOUND_VARIABLE_1362 var202)) String \"\")\r\n(define-fun var609_getNodeClass/-1384960322 () String \"\")\r\n(define-fun var1330_ensure/-405642493 ((BOUND_VARIABLE_1365 var3353) (BOUND_VARIABLE_1366 String)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun nodeVar/-576648796 ((BOUND_VARIABLE_1369 var3629)) String \"\")\r\n(define-fun print/-1652180213 ((BOUND_VARIABLE_1372 var3353) (BOUND_VARIABLE_1373 String)) void (as @void_0 void))\r\n(define-fun var2431_getStatic/-616544340 () Bool true)\r\n(define-fun var609_getNodeUsesParser/1997544654 () Bool false)\r\n(define-fun var609_getNodeFactory/-1655041108 () String \"*\")\r\n(define-fun getNodeId/-1379187338 ((BOUND_VARIABLE_1376 var202)) String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_1379 var3353) (BOUND_VARIABLE_1380 String)) void (as @void_0 void))\r\n(define-fun usesCloseNodeVar/-1769174946 ((_arg_1 var3629)) Bool false)\r\n(define-fun openNode/114769770 ((BOUND_VARIABLE_1383 var202) (BOUND_VARIABLE_1384 String)) String \"\")\r\n(define-fun var609_getNodeScopeHook/893147786 () Bool false)\r\n(define-fun var609_getTrackTokens/1877101562 () Bool false)\r\n(define-fun null-var2258 () var2258 (as @var2258_0 var2258))\r\n(define-fun null-var3629 () var3629 (as @var3629_0 var3629))\r\n(define-fun null-var3353 () var3353 (as @var3353_0 var3353))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1776 () var2258 (as @var2258_1 var2258))\r\n(define-fun var3611 () var3629 (as @var3629_1 var3629))\r\n(define-fun var1317 () var3353 (as @var3353_1 var3353))\r\n(define-fun var3134 () String \"\")\r\n(define-fun var1317!1 () var3353 (as @var3353_0 var3353))\r\n(define-fun var561!1 () String \"\")\r\n(define-fun var2369!1 () String \"\")\r\n(define-fun var2369!2 () String \"\")\r\n(define-fun var3027!1 () String \"\")\r\n(define-fun var1391!1 () String \" \")\r\n(define-fun var1962!1 () String \" \")\r\n(define-fun var2133!1 () String \"  = \")\r\n(define-fun var1317!2 () var3353 (as @var3353_0 var3353))\r\n(define-fun var3318!1 () String \"\")\r\n(define-fun var3162!1 () String \"\")\r\n(define-fun var3162!2 () String \"(\")\r\n(define-fun var912!1 () String \"(\")\r\n(define-fun var2496!1 () String \"()\")\r\n(define-fun var65!1 () String \"()\")\r\n(define-fun var2964!1 () String \"().jjtCreate(\")\r\n(define-fun var3640!1 () String \"().jjtCreate(\")\r\n(define-fun var2847!1 () String \"().jjtCreate(\")\r\n(define-fun var1425!1 () String \"().jjtCreate();\")\r\n(define-fun var1317!3 () var3353 (as @var3353_0 var3353))\r\n(define-fun var1343!1 () String \"\")\r\n(define-fun var2452!1 () String \"\")\r\n(define-fun var2452!2 () String \"\")\r\n(define-fun var710!1 () String \"\")\r\n(define-fun var1317!4 () var3353 (as @var3353_0 var3353))\r\n(define-fun var2595!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37376000,
            "run_time": 60.007500410079956,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 379793408,
            "run_time": 1.0928101539611816,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3629/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JavaCodeGenerator__insertOpenNodeCode__-1910072544\\625.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1425!1 =\r\n     concat(all_70_7, \");\")\r\n   var2847!1 =\r\n     concat(all_67_7, all_67_6)\r\n   var2133!1 =\r\n     concat(all_64_6, \" = \")\r\n   var2964!1 =\r\n     concat(all_61_5, \".jjtCreate(\")\r\n   var3640!1 =\r\n     concat(all_58_5, \".jjtCreate(\")\r\n   var1962!1 =\r\n     concat(all_55_6, all_43_4)\r\n   var65!1 =\r\n     concat(all_52_4, all_37_3)\r\n   var1391!1 =\r\n     concat(all_49_4, \" \")\r\n   var2496!1 =\r\n     concat(all_46_4, \")\")\r\n   var710!1 =\r\n     concat(var3134, all_43_3)\r\n   var3027!1 =\r\n     concat(var3134, all_37_3)\r\n   var912!1 =\r\n     concat(\"(\", all_37_3)\r\n   all_70_7 =\r\n     concat(all_70_9, all_67_6)\r\n   all_67_7 =\r\n     concat(all_67_8, \".jjtCreate(\")\r\n   all_64_6 =\r\n     concat(all_64_8, all_43_4)\r\n   all_61_5 =\r\n     concat(all_61_6, all_37_3)\r\n   all_58_5 =\r\n     concat(all_58_6, all_37_3)\r\n   all_55_6 =\r\n     concat(all_55_7, \" \")\r\n   all_52_4 =\r\n     concat(all_52_5, \")\")\r\n   all_49_4 =\r\n     concat(var3134, all_37_3)\r\n   all_46_4 =\r\n     concat(\"(\", all_37_3)\r\n   all_70_9 =\r\n     concat(all_70_10, \".jjtCreate(\")\r\n   all_67_8 =\r\n     concat(all_67_9, all_37_3)\r\n   all_64_8 =\r\n     concat(all_64_9, \" \")\r\n   all_61_6 =\r\n     concat(all_61_7, \")\")\r\n   all_58_6 =\r\n     concat(all_58_7, \")\")\r\n   all_55_7 =\r\n     concat(var3134, all_37_3)\r\n   all_52_5 =\r\n     concat(\"(\", all_37_3)\r\n   all_70_10 =\r\n     concat(all_70_11, all_37_3)\r\n   all_67_9 =\r\n     concat(all_67_10, \")\")\r\n   all_64_9 =\r\n     concat(var3134, all_37_3)\r\n   all_61_7 =\r\n     concat(\"(\", all_37_3)\r\n   all_58_7 =\r\n     concat(\"(\", all_37_3)\r\n   all_70_11 =\r\n     concat(all_70_12, \")\")\r\n   all_67_10 =\r\n     concat(\"(\", all_37_3)\r\n   all_70_12 =\r\n     concat(\"(\", all_37_3)\r\n\r\n858ms\r\n"
        },
        "undefined_function_count": 16,
        "assertion_count": 63,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 15,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r73 := @this: org.javacc.jjtree.JavaCodeGenerator",
            "r0 := @parameter0: org.javacc.jjtree.NodeScope",
            "r4 := @parameter1: org.javacc.jjtree.IO",
            "r5 := @parameter2: java.lang.String",
            "$r1 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "r2 = virtualinvoke $r1.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String getNodeType()>()",
            "$r3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeClass()>()",
            "$i0 = virtualinvoke $r3.<java.lang.String: int length()>()",
            "if $i0 <= 0 goto r74 = r2",
            "r74 = r2",
            "staticinvoke <org.javacc.jjtree.NodeFiles: void ensure(org.javacc.jjtree.IO,java.lang.String)>(r4, r2)",
            "$r75 = new java.lang.StringBuilder",
            "specialinvoke $r75.<java.lang.StringBuilder: void <init>()>()",
            "$r76 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r77 = virtualinvoke $r76.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74)",
            "$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")",
            "$r79 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "$r80 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r79)",
            "$r81 = virtualinvoke $r80.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \")",
            "$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void print(java.lang.String)>($r82)",
            "$z5 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getStatic()>()",
            "if $z5 == 0 goto $r83 = \"this\"",
            "$r83 = \"null\"",
            "goto [?= $z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeUsesParser()>()]",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeUsesParser()>()",
            "if $z0 == 0 goto $r84 = \"\"",
            "$r84 = \"\"",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()",
            "$z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"*\")",
            "if $z1 == 0 goto $r7 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()",
            "$r58 = new java.lang.StringBuilder",
            "specialinvoke $r58.<java.lang.StringBuilder: void <init>()>()",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74)",
            "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r74)",
            "$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".jjtCreate(\")",
            "$r66 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r84)",
            "$r64 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r65 = virtualinvoke $r64.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String getNodeId()>()",
            "$r67 = virtualinvoke $r66.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r65)",
            "$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\");\")",
            "$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r69)",
            "goto [?= $z6 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()]",
            "$z6 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()",
            "if $z6 == 0 goto $r18 = new java.lang.StringBuilder",
            "$r18 = new java.lang.StringBuilder",
            "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()",
            "$r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r20 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r19 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "$r21 = virtualinvoke $r20.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String openNode(java.lang.String)>($r19)",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r24)",
            "$z2 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeScopeHook()>()",
            "if $z2 == 0 goto $z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "$z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "if $z3 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__DumpStatesForKind__616829560\\3051.smt2",
        "z3": {
            "memory": 33292288,
            "run_time": 60.01238775253296,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14503936,
            "run_time": 0.030242919921875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3580 is 3\r\n; rep: (as @var3580_0 var3580)\r\n; rep: (as @var3580_1 var3580)\r\n; rep: (as @var3580_2 var3580)\r\n; cardinality of var3945 is 1\r\n; rep: (as @var3945_0 var3945)\r\n; cardinality of var1929 is 3\r\n; rep: (as @var1929_0 var1929)\r\n; rep: (as @var1929_1 var1929)\r\n; rep: (as @var1929_2 var1929)\r\n; cardinality of var577 is 1\r\n; rep: (as @var577_0 var577)\r\n; cardinality of var1268 is 1\r\n; rep: (as @var1268_0 var1268)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun isJavaLanguage/-1752064482 ((_arg_1 var3580)) Bool false)\r\n(define-fun var3945_DumpStatesForStateCPP/11920310 ((BOUND_VARIABLE_2032 var3580)) void (as @void_0 void))\r\n(define-fun switchToStaticsFile/-245861004 ((BOUND_VARIABLE_2035 var3580)) void (as @void_0 void))\r\n(define-fun arr-var1929-init () (Array Int var1929) ((as const (Array Int var1929)) (as @var1929_0 var1929)))\r\n(define-fun String-init () String \"\")\r\n(define-fun cast-from-String-to-var1929 ((_arg_1 String)) var1929 (ite (= \"static const int kindForState[][] = \" _arg_1) (as @var1929_0 var1929) (as @var1929_2 var1929)))\r\n(define-fun genCode/442726974 ((BOUND_VARIABLE_2038 var3580) (BOUND_VARIABLE_2039 (Array Int var1929))) void (as @void_0 void))\r\n(define-fun genCodeLine/787715242 ((BOUND_VARIABLE_2042 var3580) (BOUND_VARIABLE_2043 (Array Int var1929))) void (as @void_0 void))\r\n(define-fun null-var3580 () var3580 (as @var3580_0 var3580))\r\n(define-fun var1268-lg () var577 (as @var577_0 var577))\r\n(define-fun var577-stateSetSize () Int (- 1))\r\n(define-fun null-__Array__Int__var1929__ () (Array Int var1929) ((as const (Array Int var1929)) (as @var1929_1 var1929)))\r\n(define-fun var3945-kinds () (Array Int (Array Int Int)) ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)))\r\n(define-fun null-__Array__Int____Array__Int__Int____ () (Array Int (Array Int Int)) ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)))\r\n(define-fun var3863 () var3580 (as @var3580_1 var3580))\r\n(define-fun var3863!1 () var3580 (as @var3580_2 var3580))\r\n(define-fun var3863!2 () var3580 (as @var3580_0 var3580))\r\n(define-fun var2965!1 () String \"\")\r\n(define-fun var2965!2 () String \"static const int kindForState[\")\r\n(define-fun var1573!1 () String \"static const int kindForState[\")\r\n(define-fun var3939!1 () String \"static const int kindForState[][\")\r\n(define-fun var17!1 () String \"static const int kindForState[][\")\r\n(define-fun var1343!1 () String \"static const int kindForState[][] = \")\r\n(define-fun var916!1 () (Array Int var1929) ((as const (Array Int var1929)) (as @var1929_0 var1929)))\r\n(define-fun var3863!3 () var3580 (as @var3580_0 var3580))\r\n(define-fun var916!2 () (Array Int var1929) ((as const (Array Int var1929)) (as @var1929_0 var1929)))\r\n(define-fun var2026!1 () (Array Int var1929) ((as const (Array Int var1929)) (as @var1929_2 var1929)))\r\n(define-fun var3863!4 () var3580 (as @var3580_0 var3580))\r\n(define-fun var2026!2 () (Array Int var1929) ((as const (Array Int var1929)) (as @var1929_0 var1929)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38244352,
            "run_time": 0.09134650230407715,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 104 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 105 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 210575360,
            "run_time": 1.026348352432251,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2026!1 () (Array Int var1929) (store ((as const (Array Int var1929)) var1929!238) 0 var1929!232))\r\n  (define-fun var916!1 () (Array Int var1929) (store ((as const (Array Int var1929)) var1929!236) 0 var1929!234))\r\n  (define-fun var1343!1 () String \"static const int kindForState[][] = \")\r\n  (define-fun var17!1 () String \"static const int kindForState[][\")\r\n  (define-fun var3939!1 () String \"static const int kindForState[][\")\r\n  (define-fun var1573!1 () String \"static const int kindForState[\")\r\n  (define-fun var2965!2 () String \"static const int kindForState[\")\r\n  (define-fun var2965!1 () String \"\")\r\n  (define-fun var3863!1 () var3580 var3580!210)\r\n  (define-fun var3863 () var3580 var3580!208)\r\n  (define-fun null-__Array__Int____Array__Int__Int____ () (Array Int (Array Int Int)) ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)))\r\n  (define-fun var3945-kinds () (Array Int (Array Int Int)) ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)))\r\n  (define-fun null-__Array__Int__var1929__ () (Array Int var1929) ((as const (Array Int var1929)) var1929!0))\r\n  (define-fun var577-stateSetSize () Int (- 6))\r\n  (define-fun null-var3580 () var3580 var3580!206)\r\n  (define-fun var1929!234 () var1929 (cast-from-String-to-var1929 \"static const int kindForState[][] = \"))\r\n  (define-fun var1929!232 () var1929 (cast-from-String-to-var1929 \"null;\"))\r\n  (define-fun abbrev_114 ((x!0 Int)) String (ite (= x!0 0) \"static const int kindForState[\" \"\"))\r\n  (define-fun isJavaLanguage/-1752064482 ((x!0 var3580)) Bool (ite (= x!0 var3580!208) false (ite (= x!0 var3580!210) false true)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 28,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.CodeGenerator",
            "$z0 = virtualinvoke r0.<org.javacc.parser.CodeGenerator: boolean isJavaLanguage()>()",
            "if $z0 == 0 goto staticinvoke <org.javacc.parser.NfaState: void DumpStatesForStateCPP(org.javacc.parser.CodeGenerator)>(r0)",
            "staticinvoke <org.javacc.parser.NfaState: void DumpStatesForStateCPP(org.javacc.parser.CodeGenerator)>(r0)",
            "z2 = 0",
            "$z1 = virtualinvoke r0.<org.javacc.parser.CodeGenerator: boolean isJavaLanguage()>()",
            "if $z1 == 0 goto virtualinvoke r0.<org.javacc.parser.CodeGenerator: void switchToStaticsFile()>()",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void switchToStaticsFile()>()",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"static const int kindForState[\")",
            "$r3 = <org.javacc.parser.Main: org.javacc.parser.LexGen lg>",
            "$i0 = <org.javacc.parser.LexGen: int stateSetSize>",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"][\")",
            "$r6 = <org.javacc.parser.Main: org.javacc.parser.LexGen lg>",
            "$i1 = <org.javacc.parser.LexGen: int stateSetSize>",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] = \")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r10",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCode(java.lang.Object[])>($r1)",
            "$r11 = <org.javacc.parser.NfaState: int[][] kinds>",
            "if $r11 != null goto $r12 = newarray (java.lang.Object)[1]",
            "$r25 = newarray (java.lang.Object)[1]",
            "$r25[0] = \"null;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r25)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.TokenMgrException__LexicalError__-309502\\524.smt2",
        "z3": {
            "memory": 32780288,
            "run_time": 60.00735282897949,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14024704,
            "run_time": 0.030080795288085938,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var152 is 1\r\n; rep: (as @var152_0 var152)\r\n; cardinality of var2230 is 1\r\n; rep: (as @var2230_0 var2230)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun String_valueOf/-371898945 ((_arg_1 Int)) String \"B\")\r\n(define-fun var2230_addEscapes/-1529316606 ((_arg_1 String)) String \"\")\r\n(define-fun null-Bool () Bool true)\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3004 () Bool false)\r\n(define-fun var361 () Int (- 1))\r\n(define-fun var2596 () Int (- 1))\r\n(define-fun var3001 () Int (- 1))\r\n(define-fun var510 () String \"\")\r\n(define-fun var3343 () Int (- 1))\r\n(define-fun var1266!1 () String \"\")\r\n(define-fun var1266!2 () String \"Lexical error at line \")\r\n(define-fun var1979!1 () String \"Lexical error at line \")\r\n(define-fun var3418!1 () String \"Lexical error at line , column \")\r\n(define-fun var2803!1 () String \"Lexical error at line , column \")\r\n(define-fun var1643!1 () String \"Lexical error at line , column .  Encountered: \")\r\n(define-fun var71!1 () String \"\")\r\n(define-fun var71!2 () String \"\"\"\")\r\n(define-fun var2831!1 () String \"\"\"\")\r\n(define-fun var1767!1 () String \"\"\"\"\"\")\r\n(define-fun var1453!1 () String \"\"\"\"\" (\")\r\n(define-fun var1001!1 () String \"\"\"\"\" (\")\r\n(define-fun var1838!1 () String \"\"\"\"\" (), \")\r\n(define-fun var631!1 () String \"Lexical error at line , column .  Encountered: \"\"\"\" (), \")\r\n(define-fun var2239!1 () String \"Lexical error at line , column .  Encountered: \"\"\"\" (), after : \"\"\")\r\n(define-fun var2150!1 () String \"Lexical error at line , column .  Encountered: \"\"\"\" (), after : \"\"\")\r\n(define-fun var3088!1 () String \"Lexical error at line , column .  Encountered: \"\"\"\" (), after : \"\"\"\"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36315136,
            "run_time": 0.04672813415527344,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 115 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 116 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 286498816,
            "run_time": 60.01530599594116,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 44,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: java.lang.String valueOf(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 12,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 3,
            "<java.lang.String: java.lang.String valueOf(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "z0 := @parameter0: boolean",
            "i3 := @parameter1: int",
            "i0 := @parameter2: int",
            "i1 := @parameter3: int",
            "r16 := @parameter4: java.lang.String",
            "c2 := @parameter5: char",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r1 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Lexical error at line \")",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", column \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)",
            "$r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".  Encountered: \")",
            "if z0 == 0 goto $r24 = new java.lang.StringBuilder",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r6 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c2)",
            "$r7 = staticinvoke <org.javacc.jjtree.TokenMgrException: java.lang.String addEscapes(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\")",
            "$i4 = (int) c2",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"), \")",
            "$r22 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"after : \\\"\")",
            "$r17 = staticinvoke <org.javacc.jjtree.TokenMgrException: java.lang.String addEscapes(java.lang.String)>(r16)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r21"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.TokenUtils__addUnicodeEscapes__901403647\\528.smt2",
        "z3": {
            "memory": 31731712,
            "run_time": 0.04402756690979004,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var733 () String\r\n    var3355!1)\r\n  (define-fun var3355 () String\r\n    String-init)\r\n  (define-fun var3347 () Int\r\n    (str.len var2291))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var385 () Int\r\n    (str.len var2291))\r\n  (define-fun var2291 () String\r\n    \"\")\r\n  (define-fun var222 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var385!1 () Int\r\n    0)\r\n  (define-fun var3355!1 () String\r\n    \"\")\r\n  (define-fun <init>/1906106355 ((x!0 String) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 34 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10276864,
            "run_time": 0.015755414962768555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var418 is 1\r\n; rep: (as @var418_0 var418)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1906106355 ((BOUND_VARIABLE_535 String) (BOUND_VARIABLE_536 Int)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2291 () String \"\")\r\n(define-fun var3355!1 () String \"\")\r\n(define-fun var385!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36540416,
            "run_time": 0.046108245849609375,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var385 () Int\n    (str.len var2291))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var733 () String\n    var3355!1)\n  (define-fun var3355 () String\n    String-init)\n  (define-fun var222 () Int\n    0)\n  (define-fun var3347 () Int\n    (str.len var2291))\n  (define-fun var2291 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var385!1 () Int\n    0)\n  (define-fun var3355!1 () String\n    \"\")\n  (define-fun <init>/1906106355 ((x!0 String) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 34 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153272320,
            "run_time": 0.7263314723968506,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2291 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.StringBuffer: void <init>(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2,
            "<java.lang.StringBuffer: void <init>(int)>": 1,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r13 = new java.lang.StringBuffer",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "specialinvoke $r13.<java.lang.StringBuffer: void <init>(int)>($i0)",
            "i6 = 0",
            "$i1 = virtualinvoke r1.<java.lang.String: int length()>()",
            "if i6 >= $i1 goto $r2 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r2 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__getFirstValidPos__823987822\\1417-deviant-0.smt2",
        "z3": {
            "memory": 32755712,
            "run_time": 0.060692548751831055,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2838:\r\n  ;;   var2838!val!0 var2838!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2838!val!0 () var2838)\r\n  (declare-fun var2838!val!1 () var2838)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2838)) (or (= x var2838!val!0) (= x var2838!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2838 () var2838\r\n    var2838!val!1)\r\n  (define-fun var1859 () Int\r\n    1)\r\n  (define-fun var2450 () String\r\n    \"A\")\r\n  (define-fun var2587 () Int\r\n    (- 1))\r\n  (define-fun var1377 () var2838\r\n    var2838!val!0)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2078 () Int\r\n    (onlyChar/1847772117 var1377))\r\n  (define-fun onlyChar/1847772117 ((x!0 var2838)) Int\r\n    2)\r\n  (define-fun CanMoveUsingChar/-243996437 ((x!0 var2838) (x!1 Int)) Bool\r\n    false)\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10321920,
            "run_time": 0.01616835594177246,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2838 is 2\r\n; rep: (as @var2838_0 var2838)\r\n; rep: (as @var2838_1 var2838)\r\n; cardinality of var2046 is 1\r\n; rep: (as @var2046_0 var2046)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun onlyChar/1847772117 ((_arg_1 var2838)) Int 0)\r\n(define-fun CanMoveUsingChar/-243996437 ((BOUND_VARIABLE_595 var2838) (BOUND_VARIABLE_596 Int)) Bool false)\r\n(define-fun null-var2838 () var2838 (as @var2838_0 var2838))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1377 () var2838 (as @var2838_1 var2838))\r\n(define-fun var2450 () String \"\")\r\n(define-fun var2587 () Int 0)\r\n(define-fun var1859 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37707776,
            "run_time": 0.061299800872802734,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2838:\n  ;;   var2838!val!0 var2838!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2838!val!0 () var2838)\n  (declare-fun var2838!val!1 () var2838)\n  ;; cardinality constraint:\n  (forall ((x var2838)) (or (= x var2838!val!0) (= x var2838!val!1)))\n  ;; -----------\n  (define-fun var2078 () Int\n    (onlyChar/1847772117 var1377))\n  (define-fun null-var2838 () var2838\n    var2838!val!1)\n  (define-fun var1859 () Int\n    1)\n  (define-fun var2450 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2587 () Int\n    (- 1))\n  (define-fun var1377 () var2838\n    var2838!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-Int () Int\n    0)\n  (define-fun onlyChar/1847772117 ((x!0 var2838)) Int\n    3)\n  (define-fun CanMoveUsingChar/-243996437 ((x!0 var2838) (x!1 Int)) Bool\n    false)\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 170860544,
            "run_time": 0.7879905700683594,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1859 () Int 1)\r\n  (define-fun var2587 () Int (- 1))\r\n  (define-fun var2450 () String \"\")\r\n  (define-fun var1377 () var2838 var2838!6)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var2838 () var2838 var2838!4)\r\n  (define-fun onlyChar/1847772117 ((x!0 var2838)) Int (ite (= x!0 var2838!6) 9 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.NfaState",
            "r1 := @parameter0: java.lang.String",
            "i5 := @parameter1: int",
            "i2 := @parameter2: int",
            "$i0 = r0.<org.javacc.parser.NfaState: int onlyChar>",
            "if $i0 != 1 goto $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5)",
            "$c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5)",
            "$z0 = virtualinvoke r0.<org.javacc.parser.NfaState: boolean CanMoveUsingChar(char)>($c1)",
            "if $z0 == 0 goto i5 = i5 + 1",
            "return i5"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseEngine__genReturn__-616233140\\1618.smt2",
        "z3": {
            "memory": 30765056,
            "run_time": 0.0858612060546875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3038:\r\n  ;;   var3038!val!0 var3038!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3038!val!0 () var3038)\r\n  (declare-fun var3038!val!1 () var3038)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3038)) (or (= x var3038!val!0) (= x var3038!val!1)))\r\n  ;; -----------\r\n  (define-fun var1362 () String\r\n    \"true\")\r\n  (define-fun var1645 () var3038\r\n    var3038!val!0)\r\n  (define-fun var610 () String\r\n    \"true\")\r\n  (define-fun var1503 () String\r\n    (str.++ var1400!1 \"return \" \"true\" \";\"))\r\n  (define-fun var454 () String\r\n    (str.++ var1400!1 \"return \" \"true\" \";\"))\r\n  (define-fun var81 () String\r\n    (str.++ var1400!1 \"return \" \"true\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var377 () Bool\r\n    var1406_getDebugLookahead/-1551651829)\r\n  (define-fun null-var3038 () var3038\r\n    var3038!val!1)\r\n  (define-fun var2488 () String\r\n    (str.++ var1400!1 \"return \"))\r\n  (define-fun var1400 () String\r\n    String-init)\r\n  (define-fun var81!1 () String\r\n    \"return true;\")\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var1406_getDebugLookahead/-1551651829 () Bool\r\n    false)\r\n  (define-fun var2488!1 () String\r\n    \"return true\")\r\n  (define-fun var1400!1 () String\r\n    \"\")\r\n  (define-fun var1400!2 () String\r\n    \"return \")\r\n  (define-fun var101 () Bool\r\n    true)\r\n  (define-fun String-init () String\r\n    \"\")\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10489856,
            "run_time": 0.01611185073852539,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3038 is 2\r\n; rep: (as @var3038_0 var3038)\r\n; rep: (as @var3038_1 var3038)\r\n; cardinality of var1406 is 1\r\n; rep: (as @var1406_0 var1406)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1406_getDebugLookahead/-1551651829 () Bool false)\r\n(define-fun String-init () String \"\")\r\n(define-fun null-var3038 () var3038 (as @var3038_0 var3038))\r\n(define-fun null-Bool () Bool false)\r\n(define-fun var1645 () var3038 (as @var3038_1 var3038))\r\n(define-fun var101 () Bool true)\r\n(define-fun var1400!1 () String \"\")\r\n(define-fun var1400!2 () String \"return \")\r\n(define-fun var2488!1 () String \"return true\")\r\n(define-fun var81!1 () String \"return true;\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36470784,
            "run_time": 0.04683399200439453,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3038:\n  ;;   var3038!val!0 var3038!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3038!val!0 () var3038)\n  (declare-fun var3038!val!1 () var3038)\n  ;; cardinality constraint:\n  (forall ((x var3038)) (or (= x var3038!val!0) (= x var3038!val!1)))\n  ;; -----------\n  (define-fun var377 () Bool\n    var1406_getDebugLookahead/-1551651829)\n  (define-fun var610 () String\n    \"true\")\n  (define-fun var1645 () var3038\n    var3038!val!0)\n  (define-fun var81 () String\n    (str.++ var1400!1 \"return \" \"true\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2488 () String\n    (str.++ var1400!1 \"return \"))\n  (define-fun var1400 () String\n    String-init)\n  (define-fun null-var3038 () var3038\n    var3038!val!1)\n  (define-fun var454 () String\n    (str.++ var1400!1 \"return \" \"true\" \";\"))\n  (define-fun var1503 () String\n    (str.++ var1400!1 \"return \" \"true\" \";\"))\n  (define-fun var1362 () String\n    \"true\")\n  (define-fun var81!1 () String\n    \"return true;\")\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun var1406_getDebugLookahead/-1551651829 () Bool\n    false)\n  (define-fun var2488!1 () String\n    \"return true\")\n  (define-fun var1400!1 () String\n    \"\")\n  (define-fun var1400!2 () String\n    \"return \")\n  (define-fun var101 () Bool\n    true)\n  (define-fun String-init () String\n    \"\")\n)\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180117504,
            "run_time": 0.8070194721221924,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var81!1 () String \"return true;\")\r\n  (define-fun var2488!1 () String \"return true\")\r\n  (define-fun var1400!2 () String \"return \")\r\n  (define-fun var1400!1 () String \"\")\r\n  (define-fun var1645 () var3038 var3038!4)\r\n  (define-fun null-var3038 () var3038 var3038!2)\r\n  (define-fun var101 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n  (define-fun var1406_getDebugLookahead/-1551651829 () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r6 := @this: org.javacc.parser.ParseEngine",
            "z0 := @parameter0: boolean",
            "if z0 == 0 goto $r30 = \"false\"",
            "$r30 = \"true\"",
            "goto [?= r0 = $r30]",
            "r0 = $r30",
            "$z1 = staticinvoke <org.javacc.parser.Options: boolean getDebugLookahead()>()",
            "if $z1 == 0 goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"return \")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\";\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__getFirstValidPos__823987822\\1417.smt2",
        "z3": {
            "memory": 31514624,
            "run_time": 0.061448097229003906,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2838:\r\n  ;;   var2838!val!0 var2838!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2838!val!0 () var2838)\r\n  (declare-fun var2838!val!1 () var2838)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2838)) (or (= x var2838!val!0) (= x var2838!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2838 () var2838\r\n    var2838!val!1)\r\n  (define-fun var1859 () Int\r\n    2)\r\n  (define-fun var2450 () String\r\n    \"\\u{1ff7f}\")\r\n  (define-fun var515 () Int\r\n    (str.to_code (str.at var2450 var2587)))\r\n  (define-fun var2587 () Int\r\n    0)\r\n  (define-fun var1377 () var2838\r\n    var2838!val!0)\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2078 () Int\r\n    (onlyChar/1847772117 var1377))\r\n  (define-fun var2384 () Bool\r\n    (CanMoveUsingChar/-243996437 var1377 (str.to_code (str.at var2450 var2587))))\r\n  (define-fun CanMoveUsingChar/-243996437 ((x!0 var2838) (x!1 Int)) Bool\r\n    true)\r\n  (define-fun onlyChar/1847772117 ((x!0 var2838)) Int\r\n    3)\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10313728,
            "run_time": 0.04678153991699219,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2838 is 2\r\n; rep: (as @var2838_0 var2838)\r\n; rep: (as @var2838_1 var2838)\r\n; cardinality of var2046 is 1\r\n; rep: (as @var2046_0 var2046)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun onlyChar/1847772117 ((_arg_1 var2838)) Int 0)\r\n(define-fun CanMoveUsingChar/-243996437 ((_arg_1 var2838) (_arg_2 Int)) Bool true)\r\n(define-fun null-var2838 () var2838 (as @var2838_0 var2838))\r\n(define-fun null-String () String \"\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1377 () var2838 (as @var2838_1 var2838))\r\n(define-fun var2450 () String \"\\u{0}\")\r\n(define-fun var2587 () Int 0)\r\n(define-fun var1859 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37650432,
            "run_time": 0.07811808586120605,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2838:\n  ;;   var2838!val!0 var2838!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2838!val!0 () var2838)\n  (declare-fun var2838!val!1 () var2838)\n  ;; cardinality constraint:\n  (forall ((x var2838)) (or (= x var2838!val!0) (= x var2838!val!1)))\n  ;; -----------\n  (define-fun var2384 () Bool\n    (CanMoveUsingChar/-243996437 var1377 (str.to_code (str.at var2450 var2587))))\n  (define-fun null-var2838 () var2838\n    var2838!val!1)\n  (define-fun var1859 () Int\n    3)\n  (define-fun null-Int () Int\n    2)\n  (define-fun var2450 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var515 () Int\n    (str.to_code (str.at var2450 var2587)))\n  (define-fun var2078 () Int\n    (onlyChar/1847772117 var1377))\n  (define-fun var2587 () Int\n    1)\n  (define-fun var1377 () var2838\n    var2838!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun CanMoveUsingChar/-243996437 ((x!0 var2838) (x!1 Int)) Bool\n    true)\n  (define-fun onlyChar/1847772117 ((x!0 var2838)) Int\n    4)\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168529920,
            "run_time": 0.807884931564331,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_22_1, all_22_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.NfaState__getFirstValidPos__823987822\\1417.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n566ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.NfaState",
            "r1 := @parameter0: java.lang.String",
            "i5 := @parameter1: int",
            "i2 := @parameter2: int",
            "$i0 = r0.<org.javacc.parser.NfaState: int onlyChar>",
            "if $i0 != 1 goto $c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5)",
            "$c1 = virtualinvoke r1.<java.lang.String: char charAt(int)>(i5)",
            "$z0 = virtualinvoke r0.<org.javacc.parser.NfaState: boolean CanMoveUsingChar(char)>($c1)",
            "if $z0 == 0 goto i5 = i5 + 1",
            "return i5"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseEngine__genReturn__-616233140\\1643.smt2",
        "z3": {
            "memory": 15581184,
            "run_time": 0.045259714126586914,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1032:\r\n  ;;   var1032!val!1 var1032!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1032!val!1 () var1032)\r\n  (declare-fun var1032!val!0 () var1032)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1032)) (or (= x var1032!val!1) (= x var1032!val!0)))\r\n  ;; -----------\r\n  (define-fun var2563 () String\r\n    (str.++ var1305!1 \"return \" \"false\" \";\"))\r\n  (define-fun null-var1032 () var1032\r\n    var1032!val!1)\r\n  (define-fun var204 () String\r\n    \"false\")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1955 () String\r\n    \"false\")\r\n  (define-fun var1305 () String\r\n    String-init)\r\n  (define-fun var765 () String\r\n    (str.++ var1305!1 \"return \"))\r\n  (define-fun var1694 () var1032\r\n    var1032!val!0)\r\n  (define-fun var2369 () String\r\n    (str.++ var1305!1 \"return \" \"false\" \";\"))\r\n  (define-fun var1479 () Bool\r\n    var1741_getDebugLookahead/-1551651829)\r\n  (define-fun var3715 () String\r\n    (str.++ var1305!1 \"return \" \"false\"))\r\n  (define-fun var1305!2 () String\r\n    \"return \")\r\n  (define-fun null-Bool () Bool\r\n    true)\r\n  (define-fun var1741_getDebugLookahead/-1551651829 () Bool\r\n    false)\r\n  (define-fun var3715!1 () String\r\n    \"return false;\")\r\n  (define-fun var1305!1 () String\r\n    \"\")\r\n  (define-fun var3460 () Bool\r\n    false)\r\n  (define-fun var765!1 () String\r\n    \"return false\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10297344,
            "run_time": 0.015249013900756836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1032 is 2\r\n; rep: (as @var1032_0 var1032)\r\n; rep: (as @var1032_1 var1032)\r\n; cardinality of var1741 is 1\r\n; rep: (as @var1741_0 var1741)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1741_getDebugLookahead/-1551651829 () Bool false)\r\n(define-fun String-init () String \"\")\r\n(define-fun null-var1032 () var1032 (as @var1032_0 var1032))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var1694 () var1032 (as @var1032_1 var1032))\r\n(define-fun var3460 () Bool false)\r\n(define-fun var1305!1 () String \"\")\r\n(define-fun var1305!2 () String \"return \")\r\n(define-fun var765!1 () String \"return false\")\r\n(define-fun var3715!1 () String \"return false;\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35786752,
            "run_time": 0.07710051536560059,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1032:\n  ;;   var1032!val!1 var1032!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1032!val!1 () var1032)\n  (declare-fun var1032!val!0 () var1032)\n  ;; cardinality constraint:\n  (forall ((x var1032)) (or (= x var1032!val!1) (= x var1032!val!0)))\n  ;; -----------\n  (define-fun var1479 () Bool\n    var1741_getDebugLookahead/-1551651829)\n  (define-fun var204 () String\n    \"false\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1305 () String\n    String-init)\n  (define-fun null-var1032 () var1032\n    var1032!val!1)\n  (define-fun var1955 () String\n    \"false\")\n  (define-fun var765 () String\n    (str.++ var1305!1 \"return \"))\n  (define-fun var3715 () String\n    (str.++ var1305!1 \"return \" \"false\"))\n  (define-fun var2369 () String\n    (str.++ var1305!1 \"return \" \"false\" \";\"))\n  (define-fun var2563 () String\n    (str.++ var1305!1 \"return \" \"false\" \";\"))\n  (define-fun var1694 () var1032\n    var1032!val!0)\n  (define-fun var1305!2 () String\n    \"return \")\n  (define-fun null-Bool () Bool\n    true)\n  (define-fun var1741_getDebugLookahead/-1551651829 () Bool\n    false)\n  (define-fun var3715!1 () String\n    \"return false;\")\n  (define-fun var1305!1 () String\n    \"\")\n  (define-fun var3460 () Bool\n    false)\n  (define-fun var765!1 () String\n    \"return false\")\n  (define-fun String-init () String\n    \"\")\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182104064,
            "run_time": 0.8203179836273193,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3715!1 () String \"return false;\")\r\n  (define-fun var765!1 () String \"return false\")\r\n  (define-fun var1305!2 () String \"return \")\r\n  (define-fun var1305!1 () String \"\")\r\n  (define-fun var1694 () var1032 var1032!4)\r\n  (define-fun null-var1032 () var1032 var1032!2)\r\n  (define-fun null-Bool () Bool true)\r\n  (define-fun var3460 () Bool false)\r\n  (define-fun var1741_getDebugLookahead/-1551651829 () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r6 := @this: org.javacc.parser.ParseEngine",
            "z0 := @parameter0: boolean",
            "if z0 == 0 goto $r30 = \"false\"",
            "$r30 = \"false\"",
            "r0 = $r30",
            "$z1 = staticinvoke <org.javacc.parser.Options: boolean getDebugLookahead()>()",
            "if $z1 == 0 goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"return \")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\";\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseEngine__phase1ExpansionGen__-924287377\\1521.smt2",
        "z3": {
            "memory": 10498048,
            "run_time": 0.046396732330322266,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 74 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10321920,
            "run_time": 0.015544891357421875,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35901440,
            "run_time": 0.046721458435058594,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 74 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165146624,
            "run_time": 0.6339142322540283,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r8 := @this: org.javacc.parser.ParseEngine",
            "r0 := @parameter0: org.javacc.parser.Expansion",
            "r371 = \"\"",
            "r372 = null",
            "$z0 = r0 instanceof org.javacc.parser.RegularExpression",
            "if $z0 == 0 goto $z1 = r0 instanceof org.javacc.parser.NonTerminal",
            "$z1 = r0 instanceof org.javacc.parser.NonTerminal",
            "if $z1 == 0 goto $z2 = r0 instanceof org.javacc.parser.Action",
            "$z2 = r0 instanceof org.javacc.parser.Action",
            "if $z2 == 0 goto $z3 = r0 instanceof org.javacc.parser.Choice",
            "r387 = (org.javacc.parser.Action) r0",
            "$r247 = new java.lang.StringBuilder",
            "specialinvoke $r247.<java.lang.StringBuilder: void <init>()>()",
            "$r248 = virtualinvoke $r247.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")",
            "$r249 = virtualinvoke $r248.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\u0003\\n\")",
            "r388 = virtualinvoke $r249.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$z30 = staticinvoke <org.javacc.parser.Options: boolean booleanValue(java.lang.String)>(\"IGNORE_ACTIONS\")",
            "if $z30 != 0 goto $r390 = new java.lang.StringBuilder",
            "$r390 = new java.lang.StringBuilder",
            "specialinvoke $r390.<java.lang.StringBuilder: void <init>()>()",
            "$r391 = virtualinvoke $r390.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r388)",
            "$r392 = virtualinvoke $r391.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\u0004\")",
            "r371 = virtualinvoke $r392.<java.lang.StringBuilder: java.lang.String toString()>()",
            "goto [?= return r371]",
            "return r371"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseException__add_escapes__-184456034\\1283.smt2",
        "z3": {
            "memory": 31776768,
            "run_time": 0.060250282287597656,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3764 () Int\r\n    (str.len var607))\r\n  (define-fun var575 () Int\r\n    0)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3597 () String\r\n    String-init)\r\n  (define-fun var3557 () String\r\n    var3597!1)\r\n  (define-fun var607 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3597!1 () String\r\n    \"\")\r\n  (define-fun <init>/-1430969082 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10252288,
            "run_time": 0.016057491302490234,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3829 is 1\r\n; rep: (as @var3829_0 var3829)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1430969082 ((BOUND_VARIABLE_530 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var607 () String \"\")\r\n(define-fun var3597!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37076992,
            "run_time": 0.04513072967529297,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var575 () Int\n    0)\n  (define-fun var3597 () String\n    String-init)\n  (define-fun var3557 () String\n    var3597!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var607 () String\n    \"\")\n  (define-fun var3764 () Int\n    (str.len var607))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3597!1 () String\n    \"\")\n  (define-fun <init>/-1430969082 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151224320,
            "run_time": 0.6333255767822266,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var607 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r13 = new java.lang.StringBuffer",
            "specialinvoke $r13.<java.lang.StringBuffer: void <init>()>()",
            "i6 = 0",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "if i6 >= $i0 goto $r2 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r2 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseException__initialise__-568484330\\1234.smt2",
        "z3": {
            "memory": 30507008,
            "run_time": 0.04409074783325195,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 145 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10289152,
            "run_time": 0.016066789627075195,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36085760,
            "run_time": 0.04677748680114746,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 145 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 197656576,
            "run_time": 0.9971847534179688,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 51,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 12,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 4,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @parameter0: org.javacc.parser.Token",
            "r2 := @parameter1: int[][]",
            "r33 := @parameter2: java.lang.String[]",
            "r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"line.separator\", \"\\n\")",
            "$r1 = new java.lang.StringBuffer",
            "specialinvoke $r1.<java.lang.StringBuffer: void <init>()>()",
            "i11 = 0",
            "i12 = 0",
            "$i0 = lengthof r2",
            "if i12 >= $i0 goto r66 = \"Encountered \\\"\"",
            "r66 = \"Encountered \\\"\"",
            "r67 = r3.<org.javacc.parser.Token: org.javacc.parser.Token next>",
            "i15 = 0",
            "if i15 >= i11 goto $r4 = new java.lang.StringBuilder",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r66)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" at line \")",
            "$r6 = r3.<org.javacc.parser.Token: org.javacc.parser.Token next>",
            "$i1 = $r6.<org.javacc.parser.Token: int beginLine>",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", column \")",
            "$r9 = r3.<org.javacc.parser.Token: org.javacc.parser.Token next>",
            "$i2 = $r9.<org.javacc.parser.Token: int beginColumn>",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)",
            "$r52 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r53 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i3 = lengthof r2",
            "if $i3 != 1 goto $r16 = new java.lang.StringBuilder",
            "$r25 = new java.lang.StringBuilder",
            "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53)",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Was expecting:\")",
            "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")",
            "r71 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()",
            "goto [?= $r21 = new java.lang.StringBuilder]",
            "$r21 = new java.lang.StringBuilder",
            "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()",
            "$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r22 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r30 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r30"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.LexGen__DumpTokenActions__-464141543\\1589.smt2",
        "z3": {
            "memory": 33251328,
            "run_time": 60.01198983192444,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14581760,
            "run_time": 60.00451421737671,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36802560,
            "run_time": 60.011913537979126,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175579136,
            "run_time": 0.8490710258483887,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1309/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.LexGen__DumpTokenActions__-464141543\\1589.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_32_0 =\r\n     concat(var1309-staticString, \"void TokenLexicalActions(Token matchedToken)\")\r\n   var3193!1 =\r\n     concat(var1309-staticString, \"void TokenLexicalActions(Token matchedToken)\")\r\n\r\n623ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 34,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.LexGen",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = <org.javacc.parser.LexGen: java.lang.String staticString>",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"void TokenLexicalActions(Token matchedToken)\")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r6",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r1)",
            "$r7 = newarray (java.lang.Object)[1]",
            "$r7[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r7)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"   switch(jjmatchedKind)\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r8)",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r9[0] = \"   {\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r9)",
            "i18 = 0",
            "$i0 = <org.javacc.parser.LexGen: int maxOrdinal>",
            "if i18 >= $i0 goto $r10 = newarray (java.lang.Object)[1]",
            "$r10 = newarray (java.lang.Object)[1]",
            "$r10[0] = \"      default :\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r10)",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \"         break;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r11)",
            "$r12 = newarray (java.lang.Object)[1]",
            "$r12[0] = \"   }\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r12)",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r13[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r13)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.OutputFile__\u300ainit\u300b__-19591195\\1134.smt2",
        "z3": {
            "memory": 32542720,
            "run_time": 60.00051951408386,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10858496,
            "run_time": 0.014715909957885742,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var372 is 8\r\n; rep: (as @var372_0 var372)\r\n; rep: (as @var372_1 var372)\r\n; rep: (as @var372_2 var372)\r\n; rep: (as @var372_3 var372)\r\n; rep: (as @var372_4 var372)\r\n; rep: (as @var372_5 var372)\r\n; rep: (as @var372_6 var372)\r\n; rep: (as @var372_7 var372)\r\n; cardinality of var1878 is 2\r\n; rep: (as @var1878_0 var1878)\r\n; rep: (as @var1878_1 var1878)\r\n; cardinality of var1661 is 1\r\n; rep: (as @var1661_0 var1661)\r\n; cardinality of var878 is 1\r\n; rep: (as @var878_0 var878)\r\n; cardinality of var1813 is 1\r\n; rep: (as @var1813_0 var1813)\r\n; cardinality of var3951 is 1\r\n; rep: (as @var3951_0 var3951)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun <init>/-279557996 ((BOUND_VARIABLE_944 var878)) void (as @void_0 void))\r\n(define-fun cast-from-var372-to-var878 ((BOUND_VARIABLE_947 var372)) var878 (as @var878_0 var878))\r\n(define-fun toolName/-884741558 ((_arg_1 var372)) String \"JavaCC\")\r\n(define-fun needToWrite/-884741558 ((_arg_1 var372)) Bool true)\r\n(define-fun file/-884741558 ((_arg_1 var372)) var1878 (as @var1878_1 var1878))\r\n(define-fun compatibleVersion/-884741558 ((_arg_1 var372)) String \"\")\r\n(define-fun options/-884741558 ((_arg_1 var372)) (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun exists/1072868559 ((_arg_1 var1878)) Bool false)\r\n(define-fun String-init () String \"\")\r\n(define-fun getName/1128186653 ((BOUND_VARIABLE_950 var1878)) String \"\")\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_953 var1813) (BOUND_VARIABLE_954 String)) void (as @void_0 void))\r\n(define-fun null-var372 () var372 (as @var372_0 var372))\r\n(define-fun null-var1878 () var1878 (as @var1878_0 var1878))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__String__ () (Array Int String) (store ((as const (Array Int String)) \"A\") 0 \"JavaCC\"))\r\n(define-fun var3951-out () var1813 (as @var1813_0 var1813))\r\n(define-fun var2828 () var372 (as @var372_1 var372))\r\n(define-fun var1552 () var1878 (as @var1878_1 var1878))\r\n(define-fun var144 () String \"\")\r\n(define-fun var2085 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var2828!1 () var372 (as @var372_0 var372))\r\n(define-fun var2828!2 () var372 (as @var372_2 var372))\r\n(define-fun var2828!3 () var372 (as @var372_3 var372))\r\n(define-fun var2828!4 () var372 (as @var372_4 var372))\r\n(define-fun var2828!5 () var372 (as @var372_5 var372))\r\n(define-fun var2828!6 () var372 (as @var372_6 var372))\r\n(define-fun var115!1 () String \"\")\r\n(define-fun var115!2 () String \"File \"\"\")\r\n(define-fun var318!1 () String \"File \"\"\")\r\n(define-fun var1731!1 () String \"File \"\"\"\" does not exist.  Will create one.\")\r\n(define-fun var2441!1 () var1813 (as @var1813_0 var1813))\r\n(define-fun var896!1 () String \"\")\r\n(define-fun var2828!7 () var372 (as @var372_7 var372))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37048320,
            "run_time": 0.046826839447021484,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 96 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 97 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 183042048,
            "run_time": 0.8502786159515381,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1878/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.OutputFile__init__-19591195\\1134.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_33_4 =\r\n     concat(all_33_5, \"\\u{0}22 does not exist.  Will create one.\")\r\n   var1731!1 =\r\n     concat(all_30_4, \"\\u{0}22 does not exist.  Will create one.\")\r\n   var318!1 =\r\n     concat(\"File \\u{0}22\", all_27_3)\r\n   all_33_5 =\r\n     concat(\"File \\u{0}22\", all_27_3)\r\n   all_30_4 =\r\n     concat(\"File \\u{0}22\", all_27_3)\r\n\r\n627ms\r\n"
        },
        "undefined_function_count": 11,
        "assertion_count": 31,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.OutputFile",
            "r1 := @parameter0: java.io.File",
            "r2 := @parameter1: java.lang.String",
            "r3 := @parameter2: java.lang.String[]",
            "specialinvoke r0.<java.lang.Object: void <init>()>()",
            "r0.<org.javacc.parser.OutputFile: java.lang.String toolName> = \"JavaCC\"",
            "r0.<org.javacc.parser.OutputFile: boolean needToWrite> = 1",
            "r0.<org.javacc.parser.OutputFile: java.io.File file> = r1",
            "r0.<org.javacc.parser.OutputFile: java.lang.String compatibleVersion> = r2",
            "r0.<org.javacc.parser.OutputFile: java.lang.String[] options> = r3",
            "$z0 = virtualinvoke r1.<java.io.File: boolean exists()>()",
            "if $z0 == 0 goto $r5 = <java.lang.System: java.io.PrintStream out>",
            "$r5 = <java.lang.System: java.io.PrintStream out>",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"File \\\"\")",
            "$r6 = virtualinvoke r1.<java.io.File: java.lang.String getName()>()",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" does not exist.  Will create one.\")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r5.<java.io.PrintStream: void println(java.lang.String)>($r10)",
            "r0.<org.javacc.parser.OutputFile: boolean needToWrite> = 1",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__isOutputLanguageCpp__7744624\\2157.smt2",
        "z3": {
            "memory": 32092160,
            "run_time": 60.00463533401489,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10297344,
            "run_time": 0.013909339904785156,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1115 is 1\r\n; rep: (as @var1115_0 var1115)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1115_getOutputLanguage/-1523304050 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35979264,
            "run_time": 60.009870529174805,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169373696,
            "run_time": 0.6797020435333252,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 1,
        "api_sequence": [
            "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>": 1
        },
        "jimple_statements": [
            "$r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"c++\")",
            "return $z0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__tryTokenSequence__-634653736\\826.smt2",
        "z3": {
            "memory": 32112640,
            "run_time": 60.00767922401428,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10272768,
            "run_time": 0.015224933624267578,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3154 is 2\r\n; rep: (as @var3154_0 var3154)\r\n; rep: (as @var3154_1 var3154)\r\n; cardinality of var2134 is 3\r\n; rep: (as @var2134_0 var2134)\r\n; rep: (as @var2134_1 var2134)\r\n; rep: (as @var2134_2 var2134)\r\n; cardinality of var2753 is 2\r\n; rep: (as @var2753_0 var2753)\r\n; rep: (as @var2753_1 var2753)\r\n; cardinality of var112 is 1\r\n; rep: (as @var112_0 var112)\r\n; cardinality of var1032 is 3\r\n; rep: (as @var1032_0 var1032)\r\n; rep: (as @var1032_1 var1032)\r\n; rep: (as @var1032_2 var1032)\r\n; cardinality of var3492 is 1\r\n; rep: (as @var3492_0 var3492)\r\n; cardinality of var3374 is 1\r\n; rep: (as @var3374_0 var3374)\r\n; cardinality of var3795 is 1\r\n; rep: (as @var3795_0 var3795)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_867 var2753) (BOUND_VARIABLE_868 String)) void (as @void_0 void))\r\n(define-fun var3154_closeJJTreeComment/367463215 ((BOUND_VARIABLE_871 var2753)) void (as @void_0 void))\r\n(define-fun next/-1103324373 ((_arg_1 var1032)) var1032 (as @var1032_2 var1032))\r\n(define-fun var3154_openJJTreeComment/-1832418392 ((BOUND_VARIABLE_874 var2753) (BOUND_VARIABLE_875 String)) void (as @void_0 void))\r\n(define-fun println/2032072932 ((BOUND_VARIABLE_878 var2753)) void (as @void_0 void))\r\n(define-fun production/-576648796 ((BOUND_VARIABLE_881 var2134)) var3492 (as @var3492_0 var3492))\r\n(define-fun throws_list/-165013491 ((BOUND_VARIABLE_884 var3492)) var3374 (as @var3374_0 var3374))\r\n(define-fun elements/2003039976 ((BOUND_VARIABLE_887 var3374)) var3795 (as @var3795_0 var3795))\r\n(define-fun insertCatchBlocks/-1244466602 ((BOUND_VARIABLE_890 var3154) (BOUND_VARIABLE_891 var2134) (BOUND_VARIABLE_892 var2753) (BOUND_VARIABLE_893 var3795) (BOUND_VARIABLE_894 String)) void (as @void_0 void))\r\n(define-fun usesCloseNodeVar/-1769174946 ((_arg_1 var2134)) Bool false)\r\n(define-fun null-var3154 () var3154 (as @var3154_0 var3154))\r\n(define-fun null-var2134 () var2134 (as @var2134_0 var2134))\r\n(define-fun null-var2753 () var2753 (as @var2753_0 var2753))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1032 () var1032 (as @var1032_0 var1032))\r\n(define-fun var1120 () var3154 (as @var3154_1 var3154))\r\n(define-fun var1238 () var2134 (as @var2134_1 var2134))\r\n(define-fun var3538 () var2753 (as @var2753_1 var2753))\r\n(define-fun var3841 () String \"\")\r\n(define-fun var2429 () var1032 (as @var1032_2 var1032))\r\n(define-fun var3042 () var1032 (as @var1032_1 var1032))\r\n(define-fun var1565!1 () String \"\")\r\n(define-fun var1565!2 () String \"\")\r\n(define-fun var118!1 () String \"try {\")\r\n(define-fun var3538!1 () var2753 (as @var2753_0 var2753))\r\n(define-fun var1924!1 () String \"\")\r\n(define-fun var3538!2 () var2753 (as @var2753_0 var2753))\r\n(define-fun var3538!3 () var2753 (as @var2753_0 var2753))\r\n(define-fun var585 () var112 (as @var112_0 var112))\r\n(define-fun var3538!4 () var2753 (as @var2753_0 var2753))\r\n(define-fun var1120!1 () var3154 (as @var3154_0 var3154))\r\n(define-fun var1238!1 () var2134 (as @var2134_2 var2134))\r\n(define-fun var3538!5 () var2753 (as @var2753_0 var2753))\r\n(define-fun var649!1 () var3795 (as @var3795_0 var3795))\r\n(define-fun var3841!1 () String \"\")\r\n(define-fun var733!1 () String \"\")\r\n(define-fun var733!2 () String \"\")\r\n(define-fun var3065!1 () String \"} {\")\r\n(define-fun var3538!6 () var2753 (as @var2753_0 var2753))\r\n(define-fun var1511!1 () String \"\")\r\n(define-fun var91!1 () String \"\")\r\n(define-fun var91!2 () String \"\")\r\n(define-fun var3571!1 () String \"}\")\r\n(define-fun var3538!7 () var2753 (as @var2753_0 var2753))\r\n(define-fun var2302!1 () String \"\")\r\n(define-fun var3538!8 () var2753 (as @var2753_0 var2753))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37396480,
            "run_time": 60.010475158691406,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179302400,
            "run_time": 0.7918498516082764,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2134/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPCodeGenerator__tryTokenSequence__-634653736\\826.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3571!1 =\r\n     concat(var3841!1, \"}\")\r\n   var3065!1 =\r\n     concat(var3841!1, \"} {\")\r\n   var118!1 =\r\n     concat(var3841, \"try {\")\r\n\r\n553ms\r\n"
        },
        "undefined_function_count": 11,
        "assertion_count": 37,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r12 := @this: org.javacc.jjtree.CPPCodeGenerator",
            "r9 := @parameter0: org.javacc.jjtree.NodeScope",
            "r0 := @parameter1: org.javacc.jjtree.IO",
            "r2 := @parameter2: java.lang.String",
            "r6 := @parameter3: org.javacc.jjtree.Token",
            "r7 := @parameter4: org.javacc.jjtree.Token",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"try {\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r5)",
            "staticinvoke <org.javacc.jjtree.CPPCodeGenerator: void closeJJTreeComment(org.javacc.jjtree.IO)>(r0)",
            "r37 = r6",
            "$r8 = r7.<org.javacc.jjtree.Token: org.javacc.jjtree.Token next>",
            "if r37 == $r8 goto staticinvoke <org.javacc.jjtree.CPPCodeGenerator: void openJJTreeComment(org.javacc.jjtree.IO,java.lang.String)>(r0, null)",
            "staticinvoke <org.javacc.jjtree.CPPCodeGenerator: void openJJTreeComment(org.javacc.jjtree.IO,java.lang.String)>(r0, null)",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println()>()",
            "$r10 = r9.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTProduction production>",
            "$r11 = $r10.<org.javacc.jjtree.ASTProduction: java.util.Vector throws_list>",
            "r38 = virtualinvoke $r11.<java.util.Vector: java.util.Enumeration elements()>()",
            "specialinvoke r12.<org.javacc.jjtree.CPPCodeGenerator: void insertCatchBlocks(org.javacc.jjtree.NodeScope,org.javacc.jjtree.IO,java.util.Enumeration,java.lang.String)>(r9, r0, r38, r2)",
            "$r13 = new java.lang.StringBuilder",
            "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"} {\")",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r16)",
            "$z0 = virtualinvoke r9.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()",
            "if $z0 == 0 goto $r17 = new java.lang.StringBuilder",
            "$r17 = new java.lang.StringBuilder",
            "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"}\")",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r20)",
            "staticinvoke <org.javacc.jjtree.CPPCodeGenerator: void closeJJTreeComment(org.javacc.jjtree.IO)>(r0)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__DumpMoveNfa__819989749\\2851.smt2",
        "z3": {
            "memory": 32382976,
            "run_time": 60.00911474227905,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14209024,
            "run_time": 60.008023500442505,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36769792,
            "run_time": 60.013898611068726,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176312320,
            "run_time": 1.0196738243103027,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var912/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.NfaState__DumpMoveNfa__819989749\\2851.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_51_4 =\r\n     concat(all_51_5, \"(int startState, int curPos)\")\r\n   var2256!1 =\r\n     concat(all_48_4, \"(int startState, int curPos)\")\r\n   var283!1 =\r\n     concat(\"jjMoveNfa\", var130-lexStateSuffix)\r\n   all_51_5 =\r\n     concat(\"jjMoveNfa\", var130-lexStateSuffix)\r\n   all_48_4 =\r\n     concat(\"jjMoveNfa\", var130-lexStateSuffix)\r\n\r\n779ms\r\n"
        },
        "undefined_function_count": 11,
        "assertion_count": 34,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r5 := @parameter0: org.javacc.parser.CodeGenerator",
            "r159 = null",
            "$r0 = <org.javacc.parser.NfaState: int[][] kinds>",
            "if $r0 != null goto staticinvoke <org.javacc.parser.NfaState: void ReArrange()>()",
            "staticinvoke <org.javacc.parser.NfaState: void ReArrange()>()",
            "i28 = 0",
            "$r160 = <org.javacc.parser.NfaState: java.util.List allStates>",
            "$i29 = interfaceinvoke $r160.<java.util.List: int size()>()",
            "if i28 >= $i29 goto $r1 = <org.javacc.parser.NfaState: java.util.Hashtable stateNameForComposite>",
            "$r1 = <org.javacc.parser.NfaState: java.util.Hashtable stateNameForComposite>",
            "r162 = virtualinvoke $r1.<java.util.Hashtable: java.util.Enumeration keys()>()",
            "$z0 = interfaceinvoke r162.<java.util.Enumeration: boolean hasMoreElements()>()",
            "if $z0 == 0 goto $r2 = <org.javacc.parser.NfaState: java.util.Hashtable stateSetsToFix>",
            "$r2 = <org.javacc.parser.NfaState: java.util.Hashtable stateSetsToFix>",
            "$i0 = virtualinvoke $r2.<java.util.Hashtable: int size()>()",
            "if $i0 == 0 goto $r4 = <org.javacc.parser.NfaState: int[][] kinds>",
            "$r4 = <org.javacc.parser.NfaState: int[][] kinds>",
            "$r3 = <org.javacc.parser.Main: org.javacc.parser.LexGen lg>",
            "$i1 = <org.javacc.parser.LexGen: int lexStateIndex>",
            "$r4[$i1] = r159",
            "$z1 = virtualinvoke r5.<org.javacc.parser.CodeGenerator: boolean isJavaLanguage()>()",
            "if $z1 == 0 goto $r6 = <org.javacc.parser.Main: org.javacc.parser.LexGen lg>",
            "$r6 = <org.javacc.parser.Main: org.javacc.parser.LexGen lg>",
            "$r8 = <org.javacc.parser.LexGen: java.lang.String tokMgrClassName>",
            "$r226 = new java.lang.StringBuilder",
            "specialinvoke $r226.<java.lang.StringBuilder: void <init>()>()",
            "$r11 = virtualinvoke $r226.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"jjMoveNfa\")",
            "$r9 = <org.javacc.parser.Main: org.javacc.parser.LexGen lg>",
            "$r10 = <org.javacc.parser.LexGen: java.lang.String lexStateSuffix>",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(int startState, int curPos)\")",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r5.<org.javacc.parser.CodeGenerator: void generateMethodDefHeader(java.lang.String,java.lang.String,java.lang.String)>(\"int\", $r8, $r14)",
            "$r15 = newarray (java.lang.Object)[1]",
            "$r15[0] = \"{\"",
            "virtualinvoke r5.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r15)",
            "$i2 = <org.javacc.parser.NfaState: int generatedStates>",
            "if $i2 != 0 goto $r16 = <org.javacc.parser.Main: org.javacc.parser.LexGen lg>",
            "$r122 = newarray (java.lang.Object)[1]",
            "$r122[0] = \"   return curPos;\"",
            "virtualinvoke r5.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r122)",
            "$r123 = newarray (java.lang.Object)[1]",
            "$r123[0] = \"}\"",
            "virtualinvoke r5.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r123)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseEngine__generate3R__373109272\\1680.smt2",
        "z3": {
            "memory": 32378880,
            "run_time": 60.01596021652222,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11317248,
            "run_time": 0.014791727066040039,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2654 is 2\r\n; rep: (as @var2654_0 var2654)\r\n; rep: (as @var2654_1 var2654)\r\n; cardinality of var3637 is 2\r\n; rep: (as @var3637_0 var3637)\r\n; rep: (as @var3637_1 var3637)\r\n; cardinality of var607 is 2\r\n; rep: (as @var607_0 var607)\r\n; rep: (as @var607_1 var607)\r\n; cardinality of var2422 is 1\r\n; rep: (as @var2422_0 var2422)\r\n; cardinality of var2644 is 2\r\n; rep: (as @var2644_0 var2644)\r\n; rep: (as @var2644_1 var2644)\r\n; cardinality of var2743 is 1\r\n; rep: (as @var2743_0 var2743)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun internal_name/-1632124174 ((_arg_1 var3637)) String \"A\")\r\n(define-fun phase3table/-1894308792 ((_arg_1 var2654)) var2422 (as @var2422_0 var2422))\r\n(define-fun get/-1721276195 ((_arg_1 var2422) (_arg_2 var2644)) var2644 (as @var2644_1 var2644))\r\n(define-fun cast-from-var3637-to-var2644 ((_arg_1 var3637)) var2644 (as @var2644_0 var2644))\r\n(define-fun cast-from-var2644-to-var607 ((_arg_1 var2644)) var607 (as @var607_1 var607))\r\n(define-fun var607-init () var607 (as @var607_0 var607))\r\n(define-fun count/36539919 ((BOUND_VARIABLE_636 var607)) Int 0)\r\n(define-fun <init>/-1277854481 ((BOUND_VARIABLE_639 var607) (BOUND_VARIABLE_640 var3637) (BOUND_VARIABLE_641 Int)) void (as @void_0 void))\r\n(define-fun phase3list/-1894308792 ((BOUND_VARIABLE_644 var2654)) var2743 (as @var2743_0 var2743))\r\n(define-fun var2743_add/328494887 ((BOUND_VARIABLE_647 var2743) (BOUND_VARIABLE_648 var2644)) Bool false)\r\n(define-fun cast-from-var607-to-var2644 ((BOUND_VARIABLE_651 var607)) var2644 (as @var2644_0 var2644))\r\n(define-fun put/1981026245 ((BOUND_VARIABLE_654 var2422) (BOUND_VARIABLE_655 var2644) (BOUND_VARIABLE_656 var2644)) var2644 (as @var2644_0 var2644))\r\n(define-fun null-var2654 () var2654 (as @var2654_0 var2654))\r\n(define-fun null-var3637 () var3637 (as @var3637_0 var3637))\r\n(define-fun null-var607 () var607 (as @var607_1 var607))\r\n(define-fun var1153 () var2654 (as @var2654_1 var2654))\r\n(define-fun var1497 () var3637 (as @var3637_1 var3637))\r\n(define-fun var1119 () var607 (as @var607_0 var607))\r\n(define-fun var567!1 () var607 (as @var607_0 var607))\r\n(define-fun var1497!1 () var3637 (as @var3637_0 var3637))\r\n(define-fun var35!1 () Int 0)\r\n(define-fun var3308!1 () var2743 (as @var2743_0 var2743))\r\n(define-fun var567!2 () var607 (as @var607_0 var607))\r\n(define-fun var3264!1 () var2422 (as @var2422_0 var2422))\r\n(define-fun var1497!2 () var3637 (as @var3637_0 var3637))\r\n(define-fun var567!3 () var607 (as @var607_0 var607))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36630528,
            "run_time": 0.045816898345947266,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 71 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 72 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167239680,
            "run_time": 0.8802392482757568,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1119 () var607 var607!12)\r\n  (define-fun var1497 () var3637 var3637!10)\r\n  (define-fun var1153 () var2654 var2654!8)\r\n  (define-fun null-var607 () var607 var607!6)\r\n  (define-fun null-var3637 () var3637 var3637!4)\r\n  (define-fun null-var2654 () var2654 var2654!2)\r\n  (define-fun var607!6 () var607 (cast-from-var2644-to-var607 var2644!38))\r\n  (define-fun var2644!36 () var2644 (cast-from-var3637-to-var2644 var3637!10))\r\n  (define-fun var2644!38 () var2644 (get/-1721276195 var2422!34 var2644!36))\r\n  (define-fun var2422!34 () var2422 (phase3table/-1894308792 var2654!8))\r\n  (define-fun internal_name/-1632124174 ((x!0 var3637)) String (ite (= x!0 var3637!10) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 12,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.parser.ParseEngine",
            "r0 := @parameter0: org.javacc.parser.Expansion",
            "r7 := @parameter1: org.javacc.parser.Phase3Data",
            "r38 = r0",
            "$r1 = r0.<org.javacc.parser.Expansion: java.lang.String internal_name>",
            "$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 == 0 goto $r3 = r2.<org.javacc.parser.ParseEngine: java.util.Hashtable phase3table>",
            "$r3 = r2.<org.javacc.parser.ParseEngine: java.util.Hashtable phase3table>",
            "$r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0)",
            "$r5 = (org.javacc.parser.Phase3Data) $r4",
            "$r21 = (org.javacc.parser.Phase3Data) $r5",
            "if $r21 == null goto $r6 = new org.javacc.parser.Phase3Data",
            "$r6 = new org.javacc.parser.Phase3Data",
            "$i0 = r7.<org.javacc.parser.Phase3Data: int count>",
            "specialinvoke $r6.<org.javacc.parser.Phase3Data: void <init>(org.javacc.parser.Expansion,int)>(r0, $i0)",
            "$r8 = r2.<org.javacc.parser.ParseEngine: java.util.List phase3list>",
            "interfaceinvoke $r8.<java.util.List: boolean add(java.lang.Object)>($r6)",
            "$r9 = r2.<org.javacc.parser.ParseEngine: java.util.Hashtable phase3table>",
            "virtualinvoke $r9.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, $r6)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__DumpAsciiMove__-1297829632\\2163.smt2",
        "z3": {
            "memory": 32280576,
            "run_time": 60.01163291931152,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10297344,
            "run_time": 0.01507258415222168,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3059 is 2\r\n; rep: (as @var3059_0 var3059)\r\n; rep: (as @var3059_1 var3059)\r\n; cardinality of var2241 is 2\r\n; rep: (as @var2241_0 var2241)\r\n; rep: (as @var2241_1 var2241)\r\n; cardinality of var1409 is 1\r\n; rep: (as @var1409_0 var1409)\r\n; cardinality of var836 is 2\r\n; rep: (as @var836_0 var836)\r\n; rep: (as @var836_1 var836)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun selfLoop/-2129610754 ((_arg_1 var3059)) Bool false)\r\n(define-fun var1409_size/-959786421 ((_arg_1 var1409)) Int 0)\r\n(define-fun asciiMoves/1847772117 ((_arg_1 var3059)) (Array Int Int) (store ((as const (Array Int Int)) 0) 0 (- 1)))\r\n(define-fun var3059_OnlyOneBitSet/-1979413806 ((_arg_1 Int)) Int (- 1))\r\n(define-fun kindToPrint/1847772117 ((_arg_1 var3059)) Int 2147483647)\r\n(define-fun next/1847772117 ((_arg_1 var3059)) var3059 (as @var3059_1 var3059))\r\n(define-fun arr-var836-init () (Array Int var836) ((as const (Array Int var836)) (as @var836_0 var836)))\r\n(define-fun cast-from-String-to-var836 ((_arg_1 String)) var836 (as @var836_1 var836))\r\n(define-fun genCodeLine/787715242 ((BOUND_VARIABLE_914 var2241) (BOUND_VARIABLE_915 (Array Int var836))) void (as @void_0 void))\r\n(define-fun null-var3059 () var3059 (as @var3059_1 var3059))\r\n(define-fun null-var2241 () var2241 (as @var2241_0 var2241))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-__Array__Int__Bool__ () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n(define-fun var3059-allStates () var1409 (as @var1409_0 var1409))\r\n(define-fun null-__Array__Int__var836__ () (Array Int var836) (store ((as const (Array Int var836)) (as @var836_1 var836)) 0 (as @var836_0 var836)))\r\n(define-fun var1330 () var3059 (as @var3059_0 var3059))\r\n(define-fun var3027 () var2241 (as @var2241_1 var2241))\r\n(define-fun var1009 () Int 0)\r\n(define-fun var2126 () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var3272!1 () (Array Int var836) (store ((as const (Array Int var836)) (as @var836_0 var836)) 0 (as @var836_1 var836)))\r\n(define-fun var3027!1 () var2241 (as @var2241_0 var2241))\r\n(define-fun var3272!2 () (Array Int var836) ((as const (Array Int var836)) (as @var836_0 var836)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36741120,
            "run_time": 60.01266050338745,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 186793984,
            "run_time": 1.0831196308135986,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3272!1 () (Array Int var836) (store ((as const (Array Int var836)) var836!4294967328) 0 var836!4294967324))\r\n  (define-fun var2126 () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n  (define-fun var1009 () Int 2147483653)\r\n  (define-fun var3027 () var2241 var2241!4294967304)\r\n  (define-fun var1330 () var3059 var3059!4294967302)\r\n  (define-fun null-__Array__Int__var836__ () (Array Int var836) ((as const (Array Int var836)) var836!0))\r\n  (define-fun var3059-allStates () var1409 var1409!4294967300)\r\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool) (store ((as const (Array Int Bool)) true) 0 false))\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var2241 () var2241 var2241!4294967298)\r\n  (define-fun null-var3059 () var3059 var3059!4294967296)\r\n  (define-fun var836!4294967324 () var836 (cast-from-String-to-var836 \"                  break;\"))\r\n  (define-fun var3059!4294967296 () var3059 (next/1847772117 var3059!4294967302))\r\n  (define-fun kindToPrint/1847772117 ((x!0 var3059)) Int (ite (= x!0 var3059!4294967302) 2147483647 0))\r\n  (define-fun var3059_OnlyOneBitSet/-1979413806 ((x!0 Int)) Int (ite (= x!0 (- 1)) (- 1) 0))\r\n  (define-fun asciiMoves/1847772117 ((x!0 var3059)) (Array Int Int) (ite (= x!0 var3059!4294967302) (store ((as const (Array Int Int)) 2147483663) 2147483653 (- 1)) ((as const (Array Int Int)) 0)))\r\n  (define-fun var1409_size/-959786421 ((x!0 var1409)) Int (ite (= x!0 var1409!4294967300) 0 0))\r\n  (define-fun selfLoop/-2129610754 ((x!0 var3059)) Bool (ite (= x!0 var3059!4294967302) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 19,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.NfaState",
            "r4 := @parameter0: org.javacc.parser.CodeGenerator",
            "i0 := @parameter1: int",
            "r145 := @parameter2: boolean[]",
            "$z0 = specialinvoke r0.<org.javacc.parser.NfaState: boolean selfLoop()>()",
            "if $z0 == 0 goto $z6 = 0",
            "$z6 = 0",
            "z7 = $z6",
            "z8 = 1",
            "z15 = 1",
            "z14 = 1",
            "z13 = 1",
            "z12 = 1",
            "z11 = 1",
            "i52 = 0",
            "$r172 = <org.javacc.parser.NfaState: java.util.List allStates>",
            "$i53 = interfaceinvoke $r172.<java.util.List: int size()>()",
            "if i52 >= $i53 goto $r1 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$r1 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$l1 = $r1[i0]",
            "i55 = staticinvoke <org.javacc.parser.NfaState: int OnlyOneBitSet(long)>($l1)",
            "$r2 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$l2 = $r2[i0]",
            "$b3 = $l2 cmp -1L",
            "if $b3 == 0 goto r175 = \"\"",
            "r175 = \"\"",
            "r181 = \"\"",
            "r180 = \"\"",
            "r179 = \"\"",
            "r178 = \"\"",
            "r177 = \"\"",
            "$i56 = r0.<org.javacc.parser.NfaState: int kindToPrint>",
            "if $i56 == 2147483647 goto $i65 = (int) -1",
            "$i65 = (int) -1",
            "if i55 == $i65 goto $r3 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$r3 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$l4 = $r3[i0]",
            "$b5 = $l4 cmp -1L",
            "if $b5 == 0 goto $r176 = r0.<org.javacc.parser.NfaState: org.javacc.parser.NfaState next>",
            "$r176 = r0.<org.javacc.parser.NfaState: org.javacc.parser.NfaState next>",
            "if $r176 == null goto (branch)",
            "if z12 == 0 goto $r5 = newarray (java.lang.Object)[1]",
            "$r6 = newarray (java.lang.Object)[1]",
            "$r6[0] = \"                  break;\"",
            "virtualinvoke r4.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r6)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseEngine__generateCPPMethodheader__-1960190938\\1371.smt2",
        "z3": {
            "memory": 31834112,
            "run_time": 0.04683351516723633,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 240 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11321344,
            "run_time": 0.029720067977905273,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35078144,
            "run_time": 0.06068778038024902,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 240 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 195981312,
            "run_time": 0.8997414112091064,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 18,
        "assertion_count": 75,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.String toString()>",
            "<java.lang.StringBuffer: void setLength(int)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuffer: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuffer: void <init>(java.lang.String)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 6,
            "<java.lang.StringBuffer: java.lang.String toString()>": 4,
            "<java.lang.StringBuffer: void setLength(int)>": 1,
            "<java.lang.StringBuilder: void <init>()>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 13,
            "<java.lang.StringBuilder: java.lang.String toString()>": 4,
            "<java.lang.StringBuffer: void <init>(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r3 := @this: org.javacc.parser.ParseEngine",
            "r1 := @parameter0: org.javacc.parser.BNFProduction",
            "r33 := @parameter1: org.javacc.parser.Token",
            "$r0 = new java.lang.StringBuffer",
            "specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()",
            "r2 = virtualinvoke r1.<org.javacc.parser.BNFProduction: java.lang.String getLhs()>()",
            "z1 = 0",
            "z2 = 0",
            "$r4 = r3.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "virtualinvoke $r4.<org.javacc.parser.CodeGenerator: void printTokenSetup(org.javacc.parser.Token)>(r33)",
            "<org.javacc.parser.JavaCCGlobals: int ccol> = 1",
            "$r5 = r3.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "virtualinvoke $r5.<org.javacc.parser.CodeGenerator: java.lang.String getLeadingComments(org.javacc.parser.Token)>(r33)",
            "$i0 = r33.<org.javacc.parser.Token: int beginLine>",
            "<org.javacc.parser.JavaCCGlobals: int cline> = $i0",
            "$i1 = r33.<org.javacc.parser.Token: int beginColumn>",
            "<org.javacc.parser.JavaCCGlobals: int ccol> = $i1",
            "$r6 = r33.<org.javacc.parser.Token: java.lang.String image>",
            "virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6)",
            "$i2 = r33.<org.javacc.parser.Token: int kind>",
            "if $i2 != 78 goto $i3 = r33.<org.javacc.parser.Token: int kind>",
            "$i3 = r33.<org.javacc.parser.Token: int kind>",
            "if $i3 != 121 goto i7 = 1",
            "i7 = 1",
            "$r34 = virtualinvoke r1.<org.javacc.parser.BNFProduction: java.util.List getReturnTypeTokens()>()",
            "$i8 = interfaceinvoke $r34.<java.util.List: int size()>()",
            "if i7 >= $i8 goto $r7 = r3.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r7 = r3.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "virtualinvoke $r7.<org.javacc.parser.CodeGenerator: java.lang.String getTrailingComments(org.javacc.parser.Token)>(r33)",
            "r8 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>()",
            "virtualinvoke $r0.<java.lang.StringBuffer: void setLength(int)>(0)",
            "virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"(\")",
            "$r9 = virtualinvoke r1.<org.javacc.parser.BNFProduction: java.util.List getParameterListTokens()>()",
            "$i4 = interfaceinvoke $r9.<java.util.List: int size()>()",
            "if $i4 == 0 goto virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\")\")",
            "virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\")\")",
            "$r25 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r11 = r3.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r12 = <org.javacc.parser.JavaCCGlobals: java.lang.String cu_name>",
            "$r10 = new java.lang.StringBuilder",
            "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke r1.<org.javacc.parser.BNFProduction: java.lang.String getLhs()>()",
            "$r14 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)",
            "$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r16 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>()",
            "virtualinvoke $r11.<org.javacc.parser.CodeGenerator: void generateMethodDefHeader(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(r8, $r12, $r17, $r16)",
            "if z2 == 0 goto (branch)",
            "r36 = \"NULL\"",
            "goto [?= $r37 = new java.lang.StringBuffer]",
            "$r37 = new java.lang.StringBuffer",
            "$r38 = new java.lang.StringBuilder",
            "specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()",
            "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\n#if !defined ERROR_RET_\")",
            "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\n\")",
            "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r37.<java.lang.StringBuffer: void <init>(java.lang.String)>($r42)",
            "$r43 = new java.lang.StringBuilder",
            "specialinvoke $r43.<java.lang.StringBuilder: void <init>()>()",
            "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"#define ERROR_RET_\")",
            "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")",
            "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r36)",
            "$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\n\")",
            "$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r49)",
            "virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"#endif\\n\")",
            "$r50 = new java.lang.StringBuilder",
            "specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()",
            "$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"#define __ERROR_RET__ ERROR_RET_\")",
            "$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\n\")",
            "$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r37.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r54)",
            "$r55 = virtualinvoke $r37.<java.lang.StringBuffer: java.lang.String toString()>()",
            "return $r55"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__DumpAsciiMove__-1297829632\\2167.smt2",
        "z3": {
            "memory": 19775488,
            "run_time": 0.07538676261901855,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 96 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11333632,
            "run_time": 0.015528202056884766,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35954688,
            "run_time": 0.04722428321838379,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 96 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154636288,
            "run_time": 0.7734165191650391,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 19,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.NfaState",
            "r4 := @parameter0: org.javacc.parser.CodeGenerator",
            "i0 := @parameter1: int",
            "r145 := @parameter2: boolean[]",
            "$z0 = specialinvoke r0.<org.javacc.parser.NfaState: boolean selfLoop()>()",
            "if $z0 == 0 goto $z6 = 0",
            "$z6 = 0",
            "z7 = $z6",
            "z8 = 1",
            "z15 = 1",
            "z14 = 1",
            "z13 = 1",
            "z12 = 1",
            "z11 = 1",
            "i52 = 0",
            "$r172 = <org.javacc.parser.NfaState: java.util.List allStates>",
            "$i53 = interfaceinvoke $r172.<java.util.List: int size()>()",
            "if i52 >= $i53 goto $r1 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$r1 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$l1 = $r1[i0]",
            "i55 = staticinvoke <org.javacc.parser.NfaState: int OnlyOneBitSet(long)>($l1)",
            "$r2 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$l2 = $r2[i0]",
            "$b3 = $l2 cmp -1L",
            "if $b3 == 0 goto r175 = \"\"",
            "r175 = \"\"",
            "r181 = \"\"",
            "r180 = \"\"",
            "r179 = \"\"",
            "r178 = \"\"",
            "r177 = \"\"",
            "$i56 = r0.<org.javacc.parser.NfaState: int kindToPrint>",
            "if $i56 == 2147483647 goto $i65 = (int) -1",
            "$i65 = (int) -1",
            "if i55 == $i65 goto $r3 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$r3 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$l4 = $r3[i0]",
            "$b5 = $l4 cmp -1L",
            "if $b5 == 0 goto $r176 = r0.<org.javacc.parser.NfaState: org.javacc.parser.NfaState next>",
            "$r176 = r0.<org.javacc.parser.NfaState: org.javacc.parser.NfaState next>",
            "if $r176 == null goto (branch)",
            "if z12 == 0 goto $r5 = newarray (java.lang.Object)[1]",
            "$r5 = newarray (java.lang.Object)[1]",
            "$r5[0] = \"                  break;\"",
            "virtualinvoke r4.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r5)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseException__initialise__-568484330\\1261.smt2",
        "z3": {
            "memory": 33644544,
            "run_time": 60.011218547821045,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 15405056,
            "run_time": 0.029684066772460938,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1995 is 3\r\n; rep: (as @var1995_0 var1995)\r\n; rep: (as @var1995_1 var1995)\r\n; rep: (as @var1995_2 var1995)\r\n; cardinality of var2938 is 1\r\n; rep: (as @var2938_0 var2938)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2938_getProperty/-1659784690 ((BOUND_VARIABLE_2299 String) (BOUND_VARIABLE_2300 String)) String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1430969082 ((BOUND_VARIABLE_2303 String)) void (as @void_0 void))\r\n(define-fun getLength-Arr-Int-2 ((_arg_1 (Array Int (Array Int Int)))) Int 0)\r\n(define-fun next/197050796 ((_arg_1 var1995)) var1995 (as @var1995_2 var1995))\r\n(define-fun beginLine/197050796 ((_arg_1 var1995)) Int (- 1))\r\n(define-fun beginColumn/197050796 ((BOUND_VARIABLE_2306 var1995)) Int 0)\r\n(define-fun null-var1995 () var1995 (as @var1995_0 var1995))\r\n(define-fun null-__Array__Int____Array__Int__Int____ () (Array Int (Array Int Int)) (store ((as const (Array Int (Array Int Int))) (store ((as const (Array Int Int)) 0) 0 1)) 0 (store ((as const (Array Int Int)) 2) 0 (- 1))))\r\n(define-fun null-__Array__Int__String__ () (Array Int String) (store ((as const (Array Int String)) \"A\") 0 \", column \"))\r\n(define-fun var3583 () var1995 (as @var1995_1 var1995))\r\n(define-fun var3093 () (Array Int (Array Int Int)) (store ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)) 0 (store ((as const (Array Int Int)) (- 1)) 0 0)))\r\n(define-fun var904 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var3754!1 () String \"\")\r\n(define-fun var779!1 () String \"\")\r\n(define-fun var779!2 () String \"Encountered \"\"\")\r\n(define-fun var1317!1 () String \"Encountered \"\"\"\" at line \")\r\n(define-fun var1110!1 () String \"Encountered \"\"\"\" at line \")\r\n(define-fun var1164!1 () String \"Encountered \"\"\"\" at line , column \")\r\n(define-fun var60!1 () String \"Encountered \"\"\"\" at line , column \")\r\n(define-fun var107!1 () String \"\")\r\n(define-fun var107!2 () String \"Encountered \"\"\"\" at line , column 0\")\r\n(define-fun var3918!1 () String \"Encountered \"\"\"\" at line , column 0.\")\r\n(define-fun var2735!1 () String \"Encountered \"\"\"\" at line , column 0.\")\r\n(define-fun var3922!1 () String \"\")\r\n(define-fun var3922!2 () String \"Encountered \"\"\"\" at line , column 0.\")\r\n(define-fun var2998!1 () String \"Encountered \"\"\"\" at line , column 0.Was expecting one of:\")\r\n(define-fun var1117!1 () String \"Encountered \"\"\"\" at line , column 0.Was expecting one of:\")\r\n(define-fun var3864!1 () String \"Encountered \"\"\"\" at line , column 0.Was expecting one of:    \")\r\n(define-fun var217!1 () String \"\")\r\n(define-fun var217!2 () String \"Encountered \"\"\"\" at line , column 0.Was expecting one of:    \")\r\n(define-fun var2471!1 () String \"Encountered \"\"\"\" at line , column 0.Was expecting one of:    \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36577280,
            "run_time": 0.046624183654785156,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 144 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 145 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 245227520,
            "run_time": 1.3476524353027344,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1995/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.ParseException__initialise__-568484330\\1261.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var217!2 =\r\n     concat(all_98_3, \"    \")\r\n   var3864!1 =\r\n     concat(all_43_3, \"    \")\r\n   var2998!1 =\r\n     concat(all_40_4, \"Was expecting one of:\")\r\n   var2471!1 =\r\n     concat(all_37_4, var3754!1)\r\n   var1117!1 =\r\n     concat(all_31_3, all_31_2)\r\n   var3922!2 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   var2735!1 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   all_98_3 =\r\n     concat(all_98_4, all_31_2)\r\n   all_31_3 =\r\n     concat(all_95_4, \"Was expecting one of:\")\r\n   all_37_4 =\r\n     concat(all_89_3, \"    \")\r\n   all_43_3 =\r\n     concat(all_43_5, all_31_2)\r\n   all_40_4 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   all_98_4 =\r\n     concat(all_119_4, \"Was expecting one of:\")\r\n   all_43_5 =\r\n     concat(all_92_4, \"Was expecting one of:\")\r\n   all_89_3 =\r\n     concat(all_89_4, all_31_2)\r\n   all_95_4 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   all_89_4 =\r\n     concat(all_122_4, \"Was expecting one of:\")\r\n   all_119_4 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   all_92_4 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   all_122_4 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n\r\n1098ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 51,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 12,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 4,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @parameter0: org.javacc.parser.Token",
            "r2 := @parameter1: int[][]",
            "r33 := @parameter2: java.lang.String[]",
            "r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"line.separator\", \"\\n\")",
            "$r1 = new java.lang.StringBuffer",
            "specialinvoke $r1.<java.lang.StringBuffer: void <init>()>()",
            "i11 = 0",
            "i12 = 0",
            "$i0 = lengthof r2",
            "if i12 >= $i0 goto r66 = \"Encountered \\\"\"",
            "r66 = \"Encountered \\\"\"",
            "r67 = r3.<org.javacc.parser.Token: org.javacc.parser.Token next>",
            "i15 = 0",
            "if i15 >= i11 goto $r4 = new java.lang.StringBuilder",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r66)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" at line \")",
            "$r6 = r3.<org.javacc.parser.Token: org.javacc.parser.Token next>",
            "$i1 = $r6.<org.javacc.parser.Token: int beginLine>",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", column \")",
            "$r9 = r3.<org.javacc.parser.Token: org.javacc.parser.Token next>",
            "$i2 = $r9.<org.javacc.parser.Token: int beginColumn>",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)",
            "$r52 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r53 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i3 = lengthof r2",
            "if $i3 != 1 goto $r16 = new java.lang.StringBuilder",
            "$r16 = new java.lang.StringBuilder",
            "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53)",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Was expecting one of:\")",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")",
            "r71 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r21 = new java.lang.StringBuilder",
            "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()",
            "$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r22 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r30 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r30"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.RegularExpression__dump__1357828560\\1322.smt2",
        "z3": {
            "memory": 32055296,
            "run_time": 0.0586094856262207,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1594:\r\n  ;;   var1594!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1594!val!0 () var1594)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1594)) (= x var1594!val!0))\r\n  ;; -----------\r\n  ;; universe for var2154:\r\n  ;;   var2154!val!0 var2154!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2154!val!0 () var2154)\r\n  (declare-fun var2154!val!1 () var2154)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2154)) (or (= x var2154!val!0) (= x var2154!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2964:\r\n  ;;   var2964!val!1 var2964!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2964!val!1 () var2964)\r\n  (declare-fun var2964!val!0 () var2964)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2964)) (or (= x var2964!val!1) (= x var2964!val!0)))\r\n  ;; -----------\r\n  (define-fun var2323 () String\r\n    (dump/1891027141 (cast-from-var2964-to-var1594 var1972) var631 var1402))\r\n  (define-fun var631 () Int\r\n    2)\r\n  (define-fun var3364 () String\r\n    (append/1183289509\r\n  (dump/1891027141 (cast-from-var2964-to-var1594 var1972) var631 var1402)\r\n  32))\r\n  (define-fun var1972 () var2964\r\n    var2964!val!0)\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun null-var2154 () var2154\r\n    var2154!val!1)\r\n  (define-fun null-var2964 () var2964\r\n    var2964!val!1)\r\n  (define-fun var1402 () var2154\r\n    var2154!val!0)\r\n  (define-fun var3364!1 () String\r\n    \"\")\r\n  (define-fun var1880 () String\r\n    (label/319082119 var1972!1))\r\n  (define-fun var1402!1 () var2154\r\n    var2154!val!0)\r\n  (define-fun var1972!1 () var2964\r\n    var2964!val!1)\r\n  (define-fun cast-from-var2964-to-var1594 ((x!0 var2964)) var1594\r\n    var1594!val!0)\r\n  (define-fun dump/1891027141 ((x!0 var1594) (x!1 Int) (x!2 var2154)) String\r\n    \"!0!\")\r\n  (define-fun append/1183289509 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun label/319082119 ((x!0 var2964)) String\r\n    \"\")\r\n  (define-fun var2154_add/-1142548109 ((x!0 var2154) (x!1 var895)) Bool\r\n    false)\r\n  (define-fun cast-from-var2964-to-var895 ((x!0 var2964)) var895\r\n    var895!val!0)\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11325440,
            "run_time": 0.015796184539794922,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2964 is 2\r\n; rep: (as @var2964_0 var2964)\r\n; rep: (as @var2964_1 var2964)\r\n; cardinality of var2154 is 2\r\n; rep: (as @var2154_0 var2154)\r\n; rep: (as @var2154_1 var2154)\r\n; cardinality of var1594 is 1\r\n; rep: (as @var1594_0 var1594)\r\n; cardinality of var895 is 1\r\n; rep: (as @var895_0 var895)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun dump/1891027141 ((_arg_1 var1594) (_arg_2 Int) (_arg_3 var2154)) String \"A\")\r\n(define-fun cast-from-var2964-to-var1594 ((_arg_1 var2964)) var1594 (as @var1594_0 var1594))\r\n(define-fun var2154_add/-1142548109 ((BOUND_VARIABLE_648 var2154) (BOUND_VARIABLE_649 var895)) Bool false)\r\n(define-fun cast-from-var2964-to-var895 ((BOUND_VARIABLE_652 var2964)) var895 (as @var895_0 var895))\r\n(define-fun append/1183289509 ((_arg_1 String) (_arg_2 Int)) String \"\")\r\n(define-fun label/319082119 ((BOUND_VARIABLE_655 var2964)) String \"\")\r\n(define-fun null-var2964 () var2964 (as @var2964_0 var2964))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var2154 () var2154 (as @var2154_0 var2154))\r\n(define-fun var1972 () var2964 (as @var2964_1 var2964))\r\n(define-fun var631 () Int 0)\r\n(define-fun var1402 () var2154 (as @var2154_1 var2154))\r\n(define-fun var1402!1 () var2154 (as @var2154_0 var2154))\r\n(define-fun var1972!1 () var2964 (as @var2964_0 var2964))\r\n(define-fun var3364!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36593664,
            "run_time": 0.04584503173828125,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 42 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169046016,
            "run_time": 0.7290165424346924,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.RegularExpression__dump__1357828560\\1322.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3364!1 =\r\n     concat(all_18_0, rhs)\r\n   ... sat\r\n\r\n478ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>": 1,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.RegularExpression",
            "i0 := @parameter0: int",
            "r1 := @parameter1: java.util.Set",
            "r2 = specialinvoke r0.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>(i0, r1)",
            "interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)",
            "$r4 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32)",
            "$r3 = r0.<org.javacc.parser.RegularExpression: java.lang.String label>",
            "virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3)",
            "return r2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.RStringLiteral__DumpBoilerPlate__-632869830\\1750.smt2",
        "z3": {
            "memory": 31129600,
            "run_time": 0.056508779525756836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var312:\r\n  ;;   var312!val!1 var312!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var312!val!1 () var312)\r\n  (declare-fun var312!val!0 () var312)\r\n  ;; cardinality constraint:\r\n  (forall ((x var312)) (or (= x var312!val!1) (= x var312!val!0)))\r\n  ;; -----------\r\n  (define-fun var1648 () String\r\n    String-init)\r\n  (define-fun var3806 () String\r\n    var2924_getOutputLanguage/-1523304050)\r\n  (define-fun var1971 () String\r\n    var2924_getOutputLanguage/-1523304050)\r\n  (define-fun var618 () String\r\n    (str.++ var1648!1 \"Output language type not fully implemented : \"))\r\n  (define-fun null-var312 () var312\r\n    var312!val!1)\r\n  (define-fun var3722 () var312\r\n    var312!val!0)\r\n  (define-fun var2924_getOutputLanguage/-1523304050 () String\r\n    \"\")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1522 () Bool\r\n    (= var2924_getOutputLanguage/-1523304050 \"c++\"))\r\n  (define-fun var3465 () var711\r\n    var711-init)\r\n  (define-fun var2965 () String\r\n    (str.++ var1648!1\r\n        \"Output language type not fully implemented : \"\r\n        var2924_getOutputLanguage/-1523304050))\r\n  (define-fun var275 () String\r\n    (str.++ var1648!1\r\n        \"Output language type not fully implemented : \"\r\n        var2924_getOutputLanguage/-1523304050))\r\n  (define-fun var1246 () Bool\r\n    var2924_isOutputLanguageJava/1735442213)\r\n  (define-fun var1648!2 () String\r\n    \"Output language type not fully implemented : \")\r\n  (define-fun var618!1 () String\r\n    \"Output language type not fully implemented : \")\r\n  (define-fun var1648!1 () String\r\n    \"\")\r\n  (define-fun var2924_isOutputLanguageJava/1735442213 () Bool\r\n    false)\r\n  (define-fun var3465!1 () var711\r\n    var711!val!0)\r\n  (define-fun var711-init () var711\r\n    var711!val!0)\r\n  (define-fun var2965!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun <init>/-1084991535 ((x!0 var711) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 54 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11337728,
            "run_time": 0.01522970199584961,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var312 is 2\r\n; rep: (as @var312_0 var312)\r\n; rep: (as @var312_1 var312)\r\n; cardinality of var2924 is 1\r\n; rep: (as @var2924_0 var2924)\r\n; cardinality of var711 is 1\r\n; rep: (as @var711_0 var711)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2924_isOutputLanguageJava/1735442213 () Bool false)\r\n(define-fun var2924_getOutputLanguage/-1523304050 () String \"\")\r\n(define-fun var711-init () var711 (as @var711_0 var711))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1084991535 ((BOUND_VARIABLE_624 var711) (BOUND_VARIABLE_625 String)) void (as @void_0 void))\r\n(define-fun null-var312 () var312 (as @var312_0 var312))\r\n(define-fun var3722 () var312 (as @var312_1 var312))\r\n(define-fun var1648!1 () String \"\")\r\n(define-fun var1648!2 () String \"Output language type not fully implemented : \")\r\n(define-fun var618!1 () String \"Output language type not fully implemented : \")\r\n(define-fun var3465!1 () var711 (as @var711_0 var711))\r\n(define-fun var2965!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36618240,
            "run_time": 0.04541778564453125,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var312:\n  ;;   var312!val!1 var312!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var312!val!1 () var312)\n  (declare-fun var312!val!0 () var312)\n  ;; cardinality constraint:\n  (forall ((x var312)) (or (= x var312!val!1) (= x var312!val!0)))\n  ;; -----------\n  (define-fun var2924_getOutputLanguage/-1523304050 () String\n    \"\")\n  (define-fun var1246 () Bool\n    var2924_isOutputLanguageJava/1735442213)\n  (define-fun var1522 () Bool\n    (= var2924_getOutputLanguage/-1523304050 \"c++\"))\n  (define-fun null-var312 () var312\n    var312!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2965 () String\n    (str.++ var1648!1\n        \"Output language type not fully implemented : \"\n        var2924_getOutputLanguage/-1523304050))\n  (define-fun var3722 () var312\n    var312!val!0)\n  (define-fun var1648 () String\n    String-init)\n  (define-fun var618 () String\n    (str.++ var1648!1 \"Output language type not fully implemented : \"))\n  (define-fun var275 () String\n    (str.++ var1648!1\n        \"Output language type not fully implemented : \"\n        var2924_getOutputLanguage/-1523304050))\n  (define-fun var1971 () String\n    var2924_getOutputLanguage/-1523304050)\n  (define-fun var3465 () var711\n    var711-init)\n  (define-fun var3806 () String\n    var2924_getOutputLanguage/-1523304050)\n  (define-fun var1648!2 () String\n    \"Output language type not fully implemented : \")\n  (define-fun var618!1 () String\n    \"Output language type not fully implemented : \")\n  (define-fun var1648!1 () String\n    \"\")\n  (define-fun var2924_isOutputLanguageJava/1735442213 () Bool\n    false)\n  (define-fun var3465!1 () var711\n    var711!val!0)\n  (define-fun var711-init () var711\n    var711!val!0)\n  (define-fun var2965!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun <init>/-1084991535 ((x!0 var711) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 54 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175738880,
            "run_time": 0.8430356979370117,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var312/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.RStringLiteral__DumpBoilerPlate__-632869830\\1750.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var618!1 =\r\n     concat(\"Output language type not fully implemented : \", var2924_getOutputLanguage/-1523304050)\r\n\r\n594ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r7 := @parameter0: org.javacc.parser.CodeGenerator",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean isOutputLanguageJava()>()",
            "if $z0 == 0 goto $r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$z1 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(\"c++\")",
            "if $z1 == 0 goto $r1 = new java.lang.RuntimeException",
            "$r1 = new java.lang.RuntimeException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Output language type not fully implemented : \")",
            "$r3 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.RStringLiteral__DumpDfaCode__-736067219\\1852.smt2",
        "z3": {
            "memory": 31760384,
            "run_time": 0.0427401065826416,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1794:\r\n  ;;   var1794!val!0 var1794!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1794!val!0 () var1794)\r\n  (declare-fun var1794!val!1 () var1794)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1794)) (or (= x var1794!val!0) (= x var1794!val!1)))\r\n  ;; -----------\r\n  (define-fun var470 () String\r\n    (str.++ var3768!1\r\n        \"Output language type not fully implemented : \"\r\n        var3140_getOutputLanguage/-1523304050))\r\n  (define-fun var3140_getOutputLanguage/-1523304050 () String\r\n    \"\")\r\n  (define-fun var2876 () var1160\r\n    var1160-init)\r\n  (define-fun var3768 () String\r\n    String-init)\r\n  (define-fun var2774 () (Array Int Int)\r\n    var1948-maxLongsReqd)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3669 () var1794\r\n    var1794!val!0)\r\n  (define-fun var3065 () String\r\n    var3140_getOutputLanguage/-1523304050)\r\n  (define-fun var2774!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 1))\r\n  (define-fun var363 () Int\r\n    var1948-lexStateIndex)\r\n  (define-fun var1217 () var1948\r\n    var749-lg)\r\n  (define-fun var228 () var1948\r\n    var749-lg)\r\n  (define-fun var194 () Int\r\n    (+ (div var2056-maxStrKind 64) 1))\r\n  (define-fun var1326 () Bool\r\n    (= var3140_getOutputLanguage/-1523304050 \"c++\"))\r\n  (define-fun null-var1794 () var1794\r\n    var1794!val!1)\r\n  (define-fun var2424 () Int\r\n    (div var2056-maxStrKind 64))\r\n  (define-fun var2301 () String\r\n    var3140_getOutputLanguage/-1523304050)\r\n  (define-fun var3623 () String\r\n    (str.++ var3768!1\r\n        \"Output language type not fully implemented : \"\r\n        var3140_getOutputLanguage/-1523304050))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 1) 0 2))\r\n  (define-fun var1509 () Int\r\n    var2056-maxStrKind)\r\n  (define-fun var3779 () String\r\n    (str.++ var3768!1 \"Output language type not fully implemented : \"))\r\n  (define-fun var2926 () Bool\r\n    var3140_isOutputLanguageJava/1735442213)\r\n  (define-fun var644 () Int\r\n    var2056-maxLen)\r\n  (define-fun var2056-maxStrKind () Int\r\n    0)\r\n  (define-fun var3768!2 () String\r\n    \"Output language type not fully implemented : \")\r\n  (define-fun var3768!1 () String\r\n    \"\")\r\n  (define-fun var3779!1 () String\r\n    \"Output language type not fully implemented : \")\r\n  (define-fun var3140_isOutputLanguageJava/1735442213 () Bool\r\n    false)\r\n  (define-fun var2056-maxLen () Int\r\n    0)\r\n  (define-fun var2876!1 () var1160\r\n    var1160!val!0)\r\n  (define-fun var1160-init () var1160\r\n    var1160!val!0)\r\n  (define-fun var749-lg () var1948\r\n    var1948!val!0)\r\n  (define-fun var3623!1 () String\r\n    \"\")\r\n  (define-fun var1948-lexStateIndex () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1948-maxLongsReqd () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/-1084991535 ((x!0 var1160) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 76 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11284480,
            "run_time": 0.01503610610961914,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1794 is 2\r\n; rep: (as @var1794_0 var1794)\r\n; rep: (as @var1794_1 var1794)\r\n; cardinality of var2056 is 1\r\n; rep: (as @var2056_0 var2056)\r\n; cardinality of var1948 is 1\r\n; rep: (as @var1948_0 var1948)\r\n; cardinality of var749 is 1\r\n; rep: (as @var749_0 var749)\r\n; cardinality of var3140 is 1\r\n; rep: (as @var3140_0 var3140)\r\n; cardinality of var1160 is 1\r\n; rep: (as @var1160_0 var1160)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3140_isOutputLanguageJava/1735442213 () Bool false)\r\n(define-fun var3140_getOutputLanguage/-1523304050 () String \"\")\r\n(define-fun var1160-init () var1160 (as @var1160_0 var1160))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1084991535 ((BOUND_VARIABLE_808 var1160) (BOUND_VARIABLE_809 String)) void (as @void_0 void))\r\n(define-fun null-var1794 () var1794 (as @var1794_0 var1794))\r\n(define-fun var2056-maxStrKind () Int 0)\r\n(define-fun var749-lg () var1948 (as @var1948_0 var1948))\r\n(define-fun var1948-maxLongsReqd () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1948-lexStateIndex () Int 0)\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 0))\r\n(define-fun var2056-maxLen () Int 0)\r\n(define-fun var3669 () var1794 (as @var1794_1 var1794))\r\n(define-fun var2774!1 () (Array Int Int) (store ((as const (Array Int Int)) 0) 0 1))\r\n(define-fun var3768!1 () String \"\")\r\n(define-fun var3768!2 () String \"Output language type not fully implemented : \")\r\n(define-fun var3779!1 () String \"Output language type not fully implemented : \")\r\n(define-fun var2876!1 () var1160 (as @var1160_0 var1160))\r\n(define-fun var3623!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36659200,
            "run_time": 0.046721458435058594,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1794:\n  ;;   var1794!val!0 var1794!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1794!val!0 () var1794)\n  (declare-fun var1794!val!1 () var1794)\n  ;; cardinality constraint:\n  (forall ((x var1794)) (or (= x var1794!val!0) (= x var1794!val!1)))\n  ;; -----------\n  (define-fun var363 () Int\n    var1948-lexStateIndex)\n  (define-fun var1217 () var1948\n    var749-lg)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3065 () String\n    var3140_getOutputLanguage/-1523304050)\n  (define-fun var228 () var1948\n    var749-lg)\n  (define-fun var194 () Int\n    (+ (div var2056-maxStrKind 64) 1))\n  (define-fun var1326 () Bool\n    (= var3140_getOutputLanguage/-1523304050 \"c++\"))\n  (define-fun var3669 () var1794\n    var1794!val!0)\n  (define-fun var3140_getOutputLanguage/-1523304050 () String\n    \"\")\n  (define-fun var2774!1 () (Array Int Int)\n    ((as const (Array Int Int)) 1))\n  (define-fun var2424 () Int\n    (div var2056-maxStrKind 64))\n  (define-fun var2774 () (Array Int Int)\n    var1948-maxLongsReqd)\n  (define-fun var1509 () Int\n    var2056-maxStrKind)\n  (define-fun var2301 () String\n    var3140_getOutputLanguage/-1523304050)\n  (define-fun var3623 () String\n    (str.++ var3768!1\n        \"Output language type not fully implemented : \"\n        var3140_getOutputLanguage/-1523304050))\n  (define-fun var644 () Int\n    var2056-maxLen)\n  (define-fun var2926 () Bool\n    var3140_isOutputLanguageJava/1735442213)\n  (define-fun null-var1794 () var1794\n    var1794!val!1)\n  (define-fun var2876 () var1160\n    var1160-init)\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store ((as const (Array Int Int)) 1) 0 2))\n  (define-fun var3779 () String\n    (str.++ var3768!1 \"Output language type not fully implemented : \"))\n  (define-fun var470 () String\n    (str.++ var3768!1\n        \"Output language type not fully implemented : \"\n        var3140_getOutputLanguage/-1523304050))\n  (define-fun var3768 () String\n    String-init)\n  (define-fun var2056-maxStrKind () Int\n    0)\n  (define-fun var3768!2 () String\n    \"Output language type not fully implemented : \")\n  (define-fun var3768!1 () String\n    \"\")\n  (define-fun var3779!1 () String\n    \"Output language type not fully implemented : \")\n  (define-fun var3140_isOutputLanguageJava/1735442213 () Bool\n    false)\n  (define-fun var2056-maxLen () Int\n    0)\n  (define-fun var2876!1 () var1160\n    var1160!val!0)\n  (define-fun var1160-init () var1160\n    var1160!val!0)\n  (define-fun var749-lg () var1948\n    var1948!val!0)\n  (define-fun var3623!1 () String\n    \"\")\n  (define-fun var1948-lexStateIndex () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1948-maxLongsReqd () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun <init>/-1084991535 ((x!0 var1160) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 76 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177262592,
            "run_time": 0.8876907825469971,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1794/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.RStringLiteral__DumpDfaCode__-736067219\\1852.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3779!1 =\r\n     concat(\"Output language type not fully implemented : \", var3140_getOutputLanguage/-1523304050)\r\n\r\n651ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r6 := @parameter0: org.javacc.parser.CodeGenerator",
            "$i0 = <org.javacc.parser.RStringLiteral: int maxStrKind>",
            "$i1 = $i0 / 64",
            "i2 = $i1 + 1",
            "$r0 = <org.javacc.parser.Main: org.javacc.parser.LexGen lg>",
            "$r2 = <org.javacc.parser.LexGen: int[] maxLongsReqd>",
            "$r1 = <org.javacc.parser.Main: org.javacc.parser.LexGen lg>",
            "$i3 = <org.javacc.parser.LexGen: int lexStateIndex>",
            "$r2[$i3] = i2",
            "$i4 = <org.javacc.parser.RStringLiteral: int maxLen>",
            "if $i4 != 0 goto $z0 = <org.javacc.parser.RStringLiteral: boolean boilerPlateDumped>",
            "$z29 = staticinvoke <org.javacc.parser.Options: boolean isOutputLanguageJava()>()",
            "if $z29 == 0 goto $r626 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r626 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$z30 = virtualinvoke $r626.<java.lang.String: boolean equals(java.lang.Object)>(\"c++\")",
            "if $z30 == 0 goto $r682 = new java.lang.RuntimeException",
            "$r682 = new java.lang.RuntimeException",
            "$r681 = new java.lang.StringBuilder",
            "specialinvoke $r681.<java.lang.StringBuilder: void <init>()>()",
            "$r630 = virtualinvoke $r681.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Output language type not fully implemented : \")",
            "$r629 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r631 = virtualinvoke $r630.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r629)",
            "$r632 = virtualinvoke $r631.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r682.<java.lang.RuntimeException: void <init>(java.lang.String)>($r632)",
            "throw $r682"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.RStringLiteral__DumpNullStrLiterals__-1967278545\\1524.smt2",
        "z3": {
            "memory": 33177600,
            "run_time": 60.01375770568848,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 15355904,
            "run_time": 0.030660152435302734,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1177 is 2\r\n; rep: (as @var1177_0 var1177)\r\n; rep: (as @var1177_1 var1177)\r\n; cardinality of var404 is 4\r\n; rep: (as @var404_0 var404)\r\n; rep: (as @var404_1 var404)\r\n; rep: (as @var404_2 var404)\r\n; rep: (as @var404_3 var404)\r\n; cardinality of var1783 is 1\r\n; rep: (as @var1783_0 var1783)\r\n; cardinality of var2475 is 1\r\n; rep: (as @var2475_0 var2475)\r\n; cardinality of var3314 is 1\r\n; rep: (as @var3314_0 var3314)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var404-init () (Array Int var404) ((as const (Array Int var404)) (as @var404_0 var404)))\r\n(define-fun cast-from-String-to-var404 ((_arg_1 String)) var404 (ite (= \"{\" _arg_1) (as @var404_0 var404) (ite (= \"   return jjMoveNfa(, 0);\" _arg_1) (as @var404_1 var404) (as @var404_3 var404))))\r\n(define-fun genCodeLine/787715242 ((BOUND_VARIABLE_1718 var1177) (BOUND_VARIABLE_1719 (Array Int var404))) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun var1783_InitStateName/1714614009 () Int (- 1))\r\n(define-fun null-var1177 () var1177 (as @var1177_0 var1177))\r\n(define-fun null-__Array__Int__var404__ () (Array Int var404) (store ((as const (Array Int var404)) (as @var404_1 var404)) 0 (as @var404_2 var404)))\r\n(define-fun var1783-generatedStates () Int (- 1))\r\n(define-fun var3314-lg () var2475 (as @var2475_0 var2475))\r\n(define-fun var2475-lexStateSuffix () String \"\")\r\n(define-fun var2173 () var1177 (as @var1177_1 var1177))\r\n(define-fun var3735!1 () (Array Int var404) ((as const (Array Int var404)) (as @var404_0 var404)))\r\n(define-fun var2173!1 () var1177 (as @var1177_0 var1177))\r\n(define-fun var3735!2 () (Array Int var404) ((as const (Array Int var404)) (as @var404_0 var404)))\r\n(define-fun var221!1 () String \"\")\r\n(define-fun var221!2 () String \"   return jjMoveNfa\")\r\n(define-fun var2289!1 () String \"   return jjMoveNfa\")\r\n(define-fun var574!1 () String \"   return jjMoveNfa(\")\r\n(define-fun var1544!1 () String \"   return jjMoveNfa(\")\r\n(define-fun var2278!1 () String \"   return jjMoveNfa(, 0);\")\r\n(define-fun var1477!1 () (Array Int var404) (store ((as const (Array Int var404)) (as @var404_2 var404)) 0 (as @var404_1 var404)))\r\n(define-fun var2173!2 () var1177 (as @var1177_0 var1177))\r\n(define-fun var1477!2 () (Array Int var404) ((as const (Array Int var404)) (as @var404_0 var404)))\r\n(define-fun var2895!1 () (Array Int var404) ((as const (Array Int var404)) (as @var404_3 var404)))\r\n(define-fun var2173!3 () var1177 (as @var1177_0 var1177))\r\n(define-fun var2895!2 () (Array Int var404) ((as const (Array Int var404)) (as @var404_0 var404)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 43257856,
            "run_time": 0.2959921360015869,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 92 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 93 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 200716288,
            "run_time": 1.0198233127593994,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1177/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.RStringLiteral__DumpNullStrLiterals__-1967278545\\1524.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var574!1 =\r\n     concat(all_39_4, \"(\")\r\n   all_36_3 =\r\n     concat(all_21_0, \", 0);\")\r\n   var2278!1 =\r\n     concat(all_21_0, \", 0);\")\r\n   var2289!1 =\r\n     concat(\"   return jjMoveNfa\", var2475-lexStateSuffix)\r\n   var1544!1 =\r\n     concat(all_21_0, rhs)\r\n   all_21_0 =\r\n     concat(all_42_5, \"(\")\r\n   all_39_4 =\r\n     concat(\"   return jjMoveNfa\", var2475-lexStateSuffix)\r\n   all_42_5 =\r\n     concat(\"   return jjMoveNfa\", var2475-lexStateSuffix)\r\n\r\n781ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 25,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.CodeGenerator",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r1[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r1)",
            "$i0 = <org.javacc.parser.NfaState: int generatedStates>",
            "if $i0 == 0 goto $r2 = newarray (java.lang.Object)[1]",
            "$r4 = newarray (java.lang.Object)[1]",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"   return jjMoveNfa\")",
            "$r6 = <org.javacc.parser.Main: org.javacc.parser.LexGen lg>",
            "$r7 = <org.javacc.parser.LexGen: java.lang.String lexStateSuffix>",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$i1 = staticinvoke <org.javacc.parser.NfaState: int InitStateName()>()",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", 0);\")",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r4[0] = $r13",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r4)",
            "goto [?= $r3 = newarray (java.lang.Object)[1]]",
            "$r3 = newarray (java.lang.Object)[1]",
            "$r3[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.RStringLiteral__DumpNullStrLiterals__-1967278545\\1545.smt2",
        "z3": {
            "memory": 32530432,
            "run_time": 0.05855894088745117,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3813:\r\n  ;;   var3813!val!0 var3813!val!8 var3813!val!4 var3813!val!1 var3813!val!5 var3813!val!7 var3813!val!2 var3813!val!3 var3813!val!6 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3813!val!0 () var3813)\r\n  (declare-fun var3813!val!8 () var3813)\r\n  (declare-fun var3813!val!4 () var3813)\r\n  (declare-fun var3813!val!1 () var3813)\r\n  (declare-fun var3813!val!5 () var3813)\r\n  (declare-fun var3813!val!7 () var3813)\r\n  (declare-fun var3813!val!2 () var3813)\r\n  (declare-fun var3813!val!3 () var3813)\r\n  (declare-fun var3813!val!6 () var3813)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3813))\r\n          (or (= x var3813!val!0)\r\n              (= x var3813!val!8)\r\n              (= x var3813!val!4)\r\n              (= x var3813!val!1)\r\n              (= x var3813!val!5)\r\n              (= x var3813!val!7)\r\n              (= x var3813!val!2)\r\n              (= x var3813!val!3)\r\n              (= x var3813!val!6)))\r\n  ;; -----------\r\n  ;; universe for var537:\r\n  ;;   var537!val!1 var537!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var537!val!1 () var537)\r\n  (declare-fun var537!val!0 () var537)\r\n  ;; cardinality constraint:\r\n  (forall ((x var537)) (or (= x var537!val!1) (= x var537!val!0)))\r\n  ;; -----------\r\n  (define-fun null-__Array__Int__var3813__ () (Array Int var3813)\r\n    (store (store ((as const (Array Int var3813)) var3813!val!4) 4 var3813!val!7)\r\n       3\r\n       var3813!val!5))\r\n  (define-fun var1731 () (Array Int var3813)\r\n    arr-var3813-init)\r\n  (define-fun var1870!1 () (Array Int var3813)\r\n    (store ((as const (Array Int var3813)) var3813!val!1) 3 var3813!val!6))\r\n  (define-fun var2084!1 () (Array Int var3813)\r\n    (store ((as const (Array Int var3813)) var3813!val!8) 0 var3813!val!2))\r\n  (define-fun var1870 () (Array Int var3813)\r\n    arr-var3813-init)\r\n  (define-fun var2021 () var537\r\n    var537!val!0)\r\n  (define-fun null-var537 () var537\r\n    var537!val!1)\r\n  (define-fun var3030 () Int\r\n    var2112-generatedStates)\r\n  (define-fun var2084 () (Array Int var3813)\r\n    arr-var3813-init)\r\n  (define-fun var1731!1 () (Array Int var3813)\r\n    (store ((as const (Array Int var3813)) var3813!val!3) 0 var3813!val!0))\r\n  (define-fun var2112-generatedStates () Int\r\n    0)\r\n  (define-fun var2021!2 () var537\r\n    var537!val!1)\r\n  (define-fun var2021!3 () var537\r\n    var537!val!1)\r\n  (define-fun var2084!2 () (Array Int var3813)\r\n    ((as const (Array Int var3813)) var3813!val!0))\r\n  (define-fun arr-var3813-init () (Array Int var3813)\r\n    ((as const (Array Int var3813)) var3813!val!0))\r\n  (define-fun var2021!1 () var537\r\n    var537!val!1)\r\n  (define-fun var1870!2 () (Array Int var3813)\r\n    ((as const (Array Int var3813)) var3813!val!0))\r\n  (define-fun var1731!2 () (Array Int var3813)\r\n    ((as const (Array Int var3813)) var3813!val!0))\r\n  (define-fun k!1 ((x!0 Int)) var3813\r\n    (ite (= x!0 4) var3813!val!7\r\n    (ite (= x!0 3) var3813!val!5\r\n      var3813!val!4)))\r\n  (define-fun cast-from-String-to-var3813 ((x!0 String)) var3813\r\n    (ite (= x!0\r\n            (str.++ (seq.unit (_ Char 32))\r\n                    (seq.unit (_ Char 32))\r\n                    (seq.unit (_ Char 32))\r\n                    (seq.unit (_ Char 114))\r\n                    (seq.unit (_ Char 101))\r\n                    (seq.unit (_ Char 116))\r\n                    (seq.unit (_ Char 117))\r\n                    (seq.unit (_ Char 114))\r\n                    (seq.unit (_ Char 110))\r\n                    (seq.unit (_ Char 32))\r\n                    (seq.unit (_ Char 49))\r\n                    (seq.unit (_ Char 59))))\r\n      var3813!val!1\r\n    (ite (= x!0 (seq.unit (_ Char 125))) var3813!val!2\r\n      var3813!val!0)))\r\n  (define-fun k!2 ((x!0 Int)) var3813\r\n    (ite (= x!0 3) var3813!val!6\r\n      var3813!val!1))\r\n  (define-fun k!3 ((x!0 Int)) var3813\r\n    (ite (= x!0 0) var3813!val!2\r\n      var3813!val!8))\r\n  (define-fun genCodeLine/787715242 ((x!0 var537) (x!1 (Array Int var3813))) void\r\n    void!val!0)\r\n)\r\n(error \"line 52 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11337728,
            "run_time": 0.015601158142089844,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var537 is 2\r\n; rep: (as @var537_0 var537)\r\n; rep: (as @var537_1 var537)\r\n; cardinality of var3813 is 4\r\n; rep: (as @var3813_0 var3813)\r\n; rep: (as @var3813_1 var3813)\r\n; rep: (as @var3813_2 var3813)\r\n; rep: (as @var3813_3 var3813)\r\n; cardinality of var2112 is 1\r\n; rep: (as @var2112_0 var2112)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var3813-init () (Array Int var3813) ((as const (Array Int var3813)) (as @var3813_0 var3813)))\r\n(define-fun cast-from-String-to-var3813 ((_arg_1 String)) var3813 (ite (= \"{\" _arg_1) (as @var3813_0 var3813) (ite (= \"   return 1;\" _arg_1) (as @var3813_1 var3813) (as @var3813_3 var3813))))\r\n(define-fun genCodeLine/787715242 ((BOUND_VARIABLE_693 var537) (BOUND_VARIABLE_694 (Array Int var3813))) void (as @void_0 void))\r\n(define-fun null-var537 () var537 (as @var537_0 var537))\r\n(define-fun null-__Array__Int__var3813__ () (Array Int var3813) (store ((as const (Array Int var3813)) (as @var3813_1 var3813)) 0 (as @var3813_2 var3813)))\r\n(define-fun var2112-generatedStates () Int 0)\r\n(define-fun var2021 () var537 (as @var537_1 var537))\r\n(define-fun var1731!1 () (Array Int var3813) ((as const (Array Int var3813)) (as @var3813_0 var3813)))\r\n(define-fun var2021!1 () var537 (as @var537_0 var537))\r\n(define-fun var1731!2 () (Array Int var3813) ((as const (Array Int var3813)) (as @var3813_0 var3813)))\r\n(define-fun var1870!1 () (Array Int var3813) (store ((as const (Array Int var3813)) (as @var3813_2 var3813)) 0 (as @var3813_1 var3813)))\r\n(define-fun var2021!2 () var537 (as @var537_0 var537))\r\n(define-fun var1870!2 () (Array Int var3813) ((as const (Array Int var3813)) (as @var3813_0 var3813)))\r\n(define-fun var2084!1 () (Array Int var3813) ((as const (Array Int var3813)) (as @var3813_3 var3813)))\r\n(define-fun var2021!3 () var537 (as @var537_0 var537))\r\n(define-fun var2084!2 () (Array Int var3813) ((as const (Array Int var3813)) (as @var3813_0 var3813)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35921920,
            "run_time": 0.07621884346008301,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3813:\n  ;;   var3813!val!0 var3813!val!8 var3813!val!4 var3813!val!1 var3813!val!5 var3813!val!7 var3813!val!2 var3813!val!3 var3813!val!6 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3813!val!0 () var3813)\n  (declare-fun var3813!val!8 () var3813)\n  (declare-fun var3813!val!4 () var3813)\n  (declare-fun var3813!val!1 () var3813)\n  (declare-fun var3813!val!5 () var3813)\n  (declare-fun var3813!val!7 () var3813)\n  (declare-fun var3813!val!2 () var3813)\n  (declare-fun var3813!val!3 () var3813)\n  (declare-fun var3813!val!6 () var3813)\n  ;; cardinality constraint:\n  (forall ((x var3813))\n          (or (= x var3813!val!0)\n              (= x var3813!val!8)\n              (= x var3813!val!4)\n              (= x var3813!val!1)\n              (= x var3813!val!5)\n              (= x var3813!val!7)\n              (= x var3813!val!2)\n              (= x var3813!val!3)\n              (= x var3813!val!6)))\n  ;; -----------\n  ;; universe for var537:\n  ;;   var537!val!1 var537!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var537!val!1 () var537)\n  (declare-fun var537!val!0 () var537)\n  ;; cardinality constraint:\n  (forall ((x var537)) (or (= x var537!val!1) (= x var537!val!0)))\n  ;; -----------\n  (define-fun null-__Array__Int__var3813__ () (Array Int var3813)\n    (store (store ((as const (Array Int var3813)) var3813!val!4) 4 var3813!val!7)\n       3\n       var3813!val!5))\n  (define-fun var3030 () Int\n    var2112-generatedStates)\n  (define-fun var2084 () (Array Int var3813)\n    arr-var3813-init)\n  (define-fun var1870!1 () (Array Int var3813)\n    (store ((as const (Array Int var3813)) var3813!val!1) 3 var3813!val!6))\n  (define-fun var1731 () (Array Int var3813)\n    arr-var3813-init)\n  (define-fun var2084!1 () (Array Int var3813)\n    (store ((as const (Array Int var3813)) var3813!val!8) 0 var3813!val!2))\n  (define-fun var2021 () var537\n    var537!val!0)\n  (define-fun null-var537 () var537\n    var537!val!1)\n  (define-fun var1870 () (Array Int var3813)\n    arr-var3813-init)\n  (define-fun var1731!1 () (Array Int var3813)\n    (store ((as const (Array Int var3813)) var3813!val!3) 0 var3813!val!0))\n  (define-fun var2112-generatedStates () Int\n    0)\n  (define-fun var2021!2 () var537\n    var537!val!1)\n  (define-fun var2021!3 () var537\n    var537!val!1)\n  (define-fun var2084!2 () (Array Int var3813)\n    ((as const (Array Int var3813)) var3813!val!0))\n  (define-fun arr-var3813-init () (Array Int var3813)\n    ((as const (Array Int var3813)) var3813!val!0))\n  (define-fun var2021!1 () var537\n    var537!val!1)\n  (define-fun var1870!2 () (Array Int var3813)\n    ((as const (Array Int var3813)) var3813!val!0))\n  (define-fun var1731!2 () (Array Int var3813)\n    ((as const (Array Int var3813)) var3813!val!0))\n  (define-fun k!1 ((x!0 Int)) var3813\n    (ite (= x!0 4) var3813!val!7\n    (ite (= x!0 3) var3813!val!5\n      var3813!val!4)))\n  (define-fun k!2 ((x!0 Int)) var3813\n    (ite (= x!0 3) var3813!val!6\n      var3813!val!1))\n  (define-fun k!3 ((x!0 Int)) var3813\n    (ite (= x!0 0) var3813!val!2\n      var3813!val!8))\n  (define-fun cast-from-String-to-var3813 ((x!0 String)) var3813\n    (ite (= x!0 \"   return 1;\") var3813!val!1\n    (ite (= x!0 \"}\") var3813!val!2\n      var3813!val!0)))\n  (define-fun genCodeLine/787715242 ((x!0 var537) (x!1 (Array Int var3813))) void\n    void!val!0)\n)\n(error \"line 52 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 171892736,
            "run_time": 0.8339149951934814,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2084!1 () (Array Int var3813) (store ((as const (Array Int var3813)) var3813!54) 0 var3813!50))\r\n  (define-fun var1870!1 () (Array Int var3813) (store ((as const (Array Int var3813)) var3813!52) 0 var3813!48))\r\n  (define-fun var1731!1 () (Array Int var3813) (store ((as const (Array Int var3813)) var3813!56) 0 var3813!46))\r\n  (define-fun var2021 () var537 var537!32)\r\n  (define-fun var2112-generatedStates () Int 0)\r\n  (define-fun null-__Array__Int__var3813__ () (Array Int var3813) ((as const (Array Int var3813)) var3813!0))\r\n  (define-fun null-var537 () var537 var537!30)\r\n  (define-fun var3813!50 () var3813 (cast-from-String-to-var3813 \"}\"))\r\n  (define-fun var3813!48 () var3813 (cast-from-String-to-var3813 \"   return 1;\"))\r\n  (define-fun var3813!46 () var3813 (cast-from-String-to-var3813 \"{\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 12,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.CodeGenerator",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r1[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r1)",
            "$i0 = <org.javacc.parser.NfaState: int generatedStates>",
            "if $i0 == 0 goto $r2 = newarray (java.lang.Object)[1]",
            "$r2 = newarray (java.lang.Object)[1]",
            "$r2[0] = \"   return 1;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r2)",
            "$r3 = newarray (java.lang.Object)[1]",
            "$r3[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.RStringLiteral__DumpStartWithStates__1584747691\\1679.smt2",
        "z3": {
            "memory": 11198464,
            "run_time": 0.044718027114868164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2110:\r\n  ;;   var2110!val!0 var2110!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2110!val!0 () var2110)\r\n  (declare-fun var2110!val!1 () var2110)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2110)) (or (= x var2110!val!0) (= x var2110!val!1)))\r\n  ;; -----------\r\n  (define-fun var3617 () Bool\r\n    var2554_isOutputLanguageJava/1735442213)\r\n  (define-fun var1332 () String\r\n    (str.++ var217!1 \"Output language type not fully implemented : \"))\r\n  (define-fun null-var2110 () var2110\r\n    var2110!val!1)\r\n  (define-fun var2554_getOutputLanguage/-1523304050 () String\r\n    \"\")\r\n  (define-fun var1651 () String\r\n    (str.++ var217!1\r\n        \"Output language type not fully implemented : \"\r\n        var2554_getOutputLanguage/-1523304050))\r\n  (define-fun var1437 () String\r\n    var2554_getOutputLanguage/-1523304050)\r\n  (define-fun var2865 () String\r\n    (str.++ var217!1\r\n        \"Output language type not fully implemented : \"\r\n        var2554_getOutputLanguage/-1523304050))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1464 () var50\r\n    var50-init)\r\n  (define-fun var2143 () String\r\n    var2554_getOutputLanguage/-1523304050)\r\n  (define-fun var217 () String\r\n    String-init)\r\n  (define-fun var449 () var2110\r\n    var2110!val!0)\r\n  (define-fun var2724 () Bool\r\n    (= var2554_getOutputLanguage/-1523304050 \"c++\"))\r\n  (define-fun var217!2 () String\r\n    \"Output language type not fully implemented : \")\r\n  (define-fun var2554_isOutputLanguageJava/1735442213 () Bool\r\n    false)\r\n  (define-fun var1332!1 () String\r\n    \"Output language type not fully implemented : \")\r\n  (define-fun var217!1 () String\r\n    \"\")\r\n  (define-fun var2865!1 () String\r\n    \"\")\r\n  (define-fun var1464!1 () var50\r\n    var50!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var50-init () var50\r\n    var50!val!0)\r\n  (define-fun <init>/-1084991535 ((x!0 var50) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 54 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11309056,
            "run_time": 0.014527320861816406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2110 is 2\r\n; rep: (as @var2110_0 var2110)\r\n; rep: (as @var2110_1 var2110)\r\n; cardinality of var2554 is 1\r\n; rep: (as @var2554_0 var2554)\r\n; cardinality of var50 is 1\r\n; rep: (as @var50_0 var50)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2554_isOutputLanguageJava/1735442213 () Bool false)\r\n(define-fun var2554_getOutputLanguage/-1523304050 () String \"\")\r\n(define-fun var50-init () var50 (as @var50_0 var50))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1084991535 ((BOUND_VARIABLE_624 var50) (BOUND_VARIABLE_625 String)) void (as @void_0 void))\r\n(define-fun null-var2110 () var2110 (as @var2110_0 var2110))\r\n(define-fun var449 () var2110 (as @var2110_1 var2110))\r\n(define-fun var217!1 () String \"\")\r\n(define-fun var217!2 () String \"Output language type not fully implemented : \")\r\n(define-fun var1332!1 () String \"Output language type not fully implemented : \")\r\n(define-fun var1464!1 () var50 (as @var50_0 var50))\r\n(define-fun var2865!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36642816,
            "run_time": 0.04665827751159668,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2110:\n  ;;   var2110!val!0 var2110!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2110!val!0 () var2110)\n  (declare-fun var2110!val!1 () var2110)\n  ;; cardinality constraint:\n  (forall ((x var2110)) (or (= x var2110!val!0) (= x var2110!val!1)))\n  ;; -----------\n  (define-fun var1651 () String\n    (str.++ var217!1\n        \"Output language type not fully implemented : \"\n        var2554_getOutputLanguage/-1523304050))\n  (define-fun var1437 () String\n    var2554_getOutputLanguage/-1523304050)\n  (define-fun null-var2110 () var2110\n    var2110!val!1)\n  (define-fun var2865 () String\n    (str.++ var217!1\n        \"Output language type not fully implemented : \"\n        var2554_getOutputLanguage/-1523304050))\n  (define-fun var2724 () Bool\n    (= var2554_getOutputLanguage/-1523304050 \"c++\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3617 () Bool\n    var2554_isOutputLanguageJava/1735442213)\n  (define-fun var2143 () String\n    var2554_getOutputLanguage/-1523304050)\n  (define-fun var217 () String\n    String-init)\n  (define-fun var2554_getOutputLanguage/-1523304050 () String\n    \"\")\n  (define-fun var449 () var2110\n    var2110!val!0)\n  (define-fun var1464 () var50\n    var50-init)\n  (define-fun var1332 () String\n    (str.++ var217!1 \"Output language type not fully implemented : \"))\n  (define-fun var217!2 () String\n    \"Output language type not fully implemented : \")\n  (define-fun var2554_isOutputLanguageJava/1735442213 () Bool\n    false)\n  (define-fun var1332!1 () String\n    \"Output language type not fully implemented : \")\n  (define-fun var217!1 () String\n    \"\")\n  (define-fun var2865!1 () String\n    \"\")\n  (define-fun var1464!1 () var50\n    var50!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var50-init () var50\n    var50!val!0)\n  (define-fun <init>/-1084991535 ((x!0 var50) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 54 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179920896,
            "run_time": 0.792320728302002,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2110/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.RStringLiteral__DumpStartWithStates__1584747691\\1679.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1332!1 =\r\n     concat(\"Output language type not fully implemented : \", var2554_getOutputLanguage/-1523304050)\r\n\r\n562ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r7 := @parameter0: org.javacc.parser.CodeGenerator",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean isOutputLanguageJava()>()",
            "if $z0 == 0 goto $r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$z1 = virtualinvoke $r0.<java.lang.String: boolean equals(java.lang.Object)>(\"c++\")",
            "if $z1 == 0 goto $r1 = new java.lang.RuntimeException",
            "$r1 = new java.lang.RuntimeException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Output language type not fully implemented : \")",
            "$r3 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.RuntimeException: void <init>(java.lang.String)>($r6)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.RStringLiteral__dump__-1030690330\\2107.smt2",
        "z3": {
            "memory": 32251904,
            "run_time": 0.04264378547668457,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1727:\r\n  ;;   var1727!val!0 var1727!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1727!val!0 () var1727)\r\n  (declare-fun var1727!val!1 () var1727)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1727)) (or (= x var1727!val!0) (= x var1727!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1247:\r\n  ;;   var1247!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1247!val!0 () var1247)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1247)) (= x var1247!val!0))\r\n  ;; -----------\r\n  ;; universe for var1272:\r\n  ;;   var1272!val!0 var1272!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1272!val!0 () var1272)\r\n  (declare-fun var1272!val!1 () var1272)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1272)) (or (= x var1272!val!0) (= x var1272!val!1)))\r\n  ;; -----------\r\n  (define-fun var2968 () var1272\r\n    var1272!val!0)\r\n  (define-fun null-var1272 () var1272\r\n    var1272!val!1)\r\n  (define-fun null-var1727 () var1727\r\n    var1727!val!1)\r\n  (define-fun var3855 () String\r\n    (append/1183289509\r\n  (dump/1357828560 (cast-from-var1272-to-var1247 var2968) var499 var3338)\r\n  32))\r\n  (define-fun var2999 () String\r\n    (image/-300401223 var2968))\r\n  (define-fun var1931 () String\r\n    (str.++ (append/1183289509\r\n          (dump/1357828560 (cast-from-var1272-to-var1247 var2968)\r\n                           var499\r\n                           var3338)\r\n          32)\r\n        (image/-300401223 var2968)))\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var3855!1 () String\r\n    \"\")\r\n  (define-fun var431 () String\r\n    (dump/1357828560 (cast-from-var1272-to-var1247 var2968) var499 var3338))\r\n  (define-fun var3338 () var1727\r\n    var1727!val!0)\r\n  (define-fun var499 () Int\r\n    2)\r\n  (define-fun dump/1357828560 ((x!0 var1247) (x!1 Int) (x!2 var1727)) String\r\n    \"!0!\")\r\n  (define-fun cast-from-var1272-to-var1247 ((x!0 var1272)) var1247\r\n    var1247!val!0)\r\n  (define-fun append/1183289509 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun image/-300401223 ((x!0 var1272)) String\r\n    \"\")\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.014601707458496094,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1272 is 2\r\n; rep: (as @var1272_0 var1272)\r\n; rep: (as @var1272_1 var1272)\r\n; cardinality of var1727 is 2\r\n; rep: (as @var1727_0 var1727)\r\n; rep: (as @var1727_1 var1727)\r\n; cardinality of var1247 is 1\r\n; rep: (as @var1247_0 var1247)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun dump/1357828560 ((_arg_1 var1247) (_arg_2 Int) (_arg_3 var1727)) String \"A\")\r\n(define-fun cast-from-var1272-to-var1247 ((_arg_1 var1272)) var1247 (as @var1247_0 var1247))\r\n(define-fun append/1183289509 ((_arg_1 String) (_arg_2 Int)) String \"\")\r\n(define-fun image/-300401223 ((BOUND_VARIABLE_649 var1272)) String \"\")\r\n(define-fun null-var1272 () var1272 (as @var1272_0 var1272))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var1727 () var1727 (as @var1727_0 var1727))\r\n(define-fun var2968 () var1272 (as @var1272_1 var1272))\r\n(define-fun var499 () Int 0)\r\n(define-fun var3338 () var1727 (as @var1727_1 var1727))\r\n(define-fun var3855!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35848192,
            "run_time": 0.04610180854797363,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 35 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165654528,
            "run_time": 0.6999607086181641,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.RStringLiteral__dump__-1030690330\\2107.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3855!1 =\r\n     concat(all_16_0, rhs)\r\n   ... sat\r\n\r\n463ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>": 1,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.RStringLiteral",
            "i0 := @parameter0: int",
            "r1 := @parameter1: java.util.Set",
            "$r2 = specialinvoke r0.<org.javacc.parser.RegularExpression: java.lang.StringBuffer dump(int,java.util.Set)>(i0, r1)",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(32)",
            "$r3 = r0.<org.javacc.parser.RStringLiteral: java.lang.String image>",
            "r5 = virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3)",
            "return r5"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__makeToolNameList__830449084\\705.smt2",
        "z3": {
            "memory": 179716096,
            "run_time": 60.00094389915466,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13910016,
            "run_time": 0.03127098083496094,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2219 is 1\r\n; rep: (as @var2219_0 var2219)\r\n; cardinality of var2984 is 1\r\n; rep: (as @var2984_0 var2984)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2984-init () var2984 (as @var2984_0 var2984))\r\n(define-fun <init>/-325640736 ((BOUND_VARIABLE_1811 var2984)) void (as @void_0 void))\r\n(define-fun null-String () String \"\")\r\n(define-fun var2740 () Stringu{a}\\u{d}\")\r\n(define-fun var2133!1 () var2984 (as @var2984_0 var2984))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 43741184,
            "run_time": 60.013725996017456,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 221093888,
            "run_time": 60.014577865600586,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: int indexOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int)>": 3
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r7 = new java.util.ArrayList",
            "specialinvoke $r7.<java.util.ArrayList: void <init>()>()",
            "i9 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(10)",
            "$i14 = (int) -1",
            "if i9 != $i14 goto $i8 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(13)",
            "$i8 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(13)",
            "i10 = $i8",
            "$i16 = (int) -1",
            "if $i8 != $i16 goto (branch)",
            "if i9 >= i10 goto $i11 = i10",
            "$i11 = i9",
            "goto [?= (branch)]",
            "if $i11 != 1000 goto r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i11)",
            "r4 = r1",
            "goto [?= $i0 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58)]",
            "$i0 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58)",
            "$i18 = (int) -1",
            "if $i0 != $i18 goto $i1 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58)",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.RStringLiteral__GenerateDfa__-1345065022\\1455.smt2",
        "z3": {
            "memory": 31809536,
            "run_time": 0.07341361045837402,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var444:\r\n  ;;   var444!val!0 var444!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var444!val!0 () var444)\r\n  (declare-fun var444!val!1 () var444)\r\n  ;; cardinality constraint:\r\n  (forall ((x var444)) (or (= x var444!val!0) (= x var444!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3932:\r\n  ;;   var3932!val!1 var3932!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3932!val!1 () var3932)\r\n  (declare-fun var3932!val!0 () var3932)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3932)) (or (= x var3932!val!1) (= x var3932!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3555:\r\n  ;;   var3555!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3555!val!0 () var3555)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3555)) (= x var3555!val!0))\r\n  ;; -----------\r\n  (define-fun var666!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var3932-maxLen () Int\r\n    0)\r\n  (define-fun var2573 () Int\r\n    0)\r\n  (define-fun var2168 () Int\r\n    (ordinal/319082119 (cast-from-var3932-to-var3555 var2233)))\r\n  (define-fun var3067!1 () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun var637 () Int\r\n    var3932-maxLen)\r\n  (define-fun var666 () (Array Int Int)\r\n    var3932-maxLenForActive)\r\n  (define-fun var809 () String\r\n    (image/-300401223 var2233))\r\n  (define-fun var2715 () Int\r\n    (select var3932-maxLenForActive\r\n        (div (ordinal/319082119 (cast-from-var3932-to-var3555 var2233)) 64)))\r\n  (define-fun var2333 () Int\r\n    1)\r\n  (define-fun var3642 () Int\r\n    (ordinal/319082119 (cast-from-var3932-to-var3555 var2233)))\r\n  (define-fun var2043 () Int\r\n    (ordinal/319082119 (cast-from-var3932-to-var3555 var2233)))\r\n  (define-fun var2233 () var3932\r\n    var3932!val!0)\r\n  (define-fun var1981 () String\r\n    (image/-300401223 var2233))\r\n  (define-fun var2366 () Int\r\n    (str.len (image/-300401223 var2233)))\r\n  (define-fun var3932-maxStrKind () Int\r\n    3)\r\n  (define-fun var206 () Int\r\n    var3932-maxStrKind)\r\n  (define-fun var2474 () Int\r\n    (div (ordinal/319082119 (cast-from-var3932-to-var3555 var2233)) 64))\r\n  (define-fun var486 () Int\r\n    (let ((a!1 (select var3932-maxLenForActive\r\n                   (div (ordinal/319082119\r\n                          (cast-from-var3932-to-var3555 var2233))\r\n                        64))))\r\n  (var2879_max/1360571700 a!1 (- (str.len (image/-300401223 var2233)) 1))))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 0) 0 1))\r\n  (define-fun var3067 () (Array Int String)\r\n    var3932-allImages)\r\n  (define-fun null-__Array__Int__String__ () (Array Int String)\r\n    ((as const (Array Int String)) \"A\"))\r\n  (define-fun var2979 () (Array Int Int)\r\n    var3932-maxLenForActive)\r\n  (define-fun var3804 () var444\r\n    var444!val!0)\r\n  (define-fun null-var444 () var444\r\n    var444!val!1)\r\n  (define-fun var860 () Int\r\n    (ordinal/319082119 (cast-from-var3932-to-var3555 var2233)))\r\n  (define-fun var3099 () Int\r\n    (div (ordinal/319082119 (cast-from-var3932-to-var3555 var2233)) 64))\r\n  (define-fun var1989 () Int\r\n    (- (str.len (image/-300401223 var2233)) 1))\r\n  (define-fun null-var3932 () var3932\r\n    var3932!val!1)\r\n  (define-fun var3932-maxLenForActive () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var3932-allImages () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun image/-300401223 ((x!0 var3932)) String\r\n    \"\")\r\n  (define-fun cast-from-var3932-to-var3555 ((x!0 var3932)) var3555\r\n    var3555!val!0)\r\n  (define-fun ordinal/319082119 ((x!0 var3555)) Int\r\n    2)\r\n  (define-fun var2879_max/1360571700 ((x!0 Int) (x!1 Int)) Int\r\n    0)\r\n)\r\n(error \"line 66 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11292672,
            "run_time": 0.015561103820800781,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3932 is 2\r\n; rep: (as @var3932_0 var3932)\r\n; rep: (as @var3932_1 var3932)\r\n; cardinality of var444 is 2\r\n; rep: (as @var444_0 var444)\r\n; rep: (as @var444_1 var444)\r\n; cardinality of var3555 is 1\r\n; rep: (as @var3555_0 var3555)\r\n; cardinality of var2879 is 1\r\n; rep: (as @var2879_0 var2879)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun ordinal/319082119 ((_arg_1 var3555)) Int 0)\r\n(define-fun cast-from-var3932-to-var3555 ((_arg_1 var3932)) var3555 (as @var3555_0 var3555))\r\n(define-fun image/-300401223 ((_arg_1 var3932)) String \"\")\r\n(define-fun var2879_max/1360571700 ((_arg_1 Int) (_arg_2 Int)) Int 0)\r\n(define-fun null-var3932 () var3932 (as @var3932_0 var3932))\r\n(define-fun null-var444 () var444 (as @var444_0 var444))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3932-maxStrKind () Int 1)\r\n(define-fun var3932-maxLen () Int 0)\r\n(define-fun var3932-maxLenForActive () (Array Int Int) (store ((as const (Array Int Int)) (- 1)) 0 0))\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var3932-allImages () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun null-__Array__Int__String__ () (Array Int String) ((as const (Array Int String)) \"A\"))\r\n(define-fun var2233 () var3932 (as @var3932_1 var3932))\r\n(define-fun var3804 () var444 (as @var444_1 var444))\r\n(define-fun var2333 () Int 0)\r\n(define-fun var666!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3067!1 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35835904,
            "run_time": 0.04590415954589844,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 65 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 66 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 216289280,
            "run_time": 1.1008083820343018,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3067!1 () (Array Int String) (store ((as const (Array Int String)) \"\\u{0}\") 895 \"\"))\r\n  (define-fun var666!1 () (Array Int Int) (store ((as const (Array Int Int)) 899) 13 896))\r\n  (define-fun var2333 () Int 1)\r\n  (define-fun var3804 () var444 var444!8)\r\n  (define-fun var2233 () var3932 var3932!6)\r\n  (define-fun null-__Array__Int__String__ () (Array Int String) ((as const (Array Int String)) \"\"))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 898) 13 897))\r\n  (define-fun var3932-maxLenForActive () (Array Int Int) (store ((as const (Array Int Int)) 898) 13 897))\r\n  (define-fun var3932-maxLen () Int 0)\r\n  (define-fun var3932-maxStrKind () Int 896)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var444 () var444 var444!4)\r\n  (define-fun null-var3932 () var3932 var3932!2)\r\n  (define-fun var3555!24 () var3555 (cast-from-var3932-to-var3555 var3932!6))\r\n  (define-fun var2879_max/1360571700 ((x!0 Int) (x!1 Int)) Int (ite (and (= x!0 897) (= x!1 (- 1))) 896 0))\r\n  (define-fun image/-300401223 ((x!0 var3932)) String (ite (= x!0 var3932!6) \"\" \"\"))\r\n  (define-fun ordinal/319082119 ((x!0 var3555)) Int (ite (= x!0 var3555!24) 895 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.RStringLiteral",
            "r59 := @parameter0: org.javacc.parser.CodeGenerator",
            "i36 := @parameter1: int",
            "$i1 = <org.javacc.parser.RStringLiteral: int maxStrKind>",
            "$i0 = r0.<org.javacc.parser.RStringLiteral: int ordinal>",
            "if $i1 > $i0 goto $r1 = r0.<org.javacc.parser.RStringLiteral: java.lang.String image>",
            "$r1 = r0.<org.javacc.parser.RStringLiteral: java.lang.String image>",
            "$i2 = virtualinvoke $r1.<java.lang.String: int length()>()",
            "$i3 = <org.javacc.parser.RStringLiteral: int maxLen>",
            "if $i2 <= $i3 goto i37 = 0",
            "i37 = 0",
            "if i37 >= $i2 goto $r3 = <org.javacc.parser.RStringLiteral: int[] maxLenForActive>",
            "$r3 = <org.javacc.parser.RStringLiteral: int[] maxLenForActive>",
            "$i4 = r0.<org.javacc.parser.RStringLiteral: int ordinal>",
            "$i10 = $i4 / 64",
            "$r2 = <org.javacc.parser.RStringLiteral: int[] maxLenForActive>",
            "$i5 = r0.<org.javacc.parser.RStringLiteral: int ordinal>",
            "$i6 = $i5 / 64",
            "$i8 = $r2[$i6]",
            "$i7 = $i2 - 1",
            "$i9 = staticinvoke <java.lang.Math: int max(int,int)>($i8, $i7)",
            "$r3[$i10] = $i9",
            "$r5 = <org.javacc.parser.RStringLiteral: java.lang.String[] allImages>",
            "$i11 = r0.<org.javacc.parser.RStringLiteral: int ordinal>",
            "$r4 = r0.<org.javacc.parser.RStringLiteral: java.lang.String image>",
            "$r5[$i11] = $r4",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.RStringLiteral__GenerateNfa__-1267728054\\1496-deviant-0.smt2",
        "z3": {
            "memory": 28368896,
            "run_time": 0.03768110275268555,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 31 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11317248,
            "run_time": 0.015619993209838867,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36425728,
            "run_time": 0.06085348129272461,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 31 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 160063488,
            "run_time": 0.7265596389770508,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.RStringLiteral",
            "z1 := @parameter0: boolean",
            "$r1 = r0.<org.javacc.parser.RStringLiteral: java.lang.String image>",
            "$i0 = virtualinvoke $r1.<java.lang.String: int length()>()",
            "if $i0 != 1 goto $r2 = new org.javacc.parser.NfaState",
            "$r12 = new org.javacc.parser.RCharacterList",
            "$r13 = r0.<org.javacc.parser.RStringLiteral: java.lang.String image>",
            "$c8 = virtualinvoke $r13.<java.lang.String: char charAt(int)>(0)",
            "specialinvoke $r12.<org.javacc.parser.RCharacterList: void <init>(char)>($c8)",
            "$r14 = virtualinvoke $r12.<org.javacc.parser.RCharacterList: org.javacc.parser.Nfa GenerateNfa(boolean)>(z1)",
            "return $r14"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.RStringLiteral__GenerateNfa__-1267728054\\1496.smt2",
        "z3": {
            "memory": 31809536,
            "run_time": 0.04338479042053223,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3625:\r\n  ;;   var3625!val!0 var3625!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3625!val!0 () var3625)\r\n  (declare-fun var3625!val!1 () var3625)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3625)) (or (= x var3625!val!0) (= x var3625!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var3625 () var3625\r\n    var3625!val!1)\r\n  (define-fun var619 () var1148\r\n    (GenerateNfa/1138043873 var12!1 var839))\r\n  (define-fun var883 () String\r\n    (image/-300401223 var99))\r\n  (define-fun var99 () var3625\r\n    var3625!val!0)\r\n  (define-fun var1878 () Int\r\n    (str.len (image/-300401223 var99)))\r\n  (define-fun var839 () Bool\r\n    true)\r\n  (define-fun var12 () var3990\r\n    var3990-init)\r\n  (define-fun var2976 () String\r\n    (image/-300401223 var99))\r\n  (define-fun var873 () Int\r\n    (str.to_code (str.at (image/-300401223 var99) 0)))\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var12!1 () var3990\r\n    var3990!val!0)\r\n  (define-fun var3990-init () var3990\r\n    var3990!val!0)\r\n  (define-fun var873!1 () Int\r\n    0)\r\n  (define-fun image/-300401223 ((x!0 var3625)) String\r\n    \"A\")\r\n  (define-fun GenerateNfa/1138043873 ((x!0 var3990) (x!1 Bool)) var1148\r\n    var1148!val!0)\r\n  (define-fun <init>/-888322663 ((x!0 var3990) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 41 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.015621423721313477,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3625 is 2\r\n; rep: (as @var3625_0 var3625)\r\n; rep: (as @var3625_1 var3625)\r\n; cardinality of var3990 is 1\r\n; rep: (as @var3990_0 var3990)\r\n; cardinality of var1148 is 1\r\n; rep: (as @var1148_0 var1148)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun image/-300401223 ((_arg_1 var3625)) String \"A\")\r\n(define-fun var3990-init () var3990 (as @var3990_0 var3990))\r\n(define-fun <init>/-888322663 ((BOUND_VARIABLE_565 var3990) (BOUND_VARIABLE_566 Int)) void (as @void_0 void))\r\n(define-fun GenerateNfa/1138043873 ((BOUND_VARIABLE_569 var3990) (BOUND_VARIABLE_570 Bool)) var1148 (as @var1148_0 var1148))\r\n(define-fun null-var3625 () var3625 (as @var3625_0 var3625))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var99 () var3625 (as @var3625_1 var3625))\r\n(define-fun var839 () Bool false)\r\n(define-fun var12!1 () var3990 (as @var3990_0 var3990))\r\n(define-fun var873!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36372480,
            "run_time": 0.0467076301574707,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 40 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 41 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173604864,
            "run_time": 0.7590055465698242,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var99 () var3625 var3625!6)\r\n  (define-fun null-var3625 () var3625 var3625!4)\r\n  (define-fun var839 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n  (define-fun image/-300401223 ((x!0 var3625)) String (ite (= x!0 var3625!6) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.RStringLiteral",
            "z1 := @parameter0: boolean",
            "$r1 = r0.<org.javacc.parser.RStringLiteral: java.lang.String image>",
            "$i0 = virtualinvoke $r1.<java.lang.String: int length()>()",
            "if $i0 != 1 goto $r2 = new org.javacc.parser.NfaState",
            "$r12 = new org.javacc.parser.RCharacterList",
            "$r13 = r0.<org.javacc.parser.RStringLiteral: java.lang.String image>",
            "$c8 = virtualinvoke $r13.<java.lang.String: char charAt(int)>(0)",
            "specialinvoke $r12.<org.javacc.parser.RCharacterList: void <init>(char)>($c8)",
            "$r14 = virtualinvoke $r12.<org.javacc.parser.RCharacterList: org.javacc.parser.Nfa GenerateNfa(boolean)>(z1)",
            "return $r14"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.RStringLiteral__GetLabel__1245787386\\1576.smt2",
        "z3": {
            "memory": 7340032,
            "run_time": 0.059891700744628906,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 54 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11313152,
            "run_time": 0.01591634750366211,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35885056,
            "run_time": 0.04599714279174805,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 54 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166326272,
            "run_time": 0.7134475708007812,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "i0 := @parameter0: int",
            "$r0 = <org.javacc.parser.Main: org.javacc.parser.LexGen lg>",
            "$r1 = <org.javacc.parser.LexGen: org.javacc.parser.RegularExpression[] rexprs>",
            "r2 = $r1[i0]",
            "$z0 = r2 instanceof org.javacc.parser.RStringLiteral",
            "if $z0 == 0 goto $r3 = r2.<org.javacc.parser.RegularExpression: java.lang.String label>",
            "$r15 = new java.lang.StringBuilder",
            "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()",
            "$r19 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \\\"\")",
            "$r16 = (org.javacc.parser.RStringLiteral) r2",
            "$r17 = $r16.<org.javacc.parser.RStringLiteral: java.lang.String image>",
            "$r18 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String add_escapes(java.lang.String)>($r17)",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r22"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.LexGenCPP__DumpFillToken__-1163295368\\1136.smt2",
        "z3": {
            "memory": 34832384,
            "run_time": 60.004217863082886,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 18497536,
            "run_time": 60.00232982635498,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35950592,
            "run_time": 0.07530379295349121,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 192 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 193 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 124977152,
            "run_time": 0.49603939056396484,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.LexGenCPP__DumpFillToken__-1163295368\\1136.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n286ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 54,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.LexGenCPP",
            "d0 = staticinvoke <org.javacc.parser.JavaFiles: double getVersion(java.lang.String)>(\"Token.java\")",
            "$b0 = d0 cmpl 4.09",
            "$i2 = (int) $b0",
            "if $i2 <= 0 goto $z6 = 0",
            "$z6 = 1",
            "goto [?= z0 = $z6]",
            "z0 = $z6",
            "$r1 = <org.javacc.parser.LexGenCPP: java.lang.String tokMgrClassName>",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void generateMethodDefHeader(java.lang.String,java.lang.String,java.lang.String)>(\"Token *\", $r1, \"jjFillToken()\")",
            "$r2 = newarray (java.lang.Object)[1]",
            "$r2[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r2)",
            "$r3 = newarray (java.lang.Object)[1]",
            "$r3[0] = \"   Token *t;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r3)",
            "$r4 = newarray (java.lang.Object)[1]",
            "$r4[0] = \"   JJString curTokenImage;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r4)",
            "$z1 = <org.javacc.parser.LexGenCPP: boolean keepLineCol>",
            "if $z1 == 0 goto $z2 = <org.javacc.parser.LexGenCPP: boolean hasEmptyMatch>",
            "$z2 = <org.javacc.parser.LexGenCPP: boolean hasEmptyMatch>",
            "if $z2 == 0 goto $r5 = newarray (java.lang.Object)[1]",
            "$r5 = newarray (java.lang.Object)[1]",
            "$r5[0] = \"   JJString im = jjstrLiteralImages[jjmatchedKind];\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r5)",
            "$r6 = newarray (java.lang.Object)[1]",
            "$r6[0] = \"   curTokenImage = (im.length() == 0) ? input_stream->GetImage() : im;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r6)",
            "$z3 = <org.javacc.parser.LexGenCPP: boolean keepLineCol>",
            "if $z3 == 0 goto $r70 = staticinvoke <org.javacc.parser.Options: java.lang.String getTokenFactory()>()",
            "$r70 = staticinvoke <org.javacc.parser.Options: java.lang.String getTokenFactory()>()",
            "$i1 = virtualinvoke $r70.<java.lang.String: int length()>()",
            "if $i1 <= 0 goto (branch)",
            "$r33 = newarray (java.lang.Object)[1]",
            "$r73 = new java.lang.StringBuilder",
            "specialinvoke $r73.<java.lang.StringBuilder: void <init>()>()",
            "$r37 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"   t = \")",
            "$r35 = staticinvoke <org.javacc.parser.Options: java.lang.String getTokenFactory()>()",
            "$r36 = virtualinvoke r0.<org.javacc.parser.LexGenCPP: java.lang.String getClassQualifier(java.lang.String)>($r35)",
            "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)",
            "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"newToken(jjmatchedKind, curTokenImage);\")",
            "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r33[0] = $r40",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r33)",
            "goto [?= $r71 = newarray (java.lang.Object)[1]]",
            "$r71 = newarray (java.lang.Object)[1]",
            "$r71[0] = \"   t->specialToken = nullptr;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r71)",
            "$r72 = newarray (java.lang.Object)[1]",
            "$r72[0] = \"   t->next = nullptr;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r72)",
            "$z7 = <org.javacc.parser.LexGenCPP: boolean keepLineCol>",
            "if $z7 == 0 goto $r16 = newarray (java.lang.Object)[1]",
            "$r16 = newarray (java.lang.Object)[1]",
            "$r16[0] = \"\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r16)",
            "$r17 = newarray (java.lang.Object)[1]",
            "$r17[0] = \"   return t;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r17)",
            "$r18 = newarray (java.lang.Object)[1]",
            "$r18[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r18)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.RStringLiteral__ReArrange__-948305816\\1785-deviant-0.smt2",
        "z3": {
            "memory": 32346112,
            "run_time": 0.04491472244262695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var966:\r\n  ;;   var966!val!0 var966!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var966!val!0 () var966)\r\n  (declare-fun var966!val!1 () var966)\r\n  ;; cardinality constraint:\r\n  (forall ((x var966)) (or (= x var966!val!0) (= x var966!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2914:\r\n  ;;   var2914!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2914!val!0 () var2914)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2914)) (= x var2914!val!0))\r\n  ;; -----------\r\n  ;; universe for var1109:\r\n  ;;   var1109!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1109!val!0 () var1109)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1109)) (= x var1109!val!0))\r\n  ;; -----------\r\n  (define-fun null-var966 () var966\r\n    var966!val!1)\r\n  (define-fun var536 () (Array Int String)\r\n    arr-String-init)\r\n  (define-fun var887 () var966\r\n    var966!val!0)\r\n  (define-fun var82 () String\r\n    (cast-from-var1109-to-String\r\n  (var2914_nextElement/-898234352 (keys/-63145882 var887))))\r\n  (define-fun var2115 () Bool\r\n    (var2914_hasMoreElements/-1180312480 (keys/-63145882 var887)))\r\n  (define-fun var1787 () var1109\r\n    (var2914_nextElement/-898234352 (keys/-63145882 var887)))\r\n  (define-fun var2646 () Int\r\n    0)\r\n  (define-fun var3495 () Int\r\n    (size/-623529951 var887))\r\n  (define-fun var1475 () var2914\r\n    (keys/-63145882 var887))\r\n  (define-fun var3065 () Int\r\n    0)\r\n  (define-fun null-__Array__Int__String__ () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun arr-String-init () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun var2914_hasMoreElements/-1180312480 ((x!0 var2914)) Bool\r\n    true)\r\n  (define-fun keys/-63145882 ((x!0 var966)) var2914\r\n    var2914!val!0)\r\n  (define-fun var2914_nextElement/-898234352 ((x!0 var2914)) var1109\r\n    var1109!val!0)\r\n  (define-fun cast-from-var1109-to-String ((x!0 var1109)) String\r\n    \"\")\r\n  (define-fun size/-623529951 ((x!0 var966)) Int\r\n    0)\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11333632,
            "run_time": 0.015259742736816406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var966 is 2\r\n; rep: (as @var966_0 var966)\r\n; rep: (as @var966_1 var966)\r\n; cardinality of var2914 is 1\r\n; rep: (as @var2914_0 var2914)\r\n; cardinality of var1109 is 1\r\n; rep: (as @var1109_0 var1109)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/-623529951 ((BOUND_VARIABLE_579 var966)) Int 0)\r\n(define-fun arr-String-init () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun keys/-63145882 ((_arg_1 var966)) var2914 (as @var2914_0 var2914))\r\n(define-fun var2914_hasMoreElements/-1180312480 ((_arg_1 var2914)) Bool true)\r\n(define-fun var2914_nextElement/-898234352 ((_arg_1 var2914)) var1109 (as @var1109_0 var1109))\r\n(define-fun cast-from-var1109-to-String ((_arg_1 var1109)) String \"\")\r\n(define-fun null-var966 () var966 (as @var966_0 var966))\r\n(define-fun null-__Array__Int__String__ () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var887 () var966 (as @var966_1 var966))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36659200,
            "run_time": 0.04772830009460449,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 36 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182185984,
            "run_time": 0.8645095825195312,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var887 () var966 var966!4)\r\n  (define-fun null-var966 () var966 var966!2)\r\n  (define-fun var1109!20 () var1109 (var2914_nextElement/-898234352 var2914!18))\r\n  (define-fun var2914!18 () var2914 (keys/-63145882 var966!4))\r\n  (define-fun cast-from-var1109-to-String ((x!0 var1109)) String (ite (= x!0 var1109!20) \"\" \"\"))\r\n  (define-fun var2914_hasMoreElements/-1180312480 ((x!0 var2914)) Bool (ite (= x!0 var2914!18) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.util.Hashtable",
            "$i0 = virtualinvoke r0.<java.util.Hashtable: int size()>()",
            "r1 = newarray (java.lang.String)[$i0]",
            "r2 = virtualinvoke r0.<java.util.Hashtable: java.util.Enumeration keys()>()",
            "i4 = 0",
            "$z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>()",
            "if $z0 == 0 goto return r1",
            "i5 = 0",
            "$r3 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>()",
            "$r4 = (java.lang.String) $r3",
            "c1 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0)",
            "if i5 >= i4 goto (branch)",
            "if i5 >= i4 goto r1[i5] = $r4",
            "r1[i5] = $r4",
            "i4 = i4 + 1",
            "goto [?= $z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>()]",
            "$z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>()",
            "if $z0 == 0 goto return r1",
            "return r1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.RStringLiteral__ReArrange__-948305816\\1785.smt2",
        "z3": {
            "memory": 28254208,
            "run_time": 0.04395413398742676,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 52 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.015582799911499023,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36253696,
            "run_time": 0.04654121398925781,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 52 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168546304,
            "run_time": 0.7871205806732178,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.util.Hashtable",
            "$i0 = virtualinvoke r0.<java.util.Hashtable: int size()>()",
            "r1 = newarray (java.lang.String)[$i0]",
            "r2 = virtualinvoke r0.<java.util.Hashtable: java.util.Enumeration keys()>()",
            "i4 = 0",
            "$z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>()",
            "if $z0 == 0 goto return r1",
            "i5 = 0",
            "$r3 = interfaceinvoke r2.<java.util.Enumeration: java.lang.Object nextElement()>()",
            "$r4 = (java.lang.String) $r3",
            "c1 = virtualinvoke $r4.<java.lang.String: char charAt(int)>(0)",
            "if i5 >= i4 goto (branch)",
            "if i5 >= i4 goto r1[i5] = $r4",
            "r1[i5] = $r4",
            "i4 = i4 + 1",
            "goto [?= $z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>()]",
            "$z0 = interfaceinvoke r2.<java.util.Enumeration: boolean hasMoreElements()>()",
            "if $z0 == 0 goto return r1",
            "return r1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.RStringLiteral__StartsWithIgnoreCase__-496237435\\1638.smt2",
        "z3": {
            "memory": 30912512,
            "run_time": 0.03933548927307129,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1662 () String\r\n    \"\")\r\n  (define-fun var1833 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"B\")\r\n  (define-fun var1401 () Int\r\n    (str.len var1662))\r\n  (define-fun var1644 () Int\r\n    (str.len var1833))\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.014913797378540039,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3568 is 1\r\n; rep: (as @var3568_0 var3568)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"B\")\r\n(define-fun var1662 () String \"\")\r\n(define-fun var1833 () String \"A\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37916672,
            "run_time": 0.10806632041931152,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1401 () Int\n    (str.len var1662))\n  (define-fun var1644 () Int\n    (str.len var1833))\n  (define-fun var1833 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1662 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 171487232,
            "run_time": 0.7905042171478271,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1833 () String \"\\u{0}\")\r\n  (define-fun var1662 () String \"\")\r\n  (define-fun null-String () String \"\\u{1}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "if $i1 >= $i0 goto i7 = 0",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.RStringLiteral__toString__200030609\\2124.smt2",
        "z3": {
            "memory": 29351936,
            "run_time": 0.05981016159057617,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3884:\r\n  ;;   var3884!val!1 var3884!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3884!val!1 () var3884)\r\n  (declare-fun var3884!val!0 () var3884)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3884)) (or (= x var3884!val!1) (= x var3884!val!0)))\r\n  ;; -----------\r\n  (define-fun var1463 () var3884\r\n    var3884!val!0)\r\n  (define-fun var926 () String\r\n    (str.++ var3890!1\r\n        (toString/-1508376302 (cast-from-var3884-to-var92 var1463))\r\n        \" - \"\r\n        (image/-300401223 var1463)))\r\n  (define-fun var1930 () String\r\n    (toString/-1508376302 (cast-from-var3884-to-var92 var1463)))\r\n  (define-fun var3014 () String\r\n    (str.++ var3890!1\r\n        (toString/-1508376302 (cast-from-var3884-to-var92 var1463))\r\n        \" - \"))\r\n  (define-fun var1991 () String\r\n    (image/-300401223 var1463))\r\n  (define-fun null-var3884 () var3884\r\n    var3884!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3890 () String\r\n    String-init)\r\n  (define-fun var2027 () String\r\n    (str.++ var3890!1 (toString/-1508376302 (cast-from-var3884-to-var92 var1463))))\r\n  (define-fun var1915 () String\r\n    (str.++ var3890!1\r\n        (toString/-1508376302 (cast-from-var3884-to-var92 var1463))\r\n        \" - \"\r\n        (image/-300401223 var1463)))\r\n  (define-fun var3014!1 () String\r\n    \" - \")\r\n  (define-fun var2027!1 () String\r\n    \" - \")\r\n  (define-fun var3890!2 () String\r\n    \"\")\r\n  (define-fun var3890!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var3884-to-var92 ((x!0 var3884)) var92\r\n    var92!val!0)\r\n  (define-fun toString/-1508376302 ((x!0 var92)) String\r\n    \"\")\r\n  (define-fun image/-300401223 ((x!0 var3884)) String\r\n    \"\")\r\n)\r\n(error \"line 44 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11317248,
            "run_time": 0.01464390754699707,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3884 is 2\r\n; rep: (as @var3884_0 var3884)\r\n; rep: (as @var3884_1 var3884)\r\n; cardinality of var92 is 1\r\n; rep: (as @var92_0 var92)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun toString/-1508376302 ((BOUND_VARIABLE_540 var92)) String \"\")\r\n(define-fun cast-from-var3884-to-var92 ((BOUND_VARIABLE_543 var3884)) var92 (as @var92_0 var92))\r\n(define-fun image/-300401223 ((BOUND_VARIABLE_546 var3884)) String \"\")\r\n(define-fun null-var3884 () var3884 (as @var3884_0 var3884))\r\n(define-fun var1463 () var3884 (as @var3884_1 var3884))\r\n(define-fun var3890!1 () String \"\")\r\n(define-fun var3890!2 () String \"\")\r\n(define-fun var2027!1 () String \" - \")\r\n(define-fun var3014!1 () String \" - \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36818944,
            "run_time": 0.07718324661254883,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3884:\n  ;;   var3884!val!1 var3884!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3884!val!1 () var3884)\n  (declare-fun var3884!val!0 () var3884)\n  ;; cardinality constraint:\n  (forall ((x var3884)) (or (= x var3884!val!1) (= x var3884!val!0)))\n  ;; -----------\n  (define-fun var1463 () var3884\n    var3884!val!0)\n  (define-fun var1991 () String\n    (image/-300401223 var1463))\n  (define-fun var1930 () String\n    (toString/-1508376302 (cast-from-var3884-to-var92 var1463)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3890 () String\n    String-init)\n  (define-fun var2027 () String\n    (str.++ var3890!1 (toString/-1508376302 (cast-from-var3884-to-var92 var1463))))\n  (define-fun null-var3884 () var3884\n    var3884!val!1)\n  (define-fun var1915 () String\n    (str.++ var3890!1\n        (toString/-1508376302 (cast-from-var3884-to-var92 var1463))\n        \" - \"\n        (image/-300401223 var1463)))\n  (define-fun var926 () String\n    (str.++ var3890!1\n        (toString/-1508376302 (cast-from-var3884-to-var92 var1463))\n        \" - \"\n        (image/-300401223 var1463)))\n  (define-fun var3014 () String\n    (str.++ var3890!1\n        (toString/-1508376302 (cast-from-var3884-to-var92 var1463))\n        \" - \"))\n  (define-fun var3014!1 () String\n    \" - \")\n  (define-fun var2027!1 () String\n    \" - \")\n  (define-fun var3890!2 () String\n    \"\")\n  (define-fun var3890!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun cast-from-var3884-to-var92 ((x!0 var3884)) var92\n    var92!val!0)\n  (define-fun toString/-1508376302 ((x!0 var92)) String\n    \"\")\n  (define-fun image/-300401223 ((x!0 var3884)) String\n    \"\")\n)\n(error \"line 44 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181436416,
            "run_time": 1.023155689239502,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3884/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.RStringLiteral__toString__200030609\\2124.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3014!1 =\r\n     concat(all_20_5, all_20_4)\r\n   var2027!1 =\r\n     concat(var3890!2, \" - \")\r\n   all_20_5 =\r\n     concat(var3890!2, \" - \")\r\n\r\n732ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<org.javacc.parser.Expansion: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.parser.RStringLiteral",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = specialinvoke r1.<org.javacc.parser.RegularExpression: java.lang.String toString()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" - \")",
            "$r4 = r1.<org.javacc.parser.RStringLiteral: java.lang.String image>",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.OutputFile__checkVersion__1212481238\\1184.smt2",
        "z3": {
            "memory": 32366592,
            "run_time": 60.010854721069336,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10903552,
            "run_time": 0.01517033576965332,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3491 is 2\r\n; rep: (as @var3491_0 var3491)\r\n; rep: (as @var3491_1 var3491)\r\n; cardinality of var904 is 2\r\n; rep: (as @var904_0 var904)\r\n; rep: (as @var904_1 var904)\r\n; cardinality of var1963 is 1\r\n; rep: (as @var1963_0 var1963)\r\n; cardinality of var2566 is 1\r\n; rep: (as @var2566_0 var2566)\r\n; cardinality of var1098 is 1\r\n; rep: (as @var1098_0 var1098)\r\n; cardinality of var328 is 1\r\n; rep: (as @var328_0 var328)\r\n; cardinality of var3225 is 2\r\n; rep: (as @var3225_0 var3225)\r\n; rep: (as @var3225_1 var3225)\r\n; cardinality of var2632 is 1\r\n; rep: (as @var2632_0 var2632)\r\n; cardinality of var880 is 1\r\n; rep: (as @var880_0 var880)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun toolName/-884741558 ((BOUND_VARIABLE_779 var3491)) String \"\")\r\n(define-fun getName/1128186653 ((BOUND_VARIABLE_782 var904)) String \"\")\r\n(define-fun var2566_getIdString/-826932917 ((BOUND_VARIABLE_785 String) (BOUND_VARIABLE_786 String)) String \"\")\r\n(define-fun var1098-init () var1098 (as @var1098_0 var1098))\r\n(define-fun var328-init () var328 (as @var328_0 var328))\r\n(define-fun var2632_semantic_error/-498493661 ((BOUND_VARIABLE_789 String)) void (as @void_0 void))\r\n(define-fun var880-init () var880 (as @var880_0 var880))\r\n(define-fun <init>/1750087229 ((BOUND_VARIABLE_792 var880)) void (as @void_0 void))\r\n(define-fun null-var3491 () var3491 (as @var3491_0 var3491))\r\n(define-fun null-var904 () var904 (as @var904_0 var904))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3225 () var3225 (as @var3225_0 var3225))\r\n(define-fun var3334 () var3491 (as @var3491_1 var3491))\r\n(define-fun var2246 () var904 (as @var904_1 var904))\r\n(define-fun var1435 () String \"\")\r\n(define-fun var3783!1 () String \"\")\r\n(define-fun var3783!2 () String \"/* \")\r\n(define-fun var2361!1 () String \"/* \")\r\n(define-fun var233!1 () String \"/*  Version \")\r\n(define-fun var3077 () var3225 (as @var3225_1 var3225))\r\n(define-fun var1722!1 () String \"\")\r\n(define-fun var1722!2 () String \"Could not open file \")\r\n(define-fun var417!1 () String \"Could not open file \")\r\n(define-fun var68!1 () String \"Could not open file  for writing.\")\r\n(define-fun var1116!1 () String \"\")\r\n(define-fun var676!1 () var880 (as @var880_0 var880))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37384192,
            "run_time": 60.0083327293396,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 184623104,
            "run_time": 1.0979740619659424,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3491/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.OutputFile__checkVersion__1212481238\\1184.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var233!1 =\r\n     concat(all_47_4, \" Version \")\r\n   var68!1 =\r\n     concat(all_41_3, \" for writing.\")\r\n   var417!1 =\r\n     concat(\"Could not open file \", all_38_2)\r\n   var2361!1 =\r\n     concat(\"/* \", all_44_3)\r\n   all_41_3 =\r\n     concat(\"Could not open file \", all_38_2)\r\n   all_47_4 =\r\n     concat(\"/* \", all_44_3)\r\n\r\n789ms\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 26,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.parser.OutputFile",
            "r2 := @parameter0: java.io.File",
            "r15 := @parameter1: java.lang.String",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/* \")",
            "$r3 = r1.<org.javacc.parser.OutputFile: java.lang.String toolName>",
            "$r4 = virtualinvoke r2.<java.io.File: java.lang.String getName()>()",
            "$r5 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String getIdString(java.lang.String,java.lang.String)>($r3, $r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Version \")",
            "r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r10 = new java.io.BufferedReader",
            "$r11 = new java.io.FileReader",
            "$r30 := @caughtexception",
            "$r31 = new java.lang.StringBuilder",
            "specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()",
            "$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not open file \")",
            "$r32 = virtualinvoke r2.<java.io.File: java.lang.String getName()>()",
            "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r32)",
            "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" for writing.\")",
            "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void semantic_error(java.lang.String)>($r36)",
            "$r37 = new java.lang.Error",
            "specialinvoke $r37.<java.lang.Error: void <init>()>()",
            "throw $r37"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Semanticize__rexpWalk__-1232831541\\1592.smt2",
        "z3": {
            "memory": 31817728,
            "run_time": 0.04312777519226074,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 59 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.014920234680175781,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36270080,
            "run_time": 0.07722139358520508,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 59 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166674432,
            "run_time": 0.6978046894073486,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.RegularExpression",
            "$z0 = r0 instanceof org.javacc.parser.RJustName",
            "if $z0 == 0 goto $z1 = r0 instanceof org.javacc.parser.RChoice",
            "r49 = (org.javacc.parser.RJustName) r0",
            "$r17 = r49.<org.javacc.parser.RJustName: org.javacc.parser.RegularExpression regexpr>",
            "$i0 = $r17.<org.javacc.parser.RegularExpression: int walkStatus>",
            "$i4 = (int) -1",
            "if $i0 != $i4 goto $r18 = r49.<org.javacc.parser.RJustName: org.javacc.parser.RegularExpression regexpr>",
            "$r41 = r49.<org.javacc.parser.RJustName: org.javacc.parser.RegularExpression regexpr>",
            "$i6 = (int) -2",
            "$r41.<org.javacc.parser.RegularExpression: int walkStatus> = $i6",
            "$r52 = new java.lang.StringBuilder",
            "specialinvoke $r52.<java.lang.StringBuilder: void <init>()>()",
            "$r45 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"...\")",
            "$r43 = r49.<org.javacc.parser.RJustName: org.javacc.parser.RegularExpression regexpr>",
            "$r44 = $r43.<org.javacc.parser.RegularExpression: java.lang.String label>",
            "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44)",
            "$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"...\")",
            "$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>()",
            "<org.javacc.parser.Semanticize: java.lang.String loopString> = $r48",
            "return 1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Sequence__dump__-535853039\\1428.smt2",
        "z3": {
            "memory": 32206848,
            "run_time": 0.044592857360839844,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2078:\r\n  ;;   var2078!val!1 var2078!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2078!val!1 () var2078)\r\n  (declare-fun var2078!val!0 () var2078)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2078)) (or (= x var2078!val!1) (= x var2078!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1214:\r\n  ;;   var1214!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1214!val!0 () var1214)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1214)) (= x var1214!val!0))\r\n  ;; -----------\r\n  ;; universe for var3278:\r\n  ;;   var3278!val!1 var3278!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3278!val!1 () var3278)\r\n  (declare-fun var3278!val!0 () var3278)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3278)) (or (= x var3278!val!1) (= x var3278!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var3278 () var3278\r\n    var3278!val!1)\r\n  (define-fun var3471 () Bool\r\n    (var2078_contains/1636690605 var1460 (cast-from-var3278-to-var1214 var836)))\r\n  (define-fun var3966 () String\r\n    (let ((a!1 (append/1183289509\r\n             (insert/2110042883\r\n               (dump/1891027141 (cast-from-var3278-to-var2908 var836) 0 var1460)\r\n               0\r\n               91)\r\n             93)))\r\n  (insert/-583657224\r\n    a!1\r\n    0\r\n    (dumpPrefix/-1981802303 (cast-from-var3278-to-var2908 var836) var2146))))\r\n  (define-fun null-var2078 () var2078\r\n    var2078!val!1)\r\n  (define-fun var3000 () String\r\n    (insert/2110042883\r\n  (dump/1891027141 (cast-from-var3278-to-var2908 var836) 0 var1460)\r\n  0\r\n  91))\r\n  (define-fun var509 () String\r\n    (append/1183289509\r\n  (insert/2110042883\r\n    (dump/1891027141 (cast-from-var3278-to-var2908 var836) 0 var1460)\r\n    0\r\n    91)\r\n  93))\r\n  (define-fun var836 () var3278\r\n    var3278!val!0)\r\n  (define-fun var2796 () String\r\n    (dumpPrefix/-1981802303 (cast-from-var3278-to-var2908 var836) var2146))\r\n  (define-fun var3356 () String\r\n    (dump/1891027141 (cast-from-var3278-to-var2908 var836) 0 var1460))\r\n  (define-fun var2146 () Int\r\n    1)\r\n  (define-fun var1460 () var2078\r\n    var2078!val!0)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun cast-from-var3278-to-var1214 ((x!0 var3278)) var1214\r\n    var1214!val!0)\r\n  (define-fun var2078_contains/1636690605 ((x!0 var2078) (x!1 var1214)) Bool\r\n    true)\r\n  (define-fun cast-from-var3278-to-var2908 ((x!0 var3278)) var2908\r\n    var2908!val!0)\r\n  (define-fun append/1183289509 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun dumpPrefix/-1981802303 ((x!0 var2908) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun dump/1891027141 ((x!0 var2908) (x!1 Int) (x!2 var2078)) String\r\n    \"\")\r\n  (define-fun insert/2110042883 ((x!0 String) (x!1 Int) (x!2 Int)) String\r\n    \"\")\r\n  (define-fun insert/-583657224 ((x!0 String) (x!1 Int) (x!2 String)) String\r\n    \"\")\r\n)\r\n(error \"line 45 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11333632,
            "run_time": 0.015042781829833984,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3278 is 2\r\n; rep: (as @var3278_0 var3278)\r\n; rep: (as @var3278_1 var3278)\r\n; cardinality of var2078 is 2\r\n; rep: (as @var2078_0 var2078)\r\n; rep: (as @var2078_1 var2078)\r\n; cardinality of var1214 is 1\r\n; rep: (as @var1214_0 var1214)\r\n; cardinality of var2908 is 1\r\n; rep: (as @var2908_0 var2908)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2078_contains/1636690605 ((_arg_1 var2078) (_arg_2 var1214)) Bool true)\r\n(define-fun cast-from-var3278-to-var1214 ((_arg_1 var3278)) var1214 (as @var1214_0 var1214))\r\n(define-fun dump/1891027141 ((BOUND_VARIABLE_560 var2908) (BOUND_VARIABLE_561 Int) (BOUND_VARIABLE_562 var2078)) String \"\")\r\n(define-fun cast-from-var3278-to-var2908 ((BOUND_VARIABLE_565 var3278)) var2908 (as @var2908_0 var2908))\r\n(define-fun insert/2110042883 ((BOUND_VARIABLE_568 String) (BOUND_VARIABLE_569 Int) (BOUND_VARIABLE_570 Int)) String \"\")\r\n(define-fun append/1183289509 ((BOUND_VARIABLE_573 String) (BOUND_VARIABLE_574 Int)) String \"\")\r\n(define-fun dumpPrefix/-1981802303 ((BOUND_VARIABLE_577 var2908) (BOUND_VARIABLE_578 Int)) String \"\")\r\n(define-fun insert/-583657224 ((BOUND_VARIABLE_581 String) (BOUND_VARIABLE_582 Int) (BOUND_VARIABLE_583 String)) String \"\")\r\n(define-fun null-var3278 () var3278 (as @var3278_0 var3278))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var2078 () var2078 (as @var2078_0 var2078))\r\n(define-fun var836 () var3278 (as @var3278_1 var3278))\r\n(define-fun var2146 () Int 0)\r\n(define-fun var1460 () var2078 (as @var2078_1 var2078))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36839424,
            "run_time": 0.07829594612121582,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2078:\n  ;;   var2078!val!1 var2078!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2078!val!1 () var2078)\n  (declare-fun var2078!val!0 () var2078)\n  ;; cardinality constraint:\n  (forall ((x var2078)) (or (= x var2078!val!1) (= x var2078!val!0)))\n  ;; -----------\n  ;; universe for var1214:\n  ;;   var1214!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1214!val!0 () var1214)\n  ;; cardinality constraint:\n  (forall ((x var1214)) (= x var1214!val!0))\n  ;; -----------\n  ;; universe for var3278:\n  ;;   var3278!val!1 var3278!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3278!val!1 () var3278)\n  (declare-fun var3278!val!0 () var3278)\n  ;; cardinality constraint:\n  (forall ((x var3278)) (or (= x var3278!val!1) (= x var3278!val!0)))\n  ;; -----------\n  (define-fun null-var3278 () var3278\n    var3278!val!1)\n  (define-fun var3000 () String\n    (insert/2110042883\n  (dump/1891027141 (cast-from-var3278-to-var2908 var836) 0 var1460)\n  0\n  91))\n  (define-fun null-var2078 () var2078\n    var2078!val!1)\n  (define-fun var3356 () String\n    (dump/1891027141 (cast-from-var3278-to-var2908 var836) 0 var1460))\n  (define-fun var2796 () String\n    (dumpPrefix/-1981802303 (cast-from-var3278-to-var2908 var836) var2146))\n  (define-fun var836 () var3278\n    var3278!val!0)\n  (define-fun var3471 () Bool\n    (var2078_contains/1636690605 var1460 (cast-from-var3278-to-var1214 var836)))\n  (define-fun var2146 () Int\n    1)\n  (define-fun var3966 () String\n    (let ((a!1 (append/1183289509\n             (insert/2110042883\n               (dump/1891027141 (cast-from-var3278-to-var2908 var836) 0 var1460)\n               0\n               91)\n             93)))\n  (insert/-583657224\n    a!1\n    0\n    (dumpPrefix/-1981802303 (cast-from-var3278-to-var2908 var836) var2146))))\n  (define-fun var1460 () var2078\n    var2078!val!0)\n  (define-fun var509 () String\n    (append/1183289509\n  (insert/2110042883\n    (dump/1891027141 (cast-from-var3278-to-var2908 var836) 0 var1460)\n    0\n    91)\n  93))\n  (define-fun null-Int () Int\n    0)\n  (define-fun cast-from-var3278-to-var1214 ((x!0 var3278)) var1214\n    var1214!val!0)\n  (define-fun var2078_contains/1636690605 ((x!0 var2078) (x!1 var1214)) Bool\n    true)\n  (define-fun cast-from-var3278-to-var2908 ((x!0 var3278)) var2908\n    var2908!val!0)\n  (define-fun append/1183289509 ((x!0 String) (x!1 Int)) String\n    \"\")\n  (define-fun dumpPrefix/-1981802303 ((x!0 var2908) (x!1 Int)) String\n    \"\")\n  (define-fun dump/1891027141 ((x!0 var2908) (x!1 Int) (x!2 var2078)) String\n    \"\")\n  (define-fun insert/2110042883 ((x!0 String) (x!1 Int) (x!2 Int)) String\n    \"\")\n  (define-fun insert/-583657224 ((x!0 String) (x!1 Int) (x!2 String)) String\n    \"\")\n)\n(error \"line 45 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152518656,
            "run_time": 0.669116735458374,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1460 () var2078 var2078!8)\r\n  (define-fun var2146 () Int 1)\r\n  (define-fun var836 () var3278 var3278!6)\r\n  (define-fun null-var2078 () var2078 var2078!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3278 () var3278 var3278!2)\r\n  (define-fun var1214!24 () var1214 (cast-from-var3278-to-var1214 var3278!6))\r\n  (define-fun var2078_contains/1636690605 ((x!0 var2078) (x!1 var1214)) Bool (ite (and (= x!0 var2078!8) (= x!1 var1214!24)) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.CharSequence)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>": 1,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>": 1,
            "<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.CharSequence)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.parser.Sequence",
            "i0 := @parameter0: int",
            "r0 := @parameter1: java.util.Set",
            "$z0 = interfaceinvoke r0.<java.util.Set: boolean contains(java.lang.Object)>(r1)",
            "if $z0 == 0 goto interfaceinvoke r0.<java.util.Set: boolean add(java.lang.Object)>(r1)",
            "$r10 = specialinvoke r1.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>(0, r0)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,char)>(0, 91)",
            "$r13 = virtualinvoke $r11.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(93)",
            "$r12 = virtualinvoke r1.<org.javacc.parser.Sequence: java.lang.StringBuffer dumpPrefix(int)>(i0)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.StringBuffer insert(int,java.lang.CharSequence)>(0, $r12)",
            "return $r14"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseEngine__buildPhase2Routine__1228412603\\1607.smt2",
        "z3": {
            "memory": 32956416,
            "run_time": 60.0081148147583,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 16125952,
            "run_time": 60.00046968460083,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36220928,
            "run_time": 0.07600927352905273,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 208 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 209 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 369778688,
            "run_time": 1.1501729488372803,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3794/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.ParseEngine__buildPhase2Routine__1228412603\\1607.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_72_4 =\r\n     concat(all_72_5, \"(int xla)\")\r\n   var2430!1 =\r\n     concat(all_65_4, \"(int xla)\")\r\n   var1563!1 =\r\n     concat(all_62_4, \"() || jj_done)\")\r\n   all_53_2 =\r\n     concat(var2001!1, \";\")\r\n   var3166!1 =\r\n     concat(var2001!1, \";\")\r\n   var187!1 =\r\n     concat(\"    return (!jj_3\", all_56_3)\r\n   var1807!1 =\r\n     concat(\"jj_2\", all_56_3)\r\n   var2001!1 =\r\n     concat(all_68_5, \"() || jj_done)\")\r\n   all_62_4 =\r\n     concat(\"    return (!jj_3\", all_56_3)\r\n   all_72_5 =\r\n     concat(\"jj_2\", all_56_3)\r\n   all_65_4 =\r\n     concat(\"jj_2\", all_56_3)\r\n   all_68_5 =\r\n     concat(\"    return (!jj_3\", all_56_3)\r\n\r\n817ms\r\n"
        },
        "undefined_function_count": 19,
        "assertion_count": 57,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 8,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.parser.ParseEngine",
            "r0 := @parameter0: org.javacc.parser.Lookahead",
            "r1 = virtualinvoke r0.<org.javacc.parser.Lookahead: org.javacc.parser.Expansion getLaExpansion()>()",
            "$z0 = r2.<org.javacc.parser.ParseEngine: boolean isJavaDialect>",
            "if $z0 == 0 goto $r5 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r5 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r3 = newarray (java.lang.Object)[2]",
            "$r3[0] = \" inline bool \"",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"jj_2\")",
            "$r6 = r1.<org.javacc.parser.Expansion: java.lang.String internal_name>",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(int xla)\")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3[1] = $r10",
            "virtualinvoke $r5.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r3)",
            "$r12 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \" {\"",
            "virtualinvoke $r12.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r11)",
            "$r14 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r13[0] = \"    jj_la = xla; jj_lastpos = jj_scanpos = token;\"",
            "virtualinvoke $r14.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r13)",
            "r63 = \"\"",
            "r73 = \"\"",
            "r72 = \"\"",
            "$i0 = staticinvoke <org.javacc.parser.Options: int getDepthLimit()>()",
            "if $i0 <= 0 goto $z1 = r2.<org.javacc.parser.ParseEngine: boolean isJavaDialect>",
            "$z1 = r2.<org.javacc.parser.ParseEngine: boolean isJavaDialect>",
            "if $z1 == 0 goto $r16 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r16 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r15 = newarray (java.lang.Object)[1]",
            "$r15[0] = \"    jj_done = false;\"",
            "virtualinvoke $r16.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r15)",
            "$r19 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r17 = newarray (java.lang.Object)[1]",
            "$r18 = new java.lang.StringBuilder",
            "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()",
            "$r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    return (!jj_3\")",
            "$r20 = r1.<org.javacc.parser.Expansion: java.lang.String internal_name>",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"() || jj_done)\")",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r73)",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\";\")",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r17[0] = $r26",
            "virtualinvoke $r19.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r17)",
            "$z2 = staticinvoke <org.javacc.parser.Options: boolean getErrorReporting()>()",
            "if $z2 == 0 goto $r65 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r65 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r66 = newarray (java.lang.Object)[1]",
            "$r66[0] = \"  }\"",
            "virtualinvoke $r65.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r66)",
            "$r67 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r68 = newarray (java.lang.Object)[1]",
            "$r68[0] = \"\"",
            "virtualinvoke $r67.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r68)",
            "$r69 = new org.javacc.parser.Phase3Data",
            "$i3 = virtualinvoke r0.<org.javacc.parser.Lookahead: int getAmount()>()",
            "specialinvoke $r69.<org.javacc.parser.Phase3Data: void <init>(org.javacc.parser.Expansion,int)>(r1, $i3)",
            "$r70 = r2.<org.javacc.parser.ParseEngine: java.util.List phase3list>",
            "interfaceinvoke $r70.<java.util.List: boolean add(java.lang.Object)>($r69)",
            "$r71 = r2.<org.javacc.parser.ParseEngine: java.util.Hashtable phase3table>",
            "virtualinvoke $r71.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r69)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseEngine__buildPhase3Routine__-1178620080\\1775.smt2",
        "z3": {
            "memory": 31821824,
            "run_time": 0.056818246841430664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3518:\r\n  ;;   var3518!val!1 var3518!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3518!val!1 () var3518)\r\n  (declare-fun var3518!val!0 () var3518)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3518)) (or (= x var3518!val!1) (= x var3518!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1553:\r\n  ;;   var1553!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1553!val!0 () var1553)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1553)) (= x var1553!val!0))\r\n  ;; -----------\r\n  ;; universe for var343:\r\n  ;;   var343!val!0 var343!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var343!val!0 () var343)\r\n  (declare-fun var343!val!1 () var343)\r\n  ;; cardinality constraint:\r\n  (forall ((x var343)) (or (= x var343!val!0) (= x var343!val!1)))\r\n  ;; -----------\r\n  (define-fun var1105 () var1916\r\n    null-var1916)\r\n  (define-fun var2482 () var3518\r\n    var3518!val!0)\r\n  (define-fun null-var343 () var343\r\n    var343!val!1)\r\n  (define-fun var3065 () var1553\r\n    (exp/36539919 var2482))\r\n  (define-fun var2111 () var343\r\n    var343!val!0)\r\n  (define-fun var3559 () Bool\r\n    true)\r\n  (define-fun null-var3518 () var3518\r\n    var3518!val!1)\r\n  (define-fun var1023 () String\r\n    (internal_name/-1632124174 (exp/36539919 var2482)))\r\n  (define-fun var3115 () Bool\r\n    (str.prefixof \"jj_scan_token\"\r\n              (internal_name/-1632124174 (exp/36539919 var2482))))\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun null-var1916 () var1916\r\n    var1916!val!0)\r\n  (define-fun internal_name/-1632124174 ((x!0 var1553)) String\r\n    \"jj_scan_token\")\r\n  (define-fun exp/36539919 ((x!0 var3518)) var1553\r\n    var1553!val!0)\r\n)\r\n(error \"line 34 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11325440,
            "run_time": 0.03011631965637207,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var343 is 2\r\n; rep: (as @var343_0 var343)\r\n; rep: (as @var343_1 var343)\r\n; cardinality of var3518 is 2\r\n; rep: (as @var3518_0 var3518)\r\n; rep: (as @var3518_1 var3518)\r\n; cardinality of var1553 is 1\r\n; rep: (as @var1553_0 var1553)\r\n; cardinality of var1916 is 1\r\n; rep: (as @var1916_0 var1916)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun exp/36539919 ((_arg_1 var3518)) var1553 (as @var1553_0 var1553))\r\n(define-fun internal_name/-1632124174 ((_arg_1 var1553)) String \"jj_scan_token\")\r\n(define-fun null-var343 () var343 (as @var343_0 var343))\r\n(define-fun null-var3518 () var3518 (as @var3518_0 var3518))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun null-var1916 () var1916 (as @var1916_0 var1916))\r\n(define-fun var2111 () var343 (as @var343_1 var343))\r\n(define-fun var2482 () var3518 (as @var3518_1 var3518))\r\n(define-fun var3559 () Bool false)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36687872,
            "run_time": 0.07561206817626953,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 33 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 34 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177537024,
            "run_time": 0.8016879558563232,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2482 () var3518 var3518!34)\r\n  (define-fun var2111 () var343 var343!32)\r\n  (define-fun null-var3518 () var3518 var3518!30)\r\n  (define-fun null-var343 () var343 var343!28)\r\n  (define-fun var3559 () Bool true)\r\n  (define-fun var1553!50 () var1553 (exp/36539919 var3518!34))\r\n  (define-fun null-Bool () Bool false)\r\n  (define-fun internal_name/-1632124174 ((x!0 var1553)) String (ite (= x!0 var1553!50) \"jj_scan_token\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r3 := @this: org.javacc.parser.ParseEngine",
            "r0 := @parameter0: org.javacc.parser.Phase3Data",
            "z1 := @parameter1: boolean",
            "r1 = r0.<org.javacc.parser.Phase3Data: org.javacc.parser.Expansion exp>",
            "r258 = null",
            "$r2 = r1.<org.javacc.parser.Expansion: java.lang.String internal_name>",
            "$z0 = virtualinvoke $r2.<java.lang.String: boolean startsWith(java.lang.String)>(\"jj_scan_token\")",
            "if $z0 == 0 goto (branch)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseEngine__buildPhase3Table__1080179082\\1920.smt2",
        "z3": {
            "memory": 29339648,
            "run_time": 0.0608060359954834,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 60 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11345920,
            "run_time": 0.015576839447021484,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36265984,
            "run_time": 0.08220529556274414,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 60 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 143134720,
            "run_time": 0.6357827186584473,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r27 := @this: org.javacc.parser.ParseEngine",
            "r0 := @parameter0: org.javacc.parser.Phase3Data",
            "r1 = r0.<org.javacc.parser.Phase3Data: org.javacc.parser.Expansion exp>",
            "$z0 = r1 instanceof org.javacc.parser.RegularExpression",
            "if $z0 == 0 goto $z1 = r1 instanceof org.javacc.parser.NonTerminal",
            "r80 = (org.javacc.parser.RegularExpression) r1",
            "$r76 = <java.lang.System: java.io.PrintStream err>",
            "$r75 = new java.lang.StringBuilder",
            "specialinvoke $r75.<java.lang.StringBuilder: void <init>()>()",
            "$r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"TOKEN, \")",
            "$i12 = r80.<org.javacc.parser.RegularExpression: int ordinal>",
            "$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12)",
            "$r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r76.<java.io.PrintStream: void println(java.lang.String)>($r79)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseEngine__dumpFormattedString__-281184349\\1306.smt2",
        "z3": {
            "memory": 12079104,
            "run_time": 0.04459190368652344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1882:\r\n  ;;   var1882!val!1 var1882!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1882!val!1 () var1882)\r\n  (declare-fun var1882!val!0 () var1882)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1882)) (or (= x var1882!val!1) (= x var1882!val!0)))\r\n  ;; -----------\r\n  (define-fun var1516 () Int\r\n    0)\r\n  (define-fun null-var1882 () var1882\r\n    var1882!val!1)\r\n  (define-fun var3735 () Bool\r\n    (ite (= 1 1) true false))\r\n  (define-fun var3382 () var1882\r\n    var1882!val!0)\r\n  (define-fun var1044 () Int\r\n    32)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1718 () Int\r\n    (str.len var1142))\r\n  (define-fun var1142 () String\r\n    \"\")\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11325440,
            "run_time": 0.01456451416015625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1882 is 2\r\n; rep: (as @var1882_0 var1882)\r\n; rep: (as @var1882_1 var1882)\r\n; cardinality of var2098 is 1\r\n; rep: (as @var2098_0 var2098)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var1882 () var1882 (as @var1882_0 var1882))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3382 () var1882 (as @var1882_1 var1882))\r\n(define-fun var1142 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37416960,
            "run_time": 0.07692384719848633,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1882:\n  ;;   var1882!val!1 var1882!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1882!val!1 () var1882)\n  (declare-fun var1882!val!0 () var1882)\n  ;; cardinality constraint:\n  (forall ((x var1882)) (or (= x var1882!val!1) (= x var1882!val!0)))\n  ;; -----------\n  (define-fun var1044 () Int\n    32)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-var1882 () var1882\n    var1882!val!1)\n  (define-fun var1142 () String\n    \"\")\n  (define-fun var3382 () var1882\n    var1882!val!0)\n  (define-fun var1516 () Int\n    0)\n  (define-fun var3735 () Bool\n    (ite (= 1 1) true false))\n  (define-fun var1718 () Int\n    (str.len var1142))\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150589440,
            "run_time": 0.6637189388275146,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1142 () String \"\")\r\n  (define-fun var3382 () var1882 var1882!4)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var1882 () var1882 var1882!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.parser.ParseEngine",
            "r0 := @parameter0: java.lang.String",
            "c6 = 32",
            "z0 = 1",
            "i7 = 0",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i7 >= $i0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseEngine__generate3R__373109272\\1654.smt2",
        "z3": {
            "memory": 10514432,
            "run_time": 0.04463648796081543,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var431:\r\n  ;;   var431!val!0 var431!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var431!val!0 () var431)\r\n  (declare-fun var431!val!1 () var431)\r\n  ;; cardinality constraint:\r\n  (forall ((x var431)) (or (= x var431!val!0) (= x var431!val!1)))\r\n  ;; -----------\r\n  ;; universe for var964:\r\n  ;;   var964!val!1 var964!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var964!val!1 () var964)\r\n  (declare-fun var964!val!0 () var964)\r\n  ;; cardinality constraint:\r\n  (forall ((x var964)) (or (= x var964!val!1) (= x var964!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2637:\r\n  ;;   var2637!val!0 var2637!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2637!val!0 () var2637)\r\n  (declare-fun var2637!val!1 () var2637)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2637)) (or (= x var2637!val!0) (= x var2637!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1692:\r\n  ;;   var1692!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1692!val!0 () var1692)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1692)) (= x var1692!val!0))\r\n  ;; -----------\r\n  ;; universe for var1489:\r\n  ;;   var1489!val!2 var1489!val!0 var1489!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1489!val!2 () var1489)\r\n  (declare-fun var1489!val!0 () var1489)\r\n  (declare-fun var1489!val!1 () var1489)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1489))\r\n          (or (= x var1489!val!2) (= x var1489!val!0) (= x var1489!val!1)))\r\n  ;; -----------\r\n  (define-fun var795 () var1692\r\n    (phase3table/-1894308792 var99))\r\n  (define-fun var2149 () var964\r\n    var964!val!0)\r\n  (define-fun null-var2637 () var2637\r\n    var2637!val!1)\r\n  (define-fun var1232 () var1489\r\n    var1489!val!0)\r\n  (define-fun var275 () Int\r\n    (count/36539919 var1232))\r\n  (define-fun var1329 () var964\r\n    var2149)\r\n  (define-fun var1264 () String\r\n    (internal_name/-1632124174 var2149))\r\n  (define-fun var1592 () Int\r\n    (count/36539919 (cast-from-var431-to-var1489\r\n                  (get/-1721276195 (phase3table/-1894308792 var99)\r\n                                   (cast-from-var964-to-var431 var2149)))))\r\n  (define-fun var99 () var2637\r\n    var2637!val!0)\r\n  (define-fun null-var1489 () var1489\r\n    var1489!val!1)\r\n  (define-fun var1104 () var431\r\n    (get/-1721276195 (phase3table/-1894308792 var99)\r\n                 (cast-from-var964-to-var431 var2149)))\r\n  (define-fun var1988 () Bool\r\n    (= (internal_name/-1632124174 var2149) \"\"))\r\n  (define-fun null-var964 () var964\r\n    var964!val!1)\r\n  (define-fun var2227 () var1489\r\n    (cast-from-var431-to-var1489\r\n  (get/-1721276195 (phase3table/-1894308792 var99)\r\n                   (cast-from-var964-to-var431 var2149))))\r\n  (define-fun var71 () var1489\r\n    (cast-from-var431-to-var1489\r\n  (get/-1721276195 (phase3table/-1894308792 var99)\r\n                   (cast-from-var964-to-var431 var2149))))\r\n  (define-fun phase3table/-1894308792 ((x!0 var2637)) var1692\r\n    var1692!val!0)\r\n  (define-fun internal_name/-1632124174 ((x!0 var964)) String\r\n    \"A\")\r\n  (define-fun cast-from-var431-to-var1489 ((x!0 var431)) var1489\r\n    var1489!val!2)\r\n  (define-fun cast-from-var964-to-var431 ((x!0 var964)) var431\r\n    var431!val!0)\r\n  (define-fun get/-1721276195 ((x!0 var1692) (x!1 var431)) var431\r\n    var431!val!1)\r\n  (define-fun count/36539919 ((x!0 var1489)) Int\r\n    0)\r\n)\r\n(error \"line 48 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11317248,
            "run_time": 0.015808820724487305,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2637 is 2\r\n; rep: (as @var2637_0 var2637)\r\n; rep: (as @var2637_1 var2637)\r\n; cardinality of var964 is 2\r\n; rep: (as @var964_0 var964)\r\n; rep: (as @var964_1 var964)\r\n; cardinality of var1489 is 3\r\n; rep: (as @var1489_0 var1489)\r\n; rep: (as @var1489_1 var1489)\r\n; rep: (as @var1489_2 var1489)\r\n; cardinality of var1692 is 1\r\n; rep: (as @var1692_0 var1692)\r\n; cardinality of var431 is 2\r\n; rep: (as @var431_0 var431)\r\n; rep: (as @var431_1 var431)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun internal_name/-1632124174 ((_arg_1 var964)) String \"A\")\r\n(define-fun phase3table/-1894308792 ((_arg_1 var2637)) var1692 (as @var1692_0 var1692))\r\n(define-fun get/-1721276195 ((_arg_1 var1692) (_arg_2 var431)) var431 (as @var431_1 var431))\r\n(define-fun cast-from-var964-to-var431 ((_arg_1 var964)) var431 (as @var431_0 var431))\r\n(define-fun cast-from-var431-to-var1489 ((_arg_1 var431)) var1489 (as @var1489_2 var1489))\r\n(define-fun count/36539919 ((_arg_1 var1489)) Int 0)\r\n(define-fun null-var2637 () var2637 (as @var2637_0 var2637))\r\n(define-fun null-var964 () var964 (as @var964_0 var964))\r\n(define-fun null-var1489 () var1489 (as @var1489_0 var1489))\r\n(define-fun var99 () var2637 (as @var2637_1 var2637))\r\n(define-fun var2149 () var964 (as @var964_1 var964))\r\n(define-fun var1232 () var1489 (as @var1489_1 var1489))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37011456,
            "run_time": 0.07647347450256348,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 47 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 48 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181198848,
            "run_time": 0.8176679611206055,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1232 () var1489 var1489!12)\r\n  (define-fun var2149 () var964 var964!10)\r\n  (define-fun var99 () var2637 var2637!8)\r\n  (define-fun null-var1489 () var1489 var1489!6)\r\n  (define-fun null-var964 () var964 var964!4)\r\n  (define-fun null-var2637 () var2637 var2637!2)\r\n  (define-fun var1489!38 () var1489 (cast-from-var431-to-var1489 var431!36))\r\n  (define-fun var431!34 () var431 (cast-from-var964-to-var431 var964!10))\r\n  (define-fun var431!36 () var431 (get/-1721276195 var1692!32 var431!34))\r\n  (define-fun var1692!32 () var1692 (phase3table/-1894308792 var2637!8))\r\n  (define-fun count/36539919 ((x!0 var1489)) Int (ite (= x!0 var1489!12) 20 (ite (= x!0 var1489!38) 20 0)))\r\n  (define-fun internal_name/-1632124174 ((x!0 var964)) String (ite (= x!0 var964!10) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.parser.ParseEngine",
            "r0 := @parameter0: org.javacc.parser.Expansion",
            "r7 := @parameter1: org.javacc.parser.Phase3Data",
            "r38 = r0",
            "$r1 = r0.<org.javacc.parser.Expansion: java.lang.String internal_name>",
            "$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 == 0 goto $r3 = r2.<org.javacc.parser.ParseEngine: java.util.Hashtable phase3table>",
            "$r3 = r2.<org.javacc.parser.ParseEngine: java.util.Hashtable phase3table>",
            "$r4 = virtualinvoke $r3.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0)",
            "$r5 = (org.javacc.parser.Phase3Data) $r4",
            "$r21 = (org.javacc.parser.Phase3Data) $r5",
            "if $r21 == null goto $r6 = new org.javacc.parser.Phase3Data",
            "$i2 = $r21.<org.javacc.parser.Phase3Data: int count>",
            "$i1 = r7.<org.javacc.parser.Phase3Data: int count>",
            "if $i2 >= $i1 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.TokenMgrError__LexicalError__122184712\\1503.smt2",
        "z3": {
            "memory": 31940608,
            "run_time": 0.08576273918151855,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3470 () String\r\n    (str.++ var2687!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var868)\r\n        \", column \"\r\n        (str.from_int var1493)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"\r\n        \"after : \"\"\"\r\n        (var3214_addEscapes/455866812 var2046)\r\n        \"\"\"\"))\r\n  (define-fun var2046 () String\r\n    \"\")\r\n  (define-fun var2687 () String\r\n    String-init)\r\n  (define-fun var979 () Int\r\n    0)\r\n  (define-fun var2679 () String\r\n    (str.++ var2687!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var868)\r\n        \", column \"\r\n        (str.from_int var1493)\r\n        \".  Encountered: \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var930!1 () String\r\n    \"Lexical error at line \")\r\n  (define-fun var1085 () String\r\n    (str.++ var2687!1 \"Lexical error at line \" (str.from_int var868) \", column \"))\r\n  (define-fun var2987 () Int\r\n    0)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1085!1 () String\r\n    \"Lexical error at line , column \")\r\n  (define-fun var386 () String\r\n    (str.++ var2687!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var868)\r\n        \", column \"\r\n        (str.from_int var1493)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"\r\n        \"after : \"\"\"\r\n        (var3214_addEscapes/455866812 var2046)\r\n        \"\"\"\"))\r\n  (define-fun null-Int () Int\r\n    (- 1))\r\n  (define-fun var2851 () String\r\n    (str.++ var2687!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var868)\r\n        \", column \"\r\n        (str.from_int var1493)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"\r\n        \"after : \"\"\"))\r\n  (define-fun var868 () Int\r\n    (- 2))\r\n  (define-fun var1478 () String\r\n    (str.++ var2687!1 \"Lexical error at line \" (str.from_int var868)))\r\n  (define-fun var930 () String\r\n    (str.++ var2687!1 \"Lexical error at line \"))\r\n  (define-fun var2311 () String\r\n    (var3214_addEscapes/455866812 var2046))\r\n  (define-fun var2680 () String\r\n    (str.++ var2687!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var868)\r\n        \", column \"\r\n        (str.from_int var1493)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"))\r\n  (define-fun var2533 () String\r\n    (str.++ var2687!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var868)\r\n        \", column \"\r\n        (str.from_int var1493)))\r\n  (define-fun var1493 () Int\r\n    0)\r\n  (define-fun var1227 () String\r\n    \"<EOF> \")\r\n  (define-fun var2016 () String\r\n    (str.++ var2687!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var868)\r\n        \", column \"\r\n        (str.from_int var1493)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"\r\n        \"after : \"\"\"\r\n        (var3214_addEscapes/455866812 var2046)))\r\n  (define-fun var2679!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: <EOF> \")\r\n  (define-fun var1478!1 () String\r\n    \"Lexical error at line , column \")\r\n  (define-fun var2687!1 () String\r\n    \"\")\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var2851!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: <EOF> after : \"\"\")\r\n  (define-fun var2680!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: <EOF> after : \"\"\")\r\n  (define-fun var2533!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: \")\r\n  (define-fun var2016!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: <EOF> after : \"\"\"\"\")\r\n  (define-fun var1663 () Bool\r\n    true)\r\n  (define-fun var2687!2 () String\r\n    \"Lexical error at line \")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3214_addEscapes/455866812 ((x!0 String)) String\r\n    \"\")\r\n)\r\n(error \"line 82 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 15360000,
            "run_time": 0.03205609321594238,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3157 is 1\r\n; rep: (as @var3157_0 var3157)\r\n; cardinality of var3214 is 1\r\n; rep: (as @var3214_0 var3214)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var3214_addEscapes/455866812 ((BOUND_VARIABLE_2032 String)) String \"\")\r\n(define-fun null-Bool () Bool false)\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1663 () Bool true)\r\n(define-fun var2987 () Int (- 1))\r\n(define-fun var868 () Int (- 1))\r\n(define-fun var1493 () Int (- 1))\r\n(define-fun var2046 () String \"\")\r\n(define-fun var979 () Int (- 1))\r\n(define-fun var2687!1 () String \"\")\r\n(define-fun var2687!2 () String \"Lexical error at line \")\r\n(define-fun var930!1 () String \"Lexical error at line \")\r\n(define-fun var1478!1 () String \"Lexical error at line , column \")\r\n(define-fun var1085!1 () String \"Lexical error at line , column \")\r\n(define-fun var2533!1 () String \"Lexical error at line , column .  Encountered: \")\r\n(define-fun var2679!1 () String \"Lexical error at line , column .  Encountered: <EOF> \")\r\n(define-fun var2680!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \"\"\")\r\n(define-fun var2851!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \"\"\")\r\n(define-fun var2016!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \"\"\"\"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39194624,
            "run_time": 0.1238858699798584,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 81 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 82 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 212697088,
            "run_time": 1.2884774208068848,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2016!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \\u{0}22\\u{0}22\")\r\n  (define-fun var2851!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \\u{0}22\")\r\n  (define-fun var2680!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \\u{0}22\")\r\n  (define-fun var2679!1 () String \"Lexical error at line , column .  Encountered: <EOF> \")\r\n  (define-fun var2533!1 () String \"Lexical error at line , column .  Encountered: \")\r\n  (define-fun var1085!1 () String \"Lexical error at line , column \")\r\n  (define-fun var1478!1 () String \"Lexical error at line , column \")\r\n  (define-fun var930!1 () String \"Lexical error at line \")\r\n  (define-fun var2687!2 () String \"Lexical error at line \")\r\n  (define-fun var2687!1 () String \"\")\r\n  (define-fun var979 () Int 1)\r\n  (define-fun var2046 () String \" <EOF> \")\r\n  (define-fun var1493 () Int (- 6))\r\n  (define-fun var868 () Int (- 6))\r\n  (define-fun var2987 () Int 1)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun var1663 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n  (define-fun abbrev_109 ((x!0 Int)) String (ite (= x!0 0) \"Lexical error at line , column .  Encountered: \" \"\"))\r\n  (define-fun abbrev_108 ((x!0 Int)) String (ite (= x!0 0) \"Lexical error at line \" \"\"))\r\n  (define-fun var3214_addEscapes/455866812 ((x!0 String)) String (ite (= x!0 \" <EOF> \") \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 29,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "z0 := @parameter0: boolean",
            "i3 := @parameter1: int",
            "i0 := @parameter2: int",
            "i1 := @parameter3: int",
            "r16 := @parameter4: java.lang.String",
            "c2 := @parameter5: char",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r1 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Lexical error at line \")",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", column \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)",
            "$r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".  Encountered: \")",
            "if z0 == 0 goto $r24 = new java.lang.StringBuilder",
            "$r22 = \"<EOF> \"",
            "goto [?= $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)]",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"after : \\\"\")",
            "$r17 = staticinvoke <org.javacc.parser.TokenMgrError: java.lang.String addEscapes(java.lang.String)>(r16)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r21"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JJTreeGlobals__isOptionJJTreeOnly__1467010643\\251.smt2",
        "z3": {
            "memory": 32374784,
            "run_time": 60.00712513923645,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10915840,
            "run_time": 0.014707088470458984,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3991 is 1\r\n; rep: (as @var3991_0 var3991)\r\n; cardinality of var2320 is 1\r\n; rep: (as @var2320_0 var2320)\r\n; cardinality of var1822 is 1\r\n; rep: (as @var1822_0 var1822)\r\n; cardinality of var3548 is 1\r\n; rep: (as @var3548_0 var3548)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2320_contains/1636690605 ((BOUND_VARIABLE_621 var2320) (BOUND_VARIABLE_622 var3548)) Bool false)\r\n(define-fun cast-from-String-to-var3548 ((BOUND_VARIABLE_625 String)) var3548 (as @var3548_0 var3548))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1822-jjtreeOptions () var2320 (as @var2320_0 var2320))\r\n(define-fun var3951 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37351424,
            "run_time": 60.011409759521484,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154234880,
            "run_time": 0.6907393932342529,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3951 () String \"a\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: java.lang.String toUpperCase()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toUpperCase()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$r1 = <org.javacc.jjtree.JJTreeGlobals: java.util.Set jjtreeOptions>",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>()",
            "$z0 = interfaceinvoke $r1.<java.util.Set: boolean contains(java.lang.Object)>($r2)",
            "return $z0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JJTreeNode__whiteOut__946438472\\419.smt2",
        "z3": {
            "memory": 11796480,
            "run_time": 0.0597379207611084,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1890:\r\n  ;;   var1890!val!0 var1890!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1890!val!0 () var1890)\r\n  (declare-fun var1890!val!1 () var1890)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1890)) (or (= x var1890!val!0) (= x var1890!val!1)))\r\n  ;; -----------\r\n  ;; universe for var478:\r\n  ;;   var478!val!0 var478!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var478!val!0 () var478)\r\n  (declare-fun var478!val!1 () var478)\r\n  ;; cardinality constraint:\r\n  (forall ((x var478)) (or (= x var478!val!0) (= x var478!val!1)))\r\n  ;; -----------\r\n  (define-fun var3539 () String\r\n    var387!1)\r\n  (define-fun var391 () Int\r\n    (str.len (image/-1103324373 var2879)))\r\n  (define-fun var387 () String\r\n    String-init)\r\n  (define-fun null-var478 () var478\r\n    var478!val!1)\r\n  (define-fun var2879 () var1890\r\n    var1890!val!0)\r\n  (define-fun null-var1890 () var1890\r\n    var1890!val!1)\r\n  (define-fun var2194 () var478\r\n    var478!val!0)\r\n  (define-fun var3886 () String\r\n    (image/-1103324373 var2879))\r\n  (define-fun var3644 () Int\r\n    (str.len (image/-1103324373 var2879)))\r\n  (define-fun var2665 () String\r\n    (image/-1103324373 var2879))\r\n  (define-fun var2368 () Int\r\n    0)\r\n  (define-fun var387!1 () String\r\n    \"\")\r\n  (define-fun var391!1 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun image/-1103324373 ((x!0 var1890)) String\r\n    \"\")\r\n  (define-fun <init>/1906106355 ((x!0 String) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 41 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11345920,
            "run_time": 0.015573740005493164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var478 is 2\r\n; rep: (as @var478_0 var478)\r\n; rep: (as @var478_1 var478)\r\n; cardinality of var1890 is 2\r\n; rep: (as @var1890_0 var1890)\r\n; rep: (as @var1890_1 var1890)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun image/-1103324373 ((_arg_1 var1890)) String \"\")\r\n(define-fun <init>/1906106355 ((BOUND_VARIABLE_525 String) (BOUND_VARIABLE_526 Int)) void (as @void_0 void))\r\n(define-fun null-var478 () var478 (as @var478_0 var478))\r\n(define-fun null-var1890 () var1890 (as @var1890_0 var1890))\r\n(define-fun var2194 () var478 (as @var478_1 var478))\r\n(define-fun var2879 () var1890 (as @var1890_1 var1890))\r\n(define-fun var387!1 () String \"\")\r\n(define-fun var391!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36937728,
            "run_time": 0.046649932861328125,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 40 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 41 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179150848,
            "run_time": 0.7291398048400879,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2879 () var1890 var1890!8)\r\n  (define-fun var2194 () var478 var478!6)\r\n  (define-fun null-var1890 () var1890 var1890!4)\r\n  (define-fun null-var478 () var478 var478!2)\r\n  (define-fun image/-1103324373 ((x!0 var1890)) String (ite (= x!0 var1890!8) \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.StringBuffer: void <init>(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2,
            "<java.lang.StringBuffer: void <init>(int)>": 1,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r6 := @this: org.javacc.jjtree.JJTreeNode",
            "r1 := @parameter0: org.javacc.jjtree.Token",
            "$r7 = new java.lang.StringBuffer",
            "$r2 = r1.<org.javacc.jjtree.Token: java.lang.String image>",
            "$i0 = virtualinvoke $r2.<java.lang.String: int length()>()",
            "specialinvoke $r7.<java.lang.StringBuffer: void <init>(int)>($i0)",
            "i3 = 0",
            "$r3 = r1.<org.javacc.jjtree.Token: java.lang.String image>",
            "$i1 = virtualinvoke $r3.<java.lang.String: int length()>()",
            "if i3 >= $i1 goto $r4 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r4 = virtualinvoke $r7.<java.lang.StringBuffer: java.lang.String toString()>()",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JJTreeOptions__getJJTreeOutputDirectory__-709711143\\558.smt2",
        "z3": {
            "memory": 32456704,
            "run_time": 0.045615196228027344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1607 () String\r\n    (var2723_stringValue/-689356382 \"JJTREE_OUTPUT_DIRECTORY\"))\r\n  (define-fun var3421 () String\r\n    \"\")\r\n  (define-fun var2444 () Bool\r\n    (= \"\" (var2723_stringValue/-689356382 \"JJTREE_OUTPUT_DIRECTORY\")))\r\n  (define-fun var3471 () var3455\r\n    var2723_getOutputDirectory/873146074)\r\n  (define-fun var2723_getOutputDirectory/873146074 () var3455\r\n    var3455!val!0)\r\n  (define-fun var2723_stringValue/-689356382 ((x!0 String)) String\r\n    \"\")\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11345920,
            "run_time": 0.01479649543762207,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2723 is 1\r\n; rep: (as @var2723_0 var2723)\r\n; cardinality of var3455 is 1\r\n; rep: (as @var3455_0 var3455)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2723_stringValue/-689356382 ((_arg_1 String)) String \"\")\r\n(define-fun var2723_getOutputDirectory/873146074 () var3455 (as @var3455_0 var3455))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36192256,
            "run_time": 0.04642319679260254,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 22 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 146694144,
            "run_time": 0.7438507080078125,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun abbrev_6 ((x!0 Int)) String (ite (= x!0 0) \"\" \"\"))\r\n  (define-fun var2723_stringValue/-689356382 ((x!0 String)) String (ite (= x!0 \"JJTREE_OUTPUT_DIRECTORY\") \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String stringValue(java.lang.String)>(\"JJTREE_OUTPUT_DIRECTORY\")",
            "$r1 = \"\"",
            "$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0)",
            "if $z0 == 0 goto $r2 = new java.io.File",
            "r3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.io.File getOutputDirectory()>()",
            "goto [?= return r3]",
            "return r3"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ZeroOrOne__dump__1512417609\\1585.smt2",
        "z3": {
            "memory": 29487104,
            "run_time": 0.05536794662475586,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1651:\r\n  ;;   var1651!val!0 var1651!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1651!val!0 () var1651)\r\n  (declare-fun var1651!val!1 () var1651)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1651)) (or (= x var1651!val!0) (= x var1651!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1306:\r\n  ;;   var1306!val!1 var1306!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1306!val!1 () var1306)\r\n  (declare-fun var1306!val!0 () var1306)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1306)) (or (= x var1306!val!1) (= x var1306!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2881:\r\n  ;;   var2881!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2881!val!0 () var2881)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2881)) (= x var2881!val!0))\r\n  ;; -----------\r\n  ;; universe for var959:\r\n  ;;   var959!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var959!val!0 () var959)\r\n  ;; cardinality constraint:\r\n  (forall ((x var959)) (= x var959!val!0))\r\n  ;; -----------\r\n  (define-fun var66 () Int\r\n    (+ var3460 1))\r\n  (define-fun var2895 () var1651\r\n    var1651!val!0)\r\n  (define-fun var3460 () Int\r\n    2)\r\n  (define-fun null-var1306 () var1306\r\n    var1306!val!1)\r\n  (define-fun var1395!1 () String\r\n    \"\")\r\n  (define-fun var3678 () Bool\r\n    (var1306_contains/1636690605 var3016 (cast-from-var1651-to-var2881 var2895)))\r\n  (define-fun var3016 () var1306\r\n    var1306!val!0)\r\n  (define-fun var2404 () String\r\n    (dump/1891027141 (expansion/-1835456018 var2895!1) (+ var3460 1) var3016!1))\r\n  (define-fun var1395 () String\r\n    (dump/1891027141 (cast-from-var1651-to-var959 var2895) var3460 var3016))\r\n  (define-fun var2753 () String\r\n    var1651-eol)\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun null-var1651 () var1651\r\n    var1651!val!1)\r\n  (define-fun var3141 () String\r\n    (str.++ (dump/1891027141 (cast-from-var1651-to-var959 var2895) var3460 var3016)\r\n        var1651-eol))\r\n  (define-fun var3712 () var959\r\n    (expansion/-1835456018 var2895!1))\r\n  (define-fun var2404!1 () String\r\n    \"\")\r\n  (define-fun var1651-eol () String\r\n    \"\")\r\n  (define-fun var3016!1 () var1306\r\n    var1306!val!1)\r\n  (define-fun var3141!1 () String\r\n    \"\")\r\n  (define-fun var2895!1 () var1651\r\n    var1651!val!0)\r\n  (define-fun var1306_contains/1636690605 ((x!0 var1306) (x!1 var2881)) Bool\r\n    false)\r\n  (define-fun dump/1891027141 ((x!0 var959) (x!1 Int) (x!2 var1306)) String\r\n    \"\")\r\n  (define-fun cast-from-var1651-to-var959 ((x!0 var1651)) var959\r\n    var959!val!0)\r\n  (define-fun cast-from-var1651-to-var2881 ((x!0 var1651)) var2881\r\n    var2881!val!0)\r\n  (define-fun var1306_add/-1142548109 ((x!0 var1306) (x!1 var2881)) Bool\r\n    false)\r\n  (define-fun expansion/-1835456018 ((x!0 var1651)) var959\r\n    var959!val!0)\r\n  (define-fun append/1671819796 ((x!0 String) (x!1 String)) String\r\n    \"\")\r\n)\r\n(error \"line 55 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11317248,
            "run_time": 0.01605844497680664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1651 is 2\r\n; rep: (as @var1651_0 var1651)\r\n; rep: (as @var1651_1 var1651)\r\n; cardinality of var1306 is 2\r\n; rep: (as @var1306_0 var1306)\r\n; rep: (as @var1306_1 var1306)\r\n; cardinality of var959 is 1\r\n; rep: (as @var959_0 var959)\r\n; cardinality of var2881 is 1\r\n; rep: (as @var2881_0 var2881)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun dump/1891027141 ((_arg_1 var959) (_arg_2 Int) (_arg_3 var1306)) String \"\")\r\n(define-fun cast-from-var1651-to-var959 ((_arg_1 var1651)) var959 (as @var959_0 var959))\r\n(define-fun var1306_contains/1636690605 ((_arg_1 var1306) (_arg_2 var2881)) Bool false)\r\n(define-fun cast-from-var1651-to-var2881 ((_arg_1 var1651)) var2881 (as @var2881_0 var2881))\r\n(define-fun var1306_add/-1142548109 ((BOUND_VARIABLE_705 var1306) (BOUND_VARIABLE_706 var2881)) Bool false)\r\n(define-fun expansion/-1835456018 ((BOUND_VARIABLE_709 var1651)) var959 (as @var959_0 var959))\r\n(define-fun append/1671819796 ((BOUND_VARIABLE_712 String) (BOUND_VARIABLE_713 String)) String \"\")\r\n(define-fun null-var1651 () var1651 (as @var1651_0 var1651))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var1306 () var1306 (as @var1306_0 var1306))\r\n(define-fun var1651-eol () String \"\")\r\n(define-fun var2895 () var1651 (as @var1651_1 var1651))\r\n(define-fun var3460 () Int 0)\r\n(define-fun var3016 () var1306 (as @var1306_1 var1306))\r\n(define-fun var3016!1 () var1306 (as @var1306_0 var1306))\r\n(define-fun var2895!1 () var1651 (as @var1651_0 var1651))\r\n(define-fun var1395!1 () String \"\")\r\n(define-fun var3141!1 () String \"\")\r\n(define-fun var2404!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36114432,
            "run_time": 0.04564070701599121,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 54 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 55 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166395904,
            "run_time": 0.884448766708374,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.ZeroOrOne__dump__1512417609\\1585.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1395!1 =\r\n     concat(all_18_0, rhs)\r\n   ... sat\r\n\r\n661ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.ZeroOrOne",
            "i0 := @parameter0: int",
            "r1 := @parameter1: java.util.Set",
            "r2 = specialinvoke r0.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>(i0, r1)",
            "$z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r0)",
            "if $z0 == 0 goto interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)",
            "interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)",
            "$r3 = <org.javacc.parser.ZeroOrOne: java.lang.String eol>",
            "$r6 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3)",
            "$r4 = r0.<org.javacc.parser.ZeroOrOne: org.javacc.parser.Expansion expansion>",
            "$i1 = i0 + 1",
            "$r5 = virtualinvoke $r4.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>($i1, r1)",
            "virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>($r5)",
            "return r2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.ConditionParserTokenManager__MoreLexicalActions__643643732\\2201.smt2",
        "z3": {
            "memory": 32407552,
            "run_time": 0.09018468856811523,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3968:\r\n  ;;   var3968!val!0 var3968!val!3 var3968!val!1 var3968!val!2 var3968!val!4 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3968!val!0 () var3968)\r\n  (declare-fun var3968!val!3 () var3968)\r\n  (declare-fun var3968!val!1 () var3968)\r\n  (declare-fun var3968!val!2 () var3968)\r\n  (declare-fun var3968!val!4 () var3968)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3968))\r\n          (or (= x var3968!val!0)\r\n              (= x var3968!val!3)\r\n              (= x var3968!val!1)\r\n              (= x var3968!val!2)\r\n              (= x var3968!val!4)))\r\n  ;; -----------\r\n  (define-fun var528 () var2111\r\n    (input_stream/1944280239 var542!2))\r\n  (define-fun var295 () Int\r\n    (+ (jjimageLen/1944280239 var542) (jjmatchedPos/1944280239 var542) 1))\r\n  (define-fun var542!2 () var3968\r\n    var3968!val!3)\r\n  (define-fun var1551 () Int\r\n    (+ (jjmatchedPos/1944280239 var542) 1))\r\n  (define-fun var270 () Int\r\n    (jjimageLen/1944280239 var542!2))\r\n  (define-fun var542!1 () var3968\r\n    var3968!val!2)\r\n  (define-fun var542 () var3968\r\n    var3968!val!0)\r\n  (define-fun var2927 () Int\r\n    (jjimageLen/1944280239 var542))\r\n  (define-fun null-var3968 () var3968\r\n    var3968!val!1)\r\n  (define-fun var542!3 () var3968\r\n    var3968!val!4)\r\n  (define-fun var3850 () String\r\n    (image/1944280239 var542!2))\r\n  (define-fun var3168 () var2111\r\n    (input_stream/1944280239 var542!3))\r\n  (define-fun var3850!1 () String\r\n    \"\")\r\n  (define-fun var1504 () Int\r\n    (jjmatchedKind/1944280239 var542!2))\r\n  (define-fun var2730 () Int\r\n    (jjmatchedPos/1944280239 var542))\r\n  (define-fun var3236 () (Array Int Int)\r\n    (GetSuffix/-1895540804\r\n  (input_stream/1944280239 var542!2)\r\n  (jjimageLen/1944280239 var542!2)))\r\n  (define-fun var3670 () Int\r\n    0)\r\n  (define-fun var3168!1 () var2111\r\n    var2111!val!0)\r\n  (define-fun jjmatchedKind/1944280239 ((x!0 var3968)) Int\r\n    7)\r\n  (define-fun jjmatchedPos/1944280239 ((x!0 var3968)) Int\r\n    0)\r\n  (define-fun image/1944280239 ((x!0 var3968)) String\r\n    \"\")\r\n  (define-fun jjimageLen/1944280239 ((x!0 var3968)) Int\r\n    (ite (= x!0 var3968!val!3) 1\r\n      0))\r\n  (define-fun lengthOfMatch/1944280239 ((x!0 var3968)) Int\r\n    1)\r\n  (define-fun append/109888945 ((x!0 String) (x!1 (Array Int Int))) String\r\n    \"\")\r\n  (define-fun input_stream/1944280239 ((x!0 var3968)) var2111\r\n    var2111!val!0)\r\n  (define-fun GetSuffix/-1895540804 ((x!0 var2111) (x!1 Int)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun backup/1706402153 ((x!0 var2111) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 57 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11317248,
            "run_time": 0.031273603439331055,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3968 is 5\r\n; rep: (as @var3968_0 var3968)\r\n; rep: (as @var3968_1 var3968)\r\n; rep: (as @var3968_2 var3968)\r\n; rep: (as @var3968_3 var3968)\r\n; rep: (as @var3968_4 var3968)\r\n; cardinality of var2111 is 1\r\n; rep: (as @var2111_0 var2111)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun jjimageLen/1944280239 ((_arg_1 var3968)) Int (ite (= (as @var3968_3 var3968) _arg_1) 0 (ite (= (as @var3968_4 var3968) _arg_1) 0 (- 1))))\r\n(define-fun jjmatchedPos/1944280239 ((_arg_1 var3968)) Int 0)\r\n(define-fun lengthOfMatch/1944280239 ((_arg_1 var3968)) Int 1)\r\n(define-fun jjmatchedKind/1944280239 ((_arg_1 var3968)) Int 7)\r\n(define-fun image/1944280239 ((_arg_1 var3968)) String \"\")\r\n(define-fun input_stream/1944280239 ((BOUND_VARIABLE_732 var3968)) var2111 (as @var2111_0 var2111))\r\n(define-fun GetSuffix/-1895540804 ((BOUND_VARIABLE_735 var2111) (BOUND_VARIABLE_736 Int)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun append/109888945 ((BOUND_VARIABLE_741 String) (BOUND_VARIABLE_742 (Array Int Int))) String \"\")\r\n(define-fun backup/1706402153 ((BOUND_VARIABLE_745 var2111) (BOUND_VARIABLE_746 Int)) void (as @void_0 void))\r\n(define-fun null-var3968 () var3968 (as @var3968_0 var3968))\r\n(define-fun var542 () var3968 (as @var3968_1 var3968))\r\n(define-fun var542!1 () var3968 (as @var3968_2 var3968))\r\n(define-fun var542!2 () var3968 (as @var3968_3 var3968))\r\n(define-fun var3850!1 () String \"\")\r\n(define-fun var542!3 () var3968 (as @var3968_4 var3968))\r\n(define-fun var3168!1 () var2111 (as @var2111_0 var2111))\r\n(define-fun var3670 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34168832,
            "run_time": 0.0624544620513916,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 56 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 57 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181841920,
            "run_time": 0.7831518650054932,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.utils.ConditionParserTokenManager__MoreLexicalActions__643643732\\2201.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3850!1 =\r\n     concat(all_14_0, rhs)\r\n   ... sat\r\n\r\n533ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.ConditionParserTokenManager",
            "$i2 = r0.<org.javacc.utils.ConditionParserTokenManager: int jjimageLen>",
            "$i0 = r0.<org.javacc.utils.ConditionParserTokenManager: int jjmatchedPos>",
            "$i1 = $i0 + 1",
            "r0.<org.javacc.utils.ConditionParserTokenManager: int lengthOfMatch> = $i1",
            "$i3 = $i2 + $i1",
            "r0.<org.javacc.utils.ConditionParserTokenManager: int jjimageLen> = $i3",
            "$i4 = r0.<org.javacc.utils.ConditionParserTokenManager: int jjmatchedKind>",
            "lookupswitch($i4) {     case 7: goto $r2 = r0.<org.javacc.utils.ConditionParserTokenManager: java.lang.StringBuilder image>;     default: goto return; }",
            "$r2 = r0.<org.javacc.utils.ConditionParserTokenManager: java.lang.StringBuilder image>",
            "$r1 = r0.<org.javacc.utils.ConditionParserTokenManager: org.javacc.utils.JavaCharStream input_stream>",
            "$i5 = r0.<org.javacc.utils.ConditionParserTokenManager: int jjimageLen>",
            "$r3 = virtualinvoke $r1.<org.javacc.utils.JavaCharStream: char[] GetSuffix(int)>($i5)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char[])>($r3)",
            "r0.<org.javacc.utils.ConditionParserTokenManager: int jjimageLen> = 0",
            "$r4 = r0.<org.javacc.utils.ConditionParserTokenManager: org.javacc.utils.JavaCharStream input_stream>",
            "virtualinvoke $r4.<org.javacc.utils.JavaCharStream: void backup(int)>(1)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.ConditionParserTokenManager__SwitchTo__-774712058\\2125.smt2",
        "z3": {
            "memory": 33038336,
            "run_time": 0.04386544227600098,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1392:\r\n  ;;   var1392!val!1 var1392!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1392!val!1 () var1392)\r\n  (declare-fun var1392!val!0 () var1392)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1392)) (or (= x var1392!val!1) (= x var1392!val!0)))\r\n  ;; -----------\r\n  (define-fun var559 () String\r\n    (str.++ var3785!1\r\n        \"Error: Ignoring invalid lexical state : \"\r\n        (str.from_int var1159)\r\n        \". State unchanged.\"))\r\n  (define-fun null-var1392 () var1392\r\n    var1392!val!1)\r\n  (define-fun var1159 () Int\r\n    4)\r\n  (define-fun var2338!1 () String\r\n    \"Error: Ignoring invalid lexical state : \")\r\n  (define-fun var3785 () String\r\n    String-init)\r\n  (define-fun var1391 () String\r\n    (str.++ var3785!1\r\n        \"Error: Ignoring invalid lexical state : \"\r\n        (str.from_int var1159)))\r\n  (define-fun var2338 () String\r\n    (str.++ var3785!1 \"Error: Ignoring invalid lexical state : \"))\r\n  (define-fun var2798 () var3846\r\n    var3846-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    5)\r\n  (define-fun var3321 () String\r\n    (str.++ var3785!1\r\n        \"Error: Ignoring invalid lexical state : \"\r\n        (str.from_int var1159)\r\n        \". State unchanged.\"))\r\n  (define-fun var882 () var1392\r\n    var1392!val!0)\r\n  (define-fun var3785!1 () String\r\n    \"\")\r\n  (define-fun var1391!1 () String\r\n    \"Error: Ignoring invalid lexical state : 4. State unchanged.\")\r\n  (define-fun var3785!2 () String\r\n    \"Error: Ignoring invalid lexical state : \")\r\n  (define-fun var2798!1 () var3846\r\n    var3846!val!0)\r\n  (define-fun var3321!1 () String\r\n    \"\")\r\n  (define-fun var3344 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3846-init () var3846\r\n    var3846!val!0)\r\n  (define-fun <init>/1711511507 ((x!0 var3846) (x!1 String) (x!2 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 53 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11264000,
            "run_time": 0.015542268753051758,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1392 is 2\r\n; rep: (as @var1392_0 var1392)\r\n; rep: (as @var1392_1 var1392)\r\n; cardinality of var3846 is 1\r\n; rep: (as @var3846_0 var3846)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3846-init () var3846 (as @var3846_0 var3846))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1711511507 ((BOUND_VARIABLE_967 var3846) (BOUND_VARIABLE_968 String) (BOUND_VARIABLE_969 Int)) void (as @void_0 void))\r\n(define-fun null-var1392 () var1392 (as @var1392_0 var1392))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var882 () var1392 (as @var1392_1 var1392))\r\n(define-fun var1159 () Int 4)\r\n(define-fun var3785!1 () String \"\")\r\n(define-fun var3785!2 () String \"Error: Ignoring invalid lexical state : \")\r\n(define-fun var2338!1 () String \"Error: Ignoring invalid lexical state : \")\r\n(define-fun var1391!1 () String \"Error: Ignoring invalid lexical state : 4. State unchanged.\")\r\n(define-fun var2798!1 () var3846 (as @var3846_0 var3846))\r\n(define-fun var3321!1 () String \"\")\r\n(define-fun var3344 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37400576,
            "run_time": 0.07782649993896484,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1392:\n  ;;   var1392!val!1 var1392!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1392!val!1 () var1392)\n  (declare-fun var1392!val!0 () var1392)\n  ;; cardinality constraint:\n  (forall ((x var1392)) (or (= x var1392!val!1) (= x var1392!val!0)))\n  ;; -----------\n  (define-fun var3785 () String\n    String-init)\n  (define-fun null-var1392 () var1392\n    var1392!val!1)\n  (define-fun var1159 () Int\n    4)\n  (define-fun var2338 () String\n    (str.++ var3785!1 \"Error: Ignoring invalid lexical state : \"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1391 () String\n    (str.++ var3785!1\n        \"Error: Ignoring invalid lexical state : \"\n        (str.from_int var1159)))\n  (define-fun var3321 () String\n    (str.++ var3785!1\n        \"Error: Ignoring invalid lexical state : \"\n        (str.from_int var1159)\n        \". State unchanged.\"))\n  (define-fun null-Int () Int\n    5)\n  (define-fun var2798 () var3846\n    var3846-init)\n  (define-fun var2338!1 () String\n    \"Error: Ignoring invalid lexical state : \")\n  (define-fun var559 () String\n    (str.++ var3785!1\n        \"Error: Ignoring invalid lexical state : \"\n        (str.from_int var1159)\n        \". State unchanged.\"))\n  (define-fun var3785!2 () String\n    \"Error: Ignoring invalid lexical state : \")\n  (define-fun var882 () var1392\n    var1392!val!0)\n  (define-fun var3785!1 () String\n    \"\")\n  (define-fun var1391!1 () String\n    \"Error: Ignoring invalid lexical state : 4. State unchanged.\")\n  (define-fun var2798!1 () var3846\n    var3846!val!0)\n  (define-fun var3321!1 () String\n    \"\")\n  (define-fun var3344 () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3846-init () var3846\n    var3846!val!0)\n  (define-fun <init>/1711511507 ((x!0 var3846) (x!1 String) (x!2 Int)) void\n    void!val!0)\n)\n(error \"line 53 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175968256,
            "run_time": 0.8561680316925049,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1391!1 () String \"Error: Ignoring invalid lexical state : 4. State unchanged.\")\r\n  (define-fun var2338!1 () String \"Error: Ignoring invalid lexical state : \")\r\n  (define-fun var3785!2 () String \"Error: Ignoring invalid lexical state : \")\r\n  (define-fun var3785!1 () String \"\")\r\n  (define-fun var1159 () Int 4)\r\n  (define-fun var882 () var1392 var1392!84)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var1392 () var1392 var1392!82)\r\n  (define-fun abbrev_106 ((x!0 Int)) String (ite (= x!0 0) \"Error: Ignoring invalid lexical state : \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r6 := @this: org.javacc.utils.ConditionParserTokenManager",
            "i0 := @parameter0: int",
            "if i0 >= 4 goto $r0 = new org.javacc.utils.TokenMgrError",
            "$r0 = new org.javacc.utils.TokenMgrError",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Error: Ignoring invalid lexical state : \")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\". State unchanged.\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<org.javacc.utils.TokenMgrError: void <init>(java.lang.String,int)>($r5, 2)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.ConditionParserTokenManager__\u300ainit\u300b__-267401935\\2070.smt2",
        "z3": {
            "memory": 10928128,
            "run_time": 0.04367351531982422,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3862:\r\n  ;;   var3862!val!1 var3862!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3862!val!1 () var3862)\r\n  (declare-fun var3862!val!0 () var3862)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3862)) (or (= x var3862!val!1) (= x var3862!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1260:\r\n  ;;   var1260!val!5 var1260!val!1 var1260!val!4 var1260!val!2 var1260!val!7 var1260!val!8 var1260!val!9 var1260!val!6 var1260!val!0 var1260!val!3 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1260!val!5 () var1260)\r\n  (declare-fun var1260!val!1 () var1260)\r\n  (declare-fun var1260!val!4 () var1260)\r\n  (declare-fun var1260!val!2 () var1260)\r\n  (declare-fun var1260!val!7 () var1260)\r\n  (declare-fun var1260!val!8 () var1260)\r\n  (declare-fun var1260!val!9 () var1260)\r\n  (declare-fun var1260!val!6 () var1260)\r\n  (declare-fun var1260!val!0 () var1260)\r\n  (declare-fun var1260!val!3 () var1260)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1260))\r\n          (or (= x var1260!val!5)\r\n              (= x var1260!val!1)\r\n              (= x var1260!val!4)\r\n              (= x var1260!val!2)\r\n              (= x var1260!val!7)\r\n              (= x var1260!val!8)\r\n              (= x var1260!val!9)\r\n              (= x var1260!val!6)\r\n              (= x var1260!val!0)\r\n              (= x var1260!val!3)))\r\n  ;; -----------\r\n  (define-fun var2422!4 () var1260\r\n    var1260!val!5)\r\n  (define-fun var2422!7 () var1260\r\n    var1260!val!8)\r\n  (define-fun var2986 () var1014\r\n    var2294-out)\r\n  (define-fun var2941 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var2422!3 () var1260\r\n    var1260!val!4)\r\n  (define-fun var2422!2 () var1260\r\n    var1260!val!3)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2422 () var1260\r\n    var1260!val!0)\r\n  (define-fun null-var1260 () var1260\r\n    var1260!val!1)\r\n  (define-fun var2422!9 () var1260\r\n    var1260!val!2)\r\n  (define-fun var2422!5 () var1260\r\n    var1260!val!6)\r\n  (define-fun var2422!8 () var1260\r\n    var1260!val!9)\r\n  (define-fun var1004 () String\r\n    (jjimage/1944280239 var2422!5))\r\n  (define-fun var1628 () String\r\n    String-init)\r\n  (define-fun null-var3862 () var3862\r\n    var3862!val!1)\r\n  (define-fun var3351 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var2422!6 () var1260\r\n    var1260!val!7)\r\n  (define-fun var1628!1 () String\r\n    \"\")\r\n  (define-fun arr-Int-init () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var2294-out () var1014\r\n    var1014!val!0)\r\n  (define-fun var1323 () var3862\r\n    var3862!val!0)\r\n  (define-fun var2422!1 () var1260\r\n    var1260!val!5)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun image/1944280239 ((x!0 var1260)) String\r\n    \"\")\r\n  (define-fun curLexState/1944280239 ((x!0 var1260)) Int\r\n    0)\r\n  (define-fun jjrounds/1944280239 ((x!0 var1260)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun jjimage/1944280239 ((x!0 var1260)) String\r\n    \"\")\r\n  (define-fun input_stream/1944280239 ((x!0 var1260)) var3862\r\n    var3862!val!0)\r\n  (define-fun jjstateSet/1944280239 ((x!0 var1260)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun defaultLexState/1944280239 ((x!0 var1260)) Int\r\n    0)\r\n  (define-fun debugStream/1944280239 ((x!0 var1260)) var1014\r\n    var1014!val!0)\r\n  (define-fun cast-from-var1260-to-var3156 ((x!0 var1260)) var3156\r\n    var3156!val!0)\r\n  (define-fun <init>/-279557996 ((x!0 var3156)) void\r\n    void!val!0)\r\n)\r\n(error \"line 72 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.016257762908935547,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1260 is 10\r\n; rep: (as @var1260_0 var1260)\r\n; rep: (as @var1260_1 var1260)\r\n; rep: (as @var1260_2 var1260)\r\n; rep: (as @var1260_3 var1260)\r\n; rep: (as @var1260_4 var1260)\r\n; rep: (as @var1260_5 var1260)\r\n; rep: (as @var1260_6 var1260)\r\n; rep: (as @var1260_7 var1260)\r\n; rep: (as @var1260_8 var1260)\r\n; rep: (as @var1260_9 var1260)\r\n; cardinality of var3862 is 2\r\n; rep: (as @var3862_0 var3862)\r\n; rep: (as @var3862_1 var3862)\r\n; cardinality of var3156 is 1\r\n; rep: (as @var3156_0 var3156)\r\n; cardinality of var1014 is 1\r\n; rep: (as @var1014_0 var1014)\r\n; cardinality of var2294 is 1\r\n; rep: (as @var2294_0 var2294)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun <init>/-279557996 ((BOUND_VARIABLE_691 var3156)) void (as @void_0 void))\r\n(define-fun cast-from-var1260-to-var3156 ((BOUND_VARIABLE_694 var1260)) var3156 (as @var3156_0 var3156))\r\n(define-fun debugStream/1944280239 ((BOUND_VARIABLE_697 var1260)) var1014 (as @var1014_0 var1014))\r\n(define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun jjrounds/1944280239 ((_arg_1 var1260)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun jjstateSet/1944280239 ((_arg_1 var1260)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun String-init () String \"\")\r\n(define-fun jjimage/1944280239 ((_arg_1 var1260)) String \"\")\r\n(define-fun image/1944280239 ((_arg_1 var1260)) String \"\")\r\n(define-fun curLexState/1944280239 ((_arg_1 var1260)) Int 0)\r\n(define-fun defaultLexState/1944280239 ((_arg_1 var1260)) Int 0)\r\n(define-fun input_stream/1944280239 ((_arg_1 var1260)) var3862 (as @var3862_1 var3862))\r\n(define-fun null-var1260 () var1260 (as @var1260_0 var1260))\r\n(define-fun null-var3862 () var3862 (as @var3862_0 var3862))\r\n(define-fun var2294-out () var1014 (as @var1014_0 var1014))\r\n(define-fun var2422 () var1260 (as @var1260_1 var1260))\r\n(define-fun var1323 () var3862 (as @var3862_1 var3862))\r\n(define-fun var2422!1 () var1260 (as @var1260_0 var1260))\r\n(define-fun var2422!2 () var1260 (as @var1260_2 var1260))\r\n(define-fun var2422!3 () var1260 (as @var1260_3 var1260))\r\n(define-fun var2422!4 () var1260 (as @var1260_4 var1260))\r\n(define-fun var1628!1 () String \"\")\r\n(define-fun var2422!5 () var1260 (as @var1260_5 var1260))\r\n(define-fun var2422!6 () var1260 (as @var1260_6 var1260))\r\n(define-fun var2422!7 () var1260 (as @var1260_7 var1260))\r\n(define-fun var2422!8 () var1260 (as @var1260_8 var1260))\r\n(define-fun var2422!9 () var1260 (as @var1260_9 var1260))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36950016,
            "run_time": 0.04591679573059082,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 71 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 72 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182620160,
            "run_time": 0.822443962097168,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2422!9 () var1260 var1260!28)\r\n  (define-fun var2422!8 () var1260 var1260!26)\r\n  (define-fun var2422!7 () var1260 var1260!24)\r\n  (define-fun var2422!6 () var1260 var1260!22)\r\n  (define-fun var2422!5 () var1260 var1260!20)\r\n  (define-fun var1628!1 () String \"\")\r\n  (define-fun var2422!4 () var1260 var1260!18)\r\n  (define-fun var2422!3 () var1260 var1260!16)\r\n  (define-fun var2422!2 () var1260 var1260!14)\r\n  (define-fun var1323 () var3862 var3862!12)\r\n  (define-fun var2422 () var1260 var1260!10)\r\n  (define-fun var2294-out () var1014 var1014!8)\r\n  (define-fun null-var3862 () var3862 var3862!6)\r\n  (define-fun null-var1260 () var1260 var1260!4)\r\n  (define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun var3862!12 () var3862 (input_stream/1944280239 var1260!28))\r\n  (define-fun var1014!8 () var1014 (debugStream/1944280239 var1260!14))\r\n  (define-fun defaultLexState/1944280239 ((x!0 var1260)) Int (ite (= x!0 var1260!26) 0 0))\r\n  (define-fun curLexState/1944280239 ((x!0 var1260)) Int (ite (= x!0 var1260!24) 0 0))\r\n  (define-fun image/1944280239 ((x!0 var1260)) String (ite (= x!0 var1260!22) \"\" \"\"))\r\n  (define-fun jjimage/1944280239 ((x!0 var1260)) String (ite (= x!0 var1260!20) \"\" \"\"))\r\n  (define-fun jjstateSet/1944280239 ((x!0 var1260)) (Array Int Int) (ite (= x!0 var1260!18) ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n  (define-fun jjrounds/1944280239 ((x!0 var1260)) (Array Int Int) (ite (= x!0 var1260!16) ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 12,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.ConditionParserTokenManager",
            "r6 := @parameter0: org.javacc.utils.JavaCharStream",
            "specialinvoke r0.<java.lang.Object: void <init>()>()",
            "$r1 = <java.lang.System: java.io.PrintStream out>",
            "r0.<org.javacc.utils.ConditionParserTokenManager: java.io.PrintStream debugStream> = $r1",
            "$r2 = newarray (int)[6]",
            "r0.<org.javacc.utils.ConditionParserTokenManager: int[] jjrounds> = $r2",
            "$r3 = newarray (int)[12]",
            "r0.<org.javacc.utils.ConditionParserTokenManager: int[] jjstateSet> = $r3",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "r0.<org.javacc.utils.ConditionParserTokenManager: java.lang.StringBuilder jjimage> = $r4",
            "$r5 = r0.<org.javacc.utils.ConditionParserTokenManager: java.lang.StringBuilder jjimage>",
            "r0.<org.javacc.utils.ConditionParserTokenManager: java.lang.StringBuilder image> = $r5",
            "r0.<org.javacc.utils.ConditionParserTokenManager: int curLexState> = 0",
            "r0.<org.javacc.utils.ConditionParserTokenManager: int defaultLexState> = 0",
            "r0.<org.javacc.utils.ConditionParserTokenManager: org.javacc.utils.JavaCharStream input_stream> = r6",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__insertOpenNodeCode__1284769165\\673.smt2",
        "z3": {
            "memory": 32546816,
            "run_time": 60.01366209983826,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11276288,
            "run_time": 0.029692411422729492,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var900 is 2\r\n; rep: (as @var900_0 var900)\r\n; rep: (as @var900_1 var900)\r\n; cardinality of var1431 is 2\r\n; rep: (as @var1431_0 var1431)\r\n; rep: (as @var1431_1 var1431)\r\n; cardinality of var1923 is 2\r\n; rep: (as @var1923_0 var1923)\r\n; rep: (as @var1923_1 var1923)\r\n; cardinality of var464 is 1\r\n; rep: (as @var464_0 var464)\r\n; cardinality of var2698 is 1\r\n; rep: (as @var2698_0 var2698)\r\n; cardinality of var3160 is 1\r\n; rep: (as @var3160_0 var3160)\r\n; cardinality of var1802 is 1\r\n; rep: (as @var1802_0 var1802)\r\n; cardinality of var2434 is 1\r\n; rep: (as @var2434_0 var2434)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun node_descriptor/-576648796 ((BOUND_VARIABLE_1427 var1431)) var2698 (as @var2698_0 var2698))\r\n(define-fun getNodeType/-707025417 ((BOUND_VARIABLE_1430 var2698)) String \"\")\r\n(define-fun var3160_getNodeClass/-1384960322 () String \"\")\r\n(define-fun var1802_addType/-972038703 ((BOUND_VARIABLE_1433 String)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun nodeVar/-576648796 ((BOUND_VARIABLE_1436 var1431)) String \"\")\r\n(define-fun print/-1652180213 ((BOUND_VARIABLE_1439 var1923) (BOUND_VARIABLE_1440 String)) void (as @void_0 void))\r\n(define-fun var2434_getStatic/-616544340 () Bool false)\r\n(define-fun var3160_getNodeUsesParser/1997544654 () Bool true)\r\n(define-fun var3160_getNodeFactory/-1655041108 () String \"*\")\r\n(define-fun getNodeId/-1379187338 ((BOUND_VARIABLE_1443 var2698)) String \"\")\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_1446 var1923) (BOUND_VARIABLE_1447 String)) void (as @void_0 void))\r\n(define-fun usesCloseNodeVar/-1769174946 ((_arg_1 var1431)) Bool false)\r\n(define-fun openNode/114769770 ((BOUND_VARIABLE_1450 var2698) (BOUND_VARIABLE_1451 String)) String \"\")\r\n(define-fun var3160_getNodeScopeHook/893147786 () Bool false)\r\n(define-fun var3160_getTrackTokens/1877101562 () Bool false)\r\n(define-fun null-var900 () var900 (as @var900_0 var900))\r\n(define-fun null-var1431 () var1431 (as @var1431_0 var1431))\r\n(define-fun null-var1923 () var1923 (as @var1923_0 var1923))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1650 () var900 (as @var900_1 var900))\r\n(define-fun var627 () var1431 (as @var1431_1 var1431))\r\n(define-fun var1518 () var1923 (as @var1923_1 var1923))\r\n(define-fun var1723 () String \"\")\r\n(define-fun var1477!1 () String \"\")\r\n(define-fun var1739!1 () String \"\")\r\n(define-fun var1739!2 () String \"\")\r\n(define-fun var3754!1 () String \"\")\r\n(define-fun var2619!1 () String \" *\")\r\n(define-fun var3650!1 () String \" *\")\r\n(define-fun var331!1 () String \" * = \")\r\n(define-fun var1518!1 () var1923 (as @var1923_0 var1923))\r\n(define-fun var823!1 () String \"\")\r\n(define-fun var1930!1 () String \"\")\r\n(define-fun var1930!2 () String \"this\")\r\n(define-fun var3611!1 () String \"this, \")\r\n(define-fun var1105!1 () String \"\")\r\n(define-fun var1105!2 () String \"(\")\r\n(define-fun var2852!1 () String \"(\")\r\n(define-fun var987!1 () String \"(*)\")\r\n(define-fun var843!1 () String \"(*)\")\r\n(define-fun var1825!1 () String \"(*)::jjtCreate(\")\r\n(define-fun var3450!1 () String \"(*)::jjtCreate(this, \")\r\n(define-fun var1686!1 () String \"(*)::jjtCreate(this, \")\r\n(define-fun var1855!1 () String \"(*)::jjtCreate(this, );\")\r\n(define-fun var1518!2 () var1923 (as @var1923_0 var1923))\r\n(define-fun var3284!1 () String \"\")\r\n(define-fun var3927!1 () String \"\")\r\n(define-fun var3927!2 () String \"\")\r\n(define-fun var1089!1 () String \"\")\r\n(define-fun var1518!3 () var1923 (as @var1923_0 var1923))\r\n(define-fun var3026!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37462016,
            "run_time": 60.006427526474,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 384106496,
            "run_time": 1.286633014678955,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1431/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPCodeGenerator__insertOpenNodeCode__1284769165\\673.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3450!1 =\r\n     concat(all_76_10, \"this, \")\r\n   var331!1 =\r\n     concat(all_73_6, \" = \")\r\n   var1825!1 =\r\n     concat(all_70_5, \"::jjtCreate(\")\r\n   var3650!1 =\r\n     concat(all_67_6, all_52_4)\r\n   var843!1 =\r\n     concat(all_64_4, all_46_3)\r\n   var987!1 =\r\n     concat(all_61_4, \"*)\")\r\n   var2619!1 =\r\n     concat(all_58_4, \" *\")\r\n   var1855!1 =\r\n     concat(all_55_3, \");\")\r\n   var1686!1 =\r\n     concat(all_40_4, all_40_2)\r\n   var1089!1 =\r\n     concat(var1723, all_52_3)\r\n   var3754!1 =\r\n     concat(var1723, all_46_3)\r\n   var2852!1 =\r\n     concat(\"(\", all_46_3)\r\n   all_76_10 =\r\n     concat(all_76_11, \"::jjtCreate(\")\r\n   all_73_6 =\r\n     concat(all_73_8, all_52_4)\r\n   all_70_5 =\r\n     concat(all_70_6, all_46_3)\r\n   all_67_6 =\r\n     concat(all_67_7, \" *\")\r\n   all_64_4 =\r\n     concat(all_64_5, \"*)\")\r\n   all_55_3 =\r\n     concat(all_40_4, all_40_2)\r\n   all_58_4 =\r\n     concat(var1723, all_46_3)\r\n   all_61_4 =\r\n     concat(\"(\", all_46_3)\r\n   all_40_4 =\r\n     concat(all_79_11, \"this, \")\r\n   all_76_11 =\r\n     concat(all_76_12, all_46_3)\r\n   all_73_8 =\r\n     concat(all_73_9, \" *\")\r\n   all_70_6 =\r\n     concat(all_70_7, \"*)\")\r\n   all_67_7 =\r\n     concat(var1723, all_46_3)\r\n   all_64_5 =\r\n     concat(\"(\", all_46_3)\r\n   all_79_11 =\r\n     concat(all_79_12, \"::jjtCreate(\")\r\n   all_76_12 =\r\n     concat(all_76_13, \"*)\")\r\n   all_73_9 =\r\n     concat(var1723, all_46_3)\r\n   all_70_7 =\r\n     concat(\"(\", all_46_3)\r\n   all_79_12 =\r\n     concat(all_79_13, all_46_3)\r\n   all_76_13 =\r\n     concat(\"(\", all_46_3)\r\n   all_79_13 =\r\n     concat(all_79_14, \"*)\")\r\n   all_79_14 =\r\n     concat(\"(\", all_46_3)\r\n\r\n1006ms\r\n"
        },
        "undefined_function_count": 16,
        "assertion_count": 70,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 17,
            "<java.lang.StringBuilder: java.lang.String toString()>": 4,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r70 := @this: org.javacc.jjtree.CPPCodeGenerator",
            "r0 := @parameter0: org.javacc.jjtree.NodeScope",
            "r4 := @parameter1: org.javacc.jjtree.IO",
            "r5 := @parameter2: java.lang.String",
            "$r1 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "r2 = virtualinvoke $r1.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String getNodeType()>()",
            "$r3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeClass()>()",
            "$i0 = virtualinvoke $r3.<java.lang.String: int length()>()",
            "if $i0 <= 0 goto r71 = r2",
            "r71 = r2",
            "staticinvoke <org.javacc.jjtree.CPPNodeFiles: void addType(java.lang.String)>(r2)",
            "$r72 = new java.lang.StringBuilder",
            "specialinvoke $r72.<java.lang.StringBuilder: void <init>()>()",
            "$r73 = virtualinvoke $r72.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r74 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r75 = virtualinvoke $r74.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" *\")",
            "$r76 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "$r77 = virtualinvoke $r75.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r76)",
            "$r78 = virtualinvoke $r77.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \")",
            "$r79 = virtualinvoke $r78.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void print(java.lang.String)>($r79)",
            "$z5 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getStatic()>()",
            "if $z5 == 0 goto $r80 = \"this\"",
            "$r80 = \"this\"",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeUsesParser()>()",
            "if $z0 == 0 goto $r81 = \"\"",
            "$r67 = new java.lang.StringBuilder",
            "specialinvoke $r67.<java.lang.StringBuilder: void <init>()>()",
            "$r68 = virtualinvoke $r67.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80)",
            "$r69 = virtualinvoke $r68.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")",
            "$r81 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.String toString()>()",
            "goto [?= $r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()]",
            "$r6 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()",
            "$z1 = virtualinvoke $r6.<java.lang.String: boolean equals(java.lang.Object)>(\"*\")",
            "if $z1 == 0 goto $r7 = staticinvoke <org.javacc.jjtree.JJTreeOptions: java.lang.String getNodeFactory()>()",
            "$r55 = new java.lang.StringBuilder",
            "specialinvoke $r55.<java.lang.StringBuilder: void <init>()>()",
            "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"*)\")",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"::jjtCreate(\")",
            "$r63 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r81)",
            "$r61 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r62 = virtualinvoke $r61.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String getNodeId()>()",
            "$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r62)",
            "$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\");\")",
            "$r66 = virtualinvoke $r65.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r66)",
            "goto [?= $z6 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()]",
            "$z6 = virtualinvoke r0.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()",
            "if $z6 == 0 goto $r18 = new java.lang.StringBuilder",
            "$r18 = new java.lang.StringBuilder",
            "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()",
            "$r22 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r20 = r0.<org.javacc.jjtree.NodeScope: org.javacc.jjtree.ASTNodeDescriptor node_descriptor>",
            "$r19 = r0.<org.javacc.jjtree.NodeScope: java.lang.String nodeVar>",
            "$r21 = virtualinvoke $r20.<org.javacc.jjtree.ASTNodeDescriptor: java.lang.String openNode(java.lang.String)>($r19)",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.javacc.jjtree.IO: void println(java.lang.String)>($r24)",
            "$z2 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getNodeScopeHook()>()",
            "if $z2 == 0 goto $z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "$z3 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getTrackTokens()>()",
            "if $z3 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.ConditionParser__Name__-733387779\\1863.smt2",
        "z3": {
            "memory": 32247808,
            "run_time": 0.04504799842834473,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 47 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11333632,
            "run_time": 0.01554560661315918,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36265984,
            "run_time": 0.04609560966491699,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 47 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 170799104,
            "run_time": 0.9160168170928955,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.ConditionParser",
            "specialinvoke r0.<org.javacc.utils.ConditionParser: org.javacc.utils.Token jj_consume_token(int)>(21)",
            "$r1 = virtualinvoke r0.<org.javacc.utils.ConditionParser: org.javacc.utils.Token getToken(int)>(0)",
            "$r2 = $r1.<org.javacc.utils.Token: java.lang.String image>",
            "r3 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>()",
            "$r4 = r0.<org.javacc.utils.ConditionParser: java.util.Map options>",
            "r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)",
            "$z0 = r5 instanceof java.lang.Boolean",
            "if $z0 == 0 goto $z1 = r5 instanceof java.lang.String",
            "$r8 = (java.lang.Boolean) r5",
            "$z4 = virtualinvoke $r8.<java.lang.Boolean: boolean booleanValue()>()",
            "return $z4"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.ConditionParser__test__-183973539\\1556.smt2",
        "z3": {
            "memory": 24256512,
            "run_time": 0.05148935317993164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var50 () var2734\r\n    var2734-FALSE)\r\n  (define-fun var3143!1 () String\r\n    \"\")\r\n  (define-fun var3648 () var2350\r\n    var2350-init)\r\n  (define-fun var3143 () String\r\n    \"\")\r\n  (define-fun var1522 () String\r\n    (append/-388390247\r\n  (str.++ var3510!1 var3143!1 \" = \")\r\n  (CompilationUnit/1027580571\r\n    var3617!1\r\n    (cast-from-var3424-to-var3225 var1792!3))))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3617 () var2751\r\n    var2751-init)\r\n  (define-fun var2368 () Bool\r\n    true)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var817!1 () String\r\n    \" = \")\r\n  (define-fun var1792 () var3424\r\n    var3424-init)\r\n  (define-fun var3855 () var2734\r\n    var2734-TRUE)\r\n  (define-fun var2930 () var711\r\n    var711-init)\r\n  (define-fun var1333 () var751\r\n    var12-out)\r\n  (define-fun var1029 () String\r\n    (str.++ var3510!1 var3143!1))\r\n  (define-fun var3690 () String\r\n    (append/-388390247\r\n  (str.++ var3510!1 var3143!1 \" = \")\r\n  (CompilationUnit/1027580571\r\n    var3617!1\r\n    (cast-from-var3424-to-var3225 var1792!3))))\r\n  (define-fun var3510 () String\r\n    String-init)\r\n  (define-fun var817 () String\r\n    (str.++ var3510!1 var3143!1 \" = \"))\r\n  (define-fun var1267 () Bool\r\n    (CompilationUnit/1027580571 var3617!1 (cast-from-var3424-to-var3225 var1792!3)))\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var3617!1 () var2751\r\n    var2751!val!0)\r\n  (define-fun var1792!3 () var3424\r\n    var3424!val!0)\r\n  (define-fun var3510!1 () String\r\n    \"\")\r\n  (define-fun var3510!2 () String\r\n    \"\")\r\n  (define-fun var1029!1 () String\r\n    \" = \")\r\n  (define-fun var711-init () var711\r\n    var711!val!0)\r\n  (define-fun var3690!1 () String\r\n    \"\")\r\n  (define-fun var1792!2 () var3424\r\n    var3424!val!0)\r\n  (define-fun var1149 () String\r\n    \"\")\r\n  (define-fun var2930!2 () var711\r\n    var711!val!0)\r\n  (define-fun var3855!1 () var2734\r\n    var2734!val!0)\r\n  (define-fun var1333!1 () var751\r\n    var751!val!0)\r\n  (define-fun var3424-init () var3424\r\n    var3424!val!0)\r\n  (define-fun var12-out () var751\r\n    var751!val!0)\r\n  (define-fun var50!1 () var2734\r\n    var2734!val!0)\r\n  (define-fun var2751-init () var2751\r\n    var2751!val!0)\r\n  (define-fun var2093 () String\r\n    \"\")\r\n  (define-fun var2734-FALSE () var2734\r\n    var2734!val!0)\r\n  (define-fun var3648!1 () var2350\r\n    var2350!val!0)\r\n  (define-fun var2350-init () var2350\r\n    var2350!val!0)\r\n  (define-fun var2734-TRUE () var2734\r\n    var2734!val!0)\r\n  (define-fun var2930!1 () var711\r\n    var711!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1792!1 () var3424\r\n    var3424!val!0)\r\n  (define-fun cast-from-var3424-to-var3225 ((x!0 var3424)) var3225\r\n    var3225!val!0)\r\n  (define-fun CompilationUnit/1027580571 ((x!0 var2751) (x!1 var3225)) Bool\r\n    false)\r\n  (define-fun var3225_put/1464166817 ((x!0 var3225) (x!1 var2460) (x!2 var2460)) var2460\r\n    var2460!val!0)\r\n  (define-fun println/1773605060 ((x!0 var751) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun <init>/-201242697 ((x!0 var3424)) void\r\n    void!val!0)\r\n  (define-fun cast-from-String-to-var2460 ((x!0 String)) var2460\r\n    var2460!val!0)\r\n  (define-fun append/-388390247 ((x!0 String) (x!1 Bool)) String\r\n    \"\")\r\n  (define-fun cast-from-var711-to-var958 ((x!0 var711)) var958\r\n    var958!val!0)\r\n  (define-fun cast-from-var2734-to-var2460 ((x!0 var2734)) var2460\r\n    var2460!val!0)\r\n  (define-fun <init>/814598262 ((x!0 var711) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun <init>/2073162924 ((x!0 var2350)) void\r\n    void!val!0)\r\n  (define-fun <init>/702780027 ((x!0 var2751) (x!1 var958)) void\r\n    void!val!0)\r\n)\r\n(error \"line 113 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11317248,
            "run_time": 0.016030073165893555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var274 is 1\r\n; rep: (as @var274_0 var274)\r\n; cardinality of var2751 is 1\r\n; rep: (as @var2751_0 var2751)\r\n; cardinality of var711 is 1\r\n; rep: (as @var711_0 var711)\r\n; cardinality of var958 is 1\r\n; rep: (as @var958_0 var958)\r\n; cardinality of var3424 is 1\r\n; rep: (as @var3424_0 var3424)\r\n; cardinality of var2734 is 1\r\n; rep: (as @var2734_0 var2734)\r\n; cardinality of var3225 is 1\r\n; rep: (as @var3225_0 var3225)\r\n; cardinality of var2460 is 1\r\n; rep: (as @var2460_0 var2460)\r\n; cardinality of var751 is 1\r\n; rep: (as @var751_0 var751)\r\n; cardinality of var12 is 1\r\n; rep: (as @var12_0 var12)\r\n; cardinality of var2350 is 1\r\n; rep: (as @var2350_0 var2350)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2751-init () var2751 (as @var2751_0 var2751))\r\n(define-fun var711-init () var711 (as @var711_0 var711))\r\n(define-fun <init>/814598262 ((BOUND_VARIABLE_1234 var711) (BOUND_VARIABLE_1235 String)) void (as @void_0 void))\r\n(define-fun <init>/702780027 ((BOUND_VARIABLE_1238 var2751) (BOUND_VARIABLE_1239 var958)) void (as @void_0 void))\r\n(define-fun cast-from-var711-to-var958 ((BOUND_VARIABLE_1242 var711)) var958 (as @var958_0 var958))\r\n(define-fun var3424-init () var3424 (as @var3424_0 var3424))\r\n(define-fun <init>/-201242697 ((BOUND_VARIABLE_1245 var3424)) void (as @void_0 void))\r\n(define-fun var3225_put/1464166817 ((BOUND_VARIABLE_1248 var3225) (BOUND_VARIABLE_1249 var2460) (BOUND_VARIABLE_1250 var2460)) var2460 (as @var2460_0 var2460))\r\n(define-fun cast-from-var3424-to-var3225 ((BOUND_VARIABLE_1253 var3424)) var3225 (as @var3225_0 var3225))\r\n(define-fun cast-from-String-to-var2460 ((BOUND_VARIABLE_1256 String)) var2460 (as @var2460_0 var2460))\r\n(define-fun cast-from-var2734-to-var2460 ((BOUND_VARIABLE_1259 var2734)) var2460 (as @var2460_0 var2460))\r\n(define-fun CompilationUnit/1027580571 ((BOUND_VARIABLE_1262 var2751) (BOUND_VARIABLE_1263 var3225)) Bool false)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-388390247 ((BOUND_VARIABLE_1266 String) (BOUND_VARIABLE_1267 Bool)) String \"\")\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_1270 var751) (BOUND_VARIABLE_1271 String)) void (as @void_0 void))\r\n(define-fun var2350-init () var2350 (as @var2350_0 var2350))\r\n(define-fun <init>/2073162924 ((BOUND_VARIABLE_1274 var2350)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Bool () Bool false)\r\n(define-fun var2734-FALSE () var2734 (as @var2734_0 var2734))\r\n(define-fun var2734-TRUE () var2734 (as @var2734_0 var2734))\r\n(define-fun var12-out () var751 (as @var751_0 var751))\r\n(define-fun var3143 () String \"\")\r\n(define-fun var2368 () Bool true)\r\n(define-fun var2930!1 () var711 (as @var711_0 var711))\r\n(define-fun var3143!1 () String \"\")\r\n(define-fun var3617!1 () var2751 (as @var2751_0 var2751))\r\n(define-fun var2930!2 () var711 (as @var711_0 var711))\r\n(define-fun var1792!1 () var3424 (as @var3424_0 var3424))\r\n(define-fun var1792!2 () var3424 (as @var3424_0 var3424))\r\n(define-fun var2093 () String \"\")\r\n(define-fun var50!1 () var2734 (as @var2734_0 var2734))\r\n(define-fun var1792!3 () var3424 (as @var3424_0 var3424))\r\n(define-fun var1149 () String \"\")\r\n(define-fun var3855!1 () var2734 (as @var2734_0 var2734))\r\n(define-fun var3510!1 () String \"\")\r\n(define-fun var3510!2 () String \"\")\r\n(define-fun var1029!1 () String \" = \")\r\n(define-fun var817!1 () String \" = \")\r\n(define-fun var1333!1 () var751 (as @var751_0 var751))\r\n(define-fun var3690!1 () String \"\")\r\n(define-fun var3648!1 () var2350 (as @var2350_0 var2350))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38674432,
            "run_time": 0.061789751052856445,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 112 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 113 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168996864,
            "run_time": 0.9126386642456055,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.utils.ConditionParser__test__-183973539\\1556.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1029!1 =\r\n     concat(var3143!1, \" = \")\r\n   var817!1 =\r\n     concat(all_40_3, rhs)\r\n   all_40_3 =\r\n     concat(var3143!1, \" = \")\r\n   ... sat\r\n\r\n681ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 17,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.String",
            "z1 := @parameter1: boolean",
            "$r0 = new org.javacc.utils.ConditionParser",
            "$r1 = new java.io.StringReader",
            "specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>(r2)",
            "specialinvoke $r0.<org.javacc.utils.ConditionParser: void <init>(java.io.Reader)>($r1)",
            "$r3 = new java.util.HashMap",
            "specialinvoke $r3.<java.util.HashMap: void <init>()>()",
            "$r4 = <java.lang.Boolean: java.lang.Boolean FALSE>",
            "interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"F\", $r4)",
            "$r5 = <java.lang.Boolean: java.lang.Boolean TRUE>",
            "interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"T\", $r5)",
            "z0 = virtualinvoke $r0.<org.javacc.utils.ConditionParser: boolean CompilationUnit(java.util.Map)>($r3)",
            "$r7 = <java.lang.System: java.io.PrintStream out>",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11)",
            "if z0 == z1 goto return",
            "$r12 = new java.lang.RuntimeException",
            "specialinvoke $r12.<java.lang.RuntimeException: void <init>()>()",
            "throw $r12"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OptionInfo__hashCode__708861861\\1687.smt2",
        "z3": {
            "memory": 31772672,
            "run_time": 0.36702799797058105,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3570:\r\n  ;;   var3570!val!1 var3570!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3570!val!1 () var3570)\r\n  (declare-fun var3570!val!0 () var3570)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3570)) (or (= x var3570!val!1) (= x var3570!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var3570 () var3570\r\n    var3570!val!1)\r\n  (define-fun var3274 () Int\r\n    (* 31 (+ 31 0)))\r\n  (define-fun var1324 () Int\r\n    0)\r\n  (define-fun var2878 () var2079\r\n    (_type/-2056846942 var1322))\r\n  (define-fun var214 () Int\r\n    (+ 31 0))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1353 () String\r\n    (_name/-2056846942 var1322))\r\n  (define-fun var828 () String\r\n    (_name/-2056846942 var1322))\r\n  (define-fun var1449 () Int\r\n    (* 31 (+ (* 31 (+ 31 0)) (hashCode/-467973558 (_name/-2056846942 var1322)))))\r\n  (define-fun var611 () Int\r\n    (hashCode/-467973558 (_name/-2056846942 var1322)))\r\n  (define-fun var1322 () var3570\r\n    var3570!val!0)\r\n  (define-fun var1983 () Int\r\n    (+ (* 31 (+ 31 0)) (hashCode/-467973558 (_name/-2056846942 var1322))))\r\n  (define-fun var555 () Int\r\n    (let ((a!1 (* 31\r\n              (+ (* 31 (+ 31 0))\r\n                 (hashCode/-467973558 (_name/-2056846942 var1322))))))\r\n  (+ a!1 0)))\r\n  (define-fun var3822 () var2247\r\n    (_default/-2056846942 var1322))\r\n  (define-fun var2956 () Int\r\n    0)\r\n  (define-fun null-var2079 () var2079\r\n    var2079!val!0)\r\n  (define-fun null-var2247 () var2247\r\n    var2247!val!0)\r\n  (define-fun _name/-2056846942 ((x!0 var3570)) String\r\n    \"!0!\")\r\n  (define-fun _type/-2056846942 ((x!0 var3570)) var2079\r\n    var2079!val!0)\r\n  (define-fun _default/-2056846942 ((x!0 var3570)) var2247\r\n    var2247!val!0)\r\n  (define-fun hashCode/-467973558 ((x!0 String)) Int\r\n    0)\r\n)\r\n(error \"line 48 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11333632,
            "run_time": 0.016065120697021484,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3570 is 2\r\n; rep: (as @var3570_0 var3570)\r\n; rep: (as @var3570_1 var3570)\r\n; cardinality of var2247 is 1\r\n; rep: (as @var2247_0 var2247)\r\n; cardinality of var3233 is 1\r\n; rep: (as @var3233_0 var3233)\r\n; cardinality of var2079 is 1\r\n; rep: (as @var2079_0 var2079)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun _default/-2056846942 ((BOUND_VARIABLE_588 var3570)) var2247 (as @var2247_0 var2247))\r\n(define-fun _name/-2056846942 ((_arg_1 var3570)) String \"\")\r\n(define-fun hashCode/-467973558 ((BOUND_VARIABLE_591 String)) Int 0)\r\n(define-fun _type/-2056846942 ((BOUND_VARIABLE_594 var3570)) var2079 (as @var2079_0 var2079))\r\n(define-fun null-var3570 () var3570 (as @var3570_0 var3570))\r\n(define-fun null-var2247 () var2247 (as @var2247_0 var2247))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var2079 () var2079 (as @var2079_0 var2079))\r\n(define-fun var1322 () var3570 (as @var3570_1 var3570))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36085760,
            "run_time": 0.04523754119873047,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 47 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 48 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164458496,
            "run_time": 0.7250819206237793,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1322 () var3570 var3570!8)\r\n  (define-fun null-var2079 () var2079 var2079!6)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2247 () var2247 var2247!4)\r\n  (define-fun null-var3570 () var3570 var3570!2)\r\n  (define-fun var2079!6 () var2079 (_type/-2056846942 var3570!8))\r\n  (define-fun var2247!4 () var2247 (_default/-2056846942 var3570!8))\r\n  (define-fun _name/-2056846942 ((x!0 var3570)) String (ite (= x!0 var3570!8) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int hashCode()>"
        ],
        "api_count": {
            "<java.lang.String: int hashCode()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.OptionInfo",
            "$r1 = r0.<org.javacc.utils.OptionInfo: java.lang.Object _default>",
            "if $r1 != null goto $r2 = r0.<org.javacc.utils.OptionInfo: java.lang.Object _default>",
            "$i5 = 0",
            "goto [?= $i4 = 31 + $i5]",
            "$i4 = 31 + $i5",
            "$i0 = 31 * $i4",
            "$r3 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "if $r3 != null goto $r4 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "$r4 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "$i6 = virtualinvoke $r4.<java.lang.String: int hashCode()>()",
            "$i3 = $i0 + $i6",
            "$i1 = 31 * $i3",
            "$r5 = r0.<org.javacc.utils.OptionInfo: org.javacc.utils.OptionType _type>",
            "if $r5 != null goto $r6 = r0.<org.javacc.utils.OptionInfo: org.javacc.utils.OptionType _type>",
            "$i7 = 0",
            "goto [?= $i2 = $i1 + $i7]",
            "$i2 = $i1 + $i7",
            "return $i2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OptionInfo__hashCode__708861861\\1708.smt2",
        "z3": {
            "memory": 32317440,
            "run_time": 0.060489654541015625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3851:\r\n  ;;   var3851!val!1 var3851!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3851!val!1 () var3851)\r\n  (declare-fun var3851!val!0 () var3851)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3851)) (or (= x var3851!val!1) (= x var3851!val!0)))\r\n  ;; -----------\r\n  ;; universe for var388:\r\n  ;;   var388!val!0 var388!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var388!val!0 () var388)\r\n  (declare-fun var388!val!1 () var388)\r\n  ;; cardinality constraint:\r\n  (forall ((x var388)) (or (= x var388!val!0) (= x var388!val!1)))\r\n  ;; -----------\r\n  (define-fun var2501 () var3851\r\n    (_type/-2056846942 var2412))\r\n  (define-fun var2412 () var388\r\n    var388!val!0)\r\n  (define-fun var711 () Int\r\n    (+ (* 31 (+ 31 0)) (hashCode/-467973558 (_name/-2056846942 var2412))))\r\n  (define-fun var3434 () Int\r\n    (hashCode/385986394 (cast-from-var3851-to-var2169 (_type/-2056846942 var2412))))\r\n  (define-fun var2289 () Int\r\n    (let ((a!1 (* 31\r\n              (+ (* 31 (+ 31 0))\r\n                 (hashCode/-467973558 (_name/-2056846942 var2412))))))\r\n  (+ a!1\r\n     (hashCode/385986394\r\n       (cast-from-var3851-to-var2169 (_type/-2056846942 var2412))))))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2988 () Int\r\n    (* 31 (+ (* 31 (+ 31 0)) (hashCode/-467973558 (_name/-2056846942 var2412)))))\r\n  (define-fun var1468 () Int\r\n    (+ 31 0))\r\n  (define-fun null-var388 () var388\r\n    var388!val!1)\r\n  (define-fun var2418 () Int\r\n    0)\r\n  (define-fun var1289 () String\r\n    (_name/-2056846942 var2412))\r\n  (define-fun var316 () var3950\r\n    (_default/-2056846942 var2412))\r\n  (define-fun var2735 () Int\r\n    (hashCode/-467973558 (_name/-2056846942 var2412)))\r\n  (define-fun var3346 () String\r\n    (_name/-2056846942 var2412))\r\n  (define-fun var2637 () Int\r\n    (* 31 (+ 31 0)))\r\n  (define-fun var2342 () var3851\r\n    (_type/-2056846942 var2412))\r\n  (define-fun null-var3851 () var3851\r\n    var3851!val!1)\r\n  (define-fun null-var3950 () var3950\r\n    var3950!val!0)\r\n  (define-fun _name/-2056846942 ((x!0 var388)) String\r\n    \"!0!\")\r\n  (define-fun _type/-2056846942 ((x!0 var388)) var3851\r\n    var3851!val!0)\r\n  (define-fun _default/-2056846942 ((x!0 var388)) var3950\r\n    var3950!val!0)\r\n  (define-fun cast-from-var3851-to-var2169 ((x!0 var3851)) var2169\r\n    var2169!val!0)\r\n  (define-fun hashCode/-467973558 ((x!0 String)) Int\r\n    0)\r\n  (define-fun hashCode/385986394 ((x!0 var2169)) Int\r\n    0)\r\n)\r\n(error \"line 52 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11317248,
            "run_time": 0.015056371688842773,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var388 is 2\r\n; rep: (as @var388_0 var388)\r\n; rep: (as @var388_1 var388)\r\n; cardinality of var3950 is 1\r\n; rep: (as @var3950_0 var3950)\r\n; cardinality of var2855 is 1\r\n; rep: (as @var2855_0 var2855)\r\n; cardinality of var3851 is 2\r\n; rep: (as @var3851_0 var3851)\r\n; rep: (as @var3851_1 var3851)\r\n; cardinality of var2169 is 1\r\n; rep: (as @var2169_0 var2169)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun _default/-2056846942 ((BOUND_VARIABLE_607 var388)) var3950 (as @var3950_0 var3950))\r\n(define-fun _name/-2056846942 ((_arg_1 var388)) String \"\")\r\n(define-fun hashCode/-467973558 ((BOUND_VARIABLE_610 String)) Int 0)\r\n(define-fun _type/-2056846942 ((_arg_1 var388)) var3851 (as @var3851_1 var3851))\r\n(define-fun hashCode/385986394 ((BOUND_VARIABLE_613 var2169)) Int 0)\r\n(define-fun cast-from-var3851-to-var2169 ((BOUND_VARIABLE_616 var3851)) var2169 (as @var2169_0 var2169))\r\n(define-fun null-var388 () var388 (as @var388_0 var388))\r\n(define-fun null-var3950 () var3950 (as @var3950_0 var3950))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3851 () var3851 (as @var3851_0 var3851))\r\n(define-fun var2412 () var388 (as @var388_1 var388))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36937728,
            "run_time": 0.0461275577545166,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 51 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 52 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165044224,
            "run_time": 0.7313418388366699,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2412 () var388 var388!8)\r\n  (define-fun null-var3851 () var3851 var3851!6)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3950 () var3950 var3950!4)\r\n  (define-fun null-var388 () var388 var388!2)\r\n  (define-fun var3851!28 () var3851 (_type/-2056846942 var388!8))\r\n  (define-fun var3950!4 () var3950 (_default/-2056846942 var388!8))\r\n  (define-fun _name/-2056846942 ((x!0 var388)) String (ite (= x!0 var388!8) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: int hashCode()>"
        ],
        "api_count": {
            "<java.lang.String: int hashCode()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.OptionInfo",
            "$r1 = r0.<org.javacc.utils.OptionInfo: java.lang.Object _default>",
            "if $r1 != null goto $r2 = r0.<org.javacc.utils.OptionInfo: java.lang.Object _default>",
            "$i5 = 0",
            "goto [?= $i4 = 31 + $i5]",
            "$i4 = 31 + $i5",
            "$i0 = 31 * $i4",
            "$r3 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "if $r3 != null goto $r4 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "$r4 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "$i6 = virtualinvoke $r4.<java.lang.String: int hashCode()>()",
            "$i3 = $i0 + $i6",
            "$i1 = 31 * $i3",
            "$r5 = r0.<org.javacc.utils.OptionInfo: org.javacc.utils.OptionType _type>",
            "if $r5 != null goto $r6 = r0.<org.javacc.utils.OptionInfo: org.javacc.utils.OptionType _type>",
            "$r6 = r0.<org.javacc.utils.OptionInfo: org.javacc.utils.OptionType _type>",
            "$i7 = virtualinvoke $r6.<org.javacc.utils.OptionType: int hashCode()>()",
            "$i2 = $i1 + $i7",
            "return $i2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.ConditionParser__test__-183973539\\1580.smt2",
        "z3": {
            "memory": 32829440,
            "run_time": 0.05893135070800781,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2939 () var1776\r\n    var1776-TRUE)\r\n  (define-fun var2897 () var2528\r\n    var2849-out)\r\n  (define-fun var3619 () Bool\r\n    (CompilationUnit/1027580571 var952!1 (cast-from-var1229-to-var1926 var3546!3)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1094 () String\r\n    (str.++ var2222!1 var1169!1))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1800!1 () String\r\n    \" = \")\r\n  (define-fun var3546 () var1229\r\n    var1229-init)\r\n  (define-fun var952 () var722\r\n    var722-init)\r\n  (define-fun var3692 () String\r\n    (append/-388390247\r\n  (str.++ var2222!1 var1169!1 \" = \")\r\n  (CompilationUnit/1027580571 var952!1 (cast-from-var1229-to-var1926 var3546!3))))\r\n  (define-fun var1169 () String\r\n    \"\")\r\n  (define-fun var1169!1 () String\r\n    \"\")\r\n  (define-fun var3551 () String\r\n    (append/-388390247\r\n  (str.++ var2222!1 var1169!1 \" = \")\r\n  (CompilationUnit/1027580571 var952!1 (cast-from-var1229-to-var1926 var3546!3))))\r\n  (define-fun var1800 () String\r\n    (str.++ var2222!1 var1169!1 \" = \"))\r\n  (define-fun var1497 () var1776\r\n    var1776-FALSE)\r\n  (define-fun null-Bool () Bool\r\n    true)\r\n  (define-fun var621 () var3095\r\n    var3095-init)\r\n  (define-fun var2222 () String\r\n    String-init)\r\n  (define-fun var952!1 () var722\r\n    var722!val!0)\r\n  (define-fun var3546!3 () var1229\r\n    var1229!val!0)\r\n  (define-fun var2090 () Bool\r\n    false)\r\n  (define-fun var2222!2 () String\r\n    \"\")\r\n  (define-fun var1094!1 () String\r\n    \" = \")\r\n  (define-fun var2222!1 () String\r\n    \"\")\r\n  (define-fun var1229-init () var1229\r\n    var1229!val!0)\r\n  (define-fun var3546!1 () var1229\r\n    var1229!val!0)\r\n  (define-fun var2849-out () var2528\r\n    var2528!val!0)\r\n  (define-fun var3095-init () var3095\r\n    var3095!val!0)\r\n  (define-fun var722-init () var722\r\n    var722!val!0)\r\n  (define-fun var1567 () String\r\n    \"\")\r\n  (define-fun var2939!1 () var1776\r\n    var1776!val!0)\r\n  (define-fun var1776-FALSE () var1776\r\n    var1776!val!0)\r\n  (define-fun var621!1 () var3095\r\n    var3095!val!0)\r\n  (define-fun var2897!1 () var2528\r\n    var2528!val!0)\r\n  (define-fun var1776-TRUE () var1776\r\n    var1776!val!0)\r\n  (define-fun var3551!1 () String\r\n    \"\")\r\n  (define-fun var3546!2 () var1229\r\n    var1229!val!0)\r\n  (define-fun var319 () String\r\n    \"\")\r\n  (define-fun var621!2 () var3095\r\n    var3095!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1497!1 () var1776\r\n    var1776!val!0)\r\n  (define-fun cast-from-var1229-to-var1926 ((x!0 var1229)) var1926\r\n    var1926!val!0)\r\n  (define-fun CompilationUnit/1027580571 ((x!0 var722) (x!1 var1926)) Bool\r\n    false)\r\n  (define-fun println/1773605060 ((x!0 var2528) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var1776-to-var2740 ((x!0 var1776)) var2740\r\n    var2740!val!0)\r\n  (define-fun cast-from-var3095-to-var2329 ((x!0 var3095)) var2329\r\n    var2329!val!0)\r\n  (define-fun <init>/-201242697 ((x!0 var1229)) void\r\n    void!val!0)\r\n  (define-fun append/-388390247 ((x!0 String) (x!1 Bool)) String\r\n    \"\")\r\n  (define-fun var1926_put/1464166817 ((x!0 var1926) (x!1 var2740) (x!2 var2740)) var2740\r\n    var2740!val!0)\r\n  (define-fun <init>/814598262 ((x!0 var3095) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun cast-from-String-to-var2740 ((x!0 String)) var2740\r\n    var2740!val!0)\r\n  (define-fun <init>/702780027 ((x!0 var722) (x!1 var2329)) void\r\n    void!val!0)\r\n)\r\n(error \"line 105 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11333632,
            "run_time": 0.04621243476867676,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1171 is 1\r\n; rep: (as @var1171_0 var1171)\r\n; cardinality of var722 is 1\r\n; rep: (as @var722_0 var722)\r\n; cardinality of var3095 is 1\r\n; rep: (as @var3095_0 var3095)\r\n; cardinality of var2329 is 1\r\n; rep: (as @var2329_0 var2329)\r\n; cardinality of var1229 is 1\r\n; rep: (as @var1229_0 var1229)\r\n; cardinality of var1776 is 1\r\n; rep: (as @var1776_0 var1776)\r\n; cardinality of var1926 is 1\r\n; rep: (as @var1926_0 var1926)\r\n; cardinality of var2740 is 1\r\n; rep: (as @var2740_0 var2740)\r\n; cardinality of var2528 is 1\r\n; rep: (as @var2528_0 var2528)\r\n; cardinality of var2849 is 1\r\n; rep: (as @var2849_0 var2849)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var722-init () var722 (as @var722_0 var722))\r\n(define-fun var3095-init () var3095 (as @var3095_0 var3095))\r\n(define-fun <init>/814598262 ((BOUND_VARIABLE_1219 var3095) (BOUND_VARIABLE_1220 String)) void (as @void_0 void))\r\n(define-fun <init>/702780027 ((BOUND_VARIABLE_1223 var722) (BOUND_VARIABLE_1224 var2329)) void (as @void_0 void))\r\n(define-fun cast-from-var3095-to-var2329 ((BOUND_VARIABLE_1227 var3095)) var2329 (as @var2329_0 var2329))\r\n(define-fun var1229-init () var1229 (as @var1229_0 var1229))\r\n(define-fun <init>/-201242697 ((BOUND_VARIABLE_1230 var1229)) void (as @void_0 void))\r\n(define-fun var1926_put/1464166817 ((BOUND_VARIABLE_1233 var1926) (BOUND_VARIABLE_1234 var2740) (BOUND_VARIABLE_1235 var2740)) var2740 (as @var2740_0 var2740))\r\n(define-fun cast-from-var1229-to-var1926 ((BOUND_VARIABLE_1238 var1229)) var1926 (as @var1926_0 var1926))\r\n(define-fun cast-from-String-to-var2740 ((BOUND_VARIABLE_1241 String)) var2740 (as @var2740_0 var2740))\r\n(define-fun cast-from-var1776-to-var2740 ((BOUND_VARIABLE_1244 var1776)) var2740 (as @var2740_0 var2740))\r\n(define-fun CompilationUnit/1027580571 ((BOUND_VARIABLE_1247 var722) (BOUND_VARIABLE_1248 var1926)) Bool false)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-388390247 ((BOUND_VARIABLE_1251 String) (BOUND_VARIABLE_1252 Bool)) String \"\")\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_1255 var2528) (BOUND_VARIABLE_1256 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var1776-FALSE () var1776 (as @var1776_0 var1776))\r\n(define-fun var1776-TRUE () var1776 (as @var1776_0 var1776))\r\n(define-fun var2849-out () var2528 (as @var2528_0 var2528))\r\n(define-fun var1169 () String \"\")\r\n(define-fun var2090 () Bool false)\r\n(define-fun var621!1 () var3095 (as @var3095_0 var3095))\r\n(define-fun var1169!1 () String \"\")\r\n(define-fun var952!1 () var722 (as @var722_0 var722))\r\n(define-fun var621!2 () var3095 (as @var3095_0 var3095))\r\n(define-fun var3546!1 () var1229 (as @var1229_0 var1229))\r\n(define-fun var3546!2 () var1229 (as @var1229_0 var1229))\r\n(define-fun var319 () String \"\")\r\n(define-fun var1497!1 () var1776 (as @var1776_0 var1776))\r\n(define-fun var3546!3 () var1229 (as @var1229_0 var1229))\r\n(define-fun var1567 () String \"\")\r\n(define-fun var2939!1 () var1776 (as @var1776_0 var1776))\r\n(define-fun var2222!1 () String \"\")\r\n(define-fun var2222!2 () String \"\")\r\n(define-fun var1094!1 () String \" = \")\r\n(define-fun var1800!1 () String \" = \")\r\n(define-fun var2897!1 () var2528 (as @var2528_0 var2528))\r\n(define-fun var3551!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38662144,
            "run_time": 0.061676025390625,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 104 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 105 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 193183744,
            "run_time": 0.963355541229248,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.utils.ConditionParser__test__-183973539\\1580.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1094!1 =\r\n     concat(var1169!1, \" = \")\r\n   var1800!1 =\r\n     concat(all_38_3, rhs)\r\n   all_38_3 =\r\n     concat(var1169!1, \" = \")\r\n   ... sat\r\n\r\n688ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 15,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.String",
            "z1 := @parameter1: boolean",
            "$r0 = new org.javacc.utils.ConditionParser",
            "$r1 = new java.io.StringReader",
            "specialinvoke $r1.<java.io.StringReader: void <init>(java.lang.String)>(r2)",
            "specialinvoke $r0.<org.javacc.utils.ConditionParser: void <init>(java.io.Reader)>($r1)",
            "$r3 = new java.util.HashMap",
            "specialinvoke $r3.<java.util.HashMap: void <init>()>()",
            "$r4 = <java.lang.Boolean: java.lang.Boolean FALSE>",
            "interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"F\", $r4)",
            "$r5 = <java.lang.Boolean: java.lang.Boolean TRUE>",
            "interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"T\", $r5)",
            "z0 = virtualinvoke $r0.<org.javacc.utils.ConditionParser: boolean CompilationUnit(java.util.Map)>($r3)",
            "$r7 = <java.lang.System: java.io.PrintStream out>",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = \")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(z0)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r7.<java.io.PrintStream: void println(java.lang.String)>($r11)",
            "if z0 == z1 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OptionInfo__hashCode__708861861\\1717.smt2",
        "z3": {
            "memory": 32641024,
            "run_time": 0.04492497444152832,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1736:\r\n  ;;   var1736!val!0 var1736!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1736!val!0 () var1736)\r\n  (declare-fun var1736!val!1 () var1736)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1736)) (or (= x var1736!val!0) (= x var1736!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3071:\r\n  ;;   var3071!val!1 var3071!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3071!val!1 () var3071)\r\n  (declare-fun var3071!val!0 () var3071)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3071)) (or (= x var3071!val!1) (= x var3071!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var1736 () var1736\r\n    var1736!val!1)\r\n  (define-fun var309 () var3071\r\n    (_default/-2056846942 var3432))\r\n  (define-fun var3379 () Int\r\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var3432))))))\r\n  (+ a!1 0)))\r\n  (define-fun var736 () Int\r\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var3432))))))\r\n  (* 31 (+ a!1 0))))\r\n  (define-fun var1818 () Int\r\n    (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var3432)))))\r\n  (define-fun var3282 () Int\r\n    (+ 31 (hashCode/1739917532 (_default/-2056846942 var3432))))\r\n  (define-fun var469 () Int\r\n    0)\r\n  (define-fun var3432 () var1736\r\n    var1736!val!0)\r\n  (define-fun var3073 () Int\r\n    0)\r\n  (define-fun var1531 () String\r\n    (_name/-2056846942 var3432))\r\n  (define-fun var708 () Int\r\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var3432))))))\r\n  (+ (* 31 (+ a!1 0)) 0)))\r\n  (define-fun var130 () var3052\r\n    (_type/-2056846942 var3432))\r\n  (define-fun var3295 () Int\r\n    (hashCode/1739917532 (_default/-2056846942 var3432)))\r\n  (define-fun var322 () var3071\r\n    (_default/-2056846942 var3432))\r\n  (define-fun null-var3071 () var3071\r\n    var3071!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun null-var3052 () var3052\r\n    var3052!val!0)\r\n  (define-fun _default/-2056846942 ((x!0 var1736)) var3071\r\n    var3071!val!0)\r\n  (define-fun _name/-2056846942 ((x!0 var1736)) String\r\n    \"\")\r\n  (define-fun _type/-2056846942 ((x!0 var1736)) var3052\r\n    var3052!val!0)\r\n  (define-fun hashCode/1739917532 ((x!0 var3071)) Int\r\n    0)\r\n)\r\n(error \"line 48 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11374592,
            "run_time": 0.015579462051391602,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1736 is 2\r\n; rep: (as @var1736_0 var1736)\r\n; rep: (as @var1736_1 var1736)\r\n; cardinality of var3071 is 2\r\n; rep: (as @var3071_0 var3071)\r\n; rep: (as @var3071_1 var3071)\r\n; cardinality of var2048 is 1\r\n; rep: (as @var2048_0 var2048)\r\n; cardinality of var3052 is 1\r\n; rep: (as @var3052_0 var3052)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun _default/-2056846942 ((_arg_1 var1736)) var3071 (as @var3071_1 var3071))\r\n(define-fun hashCode/1739917532 ((BOUND_VARIABLE_522 var3071)) Int 0)\r\n(define-fun _name/-2056846942 ((BOUND_VARIABLE_525 var1736)) String \"\")\r\n(define-fun _type/-2056846942 ((BOUND_VARIABLE_528 var1736)) var3052 (as @var3052_0 var3052))\r\n(define-fun null-var1736 () var1736 (as @var1736_0 var1736))\r\n(define-fun null-var3071 () var3071 (as @var3071_0 var3071))\r\n(define-fun null-String () String \"\")\r\n(define-fun null-var3052 () var3052 (as @var3052_0 var3052))\r\n(define-fun var3432 () var1736 (as @var1736_1 var1736))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36765696,
            "run_time": 0.04635453224182129,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1736:\n  ;;   var1736!val!0 var1736!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1736!val!0 () var1736)\n  (declare-fun var1736!val!1 () var1736)\n  ;; cardinality constraint:\n  (forall ((x var1736)) (or (= x var1736!val!0) (= x var1736!val!1)))\n  ;; -----------\n  ;; universe for var3071:\n  ;;   var3071!val!1 var3071!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3071!val!1 () var3071)\n  (declare-fun var3071!val!0 () var3071)\n  ;; cardinality constraint:\n  (forall ((x var3071)) (or (= x var3071!val!1) (= x var3071!val!0)))\n  ;; -----------\n  ;; universe for var3052:\n  ;;   var3052!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3052!val!0 () var3052)\n  ;; cardinality constraint:\n  (forall ((x var3052)) (= x var3052!val!0))\n  ;; -----------\n  (define-fun var1818 () Int\n    (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var3432)))))\n  (define-fun var3282 () Int\n    (+ 31 (hashCode/1739917532 (_default/-2056846942 var3432))))\n  (define-fun var469 () Int\n    0)\n  (define-fun null-var1736 () var1736\n    var1736!val!1)\n  (define-fun var736 () Int\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var3432))))))\n  (* 31 (+ a!1 0))))\n  (define-fun var3073 () Int\n    0)\n  (define-fun var708 () Int\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var3432))))))\n  (+ (* 31 (+ a!1 0)) 0)))\n  (define-fun var130 () var3052\n    (_type/-2056846942 var3432))\n  (define-fun var3295 () Int\n    (hashCode/1739917532 (_default/-2056846942 var3432)))\n  (define-fun var322 () var3071\n    (_default/-2056846942 var3432))\n  (define-fun var3432 () var1736\n    var1736!val!0)\n  (define-fun var1531 () String\n    (_name/-2056846942 var3432))\n  (define-fun var309 () var3071\n    (_default/-2056846942 var3432))\n  (define-fun var3379 () Int\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var3432))))))\n  (+ a!1 0)))\n  (define-fun null-var3071 () var3071\n    var3071!val!1)\n  (define-fun null-String () String\n    \"\")\n  (define-fun null-var3052 () var3052\n    var3052!val!0)\n  (define-fun _default/-2056846942 ((x!0 var1736)) var3071\n    var3071!val!0)\n  (define-fun _name/-2056846942 ((x!0 var1736)) String\n    \"\")\n  (define-fun _type/-2056846942 ((x!0 var1736)) var3052\n    var3052!val!0)\n  (define-fun hashCode/1739917532 ((x!0 var3071)) Int\n    0)\n)\n(error \"line 48 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164753408,
            "run_time": 0.7320675849914551,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3432 () var1736 var1736!10)\r\n  (define-fun null-var3052 () var3052 var3052!8)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var3071 () var3071 var3071!4)\r\n  (define-fun null-var1736 () var1736 var1736!2)\r\n  (define-fun var3052!8 () var3052 (_type/-2056846942 var1736!10))\r\n  (define-fun var3071!26 () var3071 (_default/-2056846942 var1736!10))\r\n  (define-fun _name/-2056846942 ((x!0 var1736)) String (ite (= x!0 var1736!10) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 8,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.OptionInfo",
            "$r1 = r0.<org.javacc.utils.OptionInfo: java.lang.Object _default>",
            "if $r1 != null goto $r2 = r0.<org.javacc.utils.OptionInfo: java.lang.Object _default>",
            "$r2 = r0.<org.javacc.utils.OptionInfo: java.lang.Object _default>",
            "$i5 = virtualinvoke $r2.<java.lang.Object: int hashCode()>()",
            "$i4 = 31 + $i5",
            "$i0 = 31 * $i4",
            "$r3 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "if $r3 != null goto $r4 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "$i6 = 0",
            "goto [?= $i3 = $i0 + $i6]",
            "$i3 = $i0 + $i6",
            "$i1 = 31 * $i3",
            "$r5 = r0.<org.javacc.utils.OptionInfo: org.javacc.utils.OptionType _type>",
            "if $r5 != null goto $r6 = r0.<org.javacc.utils.OptionInfo: org.javacc.utils.OptionType _type>",
            "$i7 = 0",
            "goto [?= $i2 = $i1 + $i7]",
            "$i2 = $i1 + $i7",
            "return $i2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.JavaCharStream__GetImage__261265150\\2197.smt2",
        "z3": {
            "memory": 31784960,
            "run_time": 0.05892062187194824,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1518:\r\n  ;;   var1518!val!0 var1518!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1518!val!0 () var1518)\r\n  (declare-fun var1518!val!1 () var1518)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1518)) (or (= x var1518!val!0) (= x var1518!val!1)))\r\n  ;; -----------\r\n  (define-fun var552 () var1518\r\n    var1518!val!0)\r\n  (define-fun null-var1518 () var1518\r\n    var1518!val!1)\r\n  (define-fun var794 () Int\r\n    (tokenBegin/-1867541097 var552))\r\n  (define-fun var130 () Int\r\n    (- (bufpos/-1867541097 var552) (tokenBegin/-1867541097 var552)))\r\n  (define-fun var589 () Int\r\n    (tokenBegin/-1867541097 var552))\r\n  (define-fun var1444 () Int\r\n    (bufpos/-1867541097 var552))\r\n  (define-fun var804 () Int\r\n    (tokenBegin/-1867541097 var552))\r\n  (define-fun var1817 () (Array Int Int)\r\n    (buffer/-1867541097 var552))\r\n  (define-fun var3830 () String\r\n    String-init)\r\n  (define-fun var2889 () Int\r\n    (bufpos/-1867541097 var552))\r\n  (define-fun var701 () Int\r\n    (+ (- (bufpos/-1867541097 var552) (tokenBegin/-1867541097 var552)) 1))\r\n  (define-fun var3830!1 () String\r\n    \"\")\r\n  (define-fun var701!1 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var804!1 () Int\r\n    0)\r\n  (define-fun var1817!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun bufpos/-1867541097 ((x!0 var1518)) Int\r\n    0)\r\n  (define-fun tokenBegin/-1867541097 ((x!0 var1518)) Int\r\n    0)\r\n  (define-fun buffer/-1867541097 ((x!0 var1518)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.015618085861206055,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1518 is 2\r\n; rep: (as @var1518_0 var1518)\r\n; rep: (as @var1518_1 var1518)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun bufpos/-1867541097 ((_arg_1 var1518)) Int 0)\r\n(define-fun tokenBegin/-1867541097 ((_arg_1 var1518)) Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun buffer/-1867541097 ((BOUND_VARIABLE_486 var1518)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_491 String) (BOUND_VARIABLE_492 (Array Int Int)) (BOUND_VARIABLE_493 Int) (BOUND_VARIABLE_494 Int)) void (as @void_0 void))\r\n(define-fun null-var1518 () var1518 (as @var1518_0 var1518))\r\n(define-fun var552 () var1518 (as @var1518_1 var1518))\r\n(define-fun var3830!1 () String \"\")\r\n(define-fun var1817!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var804!1 () Int 0)\r\n(define-fun var701!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37019648,
            "run_time": 0.04761219024658203,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1518:\n  ;;   var1518!val!0 var1518!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1518!val!0 () var1518)\n  (declare-fun var1518!val!1 () var1518)\n  ;; cardinality constraint:\n  (forall ((x var1518)) (or (= x var1518!val!0) (= x var1518!val!1)))\n  ;; -----------\n  (define-fun var552 () var1518\n    var1518!val!0)\n  (define-fun null-var1518 () var1518\n    var1518!val!1)\n  (define-fun var2889 () Int\n    (bufpos/-1867541097 var552))\n  (define-fun var804 () Int\n    (tokenBegin/-1867541097 var552))\n  (define-fun var1817 () (Array Int Int)\n    (buffer/-1867541097 var552))\n  (define-fun var794 () Int\n    (tokenBegin/-1867541097 var552))\n  (define-fun var130 () Int\n    (- (bufpos/-1867541097 var552) (tokenBegin/-1867541097 var552)))\n  (define-fun var3830 () String\n    String-init)\n  (define-fun var701 () Int\n    (+ (- (bufpos/-1867541097 var552) (tokenBegin/-1867541097 var552)) 1))\n  (define-fun var589 () Int\n    (tokenBegin/-1867541097 var552))\n  (define-fun var1444 () Int\n    (bufpos/-1867541097 var552))\n  (define-fun var3830!1 () String\n    \"\")\n  (define-fun var701!1 () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var804!1 () Int\n    0)\n  (define-fun var1817!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun bufpos/-1867541097 ((x!0 var1518)) Int\n    0)\n  (define-fun tokenBegin/-1867541097 ((x!0 var1518)) Int\n    0)\n  (define-fun buffer/-1867541097 ((x!0 var1518)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168329216,
            "run_time": 0.8377149105072021,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var552 () var1518 var1518!4)\r\n  (define-fun null-var1518 () var1518 var1518!2)\r\n  (define-fun tokenBegin/-1867541097 ((x!0 var1518)) Int (ite (= x!0 var1518!4) 7 0))\r\n  (define-fun bufpos/-1867541097 ((x!0 var1518)) Int (ite (= x!0 var1518!4) 7 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: void <init>(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.JavaCharStream",
            "$i1 = r0.<org.javacc.utils.JavaCharStream: int bufpos>",
            "$i0 = r0.<org.javacc.utils.JavaCharStream: int tokenBegin>",
            "if $i1 < $i0 goto $r1 = new java.lang.StringBuilder",
            "$r9 = new java.lang.String",
            "$r10 = r0.<org.javacc.utils.JavaCharStream: char[] buffer>",
            "$i12 = r0.<org.javacc.utils.JavaCharStream: int tokenBegin>",
            "$i9 = r0.<org.javacc.utils.JavaCharStream: int bufpos>",
            "$i8 = r0.<org.javacc.utils.JavaCharStream: int tokenBegin>",
            "$i10 = $i9 - $i8",
            "$i11 = $i10 + 1",
            "specialinvoke $r9.<java.lang.String: void <init>(char[],int,int)>($r10, $i12, $i11)",
            "return $r9"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__DumpNonAsciiMoveForCompositeState__1800165787\\2472.smt2",
        "z3": {
            "memory": 33009664,
            "run_time": 60.00783324241638,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 15126528,
            "run_time": 0.03079843521118164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var778 is 2\r\n; rep: (as @var778_0 var778)\r\n; rep: (as @var778_1 var778)\r\n; cardinality of var1375 is 2\r\n; rep: (as @var1375_0 var1375)\r\n; rep: (as @var1375_1 var1375)\r\n; cardinality of var974 is 1\r\n; rep: (as @var974_0 var974)\r\n; cardinality of var3599 is 1\r\n; rep: (as @var3599_0 var3599)\r\n; cardinality of var2244 is 2\r\n; rep: (as @var2244_0 var2244)\r\n; rep: (as @var2244_1 var2244)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun selfLoop/-2129610754 ((BOUND_VARIABLE_1417 var778)) Bool false)\r\n(define-fun var974_size/-959786421 ((_arg_1 var974)) Int 0)\r\n(define-fun var3599_getJavaUnicodeEscape/752328068 () Bool true)\r\n(define-fun arr-var2244-init () (Array Int var2244) ((as const (Array Int var2244)) (as @var2244_0 var2244)))\r\n(define-fun String-init () String \"\")\r\n(define-fun nonAsciiMethod/1847772117 ((_arg_1 var778)) Int (- 1))\r\n(define-fun cast-from-String-to-var2244 ((_arg_1 String)) var2244 (as @var2244_1 var2244))\r\n(define-fun genCodeLine/787715242 ((BOUND_VARIABLE_1421 var1375) (BOUND_VARIABLE_1422 (Array Int var2244))) void (as @void_0 void))\r\n(define-fun kindToPrint/1847772117 ((_arg_1 var778)) Int 2147483647)\r\n(define-fun next/1847772117 ((_arg_1 var778)) var778 (as @var778_1 var778))\r\n(define-fun null-var778 () var778 (as @var778_1 var778))\r\n(define-fun null-var1375 () var1375 (as @var1375_0 var1375))\r\n(define-fun var778-allStates () var974 (as @var974_0 var974))\r\n(define-fun null-__Array__Int__var2244__ () (Array Int var2244) (store ((as const (Array Int var2244)) (as @var2244_1 var2244)) 0 (as @var2244_0 var2244)))\r\n(define-fun var1511 () var778 (as @var778_0 var778))\r\n(define-fun var2826 () var1375 (as @var1375_1 var1375))\r\n(define-fun var1407!1 () String \"\")\r\n(define-fun var1407!2 () String \"                  if (jjCanMove_\")\r\n(define-fun var881!1 () String \"                  if (jjCanMove_\")\r\n(define-fun var3921!1 () String \"                  if (jjCanMove_(hiByte, i1, i2, l1, l2))\")\r\n(define-fun var611!1 () (Array Int var2244) (store ((as const (Array Int var2244)) (as @var2244_0 var2244)) 0 (as @var2244_1 var2244)))\r\n(define-fun var2826!1 () var1375 (as @var1375_0 var1375))\r\n(define-fun var611!2 () (Array Int var2244) ((as const (Array Int var2244)) (as @var2244_0 var2244)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38010880,
            "run_time": 0.09394216537475586,
            "is_sat": "",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 231997440,
            "run_time": 1.2760193347930908,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var611!1 () (Array Int var2244) (store ((as const (Array Int var2244)) var2244!4294967324) 0 var2244!4294967322))\r\n  (define-fun var3921!1 () String \"                  if (jjCanMove_(hiByte, i1, i2, l1, l2))\")\r\n  (define-fun var881!1 () String \"                  if (jjCanMove_\")\r\n  (define-fun var1407!2 () String \"                  if (jjCanMove_\")\r\n  (define-fun var1407!1 () String \"\")\r\n  (define-fun var2826 () var1375 var1375!4294967304)\r\n  (define-fun var1511 () var778 var778!4294967302)\r\n  (define-fun null-__Array__Int__var2244__ () (Array Int var2244) ((as const (Array Int var2244)) var2244!0))\r\n  (define-fun var778-allStates () var974 var974!4294967300)\r\n  (define-fun null-var1375 () var1375 var1375!4294967298)\r\n  (define-fun null-var778 () var778 var778!4294967296)\r\n  (define-fun var778!4294967296 () var778 (next/1847772117 var778!4294967302))\r\n  (define-fun var2244!4294967322 () var2244 (cast-from-String-to-var2244 \"                  if (jjCanMove_(hiByte, i1, i2, l1, l2))\"))\r\n  (define-fun var3599_getJavaUnicodeEscape/752328068 () Bool true)\r\n  (define-fun abbrev_117 ((x!0 Int)) String (ite (= x!0 0) \"                  if (jjCanMove_(hiByte, i1, i2, l1, l2))\" \"\"))\r\n  (define-fun abbrev_116 ((x!0 Int)) String (ite (= x!0 0) \"                  if (jjCanMove_\" \"\"))\r\n  (define-fun kindToPrint/1847772117 ((x!0 var778)) Int (ite (= x!0 var778!4294967302) 2147483647 0))\r\n  (define-fun nonAsciiMethod/1847772117 ((x!0 var778)) Int (ite (= x!0 var778!4294967302) (- 6) 0))\r\n  (define-fun var974_size/-959786421 ((x!0 var974)) Int (ite (= x!0 var974!4294967300) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 10,
        "assertion_count": 22,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.NfaState",
            "r2 := @parameter0: org.javacc.parser.CodeGenerator",
            "z4 = specialinvoke r0.<org.javacc.parser.NfaState: boolean selfLoop()>()",
            "i22 = 0",
            "$r1 = <org.javacc.parser.NfaState: java.util.List allStates>",
            "$i0 = interfaceinvoke $r1.<java.util.List: int size()>()",
            "if i22 >= $i0 goto $z0 = staticinvoke <org.javacc.parser.Options: boolean getJavaUnicodeEscape()>()",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean getJavaUnicodeEscape()>()",
            "if $z0 != 0 goto $r3 = newarray (java.lang.Object)[1]",
            "$r3 = newarray (java.lang.Object)[1]",
            "$r94 = new java.lang.StringBuilder",
            "specialinvoke $r94.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"                  if (jjCanMove_\")",
            "$i1 = r0.<org.javacc.parser.NfaState: int nonAsciiMethod>",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(hiByte, i1, i2, l1, l2))\")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3[0] = $r8",
            "virtualinvoke r2.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r3)",
            "$i23 = r0.<org.javacc.parser.NfaState: int kindToPrint>",
            "if $i23 == 2147483647 goto $r9 = r0.<org.javacc.parser.NfaState: org.javacc.parser.NfaState next>",
            "$r9 = r0.<org.javacc.parser.NfaState: org.javacc.parser.NfaState next>",
            "if $r9 == null goto $i25 = r0.<org.javacc.parser.NfaState: int kindToPrint>",
            "$i25 = r0.<org.javacc.parser.NfaState: int kindToPrint>",
            "if $i25 == 2147483647 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OptionInfo__hashCode__708861861\\1723.smt2",
        "z3": {
            "memory": 32583680,
            "run_time": 0.0599520206451416,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3618:\r\n  ;;   var3618!val!1 var3618!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3618!val!1 () var3618)\r\n  (declare-fun var3618!val!0 () var3618)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3618)) (or (= x var3618!val!1) (= x var3618!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2407:\r\n  ;;   var2407!val!1 var2407!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2407!val!1 () var2407)\r\n  (declare-fun var2407!val!0 () var2407)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2407)) (or (= x var2407!val!1) (= x var2407!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3778:\r\n  ;;   var3778!val!0 var3778!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3778!val!0 () var3778)\r\n  (declare-fun var3778!val!1 () var3778)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3778)) (or (= x var3778!val!0) (= x var3778!val!1)))\r\n  ;; -----------\r\n  (define-fun var3395 () var3778\r\n    (_default/-2056846942 var734))\r\n  (define-fun var41 () Int\r\n    (+ 31 (hashCode/1739917532 (_default/-2056846942 var734))))\r\n  (define-fun var2111 () Int\r\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var734))))))\r\n  (+ (* 31 (+ a!1 0))\r\n     (hashCode/385986394\r\n       (cast-from-var2407-to-var3589 (_type/-2056846942 var734))))))\r\n  (define-fun var886 () var2407\r\n    (_type/-2056846942 var734))\r\n  (define-fun var2514 () String\r\n    (_name/-2056846942 var734))\r\n  (define-fun var1645 () Int\r\n    (hashCode/1739917532 (_default/-2056846942 var734)))\r\n  (define-fun null-var2407 () var2407\r\n    var2407!val!1)\r\n  (define-fun var2974 () Int\r\n    0)\r\n  (define-fun var2777 () var2407\r\n    (_type/-2056846942 var734))\r\n  (define-fun var335 () var3778\r\n    (_default/-2056846942 var734))\r\n  (define-fun var1148 () Int\r\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var734))))))\r\n  (* 31 (+ a!1 0))))\r\n  (define-fun null-var3778 () var3778\r\n    var3778!val!1)\r\n  (define-fun var734 () var3618\r\n    var3618!val!0)\r\n  (define-fun var2459 () Int\r\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var734))))))\r\n  (+ a!1 0)))\r\n  (define-fun null-var3618 () var3618\r\n    var3618!val!1)\r\n  (define-fun var2550 () Int\r\n    (hashCode/385986394 (cast-from-var2407-to-var3589 (_type/-2056846942 var734))))\r\n  (define-fun var964 () Int\r\n    (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var734)))))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun _default/-2056846942 ((x!0 var3618)) var3778\r\n    var3778!val!0)\r\n  (define-fun _type/-2056846942 ((x!0 var3618)) var2407\r\n    var2407!val!0)\r\n  (define-fun _name/-2056846942 ((x!0 var3618)) String\r\n    \"\")\r\n  (define-fun hashCode/1739917532 ((x!0 var3778)) Int\r\n    0)\r\n  (define-fun hashCode/385986394 ((x!0 var3589)) Int\r\n    0)\r\n  (define-fun cast-from-var2407-to-var3589 ((x!0 var2407)) var3589\r\n    var3589!val!0)\r\n)\r\n(error \"line 52 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.014820098876953125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3618 is 2\r\n; rep: (as @var3618_0 var3618)\r\n; rep: (as @var3618_1 var3618)\r\n; cardinality of var3778 is 2\r\n; rep: (as @var3778_0 var3778)\r\n; rep: (as @var3778_1 var3778)\r\n; cardinality of var1566 is 1\r\n; rep: (as @var1566_0 var1566)\r\n; cardinality of var2407 is 2\r\n; rep: (as @var2407_0 var2407)\r\n; rep: (as @var2407_1 var2407)\r\n; cardinality of var3589 is 1\r\n; rep: (as @var3589_0 var3589)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun _default/-2056846942 ((_arg_1 var3618)) var3778 (as @var3778_1 var3778))\r\n(define-fun hashCode/1739917532 ((BOUND_VARIABLE_541 var3778)) Int 0)\r\n(define-fun _name/-2056846942 ((BOUND_VARIABLE_544 var3618)) String \"\")\r\n(define-fun _type/-2056846942 ((_arg_1 var3618)) var2407 (as @var2407_1 var2407))\r\n(define-fun hashCode/385986394 ((BOUND_VARIABLE_547 var3589)) Int 0)\r\n(define-fun cast-from-var2407-to-var3589 ((BOUND_VARIABLE_550 var2407)) var3589 (as @var3589_0 var3589))\r\n(define-fun null-var3618 () var3618 (as @var3618_0 var3618))\r\n(define-fun null-var3778 () var3778 (as @var3778_0 var3778))\r\n(define-fun null-String () String \"\")\r\n(define-fun null-var2407 () var2407 (as @var2407_0 var2407))\r\n(define-fun var734 () var3618 (as @var3618_1 var3618))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36765696,
            "run_time": 0.09093260765075684,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3618:\n  ;;   var3618!val!1 var3618!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3618!val!1 () var3618)\n  (declare-fun var3618!val!0 () var3618)\n  ;; cardinality constraint:\n  (forall ((x var3618)) (or (= x var3618!val!1) (= x var3618!val!0)))\n  ;; -----------\n  ;; universe for var2407:\n  ;;   var2407!val!1 var2407!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2407!val!1 () var2407)\n  (declare-fun var2407!val!0 () var2407)\n  ;; cardinality constraint:\n  (forall ((x var2407)) (or (= x var2407!val!1) (= x var2407!val!0)))\n  ;; -----------\n  ;; universe for var3778:\n  ;;   var3778!val!0 var3778!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3778!val!0 () var3778)\n  (declare-fun var3778!val!1 () var3778)\n  ;; cardinality constraint:\n  (forall ((x var3778)) (or (= x var3778!val!0) (= x var3778!val!1)))\n  ;; -----------\n  (define-fun var2974 () Int\n    0)\n  (define-fun var2514 () String\n    (_name/-2056846942 var734))\n  (define-fun var2777 () var2407\n    (_type/-2056846942 var734))\n  (define-fun var335 () var3778\n    (_default/-2056846942 var734))\n  (define-fun var1148 () Int\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var734))))))\n  (* 31 (+ a!1 0))))\n  (define-fun null-var2407 () var2407\n    var2407!val!1)\n  (define-fun var2459 () Int\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var734))))))\n  (+ a!1 0)))\n  (define-fun var2550 () Int\n    (hashCode/385986394 (cast-from-var2407-to-var3589 (_type/-2056846942 var734))))\n  (define-fun var964 () Int\n    (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var734)))))\n  (define-fun var3395 () var3778\n    (_default/-2056846942 var734))\n  (define-fun var41 () Int\n    (+ 31 (hashCode/1739917532 (_default/-2056846942 var734))))\n  (define-fun null-var3778 () var3778\n    var3778!val!1)\n  (define-fun var886 () var2407\n    (_type/-2056846942 var734))\n  (define-fun var734 () var3618\n    var3618!val!0)\n  (define-fun var2111 () Int\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var734))))))\n  (+ (* 31 (+ a!1 0))\n     (hashCode/385986394\n       (cast-from-var2407-to-var3589 (_type/-2056846942 var734))))))\n  (define-fun null-var3618 () var3618\n    var3618!val!1)\n  (define-fun var1645 () Int\n    (hashCode/1739917532 (_default/-2056846942 var734)))\n  (define-fun null-String () String\n    \"\")\n  (define-fun _default/-2056846942 ((x!0 var3618)) var3778\n    var3778!val!0)\n  (define-fun _type/-2056846942 ((x!0 var3618)) var2407\n    var2407!val!0)\n  (define-fun _name/-2056846942 ((x!0 var3618)) String\n    \"\")\n  (define-fun hashCode/1739917532 ((x!0 var3778)) Int\n    0)\n  (define-fun hashCode/385986394 ((x!0 var3589)) Int\n    0)\n  (define-fun cast-from-var2407-to-var3589 ((x!0 var2407)) var3589\n    var3589!val!0)\n)\n(error \"line 52 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165785600,
            "run_time": 0.8054211139678955,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var734 () var3618 var3618!10)\r\n  (define-fun null-var2407 () var2407 var2407!8)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var3778 () var3778 var3778!4)\r\n  (define-fun null-var3618 () var3618 var3618!2)\r\n  (define-fun var2407!28 () var2407 (_type/-2056846942 var3618!10))\r\n  (define-fun var3778!30 () var3778 (_default/-2056846942 var3618!10))\r\n  (define-fun _name/-2056846942 ((x!0 var3618)) String (ite (= x!0 var3618!10) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 9,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.OptionInfo",
            "$r1 = r0.<org.javacc.utils.OptionInfo: java.lang.Object _default>",
            "if $r1 != null goto $r2 = r0.<org.javacc.utils.OptionInfo: java.lang.Object _default>",
            "$r2 = r0.<org.javacc.utils.OptionInfo: java.lang.Object _default>",
            "$i5 = virtualinvoke $r2.<java.lang.Object: int hashCode()>()",
            "$i4 = 31 + $i5",
            "$i0 = 31 * $i4",
            "$r3 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "if $r3 != null goto $r4 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "$i6 = 0",
            "goto [?= $i3 = $i0 + $i6]",
            "$i3 = $i0 + $i6",
            "$i1 = 31 * $i3",
            "$r5 = r0.<org.javacc.utils.OptionInfo: org.javacc.utils.OptionType _type>",
            "if $r5 != null goto $r6 = r0.<org.javacc.utils.OptionInfo: org.javacc.utils.OptionType _type>",
            "$r6 = r0.<org.javacc.utils.OptionInfo: org.javacc.utils.OptionType _type>",
            "$i7 = virtualinvoke $r6.<org.javacc.utils.OptionType: int hashCode()>()",
            "$i2 = $i1 + $i7",
            "return $i2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.JavaCharStream__GetImage__261265150\\2206.smt2",
        "z3": {
            "memory": 31805440,
            "run_time": 0.07565593719482422,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3038:\r\n  ;;   var3038!val!0 var3038!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3038!val!0 () var3038)\r\n  (declare-fun var3038!val!1 () var3038)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3038)) (or (= x var3038!val!0) (= x var3038!val!1)))\r\n  ;; -----------\r\n  (define-fun var2808 () String\r\n    String-init)\r\n  (define-fun var1760 () String\r\n    String-init)\r\n  (define-fun var3538 () var3038\r\n    var3038!val!0)\r\n  (define-fun var1768 () Int\r\n    (tokenBegin/-1867541097 var3538))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1846 () String\r\n    (str.++ var1760!1 var855!1 var2808!1))\r\n  (define-fun null-var3038 () var3038\r\n    var3038!val!1)\r\n  (define-fun var3096 () Int\r\n    (tokenBegin/-1867541097 var3538))\r\n  (define-fun var2606 () (Array Int Int)\r\n    (buffer/-1867541097 var3538))\r\n  (define-fun var3329 () Int\r\n    (bufpos/-1867541097 var3538))\r\n  (define-fun var855 () String\r\n    String-init)\r\n  (define-fun var3899 () Int\r\n    (tokenBegin/-1867541097 var3538))\r\n  (define-fun var3641 () (Array Int Int)\r\n    (buffer/-1867541097 var3538))\r\n  (define-fun var1708 () Int\r\n    (+ (bufpos/-1867541097 var3538) 1))\r\n  (define-fun var3562 () Int\r\n    (- (bufsize/-1867541097 var3538) (tokenBegin/-1867541097 var3538)))\r\n  (define-fun var2378 () String\r\n    (str.++ var1760!1 var855!1))\r\n  (define-fun var964 () String\r\n    (str.++ var1760!1 var855!1 var2808!1))\r\n  (define-fun var205 () Int\r\n    (bufsize/-1867541097 var3538))\r\n  (define-fun var3666 () Int\r\n    (bufpos/-1867541097 var3538))\r\n  (define-fun var855!1 () String\r\n    \"\")\r\n  (define-fun var1760!2 () String\r\n    \"\")\r\n  (define-fun var1760!1 () String\r\n    \"\")\r\n  (define-fun var2808!1 () String\r\n    \"\")\r\n  (define-fun var2378!1 () String\r\n    \"\")\r\n  (define-fun var3562!1 () Int\r\n    0)\r\n  (define-fun var2951 () Int\r\n    0)\r\n  (define-fun var1708!1 () Int\r\n    0)\r\n  (define-fun var2606!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var1768!1 () Int\r\n    0)\r\n  (define-fun var3641!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun tokenBegin/-1867541097 ((x!0 var3038)) Int\r\n    1)\r\n  (define-fun bufpos/-1867541097 ((x!0 var3038)) Int\r\n    0)\r\n  (define-fun bufsize/-1867541097 ((x!0 var3038)) Int\r\n    0)\r\n  (define-fun buffer/-1867541097 ((x!0 var3038)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 66 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.01491856575012207,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3038 is 2\r\n; rep: (as @var3038_0 var3038)\r\n; rep: (as @var3038_1 var3038)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun bufpos/-1867541097 ((_arg_1 var3038)) Int (- 1))\r\n(define-fun tokenBegin/-1867541097 ((_arg_1 var3038)) Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun buffer/-1867541097 ((BOUND_VARIABLE_592 var3038)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun bufsize/-1867541097 ((BOUND_VARIABLE_597 var3038)) Int 0)\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_600 String) (BOUND_VARIABLE_601 (Array Int Int)) (BOUND_VARIABLE_602 Int) (BOUND_VARIABLE_603 Int)) void (as @void_0 void))\r\n(define-fun null-var3038 () var3038 (as @var3038_0 var3038))\r\n(define-fun var3538 () var3038 (as @var3038_1 var3038))\r\n(define-fun var1760!1 () String \"\")\r\n(define-fun var855!1 () String \"\")\r\n(define-fun var3641!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1768!1 () Int 0)\r\n(define-fun var3562!1 () Int 0)\r\n(define-fun var1760!2 () String \"\")\r\n(define-fun var2808!1 () String \"\")\r\n(define-fun var2606!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2951 () Int 0)\r\n(define-fun var1708!1 () Int 0)\r\n(define-fun var2378!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37466112,
            "run_time": 0.07823967933654785,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3038:\n  ;;   var3038!val!0 var3038!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3038!val!0 () var3038)\n  (declare-fun var3038!val!1 () var3038)\n  ;; cardinality constraint:\n  (forall ((x var3038)) (or (= x var3038!val!0) (= x var3038!val!1)))\n  ;; -----------\n  (define-fun var3096 () Int\n    (tokenBegin/-1867541097 var3538))\n  (define-fun var3329 () Int\n    (bufpos/-1867541097 var3538))\n  (define-fun var3538 () var3038\n    var3038!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1846 () String\n    (str.++ var1760!1 var855!1 var2808!1))\n  (define-fun var3899 () Int\n    (tokenBegin/-1867541097 var3538))\n  (define-fun var3562 () Int\n    (- (bufsize/-1867541097 var3538) (tokenBegin/-1867541097 var3538)))\n  (define-fun null-var3038 () var3038\n    var3038!val!1)\n  (define-fun var855 () String\n    String-init)\n  (define-fun var205 () Int\n    (bufsize/-1867541097 var3538))\n  (define-fun var3666 () Int\n    (bufpos/-1867541097 var3538))\n  (define-fun var2606 () (Array Int Int)\n    (buffer/-1867541097 var3538))\n  (define-fun var2378 () String\n    (str.++ var1760!1 var855!1))\n  (define-fun var964 () String\n    (str.++ var1760!1 var855!1 var2808!1))\n  (define-fun var3641 () (Array Int Int)\n    (buffer/-1867541097 var3538))\n  (define-fun var1768 () Int\n    (tokenBegin/-1867541097 var3538))\n  (define-fun var2808 () String\n    String-init)\n  (define-fun var1760 () String\n    String-init)\n  (define-fun var1708 () Int\n    (+ (bufpos/-1867541097 var3538) 1))\n  (define-fun var855!1 () String\n    \"\")\n  (define-fun var1760!2 () String\n    \"\")\n  (define-fun var1760!1 () String\n    \"\")\n  (define-fun var2808!1 () String\n    \"\")\n  (define-fun var2378!1 () String\n    \"\")\n  (define-fun var3562!1 () Int\n    0)\n  (define-fun var2951 () Int\n    0)\n  (define-fun var1708!1 () Int\n    0)\n  (define-fun var2606!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var1768!1 () Int\n    0)\n  (define-fun var3641!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun tokenBegin/-1867541097 ((x!0 var3038)) Int\n    1)\n  (define-fun bufpos/-1867541097 ((x!0 var3038)) Int\n    0)\n  (define-fun bufsize/-1867541097 ((x!0 var3038)) Int\n    0)\n  (define-fun buffer/-1867541097 ((x!0 var3038)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 66 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168153088,
            "run_time": 0.8531692028045654,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3038/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.utils.JavaCharStream__GetImage__261265150\\2206.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2378!1 =\r\n     concat(var855!1, var2808!1)\r\n\r\n622ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.String: void <init>(char[],int,int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: void <init>(char[],int,int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.String: void <init>(char[],int,int)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.JavaCharStream",
            "$i1 = r0.<org.javacc.utils.JavaCharStream: int bufpos>",
            "$i0 = r0.<org.javacc.utils.JavaCharStream: int tokenBegin>",
            "if $i1 < $i0 goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = new java.lang.String",
            "$r3 = r0.<org.javacc.utils.JavaCharStream: char[] buffer>",
            "$i5 = r0.<org.javacc.utils.JavaCharStream: int tokenBegin>",
            "$i3 = r0.<org.javacc.utils.JavaCharStream: int bufsize>",
            "$i2 = r0.<org.javacc.utils.JavaCharStream: int tokenBegin>",
            "$i4 = $i3 - $i2",
            "specialinvoke $r2.<java.lang.String: void <init>(char[],int,int)>($r3, $i5, $i4)",
            "$r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r4 = new java.lang.String",
            "$r5 = r0.<org.javacc.utils.JavaCharStream: char[] buffer>",
            "$i6 = r0.<org.javacc.utils.JavaCharStream: int bufpos>",
            "$i7 = $i6 + 1",
            "specialinvoke $r4.<java.lang.String: void <init>(char[],int,int)>($r5, 0, $i7)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseEngine__generateCPPMethodheader__1465053116\\1336.smt2",
        "z3": {
            "memory": 32387072,
            "run_time": 60.01233768463135,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11317248,
            "run_time": 0.016052722930908203,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var305 is 2\r\n; rep: (as @var305_0 var305)\r\n; rep: (as @var305_1 var305)\r\n; cardinality of var3202 is 3\r\n; rep: (as @var3202_0 var3202)\r\n; rep: (as @var3202_1 var3202)\r\n; rep: (as @var3202_2 var3202)\r\n; cardinality of var1503 is 1\r\n; rep: (as @var1503_0 var1503)\r\n; cardinality of var2623 is 1\r\n; rep: (as @var2623_0 var2623)\r\n; cardinality of var2804 is 2\r\n; rep: (as @var2804_0 var2804)\r\n; rep: (as @var2804_1 var2804)\r\n; cardinality of var910 is 1\r\n; rep: (as @var910_0 var910)\r\n; cardinality of var402 is 1\r\n; rep: (as @var402_0 var402)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1430969082 ((BOUND_VARIABLE_912 String)) void (as @void_0 void))\r\n(define-fun getLhs/-759107248 ((BOUND_VARIABLE_915 var2623)) String \"\")\r\n(define-fun cast-from-var3202-to-var2623 ((_arg_1 var3202)) var2623 (as @var2623_0 var2623))\r\n(define-fun getReturnTypeTokens/-2045221194 ((_arg_1 var2623)) var2804 (as @var2804_0 var2804))\r\n(define-fun var2804_size/-959786421 ((_arg_1 var2804)) Int 0)\r\n(define-fun setLength/163251007 ((BOUND_VARIABLE_918 String) (BOUND_VARIABLE_919 Int)) void (as @void_0 void))\r\n(define-fun getParameterListTokens/-1968828001 ((_arg_1 var2623)) var2804 (as @var2804_1 var2804))\r\n(define-fun codeGenerator/-1894308792 ((BOUND_VARIABLE_922 var305)) var910 (as @var910_0 var910))\r\n(define-fun generateMethodDefHeader/-6362932 ((BOUND_VARIABLE_925 var910) (BOUND_VARIABLE_926 String) (BOUND_VARIABLE_927 String) (BOUND_VARIABLE_928 String) (BOUND_VARIABLE_929 String)) void (as @void_0 void))\r\n(define-fun null-var305 () var305 (as @var305_0 var305))\r\n(define-fun null-var3202 () var3202 (as @var3202_0 var3202))\r\n(define-fun null-var1503 () var1503 (as @var1503_0 var1503))\r\n(define-fun var402-cu_name () String \"\")\r\n(define-fun var1019 () var305 (as @var305_1 var305))\r\n(define-fun var3707 () var3202 (as @var3202_1 var3202))\r\n(define-fun var2098!1 () String \"\")\r\n(define-fun var3707!1 () var3202 (as @var3202_2 var3202))\r\n(define-fun var2098!2 () String \"\")\r\n(define-fun var3792 () Int 0)\r\n(define-fun var2098!3 () String \"\")\r\n(define-fun var2098!4 () String \"\")\r\n(define-fun var2113!1 () String \"\")\r\n(define-fun var2113!2 () String \"\")\r\n(define-fun var1507!1 () String \"\")\r\n(define-fun var256!1 () var910 (as @var910_0 var910))\r\n(define-fun var3156!1 () String \"\")\r\n(define-fun var518!1 () String \"\")\r\n(define-fun var3371!1 () String \"\")\r\n(define-fun var1949!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38682624,
            "run_time": 0.07701587677001953,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 109 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 110 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179064832,
            "run_time": 0.9314088821411133,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var305/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.ParseEngine__generateCPPMethodheader__1465053116\\1336.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1507!1 =\r\n     concat(var2113!2, var2098!4)\r\n   var2098!4 =\r\n     concat(var2098!3, rhs)\r\n   var2098!3 =\r\n     concat(var2098!2, rhs)\r\n\r\n663ms\r\n"
        },
        "undefined_function_count": 10,
        "assertion_count": 27,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.StringBuffer: java.lang.String toString()>",
            "<java.lang.StringBuffer: void setLength(int)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.StringBuffer: java.lang.String toString()>": 3,
            "<java.lang.StringBuffer: void setLength(int)>": 1,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r4 := @this: org.javacc.parser.ParseEngine",
            "r1 := @parameter0: org.javacc.parser.CppCodeProduction",
            "$r0 = new java.lang.StringBuffer",
            "specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()",
            "r30 = null",
            "virtualinvoke r1.<org.javacc.parser.CppCodeProduction: java.lang.String getLhs()>()",
            "i4 = 0",
            "$r2 = virtualinvoke r1.<org.javacc.parser.CppCodeProduction: java.util.List getReturnTypeTokens()>()",
            "$i0 = interfaceinvoke $r2.<java.util.List: int size()>()",
            "if i4 >= $i0 goto (branch)",
            "if r30 == null goto $r25 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r25 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>()",
            "virtualinvoke $r0.<java.lang.StringBuffer: void setLength(int)>(0)",
            "virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\"(\")",
            "$r3 = virtualinvoke r1.<org.javacc.parser.CppCodeProduction: java.util.List getParameterListTokens()>()",
            "$i1 = interfaceinvoke $r3.<java.util.List: int size()>()",
            "if $i1 == 0 goto virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\")\")",
            "virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(\")\")",
            "$r20 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r6 = r4.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r7 = <org.javacc.parser.JavaCCGlobals: java.lang.String cu_name>",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke r1.<org.javacc.parser.CppCodeProduction: java.lang.String getLhs()>()",
            "$r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)",
            "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r11 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.String toString()>()",
            "virtualinvoke $r6.<org.javacc.parser.CodeGenerator: void generateMethodDefHeader(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>($r25, $r7, $r12, $r11)",
            "return \"\""
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OptionInfo__hashCode__708861861\\1735.smt2",
        "z3": {
            "memory": 32739328,
            "run_time": 0.045220136642456055,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2977:\r\n  ;;   var2977!val!1 var2977!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2977!val!1 () var2977)\r\n  (declare-fun var2977!val!0 () var2977)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2977)) (or (= x var2977!val!1) (= x var2977!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2322:\r\n  ;;   var2322!val!0 var2322!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2322!val!0 () var2322)\r\n  (declare-fun var2322!val!1 () var2322)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2322)) (or (= x var2322!val!0) (= x var2322!val!1)))\r\n  ;; -----------\r\n  (define-fun var2058 () Int\r\n    (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var3712)))))\r\n  (define-fun var2131 () Int\r\n    (+ 31 (hashCode/1739917532 (_default/-2056846942 var3712))))\r\n  (define-fun var3712 () var2977\r\n    var2977!val!0)\r\n  (define-fun var3178 () Int\r\n    (hashCode/1739917532 (_default/-2056846942 var3712)))\r\n  (define-fun var114 () Int\r\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var3712))))))\r\n  (* 31 (+ a!1 (hashCode/-467973558 (_name/-2056846942 var3712))))))\r\n  (define-fun var1696 () String\r\n    (_name/-2056846942 var3712))\r\n  (define-fun var3420 () Int\r\n    (hashCode/-467973558 (_name/-2056846942 var3712)))\r\n  (define-fun var2536 () var2322\r\n    (_default/-2056846942 var3712))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var62 () Int\r\n    0)\r\n  (define-fun var3551 () String\r\n    (_name/-2056846942 var3712))\r\n  (define-fun null-var2977 () var2977\r\n    var2977!val!1)\r\n  (define-fun null-var2322 () var2322\r\n    var2322!val!1)\r\n  (define-fun var3626 () Int\r\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var3712))))))\r\n(let ((a!2 (* 31 (+ a!1 (hashCode/-467973558 (_name/-2056846942 var3712))))))\r\n  (+ a!2 0))))\r\n  (define-fun var2651 () Int\r\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var3712))))))\r\n  (+ a!1 (hashCode/-467973558 (_name/-2056846942 var3712)))))\r\n  (define-fun var3964 () var2322\r\n    (_default/-2056846942 var3712))\r\n  (define-fun var1635 () var2296\r\n    (_type/-2056846942 var3712))\r\n  (define-fun null-var2296 () var2296\r\n    var2296!val!0)\r\n  (define-fun _default/-2056846942 ((x!0 var2977)) var2322\r\n    var2322!val!0)\r\n  (define-fun _name/-2056846942 ((x!0 var2977)) String\r\n    \"!0!\")\r\n  (define-fun _type/-2056846942 ((x!0 var2977)) var2296\r\n    var2296!val!0)\r\n  (define-fun hashCode/1739917532 ((x!0 var2322)) Int\r\n    0)\r\n  (define-fun hashCode/-467973558 ((x!0 String)) Int\r\n    0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.015053272247314453,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2977 is 2\r\n; rep: (as @var2977_0 var2977)\r\n; rep: (as @var2977_1 var2977)\r\n; cardinality of var2322 is 2\r\n; rep: (as @var2322_0 var2322)\r\n; rep: (as @var2322_1 var2322)\r\n; cardinality of var2618 is 1\r\n; rep: (as @var2618_0 var2618)\r\n; cardinality of var2296 is 1\r\n; rep: (as @var2296_0 var2296)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun _default/-2056846942 ((_arg_1 var2977)) var2322 (as @var2322_1 var2322))\r\n(define-fun hashCode/1739917532 ((BOUND_VARIABLE_601 var2322)) Int 0)\r\n(define-fun _name/-2056846942 ((_arg_1 var2977)) String \"\")\r\n(define-fun hashCode/-467973558 ((BOUND_VARIABLE_604 String)) Int 0)\r\n(define-fun _type/-2056846942 ((BOUND_VARIABLE_607 var2977)) var2296 (as @var2296_0 var2296))\r\n(define-fun null-var2977 () var2977 (as @var2977_0 var2977))\r\n(define-fun null-var2322 () var2322 (as @var2322_0 var2322))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var2296 () var2296 (as @var2296_0 var2296))\r\n(define-fun var3712 () var2977 (as @var2977_1 var2977))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36913152,
            "run_time": 0.04665637016296387,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 49 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165797888,
            "run_time": 0.7319016456604004,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3712 () var2977 var2977!8)\r\n  (define-fun null-var2296 () var2296 var2296!6)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2322 () var2322 var2322!4)\r\n  (define-fun null-var2977 () var2977 var2977!2)\r\n  (define-fun var2296!6 () var2296 (_type/-2056846942 var2977!8))\r\n  (define-fun var2322!26 () var2322 (_default/-2056846942 var2977!8))\r\n  (define-fun _name/-2056846942 ((x!0 var2977)) String (ite (= x!0 var2977!8) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: int hashCode()>"
        ],
        "api_count": {
            "<java.lang.String: int hashCode()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.OptionInfo",
            "$r1 = r0.<org.javacc.utils.OptionInfo: java.lang.Object _default>",
            "if $r1 != null goto $r2 = r0.<org.javacc.utils.OptionInfo: java.lang.Object _default>",
            "$r2 = r0.<org.javacc.utils.OptionInfo: java.lang.Object _default>",
            "$i5 = virtualinvoke $r2.<java.lang.Object: int hashCode()>()",
            "$i4 = 31 + $i5",
            "$i0 = 31 * $i4",
            "$r3 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "if $r3 != null goto $r4 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "$r4 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "$i6 = virtualinvoke $r4.<java.lang.String: int hashCode()>()",
            "$i3 = $i0 + $i6",
            "$i1 = 31 * $i3",
            "$r5 = r0.<org.javacc.utils.OptionInfo: org.javacc.utils.OptionType _type>",
            "if $r5 != null goto $r6 = r0.<org.javacc.utils.OptionInfo: org.javacc.utils.OptionType _type>",
            "$i7 = 0",
            "goto [?= $i2 = $i1 + $i7]",
            "$i2 = $i1 + $i7",
            "return $i2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OptionInfo__compareTo__-340483790\\1770.smt2",
        "z3": {
            "memory": 35536896,
            "run_time": 0.09113645553588867,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1036:\r\n  ;;   var1036!val!2 var1036!val!0 var1036!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1036!val!2 () var1036)\r\n  (declare-fun var1036!val!0 () var1036)\r\n  (declare-fun var1036!val!1 () var1036)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1036))\r\n          (or (= x var1036!val!2) (= x var1036!val!0) (= x var1036!val!1)))\r\n  ;; -----------\r\n  (define-fun var3306 () String\r\n    (_name/-2056846942 var597))\r\n  (define-fun var866 () Int\r\n    (compareTo/1411385946 (_name/-2056846942 var597) (_name/-2056846942 var705)))\r\n  (define-fun var597 () var1036\r\n    var1036!val!0)\r\n  (define-fun var705 () var1036\r\n    var1036!val!2)\r\n  (define-fun var155 () String\r\n    (_name/-2056846942 var705))\r\n  (define-fun null-var1036 () var1036\r\n    var1036!val!1)\r\n  (define-fun compareTo/1411385946 ((x!0 String) (x!1 String)) Int\r\n    (- 1))\r\n  (define-fun _name/-2056846942 ((x!0 var1036)) String\r\n    (ite (= x!0 var1036!val!2) \"\\u{6944}\"\r\n      \"\"))\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 15151104,
            "run_time": 0.03115558624267578,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1036 is 3\r\n; rep: (as @var1036_0 var1036)\r\n; rep: (as @var1036_1 var1036)\r\n; rep: (as @var1036_2 var1036)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun _name/-2056846942 ((_arg_1 var1036)) String (ite (= (as @var1036_2 var1036) _arg_1) \"\" \"\\u{0}\"))\r\n(define-fun compareTo/1411385946 ((_arg_1 String) (_arg_2 String)) Int 1)\r\n(define-fun null-var1036 () var1036 (as @var1036_0 var1036))\r\n(define-fun var597 () var1036 (as @var1036_1 var1036))\r\n(define-fun var705 () var1036 (as @var1036_2 var1036))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37003264,
            "run_time": 0.047181129455566406,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 22 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 149090304,
            "run_time": 0.7452523708343506,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_<=(all_12_2, all_12_2)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.utils.OptionInfo__compareTo__-340483790\\1770.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n522ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: int compareTo(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: int compareTo(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.OptionInfo",
            "r1 := @parameter0: org.javacc.utils.OptionInfo",
            "$r3 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "$r2 = r1.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "$i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r2)",
            "return $i0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseEngine__genjj_3Call__-834200328\\1748.smt2",
        "z3": {
            "memory": 30535680,
            "run_time": 0.045481204986572266,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var8:\r\n  ;;   var8!val!0 var8!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var8!val!0 () var8)\r\n  (declare-fun var8!val!1 () var8)\r\n  ;; cardinality constraint:\r\n  (forall ((x var8)) (or (= x var8!val!0) (= x var8!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1351:\r\n  ;;   var1351!val!0 var1351!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1351!val!0 () var1351)\r\n  (declare-fun var1351!val!1 () var1351)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1351)) (or (= x var1351!val!0) (= x var1351!val!1)))\r\n  ;; -----------\r\n  (define-fun var2467 () var8\r\n    var8!val!0)\r\n  (define-fun null-var8 () var8\r\n    var8!val!1)\r\n  (define-fun null-var1351 () var1351\r\n    var1351!val!1)\r\n  (define-fun var2901 () var1351\r\n    var1351!val!0)\r\n  (define-fun var874 () String\r\n    (internal_name/-1632124174 var2901))\r\n  (define-fun var3525 () Bool\r\n    (str.prefixof \"jj_scan_token\" (internal_name/-1632124174 var2901)))\r\n  (define-fun var1845 () String\r\n    (internal_name/-1632124174 var2901))\r\n  (define-fun internal_name/-1632124174 ((x!0 var1351)) String\r\n    \"jj_scan_token\")\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11558912,
            "run_time": 0.015616416931152344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var8 is 2\r\n; rep: (as @var8_0 var8)\r\n; rep: (as @var8_1 var8)\r\n; cardinality of var1351 is 2\r\n; rep: (as @var1351_0 var1351)\r\n; rep: (as @var1351_1 var1351)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun internal_name/-1632124174 ((_arg_1 var1351)) String \"jj_scan_token\")\r\n(define-fun null-var8 () var8 (as @var8_0 var8))\r\n(define-fun null-var1351 () var1351 (as @var1351_0 var1351))\r\n(define-fun var2467 () var8 (as @var8_1 var8))\r\n(define-fun var2901 () var1351 (as @var1351_1 var1351))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36929536,
            "run_time": 0.047181129455566406,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 25 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 160583680,
            "run_time": 0.838076114654541,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2901 () var1351 var1351!34)\r\n  (define-fun var2467 () var8 var8!32)\r\n  (define-fun null-var1351 () var1351 var1351!30)\r\n  (define-fun null-var8 () var8 var8!28)\r\n  (define-fun internal_name/-1632124174 ((x!0 var1351)) String (ite (= x!0 var1351!34) \"jj_scan_token\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r9 := @this: org.javacc.parser.ParseEngine",
            "r0 := @parameter0: org.javacc.parser.Expansion",
            "$r1 = r0.<org.javacc.parser.Expansion: java.lang.String internal_name>",
            "$z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(\"jj_scan_token\")",
            "if $z0 == 0 goto $r2 = new java.lang.StringBuilder",
            "$r8 = r0.<org.javacc.parser.Expansion: java.lang.String internal_name>",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__PrintBoilerPlate__1887603335\\2737.smt2",
        "z3": {
            "memory": 33382400,
            "run_time": 60.0104284286499,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 17211392,
            "run_time": 60.013421297073364,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36999168,
            "run_time": 60.0082893371582,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 385413120,
            "run_time": 60.01118087768555,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 90,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.CodeGenerator",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z0 == 0 goto $r54 = \"\"",
            "$r54 = \"static \"",
            "goto [?= $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)]",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjCheckNAdd(int state)\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r5",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r1)",
            "$r6 = newarray (java.lang.Object)[1]",
            "$r6[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r6)",
            "$r7 = newarray (java.lang.Object)[1]",
            "$r7[0] = \"   if (jjrounds[state] != jjround)\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r7)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"   {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r8)",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r9[0] = \"      jjstateSet[jjnewStateCnt++] = state;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r9)",
            "$r10 = newarray (java.lang.Object)[1]",
            "$r10[0] = \"      jjrounds[state] = jjround;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r10)",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \"   }\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r11)",
            "$r12 = newarray (java.lang.Object)[1]",
            "$r12[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r12)",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r14 = new java.lang.StringBuilder",
            "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()",
            "$z1 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z1 == 0 goto $r55 = \"\"",
            "$r55 = \"static \"",
            "goto [?= $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55)]",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjAddStates(int start, int end)\")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r13[0] = $r17",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r13)",
            "$r18 = newarray (java.lang.Object)[1]",
            "$r18[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r18)",
            "$r19 = newarray (java.lang.Object)[1]",
            "$r19[0] = \"   do {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r19)",
            "$r20 = newarray (java.lang.Object)[1]",
            "$r20[0] = \"      jjstateSet[jjnewStateCnt++] = jjnextStates[start];\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r20)",
            "$r21 = newarray (java.lang.Object)[1]",
            "$r21[0] = \"   } while (start++ != end);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r21)",
            "$r22 = newarray (java.lang.Object)[1]",
            "$r22[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r22)",
            "$r23 = newarray (java.lang.Object)[1]",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$z2 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z2 == 0 goto $r56 = \"\"",
            "$r56 = \"static \"",
            "goto [?= $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)]",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjCheckNAddTwoStates(int state1, int state2)\")",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r23[0] = $r27",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r23)",
            "$r28 = newarray (java.lang.Object)[1]",
            "$r28[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r28)",
            "$r29 = newarray (java.lang.Object)[1]",
            "$r29[0] = \"   jjCheckNAdd(state1);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r29)",
            "$r30 = newarray (java.lang.Object)[1]",
            "$r30[0] = \"   jjCheckNAdd(state2);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r30)",
            "$r31 = newarray (java.lang.Object)[1]",
            "$r31[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r31)",
            "$r32 = newarray (java.lang.Object)[1]",
            "$r32[0] = \"\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r32)",
            "$z3 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesDualNeeded>",
            "if $z3 == 0 goto $z6 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesUnaryNeeded>",
            "$z6 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesUnaryNeeded>",
            "if $z6 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OptionInfo__hashCode__708861861\\1748.smt2",
        "z3": {
            "memory": 31748096,
            "run_time": 0.05670595169067383,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2141:\r\n  ;;   var2141!val!0 var2141!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2141!val!0 () var2141)\r\n  (declare-fun var2141!val!1 () var2141)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2141)) (or (= x var2141!val!0) (= x var2141!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1548:\r\n  ;;   var1548!val!0 var1548!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1548!val!0 () var1548)\r\n  (declare-fun var1548!val!1 () var1548)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1548)) (or (= x var1548!val!0) (= x var1548!val!1)))\r\n  ;; -----------\r\n  ;; universe for var480:\r\n  ;;   var480!val!0 var480!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var480!val!0 () var480)\r\n  (declare-fun var480!val!1 () var480)\r\n  ;; cardinality constraint:\r\n  (forall ((x var480)) (or (= x var480!val!0) (= x var480!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var480 () var480\r\n    var480!val!1)\r\n  (define-fun var199 () var480\r\n    var480!val!0)\r\n  (define-fun var3843 () Int\r\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var199))))))\r\n(let ((a!2 (* 31 (+ a!1 (hashCode/-467973558 (_name/-2056846942 var199))))))\r\n  (+ a!2\r\n     (hashCode/385986394\r\n       (cast-from-var2141-to-var1159 (_type/-2056846942 var199)))))))\r\n  (define-fun var2883 () Int\r\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var199))))))\r\n  (+ a!1 (hashCode/-467973558 (_name/-2056846942 var199)))))\r\n  (define-fun var3764 () String\r\n    (_name/-2056846942 var199))\r\n  (define-fun var1261 () Int\r\n    (+ 31 (hashCode/1739917532 (_default/-2056846942 var199))))\r\n  (define-fun var126 () var1548\r\n    (_default/-2056846942 var199))\r\n  (define-fun var2371 () Int\r\n    (let ((a!1 (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var199))))))\r\n  (* 31 (+ a!1 (hashCode/-467973558 (_name/-2056846942 var199))))))\r\n  (define-fun var3836 () var2141\r\n    (_type/-2056846942 var199))\r\n  (define-fun null-var1548 () var1548\r\n    var1548!val!1)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1636 () var1548\r\n    (_default/-2056846942 var199))\r\n  (define-fun var3069 () var2141\r\n    (_type/-2056846942 var199))\r\n  (define-fun var1417 () Int\r\n    (* 31 (+ 31 (hashCode/1739917532 (_default/-2056846942 var199)))))\r\n  (define-fun null-var2141 () var2141\r\n    var2141!val!1)\r\n  (define-fun var1032 () String\r\n    (_name/-2056846942 var199))\r\n  (define-fun var202 () Int\r\n    (hashCode/1739917532 (_default/-2056846942 var199)))\r\n  (define-fun var1264 () Int\r\n    (hashCode/-467973558 (_name/-2056846942 var199)))\r\n  (define-fun var1061 () Int\r\n    (hashCode/385986394 (cast-from-var2141-to-var1159 (_type/-2056846942 var199))))\r\n  (define-fun _default/-2056846942 ((x!0 var480)) var1548\r\n    var1548!val!0)\r\n  (define-fun _name/-2056846942 ((x!0 var480)) String\r\n    \"!0!\")\r\n  (define-fun _type/-2056846942 ((x!0 var480)) var2141\r\n    var2141!val!0)\r\n  (define-fun hashCode/1739917532 ((x!0 var1548)) Int\r\n    0)\r\n  (define-fun cast-from-var2141-to-var1159 ((x!0 var2141)) var1159\r\n    var1159!val!0)\r\n  (define-fun hashCode/-467973558 ((x!0 String)) Int\r\n    0)\r\n  (define-fun hashCode/385986394 ((x!0 var1159)) Int\r\n    0)\r\n)\r\n(error \"line 54 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11337728,
            "run_time": 0.01506662368774414,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var480 is 2\r\n; rep: (as @var480_0 var480)\r\n; rep: (as @var480_1 var480)\r\n; cardinality of var1548 is 2\r\n; rep: (as @var1548_0 var1548)\r\n; rep: (as @var1548_1 var1548)\r\n; cardinality of var2535 is 1\r\n; rep: (as @var2535_0 var2535)\r\n; cardinality of var2141 is 2\r\n; rep: (as @var2141_0 var2141)\r\n; rep: (as @var2141_1 var2141)\r\n; cardinality of var1159 is 1\r\n; rep: (as @var1159_0 var1159)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun _default/-2056846942 ((_arg_1 var480)) var1548 (as @var1548_1 var1548))\r\n(define-fun hashCode/1739917532 ((BOUND_VARIABLE_619 var1548)) Int 0)\r\n(define-fun _name/-2056846942 ((_arg_1 var480)) String \"\")\r\n(define-fun hashCode/-467973558 ((BOUND_VARIABLE_622 String)) Int 0)\r\n(define-fun _type/-2056846942 ((_arg_1 var480)) var2141 (as @var2141_1 var2141))\r\n(define-fun hashCode/385986394 ((BOUND_VARIABLE_625 var1159)) Int 0)\r\n(define-fun cast-from-var2141-to-var1159 ((BOUND_VARIABLE_628 var2141)) var1159 (as @var1159_0 var1159))\r\n(define-fun null-var480 () var480 (as @var480_0 var480))\r\n(define-fun null-var1548 () var1548 (as @var1548_0 var1548))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var2141 () var2141 (as @var2141_0 var2141))\r\n(define-fun var199 () var480 (as @var480_1 var480))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36913152,
            "run_time": 0.04845380783081055,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 53 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 54 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163971072,
            "run_time": 0.8283429145812988,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var199 () var480 var480!8)\r\n  (define-fun null-var2141 () var2141 var2141!6)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var1548 () var1548 var1548!4)\r\n  (define-fun null-var480 () var480 var480!2)\r\n  (define-fun var2141!28 () var2141 (_type/-2056846942 var480!8))\r\n  (define-fun var1548!30 () var1548 (_default/-2056846942 var480!8))\r\n  (define-fun _name/-2056846942 ((x!0 var480)) String (ite (= x!0 var480!8) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.String: int hashCode()>"
        ],
        "api_count": {
            "<java.lang.String: int hashCode()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.OptionInfo",
            "$r1 = r0.<org.javacc.utils.OptionInfo: java.lang.Object _default>",
            "if $r1 != null goto $r2 = r0.<org.javacc.utils.OptionInfo: java.lang.Object _default>",
            "$r2 = r0.<org.javacc.utils.OptionInfo: java.lang.Object _default>",
            "$i5 = virtualinvoke $r2.<java.lang.Object: int hashCode()>()",
            "$i4 = 31 + $i5",
            "$i0 = 31 * $i4",
            "$r3 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "if $r3 != null goto $r4 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "$r4 = r0.<org.javacc.utils.OptionInfo: java.lang.String _name>",
            "$i6 = virtualinvoke $r4.<java.lang.String: int hashCode()>()",
            "$i3 = $i0 + $i6",
            "$i1 = 31 * $i3",
            "$r5 = r0.<org.javacc.utils.OptionInfo: org.javacc.utils.OptionType _type>",
            "if $r5 != null goto $r6 = r0.<org.javacc.utils.OptionInfo: org.javacc.utils.OptionType _type>",
            "$r6 = r0.<org.javacc.utils.OptionInfo: org.javacc.utils.OptionType _type>",
            "$i7 = virtualinvoke $r6.<org.javacc.utils.OptionType: int hashCode()>()",
            "$i2 = $i1 + $i7",
            "return $i2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseEngine__genjj_3Call__-834200328\\1764.smt2",
        "z3": {
            "memory": 28049408,
            "run_time": 0.12037038803100586,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1287:\r\n  ;;   var1287!val!0 var1287!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1287!val!0 () var1287)\r\n  (declare-fun var1287!val!1 () var1287)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1287)) (or (= x var1287!val!0) (= x var1287!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3462:\r\n  ;;   var3462!val!1 var3462!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3462!val!1 () var3462)\r\n  (declare-fun var3462!val!0 () var3462)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3462)) (or (= x var3462!val!1) (= x var3462!val!0)))\r\n  ;; -----------\r\n  (define-fun var2071 () String\r\n    String-init)\r\n  (define-fun var281 () String\r\n    (internal_name/-1632124174 var3075))\r\n  (define-fun var3075 () var3462\r\n    var3462!val!0)\r\n  (define-fun null-var3462 () var3462\r\n    var3462!val!1)\r\n  (define-fun var2590 () String\r\n    (str.++ var2071!1 \"jj_3\" (internal_name/-1632124174 var3075) \"()\"))\r\n  (define-fun var3106 () Bool\r\n    (str.prefixof \"jj_scan_token\" (internal_name/-1632124174 var3075)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2489 () String\r\n    (internal_name/-1632124174 var3075))\r\n  (define-fun var240 () var1287\r\n    var1287!val!0)\r\n  (define-fun var2356 () String\r\n    (str.++ var2071!1 \"jj_3\" (internal_name/-1632124174 var3075) \"()\"))\r\n  (define-fun var856 () String\r\n    (str.++ var2071!1 \"jj_3\" (internal_name/-1632124174 var3075)))\r\n  (define-fun null-var1287 () var1287\r\n    var1287!val!1)\r\n  (define-fun var3959 () String\r\n    (str.++ var2071!1 \"jj_3\"))\r\n  (define-fun var2071!1 () String\r\n    \"\")\r\n  (define-fun var856!1 () String\r\n    \"jj_3jj_scan_tokeA()\")\r\n  (define-fun var2071!2 () String\r\n    \"jj_3\")\r\n  (define-fun var3959!1 () String\r\n    \"jj_3jj_scan_tokeA\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun internal_name/-1632124174 ((x!0 var3462)) String\r\n    \"jj_scan_tokeA\")\r\n)\r\n(error \"line 49 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11362304,
            "run_time": 0.015558242797851562,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1287 is 2\r\n; rep: (as @var1287_0 var1287)\r\n; rep: (as @var1287_1 var1287)\r\n; cardinality of var3462 is 2\r\n; rep: (as @var3462_0 var3462)\r\n; rep: (as @var3462_1 var3462)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun internal_name/-1632124174 ((_arg_1 var3462)) String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun null-var1287 () var1287 (as @var1287_0 var1287))\r\n(define-fun null-var3462 () var3462 (as @var3462_0 var3462))\r\n(define-fun var240 () var1287 (as @var1287_1 var1287))\r\n(define-fun var3075 () var3462 (as @var3462_1 var3462))\r\n(define-fun var2071!1 () String \"\")\r\n(define-fun var2071!2 () String \"jj_3\")\r\n(define-fun var3959!1 () String \"jj_3\")\r\n(define-fun var856!1 () String \"jj_3()\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36388864,
            "run_time": 0.047959327697753906,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 48 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 49 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167751680,
            "run_time": 0.9416296482086182,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3462/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.ParseEngine__genjj_3Call__-834200328\\1764.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var856!1 =\r\n     concat(all_22_4, \"()\")\r\n   var3959!1 =\r\n     concat(\"jj_3\", all_14_0)\r\n   all_22_4 =\r\n     concat(\"jj_3\", all_14_0)\r\n\r\n679ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r9 := @this: org.javacc.parser.ParseEngine",
            "r0 := @parameter0: org.javacc.parser.Expansion",
            "$r1 = r0.<org.javacc.parser.Expansion: java.lang.String internal_name>",
            "$z0 = virtualinvoke $r1.<java.lang.String: boolean startsWith(java.lang.String)>(\"jj_scan_token\")",
            "if $z0 == 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"jj_3\")",
            "$r3 = r0.<org.javacc.parser.Expansion: java.lang.String internal_name>",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"()\")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__PrintBoilerPlate__1887603335\\2748.smt2",
        "z3": {
            "memory": 32354304,
            "run_time": 0.09128856658935547,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 275 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11362304,
            "run_time": 0.015386581420898438,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36188160,
            "run_time": 0.046254634857177734,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 275 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 325849088,
            "run_time": 1.4050984382629395,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 90,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.CodeGenerator",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z0 == 0 goto $r54 = \"\"",
            "$r54 = \"static \"",
            "goto [?= $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)]",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjCheckNAdd(int state)\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r5",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r1)",
            "$r6 = newarray (java.lang.Object)[1]",
            "$r6[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r6)",
            "$r7 = newarray (java.lang.Object)[1]",
            "$r7[0] = \"   if (jjrounds[state] != jjround)\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r7)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"   {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r8)",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r9[0] = \"      jjstateSet[jjnewStateCnt++] = state;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r9)",
            "$r10 = newarray (java.lang.Object)[1]",
            "$r10[0] = \"      jjrounds[state] = jjround;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r10)",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \"   }\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r11)",
            "$r12 = newarray (java.lang.Object)[1]",
            "$r12[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r12)",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r14 = new java.lang.StringBuilder",
            "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()",
            "$z1 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z1 == 0 goto $r55 = \"\"",
            "$r55 = \"static \"",
            "goto [?= $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55)]",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjAddStates(int start, int end)\")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r13[0] = $r17",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r13)",
            "$r18 = newarray (java.lang.Object)[1]",
            "$r18[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r18)",
            "$r19 = newarray (java.lang.Object)[1]",
            "$r19[0] = \"   do {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r19)",
            "$r20 = newarray (java.lang.Object)[1]",
            "$r20[0] = \"      jjstateSet[jjnewStateCnt++] = jjnextStates[start];\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r20)",
            "$r21 = newarray (java.lang.Object)[1]",
            "$r21[0] = \"   } while (start++ != end);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r21)",
            "$r22 = newarray (java.lang.Object)[1]",
            "$r22[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r22)",
            "$r23 = newarray (java.lang.Object)[1]",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$z2 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z2 == 0 goto $r56 = \"\"",
            "$r56 = \"\"",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjCheckNAddTwoStates(int state1, int state2)\")",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r23[0] = $r27",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r23)",
            "$r28 = newarray (java.lang.Object)[1]",
            "$r28[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r28)",
            "$r29 = newarray (java.lang.Object)[1]",
            "$r29[0] = \"   jjCheckNAdd(state1);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r29)",
            "$r30 = newarray (java.lang.Object)[1]",
            "$r30[0] = \"   jjCheckNAdd(state2);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r30)",
            "$r31 = newarray (java.lang.Object)[1]",
            "$r31[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r31)",
            "$r32 = newarray (java.lang.Object)[1]",
            "$r32[0] = \"\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r32)",
            "$z3 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesDualNeeded>",
            "if $z3 == 0 goto $z6 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesUnaryNeeded>",
            "$z6 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesUnaryNeeded>",
            "if $z6 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OutputFileGenerator__evaluate__1250722520\\1702.smt2",
        "z3": {
            "memory": 32686080,
            "run_time": 0.046062469482421875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1429:\r\n  ;;   var1429!val!1 var1429!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1429!val!1 () var1429)\r\n  (declare-fun var1429!val!0 () var1429)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1429)) (or (= x var1429!val!1) (= x var1429!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1285:\r\n  ;;   var1285!val!0 var1285!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1285!val!0 () var1285)\r\n  (declare-fun var1285!val!1 () var1285)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1285)) (or (= x var1285!val!0) (= x var1285!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var1285 () var1285\r\n    var1285!val!1)\r\n  (define-fun var2297 () var3810\r\n    var3810-init)\r\n  (define-fun var3588 () var1285\r\n    var1285!val!0)\r\n  (define-fun var3046 () String\r\n    (trim-right (trim-left var631)))\r\n  (define-fun var49 () var1429\r\n    var1429!val!0)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun null-var1429 () var1429\r\n    var1429!val!1)\r\n  (define-fun var631 () String\r\n    \"A\")\r\n  (define-fun var291 () var2344\r\n    var2344-init)\r\n  (define-fun var3810-init () var3810\r\n    var3810!val!0)\r\n  (define-fun var2344-init () var2344\r\n    var2344!val!0)\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 22380544,
            "run_time": 0.2168731689453125,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(\r\n; cardinality of var1429 is 2\r\n; rep: (as @var1429_0 var1429)\r\n; rep: (as @var1429_1 var1429)\r\n; cardinality of var3107 is 1\r\n; rep: (as @var3107_0 var3107)\r\n; cardinality of var2344 is 1\r\n; rep: (as @var2344_0 var2344)\r\n; cardinality of var3810 is 1\r\n; rep: (as @var3810_0 var3810)\r\n; cardinality of var1285 is 2\r\n; rep: (as @var1285_0 var1285)\r\n; rep: (as @var1285_1 var1285)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2344-init () var2344 (as @var2344_0 var2344))\r\n(define-fun var3810-init () var3810 (as @var3810_0 var3810))\r\n(define-fun null-var1429 () var1429 (as @var1429_0 var1429))\r\n(define-fun null-String () String \"!\")\r\n(define-fun null-var1285 () var1285 (as @var1285_0 var1285))\r\n(define-fun var49 () var1429 (as @var1429_1 var1429))\r\n(define-fun var631 () String \"\")\r\n(define-fun var3588 () var1285 (as @var1285_1 var1285))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37986304,
            "run_time": 0.0619664192199707,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1429:\n  ;;   var1429!val!1 var1429!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1429!val!1 () var1429)\n  (declare-fun var1429!val!0 () var1429)\n  ;; cardinality constraint:\n  (forall ((x var1429)) (or (= x var1429!val!1) (= x var1429!val!0)))\n  ;; -----------\n  ;; universe for var1285:\n  ;;   var1285!val!0 var1285!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1285!val!0 () var1285)\n  (declare-fun var1285!val!1 () var1285)\n  ;; cardinality constraint:\n  (forall ((x var1285)) (or (= x var1285!val!0) (= x var1285!val!1)))\n  ;; -----------\n  (define-fun null-var1285 () var1285\n    var1285!val!1)\n  (define-fun var49 () var1429\n    var1429!val!0)\n  (define-fun var2297 () var3810\n    var3810-init)\n  (define-fun var3588 () var1285\n    var1285!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var631 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var1429 () var1429\n    var1429!val!1)\n  (define-fun var3046 () String\n    (trim-right (trim-left var631)))\n  (define-fun var291 () var2344\n    var2344-init)\n  (define-fun var3810-init () var3810\n    var3810!val!0)\n  (define-fun var2344-init () var2344\n    var2344!val!0)\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 187613184,
            "run_time": 1.146470069885254,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(model\r\n  (define-fun var3588 () var1285 var1285!8)\r\n  (define-fun var631 () String \"\\u{0}\")\r\n  (define-fun var49 () var1429 var1429!6)\r\n  (define-fun null-var1285 () var1285 var1285!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var1429 () var1429 var1429!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.utils.OutputFileGenerator",
            "r5 := @parameter0: java.lang.String",
            "r6 = virtualinvoke r5.<java.lang.String: java.lang.String trim()>()",
            "$r0 = new org.javacc.utils.ConditionParser",
            "$r1 = new java.io.StringReader",
            "$r4 := @caughtexception",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OutputFileGenerator__write__-232257826\\1803.smt2",
        "z3": {
            "memory": 33460224,
            "run_time": 0.09795427322387695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1429:\r\n  ;;   var1429!val!0 var1429!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1429!val!0 () var1429)\r\n  (declare-fun var1429!val!1 () var1429)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1429)) (or (= x var1429!val!0) (= x var1429!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2317:\r\n  ;;   var2317!val!0 var2317!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2317!val!0 () var2317)\r\n  (declare-fun var2317!val!1 () var2317)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2317)) (or (= x var2317!val!0) (= x var2317!val!1)))\r\n  ;; -----------\r\n  (define-fun var1575 () String\r\n    \"\")\r\n  (define-fun var1250 () Bool\r\n    (str.prefixof \"\\#\" var1575))\r\n  (define-fun var2729 () Int\r\n    (str.indexof var1575 \"${\" 0))\r\n  (define-fun var2603 () Int\r\n    (- 1))\r\n  (define-fun var62 () var2317\r\n    var2317!val!0)\r\n  (define-fun var2487 () Bool\r\n    var605_isOutputLanguageJava/1735442213)\r\n  (define-fun null-String () String\r\n    \"F\")\r\n  (define-fun null-var2317 () var2317\r\n    var2317!val!1)\r\n  (define-fun null-var1429 () var1429\r\n    var1429!val!1)\r\n  (define-fun var3851 () var1429\r\n    var1429!val!0)\r\n  (define-fun var605_isOutputLanguageJava/1735442213 () Bool\r\n    false)\r\n  (define-fun var1575!1 () String\r\n    \"\")\r\n  (define-fun var3851!1 () var1429\r\n    var1429!val!0)\r\n  (define-fun println/-1226480079 ((x!0 var1429) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 46 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11317248,
            "run_time": 0.02993154525756836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2317 is 2\r\n; rep: (as @var2317_0 var2317)\r\n; rep: (as @var2317_1 var2317)\r\n; cardinality of var1429 is 2\r\n; rep: (as @var1429_0 var1429)\r\n; rep: (as @var1429_1 var1429)\r\n; cardinality of var2004 is 1\r\n; rep: (as @var2004_0 var2004)\r\n; cardinality of var605 is 1\r\n; rep: (as @var605_0 var605)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var605_isOutputLanguageJava/1735442213 () Bool false)\r\n(define-fun println/-1226480079 ((BOUND_VARIABLE_783 var1429) (BOUND_VARIABLE_784 String)) void (as @void_0 void))\r\n(define-fun null-var2317 () var2317 (as @var2317_0 var2317))\r\n(define-fun null-var1429 () var1429 (as @var1429_0 var1429))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var62 () var2317 (as @var2317_1 var2317))\r\n(define-fun var3851 () var1429 (as @var1429_1 var1429))\r\n(define-fun var1575 () String \"\")\r\n(define-fun var3851!1 () var1429 (as @var1429_0 var1429))\r\n(define-fun var1575!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38080512,
            "run_time": 0.09310388565063477,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1429:\n  ;;   var1429!val!0 var1429!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1429!val!0 () var1429)\n  (declare-fun var1429!val!1 () var1429)\n  ;; cardinality constraint:\n  (forall ((x var1429)) (or (= x var1429!val!0) (= x var1429!val!1)))\n  ;; -----------\n  ;; universe for var2317:\n  ;;   var2317!val!0 var2317!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2317!val!0 () var2317)\n  (declare-fun var2317!val!1 () var2317)\n  ;; cardinality constraint:\n  (forall ((x var2317)) (or (= x var2317!val!0) (= x var2317!val!1)))\n  ;; -----------\n  (define-fun var605_isOutputLanguageJava/1735442213 () Bool\n    false)\n  (define-fun var1575 () String\n    \"\\$\\u{0}\")\n  (define-fun var3851 () var1429\n    var1429!val!0)\n  (define-fun var62 () var2317\n    var2317!val!0)\n  (define-fun null-var1429 () var1429\n    var1429!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2603 () Int\n    (- 1))\n  (define-fun null-var2317 () var2317\n    var2317!val!1)\n  (define-fun var1250 () Bool\n    (str.prefixof \"\\#\" var1575))\n  (define-fun var2729 () Int\n    (str.indexof var1575 \"${\" 0))\n  (define-fun var2487 () Bool\n    var605_isOutputLanguageJava/1735442213)\n  (define-fun var1575!1 () String\n    \"\")\n  (define-fun var3851!1 () var1429\n    var1429!val!0)\n  (define-fun println/-1226480079 ((x!0 var1429) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 46 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181497856,
            "run_time": 1.0373282432556152,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1575 () String \"\")\r\n  (define-fun var3851 () var1429 var1429!8)\r\n  (define-fun var62 () var2317 var2317!6)\r\n  (define-fun null-String () String \"{\")\r\n  (define-fun null-var1429 () var1429 var1429!4)\r\n  (define-fun null-var2317 () var2317 var2317!2)\r\n  (define-fun var605_isOutputLanguageJava/1735442213 () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.String: int indexOf(java.lang.String)>",
            "<java.lang.String: boolean startsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(java.lang.String)>": 1,
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.utils.OutputFileGenerator",
            "r0 := @parameter0: java.io.PrintWriter",
            "r2 := @parameter1: java.lang.String",
            "$i0 = virtualinvoke r2.<java.lang.String: int indexOf(java.lang.String)>(\"${\")",
            "$i2 = (int) -1",
            "if $i0 == $i2 goto $z0 = staticinvoke <org.javacc.parser.Options: boolean isOutputLanguageJava()>()",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean isOutputLanguageJava()>()",
            "if $z0 == 0 goto $z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(\"\\\\#\")",
            "$z2 = virtualinvoke r2.<java.lang.String: boolean startsWith(java.lang.String)>(\"\\\\#\")",
            "if $z2 == 0 goto virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(r2)",
            "virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>(r2)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OutputFileGenerator__process__-849902221\\1826.smt2",
        "z3": {
            "memory": 37543936,
            "run_time": 0.19046282768249512,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3438:\r\n  ;;   var3438!val!0 var3438!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3438!val!0 () var3438)\r\n  (declare-fun var3438!val!1 () var3438)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3438)) (or (= x var3438!val!0) (= x var3438!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2738:\r\n  ;;   var2738!val!0 var2738!val!1 var2738!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2738!val!0 () var2738)\r\n  (declare-fun var2738!val!1 () var2738)\r\n  (declare-fun var2738!val!2 () var2738)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2738))\r\n          (or (= x var2738!val!0) (= x var2738!val!1) (= x var2738!val!2)))\r\n  ;; -----------\r\n  ;; universe for var3522:\r\n  ;;   var3522!val!0 var3522!val!1 var3522!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3522!val!0 () var3522)\r\n  (declare-fun var3522!val!1 () var3522)\r\n  (declare-fun var3522!val!2 () var3522)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3522))\r\n          (or (= x var3522!val!0) (= x var3522!val!1) (= x var3522!val!2)))\r\n  ;; -----------\r\n  (define-fun var3114 () var3438\r\n    var3438!val!0)\r\n  (define-fun var498!1 () var3522\r\n    var3522!val!2)\r\n  (define-fun var2792 () Bool\r\n    true)\r\n  (define-fun var1086!1 () var2738\r\n    var2738!val!2)\r\n  (define-fun null-String () String\r\n    \"ABCD\")\r\n  (define-fun var2052!1 () String\r\n    (peekLine/2102330122 var1086!1 var498!1))\r\n  (define-fun var3255 () Bool\r\n    (str.prefixof \"#if\"\r\n              (trim-right (trim-left (peekLine/2102330122 var1086 var498)))))\r\n  (define-fun null-var3522 () var3522\r\n    var3522!val!1)\r\n  (define-fun null-var2738 () var2738\r\n    var2738!val!1)\r\n  (define-fun var1086 () var2738\r\n    var2738!val!0)\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun null-var3438 () var3438\r\n    var3438!val!1)\r\n  (define-fun var2866 () String\r\n    (peekLine/2102330122 var1086 var498))\r\n  (define-fun var418 () String\r\n    (trim-right (trim-left (peekLine/2102330122 var1086 var498))))\r\n  (define-fun var498 () var3522\r\n    var3522!val!0)\r\n  (define-fun var2052 () String\r\n    (peekLine/2102330122 var1086 var498))\r\n  (define-fun var2792!1 () Bool\r\n    false)\r\n  (define-fun var3114!1 () var3438\r\n    var3438!val!0)\r\n  (define-fun var3114!2 () var3438\r\n    var3438!val!0)\r\n  (define-fun peekLine/2102330122 ((x!0 var2738) (x!1 var3522)) String\r\n    (ite (and (= x!0 var2738!val!2) (= x!1 var3522!val!2)) \"ABCD\"\r\n      \"#if\"))\r\n  (define-fun processIf/-324466858 ((x!0 var2738)\r\n   (x!1 var3522)\r\n   (x!2 var3438)\r\n   (x!3 Bool)) void\r\n    void!val!0)\r\n  (define-fun flush/-1073200041 ((x!0 var3438)) void\r\n    void!val!0)\r\n)\r\n(error \"line 65 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 30019584,
            "run_time": 1.0666463375091553,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(\r\n; cardinality of var2738 is 3\r\n; rep: (as @var2738_0 var2738)\r\n; rep: (as @var2738_1 var2738)\r\n; rep: (as @var2738_2 var2738)\r\n; cardinality of var3522 is 3\r\n; rep: (as @var3522_0 var3522)\r\n; rep: (as @var3522_1 var3522)\r\n; rep: (as @var3522_2 var3522)\r\n; cardinality of var3438 is 2\r\n; rep: (as @var3438_0 var3438)\r\n; rep: (as @var3438_1 var3438)\r\n; cardinality of var677 is 1\r\n; rep: (as @var677_0 var677)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peekLine/2102330122 ((_arg_1 var2738) (_arg_2 var3522)) String (ite (= (as @var2738_2 var2738) _arg_1) (ite (= (as @var3522_2 var3522) _arg_2) \"\" \"#if\") \"#if\"))\r\n(define-fun processIf/-324466858 ((BOUND_VARIABLE_17343 var2738) (BOUND_VARIABLE_17344 var3522) (BOUND_VARIABLE_17345 var3438) (BOUND_VARIABLE_17346 Bool)) void (as @void_0 void))\r\n(define-fun flush/-1073200041 ((BOUND_VARIABLE_17349 var3438)) void (as @void_0 void))\r\n(define-fun null-var2738 () var2738 (as @var2738_0 var2738))\r\n(define-fun null-var3522 () var3522 (as @var3522_0 var3522))\r\n(define-fun null-var3438 () var3438 (as @var3438_0 var3438))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun null-String () String \"\")\r\n(define-fun var1086 () var2738 (as @var2738_1 var2738))\r\n(define-fun var498 () var3522 (as @var3522_1 var3522))\r\n(define-fun var3114 () var3438 (as @var3438_1 var3438))\r\n(define-fun var2792 () Bool false)\r\n(define-fun var1086!1 () var2738 (as @var2738_2 var2738))\r\n(define-fun var498!1 () var3522 (as @var3522_2 var3522))\r\n(define-fun var3114!1 () var3438 (as @var3438_0 var3438))\r\n(define-fun var2792!1 () Bool false)\r\n(define-fun var3114!2 () var3438 (as @var3438_0 var3438))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36974592,
            "run_time": 0.10750365257263184,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 64 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 65 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 249212928,
            "run_time": 1.7347095012664795,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_106_2, all_106_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.utils.OutputFileGenerator__process__-849902221\\1826.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming that recursive function trim-left is partial\r\nWarning: assuming that recursive function trim-right is partial\r\nAssuming all_109_5 = \"\"\r\nAssuming all_70_4 = \"\"\r\nAssuming all_144_4 = \"\"\r\nAssuming all_57_4 = \"\"\r\nAssuming all_144_5 = \"\"\r\nApplying Nielsen transformation (# word equations: 1), splitting all_54_2\r\n  all_57_5 . all_54_2 == all_109_5 . all_106_2\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n1472ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>",
            "<java.lang.String: boolean startsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 1,
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.OutputFileGenerator",
            "r1 := @parameter0: java.io.BufferedReader",
            "r2 := @parameter1: java.io.PrintWriter",
            "z2 := @parameter2: boolean",
            "$r8 = specialinvoke r0.<org.javacc.utils.OutputFileGenerator: java.lang.String peekLine(java.io.BufferedReader)>(r1)",
            "if $r8 == null goto virtualinvoke r2.<java.io.PrintWriter: void flush()>()",
            "$r3 = specialinvoke r0.<org.javacc.utils.OutputFileGenerator: java.lang.String peekLine(java.io.BufferedReader)>(r1)",
            "$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>()",
            "$z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>(\"#if\")",
            "if $z0 == 0 goto $r5 = specialinvoke r0.<org.javacc.utils.OutputFileGenerator: java.lang.String peekLine(java.io.BufferedReader)>(r1)",
            "specialinvoke r0.<org.javacc.utils.OutputFileGenerator: void processIf(java.io.BufferedReader,java.io.PrintWriter,boolean)>(r1, r2, z2)",
            "goto [?= $r8 = specialinvoke r0.<org.javacc.utils.OutputFileGenerator: java.lang.String peekLine(java.io.BufferedReader)>(r1)]",
            "$r8 = specialinvoke r0.<org.javacc.utils.OutputFileGenerator: java.lang.String peekLine(java.io.BufferedReader)>(r1)",
            "if $r8 == null goto virtualinvoke r2.<java.io.PrintWriter: void flush()>()",
            "virtualinvoke r2.<java.io.PrintWriter: void flush()>()",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OutputFileGenerator__generate__-1718254023\\1631.smt2",
        "z3": {
            "memory": 32681984,
            "run_time": 0.05883026123046875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1504:\r\n  ;;   var1504!val!0 var1504!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1504!val!0 () var1504)\r\n  (declare-fun var1504!val!1 () var1504)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1504)) (or (= x var1504!val!0) (= x var1504!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2106:\r\n  ;;   var2106!val!0 var2106!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2106!val!0 () var2106)\r\n  (declare-fun var2106!val!1 () var2106)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2106)) (or (= x var2106!val!0) (= x var2106!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2106 () var2106\r\n    var2106!val!1)\r\n  (define-fun var1919 () String\r\n    String-init)\r\n  (define-fun var2409 () var1504\r\n    var1504!val!0)\r\n  (define-fun var2528 () var2419\r\n    (getResourceAsStream/2018191724\r\n  (getClass/1258963082 (cast-from-var2106-to-var3992 var756))\r\n  (templateName/1872402743 var756)))\r\n  (define-fun var764 () String\r\n    (str.++ var1919!1 \"Invalid template name: \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var193 () String\r\n    (templateName/1872402743 var756))\r\n  (define-fun var756 () var2106\r\n    var2106!val!0)\r\n  (define-fun var2671 () var3141\r\n    var3141-init)\r\n  (define-fun var107 () ClassObject\r\n    (getClass/1258963082 (cast-from-var2106-to-var3992 var756)))\r\n  (define-fun var1531 () String\r\n    (str.++ var1919!1 \"Invalid template name: \" (templateName/1872402743 var756)))\r\n  (define-fun var1955 () String\r\n    (templateName/1872402743 var756))\r\n  (define-fun var80 () String\r\n    (str.++ var1919!1 \"Invalid template name: \" (templateName/1872402743 var756)))\r\n  (define-fun null-var1504 () var1504\r\n    var1504!val!1)\r\n  (define-fun var764!1 () String\r\n    \"Invalid template name: \")\r\n  (define-fun null-var2419 () var2419\r\n    var2419!val!0)\r\n  (define-fun var1919!1 () String\r\n    \"\")\r\n  (define-fun var1919!2 () String\r\n    \"Invalid template name: \")\r\n  (define-fun var80!1 () String\r\n    \"\")\r\n  (define-fun var2671!1 () var3141\r\n    var3141!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3141-init () var3141\r\n    var3141!val!0)\r\n  (define-fun templateName/1872402743 ((x!0 var2106)) String\r\n    \"\")\r\n  (define-fun cast-from-var2106-to-var3992 ((x!0 var2106)) var3992\r\n    var3992!val!0)\r\n  (define-fun getClass/1258963082 ((x!0 var3992)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun getResourceAsStream/2018191724 ((x!0 ClassObject) (x!1 String)) var2419\r\n    var2419!val!0)\r\n  (define-fun <init>/-1557872005 ((x!0 var3141) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 61 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.01505279541015625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2106 is 2\r\n; rep: (as @var2106_0 var2106)\r\n; rep: (as @var2106_1 var2106)\r\n; cardinality of var1504 is 2\r\n; rep: (as @var1504_0 var1504)\r\n; rep: (as @var1504_1 var1504)\r\n; cardinality of var3992 is 1\r\n; rep: (as @var3992_0 var3992)\r\n; cardinality of var2419 is 1\r\n; rep: (as @var2419_0 var2419)\r\n; cardinality of var3141 is 1\r\n; rep: (as @var3141_0 var3141)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_560 var3992)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var2106-to-var3992 ((BOUND_VARIABLE_563 var2106)) var3992 (as @var3992_0 var3992))\r\n(define-fun templateName/1872402743 ((BOUND_VARIABLE_566 var2106)) String \"\")\r\n(define-fun getResourceAsStream/2018191724 ((BOUND_VARIABLE_569 ClassObject) (BOUND_VARIABLE_570 String)) var2419 (as @var2419_0 var2419))\r\n(define-fun var3141-init () var3141 (as @var3141_0 var3141))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1557872005 ((BOUND_VARIABLE_573 var3141) (BOUND_VARIABLE_574 String)) void (as @void_0 void))\r\n(define-fun null-var2106 () var2106 (as @var2106_0 var2106))\r\n(define-fun null-var1504 () var1504 (as @var1504_0 var1504))\r\n(define-fun null-var2419 () var2419 (as @var2419_0 var2419))\r\n(define-fun var756 () var2106 (as @var2106_1 var2106))\r\n(define-fun var2409 () var1504 (as @var1504_1 var1504))\r\n(define-fun var1919!1 () String \"\")\r\n(define-fun var1919!2 () String \"Invalid template name: \")\r\n(define-fun var764!1 () String \"Invalid template name: \")\r\n(define-fun var2671!1 () var3141 (as @var3141_0 var3141))\r\n(define-fun var80!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36855808,
            "run_time": 0.06124734878540039,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1504:\n  ;;   var1504!val!0 var1504!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1504!val!0 () var1504)\n  (declare-fun var1504!val!1 () var1504)\n  ;; cardinality constraint:\n  (forall ((x var1504)) (or (= x var1504!val!0) (= x var1504!val!1)))\n  ;; -----------\n  ;; universe for var2106:\n  ;;   var2106!val!0 var2106!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2106!val!0 () var2106)\n  (declare-fun var2106!val!1 () var2106)\n  ;; cardinality constraint:\n  (forall ((x var2106)) (or (= x var2106!val!0) (= x var2106!val!1)))\n  ;; -----------\n  ;; universe for var2419:\n  ;;   var2419!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2419!val!0 () var2419)\n  ;; cardinality constraint:\n  (forall ((x var2419)) (= x var2419!val!0))\n  ;; -----------\n  (define-fun null-var2106 () var2106\n    var2106!val!1)\n  (define-fun var1919 () String\n    String-init)\n  (define-fun var764 () String\n    (str.++ var1919!1 \"Invalid template name: \"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2671 () var3141\n    var3141-init)\n  (define-fun var2409 () var1504\n    var1504!val!0)\n  (define-fun var193 () String\n    (templateName/1872402743 var756))\n  (define-fun var107 () ClassObject\n    (getClass/1258963082 (cast-from-var2106-to-var3992 var756)))\n  (define-fun var756 () var2106\n    var2106!val!0)\n  (define-fun var1531 () String\n    (str.++ var1919!1 \"Invalid template name: \" (templateName/1872402743 var756)))\n  (define-fun var1955 () String\n    (templateName/1872402743 var756))\n  (define-fun var80 () String\n    (str.++ var1919!1 \"Invalid template name: \" (templateName/1872402743 var756)))\n  (define-fun var2528 () var2419\n    (getResourceAsStream/2018191724\n  (getClass/1258963082 (cast-from-var2106-to-var3992 var756))\n  (templateName/1872402743 var756)))\n  (define-fun null-var1504 () var1504\n    var1504!val!1)\n  (define-fun var764!1 () String\n    \"Invalid template name: \")\n  (define-fun null-var2419 () var2419\n    var2419!val!0)\n  (define-fun var1919!1 () String\n    \"\")\n  (define-fun var1919!2 () String\n    \"Invalid template name: \")\n  (define-fun var80!1 () String\n    \"\")\n  (define-fun var2671!1 () var3141\n    var3141!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3141-init () var3141\n    var3141!val!0)\n  (define-fun templateName/1872402743 ((x!0 var2106)) String\n    \"\")\n  (define-fun cast-from-var2106-to-var3992 ((x!0 var2106)) var3992\n    var3992!val!0)\n  (define-fun getClass/1258963082 ((x!0 var3992)) ClassObject\n    ClassObject!val!0)\n  (define-fun getResourceAsStream/2018191724 ((x!0 ClassObject) (x!1 String)) var2419\n    var2419!val!0)\n  (define-fun <init>/-1557872005 ((x!0 var3141) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 61 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175034368,
            "run_time": 1.2138948440551758,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1504/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.utils.OutputFileGenerator__generate__-1718254023\\1631.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var764!1 =\r\n     concat(\"Invalid template name: \", all_23_0)\r\n\r\n915ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.OutputFileGenerator",
            "r6 := @parameter0: java.io.PrintWriter",
            "$r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r1 = r0.<org.javacc.utils.OutputFileGenerator: java.lang.String templateName>",
            "r3 = virtualinvoke $r2.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r1)",
            "if r3 != null goto $r4 = new java.io.BufferedReader",
            "$r7 = new java.io.IOException",
            "$r8 = new java.lang.StringBuilder",
            "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid template name: \")",
            "$r9 = r0.<org.javacc.utils.OutputFileGenerator: java.lang.String templateName>",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r7.<java.io.IOException: void <init>(java.lang.String)>($r12)",
            "throw $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.ParseException__add_escapes__615312932\\1754.smt2",
        "z3": {
            "memory": 31809536,
            "run_time": 0.04499483108520508,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var37 () Int\r\n    0)\r\n  (define-fun var314 () String\r\n    var285!1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var285 () String\r\n    String-init)\r\n  (define-fun var122 () Int\r\n    (str.len var1780))\r\n  (define-fun var1780 () String\r\n    \"\")\r\n  (define-fun var285!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun <init>/-1430969082 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.030664443969726562,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var998 is 1\r\n; rep: (as @var998_0 var998)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1430969082 ((BOUND_VARIABLE_530 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1780 () String \"\")\r\n(define-fun var285!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37421056,
            "run_time": 0.06087303161621094,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var285 () String\n    String-init)\n  (define-fun var122 () Int\n    (str.len var1780))\n  (define-fun var314 () String\n    var285!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1780 () String\n    \"\")\n  (define-fun var37 () Int\n    0)\n  (define-fun var285!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun <init>/-1430969082 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150618112,
            "run_time": 0.9954519271850586,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1780 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r13 = new java.lang.StringBuffer",
            "specialinvoke $r13.<java.lang.StringBuffer: void <init>()>()",
            "i6 = 0",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "if i6 >= $i0 goto $r2 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r2 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__PrintBoilerPlate__1887603335\\2755.smt2",
        "z3": {
            "memory": 32321536,
            "run_time": 0.058014631271362305,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 275 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.015536308288574219,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36319232,
            "run_time": 0.06224989891052246,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 275 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 325779456,
            "run_time": 1.6920323371887207,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 90,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.CodeGenerator",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z0 == 0 goto $r54 = \"\"",
            "$r54 = \"static \"",
            "goto [?= $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)]",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjCheckNAdd(int state)\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r5",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r1)",
            "$r6 = newarray (java.lang.Object)[1]",
            "$r6[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r6)",
            "$r7 = newarray (java.lang.Object)[1]",
            "$r7[0] = \"   if (jjrounds[state] != jjround)\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r7)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"   {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r8)",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r9[0] = \"      jjstateSet[jjnewStateCnt++] = state;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r9)",
            "$r10 = newarray (java.lang.Object)[1]",
            "$r10[0] = \"      jjrounds[state] = jjround;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r10)",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \"   }\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r11)",
            "$r12 = newarray (java.lang.Object)[1]",
            "$r12[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r12)",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r14 = new java.lang.StringBuilder",
            "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()",
            "$z1 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z1 == 0 goto $r55 = \"\"",
            "$r55 = \"\"",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjAddStates(int start, int end)\")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r13[0] = $r17",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r13)",
            "$r18 = newarray (java.lang.Object)[1]",
            "$r18[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r18)",
            "$r19 = newarray (java.lang.Object)[1]",
            "$r19[0] = \"   do {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r19)",
            "$r20 = newarray (java.lang.Object)[1]",
            "$r20[0] = \"      jjstateSet[jjnewStateCnt++] = jjnextStates[start];\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r20)",
            "$r21 = newarray (java.lang.Object)[1]",
            "$r21[0] = \"   } while (start++ != end);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r21)",
            "$r22 = newarray (java.lang.Object)[1]",
            "$r22[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r22)",
            "$r23 = newarray (java.lang.Object)[1]",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$z2 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z2 == 0 goto $r56 = \"\"",
            "$r56 = \"static \"",
            "goto [?= $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)]",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjCheckNAddTwoStates(int state1, int state2)\")",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r23[0] = $r27",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r23)",
            "$r28 = newarray (java.lang.Object)[1]",
            "$r28[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r28)",
            "$r29 = newarray (java.lang.Object)[1]",
            "$r29[0] = \"   jjCheckNAdd(state1);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r29)",
            "$r30 = newarray (java.lang.Object)[1]",
            "$r30[0] = \"   jjCheckNAdd(state2);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r30)",
            "$r31 = newarray (java.lang.Object)[1]",
            "$r31[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r31)",
            "$r32 = newarray (java.lang.Object)[1]",
            "$r32[0] = \"\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r32)",
            "$z3 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesDualNeeded>",
            "if $z3 == 0 goto $z6 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesUnaryNeeded>",
            "$z6 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesUnaryNeeded>",
            "if $z6 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OutputFileGenerator__generate__-1718254023\\1658.smt2",
        "z3": {
            "memory": 32768000,
            "run_time": 0.04451155662536621,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var240:\r\n  ;;   var240!val!1 var240!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var240!val!1 () var240)\r\n  (declare-fun var240!val!0 () var240)\r\n  ;; cardinality constraint:\r\n  (forall ((x var240)) (or (= x var240!val!1) (= x var240!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1561:\r\n  ;;   var1561!val!1 var1561!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1561!val!1 () var1561)\r\n  (declare-fun var1561!val!0 () var1561)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1561)) (or (= x var1561!val!1) (= x var1561!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2424:\r\n  ;;   var2424!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2424!val!0 () var2424)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2424)) (= x var2424!val!0))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  ;; universe for var2104:\r\n  ;;   var2104!val!1 var2104!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2104!val!1 () var2104)\r\n  (declare-fun var2104!val!0 () var2104)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2104)) (or (= x var2104!val!1) (= x var2104!val!0)))\r\n  ;; -----------\r\n  (define-fun var470 () String\r\n    (templateName/1872402743 var1748))\r\n  (define-fun null-var240 () var240\r\n    var240!val!1)\r\n  (define-fun var2757 () var2172\r\n    var2172-init)\r\n  (define-fun null-var1561 () var1561\r\n    var1561!val!1)\r\n  (define-fun var2726 () var844\r\n    var844-init)\r\n  (define-fun var2802 () var2104\r\n    (getResourceAsStream/2018191724\r\n  (getClass/1258963082 (cast-from-var1561-to-var2424 var1748))\r\n  (templateName/1872402743 var1748)))\r\n  (define-fun null-var2104 () var2104\r\n    var2104!val!1)\r\n  (define-fun var3621 () var240\r\n    var240!val!0)\r\n  (define-fun var1410 () ClassObject\r\n    (getClass/1258963082 (cast-from-var1561-to-var2424 var1748)))\r\n  (define-fun var1748 () var1561\r\n    var1561!val!0)\r\n  (define-fun var2757!2 () var2172\r\n    var2172!val!0)\r\n  (define-fun var3765 () Int\r\n    0)\r\n  (define-fun var2757!1 () var2172\r\n    var2172!val!0)\r\n  (define-fun var2726!2 () var844\r\n    var844!val!0)\r\n  (define-fun var844-init () var844\r\n    var844!val!0)\r\n  (define-fun var1748!1 () var1561\r\n    var1561!val!1)\r\n  (define-fun var2802!1 () var2104\r\n    var2104!val!1)\r\n  (define-fun var2172-init () var2172\r\n    var2172!val!0)\r\n  (define-fun var2726!1 () var844\r\n    var844!val!0)\r\n  (define-fun var3621!1 () var240\r\n    var240!val!1)\r\n  (define-fun getResourceAsStream/2018191724 ((x!0 ClassObject) (x!1 String)) var2104\r\n    var2104!val!0)\r\n  (define-fun getClass/1258963082 ((x!0 var2424)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun templateName/1872402743 ((x!0 var1561)) String\r\n    \"!0!\")\r\n  (define-fun cast-from-var1561-to-var2424 ((x!0 var1561)) var2424\r\n    var2424!val!0)\r\n  (define-fun cast-from-var844-to-var328 ((x!0 var844)) var328\r\n    var328!val!0)\r\n  (define-fun <init>/30097470 ((x!0 var2172) (x!1 var328)) void\r\n    void!val!0)\r\n  (define-fun process/-849902221 ((x!0 var1561)\r\n   (x!1 var2172)\r\n   (x!2 var240)\r\n   (x!3 Bool)) void\r\n    void!val!0)\r\n  (define-fun <init>/393586270 ((x!0 var844) (x!1 var2104)) void\r\n    void!val!0)\r\n)\r\n(error \"line 60 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11354112,
            "run_time": 0.015076637268066406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1561 is 2\r\n; rep: (as @var1561_0 var1561)\r\n; rep: (as @var1561_1 var1561)\r\n; cardinality of var240 is 2\r\n; rep: (as @var240_0 var240)\r\n; rep: (as @var240_1 var240)\r\n; cardinality of var2424 is 1\r\n; rep: (as @var2424_0 var2424)\r\n; cardinality of var2104 is 2\r\n; rep: (as @var2104_0 var2104)\r\n; rep: (as @var2104_1 var2104)\r\n; cardinality of var2172 is 1\r\n; rep: (as @var2172_0 var2172)\r\n; cardinality of var844 is 1\r\n; rep: (as @var844_0 var844)\r\n; cardinality of var328 is 1\r\n; rep: (as @var328_0 var328)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getClass/1258963082 ((_arg_1 var2424)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var1561-to-var2424 ((_arg_1 var1561)) var2424 (as @var2424_0 var2424))\r\n(define-fun templateName/1872402743 ((_arg_1 var1561)) String \"\")\r\n(define-fun getResourceAsStream/2018191724 ((_arg_1 ClassObject) (_arg_2 String)) var2104 (as @var2104_1 var2104))\r\n(define-fun var2172-init () var2172 (as @var2172_0 var2172))\r\n(define-fun var844-init () var844 (as @var844_0 var844))\r\n(define-fun <init>/393586270 ((BOUND_VARIABLE_505 var844) (BOUND_VARIABLE_506 var2104)) void (as @void_0 void))\r\n(define-fun <init>/30097470 ((BOUND_VARIABLE_509 var2172) (BOUND_VARIABLE_510 var328)) void (as @void_0 void))\r\n(define-fun cast-from-var844-to-var328 ((BOUND_VARIABLE_513 var844)) var328 (as @var328_0 var328))\r\n(define-fun process/-849902221 ((BOUND_VARIABLE_516 var1561) (BOUND_VARIABLE_517 var2172) (BOUND_VARIABLE_518 var240) (BOUND_VARIABLE_519 Bool)) void (as @void_0 void))\r\n(define-fun null-var1561 () var1561 (as @var1561_0 var1561))\r\n(define-fun null-var240 () var240 (as @var240_0 var240))\r\n(define-fun null-var2104 () var2104 (as @var2104_0 var2104))\r\n(define-fun var1748 () var1561 (as @var1561_1 var1561))\r\n(define-fun var3621 () var240 (as @var240_1 var240))\r\n(define-fun var2726!1 () var844 (as @var844_0 var844))\r\n(define-fun var2802!1 () var2104 (as @var2104_0 var2104))\r\n(define-fun var2757!1 () var2172 (as @var2172_0 var2172))\r\n(define-fun var2726!2 () var844 (as @var844_0 var844))\r\n(define-fun var1748!1 () var1561 (as @var1561_0 var1561))\r\n(define-fun var2757!2 () var2172 (as @var2172_0 var2172))\r\n(define-fun var3621!1 () var240 (as @var240_0 var240))\r\n(define-fun var3765 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36917248,
            "run_time": 0.0452730655670166,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 59 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 60 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154288128,
            "run_time": 0.8202781677246094,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3621 () var240 var240!10)\r\n  (define-fun var1748 () var1561 var1561!8)\r\n  (define-fun null-var2104 () var2104 var2104!6)\r\n  (define-fun null-var240 () var240 var240!4)\r\n  (define-fun null-var1561 () var1561 var1561!2)\r\n  (define-fun var2104!38 () var2104 (getResourceAsStream/2018191724 ClassObject!34 \"\\u{0}\"))\r\n  (define-fun var2424!32 () var2424 (cast-from-var1561-to-var2424 var1561!8))\r\n  (define-fun ClassObject!34 () ClassObject (getClass/1258963082 var2424!32))\r\n  (define-fun templateName/1872402743 ((x!0 var1561)) String (ite (= x!0 var1561!8) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 10,
        "assertion_count": 8,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.OutputFileGenerator",
            "r6 := @parameter0: java.io.PrintWriter",
            "$r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r1 = r0.<org.javacc.utils.OutputFileGenerator: java.lang.String templateName>",
            "r3 = virtualinvoke $r2.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>($r1)",
            "if r3 != null goto $r4 = new java.io.BufferedReader",
            "$r4 = new java.io.BufferedReader",
            "$r5 = new java.io.InputStreamReader",
            "specialinvoke $r5.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(r3)",
            "specialinvoke $r4.<java.io.BufferedReader: void <init>(java.io.Reader)>($r5)",
            "specialinvoke r0.<org.javacc.utils.OutputFileGenerator: void process(java.io.BufferedReader,java.io.PrintWriter,boolean)>($r4, r6, 0)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__PrintBoilerPlate__1887603335\\2764.smt2",
        "z3": {
            "memory": 31494144,
            "run_time": 0.043790340423583984,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 274 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11554816,
            "run_time": 0.016037702560424805,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36126720,
            "run_time": 0.06119728088378906,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 274 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 215207936,
            "run_time": 1.0972113609313965,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 90,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.CodeGenerator",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z0 == 0 goto $r54 = \"\"",
            "$r54 = \"static \"",
            "goto [?= $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)]",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjCheckNAdd(int state)\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r5",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r1)",
            "$r6 = newarray (java.lang.Object)[1]",
            "$r6[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r6)",
            "$r7 = newarray (java.lang.Object)[1]",
            "$r7[0] = \"   if (jjrounds[state] != jjround)\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r7)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"   {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r8)",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r9[0] = \"      jjstateSet[jjnewStateCnt++] = state;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r9)",
            "$r10 = newarray (java.lang.Object)[1]",
            "$r10[0] = \"      jjrounds[state] = jjround;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r10)",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \"   }\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r11)",
            "$r12 = newarray (java.lang.Object)[1]",
            "$r12[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r12)",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r14 = new java.lang.StringBuilder",
            "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()",
            "$z1 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z1 == 0 goto $r55 = \"\"",
            "$r55 = \"\"",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjAddStates(int start, int end)\")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r13[0] = $r17",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r13)",
            "$r18 = newarray (java.lang.Object)[1]",
            "$r18[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r18)",
            "$r19 = newarray (java.lang.Object)[1]",
            "$r19[0] = \"   do {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r19)",
            "$r20 = newarray (java.lang.Object)[1]",
            "$r20[0] = \"      jjstateSet[jjnewStateCnt++] = jjnextStates[start];\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r20)",
            "$r21 = newarray (java.lang.Object)[1]",
            "$r21[0] = \"   } while (start++ != end);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r21)",
            "$r22 = newarray (java.lang.Object)[1]",
            "$r22[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r22)",
            "$r23 = newarray (java.lang.Object)[1]",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$z2 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z2 == 0 goto $r56 = \"\"",
            "$r56 = \"\"",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjCheckNAddTwoStates(int state1, int state2)\")",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r23[0] = $r27",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r23)",
            "$r28 = newarray (java.lang.Object)[1]",
            "$r28[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r28)",
            "$r29 = newarray (java.lang.Object)[1]",
            "$r29[0] = \"   jjCheckNAdd(state1);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r29)",
            "$r30 = newarray (java.lang.Object)[1]",
            "$r30[0] = \"   jjCheckNAdd(state2);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r30)",
            "$r31 = newarray (java.lang.Object)[1]",
            "$r31[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r31)",
            "$r32 = newarray (java.lang.Object)[1]",
            "$r32[0] = \"\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r32)",
            "$z3 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesDualNeeded>",
            "if $z3 == 0 goto $z6 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesUnaryNeeded>",
            "$z6 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesUnaryNeeded>",
            "if $z6 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.ParseException__initialise__1626238636\\1674.smt2",
        "z3": {
            "memory": 29323264,
            "run_time": 0.07435393333435059,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 145 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11354112,
            "run_time": 0.04704427719116211,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36155392,
            "run_time": 0.10858011245727539,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 145 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 200130560,
            "run_time": 1.2975542545318604,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 51,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 12,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 4,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @parameter0: org.javacc.utils.Token",
            "r2 := @parameter1: int[][]",
            "r33 := @parameter2: java.lang.String[]",
            "r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"line.separator\", \"\\n\")",
            "$r1 = new java.lang.StringBuffer",
            "specialinvoke $r1.<java.lang.StringBuffer: void <init>()>()",
            "i11 = 0",
            "i12 = 0",
            "$i0 = lengthof r2",
            "if i12 >= $i0 goto r66 = \"Encountered \\\"\"",
            "r66 = \"Encountered \\\"\"",
            "r67 = r3.<org.javacc.utils.Token: org.javacc.utils.Token next>",
            "i15 = 0",
            "if i15 >= i11 goto $r4 = new java.lang.StringBuilder",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r66)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" at line \")",
            "$r6 = r3.<org.javacc.utils.Token: org.javacc.utils.Token next>",
            "$i1 = $r6.<org.javacc.utils.Token: int beginLine>",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", column \")",
            "$r9 = r3.<org.javacc.utils.Token: org.javacc.utils.Token next>",
            "$i2 = $r9.<org.javacc.utils.Token: int beginColumn>",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)",
            "$r52 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r53 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i3 = lengthof r2",
            "if $i3 != 1 goto $r16 = new java.lang.StringBuilder",
            "$r25 = new java.lang.StringBuilder",
            "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53)",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Was expecting:\")",
            "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")",
            "r71 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()",
            "goto [?= $r21 = new java.lang.StringBuilder]",
            "$r21 = new java.lang.StringBuilder",
            "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()",
            "$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r22 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r30 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r30"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.TokenMgrError__LexicalError__-1197374142\\1692.smt2",
        "z3": {
            "memory": 33120256,
            "run_time": 0.05567765235900879,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var507!1 () String\r\n    \"Lexical error at line , column \")\r\n  (define-fun var78 () String\r\n    (str.++ var2393!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var1259)\r\n        \", column \"\r\n        (str.from_int var560)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"\r\n        \"after : \"\"\"\r\n        (var1493_addEscapes/-2068437822 var1171)))\r\n  (define-fun var507 () String\r\n    (str.++ var2393!1 \"Lexical error at line \" (str.from_int var1259) \", column \"))\r\n  (define-fun var2393 () String\r\n    String-init)\r\n  (define-fun var2865 () String\r\n    (str.++ var2393!1 \"Lexical error at line \"))\r\n  (define-fun var3462 () Int\r\n    0)\r\n  (define-fun var1259 () Int\r\n    (- 2))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1171 () String\r\n    \"\")\r\n  (define-fun var3914 () Int\r\n    0)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2112 () String\r\n    \"<EOF> \")\r\n  (define-fun var2333 () String\r\n    (str.++ var2393!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var1259)\r\n        \", column \"\r\n        (str.from_int var560)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"\r\n        \"after : \"\"\"))\r\n  (define-fun null-Int () Int\r\n    (- 1))\r\n  (define-fun var99 () String\r\n    (str.++ var2393!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var1259)\r\n        \", column \"\r\n        (str.from_int var560)\r\n        \".  Encountered: \"))\r\n  (define-fun var524 () String\r\n    (var1493_addEscapes/-2068437822 var1171))\r\n  (define-fun var945 () String\r\n    (str.++ var2393!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var1259)\r\n        \", column \"\r\n        (str.from_int var560)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"\r\n        \"after : \"\"\"\r\n        (var1493_addEscapes/-2068437822 var1171)\r\n        \"\"\"\"))\r\n  (define-fun var246 () String\r\n    (str.++ var2393!1 \"Lexical error at line \" (str.from_int var1259)))\r\n  (define-fun var3576 () String\r\n    (str.++ var2393!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var1259)\r\n        \", column \"\r\n        (str.from_int var560)))\r\n  (define-fun var3780 () String\r\n    (str.++ var2393!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var1259)\r\n        \", column \"\r\n        (str.from_int var560)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"\r\n        \"after : \"\"\"\r\n        (var1493_addEscapes/-2068437822 var1171)\r\n        \"\"\"\"))\r\n  (define-fun var2865!1 () String\r\n    \"Lexical error at line \")\r\n  (define-fun var3167 () String\r\n    (str.++ var2393!1\r\n        \"Lexical error at line \"\r\n        (str.from_int var1259)\r\n        \", column \"\r\n        (str.from_int var560)\r\n        \".  Encountered: \"\r\n        \"<EOF> \"))\r\n  (define-fun var560 () Int\r\n    0)\r\n  (define-fun var78!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: <EOF> after : \"\"\"\"\")\r\n  (define-fun var2393!1 () String\r\n    \"\")\r\n  (define-fun var2393!2 () String\r\n    \"Lexical error at line \")\r\n  (define-fun var3576!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: \")\r\n  (define-fun var246!1 () String\r\n    \"Lexical error at line , column \")\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var1699 () Bool\r\n    true)\r\n  (define-fun var3167!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: <EOF> after : \"\"\")\r\n  (define-fun var99!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: <EOF> \")\r\n  (define-fun var2333!1 () String\r\n    \"Lexical error at line , column 0.  Encountered: <EOF> after : \"\"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1493_addEscapes/-2068437822 ((x!0 String)) String\r\n    \"\")\r\n)\r\n(error \"line 82 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11362304,
            "run_time": 0.07608437538146973,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3628 is 1\r\n; rep: (as @var3628_0 var3628)\r\n; cardinality of var1493 is 1\r\n; rep: (as @var1493_0 var1493)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var1493_addEscapes/-2068437822 ((BOUND_VARIABLE_2032 String)) String \"\")\r\n(define-fun null-Bool () Bool false)\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1699 () Bool true)\r\n(define-fun var3914 () Int (- 1))\r\n(define-fun var1259 () Int (- 1))\r\n(define-fun var560 () Int (- 1))\r\n(define-fun var1171 () String \"\")\r\n(define-fun var3462 () Int (- 1))\r\n(define-fun var2393!1 () String \"\")\r\n(define-fun var2393!2 () String \"Lexical error at line \")\r\n(define-fun var2865!1 () String \"Lexical error at line \")\r\n(define-fun var246!1 () String \"Lexical error at line , column \")\r\n(define-fun var507!1 () String \"Lexical error at line , column \")\r\n(define-fun var3576!1 () String \"Lexical error at line , column .  Encountered: \")\r\n(define-fun var99!1 () String \"Lexical error at line , column .  Encountered: <EOF> \")\r\n(define-fun var3167!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \"\"\")\r\n(define-fun var2333!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \"\"\")\r\n(define-fun var78!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \"\"\"\"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39362560,
            "run_time": 0.1729447841644287,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 81 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 82 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 211087360,
            "run_time": 1.3704509735107422,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var78!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \\u{0}22\\u{0}22\")\r\n  (define-fun var2333!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \\u{0}22\")\r\n  (define-fun var3167!1 () String \"Lexical error at line , column .  Encountered: <EOF> after : \\u{0}22\")\r\n  (define-fun var99!1 () String \"Lexical error at line , column .  Encountered: <EOF> \")\r\n  (define-fun var3576!1 () String \"Lexical error at line , column .  Encountered: \")\r\n  (define-fun var507!1 () String \"Lexical error at line , column \")\r\n  (define-fun var246!1 () String \"Lexical error at line , column \")\r\n  (define-fun var2865!1 () String \"Lexical error at line \")\r\n  (define-fun var2393!2 () String \"Lexical error at line \")\r\n  (define-fun var2393!1 () String \"\")\r\n  (define-fun var3462 () Int 1)\r\n  (define-fun var1171 () String \" <EOF> \")\r\n  (define-fun var560 () Int (- 6))\r\n  (define-fun var1259 () Int (- 6))\r\n  (define-fun var3914 () Int 1)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun var1699 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n  (define-fun abbrev_109 ((x!0 Int)) String (ite (= x!0 0) \"Lexical error at line , column .  Encountered: \" \"\"))\r\n  (define-fun abbrev_108 ((x!0 Int)) String (ite (= x!0 0) \"Lexical error at line \" \"\"))\r\n  (define-fun var1493_addEscapes/-2068437822 ((x!0 String)) String (ite (= x!0 \" <EOF> \") \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 29,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "z0 := @parameter0: boolean",
            "i3 := @parameter1: int",
            "i0 := @parameter2: int",
            "i1 := @parameter3: int",
            "r16 := @parameter4: java.lang.String",
            "c2 := @parameter5: char",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r1 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Lexical error at line \")",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", column \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)",
            "$r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".  Encountered: \")",
            "if z0 == 0 goto $r24 = new java.lang.StringBuilder",
            "$r22 = \"<EOF> \"",
            "goto [?= $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)]",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"after : \\\"\")",
            "$r17 = staticinvoke <org.javacc.utils.TokenMgrError: java.lang.String addEscapes(java.lang.String)>(r16)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r21"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.RStringLiteral__DumpNfaStartStatesCode__1508414857\\2051.smt2",
        "z3": {
            "memory": 32681984,
            "run_time": 60.007468461990356,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11354112,
            "run_time": 0.03009629249572754,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3962 is 2\r\n; rep: (as @var3962_0 var3962)\r\n; rep: (as @var3962_1 var3962)\r\n; cardinality of var1072 is 2\r\n; rep: (as @var1072_0 var1072)\r\n; rep: (as @var1072_1 var1072)\r\n; cardinality of var2487 is 1\r\n; rep: (as @var2487_0 var2487)\r\n; cardinality of var3866 is 1\r\n; rep: (as @var3866_0 var3866)\r\n; cardinality of var2260 is 1\r\n; rep: (as @var2260_0 var2260)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1430969082 ((BOUND_VARIABLE_1676 String)) void (as @void_0 void))\r\n(define-fun var3866_getLongType/-387263599 () String \"\")\r\n(define-fun var3866_isOutputLanguageJava/1735442213 () Bool false)\r\n(define-fun var3866_getOutputLanguage/-1523304050 () String \"\")\r\n(define-fun var2260-init () var2260 (as @var2260_0 var2260))\r\n(define-fun <init>/-1084991535 ((BOUND_VARIABLE_1679 var2260) (BOUND_VARIABLE_1680 String)) void (as @void_0 void))\r\n(define-fun null-__Array__Int__var3962__ () (Array Int var3962) (store ((as const (Array Int var3962)) (as @var3962_1 var3962)) 0 (as @var3962_0 var3962)))\r\n(define-fun null-var1072 () var1072 (as @var1072_0 var1072))\r\n(define-fun var2487-maxStrKind () Int (- 64))\r\n(define-fun var2825 () (Array Int var3962) (store ((as const (Array Int var3962)) (as @var3962_0 var3962)) 0 (as @var3962_1 var3962)))\r\n(define-fun var2564 () var1072 (as @var1072_1 var1072))\r\n(define-fun var316!1 () String \"\")\r\n(define-fun var1963!1 () String \"\")\r\n(define-fun var1963!2 () String \"\")\r\n(define-fun var669!1 () String \"\")\r\n(define-fun var2992!1 () String \" active\")\r\n(define-fun var1104!1 () String \" active\")\r\n(define-fun var2711!1 () String \" active0)\")\r\n(define-fun var316!2 () String \"\")\r\n(define-fun var253!1 () String \"\")\r\n(define-fun var253!2 () String \"Output language type not fully implemented : \")\r\n(define-fun var3305!1 () String \"Output language type not fully implemented : \")\r\n(define-fun var2436!1 () var2260 (as @var2260_0 var2260))\r\n(define-fun var1138!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38899712,
            "run_time": 0.09315371513366699,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 114 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 115 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182505472,
            "run_time": 0.991525411605835,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1072/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.RStringLiteral__DumpNfaStartStatesCode__1508414857\\2051.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2711!1 =\r\n     concat(all_42_5, \")\")\r\n   var2992!1 =\r\n     concat(var3866_getLongType/-387263599, \" active\")\r\n   var3305!1 =\r\n     concat(\"Output language type not fully implemented : \", var3866_getOutputLanguage/-1523304050)\r\n   var1104!1 =\r\n     concat(all_39_3, rhs)\r\n   var316!2 =\r\n     concat(var316!1, rhs)\r\n   all_42_5 =\r\n     concat(all_42_6, \"0\")\r\n   all_39_3 =\r\n     concat(var3866_getLongType/-387263599, \" active\")\r\n   all_42_6 =\r\n     concat(var3866_getLongType/-387263599, \" active\")\r\n\r\n717ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 32,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r109 := @parameter0: java.util.Hashtable[]",
            "r16 := @parameter1: org.javacc.parser.CodeGenerator",
            "$i0 = <org.javacc.parser.RStringLiteral: int maxStrKind>",
            "if $i0 != 0 goto $i1 = <org.javacc.parser.RStringLiteral: int maxStrKind>",
            "$i1 = <org.javacc.parser.RStringLiteral: int maxStrKind>",
            "$i2 = $i1 / 64",
            "i3 = $i2 + 1",
            "z14 = 0",
            "z17 = 0",
            "z16 = 0",
            "$r0 = new java.lang.StringBuffer",
            "specialinvoke $r0.<java.lang.StringBuffer: void <init>()>()",
            "i22 = 0",
            "$i4 = i3 - 1",
            "if i22 >= $i4 goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")",
            "$r2 = staticinvoke <org.javacc.parser.Options: java.lang.String getLongType()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" active\")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i22)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8)",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean isOutputLanguageJava()>()",
            "if $z0 == 0 goto $r9 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r9 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$z1 = virtualinvoke $r9.<java.lang.String: boolean equals(java.lang.Object)>(\"c++\")",
            "if $z1 == 0 goto $r10 = new java.lang.RuntimeException",
            "$r10 = new java.lang.RuntimeException",
            "$r11 = new java.lang.StringBuilder",
            "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Output language type not fully implemented : \")",
            "$r12 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r10.<java.lang.RuntimeException: void <init>(java.lang.String)>($r15)",
            "throw $r10"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OutputFileGenerator__process__-849902221\\1840.smt2",
        "z3": {
            "memory": 33509376,
            "run_time": 0.08904719352722168,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2365:\r\n  ;;   var2365!val!1 var2365!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2365!val!1 () var2365)\r\n  (declare-fun var2365!val!0 () var2365)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2365)) (or (= x var2365!val!1) (= x var2365!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3648:\r\n  ;;   var3648!val!1 var3648!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3648!val!1 () var3648)\r\n  (declare-fun var3648!val!0 () var3648)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3648)) (or (= x var3648!val!1) (= x var3648!val!0)))\r\n  ;; -----------\r\n  ;; universe for var431:\r\n  ;;   var431!val!0 var431!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var431!val!0 () var431)\r\n  (declare-fun var431!val!1 () var431)\r\n  ;; cardinality constraint:\r\n  (forall ((x var431)) (or (= x var431!val!0) (= x var431!val!1)))\r\n  ;; -----------\r\n  (define-fun var60 () var431\r\n    var431!val!0)\r\n  (define-fun var913 () Bool\r\n    false)\r\n  (define-fun var3645 () String\r\n    (trim-right (trim-left (peekLine/2102330122 var2135 var60))))\r\n  (define-fun var582 () Bool\r\n    (str.prefixof \"#if\"\r\n              (trim-right (trim-left (peekLine/2102330122 var2135 var60)))))\r\n  (define-fun null-var431 () var431\r\n    var431!val!1)\r\n  (define-fun var2292 () String\r\n    (peekLine/2102330122 var2135 var60))\r\n  (define-fun null-String () String\r\n    \"B\")\r\n  (define-fun var2135 () var2365\r\n    var2365!val!0)\r\n  (define-fun var1745 () var3648\r\n    var3648!val!0)\r\n  (define-fun var3392 () String\r\n    (trim-right (trim-left (peekLine/2102330122 var2135 var60))))\r\n  (define-fun null-Bool () Bool\r\n    true)\r\n  (define-fun null-var2365 () var2365\r\n    var2365!val!1)\r\n  (define-fun var342 () String\r\n    (peekLine/2102330122 var2135 var60))\r\n  (define-fun var3851 () Bool\r\n    (str.prefixof \"#\" (trim-right (trim-left (peekLine/2102330122 var2135 var60)))))\r\n  (define-fun null-var3648 () var3648\r\n    var3648!val!1)\r\n  (define-fun var1346 () String\r\n    (peekLine/2102330122 var2135 var60))\r\n  (define-fun var1745!1 () var3648\r\n    var3648!val!1)\r\n  (define-fun peekLine/2102330122 ((x!0 var2365) (x!1 var431)) String\r\n    \"#\")\r\n  (define-fun flush/-1073200041 ((x!0 var3648)) void\r\n    void!val!0)\r\n)\r\n(error \"line 61 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 46108672,
            "run_time": 3.866955041885376,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(\r\n; cardinality of var2365 is 2\r\n; rep: (as @var2365_0 var2365)\r\n; rep: (as @var2365_1 var2365)\r\n; cardinality of var431 is 2\r\n; rep: (as @var431_0 var431)\r\n; rep: (as @var431_1 var431)\r\n; cardinality of var3648 is 2\r\n; rep: (as @var3648_0 var3648)\r\n; rep: (as @var3648_1 var3648)\r\n; cardinality of var3486 is 1\r\n; rep: (as @var3486_0 var3486)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peekLine/2102330122 ((_arg_1 var2365) (_arg_2 var431)) String \"#\")\r\n(define-fun flush/-1073200041 ((BOUND_VARIABLE_38283 var3648)) void (as @void_0 void))\r\n(define-fun null-var2365 () var2365 (as @var2365_0 var2365))\r\n(define-fun null-var431 () var431 (as @var431_0 var431))\r\n(define-fun null-var3648 () var3648 (as @var3648_0 var3648))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun null-String () String \"\")\r\n(define-fun var2135 () var2365 (as @var2365_1 var2365))\r\n(define-fun var60 () var431 (as @var431_1 var431))\r\n(define-fun var1745 () var3648 (as @var3648_1 var3648))\r\n(define-fun var913 () Bool false)\r\n(define-fun var1745!1 () var3648 (as @var3648_0 var3648))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36179968,
            "run_time": 0.04577779769897461,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 60 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 61 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 329121792,
            "run_time": 1.8411762714385986,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_293_2, all_293_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.utils.OutputFileGenerator__process__-849902221\\1840.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming that recursive function trim-left is partial\r\nWarning: assuming that recursive function trim-right is partial\r\nDecomposing equation:\r\n  all_81_2 . all_84_4 == all_55_2 . all_58_4\r\nAssuming all_58_4 = \"\"\r\nAssuming all_216_5 = \"\"\r\nAssuming all_331_4 = \"\"\r\nAssuming all_259_5 = \"\"\r\nApplying Nielsen transformation (# word equations: 1), splitting all_216_5\r\n  all_216_5 . all_213_2 == all_259_5 . all_256_2\r\nAssuming all_213_2 = \"\"\r\nAssuming all_331_5 = \"\"\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n1559ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>",
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: java.lang.String trim()>",
            "<java.lang.String: boolean startsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 2,
            "<java.lang.String: boolean startsWith(java.lang.String)>": 2
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.OutputFileGenerator",
            "r1 := @parameter0: java.io.BufferedReader",
            "r2 := @parameter1: java.io.PrintWriter",
            "z2 := @parameter2: boolean",
            "$r8 = specialinvoke r0.<org.javacc.utils.OutputFileGenerator: java.lang.String peekLine(java.io.BufferedReader)>(r1)",
            "if $r8 == null goto virtualinvoke r2.<java.io.PrintWriter: void flush()>()",
            "$r3 = specialinvoke r0.<org.javacc.utils.OutputFileGenerator: java.lang.String peekLine(java.io.BufferedReader)>(r1)",
            "$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String trim()>()",
            "$z0 = virtualinvoke $r4.<java.lang.String: boolean startsWith(java.lang.String)>(\"#if\")",
            "if $z0 == 0 goto $r5 = specialinvoke r0.<org.javacc.utils.OutputFileGenerator: java.lang.String peekLine(java.io.BufferedReader)>(r1)",
            "$r5 = specialinvoke r0.<org.javacc.utils.OutputFileGenerator: java.lang.String peekLine(java.io.BufferedReader)>(r1)",
            "$r6 = virtualinvoke $r5.<java.lang.String: java.lang.String trim()>()",
            "$z1 = virtualinvoke $r6.<java.lang.String: boolean startsWith(java.lang.String)>(\"#\")",
            "if $z1 == 0 goto r7 = specialinvoke r0.<org.javacc.utils.OutputFileGenerator: java.lang.String getLine(java.io.BufferedReader)>(r1)",
            "goto [?= virtualinvoke r2.<java.io.PrintWriter: void flush()>()]",
            "virtualinvoke r2.<java.io.PrintWriter: void flush()>()",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OutputFileGenerator__processIf__-324466858\\1849.smt2",
        "z3": {
            "memory": 38416384,
            "run_time": 0.5074417591094971,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var414:\r\n  ;;   var414!val!0 var414!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var414!val!0 () var414)\r\n  (declare-fun var414!val!1 () var414)\r\n  ;; cardinality constraint:\r\n  (forall ((x var414)) (or (= x var414!val!0) (= x var414!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2962:\r\n  ;;   var2962!val!0 var2962!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2962!val!0 () var2962)\r\n  (declare-fun var2962!val!1 () var2962)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2962)) (or (= x var2962!val!0) (= x var2962!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2994:\r\n  ;;   var2994!val!0 var2994!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2994!val!0 () var2994)\r\n  (declare-fun var2994!val!1 () var2994)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2994)) (or (= x var2994!val!0) (= x var2994!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2994 () var2994\r\n    var2994!val!1)\r\n  (define-fun var1642 () var2994\r\n    var2994!val!0)\r\n  (define-fun null-var414 () var414\r\n    var414!val!1)\r\n  (define-fun var3038 () var2394\r\n    var2394-init)\r\n  (define-fun var3082 () Bool\r\n    var414-$assertionsDisabled)\r\n  (define-fun var1632 () Bool\r\n    true)\r\n  (define-fun var83 () String\r\n    (getLine/-1719498253 var3662 var2579))\r\n  (define-fun var2021 () String\r\n    (let ((a!1 (trim-left (trim-right (trim-left (getLine/-1719498253\r\n                                               var3662\r\n                                               var2579))))))\r\n  (trim-right a!1)))\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var3437 () Bool\r\n    (let ((a!1 (trim-left (trim-right (trim-left (getLine/-1719498253\r\n                                               var3662\r\n                                               var2579))))))\r\n  (str.prefixof \"#if\" (trim-right a!1))))\r\n  (define-fun var3662 () var414\r\n    var414!val!0)\r\n  (define-fun var1074 () String\r\n    (trim-right (trim-left (getLine/-1719498253 var3662 var2579))))\r\n  (define-fun null-var2962 () var2962\r\n    var2962!val!1)\r\n  (define-fun var2579 () var2962\r\n    var2962!val!0)\r\n  (define-fun var414-$assertionsDisabled () Bool\r\n    false)\r\n  (define-fun var2394-init () var2394\r\n    var2394!val!0)\r\n  (define-fun var3038!1 () var2394\r\n    var2394!val!0)\r\n  (define-fun getLine/-1719498253 ((x!0 var414) (x!1 var2962)) String\r\n    \"\")\r\n  (define-fun <init>/-208190597 ((x!0 var2394)) void\r\n    void!val!0)\r\n)\r\n(error \"line 53 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 41226240,
            "run_time": 2.7052078247070312,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(\r\n; cardinality of var414 is 2\r\n; rep: (as @var414_0 var414)\r\n; rep: (as @var414_1 var414)\r\n; cardinality of var2962 is 2\r\n; rep: (as @var2962_0 var2962)\r\n; rep: (as @var2962_1 var2962)\r\n; cardinality of var2994 is 2\r\n; rep: (as @var2994_0 var2994)\r\n; rep: (as @var2994_1 var2994)\r\n; cardinality of var2394 is 1\r\n; rep: (as @var2394_0 var2394)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getLine/-1719498253 ((_arg_1 var414) (_arg_2 var2962)) String \"\")\r\n(define-fun var2394-init () var2394 (as @var2394_0 var2394))\r\n(define-fun <init>/-208190597 ((BOUND_VARIABLE_30718 var2394)) void (as @void_0 void))\r\n(define-fun null-var414 () var414 (as @var414_0 var414))\r\n(define-fun null-var2962 () var2962 (as @var2962_0 var2962))\r\n(define-fun null-var2994 () var2994 (as @var2994_0 var2994))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var414-$assertionsDisabled () Bool false)\r\n(define-fun var3662 () var414 (as @var414_1 var414))\r\n(define-fun var2579 () var2962 (as @var2962_1 var2962))\r\n(define-fun var1642 () var2994 (as @var2994_1 var2994))\r\n(define-fun var1632 () Bool false)\r\n(define-fun var3038!1 () var2394 (as @var2394_0 var2394))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36818944,
            "run_time": 0.04666709899902344,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 52 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 53 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 343048192,
            "run_time": 2.057013750076294,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_329_2, all_329_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.utils.OutputFileGenerator__processIf__-324466858\\1849.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming that recursive function trim-left is partial\r\nWarning: assuming that recursive function trim-right is partial\r\nDecomposing equation:\r\n  all_303_2 . all_306_4 == all_186_2 . all_189_4\r\nDecomposing equation:\r\n  all_366_2 . all_369_4 == all_186_2 . all_189_4\r\nAssuming all_176_5 = \"\"\r\nAssuming all_75_5 = \"\"\r\nAssuming all_189_4 = \"\"\r\nAssuming all_173_2 = \"\"\r\nAssuming all_60_4 = \"\"\r\nAssuming all_245_5 = \"\"\r\nAssuming all_332_4 = \"\"\r\nApplying Nielsen transformation (# word equations: 1), splitting all_329_2\r\n  all_332_5 . all_329_2 == all_245_5 . all_242_2\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n1799ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>",
            "<java.lang.String: java.lang.String trim()>",
            "<java.lang.String: boolean startsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 2,
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.OutputFileGenerator",
            "r1 := @parameter0: java.io.BufferedReader",
            "r5 := @parameter1: java.io.PrintWriter",
            "z1 := @parameter2: boolean",
            "$r2 = specialinvoke r0.<org.javacc.utils.OutputFileGenerator: java.lang.String getLine(java.io.BufferedReader)>(r1)",
            "r25 = virtualinvoke $r2.<java.lang.String: java.lang.String trim()>()",
            "$z0 = <org.javacc.utils.OutputFileGenerator: boolean $assertionsDisabled>",
            "if $z0 != 0 goto z7 = 0",
            "$r23 = virtualinvoke r25.<java.lang.String: java.lang.String trim()>()",
            "$z6 = virtualinvoke $r23.<java.lang.String: boolean startsWith(java.lang.String)>(\"#if\")",
            "if $z6 != 0 goto z7 = 0",
            "$r24 = new java.lang.AssertionError",
            "specialinvoke $r24.<java.lang.AssertionError: void <init>()>()",
            "throw $r24"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.JavaCCGlobals__makeToolNameList__830449084\\725-deviant-0.smt2",
        "z3": {
            "memory": 31768576,
            "run_time": 0.058882713317871094,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 42 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.03067302703857422,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36483072,
            "run_time": 0.0467529296875,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 42 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 240549888,
            "run_time": 60.01340293884277,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: java.lang.String substring(int,int)>",
            "<java.lang.String: int indexOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int)>": 3,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r7 = new java.util.ArrayList",
            "specialinvoke $r7.<java.util.ArrayList: void <init>()>()",
            "i9 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(10)",
            "$i14 = (int) -1",
            "if i9 != $i14 goto $i8 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(13)",
            "$i8 = virtualinvoke r1.<java.lang.String: int indexOf(int)>(13)",
            "i10 = $i8",
            "$i16 = (int) -1",
            "if $i8 != $i16 goto (branch)",
            "if i9 >= i10 goto $i11 = i10",
            "$i11 = i9",
            "goto [?= (branch)]",
            "if $i11 != 1000 goto r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i11)",
            "r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>(0, $i11)",
            "$i0 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58)",
            "$i18 = (int) -1",
            "if $i0 != $i18 goto $i1 = virtualinvoke r4.<java.lang.String: int indexOf(int)>(58)",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OutputFileGenerator__substituteWithConditional__-1283293091\\1759.smt2",
        "z3": {
            "memory": 31830016,
            "run_time": 0.07261538505554199,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1789:\r\n  ;;   var1789!val!1 var1789!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1789!val!1 () var1789)\r\n  (declare-fun var1789!val!0 () var1789)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1789)) (or (= x var1789!val!1) (= x var1789!val!0)))\r\n  ;; -----------\r\n  (define-fun var3046 () Int\r\n    (- 1))\r\n  (define-fun var2995 () Int\r\n    (str.indexof var3659 (str.from_code 58) 0))\r\n  (define-fun var2233 () String\r\n    String-init)\r\n  (define-fun var2718 () String\r\n    (str.++ var2233!1 \"No ':' separator in \" var3659))\r\n  (define-fun var2565 () var197\r\n    var197-init)\r\n  (define-fun var3472 () String\r\n    \"\")\r\n  (define-fun var3225 () String\r\n    (str.++ var2233!1 \"No ':' separator in \"))\r\n  (define-fun null-var1789 () var1789\r\n    var1789!val!1)\r\n  (define-fun var1285 () var1789\r\n    var1789!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var594 () String\r\n    (str.++ var2233!1 \"No ':' separator in \" var3659))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3659 () String\r\n    \"\")\r\n  (define-fun var2233!2 () String\r\n    \"No ':' separator in \")\r\n  (define-fun var2233!1 () String\r\n    \"\")\r\n  (define-fun var3225!1 () String\r\n    \"No ':' separator in \")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2565!1 () var197\r\n    var197!val!0)\r\n  (define-fun var197-init () var197\r\n    var197!val!0)\r\n  (define-fun var594!1 () String\r\n    \"\")\r\n  (define-fun <init>/-1557872005 ((x!0 var197) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 55 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.03032970428466797,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1789 is 2\r\n; rep: (as @var1789_0 var1789)\r\n; rep: (as @var1789_1 var1789)\r\n; cardinality of var2996 is 1\r\n; rep: (as @var2996_0 var2996)\r\n; cardinality of var197 is 1\r\n; rep: (as @var197_0 var197)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var197-init () var197 (as @var197_0 var197))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1557872005 ((BOUND_VARIABLE_722 var197) (BOUND_VARIABLE_723 String)) void (as @void_0 void))\r\n(define-fun null-var1789 () var1789 (as @var1789_0 var1789))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1285 () var1789 (as @var1789_1 var1789))\r\n(define-fun var3472 () String \"\")\r\n(define-fun var3659 () String \"\")\r\n(define-fun var2233!1 () String \"\")\r\n(define-fun var2233!2 () String \"No ':' separator in \")\r\n(define-fun var3225!1 () String \"No ':' separator in \")\r\n(define-fun var2565!1 () var197 (as @var197_0 var197))\r\n(define-fun var594!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38604800,
            "run_time": 0.1089627742767334,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1789:\n  ;;   var1789!val!1 var1789!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1789!val!1 () var1789)\n  (declare-fun var1789!val!0 () var1789)\n  ;; cardinality constraint:\n  (forall ((x var1789)) (or (= x var1789!val!1) (= x var1789!val!0)))\n  ;; -----------\n  (define-fun var3225!1 () String\n    \"No ':' separator in \")\n  (define-fun var3225 () String\n    (str.++ var2233!1 \"No ':' separator in \"))\n  (define-fun var594 () String\n    (str.++ var2233!1 \"No ':' separator in \" var3659))\n  (define-fun var2233!2 () String\n    \"No ':' separator in \")\n  (define-fun var2233!1 () String\n    \"\")\n  (define-fun var3472 () String\n    \"\\u{0}\")\n  (define-fun var2718 () String\n    (str.++ var2233!1 \"No ':' separator in \" var3659))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2233 () String\n    String-init)\n  (define-fun var1285 () var1789\n    var1789!val!0)\n  (define-fun var2995 () Int\n    (str.indexof var3659 (str.from_code 58) 0))\n  (define-fun null-var1789 () var1789\n    var1789!val!1)\n  (define-fun var3659 () String\n    \"\")\n  (define-fun var2565 () var197\n    var197-init)\n  (define-fun var3046 () Int\n    (- 1))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2565!1 () var197\n    var197!val!0)\n  (define-fun var197-init () var197\n    var197!val!0)\n  (define-fun var594!1 () String\n    \"\")\n  (define-fun <init>/-1557872005 ((x!0 var197) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 55 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163241984,
            "run_time": 0.944507360458374,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1789/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.utils.OutputFileGenerator__substituteWithConditional__-1283293091\\1759.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3225!1 =\r\n     concat(\"No \\u{0}27:\\u{0}27 separator in \", var3659)\r\n\r\n635ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int)>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.javacc.utils.OutputFileGenerator",
            "r2 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.lang.String",
            "i0 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(58)",
            "$i3 = (int) -1",
            "if i0 != $i3 goto $z0 = specialinvoke r1.<org.javacc.utils.OutputFileGenerator: boolean evaluate(java.lang.String)>(r2)",
            "$r13 = new java.io.IOException",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r9 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No \\':\\' separator in \")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r13.<java.io.IOException: void <init>(java.lang.String)>($r11)",
            "throw $r13"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OutputFileGenerator__substituteWithDefault__-477239912\\1783.smt2",
        "z3": {
            "memory": 30969856,
            "run_time": 0.07663559913635254,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1442:\r\n  ;;   var1442!val!1 var1442!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1442!val!1 () var1442)\r\n  (declare-fun var1442!val!0 () var1442)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1442)) (or (= x var1442!val!1) (= x var1442!val!0)))\r\n  ;; -----------\r\n  (define-fun var1359 () var1150\r\n    (options/1872402743 var1142))\r\n  (define-fun var1142 () var1442\r\n    var1442!val!0)\r\n  (define-fun var336 () String\r\n    \"A\")\r\n  (define-fun var373 () String\r\n    \"B\")\r\n  (define-fun var892 () String\r\n    (substitute/2075739974 var1142 var373))\r\n  (define-fun var1964 () var3496\r\n    (var1150_get/1088891777\r\n  (options/1872402743 var1142)\r\n  (cast-from-String-to-var3496 (trim-right (trim-left var336)))))\r\n  (define-fun null-var1442 () var1442\r\n    var1442!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var406 () String\r\n    (trim-right (trim-left var336)))\r\n  (define-fun null-var3496 () var3496\r\n    var3496!val!0)\r\n  (define-fun options/1872402743 ((x!0 var1442)) var1150\r\n    var1150!val!0)\r\n  (define-fun cast-from-String-to-var3496 ((x!0 String)) var3496\r\n    var3496!val!0)\r\n  (define-fun var1150_get/1088891777 ((x!0 var1150) (x!1 var3496)) var3496\r\n    var3496!val!0)\r\n  (define-fun substitute/2075739974 ((x!0 var1442) (x!1 String)) String\r\n    \"\")\r\n)\r\n(error \"line 39 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 22433792,
            "run_time": 0.18608903884887695,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(\r\n; cardinality of var1442 is 2\r\n; rep: (as @var1442_0 var1442)\r\n; rep: (as @var1442_1 var1442)\r\n; cardinality of var3534 is 1\r\n; rep: (as @var3534_0 var3534)\r\n; cardinality of var1150 is 1\r\n; rep: (as @var1150_0 var1150)\r\n; cardinality of var3496 is 1\r\n; rep: (as @var3496_0 var3496)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun options/1872402743 ((BOUND_VARIABLE_8843 var1442)) var1150 (as @var1150_0 var1150))\r\n(define-fun var1150_get/1088891777 ((BOUND_VARIABLE_8846 var1150) (BOUND_VARIABLE_8847 var3496)) var3496 (as @var3496_0 var3496))\r\n(define-fun cast-from-String-to-var3496 ((BOUND_VARIABLE_8850 String)) var3496 (as @var3496_0 var3496))\r\n(define-fun substitute/2075739974 ((BOUND_VARIABLE_8853 var1442) (BOUND_VARIABLE_8854 String)) String \"\")\r\n(define-fun null-var1442 () var1442 (as @var1442_0 var1442))\r\n(define-fun null-String () String \"!\")\r\n(define-fun null-var3496 () var3496 (as @var3496_0 var3496))\r\n(define-fun var1142 () var1442 (as @var1442_1 var1442))\r\n(define-fun var336 () String \"\")\r\n(define-fun var373 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37847040,
            "run_time": 0.0627899169921875,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1442:\n  ;;   var1442!val!1 var1442!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1442!val!1 () var1442)\n  (declare-fun var1442!val!0 () var1442)\n  ;; cardinality constraint:\n  (forall ((x var1442)) (or (= x var1442!val!1) (= x var1442!val!0)))\n  ;; -----------\n  ;; universe for var3496:\n  ;;   var3496!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3496!val!0 () var3496)\n  ;; cardinality constraint:\n  (forall ((x var3496)) (= x var3496!val!0))\n  ;; -----------\n  (define-fun null-var3496 () var3496\n    var3496!val!0)\n  (define-fun var373 () String\n    \"\\u{0}\")\n  (define-fun var1359 () var1150\n    (options/1872402743 var1142))\n  (define-fun var1964 () var3496\n    (var1150_get/1088891777\n  (options/1872402743 var1142)\n  (cast-from-String-to-var3496 (trim-right (trim-left var336)))))\n  (define-fun var892 () String\n    (substitute/2075739974 var1142 var373))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun null-var1442 () var1442\n    var1442!val!1)\n  (define-fun var1142 () var1442\n    var1442!val!0)\n  (define-fun var406 () String\n    (trim-right (trim-left var336)))\n  (define-fun var336 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun options/1872402743 ((x!0 var1442)) var1150\n    var1150!val!0)\n  (define-fun cast-from-String-to-var3496 ((x!0 String)) var3496\n    var3496!val!0)\n  (define-fun var1150_get/1088891777 ((x!0 var1150) (x!1 var3496)) var3496\n    var3496!val!0)\n  (define-fun substitute/2075739974 ((x!0 var1442) (x!1 String)) String\n    \"\")\n)\n(error \"line 39 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 211410944,
            "run_time": 0.9877336025238037,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_46_2, all_46_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.utils.OutputFileGenerator__substituteWithDefault__-477239912\\1783.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming that recursive function trim-left is partial\r\nWarning: assuming that recursive function trim-right is partial\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n744ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.utils.OutputFileGenerator",
            "r1 := @parameter0: java.lang.String",
            "r5 := @parameter1: java.lang.String",
            "$r2 = r0.<org.javacc.utils.OutputFileGenerator: java.util.Map options>",
            "$r3 = virtualinvoke r1.<java.lang.String: java.lang.String trim()>()",
            "r4 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>($r3)",
            "if r4 == null goto $r6 = specialinvoke r0.<org.javacc.utils.OutputFileGenerator: java.lang.String substitute(java.lang.String)>(r5)",
            "$r6 = specialinvoke r0.<org.javacc.utils.OutputFileGenerator: java.lang.String substitute(java.lang.String)>(r5)",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.OutputFileGenerator__substitute__2075739974\\1727.smt2",
        "z3": {
            "memory": 32784384,
            "run_time": 0.04266834259033203,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1062:\r\n  ;;   var1062!val!0 var1062!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1062!val!0 () var1062)\r\n  (declare-fun var1062!val!1 () var1062)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1062)) (or (= x var1062!val!0) (= x var1062!val!1)))\r\n  ;; -----------\r\n  (define-fun var3284 () String\r\n    \"\")\r\n  (define-fun var3355 () Int\r\n    (str.indexof var3284 \"${\" 0))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun null-var1062 () var1062\r\n    var1062!val!1)\r\n  (define-fun var487 () var1062\r\n    var1062!val!0)\r\n  (define-fun var3347 () Int\r\n    (- 1))\r\n)\r\n(error \"line 25 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.015175819396972656,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1062 is 2\r\n; rep: (as @var1062_0 var1062)\r\n; rep: (as @var1062_1 var1062)\r\n; cardinality of var823 is 1\r\n; rep: (as @var823_0 var823)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var1062 () var1062 (as @var1062_0 var1062))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var487 () var1062 (as @var1062_1 var1062))\r\n(define-fun var3284 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37122048,
            "run_time": 0.06232118606567383,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1062:\n  ;;   var1062!val!0 var1062!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1062!val!0 () var1062)\n  (declare-fun var1062!val!1 () var1062)\n  ;; cardinality constraint:\n  (forall ((x var1062)) (or (= x var1062!val!0) (= x var1062!val!1)))\n  ;; -----------\n  (define-fun var487 () var1062\n    var1062!val!0)\n  (define-fun null-var1062 () var1062\n    var1062!val!1)\n  (define-fun var3284 () String\n    \"$$\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3355 () Int\n    (str.indexof var3284 \"${\" 0))\n  (define-fun var3347 () Int\n    (- 1))\n)\n(error \"line 25 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164642816,
            "run_time": 0.7656064033508301,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3284 () String \"\")\r\n  (define-fun var487 () var1062 var1062!4)\r\n  (define-fun null-String () String \"{\")\r\n  (define-fun null-var1062 () var1062 var1062!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: int indexOf(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r9 := @this: org.javacc.utils.OutputFileGenerator",
            "r0 := @parameter0: java.lang.String",
            "$i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(\"${\")",
            "$i18 = (int) -1",
            "if $i0 != $i18 goto i14 = 1",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.LexGen__DumpFillToken__-1149223321\\1214.smt2",
        "z3": {
            "memory": 33787904,
            "run_time": 60.003159523010254,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 18530304,
            "run_time": 60.005144119262695,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37466112,
            "run_time": 60.003912687301636,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 123777024,
            "run_time": 0.48047399520874023,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.LexGen__DumpFillToken__-1149223321\\1214.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n275ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 56,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 5,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.LexGen",
            "d0 = staticinvoke <org.javacc.parser.JavaFiles: double getVersion(java.lang.String)>(\"Token.java\")",
            "$b0 = d0 cmpl 4.09",
            "$i2 = (int) $b0",
            "if $i2 <= 0 goto $z6 = 0",
            "$z6 = 1",
            "goto [?= z0 = $z6]",
            "z0 = $z6",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r58 = new java.lang.StringBuilder",
            "specialinvoke $r58.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = <org.javacc.parser.LexGen: java.lang.String staticString>",
            "$r4 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"protected Token jjFillToken()\")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r6",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r1)",
            "$r7 = newarray (java.lang.Object)[1]",
            "$r7[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r7)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"   final Token t;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r8)",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r9[0] = \"   final String curTokenImage;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r9)",
            "$z1 = <org.javacc.parser.LexGen: boolean keepLineCol>",
            "if $z1 == 0 goto $z2 = <org.javacc.parser.LexGen: boolean hasEmptyMatch>",
            "$z2 = <org.javacc.parser.LexGen: boolean hasEmptyMatch>",
            "if $z2 == 0 goto $r10 = newarray (java.lang.Object)[1]",
            "$r10 = newarray (java.lang.Object)[1]",
            "$r10[0] = \"   String im = jjstrLiteralImages[jjmatchedKind];\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r10)",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \"   curTokenImage = (im == null) ? input_stream.GetImage() : im;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r11)",
            "$z3 = <org.javacc.parser.LexGen: boolean keepLineCol>",
            "if $z3 == 0 goto $r57 = staticinvoke <org.javacc.parser.Options: java.lang.String getTokenFactory()>()",
            "$r57 = staticinvoke <org.javacc.parser.Options: java.lang.String getTokenFactory()>()",
            "$i1 = virtualinvoke $r57.<java.lang.String: int length()>()",
            "if $i1 <= 0 goto (branch)",
            "$r24 = newarray (java.lang.Object)[1]",
            "$r59 = new java.lang.StringBuilder",
            "specialinvoke $r59.<java.lang.StringBuilder: void <init>()>()",
            "$r27 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"   t = \")",
            "$r26 = staticinvoke <org.javacc.parser.Options: java.lang.String getTokenFactory()>()",
            "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)",
            "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".newToken(jjmatchedKind, curTokenImage);\")",
            "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r24[0] = $r30",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r24)",
            "goto [?= $z7 = <org.javacc.parser.LexGen: boolean keepLineCol>]",
            "$z7 = <org.javacc.parser.LexGen: boolean keepLineCol>",
            "if $z7 == 0 goto $r15 = newarray (java.lang.Object)[1]",
            "$r15 = newarray (java.lang.Object)[1]",
            "$r15[0] = \"\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r15)",
            "$r16 = newarray (java.lang.Object)[1]",
            "$r16[0] = \"   return t;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r16)",
            "$r17 = newarray (java.lang.Object)[1]",
            "$r17[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r17)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__PrintBoilerPlate__1887603335\\2796.smt2",
        "z3": {
            "memory": 33271808,
            "run_time": 60.00648474693298,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 17551360,
            "run_time": 60.01453137397766,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37031936,
            "run_time": 60.00849747657776,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 373481472,
            "run_time": 60.012184619903564,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 90,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.CodeGenerator",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z0 == 0 goto $r54 = \"\"",
            "$r54 = \"\"",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r54)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjCheckNAdd(int state)\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r5",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r1)",
            "$r6 = newarray (java.lang.Object)[1]",
            "$r6[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r6)",
            "$r7 = newarray (java.lang.Object)[1]",
            "$r7[0] = \"   if (jjrounds[state] != jjround)\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r7)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"   {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r8)",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r9[0] = \"      jjstateSet[jjnewStateCnt++] = state;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r9)",
            "$r10 = newarray (java.lang.Object)[1]",
            "$r10[0] = \"      jjrounds[state] = jjround;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r10)",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \"   }\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r11)",
            "$r12 = newarray (java.lang.Object)[1]",
            "$r12[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r12)",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r14 = new java.lang.StringBuilder",
            "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()",
            "$z1 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z1 == 0 goto $r55 = \"\"",
            "$r55 = \"\"",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjAddStates(int start, int end)\")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r13[0] = $r17",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r13)",
            "$r18 = newarray (java.lang.Object)[1]",
            "$r18[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r18)",
            "$r19 = newarray (java.lang.Object)[1]",
            "$r19[0] = \"   do {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r19)",
            "$r20 = newarray (java.lang.Object)[1]",
            "$r20[0] = \"      jjstateSet[jjnewStateCnt++] = jjnextStates[start];\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r20)",
            "$r21 = newarray (java.lang.Object)[1]",
            "$r21[0] = \"   } while (start++ != end);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r21)",
            "$r22 = newarray (java.lang.Object)[1]",
            "$r22[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r22)",
            "$r23 = newarray (java.lang.Object)[1]",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$z2 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z2 == 0 goto $r56 = \"\"",
            "$r56 = \"\"",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r56)",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private void jjCheckNAddTwoStates(int state1, int state2)\")",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r23[0] = $r27",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r23)",
            "$r28 = newarray (java.lang.Object)[1]",
            "$r28[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r28)",
            "$r29 = newarray (java.lang.Object)[1]",
            "$r29[0] = \"   jjCheckNAdd(state1);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r29)",
            "$r30 = newarray (java.lang.Object)[1]",
            "$r30[0] = \"   jjCheckNAdd(state2);\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r30)",
            "$r31 = newarray (java.lang.Object)[1]",
            "$r31[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r31)",
            "$r32 = newarray (java.lang.Object)[1]",
            "$r32[0] = \"\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r32)",
            "$z3 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesDualNeeded>",
            "if $z3 == 0 goto $z6 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesUnaryNeeded>",
            "$z6 = <org.javacc.parser.NfaState: boolean jjCheckNAddStatesUnaryNeeded>",
            "if $z6 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.LexGen__PrintClassHead__1012661446\\864.smt2",
        "z3": {
            "memory": 33366016,
            "run_time": 60.00257611274719,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 17408000,
            "run_time": 60.004289627075195,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36802560,
            "run_time": 0.04595303535461426,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 269 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 270 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 387395584,
            "run_time": 1.1323564052581787,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1065/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.LexGen__PrintClassHead__1012661446\\864.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_97_7 =\r\n     concat(all_97_8, \" */\")\r\n   var2306!1 =\r\n     concat(all_94_7, \" */\")\r\n   all_45_0 =\r\n     concat(all_87_5, \" void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }\")\r\n   all_43_0 =\r\n     concat(all_83_5, \" java.io.PrintStream debugStream = System.out;\")\r\n   var798!1 =\r\n     concat(all_80_4, \" void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }\")\r\n   var905!1 =\r\n     concat(all_77_4, \" java.io.PrintStream debugStream = System.out;\")\r\n   all_71_4 =\r\n     concat(var1544-cu_name, \"Constants\")\r\n   var1600!1 =\r\n     concat(var1544-cu_name, \"Constants\")\r\n   all_97_10 =\r\n     concat(var1065-tokMgrClassName, all_74_3)\r\n   all_94_9 =\r\n     concat(var1065-tokMgrClassName, all_74_3)\r\n   all_91_7 =\r\n     concat(var1065-tokMgrClassName, all_74_3)\r\n   var3858!1 =\r\n     concat(var1065-tokMgrClassName, all_74_3)\r\n   var3009!1 =\r\n     concat(\"  public \", var1065-staticString)\r\n   var1137!1 =\r\n     concat(\"  public \", var1065-staticString)\r\n   var1136!1 =\r\n     concat(\"/* \", all_91_6)\r\n   all_87_5 =\r\n     concat(\"  public \", var1065-staticString)\r\n   all_83_5 =\r\n     concat(\"  public \", var1065-staticString)\r\n   all_80_4 =\r\n     concat(\"  public \", var1065-staticString)\r\n   all_77_4 =\r\n     concat(\"  public \", var1065-staticString)\r\n   all_97_8 =\r\n     concat(\"/* \", all_97_9)\r\n   all_94_7 =\r\n     concat(\"/* \", all_94_8)\r\n\r\n892ms\r\n"
        },
        "undefined_function_count": 19,
        "assertion_count": 78,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 5,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 13,
            "<java.lang.StringBuilder: java.lang.String toString()>": 5
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.parser.LexGen",
            "z3 = 0",
            "$r0 = new java.util.ArrayList",
            "$r1 = <org.javacc.parser.JavaCCGlobals: java.util.List toolNames>",
            "specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1)",
            "interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(\"JavaCC\")",
            "$r3 = newarray (java.lang.Object)[1]",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/* \")",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = <org.javacc.parser.LexGen: java.lang.String tokMgrClassName>",
            "$r9 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r7 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$r8 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String getFileExtension(java.lang.String)>($r7)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r12 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String getIdString(java.util.List,java.lang.String)>($r0, $r11)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" */\")",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3[0] = $r16",
            "virtualinvoke r2.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r3)",
            "i4 = 0",
            "i5 = 1",
            "$r17 = <org.javacc.parser.JavaCCGlobals: java.util.List cu_to_insertion_point_1>",
            "$i0 = interfaceinvoke $r17.<java.util.List: int size()>()",
            "if $i0 > i4 goto $r18 = <org.javacc.parser.JavaCCGlobals: java.util.List cu_to_insertion_point_1>",
            "goto [?= $r31 = newarray (java.lang.Object)[1]]",
            "$r31 = newarray (java.lang.Object)[1]",
            "$r31[0] = \"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r31)",
            "$r32 = newarray (java.lang.Object)[1]",
            "$r32[0] = \"/** Token Manager. */\"",
            "virtualinvoke r2.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r32)",
            "if z3 == 0 goto $z4 = staticinvoke <org.javacc.parser.Options: boolean getSupportClassVisibilityPublic()>()",
            "$z4 = staticinvoke <org.javacc.parser.Options: boolean getSupportClassVisibilityPublic()>()",
            "if $z4 == 0 goto $r35 = <org.javacc.parser.LexGen: java.lang.String tokMgrClassName>",
            "$r35 = <org.javacc.parser.LexGen: java.lang.String tokMgrClassName>",
            "$r40 = newarray (java.lang.String)[0]",
            "$r33 = newarray (java.lang.String)[1]",
            "$r34 = new java.lang.StringBuilder",
            "specialinvoke $r34.<java.lang.StringBuilder: void <init>()>()",
            "$r36 = <org.javacc.parser.JavaCCGlobals: java.lang.String cu_name>",
            "$r37 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)",
            "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Constants\")",
            "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r33[0] = $r39",
            "virtualinvoke r2.<org.javacc.parser.LexGen: void genClassStart(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>(null, $r35, $r40, $r33)",
            "$r41 = <org.javacc.parser.JavaCCGlobals: java.util.List token_mgr_decls>",
            "if $r41 == null goto $z0 = staticinvoke <org.javacc.parser.Options: boolean getCommonTokenAction()>()",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean getCommonTokenAction()>()",
            "if $z0 == 0 goto $r83 = newarray (java.lang.Object)[1]",
            "$r83 = newarray (java.lang.Object)[1]",
            "$r83[0] = \"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r83)",
            "$r84 = newarray (java.lang.Object)[1]",
            "$r84[0] = \"  /** Debug output. */\"",
            "virtualinvoke r2.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r84)",
            "$r85 = newarray (java.lang.Object)[1]",
            "$r86 = new java.lang.StringBuilder",
            "specialinvoke $r86.<java.lang.StringBuilder: void <init>()>()",
            "$r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  public \")",
            "$r88 = <org.javacc.parser.LexGen: java.lang.String staticString>",
            "$r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88)",
            "$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" java.io.PrintStream debugStream = System.out;\")",
            "$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r85[0] = $r91",
            "virtualinvoke r2.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r85)",
            "$r92 = newarray (java.lang.Object)[1]",
            "$r92[0] = \"  /** Set debug output. */\"",
            "virtualinvoke r2.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r92)",
            "$r93 = newarray (java.lang.Object)[1]",
            "$r94 = new java.lang.StringBuilder",
            "specialinvoke $r94.<java.lang.StringBuilder: void <init>()>()",
            "$r95 = virtualinvoke $r94.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  public \")",
            "$r96 = <org.javacc.parser.LexGen: java.lang.String staticString>",
            "$r97 = virtualinvoke $r95.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r96)",
            "$r98 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" void setDebugStream(java.io.PrintStream ds) { debugStream = ds; }\")",
            "$r99 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r93[0] = $r99",
            "virtualinvoke r2.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r93)",
            "$z6 = staticinvoke <org.javacc.parser.Options: boolean getTokenManagerUsesParser()>()",
            "if $z6 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseEngine__buildPhase2Routine__1228412603\\1547.smt2",
        "z3": {
            "memory": 33488896,
            "run_time": 60.00916147232056,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 16461824,
            "run_time": 60.00612187385559,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36179968,
            "run_time": 0.0445098876953125,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 228 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 229 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 370221056,
            "run_time": 1.1602747440338135,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2919/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.ParseEngine__buildPhase2Routine__1228412603\\1547.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_42_0 =\r\n     concat(all_87_9, \"(int xla)\")\r\n   var1508!1 =\r\n     concat(all_84_8, \"(int xla)\")\r\n   var3828!1 =\r\n     concat(all_81_9, all_54_2)\r\n   var1139!1 =\r\n     concat(all_78_6, \" jj_2\")\r\n   all_75_4 =\r\n     concat(all_75_5, \"); }\")\r\n   var90!1 =\r\n     concat(all_72_5, var2735_getBooleanType/-2111917935)\r\n   var3629!1 =\r\n     concat(all_69_4, \"); }\")\r\n   var3350!1 =\r\n     concat(all_66_4, \"private \")\r\n   var2507!1 =\r\n     concat(all_63_3, \"()\")\r\n   var1392!1 =\r\n     concat(all_60_3, \"()\")\r\n   var2160!1 =\r\n     concat(\"    try { return (!jj_3\", all_54_2)\r\n   var3576!1 =\r\n     concat(\"  \", var1048_staticOpt/-1224446488)\r\n   all_87_9 =\r\n     concat(all_87_12, all_54_2)\r\n   all_84_8 =\r\n     concat(all_84_11, all_54_2)\r\n   all_81_9 =\r\n     concat(all_81_10, \" jj_2\")\r\n   all_78_6 =\r\n     concat(all_78_7, var2735_getBooleanType/-2111917935)\r\n   all_75_5 =\r\n     concat(all_75_6, \"()\")\r\n   all_72_5 =\r\n     concat(all_72_6, \"private \")\r\n   all_69_4 =\r\n     concat(all_69_5, \"()\")\r\n   all_63_3 =\r\n     concat(\"    try { return (!jj_3\", all_54_2)\r\n   all_60_3 =\r\n     concat(\"    try { return (!jj_3\", all_54_2)\r\n   all_66_4 =\r\n     concat(\"  \", var1048_staticOpt/-1224446488)\r\n   all_87_12 =\r\n     concat(all_87_13, \" jj_2\")\r\n   all_84_11 =\r\n     concat(all_84_12, \" jj_2\")\r\n   all_81_10 =\r\n     concat(all_81_11, var2735_getBooleanType/-2111917935)\r\n   all_78_7 =\r\n     concat(all_78_8, \"private \")\r\n   all_75_6 =\r\n     concat(\"    try { return (!jj_3\", all_54_2)\r\n   all_69_5 =\r\n     concat(\"    try { return (!jj_3\", all_54_2)\r\n   all_72_6 =\r\n     concat(\"  \", var1048_staticOpt/-1224446488)\r\n   all_87_13 =\r\n     concat(all_87_14, var2735_getBooleanType/-2111917935)\r\n   all_84_12 =\r\n     concat(all_84_13, var2735_getBooleanType/-2111917935)\r\n   all_81_11 =\r\n     concat(all_81_12, \"private \")\r\n   all_78_8 =\r\n     concat(\"  \", var1048_staticOpt/-1224446488)\r\n   all_87_14 =\r\n     concat(all_87_15, \"private \")\r\n   all_84_13 =\r\n     concat(all_84_14, \"private \")\r\n   all_81_12 =\r\n     concat(\"  \", var1048_staticOpt/-1224446488)\r\n   all_87_15 =\r\n     concat(\"  \", var1048_staticOpt/-1224446488)\r\n   all_84_14 =\r\n     concat(\"  \", var1048_staticOpt/-1224446488)\r\n\r\n905ms\r\n"
        },
        "undefined_function_count": 21,
        "assertion_count": 63,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 12,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.parser.ParseEngine",
            "r0 := @parameter0: org.javacc.parser.Lookahead",
            "r1 = virtualinvoke r0.<org.javacc.parser.Lookahead: org.javacc.parser.Expansion getLaExpansion()>()",
            "$z0 = r2.<org.javacc.parser.ParseEngine: boolean isJavaDialect>",
            "if $z0 == 0 goto $r5 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r51 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r49 = newarray (java.lang.Object)[1]",
            "$r50 = new java.lang.StringBuilder",
            "specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()",
            "$r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  \")",
            "$r52 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String staticOpt()>()",
            "$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52)",
            "$r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private \")",
            "$r55 = staticinvoke <org.javacc.parser.Options: java.lang.String getBooleanType()>()",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55)",
            "$r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" jj_2\")",
            "$r58 = r1.<org.javacc.parser.Expansion: java.lang.String internal_name>",
            "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58)",
            "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(int xla)\")",
            "$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r49[0] = $r62",
            "virtualinvoke $r51.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r49)",
            "goto [?= $r12 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>]",
            "$r12 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \" {\"",
            "virtualinvoke $r12.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r11)",
            "$r14 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r13[0] = \"    jj_la = xla; jj_lastpos = jj_scanpos = token;\"",
            "virtualinvoke $r14.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r13)",
            "r63 = \"\"",
            "r73 = \"\"",
            "r72 = \"\"",
            "$i0 = staticinvoke <org.javacc.parser.Options: int getDepthLimit()>()",
            "if $i0 <= 0 goto $z1 = r2.<org.javacc.parser.ParseEngine: boolean isJavaDialect>",
            "$z1 = r2.<org.javacc.parser.ParseEngine: boolean isJavaDialect>",
            "if $z1 == 0 goto $r16 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r39 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r37 = newarray (java.lang.Object)[1]",
            "$r38 = new java.lang.StringBuilder",
            "specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()",
            "$r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    try { return (!jj_3\")",
            "$r40 = r1.<org.javacc.parser.Expansion: java.lang.String internal_name>",
            "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)",
            "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"()\")",
            "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r72)",
            "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); }\")",
            "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r37[0] = $r46",
            "virtualinvoke $r39.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r37)",
            "$r48 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r47 = newarray (java.lang.Object)[1]",
            "$r47[0] = \"    catch(LookaheadSuccess ls) { return true; }\"",
            "virtualinvoke $r48.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r47)",
            "goto [?= $z2 = staticinvoke <org.javacc.parser.Options: boolean getErrorReporting()>()]",
            "$z2 = staticinvoke <org.javacc.parser.Options: boolean getErrorReporting()>()",
            "if $z2 == 0 goto $r65 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r65 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r66 = newarray (java.lang.Object)[1]",
            "$r66[0] = \"  }\"",
            "virtualinvoke $r65.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r66)",
            "$r67 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r68 = newarray (java.lang.Object)[1]",
            "$r68[0] = \"\"",
            "virtualinvoke $r67.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r68)",
            "$r69 = new org.javacc.parser.Phase3Data",
            "$i3 = virtualinvoke r0.<org.javacc.parser.Lookahead: int getAmount()>()",
            "specialinvoke $r69.<org.javacc.parser.Phase3Data: void <init>(org.javacc.parser.Expansion,int)>(r1, $i3)",
            "$r70 = r2.<org.javacc.parser.ParseEngine: java.util.List phase3list>",
            "interfaceinvoke $r70.<java.util.List: boolean add(java.lang.Object)>($r69)",
            "$r71 = r2.<org.javacc.parser.ParseEngine: java.util.Hashtable phase3table>",
            "virtualinvoke $r71.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r69)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseEngine__buildPhase2Routine__1228412603\\1578.smt2",
        "z3": {
            "memory": 30752768,
            "run_time": 0.08780574798583984,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 227 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11333632,
            "run_time": 0.01529550552368164,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36323328,
            "run_time": 0.046250104904174805,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 227 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 362655744,
            "run_time": 1.1141138076782227,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 21,
        "assertion_count": 63,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 12,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.parser.ParseEngine",
            "r0 := @parameter0: org.javacc.parser.Lookahead",
            "r1 = virtualinvoke r0.<org.javacc.parser.Lookahead: org.javacc.parser.Expansion getLaExpansion()>()",
            "$z0 = r2.<org.javacc.parser.ParseEngine: boolean isJavaDialect>",
            "if $z0 == 0 goto $r5 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r51 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r49 = newarray (java.lang.Object)[1]",
            "$r50 = new java.lang.StringBuilder",
            "specialinvoke $r50.<java.lang.StringBuilder: void <init>()>()",
            "$r53 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  \")",
            "$r52 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String staticOpt()>()",
            "$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52)",
            "$r56 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private \")",
            "$r55 = staticinvoke <org.javacc.parser.Options: java.lang.String getBooleanType()>()",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r55)",
            "$r59 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" jj_2\")",
            "$r58 = r1.<org.javacc.parser.Expansion: java.lang.String internal_name>",
            "$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r58)",
            "$r61 = virtualinvoke $r60.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(int xla)\")",
            "$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r49[0] = $r62",
            "virtualinvoke $r51.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r49)",
            "goto [?= $r12 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>]",
            "$r12 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \" {\"",
            "virtualinvoke $r12.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r11)",
            "$r14 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r13[0] = \"    jj_la = xla; jj_lastpos = jj_scanpos = token;\"",
            "virtualinvoke $r14.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r13)",
            "r63 = \"\"",
            "r73 = \"\"",
            "r72 = \"\"",
            "$i0 = staticinvoke <org.javacc.parser.Options: int getDepthLimit()>()",
            "if $i0 <= 0 goto $z1 = r2.<org.javacc.parser.ParseEngine: boolean isJavaDialect>",
            "$z1 = r2.<org.javacc.parser.ParseEngine: boolean isJavaDialect>",
            "if $z1 == 0 goto $r16 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r16 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r15 = newarray (java.lang.Object)[1]",
            "$r15[0] = \"    jj_done = false;\"",
            "virtualinvoke $r16.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r15)",
            "$r19 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r17 = newarray (java.lang.Object)[1]",
            "$r18 = new java.lang.StringBuilder",
            "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()",
            "$r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    return (!jj_3\")",
            "$r20 = r1.<org.javacc.parser.Expansion: java.lang.String internal_name>",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"() || jj_done)\")",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r73)",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\";\")",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r17[0] = $r26",
            "virtualinvoke $r19.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r17)",
            "$z2 = staticinvoke <org.javacc.parser.Options: boolean getErrorReporting()>()",
            "if $z2 == 0 goto $r65 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r65 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r66 = newarray (java.lang.Object)[1]",
            "$r66[0] = \"  }\"",
            "virtualinvoke $r65.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r66)",
            "$r67 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r68 = newarray (java.lang.Object)[1]",
            "$r68[0] = \"\"",
            "virtualinvoke $r67.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r68)",
            "$r69 = new org.javacc.parser.Phase3Data",
            "$i3 = virtualinvoke r0.<org.javacc.parser.Lookahead: int getAmount()>()",
            "specialinvoke $r69.<org.javacc.parser.Phase3Data: void <init>(org.javacc.parser.Expansion,int)>(r1, $i3)",
            "$r70 = r2.<org.javacc.parser.ParseEngine: java.util.List phase3list>",
            "interfaceinvoke $r70.<java.util.List: boolean add(java.lang.Object)>($r69)",
            "$r71 = r2.<org.javacc.parser.ParseEngine: java.util.Hashtable phase3table>",
            "virtualinvoke $r71.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r69)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ParseEngine__buildPhase2Routine__1228412603\\1594.smt2",
        "z3": {
            "memory": 32288768,
            "run_time": 0.06124591827392578,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 209 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11296768,
            "run_time": 0.014696598052978516,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36315136,
            "run_time": 0.04604601860046387,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 209 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 351514624,
            "run_time": 1.135329008102417,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 19,
        "assertion_count": 57,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 8,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.parser.ParseEngine",
            "r0 := @parameter0: org.javacc.parser.Lookahead",
            "r1 = virtualinvoke r0.<org.javacc.parser.Lookahead: org.javacc.parser.Expansion getLaExpansion()>()",
            "$z0 = r2.<org.javacc.parser.ParseEngine: boolean isJavaDialect>",
            "if $z0 == 0 goto $r5 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r5 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r3 = newarray (java.lang.Object)[2]",
            "$r3[0] = \" inline bool \"",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"jj_2\")",
            "$r6 = r1.<org.javacc.parser.Expansion: java.lang.String internal_name>",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(int xla)\")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3[1] = $r10",
            "virtualinvoke $r5.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r3)",
            "$r12 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \" {\"",
            "virtualinvoke $r12.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r11)",
            "$r14 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r13[0] = \"    jj_la = xla; jj_lastpos = jj_scanpos = token;\"",
            "virtualinvoke $r14.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r13)",
            "r63 = \"\"",
            "r73 = \"\"",
            "r72 = \"\"",
            "$i0 = staticinvoke <org.javacc.parser.Options: int getDepthLimit()>()",
            "if $i0 <= 0 goto $z1 = r2.<org.javacc.parser.ParseEngine: boolean isJavaDialect>",
            "$z1 = r2.<org.javacc.parser.ParseEngine: boolean isJavaDialect>",
            "if $z1 == 0 goto $r16 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r39 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r37 = newarray (java.lang.Object)[1]",
            "$r38 = new java.lang.StringBuilder",
            "specialinvoke $r38.<java.lang.StringBuilder: void <init>()>()",
            "$r41 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    try { return (!jj_3\")",
            "$r40 = r1.<org.javacc.parser.Expansion: java.lang.String internal_name>",
            "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r40)",
            "$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"()\")",
            "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r72)",
            "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"); }\")",
            "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r37[0] = $r46",
            "virtualinvoke $r39.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r37)",
            "$r48 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r47 = newarray (java.lang.Object)[1]",
            "$r47[0] = \"    catch(LookaheadSuccess ls) { return true; }\"",
            "virtualinvoke $r48.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r47)",
            "goto [?= $z2 = staticinvoke <org.javacc.parser.Options: boolean getErrorReporting()>()]",
            "$z2 = staticinvoke <org.javacc.parser.Options: boolean getErrorReporting()>()",
            "if $z2 == 0 goto $r65 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r65 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r66 = newarray (java.lang.Object)[1]",
            "$r66[0] = \"  }\"",
            "virtualinvoke $r65.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r66)",
            "$r67 = r2.<org.javacc.parser.ParseEngine: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r68 = newarray (java.lang.Object)[1]",
            "$r68[0] = \"\"",
            "virtualinvoke $r67.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r68)",
            "$r69 = new org.javacc.parser.Phase3Data",
            "$i3 = virtualinvoke r0.<org.javacc.parser.Lookahead: int getAmount()>()",
            "specialinvoke $r69.<org.javacc.parser.Phase3Data: void <init>(org.javacc.parser.Expansion,int)>(r1, $i3)",
            "$r70 = r2.<org.javacc.parser.ParseEngine: java.util.List phase3list>",
            "interfaceinvoke $r70.<java.util.List: boolean add(java.lang.Object)>($r69)",
            "$r71 = r2.<org.javacc.parser.ParseEngine: java.util.Hashtable phase3table>",
            "virtualinvoke $r71.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r1, $r69)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__isOutputLanguageJava__1735442213\\2144.smt2",
        "z3": {
            "memory": 32354304,
            "run_time": 60.00759410858154,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11296768,
            "run_time": 0.016087770462036133,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2145 is 1\r\n; rep: (as @var2145_0 var2145)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2145_getOutputLanguage/-1523304050 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36372480,
            "run_time": 60.0107147693634,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167026688,
            "run_time": 0.6950278282165527,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 1,
        "api_sequence": [
            "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>": 1
        },
        "jimple_statements": [
            "$r0 = staticinvoke <org.javacc.parser.Options: java.lang.String getOutputLanguage()>()",
            "$z0 = virtualinvoke $r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(\"java\")",
            "return $z0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__isValidJavaTemplateType__-287863475\\2038.smt2",
        "z3": {
            "memory": 32747520,
            "run_time": 0.059621572494506836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var671 () String\r\n    (toLowerCase/1946809429 var2231 var3504-ENGLISH))\r\n  (define-fun var1887 () Bool\r\n    (var3706_contains/1636690605\r\n  var315-supportedJavaTemplateTypes\r\n  (cast-from-String-to-var292 (toLowerCase/1946809429 var2231 var3504-ENGLISH))))\r\n  (define-fun var2231 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var616 () var3504\r\n    var3504-ENGLISH)\r\n  (define-fun var2891 () var3706\r\n    var315-supportedJavaTemplateTypes)\r\n  (define-fun var315-supportedJavaTemplateTypes () var3706\r\n    var3706!val!0)\r\n  (define-fun var3504-ENGLISH () var3504\r\n    var3504!val!0)\r\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var3504)) String\r\n    \"\")\r\n  (define-fun var3706_contains/1636690605 ((x!0 var3706) (x!1 var292)) Bool\r\n    false)\r\n  (define-fun cast-from-String-to-var292 ((x!0 String)) var292\r\n    var292!val!0)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11337728,
            "run_time": 0.01503610610961914,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1205 is 1\r\n; rep: (as @var1205_0 var1205)\r\n; cardinality of var3706 is 1\r\n; rep: (as @var3706_0 var3706)\r\n; cardinality of var315 is 1\r\n; rep: (as @var315_0 var315)\r\n; cardinality of var3504 is 1\r\n; rep: (as @var3504_0 var3504)\r\n; cardinality of var292 is 1\r\n; rep: (as @var292_0 var292)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun toLowerCase/1946809429 ((BOUND_VARIABLE_507 String) (BOUND_VARIABLE_508 var3504)) String \"\")\r\n(define-fun var3706_contains/1636690605 ((BOUND_VARIABLE_511 var3706) (BOUND_VARIABLE_512 var292)) Bool false)\r\n(define-fun cast-from-String-to-var292 ((BOUND_VARIABLE_515 String)) var292 (as @var292_0 var292))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var315-supportedJavaTemplateTypes () var3706 (as @var3706_0 var3706))\r\n(define-fun var3504-ENGLISH () var3504 (as @var3504_0 var3504))\r\n(define-fun var2231 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37634048,
            "run_time": 0.07835841178894043,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var671 () String\n    (toLowerCase/1946809429 var2231 var3504-ENGLISH))\n  (define-fun var1887 () Bool\n    (var3706_contains/1636690605\n  var315-supportedJavaTemplateTypes\n  (cast-from-String-to-var292 (toLowerCase/1946809429 var2231 var3504-ENGLISH))))\n  (define-fun var616 () var3504\n    var3504-ENGLISH)\n  (define-fun var2231 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2891 () var3706\n    var315-supportedJavaTemplateTypes)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var315-supportedJavaTemplateTypes () var3706\n    var3706!val!0)\n  (define-fun var3504-ENGLISH () var3504\n    var3504!val!0)\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var3504)) String\n    \"\")\n  (define-fun var3706_contains/1636690605 ((x!0 var3706) (x!1 var292)) Bool\n    false)\n  (define-fun cast-from-String-to-var292 ((x!0 String)) var292\n    var292!val!0)\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141537280,
            "run_time": 0.5914309024810791,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2231 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto $r2 = <org.javacc.parser.Options: java.util.Set supportedJavaTemplateTypes>",
            "$r2 = <org.javacc.parser.Options: java.util.Set supportedJavaTemplateTypes>",
            "$r1 = <java.util.Locale: java.util.Locale ENGLISH>",
            "$r3 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1)",
            "$z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3)",
            "return $z0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Options__isValidOutputLanguage__-2131663030\\2017.smt2",
        "z3": {
            "memory": 7340032,
            "run_time": 0.0623021125793457,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var230 () Bool\r\n    (var689_contains/1636690605\r\n  var3320-supportedLanguages\r\n  (cast-from-String-to-var2748 (toLowerCase/1946809429 var3646 var1484-ENGLISH))))\r\n  (define-fun var1548 () var689\r\n    var3320-supportedLanguages)\r\n  (define-fun var3646 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1802 () var1484\r\n    var1484-ENGLISH)\r\n  (define-fun var515 () String\r\n    (toLowerCase/1946809429 var3646 var1484-ENGLISH))\r\n  (define-fun var1484-ENGLISH () var1484\r\n    var1484!val!0)\r\n  (define-fun var3320-supportedLanguages () var689\r\n    var689!val!0)\r\n  (define-fun var689_contains/1636690605 ((x!0 var689) (x!1 var2748)) Bool\r\n    false)\r\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var1484)) String\r\n    \"\")\r\n  (define-fun cast-from-String-to-var2748 ((x!0 String)) var2748\r\n    var2748!val!0)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11333632,
            "run_time": 0.015075445175170898,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1264 is 1\r\n; rep: (as @var1264_0 var1264)\r\n; cardinality of var689 is 1\r\n; rep: (as @var689_0 var689)\r\n; cardinality of var3320 is 1\r\n; rep: (as @var3320_0 var3320)\r\n; cardinality of var1484 is 1\r\n; rep: (as @var1484_0 var1484)\r\n; cardinality of var2748 is 1\r\n; rep: (as @var2748_0 var2748)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun toLowerCase/1946809429 ((BOUND_VARIABLE_507 String) (BOUND_VARIABLE_508 var1484)) String \"\")\r\n(define-fun var689_contains/1636690605 ((BOUND_VARIABLE_511 var689) (BOUND_VARIABLE_512 var2748)) Bool false)\r\n(define-fun cast-from-String-to-var2748 ((BOUND_VARIABLE_515 String)) var2748 (as @var2748_0 var2748))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3320-supportedLanguages () var689 (as @var689_0 var689))\r\n(define-fun var1484-ENGLISH () var1484 (as @var1484_0 var1484))\r\n(define-fun var3646 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37552128,
            "run_time": 0.07768464088439941,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var515 () String\n    (toLowerCase/1946809429 var3646 var1484-ENGLISH))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3646 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var230 () Bool\n    (var689_contains/1636690605\n  var3320-supportedLanguages\n  (cast-from-String-to-var2748 (toLowerCase/1946809429 var3646 var1484-ENGLISH))))\n  (define-fun var1802 () var1484\n    var1484-ENGLISH)\n  (define-fun var1548 () var689\n    var3320-supportedLanguages)\n  (define-fun var1484-ENGLISH () var1484\n    var1484!val!0)\n  (define-fun var3320-supportedLanguages () var689\n    var689!val!0)\n  (define-fun var689_contains/1636690605 ((x!0 var689) (x!1 var2748)) Bool\n    false)\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var1484)) String\n    \"\")\n  (define-fun cast-from-String-to-var2748 ((x!0 String)) var2748\n    var2748!val!0)\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141291520,
            "run_time": 0.5911214351654053,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3646 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto $r2 = <org.javacc.parser.Options: java.util.Set supportedLanguages>",
            "$r2 = <org.javacc.parser.Options: java.util.Set supportedLanguages>",
            "$r1 = <java.util.Locale: java.util.Locale ENGLISH>",
            "$r3 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1)",
            "$z0 = interfaceinvoke $r2.<java.util.Set: boolean contains(java.lang.Object)>($r3)",
            "return $z0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__visit__-1629179958\\208.smt2",
        "z3": {
            "memory": 32485376,
            "run_time": 60.00081181526184,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11296768,
            "run_time": 0.015405893325805664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var822 is 2\r\n; rep: (as @var822_0 var822)\r\n; rep: (as @var822_1 var822)\r\n; cardinality of var1249 is 2\r\n; rep: (as @var1249_0 var1249)\r\n; rep: (as @var1249_1 var1249)\r\n; cardinality of var3769 is 2\r\n; rep: (as @var3769_0 var3769)\r\n; rep: (as @var3769_1 var3769)\r\n; cardinality of var3135 is 1\r\n; rep: (as @var3135_0 var3135)\r\n; cardinality of var2389 is 1\r\n; rep: (as @var2389_0 var2389)\r\n; cardinality of var3726 is 1\r\n; rep: (as @var3726_0 var3726)\r\n; cardinality of var1924 is 1\r\n; rep: (as @var1924_0 var1924)\r\n; cardinality of var593 is 1\r\n; rep: (as @var593_0 var593)\r\n; cardinality of var1763 is 1\r\n; rep: (as @var1763_0 var1763)\r\n; cardinality of var2776 is 1\r\n; rep: (as @var2776_0 var2776)\r\n; cardinality of var1787 is 1\r\n; rep: (as @var1787_0 var1787)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var3769-to-var3135 ((BOUND_VARIABLE_774 var3769)) var3135 (as @var3135_0 var3135))\r\n(define-fun String-init () String \"\")\r\n(define-fun var1924-init () var1924 (as @var1924_0 var1924))\r\n(define-fun getOutputFileName/1535357316 ((BOUND_VARIABLE_777 var3135)) String \"\")\r\n(define-fun <init>/-1681595970 ((BOUND_VARIABLE_780 var1924) (BOUND_VARIABLE_781 String)) void (as @void_0 void))\r\n(define-fun getName/1128186653 ((BOUND_VARIABLE_784 var1924)) String \"\")\r\n(define-fun var593_getIdString/-267384014 ((BOUND_VARIABLE_787 var2389) (BOUND_VARIABLE_788 String)) String \"\")\r\n(define-fun var1763_booleanValue/1280995494 ((_arg_1 String)) Bool true)\r\n(define-fun println/1333914633 ((BOUND_VARIABLE_791 var3135) (BOUND_VARIABLE_792 String)) void (as @void_0 void))\r\n(define-fun print/-1652180213 ((BOUND_VARIABLE_795 var3135) (BOUND_VARIABLE_796 String)) void (as @void_0 void))\r\n(define-fun childrenAccept/-572725015 ((BOUND_VARIABLE_799 var2776) (BOUND_VARIABLE_800 var1787) (BOUND_VARIABLE_801 var3769)) var3769 (as @var3769_0 var3769))\r\n(define-fun cast-from-var1249-to-var2776 ((BOUND_VARIABLE_804 var1249)) var2776 (as @var2776_0 var2776))\r\n(define-fun cast-from-var822-to-var1787 ((BOUND_VARIABLE_807 var822)) var1787 (as @var1787_0 var1787))\r\n(define-fun cast-from-var3135-to-var3769 ((BOUND_VARIABLE_810 var3135)) var3769 (as @var3769_0 var3769))\r\n(define-fun null-var822 () var822 (as @var822_0 var822))\r\n(define-fun null-var1249 () var1249 (as @var1249_0 var1249))\r\n(define-fun null-var3769 () var3769 (as @var3769_0 var3769))\r\n(define-fun var3726-toolList () var2389 (as @var2389_0 var2389))\r\n(define-fun var775 () var822 (as @var822_1 var822))\r\n(define-fun var3240 () var1249 (as @var1249_1 var1249))\r\n(define-fun var2101 () var3769 (as @var3769_1 var3769))\r\n(define-fun var1311!1 () String \"\")\r\n(define-fun var1311!2 () String \"/*@bgen(jjtree) \")\r\n(define-fun var1436!1 () var1924 (as @var1924_0 var1924))\r\n(define-fun var1726!1 () String \"\")\r\n(define-fun var2804!1 () String \"/*@bgen(jjtree) \")\r\n(define-fun var97!1 () String \"/*@bgen(jjtree) \")\r\n(define-fun var3538!1 () var3135 (as @var3135_0 var3135))\r\n(define-fun var3280!1 () String \"\")\r\n(define-fun var1275!1 () String \"\")\r\n(define-fun var1275!2 () String \"\")\r\n(define-fun var1455!1 () String \"@egen*/\")\r\n(define-fun var3538!2 () var3135 (as @var3135_0 var3135))\r\n(define-fun var3292!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37023744,
            "run_time": 60.00648236274719,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181284864,
            "run_time": 0.788076639175415,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1249/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.CPPCodeGenerator__visit__-1629179958\\208.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var97!1 =\r\n     concat(\"/*@bgen(jjtree) \", all_38_3)\r\n   var2804!1 =\r\n     concat(\"/*@bgen(jjtree) \", all_38_3)\r\n\r\n566ms\r\n"
        },
        "undefined_function_count": 14,
        "assertion_count": 29,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 5,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r17 := @this: org.javacc.jjtree.CPPCodeGenerator",
            "r16 := @parameter0: org.javacc.jjtree.ASTGrammar",
            "r0 := @parameter1: java.lang.Object",
            "r1 = (org.javacc.jjtree.IO) r0",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/*@bgen(jjtree) \")",
            "$r4 = <org.javacc.jjtree.JJTreeGlobals: java.util.List toolList>",
            "$r3 = new java.io.File",
            "$r5 = virtualinvoke r1.<org.javacc.jjtree.IO: java.lang.String getOutputFileName()>()",
            "specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r5)",
            "$r6 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>()",
            "$r7 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String getIdString(java.util.List,java.lang.String)>($r4, $r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean booleanValue(java.lang.String)>(\"IGNORE_ACTIONS\")",
            "if $z0 == 0 goto $r19 = \" */\"",
            "$r19 = \"\"",
            "goto [?= $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)]",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r1.<org.javacc.jjtree.IO: void println(java.lang.String)>($r11)",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean booleanValue(java.lang.String)>(\"IGNORE_ACTIONS\")",
            "if $z1 == 0 goto $r20 = \"/*\"",
            "$r20 = \"\"",
            "goto [?= $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)]",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"@egen*/\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r1.<org.javacc.jjtree.IO: void print(java.lang.String)>($r15)",
            "$r18 = virtualinvoke r16.<org.javacc.jjtree.ASTGrammar: java.lang.Object childrenAccept(org.javacc.jjtree.JJTreeParserVisitor,java.lang.Object)>(r17, r1)",
            "return $r18"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__visit__-1629179958\\233.smt2",
        "z3": {
            "memory": 32288768,
            "run_time": 0.06769824028015137,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 117 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11288576,
            "run_time": 0.015143632888793945,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36319232,
            "run_time": 0.07728123664855957,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 117 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176553984,
            "run_time": 0.757537841796875,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 14,
        "assertion_count": 29,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 5,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r17 := @this: org.javacc.jjtree.CPPCodeGenerator",
            "r16 := @parameter0: org.javacc.jjtree.ASTGrammar",
            "r0 := @parameter1: java.lang.Object",
            "r1 = (org.javacc.jjtree.IO) r0",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/*@bgen(jjtree) \")",
            "$r4 = <org.javacc.jjtree.JJTreeGlobals: java.util.List toolList>",
            "$r3 = new java.io.File",
            "$r5 = virtualinvoke r1.<org.javacc.jjtree.IO: java.lang.String getOutputFileName()>()",
            "specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r5)",
            "$r6 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>()",
            "$r7 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String getIdString(java.util.List,java.lang.String)>($r4, $r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean booleanValue(java.lang.String)>(\"IGNORE_ACTIONS\")",
            "if $z0 == 0 goto $r19 = \" */\"",
            "$r19 = \"\"",
            "goto [?= $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)]",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r1.<org.javacc.jjtree.IO: void println(java.lang.String)>($r11)",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean booleanValue(java.lang.String)>(\"IGNORE_ACTIONS\")",
            "if $z1 == 0 goto $r20 = \"/*\"",
            "$r20 = \"/*\"",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"@egen*/\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r1.<org.javacc.jjtree.IO: void print(java.lang.String)>($r15)",
            "$r18 = virtualinvoke r16.<org.javacc.jjtree.ASTGrammar: java.lang.Object childrenAccept(org.javacc.jjtree.JJTreeParserVisitor,java.lang.Object)>(r17, r1)",
            "return $r18"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPNodeFiles__generateDefaultVisitor__-998557859\\960.smt2",
        "z3": {
            "memory": 39018496,
            "run_time": 60.00932502746582,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 84463616,
            "run_time": 60.00566554069519,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37093376,
            "run_time": 0.04625821113586426,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 208 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 209 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 430440448,
            "run_time": 60.01105785369873,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 71,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: java.lang.String trim()>",
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 5,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 21,
            "<java.lang.StringBuilder: java.lang.String toString()>": 5,
            "<java.lang.String: java.lang.String trim()>": 1,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.io.PrintWriter",
            "r0 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String defaultVisitorClass()>()",
            "r1 = staticinvoke <org.javacc.jjtree.ASTNodeDescriptor: java.util.List getNodeNames()>()",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"class \")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" : public \")",
            "$r6 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String visitorClass()>()",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" {\")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r10)",
            "r11 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String getVisitorArgumentType()>()",
            "r12 = staticinvoke <org.javacc.jjtree.CPPNodeFiles: java.lang.String getVisitorReturnType()>()",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(\"public:\")",
            "$r13 = new java.lang.StringBuilder",
            "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  virtual \")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" defaultVisit(const SimpleNode *node, \")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" data) = 0;\")",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r19)",
            "$r20 = new java.lang.StringBuilder",
            "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  virtual \")",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r12)",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" visit(const SimpleNode *node, \")",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" data) {\")",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r26)",
            "$r27 = new java.lang.StringBuilder",
            "specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()",
            "$r29 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")",
            "$r28 = virtualinvoke r12.<java.lang.String: java.lang.String trim()>()",
            "$z0 = virtualinvoke $r28.<java.lang.String: boolean equals(java.lang.Object)>(\"void\")",
            "if $z0 == 0 goto $r63 = \"return \"",
            "$r63 = \"\"",
            "goto [?= $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63)]",
            "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r63)",
            "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"defaultVisit(node, data);\")",
            "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r32)",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(\"}\")",
            "$z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean getMulti()>()",
            "if $z1 == 0 goto $r33 = new java.lang.StringBuilder",
            "$r33 = new java.lang.StringBuilder",
            "specialinvoke $r33.<java.lang.StringBuilder: void <init>()>()",
            "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  ~\")",
            "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"() { }\")",
            "$r37 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>($r37)",
            "virtualinvoke r2.<java.io.PrintWriter: void println(java.lang.String)>(\"};\")",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.CPPCodeGenerator__visit__-1629179958\\244.smt2",
        "z3": {
            "memory": 31518720,
            "run_time": 0.05969524383544922,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 117 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11317248,
            "run_time": 0.014574527740478516,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36315136,
            "run_time": 0.07711291313171387,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 117 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179171328,
            "run_time": 0.79970383644104,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 14,
        "assertion_count": 29,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 5,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r17 := @this: org.javacc.jjtree.CPPCodeGenerator",
            "r16 := @parameter0: org.javacc.jjtree.ASTGrammar",
            "r0 := @parameter1: java.lang.Object",
            "r1 = (org.javacc.jjtree.IO) r0",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/*@bgen(jjtree) \")",
            "$r4 = <org.javacc.jjtree.JJTreeGlobals: java.util.List toolList>",
            "$r3 = new java.io.File",
            "$r5 = virtualinvoke r1.<org.javacc.jjtree.IO: java.lang.String getOutputFileName()>()",
            "specialinvoke $r3.<java.io.File: void <init>(java.lang.String)>($r5)",
            "$r6 = virtualinvoke $r3.<java.io.File: java.lang.String getName()>()",
            "$r7 = staticinvoke <org.javacc.parser.JavaCCGlobals: java.lang.String getIdString(java.util.List,java.lang.String)>($r4, $r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$z0 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean booleanValue(java.lang.String)>(\"IGNORE_ACTIONS\")",
            "if $z0 == 0 goto $r19 = \" */\"",
            "$r19 = \" */\"",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r1.<org.javacc.jjtree.IO: void println(java.lang.String)>($r11)",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$z1 = staticinvoke <org.javacc.jjtree.JJTreeOptions: boolean booleanValue(java.lang.String)>(\"IGNORE_ACTIONS\")",
            "if $z1 == 0 goto $r20 = \"/*\"",
            "$r20 = \"\"",
            "goto [?= $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)]",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"@egen*/\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r1.<org.javacc.jjtree.IO: void print(java.lang.String)>($r15)",
            "$r18 = virtualinvoke r16.<org.javacc.jjtree.ASTGrammar: java.lang.Object childrenAccept(org.javacc.jjtree.JJTreeParserVisitor,java.lang.Object)>(r17, r1)",
            "return $r18"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.jjtree.JavaCodeGenerator__tryExpansionUnit__-1155606386\\826.smt2",
        "z3": {
            "memory": 32444416,
            "run_time": 60.007105112075806,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14946304,
            "run_time": 60.008498191833496,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37707776,
            "run_time": 60.007972717285156,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181694464,
            "run_time": 0.7935895919799805,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var563/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.jjtree.JavaCodeGenerator__tryExpansionUnit__-1155606386\\826.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3804!1 =\r\n     concat(var1046!1, \"}\")\r\n   var674!1 =\r\n     concat(var1046!1, \"} finally {\")\r\n   var3595!1 =\r\n     concat(var1046, \"try {\")\r\n\r\n556ms\r\n"
        },
        "undefined_function_count": 15,
        "assertion_count": 36,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r7 := @this: org.javacc.jjtree.JavaCodeGenerator",
            "r9 := @parameter0: org.javacc.jjtree.NodeScope",
            "r0 := @parameter1: org.javacc.jjtree.IO",
            "r2 := @parameter2: java.lang.String",
            "r6 := @parameter3: org.javacc.jjtree.JJTreeNode",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"try {\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r5)",
            "staticinvoke <org.javacc.jjtree.JavaCodeGenerator: void closeJJTreeComment(org.javacc.jjtree.IO)>(r0)",
            "virtualinvoke r6.<org.javacc.jjtree.JJTreeNode: java.lang.Object jjtAccept(org.javacc.jjtree.JJTreeParserVisitor,java.lang.Object)>(r7, r0)",
            "staticinvoke <org.javacc.jjtree.JavaCodeGenerator: void openJJTreeComment(org.javacc.jjtree.IO,java.lang.String)>(r0, null)",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println()>()",
            "$r8 = new java.util.Hashtable",
            "specialinvoke $r8.<java.util.Hashtable: void <init>()>()",
            "staticinvoke <org.javacc.jjtree.JavaCodeGenerator: void findThrown(org.javacc.jjtree.NodeScope,java.util.Hashtable,org.javacc.jjtree.JJTreeNode)>(r9, $r8, r6)",
            "r10 = virtualinvoke $r8.<java.util.Hashtable: java.util.Enumeration elements()>()",
            "specialinvoke r7.<org.javacc.jjtree.JavaCodeGenerator: void insertCatchBlocks(org.javacc.jjtree.NodeScope,org.javacc.jjtree.IO,java.util.Enumeration,java.lang.String)>(r9, r0, r10, r2)",
            "$r11 = new java.lang.StringBuilder",
            "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"} finally {\")",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r14)",
            "$z0 = virtualinvoke r9.<org.javacc.jjtree.NodeScope: boolean usesCloseNodeVar()>()",
            "if $z0 == 0 goto $r15 = new java.lang.StringBuilder",
            "$r15 = new java.lang.StringBuilder",
            "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"}\")",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.jjtree.IO: void println(java.lang.String)>($r18)",
            "staticinvoke <org.javacc.jjtree.JavaCodeGenerator: void closeJJTreeComment(org.javacc.jjtree.IO)>(r0)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__DumpHeadForCase__-755086919\\1973.smt2",
        "z3": {
            "memory": 32952320,
            "run_time": 60.013115882873535,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11329536,
            "run_time": 0.04683804512023926,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1876 is 3\r\n; rep: (as @var1876_0 var1876)\r\n; rep: (as @var1876_1 var1876)\r\n; rep: (as @var1876_2 var1876)\r\n; cardinality of var955 is 6\r\n; rep: (as @var955_0 var955)\r\n; rep: (as @var955_1 var955)\r\n; rep: (as @var955_2 var955)\r\n; rep: (as @var955_3 var955)\r\n; rep: (as @var955_4 var955)\r\n; rep: (as @var955_5 var955)\r\n; cardinality of var699 is 1\r\n; rep: (as @var699_0 var699)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var955-init () (Array Int var955) ((as const (Array Int var955)) (as @var955_0 var955)))\r\n(define-fun String-init () String \"\")\r\n(define-fun var699_getLongType/-387263599 () String \"\")\r\n(define-fun cast-from-String-to-var955 ((_arg_1 String)) var955 (ite (= \"         do\" _arg_1) (as @var955_1 var955) (ite (= \"         {\" _arg_1) (as @var955_2 var955) (ite (= \"            switch(jjstateSet[--i])\" _arg_1) (as @var955_3 var955) (ite (= \"          l = 1L << curChar;\" _arg_1) (as @var955_0 var955) (as @var955_5 var955))))))\r\n(define-fun genCodeLine/787715242 ((BOUND_VARIABLE_1179 var1876) (BOUND_VARIABLE_1180 (Array Int var955))) void (as @void_0 void))\r\n(define-fun isJavaLanguage/-1752064482 ((_arg_1 var1876)) Bool true)\r\n(define-fun null-var1876 () var1876 (as @var1876_0 var1876))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-__Array__Int__var955__ () (Array Int var955) (store ((as const (Array Int var955)) (as @var955_1 var955)) 0 (as @var955_4 var955)))\r\n(define-fun var3766 () var1876 (as @var1876_1 var1876))\r\n(define-fun var3619 () Int 0)\r\n(define-fun var2700!1 () String \"\")\r\n(define-fun var2700!2 () String \"         \")\r\n(define-fun var1127!1 () String \"         \")\r\n(define-fun var140!1 () String \"          l = 1L << curChar;\")\r\n(define-fun var3219!1 () (Array Int var955) ((as const (Array Int var955)) (as @var955_0 var955)))\r\n(define-fun var3766!1 () var1876 (as @var1876_2 var1876))\r\n(define-fun var3219!2 () (Array Int var955) ((as const (Array Int var955)) (as @var955_0 var955)))\r\n(define-fun var3688!1 () (Array Int var955) (store ((as const (Array Int var955)) (as @var955_2 var955)) 0 (as @var955_1 var955)))\r\n(define-fun var3766!2 () var1876 (as @var1876_0 var1876))\r\n(define-fun var3688!2 () (Array Int var955) ((as const (Array Int var955)) (as @var955_0 var955)))\r\n(define-fun var3581!1 () (Array Int var955) (store ((as const (Array Int var955)) (as @var955_3 var955)) 0 (as @var955_2 var955)))\r\n(define-fun var3766!3 () var1876 (as @var1876_0 var1876))\r\n(define-fun var3581!2 () (Array Int var955) ((as const (Array Int var955)) (as @var955_0 var955)))\r\n(define-fun var765!1 () (Array Int var955) (store ((as const (Array Int var955)) (as @var955_4 var955)) 0 (as @var955_3 var955)))\r\n(define-fun var3766!4 () var1876 (as @var1876_0 var1876))\r\n(define-fun var765!2 () (Array Int var955) ((as const (Array Int var955)) (as @var955_0 var955)))\r\n(define-fun var1401!1 () (Array Int var955) ((as const (Array Int var955)) (as @var955_5 var955)))\r\n(define-fun var3766!5 () var1876 (as @var1876_0 var1876))\r\n(define-fun var1401!2 () (Array Int var955) ((as const (Array Int var955)) (as @var955_0 var955)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37117952,
            "run_time": 60.01393699645996,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 194879488,
            "run_time": 0.8539199829101562,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1876/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.NfaState__DumpHeadForCase__-755086919\\1973.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_25_0 =\r\n     concat(all_36_5, \" l = 1L << curChar;\")\r\n   var140!1 =\r\n     concat(all_33_4, \" l = 1L << curChar;\")\r\n   var1127!1 =\r\n     concat(\"         \", var699_getLongType/-387263599)\r\n   all_36_5 =\r\n     concat(\"         \", var699_getLongType/-387263599)\r\n   all_33_4 =\r\n     concat(\"         \", var699_getLongType/-387263599)\r\n\r\n619ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 29,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.CodeGenerator",
            "i0 := @parameter1: int",
            "if i0 != 0 goto (branch)",
            "$r18 = newarray (java.lang.Object)[1]",
            "$r19 = new java.lang.StringBuilder",
            "specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()",
            "$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"         \")",
            "$r20 = staticinvoke <org.javacc.parser.Options: java.lang.String getLongType()>()",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" l = 1L << curChar;\")",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r18[0] = $r24",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r18)",
            "$z3 = virtualinvoke r0.<org.javacc.parser.CodeGenerator: boolean isJavaLanguage()>()",
            "if $z3 != 0 goto $r34 = newarray (java.lang.Object)[1]",
            "$r34 = newarray (java.lang.Object)[1]",
            "$r34[0] = \"         do\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r34)",
            "$r35 = newarray (java.lang.Object)[1]",
            "$r35[0] = \"         {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r35)",
            "$r36 = newarray (java.lang.Object)[1]",
            "$r36[0] = \"            switch(jjstateSet[--i])\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r36)",
            "$r37 = newarray (java.lang.Object)[1]",
            "$r37[0] = \"            {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r37)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.ParseException__initialise__1626238636\\1734.smt2",
        "z3": {
            "memory": 33570816,
            "run_time": 60.003482818603516,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 15572992,
            "run_time": 0.03210020065307617,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3365 is 3\r\n; rep: (as @var3365_0 var3365)\r\n; rep: (as @var3365_1 var3365)\r\n; rep: (as @var3365_2 var3365)\r\n; cardinality of var3699 is 1\r\n; rep: (as @var3699_0 var3699)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3699_getProperty/-1659784690 ((BOUND_VARIABLE_2299 String) (BOUND_VARIABLE_2300 String)) String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1430969082 ((BOUND_VARIABLE_2303 String)) void (as @void_0 void))\r\n(define-fun getLength-Arr-Int-2 ((_arg_1 (Array Int (Array Int Int)))) Int 0)\r\n(define-fun next/2146518970 ((_arg_1 var3365)) var3365 (as @var3365_2 var3365))\r\n(define-fun beginLine/2146518970 ((_arg_1 var3365)) Int (- 1))\r\n(define-fun beginColumn/2146518970 ((BOUND_VARIABLE_2306 var3365)) Int 0)\r\n(define-fun null-var3365 () var3365 (as @var3365_0 var3365))\r\n(define-fun null-__Array__Int____Array__Int__Int____ () (Array Int (Array Int Int)) (store ((as const (Array Int (Array Int Int))) (store ((as const (Array Int Int)) 0) 0 1)) 0 (store ((as const (Array Int Int)) 2) 0 (- 1))))\r\n(define-fun null-__Array__Int__String__ () (Array Int String) (store ((as const (Array Int String)) \"A\") 0 \", column \"))\r\n(define-fun var3286 () var3365 (as @var3365_1 var3365))\r\n(define-fun var1140 () (Array Int (Array Int Int)) (store ((as const (Array Int (Array Int Int))) ((as const (Array Int Int)) 0)) 0 (store ((as const (Array Int Int)) (- 1)) 0 0)))\r\n(define-fun var989 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var2243!1 () String \"\")\r\n(define-fun var1377!1 () String \"\")\r\n(define-fun var1377!2 () String \"Encountered \"\"\")\r\n(define-fun var1179!1 () String \"Encountered \"\"\"\" at line \")\r\n(define-fun var3815!1 () String \"Encountered \"\"\"\" at line \")\r\n(define-fun var963!1 () String \"Encountered \"\"\"\" at line , column \")\r\n(define-fun var3903!1 () String \"Encountered \"\"\"\" at line , column \")\r\n(define-fun var275!1 () String \"\")\r\n(define-fun var275!2 () String \"Encountered \"\"\"\" at line , column 0\")\r\n(define-fun var1293!1 () String \"Encountered \"\"\"\" at line , column 0.\")\r\n(define-fun var1968!1 () String \"Encountered \"\"\"\" at line , column 0.\")\r\n(define-fun var3039!1 () String \"\")\r\n(define-fun var3039!2 () String \"Encountered \"\"\"\" at line , column 0.\")\r\n(define-fun var1514!1 () String \"Encountered \"\"\"\" at line , column 0.Was expecting one of:\")\r\n(define-fun var3795!1 () String \"Encountered \"\"\"\" at line , column 0.Was expecting one of:\")\r\n(define-fun var1980!1 () String \"Encountered \"\"\"\" at line , column 0.Was expecting one of:    \")\r\n(define-fun var3889!1 () String \"\")\r\n(define-fun var3889!2 () String \"Encountered \"\"\"\" at line , column 0.Was expecting one of:    \")\r\n(define-fun var1704!1 () String \"Encountered \"\"\"\" at line , column 0.Was expecting one of:    \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36352000,
            "run_time": 0.08106732368469238,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 144 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 145 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 235241472,
            "run_time": 1.2705914974212646,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3365/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.utils.ParseException__initialise__1626238636\\1734.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3889!2 =\r\n     concat(all_98_3, \"    \")\r\n   var1980!1 =\r\n     concat(all_43_3, \"    \")\r\n   var1514!1 =\r\n     concat(all_40_4, \"Was expecting one of:\")\r\n   var1704!1 =\r\n     concat(all_37_4, var2243!1)\r\n   var3795!1 =\r\n     concat(all_31_3, all_31_2)\r\n   var3039!2 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   var1968!1 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   all_98_3 =\r\n     concat(all_98_4, all_31_2)\r\n   all_31_3 =\r\n     concat(all_95_4, \"Was expecting one of:\")\r\n   all_37_4 =\r\n     concat(all_89_3, \"    \")\r\n   all_43_3 =\r\n     concat(all_43_5, all_31_2)\r\n   all_40_4 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   all_98_4 =\r\n     concat(all_119_4, \"Was expecting one of:\")\r\n   all_43_5 =\r\n     concat(all_92_4, \"Was expecting one of:\")\r\n   all_89_3 =\r\n     concat(all_89_4, all_31_2)\r\n   all_95_4 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   all_89_4 =\r\n     concat(all_122_4, \"Was expecting one of:\")\r\n   all_119_4 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   all_92_4 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n   all_122_4 =\r\n     concat(\"Encountered \\u{0}22\\u{0}22 at line , column .\", all_31_2)\r\n\r\n1039ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 51,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 12,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 4,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @parameter0: org.javacc.utils.Token",
            "r2 := @parameter1: int[][]",
            "r33 := @parameter2: java.lang.String[]",
            "r0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(\"line.separator\", \"\\n\")",
            "$r1 = new java.lang.StringBuffer",
            "specialinvoke $r1.<java.lang.StringBuffer: void <init>()>()",
            "i11 = 0",
            "i12 = 0",
            "$i0 = lengthof r2",
            "if i12 >= $i0 goto r66 = \"Encountered \\\"\"",
            "r66 = \"Encountered \\\"\"",
            "r67 = r3.<org.javacc.utils.Token: org.javacc.utils.Token next>",
            "i15 = 0",
            "if i15 >= i11 goto $r4 = new java.lang.StringBuilder",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r66)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\" at line \")",
            "$r6 = r3.<org.javacc.utils.Token: org.javacc.utils.Token next>",
            "$i1 = $r6.<org.javacc.utils.Token: int beginLine>",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", column \")",
            "$r9 = r3.<org.javacc.utils.Token: org.javacc.utils.Token next>",
            "$i2 = $r9.<org.javacc.utils.Token: int beginColumn>",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i2)",
            "$r52 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r52)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r53 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i3 = lengthof r2",
            "if $i3 != 1 goto $r16 = new java.lang.StringBuilder",
            "$r16 = new java.lang.StringBuilder",
            "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r53)",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Was expecting one of:\")",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"    \")",
            "r71 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r21 = new java.lang.StringBuilder",
            "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()",
            "$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r71)",
            "$r22 = virtualinvoke $r1.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r30 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r30"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.TokenMgrError__addEscapes__-2068437822\\1660.smt2",
        "z3": {
            "memory": 25456640,
            "run_time": 0.09058952331542969,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3689 () Int\r\n    (str.len var2118))\r\n  (define-fun var2901 () String\r\n    var3786!1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3122 () Int\r\n    0)\r\n  (define-fun var3786 () String\r\n    String-init)\r\n  (define-fun var2118 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3786!1 () String\r\n    \"\")\r\n  (define-fun <init>/-1430969082 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11292672,
            "run_time": 0.016129255294799805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2856 is 1\r\n; rep: (as @var2856_0 var2856)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1430969082 ((BOUND_VARIABLE_530 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2118 () String \"\")\r\n(define-fun var3786!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37404672,
            "run_time": 0.060959577560424805,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3122 () Int\n    0)\n  (define-fun var3786 () String\n    String-init)\n  (define-fun var3689 () Int\n    (str.len var2118))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2118 () String\n    \"\")\n  (define-fun var2901 () String\n    var3786!1)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3786!1 () String\n    \"\")\n  (define-fun <init>/-1430969082 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150249472,
            "run_time": 0.6820056438446045,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2118 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r13 = new java.lang.StringBuffer",
            "specialinvoke $r13.<java.lang.StringBuffer: void <init>()>()",
            "i6 = 0",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "if i6 >= $i0 goto $r2 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r2 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.LexGenCPP__DumpFillToken__-1163295368\\1167.smt2",
        "z3": {
            "memory": 34820096,
            "run_time": 60.0008499622345,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 18898944,
            "run_time": 60.00951409339905,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37163008,
            "run_time": 0.07787251472473145,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 191 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 192 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 123613184,
            "run_time": 0.4456825256347656,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.LexGenCPP__DumpFillToken__-1163295368\\1167.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n250ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 54,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.LexGenCPP",
            "d0 = staticinvoke <org.javacc.parser.JavaFiles: double getVersion(java.lang.String)>(\"Token.java\")",
            "$b0 = d0 cmpl 4.09",
            "$i2 = (int) $b0",
            "if $i2 <= 0 goto $z6 = 0",
            "$z6 = 0",
            "z0 = $z6",
            "$r1 = <org.javacc.parser.LexGenCPP: java.lang.String tokMgrClassName>",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void generateMethodDefHeader(java.lang.String,java.lang.String,java.lang.String)>(\"Token *\", $r1, \"jjFillToken()\")",
            "$r2 = newarray (java.lang.Object)[1]",
            "$r2[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r2)",
            "$r3 = newarray (java.lang.Object)[1]",
            "$r3[0] = \"   Token *t;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r3)",
            "$r4 = newarray (java.lang.Object)[1]",
            "$r4[0] = \"   JJString curTokenImage;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r4)",
            "$z1 = <org.javacc.parser.LexGenCPP: boolean keepLineCol>",
            "if $z1 == 0 goto $z2 = <org.javacc.parser.LexGenCPP: boolean hasEmptyMatch>",
            "$z2 = <org.javacc.parser.LexGenCPP: boolean hasEmptyMatch>",
            "if $z2 == 0 goto $r5 = newarray (java.lang.Object)[1]",
            "$r5 = newarray (java.lang.Object)[1]",
            "$r5[0] = \"   JJString im = jjstrLiteralImages[jjmatchedKind];\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r5)",
            "$r6 = newarray (java.lang.Object)[1]",
            "$r6[0] = \"   curTokenImage = (im.length() == 0) ? input_stream->GetImage() : im;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r6)",
            "$z3 = <org.javacc.parser.LexGenCPP: boolean keepLineCol>",
            "if $z3 == 0 goto $r70 = staticinvoke <org.javacc.parser.Options: java.lang.String getTokenFactory()>()",
            "$r70 = staticinvoke <org.javacc.parser.Options: java.lang.String getTokenFactory()>()",
            "$i1 = virtualinvoke $r70.<java.lang.String: int length()>()",
            "if $i1 <= 0 goto (branch)",
            "$r33 = newarray (java.lang.Object)[1]",
            "$r73 = new java.lang.StringBuilder",
            "specialinvoke $r73.<java.lang.StringBuilder: void <init>()>()",
            "$r37 = virtualinvoke $r73.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"   t = \")",
            "$r35 = staticinvoke <org.javacc.parser.Options: java.lang.String getTokenFactory()>()",
            "$r36 = virtualinvoke r0.<org.javacc.parser.LexGenCPP: java.lang.String getClassQualifier(java.lang.String)>($r35)",
            "$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36)",
            "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"newToken(jjmatchedKind, curTokenImage);\")",
            "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r33[0] = $r40",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r33)",
            "goto [?= $r71 = newarray (java.lang.Object)[1]]",
            "$r71 = newarray (java.lang.Object)[1]",
            "$r71[0] = \"   t->specialToken = nullptr;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r71)",
            "$r72 = newarray (java.lang.Object)[1]",
            "$r72[0] = \"   t->next = nullptr;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r72)",
            "$z7 = <org.javacc.parser.LexGenCPP: boolean keepLineCol>",
            "if $z7 == 0 goto $r16 = newarray (java.lang.Object)[1]",
            "$r16 = newarray (java.lang.Object)[1]",
            "$r16[0] = \"\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r16)",
            "$r17 = newarray (java.lang.Object)[1]",
            "$r17[0] = \"   return t;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r17)",
            "$r18 = newarray (java.lang.Object)[1]",
            "$r18[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r18)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__PrintNoBreak__1034990844\\2024.smt2",
        "z3": {
            "memory": 33017856,
            "run_time": 60.00013518333435,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 15532032,
            "run_time": 0.030181169509887695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1433 is 2\r\n; rep: (as @var1433_0 var1433)\r\n; rep: (as @var1433_1 var1433)\r\n; cardinality of var2775 is 2\r\n; rep: (as @var2775_0 var2775)\r\n; rep: (as @var2775_1 var2775)\r\n; cardinality of var3938 is 2\r\n; rep: (as @var3938_0 var3938)\r\n; rep: (as @var3938_1 var3938)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun inNextOf/1847772117 ((_arg_1 var1433)) Int 1)\r\n(define-fun stateName/1847772117 ((_arg_1 var1433)) Int (- 1))\r\n(define-fun asciiMoves/1847772117 ((_arg_1 var1433)) (Array Int Int) (store ((as const (Array Int Int)) 0) 0 1))\r\n(define-fun arr-var3938-init () (Array Int var3938) ((as const (Array Int var3938)) (as @var3938_0 var3938)))\r\n(define-fun String-init () String \"\")\r\n(define-fun cast-from-String-to-var3938 ((_arg_1 String)) var3938 (as @var3938_1 var3938))\r\n(define-fun genCodeLine/787715242 ((BOUND_VARIABLE_1516 var2775) (BOUND_VARIABLE_1517 (Array Int var3938))) void (as @void_0 void))\r\n(define-fun DumpAsciiMoveForCompositeState/-651801697 ((BOUND_VARIABLE_1520 var1433) (BOUND_VARIABLE_1521 var2775) (BOUND_VARIABLE_1522 Int) (BOUND_VARIABLE_1523 Bool)) void (as @void_0 void))\r\n(define-fun null-var1433 () var1433 (as @var1433_0 var1433))\r\n(define-fun null-var2775 () var2775 (as @var2775_0 var2775))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-__Array__Int__Bool__ () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n(define-fun null-__Array__Int__var3938__ () (Array Int var3938) (store ((as const (Array Int var3938)) (as @var3938_1 var3938)) 0 (as @var3938_0 var3938)))\r\n(define-fun var1658 () var1433 (as @var1433_1 var1433))\r\n(define-fun var530 () var2775 (as @var2775_1 var2775))\r\n(define-fun var1688 () Int 0)\r\n(define-fun var2805 () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var2805!1 () (Array Int Bool) (store ((as const (Array Int Bool)) true) 0 false))\r\n(define-fun var920!1 () String \"\")\r\n(define-fun var920!2 () String \"               case \")\r\n(define-fun var3627!1 () String \"               case \")\r\n(define-fun var497!1 () String \"               case :\")\r\n(define-fun var3449!1 () (Array Int var3938) (store ((as const (Array Int var3938)) (as @var3938_0 var3938)) 0 (as @var3938_1 var3938)))\r\n(define-fun var530!1 () var2775 (as @var2775_0 var2775))\r\n(define-fun var3449!2 () (Array Int var3938) ((as const (Array Int var3938)) (as @var3938_0 var3938)))\r\n(define-fun var1658!1 () var1433 (as @var1433_0 var1433))\r\n(define-fun var530!2 () var2775 (as @var2775_0 var2775))\r\n(define-fun var1688!1 () Int 0)\r\n(define-fun var995 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38301696,
            "run_time": 0.07766342163085938,
            "is_sat": "",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 230420480,
            "run_time": 1.0663127899169922,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3449!1 () (Array Int var3938) (store ((as const (Array Int var3938)) var3938!110) 0 var3938!106))\r\n  (define-fun var497!1 () String \"               case :\")\r\n  (define-fun var3627!1 () String \"               case \")\r\n  (define-fun var920!2 () String \"               case \")\r\n  (define-fun var920!1 () String \"\")\r\n  (define-fun var2805!1 () (Array Int Bool) (store ((as const (Array Int Bool)) false) (- 6) true))\r\n  (define-fun var2805 () (Array Int Bool) (store ((as const (Array Int Bool)) false) (- 6) true))\r\n  (define-fun var1688 () Int 0)\r\n  (define-fun var530 () var2775 var2775!90)\r\n  (define-fun var1658 () var1433 var1433!88)\r\n  (define-fun null-__Array__Int__var3938__ () (Array Int var3938) ((as const (Array Int var3938)) var3938!0))\r\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-var2775 () var2775 var2775!86)\r\n  (define-fun null-var1433 () var1433 var1433!84)\r\n  (define-fun var3938!106 () var3938 (cast-from-String-to-var3938 \"               case :\"))\r\n  (define-fun abbrev_130 ((x!0 Int)) String (ite (= x!0 0) \"               case \" \"\"))\r\n  (define-fun asciiMoves/1847772117 ((x!0 var1433)) (Array Int Int) (ite (= x!0 var1433!88) (store ((as const (Array Int Int)) 54) 0 52) ((as const (Array Int Int)) 0)))\r\n  (define-fun stateName/1847772117 ((x!0 var1433)) Int (ite (= x!0 var1433!88) (- 6) 0))\r\n  (define-fun inNextOf/1847772117 ((x!0 var1433)) Int (ite (= x!0 var1433!88) 1 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 22,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.NfaState",
            "r7 := @parameter0: org.javacc.parser.CodeGenerator",
            "i2 := @parameter1: int",
            "r1 := @parameter2: boolean[]",
            "$i0 = r0.<org.javacc.parser.NfaState: int inNextOf>",
            "if $i0 == 1 goto $i1 = r0.<org.javacc.parser.NfaState: int stateName>",
            "$i1 = r0.<org.javacc.parser.NfaState: int stateName>",
            "r1[$i1] = 1",
            "if i2 < 0 goto $i3 = r0.<org.javacc.parser.NfaState: int nonAsciiMethod>",
            "$r14 = r0.<org.javacc.parser.NfaState: long[] asciiMoves>",
            "$l6 = $r14[i2]",
            "$b7 = $l6 cmp 0L",
            "if $b7 == 0 goto $r25 = new java.lang.StringBuilder",
            "$r15 = newarray (java.lang.Object)[1]",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r17 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"               case \")",
            "$i8 = r0.<org.javacc.parser.NfaState: int stateName>",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i8)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r15[0] = $r20",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r15)",
            "specialinvoke r0.<org.javacc.parser.NfaState: void DumpAsciiMoveForCompositeState(org.javacc.parser.CodeGenerator,int,boolean)>(r7, i2, 0)",
            "return \"\""
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.TableDrivenJavaCodeGenerator__dumpLexicalActions__-471926748\\1674.smt2",
        "z3": {
            "memory": 32747520,
            "run_time": 60.00588083267212,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11317248,
            "run_time": 0.016121387481689453,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3288 is 2\r\n; rep: (as @var3288_0 var3288)\r\n; rep: (as @var3288_1 var3288)\r\n; cardinality of var3748 is 2\r\n; rep: (as @var3748_0 var3748)\r\n; rep: (as @var3748_1 var3748)\r\n; cardinality of var1735 is 2\r\n; rep: (as @var1735_0 var1735)\r\n; rep: (as @var1735_1 var1735)\r\n; cardinality of var3519 is 1\r\n; rep: (as @var3519_0 var3519)\r\n; cardinality of var735 is 2\r\n; rep: (as @var735_0 var735)\r\n; rep: (as @var735_1 var735)\r\n; cardinality of var548 is 4\r\n; rep: (as @var548_0 var548)\r\n; rep: (as @var548_1 var548)\r\n; rep: (as @var548_2 var548)\r\n; rep: (as @var548_3 var548)\r\n; cardinality of var931 is 1\r\n; rep: (as @var931_0 var931)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var548-init () (Array Int var548) ((as const (Array Int var548)) (as @var548_0 var548)))\r\n(define-fun String-init () String \"\")\r\n(define-fun cast-from-String-to-var548 ((_arg_1 String)) var548 (ite (= \"    default: break;\" _arg_1) (as @var548_1 var548) (ite (= \"  switch() {\" _arg_1) (as @var548_0 var548) (as @var548_3 var548))))\r\n(define-fun genCodeLine/787715242 ((BOUND_VARIABLE_1022 var735) (BOUND_VARIABLE_1023 (Array Int var548))) void (as @void_0 void))\r\n(define-fun var3748_keySet/-712633290 ((_arg_1 var3748)) var931 (as @var931_0 var931))\r\n(define-fun var931_iterator/1911472585 ((_arg_1 var931)) Iterator (as @Iterator_0 Iterator))\r\n(define-fun Iterator_hasNext/-1669924200 ((_arg_1 Iterator)) Bool false)\r\n(define-fun null-var3288 () var3288 (as @var3288_0 var3288))\r\n(define-fun null-var3748 () var3748 (as @var3748_0 var3748))\r\n(define-fun null-var1735 () var1735 (as @var1735_0 var1735))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var735 () var735 (as @var735_0 var735))\r\n(define-fun null-__Array__Int__var548__ () (Array Int var548) (store ((as const (Array Int var548)) (as @var548_1 var548)) 0 (as @var548_2 var548)))\r\n(define-fun var3167 () var3288 (as @var3288_1 var3288))\r\n(define-fun var2049 () var3748 (as @var3748_1 var3748))\r\n(define-fun var1772 () var1735 (as @var1735_1 var1735))\r\n(define-fun var778 () String \"\")\r\n(define-fun var3941 () var735 (as @var735_1 var735))\r\n(define-fun var603!1 () String \"\")\r\n(define-fun var603!2 () String \"  switch(\")\r\n(define-fun var1307!1 () String \"  switch(\")\r\n(define-fun var1997!1 () String \"  switch() {\")\r\n(define-fun var3962!1 () (Array Int var548) ((as const (Array Int var548)) (as @var548_0 var548)))\r\n(define-fun var3941!1 () var735 (as @var735_0 var735))\r\n(define-fun var3962!2 () (Array Int var548) ((as const (Array Int var548)) (as @var548_0 var548)))\r\n(define-fun var1460!1 () (Array Int var548) (store ((as const (Array Int var548)) (as @var548_2 var548)) 0 (as @var548_1 var548)))\r\n(define-fun var3941!2 () var735 (as @var735_0 var735))\r\n(define-fun var1460!2 () (Array Int var548) ((as const (Array Int var548)) (as @var548_0 var548)))\r\n(define-fun var2106!1 () (Array Int var548) ((as const (Array Int var548)) (as @var548_3 var548)))\r\n(define-fun var3941!3 () var735 (as @var735_0 var735))\r\n(define-fun var2106!2 () (Array Int var548) ((as const (Array Int var548)) (as @var548_0 var548)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37818368,
            "run_time": 60.01458811759949,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 184102912,
            "run_time": 0.820091724395752,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1735/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.TableDrivenJavaCodeGenerator__dumpLexicalActions__-471926748\\1674.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_40_4 =\r\n     concat(all_40_5, \") {\")\r\n   var1997!1 =\r\n     concat(all_37_4, \") {\")\r\n   var1307!1 =\r\n     concat(\"  switch(\", var778)\r\n   all_40_5 =\r\n     concat(\"  switch(\", var778)\r\n   all_37_4 =\r\n     concat(\"  switch(\", var778)\r\n\r\n603ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 25,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r35 := @this: org.javacc.parser.TableDrivenJavaCodeGenerator",
            "r8 := @parameter0: java.util.Map",
            "r19 := @parameter1: org.javacc.parser.TokenizerData$MatchType",
            "r3 := @parameter2: java.lang.String",
            "r0 := @parameter3: org.javacc.parser.CodeGenerator",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  switch(\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\") {\")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r7",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r1)",
            "$r9 = interfaceinvoke r8.<java.util.Map: java.util.Set keySet()>()",
            "r10 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>()",
            "$z0 = interfaceinvoke r10.<java.util.Iterator: boolean hasNext()>()",
            "if $z0 == 0 goto $r11 = newarray (java.lang.Object)[1]",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \"    default: break;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r11)",
            "$r12 = newarray (java.lang.Object)[1]",
            "$r12[0] = \"  }\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r12)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.LookaheadCalc__ebnfCalc__935938247\\1067.smt2",
        "z3": {
            "memory": 33497088,
            "run_time": 60.00963521003723,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 15241216,
            "run_time": 0.030593395233154297,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2071 is 3\r\n; rep: (as @var2071_0 var2071)\r\n; rep: (as @var2071_1 var2071)\r\n; rep: (as @var2071_2 var2071)\r\n; cardinality of var904 is 1\r\n; rep: (as @var904_0 var904)\r\n; cardinality of var1829 is 1\r\n; rep: (as @var1829_0 var1829)\r\n; cardinality of var408 is 1\r\n; rep: (as @var408_0 var408)\r\n; cardinality of var2260 is 1\r\n; rep: (as @var2260_0 var2260)\r\n; cardinality of var3698 is 1\r\n; rep: (as @var3698_0 var3698)\r\n; cardinality of var3068 is 1\r\n; rep: (as @var3068_0 var3068)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1829_getOtherAmbiguityCheck/14743516 () Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun var408_image/1589855987 ((_arg_1 var2071)) String \"\")\r\n(define-fun getLine/-753183392 ((_arg_1 var2071)) Int (- 1))\r\n(define-fun getColumn/1743199486 ((BOUND_VARIABLE_2606 var2071)) Int 0)\r\n(define-fun var2260_warning/37978134 ((BOUND_VARIABLE_2609 String)) void (as @void_0 void))\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_2612 var3698) (BOUND_VARIABLE_2613 String)) void (as @void_0 void))\r\n(define-fun var408_image/-1353368249 ((BOUND_VARIABLE_2616 var904)) String \"\")\r\n(define-fun null-var2071 () var2071 (as @var2071_0 var2071))\r\n(define-fun null-var904 () var904 (as @var904_0 var904))\r\n(define-fun var3068-err () var3698 (as @var3698_0 var3698))\r\n(define-fun var2290 () var2071 (as @var2071_1 var2071))\r\n(define-fun var1058 () var2071 (as @var2071_2 var2071))\r\n(define-fun var381!1 () String \"\")\r\n(define-fun var381!2 () String \"Choice conflict in \")\r\n(define-fun var1733!1 () String \"Choice conflict in \")\r\n(define-fun var1925!1 () String \"Choice conflict in  construct at line \")\r\n(define-fun var1089!1 () String \"Choice conflict in  construct at line \")\r\n(define-fun var993!1 () String \"Choice conflict in  construct at line , column \")\r\n(define-fun var2502!1 () String \"Choice conflict in  construct at line , column \")\r\n(define-fun var2988!1 () String \"Choice conflict in  construct at line , column 0.\")\r\n(define-fun var1425!1 () String \"\")\r\n(define-fun var2248!1 () var3698 (as @var3698_0 var3698))\r\n(define-fun var2333 () String \"\")\r\n(define-fun var1109!1 () String \"\")\r\n(define-fun var1109!2 () String \"         have common prefixes, one of which is: \")\r\n(define-fun var3144!1 () String \"         have common prefixes, one of which is: \")\r\n(define-fun var3582!1 () var3698 (as @var3698_0 var3698))\r\n(define-fun var1832!1 () String \"\")\r\n(define-fun var3083!1 () String \"\")\r\n(define-fun var3083!2 () String \"         Consider using a lookahead of \")\r\n(define-fun var3132!1 () String \"         Consider using a lookahead of \")\r\n(define-fun var407!1 () String \"         Consider using a lookahead of 1 or more for nested expansion.\")\r\n(define-fun var104!1 () var3698 (as @var3698_0 var3698))\r\n(define-fun var1589!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36835328,
            "run_time": 0.046369314193725586,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 142 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 143 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 208863232,
            "run_time": 1.0996088981628418,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2071/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.LookaheadCalc__ebnfCalc__935938247\\1067.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2988!1 =\r\n     concat(all_73_7, \".\")\r\n   var993!1 =\r\n     concat(all_40_2, \", column \")\r\n   var1925!1 =\r\n     concat(all_37_2, \" construct at line \")\r\n   var3144!1 =\r\n     concat(\"         have common prefixes, one of which is: \", all_53_2)\r\n   var1733!1 =\r\n     concat(\"Choice conflict in \", all_60_3)\r\n   var1089!1 =\r\n     concat(all_46_2, rhs)\r\n   var2502!1 =\r\n     concat(all_43_2, rhs)\r\n   all_73_7 =\r\n     concat(all_73_8, \", column \")\r\n   all_43_2 =\r\n     concat(all_43_3, \", column \")\r\n   all_46_2 =\r\n     concat(all_37_2, \" construct at line \")\r\n   all_40_2 =\r\n     concat(all_37_2, \" construct at line \")\r\n   all_73_8 =\r\n     concat(all_37_2, \" construct at line \")\r\n   all_43_3 =\r\n     concat(all_37_2, \" construct at line \")\r\n   all_37_2 =\r\n     concat(\"Choice conflict in \", all_60_3)\r\n\r\n835ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 44,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 9,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r1 := @parameter0: org.javacc.parser.Expansion",
            "r50 := @parameter1: org.javacc.parser.Expansion",
            "r60 = null",
            "i8 = 1",
            "$i0 = staticinvoke <org.javacc.parser.Options: int getOtherAmbiguityCheck()>()",
            "if i8 > $i0 goto $i1 = staticinvoke <org.javacc.parser.Options: int getOtherAmbiguityCheck()>()",
            "$i1 = staticinvoke <org.javacc.parser.Options: int getOtherAmbiguityCheck()>()",
            "if i8 <= $i1 goto (branch)",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Choice conflict in \")",
            "$r25 = staticinvoke <org.javacc.parser.LookaheadCalc: java.lang.String image(org.javacc.parser.Expansion)>(r1)",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r25)",
            "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" construct at line \")",
            "$i4 = virtualinvoke r1.<org.javacc.parser.Expansion: int getLine()>()",
            "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)",
            "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", column \")",
            "$i5 = virtualinvoke r1.<org.javacc.parser.Expansion: int getColumn()>()",
            "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i5)",
            "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.javacc.parser.JavaCCErrors: void warning(java.lang.String)>($r33)",
            "$r34 = <java.lang.System: java.io.PrintStream err>",
            "virtualinvoke $r34.<java.io.PrintStream: void println(java.lang.String)>(\"         Expansion nested within construct and expansion following construct\")",
            "$r36 = <java.lang.System: java.io.PrintStream err>",
            "$r35 = new java.lang.StringBuilder",
            "specialinvoke $r35.<java.lang.StringBuilder: void <init>()>()",
            "$r38 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"         have common prefixes, one of which is: \")",
            "$r37 = staticinvoke <org.javacc.parser.LookaheadCalc: java.lang.String image(org.javacc.parser.MatchInfo)>(r60)",
            "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37)",
            "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r36.<java.io.PrintStream: void println(java.lang.String)>($r40)",
            "$r42 = <java.lang.System: java.io.PrintStream err>",
            "$r41 = new java.lang.StringBuilder",
            "specialinvoke $r41.<java.lang.StringBuilder: void <init>()>()",
            "$r43 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"         Consider using a lookahead of \")",
            "$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i8)",
            "$r45 = virtualinvoke $r44.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" or more for nested expansion.\")",
            "$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r42.<java.io.PrintStream: void println(java.lang.String)>($r46)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.LookaheadCalc__ebnfCalc__935938247\\1089.smt2",
        "z3": {
            "memory": 30461952,
            "run_time": 0.05754232406616211,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 30 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.015755414962768555,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36220928,
            "run_time": 0.04665946960449219,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 30 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 124657664,
            "run_time": 0.5096735954284668,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r1 := @parameter0: org.javacc.parser.Expansion",
            "r50 := @parameter1: org.javacc.parser.Expansion",
            "r60 = null",
            "i8 = 1",
            "$i0 = staticinvoke <org.javacc.parser.Options: int getOtherAmbiguityCheck()>()",
            "if i8 > $i0 goto $i1 = staticinvoke <org.javacc.parser.Options: int getOtherAmbiguityCheck()>()",
            "$i1 = staticinvoke <org.javacc.parser.Options: int getOtherAmbiguityCheck()>()",
            "if i8 <= $i1 goto (branch)",
            "if i8 <= 1 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.LookaheadCalc__image__-1353368249\\935-deviant-0.smt2",
        "z3": {
            "memory": 12959744,
            "run_time": 0.03053426742553711,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2517:\r\n  ;;   var2517!val!1 var2517!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2517!val!1 () var2517)\r\n  (declare-fun var2517!val!0 () var2517)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2517)) (or (= x var2517!val!1) (= x var2517!val!0)))\r\n  ;; -----------\r\n  (define-fun var218 () Int\r\n    (firstFreeLoc/-1036304826 var1165))\r\n  (define-fun var1458 () String\r\n    \"\")\r\n  (define-fun var2121 () Int\r\n    0)\r\n  (define-fun var1959 () Int\r\n    (firstFreeLoc/-1036304826 var1165))\r\n  (define-fun var1165 () var2517\r\n    var2517!val!0)\r\n  (define-fun null-var2517 () var2517\r\n    var2517!val!1)\r\n  (define-fun firstFreeLoc/-1036304826 ((x!0 var2517)) Int\r\n    (- 1))\r\n)\r\n(error \"line 25 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11341824,
            "run_time": 0.02977609634399414,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2517 is 2\r\n; rep: (as @var2517_0 var2517)\r\n; rep: (as @var2517_1 var2517)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun firstFreeLoc/-1036304826 ((_arg_1 var2517)) Int (- 1))\r\n(define-fun null-var2517 () var2517 (as @var2517_0 var2517))\r\n(define-fun var1165 () var2517 (as @var2517_1 var2517))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36986880,
            "run_time": 0.04635882377624512,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2517:\n  ;;   var2517!val!1 var2517!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2517!val!1 () var2517)\n  (declare-fun var2517!val!0 () var2517)\n  ;; cardinality constraint:\n  (forall ((x var2517)) (or (= x var2517!val!1) (= x var2517!val!0)))\n  ;; -----------\n  (define-fun var1458 () String\n    \"\")\n  (define-fun var2121 () Int\n    0)\n  (define-fun var218 () Int\n    (firstFreeLoc/-1036304826 var1165))\n  (define-fun var1959 () Int\n    (firstFreeLoc/-1036304826 var1165))\n  (define-fun var1165 () var2517\n    var2517!val!0)\n  (define-fun null-var2517 () var2517\n    var2517!val!1)\n  (define-fun firstFreeLoc/-1036304826 ((x!0 var2517)) Int\n    (- 1))\n)\n(error \"line 25 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 159043584,
            "run_time": 0.6840126514434814,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1165 () var2517 var2517!4)\r\n  (define-fun null-var2517 () var2517 var2517!2)\r\n  (define-fun firstFreeLoc/-1036304826 ((x!0 var2517)) Int (ite (= x!0 var2517!4) (- 1) 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: org.javacc.parser.MatchInfo",
            "r32 = \"\"",
            "i4 = 0",
            "$i0 = r0.<org.javacc.parser.MatchInfo: int firstFreeLoc>",
            "if i4 >= $i0 goto $i1 = r0.<org.javacc.parser.MatchInfo: int firstFreeLoc>",
            "$i1 = r0.<org.javacc.parser.MatchInfo: int firstFreeLoc>",
            "if $i1 != 0 goto $r1 = virtualinvoke r32.<java.lang.String: java.lang.String substring(int)>(1)",
            "$r1 = virtualinvoke r32.<java.lang.String: java.lang.String substring(int)>(1)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.TokenMgrError__LexicalError__122184712\\1529.smt2",
        "z3": {
            "memory": 33230848,
            "run_time": 60.00785255432129,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 15724544,
            "run_time": 0.0306699275970459,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3865 is 1\r\n; rep: (as @var3865_0 var3865)\r\n; cardinality of var1398 is 1\r\n; rep: (as @var1398_0 var1398)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun String_valueOf/-371898945 ((_arg_1 Int)) String \"B\")\r\n(define-fun var1398_addEscapes/455866812 ((_arg_1 String)) String \"\")\r\n(define-fun null-Bool () Bool true)\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2017 () Bool false)\r\n(define-fun var2543 () Int (- 1))\r\n(define-fun var1024 () Int (- 1))\r\n(define-fun var911 () Int (- 1))\r\n(define-fun var19 () String \"\")\r\n(define-fun var1271 () Int (- 1))\r\n(define-fun var2548!1 () String \"\")\r\n(define-fun var2548!2 () String \"Lexical error at line \")\r\n(define-fun var1960!1 () String \"Lexical error at line \")\r\n(define-fun var1969!1 () String \"Lexical error at line , column \")\r\n(define-fun var2865!1 () String \"Lexical error at line , column \")\r\n(define-fun var3105!1 () String \"Lexical error at line , column .  Encountered: \")\r\n(define-fun var429!1 () String \"\")\r\n(define-fun var429!2 () String \"\"\"\")\r\n(define-fun var1899!1 () String \"\"\"\")\r\n(define-fun var564!1 () String \"\"\"\"\"\")\r\n(define-fun var1760!1 () String \"\"\"\"\" (\")\r\n(define-fun var3802!1 () String \"\"\"\"\" (\")\r\n(define-fun var2983!1 () String \"\"\"\"\" (), \")\r\n(define-fun var3086!1 () String \"Lexical error at line , column .  Encountered: \"\"\"\" (), \")\r\n(define-fun var583!1 () String \"Lexical error at line , column .  Encountered: \"\"\"\" (), after : \"\"\")\r\n(define-fun var2337!1 () String \"Lexical error at line , column .  Encountered: \"\"\"\" (), after : \"\"\")\r\n(define-fun var2960!1 () String \"Lexical error at line , column .  Encountered: \"\"\"\" (), after : \"\"\"\"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37232640,
            "run_time": 0.04622054100036621,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 115 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 116 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 302854144,
            "run_time": 60.00939130783081,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 44,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: java.lang.String valueOf(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 12,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 3,
            "<java.lang.String: java.lang.String valueOf(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "z0 := @parameter0: boolean",
            "i3 := @parameter1: int",
            "i0 := @parameter2: int",
            "i1 := @parameter3: int",
            "r16 := @parameter4: java.lang.String",
            "c2 := @parameter5: char",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r1 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Lexical error at line \")",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", column \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)",
            "$r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".  Encountered: \")",
            "if z0 == 0 goto $r24 = new java.lang.StringBuilder",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r6 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c2)",
            "$r7 = staticinvoke <org.javacc.parser.TokenMgrError: java.lang.String addEscapes(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\")",
            "$i4 = (int) c2",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"), \")",
            "$r22 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"after : \\\"\")",
            "$r17 = staticinvoke <org.javacc.parser.TokenMgrError: java.lang.String addEscapes(java.lang.String)>(r16)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r21"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.Token__hashCode__200274651\\1501.smt2",
        "z3": {
            "memory": 13799424,
            "run_time": 0.07542586326599121,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1279:\r\n  ;;   var1279!val!0 var1279!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1279!val!0 () var1279)\r\n  (declare-fun var1279!val!1 () var1279)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1279)) (or (= x var1279!val!0) (= x var1279!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var1279 () var1279\r\n    var1279!val!1)\r\n  (define-fun var1086 () String\r\n    (image/197050796 var2446))\r\n  (define-fun var2446 () var1279\r\n    var1279!val!0)\r\n  (define-fun var2002 () Int\r\n    (hashCode/-467973558 (image/197050796 var2446)))\r\n  (define-fun hashCode/-467973558 ((x!0 String)) Int\r\n    0)\r\n  (define-fun image/197050796 ((x!0 var1279)) String\r\n    \"\")\r\n)\r\n(error \"line 19 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11317248,
            "run_time": 0.015133380889892578,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1279 is 2\r\n; rep: (as @var1279_0 var1279)\r\n; rep: (as @var1279_1 var1279)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun image/197050796 ((BOUND_VARIABLE_417 var1279)) String \"\")\r\n(define-fun hashCode/-467973558 ((BOUND_VARIABLE_420 String)) Int 0)\r\n(define-fun null-var1279 () var1279 (as @var1279_0 var1279))\r\n(define-fun var2446 () var1279 (as @var1279_1 var1279))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36745216,
            "run_time": 0.04628419876098633,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1279:\n  ;;   var1279!val!0 var1279!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1279!val!0 () var1279)\n  (declare-fun var1279!val!1 () var1279)\n  ;; cardinality constraint:\n  (forall ((x var1279)) (or (= x var1279!val!0) (= x var1279!val!1)))\n  ;; -----------\n  (define-fun null-var1279 () var1279\n    var1279!val!1)\n  (define-fun var2002 () Int\n    (hashCode/-467973558 (image/197050796 var2446)))\n  (define-fun var2446 () var1279\n    var1279!val!0)\n  (define-fun var1086 () String\n    (image/197050796 var2446))\n  (define-fun hashCode/-467973558 ((x!0 String)) Int\n    0)\n  (define-fun image/197050796 ((x!0 var1279)) String\n    \"\")\n)\n(error \"line 19 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132820992,
            "run_time": 0.6106977462768555,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2446 () var1279 var1279!4)\r\n  (define-fun null-var1279 () var1279 var1279!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: int hashCode()>"
        ],
        "api_count": {
            "<java.lang.String: int hashCode()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.Token",
            "$r1 = r0.<org.javacc.parser.Token: java.lang.String image>",
            "$i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>()",
            "return $i0"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.TryBlock__dump__-520384416\\1531.smt2",
        "z3": {
            "memory": 21553152,
            "run_time": 0.07407855987548828,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1859:\r\n  ;;   var1859!val!1 var1859!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1859!val!1 () var1859)\r\n  (declare-fun var1859!val!0 () var1859)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1859)) (or (= x var1859!val!1) (= x var1859!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3309:\r\n  ;;   var3309!val!1 var3309!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3309!val!1 () var3309)\r\n  (declare-fun var3309!val!0 () var3309)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3309)) (or (= x var3309!val!1) (= x var3309!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3980:\r\n  ;;   var3980!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3980!val!0 () var3980)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3980)) (= x var3980!val!0))\r\n  ;; -----------\r\n  ;; universe for var2071:\r\n  ;;   var2071!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2071!val!0 () var2071)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2071)) (= x var2071!val!0))\r\n  ;; -----------\r\n  (define-fun var2857 () Bool\r\n    (var3309_contains/1636690605 var1019 (cast-from-var1859-to-var2071 var791)))\r\n  (define-fun var3462 () String\r\n    (dump/1891027141 (cast-from-var1859-to-var3980 var791) var772 var1019))\r\n  (define-fun var3462!1 () String\r\n    \"\")\r\n  (define-fun var1036 () var3980\r\n    (exp/-2143951105 var791!1))\r\n  (define-fun var1496 () String\r\n    (str.++ (dump/1891027141 (cast-from-var1859-to-var3980 var791) var772 var1019)\r\n        var1859-eol))\r\n  (define-fun var791 () var1859\r\n    var1859!val!0)\r\n  (define-fun var1019 () var3309\r\n    var3309!val!0)\r\n  (define-fun var1029 () String\r\n    var1859-eol)\r\n  (define-fun null-var3309 () var3309\r\n    var3309!val!1)\r\n  (define-fun var3275 () String\r\n    (dump/1891027141 (exp/-2143951105 var791!1) (+ var772 1) var1019!1))\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var3269 () Int\r\n    (+ var772 1))\r\n  (define-fun var772 () Int\r\n    2)\r\n  (define-fun null-var1859 () var1859\r\n    var1859!val!1)\r\n  (define-fun var1019!1 () var3309\r\n    var3309!val!1)\r\n  (define-fun var1496!1 () String\r\n    \"\")\r\n  (define-fun var791!1 () var1859\r\n    var1859!val!1)\r\n  (define-fun var1859-eol () String\r\n    \"\")\r\n  (define-fun var3275!1 () String\r\n    \"\")\r\n  (define-fun cast-from-var1859-to-var3980 ((x!0 var1859)) var3980\r\n    var3980!val!0)\r\n  (define-fun cast-from-var1859-to-var2071 ((x!0 var1859)) var2071\r\n    var2071!val!0)\r\n  (define-fun var3309_contains/1636690605 ((x!0 var3309) (x!1 var2071)) Bool\r\n    false)\r\n  (define-fun dump/1891027141 ((x!0 var3980) (x!1 Int) (x!2 var3309)) String\r\n    \"\")\r\n  (define-fun exp/-2143951105 ((x!0 var1859)) var3980\r\n    var3980!val!0)\r\n  (define-fun var3309_add/-1142548109 ((x!0 var3309) (x!1 var2071)) Bool\r\n    false)\r\n  (define-fun append/1671819796 ((x!0 String) (x!1 String)) String\r\n    \"\")\r\n)\r\n(error \"line 55 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11317248,
            "run_time": 0.01569056510925293,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1859 is 2\r\n; rep: (as @var1859_0 var1859)\r\n; rep: (as @var1859_1 var1859)\r\n; cardinality of var3309 is 2\r\n; rep: (as @var3309_0 var3309)\r\n; rep: (as @var3309_1 var3309)\r\n; cardinality of var3980 is 1\r\n; rep: (as @var3980_0 var3980)\r\n; cardinality of var2071 is 1\r\n; rep: (as @var2071_0 var2071)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun dump/1891027141 ((_arg_1 var3980) (_arg_2 Int) (_arg_3 var3309)) String \"\")\r\n(define-fun cast-from-var1859-to-var3980 ((_arg_1 var1859)) var3980 (as @var3980_0 var3980))\r\n(define-fun var3309_contains/1636690605 ((_arg_1 var3309) (_arg_2 var2071)) Bool false)\r\n(define-fun cast-from-var1859-to-var2071 ((_arg_1 var1859)) var2071 (as @var2071_0 var2071))\r\n(define-fun var3309_add/-1142548109 ((BOUND_VARIABLE_705 var3309) (BOUND_VARIABLE_706 var2071)) Bool false)\r\n(define-fun exp/-2143951105 ((BOUND_VARIABLE_709 var1859)) var3980 (as @var3980_0 var3980))\r\n(define-fun append/1671819796 ((BOUND_VARIABLE_712 String) (BOUND_VARIABLE_713 String)) String \"\")\r\n(define-fun null-var1859 () var1859 (as @var1859_0 var1859))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var3309 () var3309 (as @var3309_0 var3309))\r\n(define-fun var1859-eol () String \"\")\r\n(define-fun var791 () var1859 (as @var1859_1 var1859))\r\n(define-fun var772 () Int 0)\r\n(define-fun var1019 () var3309 (as @var3309_1 var3309))\r\n(define-fun var1019!1 () var3309 (as @var3309_0 var3309))\r\n(define-fun var791!1 () var1859 (as @var1859_0 var1859))\r\n(define-fun var3462!1 () String \"\")\r\n(define-fun var1496!1 () String \"\")\r\n(define-fun var3275!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36950016,
            "run_time": 0.04665803909301758,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 54 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 55 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153522176,
            "run_time": 0.6809549331665039,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.TryBlock__dump__-520384416\\1531.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3462!1 =\r\n     concat(all_18_0, rhs)\r\n   ... sat\r\n\r\n480ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.TryBlock",
            "i0 := @parameter0: int",
            "r1 := @parameter1: java.util.Set",
            "r2 = specialinvoke r0.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>(i0, r1)",
            "$z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r0)",
            "if $z0 == 0 goto interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)",
            "interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)",
            "$r3 = <org.javacc.parser.TryBlock: java.lang.String eol>",
            "$r6 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3)",
            "$r4 = r0.<org.javacc.parser.TryBlock: org.javacc.parser.Expansion exp>",
            "$i1 = i0 + 1",
            "$r5 = virtualinvoke $r4.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>($i1, r1)",
            "virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>($r5)",
            "return r2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.ZeroOrMore__dump__-16149678\\1563.smt2",
        "z3": {
            "memory": 32370688,
            "run_time": 0.04360556602478027,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2991:\r\n  ;;   var2991!val!1 var2991!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2991!val!1 () var2991)\r\n  (declare-fun var2991!val!0 () var2991)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2991)) (or (= x var2991!val!1) (= x var2991!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2449:\r\n  ;;   var2449!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2449!val!0 () var2449)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2449)) (= x var2449!val!0))\r\n  ;; -----------\r\n  ;; universe for var1076:\r\n  ;;   var1076!val!0 var1076!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1076!val!0 () var1076)\r\n  (declare-fun var1076!val!1 () var1076)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1076)) (or (= x var1076!val!0) (= x var1076!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2241:\r\n  ;;   var2241!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2241!val!0 () var2241)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2241)) (= x var2241!val!0))\r\n  ;; -----------\r\n  (define-fun null-var1076 () var1076\r\n    var1076!val!1)\r\n  (define-fun var1797 () String\r\n    (str.++ (dump/1891027141 (cast-from-var1076-to-var2241 var1046) var3021 var341)\r\n        var1076-eol))\r\n  (define-fun var1046 () var1076\r\n    var1076!val!0)\r\n  (define-fun var2665 () var2241\r\n    (expansion/-1064619827 var1046!1))\r\n  (define-fun var341 () var2991\r\n    var2991!val!0)\r\n  (define-fun var386 () String\r\n    (dump/1891027141 (cast-from-var1076-to-var2241 var1046) var3021 var341))\r\n  (define-fun var2696 () String\r\n    var1076-eol)\r\n  (define-fun var179 () Int\r\n    (+ var3021 1))\r\n  (define-fun var675 () String\r\n    (dump/1891027141 (expansion/-1064619827 var1046!1) (+ var3021 1) var341!1))\r\n  (define-fun var386!1 () String\r\n    \"\")\r\n  (define-fun var157 () Bool\r\n    (var2991_contains/1636690605 var341 (cast-from-var1076-to-var2449 var1046)))\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var3021 () Int\r\n    2)\r\n  (define-fun null-var2991 () var2991\r\n    var2991!val!1)\r\n  (define-fun var341!1 () var2991\r\n    var2991!val!1)\r\n  (define-fun var1797!1 () String\r\n    \"\")\r\n  (define-fun var1076-eol () String\r\n    \"\")\r\n  (define-fun var675!1 () String\r\n    \"\")\r\n  (define-fun var1046!1 () var1076\r\n    var1076!val!0)\r\n  (define-fun var2991_contains/1636690605 ((x!0 var2991) (x!1 var2449)) Bool\r\n    false)\r\n  (define-fun cast-from-var1076-to-var2449 ((x!0 var1076)) var2449\r\n    var2449!val!0)\r\n  (define-fun cast-from-var1076-to-var2241 ((x!0 var1076)) var2241\r\n    var2241!val!0)\r\n  (define-fun dump/1891027141 ((x!0 var2241) (x!1 Int) (x!2 var2991)) String\r\n    \"\")\r\n  (define-fun var2991_add/-1142548109 ((x!0 var2991) (x!1 var2449)) Bool\r\n    false)\r\n  (define-fun expansion/-1064619827 ((x!0 var1076)) var2241\r\n    var2241!val!0)\r\n  (define-fun append/1671819796 ((x!0 String) (x!1 String)) String\r\n    \"\")\r\n)\r\n(error \"line 55 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11329536,
            "run_time": 0.015337944030761719,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1076 is 2\r\n; rep: (as @var1076_0 var1076)\r\n; rep: (as @var1076_1 var1076)\r\n; cardinality of var2991 is 2\r\n; rep: (as @var2991_0 var2991)\r\n; rep: (as @var2991_1 var2991)\r\n; cardinality of var2241 is 1\r\n; rep: (as @var2241_0 var2241)\r\n; cardinality of var2449 is 1\r\n; rep: (as @var2449_0 var2449)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun dump/1891027141 ((_arg_1 var2241) (_arg_2 Int) (_arg_3 var2991)) String \"\")\r\n(define-fun cast-from-var1076-to-var2241 ((_arg_1 var1076)) var2241 (as @var2241_0 var2241))\r\n(define-fun var2991_contains/1636690605 ((_arg_1 var2991) (_arg_2 var2449)) Bool false)\r\n(define-fun cast-from-var1076-to-var2449 ((_arg_1 var1076)) var2449 (as @var2449_0 var2449))\r\n(define-fun var2991_add/-1142548109 ((BOUND_VARIABLE_705 var2991) (BOUND_VARIABLE_706 var2449)) Bool false)\r\n(define-fun expansion/-1064619827 ((BOUND_VARIABLE_709 var1076)) var2241 (as @var2241_0 var2241))\r\n(define-fun append/1671819796 ((BOUND_VARIABLE_712 String) (BOUND_VARIABLE_713 String)) String \"\")\r\n(define-fun null-var1076 () var1076 (as @var1076_0 var1076))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var2991 () var2991 (as @var2991_0 var2991))\r\n(define-fun var1076-eol () String \"\")\r\n(define-fun var1046 () var1076 (as @var1076_1 var1076))\r\n(define-fun var3021 () Int 0)\r\n(define-fun var341 () var2991 (as @var2991_1 var2991))\r\n(define-fun var341!1 () var2991 (as @var2991_0 var2991))\r\n(define-fun var1046!1 () var1076 (as @var1076_0 var1076))\r\n(define-fun var386!1 () String \"\")\r\n(define-fun var1797!1 () String \"\")\r\n(define-fun var675!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36945920,
            "run_time": 0.04599881172180176,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 54 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 55 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155574272,
            "run_time": 0.6360368728637695,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.ZeroOrMore__dump__-16149678\\1563.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var386!1 =\r\n     concat(all_18_0, rhs)\r\n   ... sat\r\n\r\n448ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.ZeroOrMore",
            "i0 := @parameter0: int",
            "r1 := @parameter1: java.util.Set",
            "r2 = specialinvoke r0.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>(i0, r1)",
            "$z0 = interfaceinvoke r1.<java.util.Set: boolean contains(java.lang.Object)>(r0)",
            "if $z0 == 0 goto interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)",
            "interfaceinvoke r1.<java.util.Set: boolean add(java.lang.Object)>(r0)",
            "$r3 = <org.javacc.parser.ZeroOrMore: java.lang.String eol>",
            "$r6 = virtualinvoke r2.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3)",
            "$r4 = r0.<org.javacc.parser.ZeroOrMore: org.javacc.parser.Expansion expansion>",
            "$i1 = i0 + 1",
            "$r5 = virtualinvoke $r4.<org.javacc.parser.Expansion: java.lang.StringBuffer dump(int,java.util.Set)>($i1, r1)",
            "virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.StringBuffer)>($r5)",
            "return r2"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__DumpNonAsciiMoveMethod__-2042856763\\2697.smt2",
        "z3": {
            "memory": 33779712,
            "run_time": 60.011003494262695,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 16826368,
            "run_time": 60.0066397190094,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 43868160,
            "run_time": 0.2619357109069824,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 168 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 169 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 374312960,
            "run_time": 1.1341111660003662,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var978/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.NfaState__DumpNonAsciiMoveMethod__-2042856763\\2697.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1553!1 =\r\n     concat(all_66_8, \"(int hiByte, int i1, int i2, \")\r\n   all_63_4 =\r\n     concat(all_63_5, \" l2)\")\r\n   var2392!1 =\r\n     concat(all_60_4, \" l2)\")\r\n   var851!1 =\r\n     concat(all_57_3, var1938_getLongType/-387263599)\r\n   var3331!1 =\r\n     concat(all_51_3, \" jjCanMove_\")\r\n   var1614!1 =\r\n     concat(all_48_3, \" l1, \")\r\n   var2590!1 =\r\n     concat(all_38_2, var1938_getLongType/-387263599)\r\n   var1472!1 =\r\n     concat(\"private static final \", var1938_getBooleanType/-2111917935)\r\n   var474!1 =\r\n     concat(all_54_3, rhs)\r\n   all_38_2 =\r\n     concat(all_96_6, \"(int hiByte, int i1, int i2, \")\r\n   all_66_8 =\r\n     concat(all_66_9, \" jjCanMove_\")\r\n   all_63_5 =\r\n     concat(all_63_6, var1938_getLongType/-387263599)\r\n   all_60_4 =\r\n     concat(all_60_5, var1938_getLongType/-387263599)\r\n   all_57_3 =\r\n     concat(all_57_4, \" l1, \")\r\n   all_54_3 =\r\n     concat(all_54_4, \" jjCanMove_\")\r\n   all_48_3 =\r\n     concat(all_48_4, var1938_getLongType/-387263599)\r\n   all_51_3 =\r\n     concat(\"private static final \", var1938_getBooleanType/-2111917935)\r\n   all_96_6 =\r\n     concat(all_96_7, \" jjCanMove_\")\r\n   all_48_4 =\r\n     concat(all_93_6, \"(int hiByte, int i1, int i2, \")\r\n   all_63_6 =\r\n     concat(all_63_7, \" l1, \")\r\n   all_60_5 =\r\n     concat(all_60_6, \" l1, \")\r\n   all_57_4 =\r\n     concat(all_57_5, var1938_getLongType/-387263599)\r\n   all_66_9 =\r\n     concat(\"private static final \", var1938_getBooleanType/-2111917935)\r\n   all_54_4 =\r\n     concat(\"private static final \", var1938_getBooleanType/-2111917935)\r\n   all_93_6 =\r\n     concat(all_93_7, \" jjCanMove_\")\r\n   all_57_5 =\r\n     concat(all_90_6, \"(int hiByte, int i1, int i2, \")\r\n   all_63_7 =\r\n     concat(all_63_8, var1938_getLongType/-387263599)\r\n   all_60_6 =\r\n     concat(all_60_7, var1938_getLongType/-387263599)\r\n   all_96_7 =\r\n     concat(\"private static final \", var1938_getBooleanType/-2111917935)\r\n   all_90_6 =\r\n     concat(all_90_7, \" jjCanMove_\")\r\n   all_60_7 =\r\n     concat(all_87_6, \"(int hiByte, int i1, int i2, \")\r\n   all_63_8 =\r\n     concat(all_84_6, \"(int hiByte, int i1, int i2, \")\r\n   all_93_7 =\r\n     concat(\"private static final \", var1938_getBooleanType/-2111917935)\r\n   all_87_6 =\r\n     concat(all_87_7, \" jjCanMove_\")\r\n   all_84_6 =\r\n     concat(all_84_7, \" jjCanMove_\")\r\n   all_90_7 =\r\n     concat(\"private static final \", var1938_getBooleanType/-2111917935)\r\n   all_87_7 =\r\n     concat(\"private static final \", var1938_getBooleanType/-2111917935)\r\n   all_84_7 =\r\n     concat(\"private static final \", var1938_getBooleanType/-2111917935)\r\n\r\n888ms\r\n"
        },
        "undefined_function_count": 10,
        "assertion_count": 52,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 8,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r9 := @this: org.javacc.parser.NfaState",
            "r0 := @parameter0: org.javacc.parser.CodeGenerator",
            "$z0 = virtualinvoke r0.<org.javacc.parser.CodeGenerator: boolean isJavaLanguage()>()",
            "if $z0 == 0 goto $r99 = new java.lang.StringBuilder",
            "$r78 = newarray (java.lang.Object)[1]",
            "$r98 = new java.lang.StringBuilder",
            "specialinvoke $r98.<java.lang.StringBuilder: void <init>()>()",
            "$r81 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private static final \")",
            "$r80 = staticinvoke <org.javacc.parser.Options: java.lang.String getBooleanType()>()",
            "$r82 = virtualinvoke $r81.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r80)",
            "$r83 = virtualinvoke $r82.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" jjCanMove_\")",
            "$i17 = r9.<org.javacc.parser.NfaState: int nonAsciiMethod>",
            "$r84 = virtualinvoke $r83.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i17)",
            "$r86 = virtualinvoke $r84.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(int hiByte, int i1, int i2, \")",
            "$r85 = staticinvoke <org.javacc.parser.Options: java.lang.String getLongType()>()",
            "$r87 = virtualinvoke $r86.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85)",
            "$r89 = virtualinvoke $r87.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" l1, \")",
            "$r88 = staticinvoke <org.javacc.parser.Options: java.lang.String getLongType()>()",
            "$r90 = virtualinvoke $r89.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r88)",
            "$r91 = virtualinvoke $r90.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" l2)\")",
            "$r92 = virtualinvoke $r91.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r78[0] = $r92",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r78)",
            "goto [?= $r21 = newarray (java.lang.Object)[1]]",
            "$r21 = newarray (java.lang.Object)[1]",
            "$r21[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r21)",
            "$r22 = newarray (java.lang.Object)[1]",
            "$r22[0] = \"   switch(hiByte)\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r22)",
            "$r23 = newarray (java.lang.Object)[1]",
            "$r23[0] = \"   {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r23)",
            "$r24 = r9.<org.javacc.parser.NfaState: java.util.Vector loByteVec>",
            "if $r24 == null goto $r93 = newarray (java.lang.Object)[1]",
            "$r93 = newarray (java.lang.Object)[1]",
            "$r93[0] = \"      default :\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r93)",
            "$r94 = r9.<org.javacc.parser.NfaState: int[] nonAsciiMoveIndices>",
            "if $r94 == null goto $r95 = newarray (java.lang.Object)[1]",
            "$r95 = newarray (java.lang.Object)[1]",
            "$r95[0] = \"         return false;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r95)",
            "$r96 = newarray (java.lang.Object)[1]",
            "$r96[0] = \"   }\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r96)",
            "$r97 = newarray (java.lang.Object)[1]",
            "$r97[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r97)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.utils.TokenMgrError__LexicalError__-1197374142\\1714.smt2",
        "z3": {
            "memory": 33570816,
            "run_time": 60.001232385635376,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11304960,
            "run_time": 0.06138300895690918,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1016 is 1\r\n; rep: (as @var1016_0 var1016)\r\n; cardinality of var3023 is 1\r\n; rep: (as @var3023_0 var3023)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun String_valueOf/-371898945 ((_arg_1 Int)) String \"B\")\r\n(define-fun var3023_addEscapes/-2068437822 ((_arg_1 String)) String \"\")\r\n(define-fun null-Bool () Bool true)\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1706 () Bool false)\r\n(define-fun var1836 () Int (- 1))\r\n(define-fun var3200 () Int (- 1))\r\n(define-fun var3413 () Int (- 1))\r\n(define-fun var1517 () String \"\")\r\n(define-fun var1322 () Int (- 1))\r\n(define-fun var1925!1 () String \"\")\r\n(define-fun var1925!2 () String \"Lexical error at line \")\r\n(define-fun var2862!1 () String \"Lexical error at line \")\r\n(define-fun var1252!1 () String \"Lexical error at line , column \")\r\n(define-fun var1098!1 () String \"Lexical error at line , column \")\r\n(define-fun var179!1 () String \"Lexical error at line , column .  Encountered: \")\r\n(define-fun var1899!1 () String \"\")\r\n(define-fun var1899!2 () String \"\"\"\")\r\n(define-fun var657!1 () String \"\"\"\")\r\n(define-fun var2101!1 () String \"\"\"\"\"\")\r\n(define-fun var274!1 () String \"\"\"\"\" (\")\r\n(define-fun var2276!1 () String \"\"\"\"\" (\")\r\n(define-fun var40!1 () String \"\"\"\"\" (), \")\r\n(define-fun var1001!1 () String \"Lexical error at line , column .  Encountered: \"\"\"\" (), \")\r\n(define-fun var2385!1 () String \"Lexical error at line , column .  Encountered: \"\"\"\" (), after : \"\"\")\r\n(define-fun var1163!1 () String \"Lexical error at line , column .  Encountered: \"\"\"\" (), after : \"\"\")\r\n(define-fun var3229!1 () String \"Lexical error at line , column .  Encountered: \"\"\"\" (), after : \"\"\"\"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36573184,
            "run_time": 0.07708883285522461,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 115 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 116 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 271003648,
            "run_time": 60.01533889770508,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 44,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: java.lang.String valueOf(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 12,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 3,
            "<java.lang.String: java.lang.String valueOf(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "z0 := @parameter0: boolean",
            "i3 := @parameter1: int",
            "i0 := @parameter2: int",
            "i1 := @parameter3: int",
            "r16 := @parameter4: java.lang.String",
            "c2 := @parameter5: char",
            "$r23 = new java.lang.StringBuilder",
            "specialinvoke $r23.<java.lang.StringBuilder: void <init>()>()",
            "$r1 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Lexical error at line \")",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", column \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)",
            "$r14 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".  Encountered: \")",
            "if z0 == 0 goto $r24 = new java.lang.StringBuilder",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r6 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c2)",
            "$r7 = staticinvoke <org.javacc.utils.TokenMgrError: java.lang.String addEscapes(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" (\")",
            "$i4 = (int) c2",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i4)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"), \")",
            "$r22 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"after : \\\"\")",
            "$r17 = staticinvoke <org.javacc.utils.TokenMgrError: java.lang.String addEscapes(java.lang.String)>(r16)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17)",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r21"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.Version__\u300aclinit\u300b__2131636352\\1687.smt2",
        "z3": {
            "memory": 9707520,
            "run_time": 0.09609842300415039,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 94 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11317248,
            "run_time": 0.015338659286499023,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36229120,
            "run_time": 0.047846317291259766,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 94 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 161406976,
            "run_time": 0.6370782852172852,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 26,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r15 = \"??\"",
            "r16 = \"??\"",
            "r17 = \"??\"",
            "$r0 = new java.util.Properties",
            "specialinvoke $r0.<java.util.Properties: void <init>()>()",
            "$r1 = class \"Lorg/javacc/Version;\"",
            "r2 = virtualinvoke $r1.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(\"/version.properties\")",
            "if r2 == null goto <org.javacc.Version: java.lang.String majorVersion> = r15",
            "<org.javacc.Version: java.lang.String majorVersion> = r15",
            "<org.javacc.Version: java.lang.String minorVersion> = r16",
            "<org.javacc.Version: java.lang.String patchVersion> = r17",
            "$r18 = new java.lang.StringBuilder",
            "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()",
            "$r19 = <org.javacc.Version: java.lang.String majorVersion>",
            "$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r22 = <org.javacc.Version: java.lang.String minorVersion>",
            "$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()",
            "<org.javacc.Version: java.lang.String majorDotMinor> = $r24",
            "$r25 = new java.lang.StringBuilder",
            "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()",
            "$r26 = <org.javacc.Version: java.lang.String majorVersion>",
            "$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)",
            "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r29 = <org.javacc.Version: java.lang.String minorVersion>",
            "$r6 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)",
            "$z0 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 == 0 goto $r3 = new java.lang.StringBuilder",
            "$r30 = \"\"",
            "goto [?= $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)]",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "<org.javacc.Version: java.lang.String versionNumber> = $r8",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.Version__\u300aclinit\u300b__2131636352\\1713.smt2",
        "z3": {
            "memory": 18673664,
            "run_time": 0.04474282264709473,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1813!1 () String\r\n    \"\")\r\n  (define-fun var1813!2 () String\r\n    \"\")\r\n  (define-fun var349-minorVersion () String\r\n    \"\")\r\n  (define-fun var235!1 () String\r\n    \".\")\r\n  (define-fun var228!1 () String\r\n    \".\")\r\n  (define-fun var1006!1 () String\r\n    \"\")\r\n  (define-fun var349!class () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun null-var1129 () var1129\r\n    var1129!val!0)\r\n  (define-fun var349-majorVersion () String\r\n    \"\")\r\n  (define-fun var3616!2 () String\r\n    \".\")\r\n  (define-fun var1669!1 () String\r\n    \".\")\r\n  (define-fun var1006!2 () String\r\n    \"\")\r\n  (define-fun var2722!1 () String\r\n    \"..??\")\r\n  (define-fun var3038!1 () String\r\n    \".\")\r\n  (define-fun var919!1 () String\r\n    \".??\")\r\n  (define-fun var3616!1 () String\r\n    \"\")\r\n  (define-fun var1576!1 () var313\r\n    var313!val!0)\r\n  (define-fun var313-init () var313\r\n    var313!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1601 () String\r\n    (str.++ var1813!1\r\n        var349-majorVersion\r\n        \".\"\r\n        var349-minorVersion\r\n        var3616!1\r\n        \".\"\r\n        \"??\"))\r\n  (define-fun var3062 () String\r\n    var349-minorVersion)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1006 () String\r\n    String-init)\r\n  (define-fun var1363 () String\r\n    var349-minorVersion)\r\n  (define-fun var919 () String\r\n    (str.++ var3616!1 \".\"))\r\n  (define-fun var2987 () String\r\n    (str.++ var1006!1 var349-majorVersion \".\" var349-minorVersion))\r\n  (define-fun var3038 () String\r\n    (str.++ var1813!1 var349-majorVersion))\r\n  (define-fun var2562 () String\r\n    \"??\")\r\n  (define-fun var2033 () String\r\n    \"??\")\r\n  (define-fun var2662 () String\r\n    (str.++ var1006!1 var349-majorVersion \".\" var349-minorVersion))\r\n  (define-fun var1669 () String\r\n    (str.++ var1006!1 var349-majorVersion \".\"))\r\n  (define-fun var1576 () var313\r\n    var313-init)\r\n  (define-fun var2776 () String\r\n    \"??\")\r\n  (define-fun var2135 () String\r\n    \"??\")\r\n  (define-fun var42 () String\r\n    (str.++ var1813!1\r\n        var349-majorVersion\r\n        \".\"\r\n        var349-minorVersion\r\n        var3616!1\r\n        \".\"\r\n        \"??\"))\r\n  (define-fun var2722 () String\r\n    (str.++ var1813!1 var349-majorVersion \".\" var349-minorVersion))\r\n  (define-fun var1884 () var1129\r\n    (getResourceAsStream/2018191724 var349!class \"/version.properties\"))\r\n  (define-fun var1997 () ClassObject\r\n    var349!class)\r\n  (define-fun var166 () String\r\n    (str.++ var3616!1 \".\" \"??\"))\r\n  (define-fun var228 () String\r\n    (str.++ var1006!1 var349-majorVersion))\r\n  (define-fun var1813 () String\r\n    String-init)\r\n  (define-fun var3316 () String\r\n    (str.++ var1006!1 var349-majorVersion \".\" var349-minorVersion))\r\n  (define-fun var235 () String\r\n    (str.++ var1813!1 var349-majorVersion \".\"))\r\n  (define-fun var3616 () String\r\n    String-init)\r\n  (define-fun var538 () String\r\n    \"??\")\r\n  (define-fun var1672 () String\r\n    (str.++ var3616!1 \".\" \"??\"))\r\n  (define-fun var3541 () String\r\n    var349-majorVersion)\r\n  (define-fun var3906 () String\r\n    \"??\")\r\n  (define-fun var2234 () Bool\r\n    (= \"??\" \"\"))\r\n  (define-fun var207 () String\r\n    (str.++ var1813!1\r\n        var349-majorVersion\r\n        \".\"\r\n        var349-minorVersion\r\n        var3616!1\r\n        \".\"\r\n        \"??\"))\r\n  (define-fun var1705 () String\r\n    var349-majorVersion)\r\n  (define-fun getResourceAsStream/2018191724 ((x!0 ClassObject) (x!1 String)) var1129\r\n    var1129!val!0)\r\n  (define-fun <init>/964458484 ((x!0 var313)) void\r\n    void!val!0)\r\n)\r\n(error \"line 108 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11317248,
            "run_time": 0.015038728713989258,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var313 is 1\r\n; rep: (as @var313_0 var313)\r\n; cardinality of var349 is 1\r\n; rep: (as @var349_0 var349)\r\n; cardinality of var1129 is 1\r\n; rep: (as @var1129_0 var1129)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var349!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var313-init () var313 (as @var313_0 var313))\r\n(define-fun <init>/964458484 ((BOUND_VARIABLE_788 var313)) void (as @void_0 void))\r\n(define-fun getResourceAsStream/2018191724 ((BOUND_VARIABLE_791 ClassObject) (BOUND_VARIABLE_792 String)) var1129 (as @var1129_0 var1129))\r\n(define-fun String-init () String \"\")\r\n(define-fun null-var1129 () var1129 (as @var1129_0 var1129))\r\n(define-fun var349-majorVersion () String \"\")\r\n(define-fun var349-minorVersion () String \"\")\r\n(define-fun var1576!1 () var313 (as @var313_0 var313))\r\n(define-fun var1006!1 () String \"\")\r\n(define-fun var1006!2 () String \"\")\r\n(define-fun var228!1 () String \".\")\r\n(define-fun var1669!1 () String \".\")\r\n(define-fun var1813!1 () String \"\")\r\n(define-fun var1813!2 () String \"\")\r\n(define-fun var3038!1 () String \".\")\r\n(define-fun var235!1 () String \".\")\r\n(define-fun var3616!1 () String \"\")\r\n(define-fun var3616!2 () String \".\")\r\n(define-fun var919!1 () String \".??\")\r\n(define-fun var2722!1 () String \"..??\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36331520,
            "run_time": 0.04597878456115723,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1129:\n  ;;   var1129!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1129!val!0 () var1129)\n  ;; cardinality constraint:\n  (forall ((x var1129)) (= x var1129!val!0))\n  ;; -----------\n  (define-fun var1813!2 () String\n    \"\")\n  (define-fun var349-minorVersion () String\n    \"\")\n  (define-fun var2722!1 () String\n    \"..??\")\n  (define-fun var1006!2 () String\n    \"\")\n  (define-fun var349!class () ClassObject\n    ClassObject!val!0)\n  (define-fun null-var1129 () var1129\n    var1129!val!0)\n  (define-fun var3038!1 () String\n    \".\")\n  (define-fun var919!1 () String\n    \".??\")\n  (define-fun var3616!1 () String\n    \"\")\n  (define-fun var1813!1 () String\n    \"\")\n  (define-fun var235!1 () String\n    \".\")\n  (define-fun var1006!1 () String\n    \"\")\n  (define-fun var228!1 () String\n    \".\")\n  (define-fun var349-majorVersion () String\n    \"\")\n  (define-fun var3616!2 () String\n    \".\")\n  (define-fun var1669!1 () String\n    \".\")\n  (define-fun var1576!1 () var313\n    var313!val!0)\n  (define-fun var313-init () var313\n    var313!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1006 () String\n    String-init)\n  (define-fun var1363 () String\n    var349-minorVersion)\n  (define-fun var919 () String\n    (str.++ var3616!1 \".\"))\n  (define-fun var3038 () String\n    (str.++ var1813!1 var349-majorVersion))\n  (define-fun var2987 () String\n    (str.++ var1006!1 var349-majorVersion \".\" var349-minorVersion))\n  (define-fun var2234 () Bool\n    (= \"??\" \"\"))\n  (define-fun var2562 () String\n    \"??\")\n  (define-fun var2033 () String\n    \"??\")\n  (define-fun var2662 () String\n    (str.++ var1006!1 var349-majorVersion \".\" var349-minorVersion))\n  (define-fun var1669 () String\n    (str.++ var1006!1 var349-majorVersion \".\"))\n  (define-fun var2776 () String\n    \"??\")\n  (define-fun var2135 () String\n    \"??\")\n  (define-fun var42 () String\n    (str.++ var1813!1\n        var349-majorVersion\n        \".\"\n        var349-minorVersion\n        var3616!1\n        \".\"\n        \"??\"))\n  (define-fun var2722 () String\n    (str.++ var1813!1 var349-majorVersion \".\" var349-minorVersion))\n  (define-fun var166 () String\n    (str.++ var3616!1 \".\" \"??\"))\n  (define-fun var228 () String\n    (str.++ var1006!1 var349-majorVersion))\n  (define-fun var1813 () String\n    String-init)\n  (define-fun var3316 () String\n    (str.++ var1006!1 var349-majorVersion \".\" var349-minorVersion))\n  (define-fun var235 () String\n    (str.++ var1813!1 var349-majorVersion \".\"))\n  (define-fun var3616 () String\n    String-init)\n  (define-fun var538 () String\n    \"??\")\n  (define-fun var1672 () String\n    (str.++ var3616!1 \".\" \"??\"))\n  (define-fun var3541 () String\n    var349-majorVersion)\n  (define-fun var3906 () String\n    \"??\")\n  (define-fun var1576 () var313\n    var313-init)\n  (define-fun var1884 () var1129\n    (getResourceAsStream/2018191724 var349!class \"/version.properties\"))\n  (define-fun var1997 () ClassObject\n    var349!class)\n  (define-fun var1705 () String\n    var349-majorVersion)\n  (define-fun var1601 () String\n    (str.++ var1813!1\n        var349-majorVersion\n        \".\"\n        var349-minorVersion\n        var3616!1\n        \".\"\n        \"??\"))\n  (define-fun var207 () String\n    (str.++ var1813!1\n        var349-majorVersion\n        \".\"\n        var349-minorVersion\n        var3616!1\n        \".\"\n        \"??\"))\n  (define-fun var3062 () String\n    var349-minorVersion)\n  (define-fun getResourceAsStream/2018191724 ((x!0 ClassObject) (x!1 String)) var1129\n    var1129!val!0)\n  (define-fun <init>/964458484 ((x!0 var313)) void\n    void!val!0)\n)\n(error \"line 108 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 208330752,
            "run_time": 0.9712271690368652,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2722!1 () String \"..??\")\r\n  (define-fun var919!1 () String \".??\")\r\n  (define-fun var3616!2 () String \".\")\r\n  (define-fun var3616!1 () String \"\")\r\n  (define-fun var235!1 () String \".\")\r\n  (define-fun var3038!1 () String \".\")\r\n  (define-fun var1813!2 () String \"\")\r\n  (define-fun var1813!1 () String \"\")\r\n  (define-fun var1669!1 () String \".\")\r\n  (define-fun var228!1 () String \".\")\r\n  (define-fun var1006!2 () String \"\")\r\n  (define-fun var1006!1 () String \"\")\r\n  (define-fun var349-minorVersion () String \"\")\r\n  (define-fun var349-majorVersion () String \"\")\r\n  (define-fun null-var1129 () var1129 var1129!42)\r\n  (define-fun var349!class () ClassObject ClassObject!40)\r\n  (define-fun var1129!42 () var1129 (getResourceAsStream/2018191724 ClassObject!40 \"/version.properties\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 33,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 9,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3,
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r15 = \"??\"",
            "r16 = \"??\"",
            "r17 = \"??\"",
            "$r0 = new java.util.Properties",
            "specialinvoke $r0.<java.util.Properties: void <init>()>()",
            "$r1 = class \"Lorg/javacc/Version;\"",
            "r2 = virtualinvoke $r1.<java.lang.Class: java.io.InputStream getResourceAsStream(java.lang.String)>(\"/version.properties\")",
            "if r2 == null goto <org.javacc.Version: java.lang.String majorVersion> = r15",
            "<org.javacc.Version: java.lang.String majorVersion> = r15",
            "<org.javacc.Version: java.lang.String minorVersion> = r16",
            "<org.javacc.Version: java.lang.String patchVersion> = r17",
            "$r18 = new java.lang.StringBuilder",
            "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()",
            "$r19 = <org.javacc.Version: java.lang.String majorVersion>",
            "$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r22 = <org.javacc.Version: java.lang.String minorVersion>",
            "$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>()",
            "<org.javacc.Version: java.lang.String majorDotMinor> = $r24",
            "$r25 = new java.lang.StringBuilder",
            "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()",
            "$r26 = <org.javacc.Version: java.lang.String majorVersion>",
            "$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)",
            "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r29 = <org.javacc.Version: java.lang.String minorVersion>",
            "$r6 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)",
            "$z0 = virtualinvoke r17.<java.lang.String: boolean equals(java.lang.Object)>(\"\")",
            "if $z0 == 0 goto $r3 = new java.lang.StringBuilder",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r17)",
            "$r30 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "<org.javacc.Version: java.lang.String versionNumber> = $r8",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.LexGen__DumpFillToken__-1149223321\\1242.smt2",
        "z3": {
            "memory": 33583104,
            "run_time": 60.00405693054199,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 18923520,
            "run_time": 60.009095430374146,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37486592,
            "run_time": 60.00787901878357,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 123551744,
            "run_time": 0.4799051284790039,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.LexGen__DumpFillToken__-1149223321\\1242.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n270ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 56,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 5,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.LexGen",
            "d0 = staticinvoke <org.javacc.parser.JavaFiles: double getVersion(java.lang.String)>(\"Token.java\")",
            "$b0 = d0 cmpl 4.09",
            "$i2 = (int) $b0",
            "if $i2 <= 0 goto $z6 = 0",
            "$z6 = 0",
            "z0 = $z6",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r58 = new java.lang.StringBuilder",
            "specialinvoke $r58.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = <org.javacc.parser.LexGen: java.lang.String staticString>",
            "$r4 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"protected Token jjFillToken()\")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r6",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r1)",
            "$r7 = newarray (java.lang.Object)[1]",
            "$r7[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r7)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"   final Token t;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r8)",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r9[0] = \"   final String curTokenImage;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r9)",
            "$z1 = <org.javacc.parser.LexGen: boolean keepLineCol>",
            "if $z1 == 0 goto $z2 = <org.javacc.parser.LexGen: boolean hasEmptyMatch>",
            "$z2 = <org.javacc.parser.LexGen: boolean hasEmptyMatch>",
            "if $z2 == 0 goto $r10 = newarray (java.lang.Object)[1]",
            "$r10 = newarray (java.lang.Object)[1]",
            "$r10[0] = \"   String im = jjstrLiteralImages[jjmatchedKind];\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r10)",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \"   curTokenImage = (im == null) ? input_stream.GetImage() : im;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r11)",
            "$z3 = <org.javacc.parser.LexGen: boolean keepLineCol>",
            "if $z3 == 0 goto $r57 = staticinvoke <org.javacc.parser.Options: java.lang.String getTokenFactory()>()",
            "$r57 = staticinvoke <org.javacc.parser.Options: java.lang.String getTokenFactory()>()",
            "$i1 = virtualinvoke $r57.<java.lang.String: int length()>()",
            "if $i1 <= 0 goto (branch)",
            "$r24 = newarray (java.lang.Object)[1]",
            "$r59 = new java.lang.StringBuilder",
            "specialinvoke $r59.<java.lang.StringBuilder: void <init>()>()",
            "$r27 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"   t = \")",
            "$r26 = staticinvoke <org.javacc.parser.Options: java.lang.String getTokenFactory()>()",
            "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r26)",
            "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".newToken(jjmatchedKind, curTokenImage);\")",
            "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r24[0] = $r30",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r24)",
            "goto [?= $z7 = <org.javacc.parser.LexGen: boolean keepLineCol>]",
            "$z7 = <org.javacc.parser.LexGen: boolean keepLineCol>",
            "if $z7 == 0 goto $r15 = newarray (java.lang.Object)[1]",
            "$r15 = newarray (java.lang.Object)[1]",
            "$r15[0] = \"\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r15)",
            "$r16 = newarray (java.lang.Object)[1]",
            "$r16[0] = \"   return t;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r16)",
            "$r17 = newarray (java.lang.Object)[1]",
            "$r17[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r17)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.LexGenCPP__PrintClassHead__576427989\\878.smt2",
        "z3": {
            "memory": 33427456,
            "run_time": 60.00891828536987,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 18161664,
            "run_time": 60.005764961242676,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36462592,
            "run_time": 0.07693195343017578,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 308 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 309 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 353804288,
            "run_time": 1.1617388725280762,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1973/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.LexGenCPP__PrintClassHead__576427989\\878.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_97_4 =\r\n     concat(all_97_5, \";\")\r\n   all_64_0 =\r\n     concat(all_93_5, \"Constants.h\\u{0}22\")\r\n   var2444!1 =\r\n     concat(all_90_4, \";\")\r\n   var2567!1 =\r\n     concat(all_87_4, \"Constants.h\\u{0}22\")\r\n   var3745!1 =\r\n     concat(\"class \", var3897-cu_name)\r\n   var3747!1 =\r\n     concat(\"#include \\u{0}22\", var3897-cu_name)\r\n   all_97_5 =\r\n     concat(\"class \", var3897-cu_name)\r\n   all_90_4 =\r\n     concat(\"class \", var3897-cu_name)\r\n   all_93_5 =\r\n     concat(\"#include \\u{0}22\", var3897-cu_name)\r\n   all_87_4 =\r\n     concat(\"#include \\u{0}22\", var3897-cu_name)\r\n\r\n833ms\r\n"
        },
        "undefined_function_count": 19,
        "assertion_count": 86,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 8,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3,
            "<java.lang.String: int length()>": 2
        },
        "jimple_statements": [
            "r2 := @this: org.javacc.parser.LexGenCPP",
            "$r0 = new java.util.ArrayList",
            "$r1 = <org.javacc.parser.JavaCCGlobals: java.util.List toolNames>",
            "specialinvoke $r0.<java.util.ArrayList: void <init>(java.util.Collection)>($r1)",
            "interfaceinvoke $r0.<java.util.List: boolean add(java.lang.Object)>(\"JavaCC\")",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void switchToStaticsFile()>()",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void switchToIncludeFile()>()",
            "$r3 = newarray (java.lang.Object)[1]",
            "$r3[0] = \"#include \\\"stdio.h\\\"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r3)",
            "$r4 = newarray (java.lang.Object)[1]",
            "$r4[0] = \"#include \\\"JavaCC.h\\\"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r4)",
            "$r5 = newarray (java.lang.Object)[1]",
            "$r5[0] = \"#include \\\"CharStream.h\\\"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r5)",
            "$r6 = newarray (java.lang.Object)[1]",
            "$r6[0] = \"#include \\\"Token.h\\\"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r6)",
            "$r7 = newarray (java.lang.Object)[1]",
            "$r7[0] = \"#include \\\"ErrorHandler.h\\\"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r7)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"#include \\\"TokenManager.h\\\"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r8)",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r10 = new java.lang.StringBuilder",
            "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()",
            "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"#include \\\"\")",
            "$r11 = <org.javacc.parser.JavaCCGlobals: java.lang.String cu_name>",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Constants.h\\\"\")",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r9[0] = $r15",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r9)",
            "$r16 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"TOKEN_MANAGER_INCLUDE\")",
            "$i0 = virtualinvoke $r16.<java.lang.String: int length()>()",
            "if $i0 <= 0 goto $r17 = newarray (java.lang.Object)[1]",
            "$r17 = newarray (java.lang.Object)[1]",
            "$r17[0] = \"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r17)",
            "$r18 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"NAMESPACE\")",
            "$i1 = virtualinvoke $r18.<java.lang.String: int length()>()",
            "if $i1 <= 0 goto $r19 = newarray (java.lang.Object)[1]",
            "$r19 = newarray (java.lang.Object)[1]",
            "$r20 = new java.lang.StringBuilder",
            "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()",
            "$r22 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"class \")",
            "$r21 = <org.javacc.parser.JavaCCGlobals: java.lang.String cu_name>",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\";\")",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r19[0] = $r25",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r19)",
            "$r26 = newarray (java.lang.Object)[1]",
            "$r26[0] = \"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r26)",
            "$r27 = newarray (java.lang.Object)[1]",
            "$r27[0] = \"/** Token Manager. */\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r27)",
            "$r94 = staticinvoke <org.javacc.parser.Options: java.lang.String stringValue(java.lang.String)>(\"TOKEN_MANAGER_SUPER_CLASS\")",
            "$r30 = <org.javacc.parser.LexGenCPP: java.lang.String tokMgrClassName>",
            "$r37 = newarray (java.lang.String)[0]",
            "$r28 = newarray (java.lang.String)[1]",
            "$r29 = new java.lang.StringBuilder",
            "specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()",
            "$r34 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"public TokenManager\")",
            "if $r94 != null goto $r31 = new java.lang.StringBuilder",
            "$r102 = \"\"",
            "goto [?= $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102)]",
            "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r102)",
            "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r28[0] = $r36",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genClassStart(java.lang.String,java.lang.String,java.lang.String[],java.lang.String[])>(null, $r30, $r37, $r28)",
            "$r38 = <org.javacc.parser.JavaCCGlobals: java.util.List token_mgr_decls>",
            "if $r38 == null goto $z0 = staticinvoke <org.javacc.parser.Options: boolean getCommonTokenAction()>()",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean getCommonTokenAction()>()",
            "if $z0 == 0 goto $r105 = newarray (java.lang.Object)[1]",
            "$r105 = newarray (java.lang.Object)[1]",
            "$r105[0] = \"\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r105)",
            "$r106 = newarray (java.lang.Object)[1]",
            "$r106[0] = \"  FILE *debugStream;\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r106)",
            "$r107 = <org.javacc.parser.LexGenCPP: java.lang.String tokMgrClassName>",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void generateMethodDefHeader(java.lang.String,java.lang.String,java.lang.String)>(\"  void \", $r107, \"setDebugStream(FILE *ds)\")",
            "$r108 = newarray (java.lang.Object)[1]",
            "$r108[0] = \"{ debugStream = ds; }\"",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void genCodeLine(java.lang.Object[])>($r108)",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void switchToIncludeFile()>()",
            "$z4 = staticinvoke <org.javacc.parser.Options: boolean getTokenManagerUsesParser()>()",
            "if $z4 == 0 goto virtualinvoke r2.<org.javacc.parser.LexGenCPP: void switchToMainFile()>()",
            "virtualinvoke r2.<org.javacc.parser.LexGenCPP: void switchToMainFile()>()",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.TableDrivenJavaCodeGenerator__dumpMatchInfo__-1680043134\\1600.smt2",
        "z3": {
            "memory": 34004992,
            "run_time": 60.01347732543945,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 17530880,
            "run_time": 60.00643014907837,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37326848,
            "run_time": 60.01261568069458,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 373178368,
            "run_time": 60.01093053817749,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 19,
        "assertion_count": 83,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r18 := @this: org.javacc.parser.TableDrivenJavaCodeGenerator",
            "r7 := @parameter0: org.javacc.parser.CodeGenerator",
            "r0 := @parameter1: org.javacc.parser.TokenizerData",
            "r1 = r0.<org.javacc.parser.TokenizerData: java.util.Map allMatches>",
            "$r88 = new java.util.BitSet",
            "$i0 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "specialinvoke $r88.<java.util.BitSet: void <init>(int)>($i0)",
            "$r89 = new java.util.BitSet",
            "$i1 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "specialinvoke $r89.<java.util.BitSet: void <init>(int)>($i1)",
            "$r90 = new java.util.BitSet",
            "$i2 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "specialinvoke $r90.<java.util.BitSet: void <init>(int)>($i2)",
            "$r91 = new java.util.BitSet",
            "$i3 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "specialinvoke $r91.<java.util.BitSet: void <init>(int)>($i3)",
            "$i4 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "r6 = newarray (int)[$i4]",
            "$i5 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "$i6 = $i5 + 1",
            "virtualinvoke $r88.<java.util.BitSet: void set(int,boolean)>($i6, 1)",
            "$i7 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "$i8 = $i7 + 1",
            "virtualinvoke $r91.<java.util.BitSet: void set(int,boolean)>($i8, 1)",
            "$i9 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "$i10 = $i9 + 1",
            "virtualinvoke $r90.<java.util.BitSet: void set(int,boolean)>($i10, 1)",
            "$i11 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "$i12 = $i11 + 1",
            "virtualinvoke $r89.<java.util.BitSet: void set(int,boolean)>($i12, 1)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"public static final String[] jjstrLiteralImages = {\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r8)",
            "i22 = 0",
            "$r9 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>()",
            "r80 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>()",
            "$z0 = interfaceinvoke r80.<java.util.Iterator: boolean hasNext()>()",
            "if $z0 == 0 goto $r10 = newarray (java.lang.Object)[1]",
            "$r10 = newarray (java.lang.Object)[1]",
            "$r10[0] = \"};\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r10)",
            "staticinvoke <org.javacc.parser.TableDrivenJavaCodeGenerator: void generateBitVector(java.lang.String,java.util.BitSet,org.javacc.parser.CodeGenerator)>(\"jjtoSkip\", $r88, r7)",
            "staticinvoke <org.javacc.parser.TableDrivenJavaCodeGenerator: void generateBitVector(java.lang.String,java.util.BitSet,org.javacc.parser.CodeGenerator)>(\"jjtoSpecial\", $r89, r7)",
            "staticinvoke <org.javacc.parser.TableDrivenJavaCodeGenerator: void generateBitVector(java.lang.String,java.util.BitSet,org.javacc.parser.CodeGenerator)>(\"jjtoMore\", $r90, r7)",
            "staticinvoke <org.javacc.parser.TableDrivenJavaCodeGenerator: void generateBitVector(java.lang.String,java.util.BitSet,org.javacc.parser.CodeGenerator)>(\"jjtoToken\", $r91, r7)",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \"private static final int[] jjnewLexState = {\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r11)",
            "i27 = 0",
            "$i13 = lengthof r6",
            "if i27 >= $i13 goto $r12 = newarray (java.lang.Object)[1]",
            "$r12 = newarray (java.lang.Object)[1]",
            "$r12[0] = \"};\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r12)",
            "$z1 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z1 == 0 goto $r87 = \"\"",
            "$r87 = \"static \"",
            "$r86 = \"static \"",
            "$r85 = \"static \"",
            "goto [?= $r13 = newarray (java.lang.Object)[1]]",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r96 = new java.lang.StringBuilder",
            "specialinvoke $r96.<java.lang.StringBuilder: void <init>()>()",
            "$r15 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"void TokenLexicalActions(Token matchedToken) {\")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r13[0] = $r17",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r13)",
            "$r19 = <org.javacc.parser.TokenizerData$MatchType: org.javacc.parser.TokenizerData$MatchType TOKEN>",
            "specialinvoke r18.<org.javacc.parser.TableDrivenJavaCodeGenerator: void dumpLexicalActions(java.util.Map,org.javacc.parser.TokenizerData$MatchType,java.lang.String,org.javacc.parser.CodeGenerator)>(r1, $r19, \"matchedToken.kind\", r7)",
            "$r20 = newarray (java.lang.Object)[1]",
            "$r20[0] = \"}\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r20)",
            "$r21 = newarray (java.lang.Object)[1]",
            "$r97 = new java.lang.StringBuilder",
            "specialinvoke $r97.<java.lang.StringBuilder: void <init>()>()",
            "$r23 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"void SkipLexicalActions(Token matchedToken) {\")",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r21[0] = $r25",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r21)",
            "$r26 = <org.javacc.parser.TokenizerData$MatchType: org.javacc.parser.TokenizerData$MatchType SKIP>",
            "specialinvoke r18.<org.javacc.parser.TableDrivenJavaCodeGenerator: void dumpLexicalActions(java.util.Map,org.javacc.parser.TokenizerData$MatchType,java.lang.String,org.javacc.parser.CodeGenerator)>(r1, $r26, \"jjmatchedKind\", r7)",
            "$r27 = <org.javacc.parser.TokenizerData$MatchType: org.javacc.parser.TokenizerData$MatchType SPECIAL_TOKEN>",
            "specialinvoke r18.<org.javacc.parser.TableDrivenJavaCodeGenerator: void dumpLexicalActions(java.util.Map,org.javacc.parser.TokenizerData$MatchType,java.lang.String,org.javacc.parser.CodeGenerator)>(r1, $r27, \"jjmatchedKind\", r7)",
            "$r28 = newarray (java.lang.Object)[1]",
            "$r28[0] = \"}\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r28)",
            "$r29 = newarray (java.lang.Object)[1]",
            "$r98 = new java.lang.StringBuilder",
            "specialinvoke $r98.<java.lang.StringBuilder: void <init>()>()",
            "$r31 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87)",
            "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"void MoreLexicalActions() {\")",
            "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r29[0] = $r33",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r29)",
            "$r34 = newarray (java.lang.Object)[1]",
            "$r34[0] = \"jjimageLen += (lengthOfMatch = jjmatchedPos + 1);\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r34)",
            "$r35 = <org.javacc.parser.TokenizerData$MatchType: org.javacc.parser.TokenizerData$MatchType MORE>",
            "specialinvoke r18.<org.javacc.parser.TableDrivenJavaCodeGenerator: void dumpLexicalActions(java.util.Map,org.javacc.parser.TokenizerData$MatchType,java.lang.String,org.javacc.parser.CodeGenerator)>(r1, $r35, \"jjmatchedKind\", r7)",
            "$r36 = newarray (java.lang.Object)[1]",
            "$r36[0] = \"}\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r36)",
            "$r37 = newarray (java.lang.Object)[1]",
            "$r37[0] = \"public String[] lexStateNames = {\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r37)",
            "i28 = 0",
            "$r84 = r0.<org.javacc.parser.TokenizerData: java.lang.String[] lexStateNames>",
            "$i29 = lengthof $r84",
            "if i28 >= $i29 goto $r38 = newarray (java.lang.Object)[1]",
            "$r38 = newarray (java.lang.Object)[1]",
            "$r38[0] = \"};\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r38)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__DumpNonAsciiMoveMethod__-2042856763\\2707.smt2",
        "z3": {
            "memory": 33370112,
            "run_time": 60.01457071304321,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 16318464,
            "run_time": 60.00453019142151,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37285888,
            "run_time": 60.009883403778076,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 361697280,
            "run_time": 1.1368606090545654,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2633/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.NfaState__DumpNonAsciiMoveMethod__-2042856763\\2707.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var128!1 =\r\n     concat(all_65_4, \" l2)\")\r\n   var3284!1 =\r\n     concat(all_59_3, var3330_getLongType/-387263599)\r\n   var2010!1 =\r\n     concat(all_56_3, \" l1, \")\r\n   var1492!1 =\r\n     concat(\"jjCanMove_(int hiByte, int i1, int i2, \", var3330_getLongType/-387263599)\r\n   all_65_4 =\r\n     concat(all_65_5, var3330_getLongType/-387263599)\r\n   all_59_3 =\r\n     concat(all_59_4, \" l1, \")\r\n   all_56_3 =\r\n     concat(\"jjCanMove_(int hiByte, int i1, int i2, \", var3330_getLongType/-387263599)\r\n   all_65_5 =\r\n     concat(all_65_6, \" l1, \")\r\n   all_59_4 =\r\n     concat(\"jjCanMove_(int hiByte, int i1, int i2, \", var3330_getLongType/-387263599)\r\n   all_65_6 =\r\n     concat(\"jjCanMove_(int hiByte, int i1, int i2, \", var3330_getLongType/-387263599)\r\n\r\n799ms\r\n"
        },
        "undefined_function_count": 11,
        "assertion_count": 55,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 9,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1
        },
        "jimple_statements": [
            "r9 := @this: org.javacc.parser.NfaState",
            "r0 := @parameter0: org.javacc.parser.CodeGenerator",
            "$z0 = virtualinvoke r0.<org.javacc.parser.CodeGenerator: boolean isJavaLanguage()>()",
            "if $z0 == 0 goto $r99 = new java.lang.StringBuilder",
            "$r99 = new java.lang.StringBuilder",
            "specialinvoke $r99.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r99.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")",
            "$r2 = staticinvoke <org.javacc.parser.Options: java.lang.String getBooleanType()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\")",
            "$r20 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r6 = <org.javacc.parser.Main: org.javacc.parser.LexGen lg>",
            "$r8 = <org.javacc.parser.LexGen: java.lang.String tokMgrClassName>",
            "$r100 = new java.lang.StringBuilder",
            "specialinvoke $r100.<java.lang.StringBuilder: void <init>()>()",
            "$r10 = virtualinvoke $r100.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"jjCanMove_\")",
            "$i0 = r9.<org.javacc.parser.NfaState: int nonAsciiMethod>",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(int hiByte, int i1, int i2, \")",
            "$r12 = staticinvoke <org.javacc.parser.Options: java.lang.String getLongType()>()",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)",
            "$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" l1, \")",
            "$r15 = staticinvoke <org.javacc.parser.Options: java.lang.String getLongType()>()",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" l2)\")",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void generateMethodDefHeader(java.lang.String,java.lang.String,java.lang.String)>($r20, $r8, $r19)",
            "$r21 = newarray (java.lang.Object)[1]",
            "$r21[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r21)",
            "$r22 = newarray (java.lang.Object)[1]",
            "$r22[0] = \"   switch(hiByte)\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r22)",
            "$r23 = newarray (java.lang.Object)[1]",
            "$r23[0] = \"   {\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r23)",
            "$r24 = r9.<org.javacc.parser.NfaState: java.util.Vector loByteVec>",
            "if $r24 == null goto $r93 = newarray (java.lang.Object)[1]",
            "$r93 = newarray (java.lang.Object)[1]",
            "$r93[0] = \"      default :\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r93)",
            "$r94 = r9.<org.javacc.parser.NfaState: int[] nonAsciiMoveIndices>",
            "if $r94 == null goto $r95 = newarray (java.lang.Object)[1]",
            "$r95 = newarray (java.lang.Object)[1]",
            "$r95[0] = \"         return false;\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r95)",
            "$r96 = newarray (java.lang.Object)[1]",
            "$r96[0] = \"   }\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r96)",
            "$r97 = newarray (java.lang.Object)[1]",
            "$r97[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r97)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.LexGen__DumpMoreActions__671181685\\1535.smt2",
        "z3": {
            "memory": 32395264,
            "run_time": 60.011154890060425,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13901824,
            "run_time": 60.01153492927551,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36491264,
            "run_time": 60.003374338150024,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176201728,
            "run_time": 0.8677144050598145,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1763/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.LexGen__DumpMoreActions__671181685\\1535.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_34_0 =\r\n     concat(var1763-staticString, \"void MoreLexicalActions()\")\r\n   var2773!1 =\r\n     concat(var1763-staticString, \"void MoreLexicalActions()\")\r\n\r\n632ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 37,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.LexGen",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = <org.javacc.parser.LexGen: java.lang.String staticString>",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"void MoreLexicalActions()\")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r6",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r1)",
            "$r7 = newarray (java.lang.Object)[1]",
            "$r7[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r7)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"   jjimageLen += (lengthOfMatch = jjmatchedPos + 1);\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r8)",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r9[0] = \"   switch(jjmatchedKind)\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r9)",
            "$r10 = newarray (java.lang.Object)[1]",
            "$r10[0] = \"   {\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r10)",
            "i18 = 0",
            "$i0 = <org.javacc.parser.LexGen: int maxOrdinal>",
            "if i18 >= $i0 goto $r11 = newarray (java.lang.Object)[1]",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \"      default :\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r11)",
            "$r12 = newarray (java.lang.Object)[1]",
            "$r12[0] = \"         break;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r12)",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r13[0] = \"   }\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r13)",
            "$r14 = newarray (java.lang.Object)[1]",
            "$r14[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r14)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.NfaState__DumpNonAsciiMove__-240350\\2641.smt2",
        "z3": {
            "memory": 33349632,
            "run_time": 60.00825572013855,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13373440,
            "run_time": 0.030343294143676758,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3460 is 2\r\n; rep: (as @var3460_0 var3460)\r\n; rep: (as @var3460_1 var3460)\r\n; cardinality of var762 is 2\r\n; rep: (as @var762_0 var762)\r\n; rep: (as @var762_1 var762)\r\n; cardinality of var3640 is 1\r\n; rep: (as @var3640_0 var3640)\r\n; cardinality of var2084 is 1\r\n; rep: (as @var2084_0 var2084)\r\n; cardinality of var3957 is 4\r\n; rep: (as @var3957_0 var3957)\r\n; rep: (as @var3957_1 var3957)\r\n; rep: (as @var3957_2 var3957)\r\n; rep: (as @var3957_3 var3957)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun selfLoop/-2129610754 ((_arg_1 var3460)) Bool false)\r\n(define-fun var3640_size/-959786421 ((_arg_1 var3640)) Int 0)\r\n(define-fun next/1847772117 ((_arg_1 var3460)) var3460 (as @var3460_1 var3460))\r\n(define-fun String-init () String \"\")\r\n(define-fun kindToPrint/1847772117 ((_arg_1 var3460)) Int (- 1))\r\n(define-fun var2084_getJavaUnicodeEscape/752328068 () Bool true)\r\n(define-fun arr-var3957-init () (Array Int var3957) ((as const (Array Int var3957)) (as @var3957_0 var3957)))\r\n(define-fun nonAsciiMethod/1847772117 ((_arg_1 var3460)) Int (- 1))\r\n(define-fun cast-from-String-to-var3957 ((_arg_1 String)) var3957 (ite (= \"                     kind = ;\" _arg_1) (as @var3957_1 var3957) (ite (= \"                  if (jjCanMove_(hiByte, i1, i2, l1, l2) && kind > )\" _arg_1) (as @var3957_0 var3957) (as @var3957_3 var3957))))\r\n(define-fun genCodeLine/787715242 ((BOUND_VARIABLE_2835 var762) (BOUND_VARIABLE_2836 (Array Int var3957))) void (as @void_0 void))\r\n(define-fun null-var3460 () var3460 (as @var3460_1 var3460))\r\n(define-fun null-var762 () var762 (as @var762_0 var762))\r\n(define-fun null-__Array__Int__Bool__ () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n(define-fun var3460-allStates () var3640 (as @var3640_0 var3640))\r\n(define-fun null-__Array__Int__var3957__ () (Array Int var3957) (store ((as const (Array Int var3957)) (as @var3957_1 var3957)) 0 (as @var3957_2 var3957)))\r\n(define-fun var3164 () var3460 (as @var3460_0 var3460))\r\n(define-fun var1988 () var762 (as @var762_1 var762))\r\n(define-fun var3790 () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var2089!1 () String \"\")\r\n(define-fun var2089!2 () String \" && kind > \")\r\n(define-fun var2269!1 () String \" && kind > \")\r\n(define-fun var274!1 () String \"\")\r\n(define-fun var274!2 () String \"                  if (jjCanMove_\")\r\n(define-fun var3838!1 () String \"                  if (jjCanMove_\")\r\n(define-fun var2888!1 () String \"                  if (jjCanMove_(hiByte, i1, i2, l1, l2)\")\r\n(define-fun var2893!1 () String \"                  if (jjCanMove_(hiByte, i1, i2, l1, l2) && kind > \")\r\n(define-fun var739!1 () String \"                  if (jjCanMove_(hiByte, i1, i2, l1, l2) && kind > )\")\r\n(define-fun var2010!1 () (Array Int var3957) ((as const (Array Int var3957)) (as @var3957_0 var3957)))\r\n(define-fun var1988!1 () var762 (as @var762_0 var762))\r\n(define-fun var2010!2 () (Array Int var3957) ((as const (Array Int var3957)) (as @var3957_0 var3957)))\r\n(define-fun var1364!1 () String \"\")\r\n(define-fun var1364!2 () String \"                     kind = \")\r\n(define-fun var1635!1 () String \"                     kind = \")\r\n(define-fun var1992!1 () String \"                     kind = ;\")\r\n(define-fun var3029!1 () (Array Int var3957) (store ((as const (Array Int var3957)) (as @var3957_2 var3957)) 0 (as @var3957_1 var3957)))\r\n(define-fun var1988!2 () var762 (as @var762_0 var762))\r\n(define-fun var3029!2 () (Array Int var3957) ((as const (Array Int var3957)) (as @var3957_0 var3957)))\r\n(define-fun var3518!1 () (Array Int var3957) ((as const (Array Int var3957)) (as @var3957_3 var3957)))\r\n(define-fun var1988!3 () var762 (as @var762_0 var762))\r\n(define-fun var3518!2 () (Array Int var3957) ((as const (Array Int var3957)) (as @var3957_0 var3957)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38449152,
            "run_time": 60.00905895233154,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 386781184,
            "run_time": 1.267094373703003,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3518!1 () (Array Int var3957) (store ((as const (Array Int var3957)) var3957!640) 0 var3957!632))\r\n  (define-fun var3029!1 () (Array Int var3957) (store ((as const (Array Int var3957)) var3957!638) 0 var3957!634))\r\n  (define-fun var1992!1 () String \"                     kind = ;\")\r\n  (define-fun var1635!1 () String \"                     kind = \")\r\n  (define-fun var1364!2 () String \"                     kind = \")\r\n  (define-fun var1364!1 () String \"\")\r\n  (define-fun var2010!1 () (Array Int var3957) (store ((as const (Array Int var3957)) var3957!642) 0 var3957!636))\r\n  (define-fun var739!1 () String \"                  if (jjCanMove_(hiByte, i1, i2, l1, l2) && kind > )\")\r\n  (define-fun var2893!1 () String \"                  if (jjCanMove_(hiByte, i1, i2, l1, l2) && kind > \")\r\n  (define-fun var2888!1 () String \"                  if (jjCanMove_(hiByte, i1, i2, l1, l2)\")\r\n  (define-fun var3838!1 () String \"                  if (jjCanMove_\")\r\n  (define-fun var274!2 () String \"                  if (jjCanMove_\")\r\n  (define-fun var274!1 () String \"\")\r\n  (define-fun var2269!1 () String \" && kind > \")\r\n  (define-fun var2089!2 () String \" && kind > \")\r\n  (define-fun var2089!1 () String \"\")\r\n  (define-fun var3790 () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n  (define-fun var1988 () var762 var762!612)\r\n  (define-fun var3164 () var3460 var3460!610)\r\n  (define-fun null-__Array__Int__var3957__ () (Array Int var3957) ((as const (Array Int var3957)) var3957!0))\r\n  (define-fun var3460-allStates () var3640 var3640!608)\r\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool) (store ((as const (Array Int Bool)) true) 0 false))\r\n  (define-fun null-var762 () var762 var762!606)\r\n  (define-fun null-var3460 () var3460 var3460!604)\r\n  (define-fun var3957!636 () var3957 (cast-from-String-to-var3957 \"                  if (jjCanMove_(hiByte, i1, i2, l1, l2) && kind > )\"))\r\n  (define-fun var3957!634 () var3957 (cast-from-String-to-var3957 \"                     kind = ;\"))\r\n  (define-fun var3957!632 () var3957 (cast-from-String-to-var3957 \"                  break;\"))\r\n  (define-fun var2084_getJavaUnicodeEscape/752328068 () Bool true)\r\n  (define-fun var3460!604 () var3460 (next/1847772117 var3460!610))\r\n  (define-fun abbrev_125 ((x!0 Int)) String (ite (= x!0 0) \"                     kind = \" \"\"))\r\n  (define-fun abbrev_117 ((x!0 Int)) String (ite (= x!0 0) \"                  if (jjCanMove_(hiByte, i1, i2, l1, l2)\" \"\"))\r\n  (define-fun abbrev_116 ((x!0 Int)) String (ite (= x!0 0) \"                  if (jjCanMove_\" \"\"))\r\n  (define-fun nonAsciiMethod/1847772117 ((x!0 var3460)) Int (ite (= x!0 var3460!610) (- 6) 0))\r\n  (define-fun kindToPrint/1847772117 ((x!0 var3460)) Int (ite (= x!0 var3460!610) (- 6) 0))\r\n  (define-fun var3640_size/-959786421 ((x!0 var3640)) Int (ite (= x!0 var3640!608) 0 0))\r\n  (define-fun selfLoop/-2129610754 ((x!0 var3460)) Bool (ite (= x!0 var3460!610) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 10,
        "assertion_count": 49,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.NfaState",
            "r5 := @parameter0: org.javacc.parser.CodeGenerator",
            "r122 := @parameter1: boolean[]",
            "$z0 = specialinvoke r0.<org.javacc.parser.NfaState: boolean selfLoop()>()",
            "if $z0 == 0 goto $z12 = 0",
            "$z12 = 0",
            "z13 = $z12",
            "i34 = 0",
            "$r145 = <org.javacc.parser.NfaState: java.util.List allStates>",
            "$i35 = interfaceinvoke $r145.<java.util.List: int size()>()",
            "if i34 >= $i35 goto $r1 = r0.<org.javacc.parser.NfaState: org.javacc.parser.NfaState next>",
            "$r1 = r0.<org.javacc.parser.NfaState: org.javacc.parser.NfaState next>",
            "if $r1 == null goto $r176 = new java.lang.StringBuilder",
            "$r176 = new java.lang.StringBuilder",
            "specialinvoke $r176.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r176.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" && kind > \")",
            "$i0 = r0.<org.javacc.parser.NfaState: int kindToPrint>",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r119 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$z1 = staticinvoke <org.javacc.parser.Options: boolean getJavaUnicodeEscape()>()",
            "if $z1 != 0 goto $r6 = newarray (java.lang.Object)[1]",
            "$r6 = newarray (java.lang.Object)[1]",
            "$r178 = new java.lang.StringBuilder",
            "specialinvoke $r178.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r178.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"                  if (jjCanMove_\")",
            "$i1 = r0.<org.javacc.parser.NfaState: int nonAsciiMethod>",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(hiByte, i1, i2, l1, l2)\")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r119)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r6[0] = $r13",
            "virtualinvoke r5.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r6)",
            "$r147 = newarray (java.lang.Object)[1]",
            "$r179 = new java.lang.StringBuilder",
            "specialinvoke $r179.<java.lang.StringBuilder: void <init>()>()",
            "$r149 = virtualinvoke $r179.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"                     kind = \")",
            "$i37 = r0.<org.javacc.parser.NfaState: int kindToPrint>",
            "$r150 = virtualinvoke $r149.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i37)",
            "$r151 = virtualinvoke $r150.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\";\")",
            "$r152 = virtualinvoke $r151.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r147[0] = $r152",
            "virtualinvoke r5.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r147)",
            "$r153 = newarray (java.lang.Object)[1]",
            "$r153[0] = \"                  break;\"",
            "virtualinvoke r5.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r153)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.TableDrivenJavaCodeGenerator__dumpMatchInfo__-1680043134\\1635.smt2",
        "z3": {
            "memory": 32198656,
            "run_time": 60.00715613365173,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 15290368,
            "run_time": 60.01539659500122,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35684352,
            "run_time": 60.01353359222412,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 383315968,
            "run_time": 60.00073599815369,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 19,
        "assertion_count": 83,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r18 := @this: org.javacc.parser.TableDrivenJavaCodeGenerator",
            "r7 := @parameter0: org.javacc.parser.CodeGenerator",
            "r0 := @parameter1: org.javacc.parser.TokenizerData",
            "r1 = r0.<org.javacc.parser.TokenizerData: java.util.Map allMatches>",
            "$r88 = new java.util.BitSet",
            "$i0 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "specialinvoke $r88.<java.util.BitSet: void <init>(int)>($i0)",
            "$r89 = new java.util.BitSet",
            "$i1 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "specialinvoke $r89.<java.util.BitSet: void <init>(int)>($i1)",
            "$r90 = new java.util.BitSet",
            "$i2 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "specialinvoke $r90.<java.util.BitSet: void <init>(int)>($i2)",
            "$r91 = new java.util.BitSet",
            "$i3 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "specialinvoke $r91.<java.util.BitSet: void <init>(int)>($i3)",
            "$i4 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "r6 = newarray (int)[$i4]",
            "$i5 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "$i6 = $i5 + 1",
            "virtualinvoke $r88.<java.util.BitSet: void set(int,boolean)>($i6, 1)",
            "$i7 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "$i8 = $i7 + 1",
            "virtualinvoke $r91.<java.util.BitSet: void set(int,boolean)>($i8, 1)",
            "$i9 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "$i10 = $i9 + 1",
            "virtualinvoke $r90.<java.util.BitSet: void set(int,boolean)>($i10, 1)",
            "$i11 = interfaceinvoke r1.<java.util.Map: int size()>()",
            "$i12 = $i11 + 1",
            "virtualinvoke $r89.<java.util.BitSet: void set(int,boolean)>($i12, 1)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"public static final String[] jjstrLiteralImages = {\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r8)",
            "i22 = 0",
            "$r9 = interfaceinvoke r1.<java.util.Map: java.util.Set keySet()>()",
            "r80 = interfaceinvoke $r9.<java.util.Set: java.util.Iterator iterator()>()",
            "$z0 = interfaceinvoke r80.<java.util.Iterator: boolean hasNext()>()",
            "if $z0 == 0 goto $r10 = newarray (java.lang.Object)[1]",
            "$r10 = newarray (java.lang.Object)[1]",
            "$r10[0] = \"};\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r10)",
            "staticinvoke <org.javacc.parser.TableDrivenJavaCodeGenerator: void generateBitVector(java.lang.String,java.util.BitSet,org.javacc.parser.CodeGenerator)>(\"jjtoSkip\", $r88, r7)",
            "staticinvoke <org.javacc.parser.TableDrivenJavaCodeGenerator: void generateBitVector(java.lang.String,java.util.BitSet,org.javacc.parser.CodeGenerator)>(\"jjtoSpecial\", $r89, r7)",
            "staticinvoke <org.javacc.parser.TableDrivenJavaCodeGenerator: void generateBitVector(java.lang.String,java.util.BitSet,org.javacc.parser.CodeGenerator)>(\"jjtoMore\", $r90, r7)",
            "staticinvoke <org.javacc.parser.TableDrivenJavaCodeGenerator: void generateBitVector(java.lang.String,java.util.BitSet,org.javacc.parser.CodeGenerator)>(\"jjtoToken\", $r91, r7)",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \"private static final int[] jjnewLexState = {\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r11)",
            "i27 = 0",
            "$i13 = lengthof r6",
            "if i27 >= $i13 goto $r12 = newarray (java.lang.Object)[1]",
            "$r12 = newarray (java.lang.Object)[1]",
            "$r12[0] = \"};\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r12)",
            "$z1 = staticinvoke <org.javacc.parser.Options: boolean getStatic()>()",
            "if $z1 == 0 goto $r87 = \"\"",
            "$r87 = \"\"",
            "$r86 = \"\"",
            "$r85 = \"\"",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r96 = new java.lang.StringBuilder",
            "specialinvoke $r96.<java.lang.StringBuilder: void <init>()>()",
            "$r15 = virtualinvoke $r96.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r86)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"void TokenLexicalActions(Token matchedToken) {\")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r13[0] = $r17",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r13)",
            "$r19 = <org.javacc.parser.TokenizerData$MatchType: org.javacc.parser.TokenizerData$MatchType TOKEN>",
            "specialinvoke r18.<org.javacc.parser.TableDrivenJavaCodeGenerator: void dumpLexicalActions(java.util.Map,org.javacc.parser.TokenizerData$MatchType,java.lang.String,org.javacc.parser.CodeGenerator)>(r1, $r19, \"matchedToken.kind\", r7)",
            "$r20 = newarray (java.lang.Object)[1]",
            "$r20[0] = \"}\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r20)",
            "$r21 = newarray (java.lang.Object)[1]",
            "$r97 = new java.lang.StringBuilder",
            "specialinvoke $r97.<java.lang.StringBuilder: void <init>()>()",
            "$r23 = virtualinvoke $r97.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r85)",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"void SkipLexicalActions(Token matchedToken) {\")",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r21[0] = $r25",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r21)",
            "$r26 = <org.javacc.parser.TokenizerData$MatchType: org.javacc.parser.TokenizerData$MatchType SKIP>",
            "specialinvoke r18.<org.javacc.parser.TableDrivenJavaCodeGenerator: void dumpLexicalActions(java.util.Map,org.javacc.parser.TokenizerData$MatchType,java.lang.String,org.javacc.parser.CodeGenerator)>(r1, $r26, \"jjmatchedKind\", r7)",
            "$r27 = <org.javacc.parser.TokenizerData$MatchType: org.javacc.parser.TokenizerData$MatchType SPECIAL_TOKEN>",
            "specialinvoke r18.<org.javacc.parser.TableDrivenJavaCodeGenerator: void dumpLexicalActions(java.util.Map,org.javacc.parser.TokenizerData$MatchType,java.lang.String,org.javacc.parser.CodeGenerator)>(r1, $r27, \"jjmatchedKind\", r7)",
            "$r28 = newarray (java.lang.Object)[1]",
            "$r28[0] = \"}\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r28)",
            "$r29 = newarray (java.lang.Object)[1]",
            "$r98 = new java.lang.StringBuilder",
            "specialinvoke $r98.<java.lang.StringBuilder: void <init>()>()",
            "$r31 = virtualinvoke $r98.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r87)",
            "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"void MoreLexicalActions() {\")",
            "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r29[0] = $r33",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r29)",
            "$r34 = newarray (java.lang.Object)[1]",
            "$r34[0] = \"jjimageLen += (lengthOfMatch = jjmatchedPos + 1);\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r34)",
            "$r35 = <org.javacc.parser.TokenizerData$MatchType: org.javacc.parser.TokenizerData$MatchType MORE>",
            "specialinvoke r18.<org.javacc.parser.TableDrivenJavaCodeGenerator: void dumpLexicalActions(java.util.Map,org.javacc.parser.TokenizerData$MatchType,java.lang.String,org.javacc.parser.CodeGenerator)>(r1, $r35, \"jjmatchedKind\", r7)",
            "$r36 = newarray (java.lang.Object)[1]",
            "$r36[0] = \"}\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r36)",
            "$r37 = newarray (java.lang.Object)[1]",
            "$r37[0] = \"public String[] lexStateNames = {\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r37)",
            "i28 = 0",
            "$r84 = r0.<org.javacc.parser.TokenizerData: java.lang.String[] lexStateNames>",
            "$i29 = lengthof $r84",
            "if i28 >= $i29 goto $r38 = newarray (java.lang.Object)[1]",
            "$r38 = newarray (java.lang.Object)[1]",
            "$r38[0] = \"};\"",
            "virtualinvoke r7.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r38)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.LexGen__DumpSkipActions__-641930977\\1497.smt2",
        "z3": {
            "memory": 32157696,
            "run_time": 60.0119469165802,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13750272,
            "run_time": 60.014145612716675,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36450304,
            "run_time": 60.00175952911377,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177512448,
            "run_time": 0.8499500751495361,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3326/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.LexGen__DumpSkipActions__-641930977\\1497.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_32_0 =\r\n     concat(var3326-staticString, \"void SkipLexicalActions(Token matchedToken)\")\r\n   var3786!1 =\r\n     concat(var3326-staticString, \"void SkipLexicalActions(Token matchedToken)\")\r\n\r\n623ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 34,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.LexGen",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = <org.javacc.parser.LexGen: java.lang.String staticString>",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"void SkipLexicalActions(Token matchedToken)\")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r6",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r1)",
            "$r7 = newarray (java.lang.Object)[1]",
            "$r7[0] = \"{\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r7)",
            "$r8 = newarray (java.lang.Object)[1]",
            "$r8[0] = \"   switch(jjmatchedKind)\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r8)",
            "$r9 = newarray (java.lang.Object)[1]",
            "$r9[0] = \"   {\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r9)",
            "i18 = 0",
            "$i0 = <org.javacc.parser.LexGen: int maxOrdinal>",
            "if i18 >= $i0 goto $r10 = newarray (java.lang.Object)[1]",
            "$r10 = newarray (java.lang.Object)[1]",
            "$r10[0] = \"      default :\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r10)",
            "$r11 = newarray (java.lang.Object)[1]",
            "$r11[0] = \"         break;\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r11)",
            "$r12 = newarray (java.lang.Object)[1]",
            "$r12[0] = \"   }\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r12)",
            "$r13 = newarray (java.lang.Object)[1]",
            "$r13[0] = \"}\"",
            "virtualinvoke r0.<org.javacc.parser.LexGen: void genCodeLine(java.lang.Object[])>($r13)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.TableDrivenJavaCodeGenerator__finish__-1546171361\\1507.smt2",
        "z3": {
            "memory": 31354880,
            "run_time": 60.00421452522278,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.014813423156738281,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var350 is 2\r\n; rep: (as @var350_0 var350)\r\n; rep: (as @var350_1 var350)\r\n; cardinality of var3573 is 2\r\n; rep: (as @var3573_0 var3573)\r\n; rep: (as @var3573_1 var3573)\r\n; cardinality of var113 is 1\r\n; rep: (as @var113_0 var113)\r\n; cardinality of var549 is 2\r\n; rep: (as @var549_0 var549)\r\n; rep: (as @var549_1 var549)\r\n; cardinality of var769 is 1\r\n; rep: (as @var769_0 var769)\r\n; cardinality of var1479 is 1\r\n; rep: (as @var1479_0 var1479)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun codeGenerator/1881512927 ((BOUND_VARIABLE_774 var350)) var113 (as @var113_0 var113))\r\n(define-fun arr-var549-init () (Array Int var549) ((as const (Array Int var549)) (as @var549_0 var549)))\r\n(define-fun cast-from-String-to-var549 ((_arg_1 String)) var549 (as @var549_1 var549))\r\n(define-fun genCodeLine/787715242 ((BOUND_VARIABLE_778 var113) (BOUND_VARIABLE_779 (Array Int var549))) void (as @void_0 void))\r\n(define-fun var769_getBuildParser/-805250893 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun var769_getOutputDirectory/873146074 () var1479 (as @var1479_0 var1479))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_782 String) (BOUND_VARIABLE_783 var549)) String \"\")\r\n(define-fun cast-from-var1479-to-var549 ((BOUND_VARIABLE_786 var1479)) var549 (as @var549_0 var549))\r\n(define-fun parserName/658263060 ((BOUND_VARIABLE_789 var3573)) String \"\")\r\n(define-fun saveOutput/-1572319013 ((BOUND_VARIABLE_792 var113) (BOUND_VARIABLE_793 String)) void (as @void_0 void))\r\n(define-fun null-var350 () var350 (as @var350_0 var350))\r\n(define-fun null-var3573 () var3573 (as @var3573_0 var3573))\r\n(define-fun null-__Array__Int__var549__ () (Array Int var549) (store ((as const (Array Int var549)) (as @var549_1 var549)) 0 (as @var549_0 var549)))\r\n(define-fun var1479-separator () String \"\")\r\n(define-fun var3482 () var350 (as @var350_1 var350))\r\n(define-fun var1867 () var3573 (as @var3573_1 var3573))\r\n(define-fun var1861!1 () (Array Int var549) (store ((as const (Array Int var549)) (as @var549_0 var549)) 0 (as @var549_1 var549)))\r\n(define-fun var1130!1 () var113 (as @var113_0 var113))\r\n(define-fun var1861!2 () (Array Int var549) ((as const (Array Int var549)) (as @var549_0 var549)))\r\n(define-fun var2551!1 () String \"\")\r\n(define-fun var2551!2 () String \"\")\r\n(define-fun var658!1 () String \"\")\r\n(define-fun var353!1 () String \"\")\r\n(define-fun var2765!1 () String \"TokenManager.java\")\r\n(define-fun var1428!1 () var113 (as @var113_0 var113))\r\n(define-fun var821!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35414016,
            "run_time": 60.002212047576904,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 183652352,
            "run_time": 0.8395023345947266,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3573/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.TableDrivenJavaCodeGenerator__finish__-1546171361\\1507.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2765!1 =\r\n     concat(all_31_4, \"TokenManager.java\")\r\n   var353!1 =\r\n     concat(all_28_4, all_28_3)\r\n   var658!1 =\r\n     concat(all_25_2, var1479-separator)\r\n   all_31_4 =\r\n     concat(all_31_6, all_28_3)\r\n   all_28_4 =\r\n     concat(all_25_2, var1479-separator)\r\n   all_31_6 =\r\n     concat(all_25_2, var1479-separator)\r\n\r\n617ms\r\n"
        },
        "undefined_function_count": 11,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.javacc.parser.TableDrivenJavaCodeGenerator",
            "r7 := @parameter0: org.javacc.parser.TokenizerData",
            "$r2 = r0.<org.javacc.parser.TableDrivenJavaCodeGenerator: org.javacc.parser.CodeGenerator codeGenerator>",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r1[0] = \"\\n}\"",
            "virtualinvoke $r2.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r1)",
            "$z0 = staticinvoke <org.javacc.parser.Options: boolean getBuildParser()>()",
            "if $z0 != 0 goto $r3 = new java.lang.StringBuilder",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = staticinvoke <org.javacc.parser.Options: java.io.File getOutputDirectory()>()",
            "$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4)",
            "$r5 = <java.io.File: java.lang.String separator>",
            "$r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = r7.<org.javacc.parser.TokenizerData: java.lang.String parserName>",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"TokenManager.java\")",
            "r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r13 = r0.<org.javacc.parser.TableDrivenJavaCodeGenerator: org.javacc.parser.CodeGenerator codeGenerator>",
            "virtualinvoke $r13.<org.javacc.parser.CodeGenerator: void saveOutput(java.lang.String)>(r12)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.TableDrivenJavaCodeGenerator__generateBitVector__-1939883418\\1702.smt2",
        "z3": {
            "memory": 31764480,
            "run_time": 60.00006580352783,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13066240,
            "run_time": 0.02912282943725586,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2879 is 1\r\n; rep: (as @var2879_0 var2879)\r\n; cardinality of var3911 is 2\r\n; rep: (as @var3911_0 var3911)\r\n; rep: (as @var3911_1 var3911)\r\n; cardinality of var3397 is 2\r\n; rep: (as @var3397_0 var3397)\r\n; rep: (as @var3397_1 var3397)\r\n; cardinality of var1 is 3\r\n; rep: (as @var1_0 var1)\r\n; rep: (as @var1_1 var1)\r\n; rep: (as @var1_2 var1)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var1-init () (Array Int var1) ((as const (Array Int var1)) (as @var1_0 var1)))\r\n(define-fun String-init () String \"\")\r\n(define-fun cast-from-String-to-var1 ((_arg_1 String)) var1 (ite (= \"private static final long[]  = {\" _arg_1) (as @var1_0 var1) (as @var1_2 var1)))\r\n(define-fun genCodeLine/787715242 ((BOUND_VARIABLE_880 var3397) (BOUND_VARIABLE_881 (Array Int var1))) void (as @void_0 void))\r\n(define-fun toLongArray/-721251322 ((_arg_1 var3911)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 0)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3911 () var3911 (as @var3911_0 var3911))\r\n(define-fun null-var3397 () var3397 (as @var3397_0 var3397))\r\n(define-fun null-__Array__Int__var1__ () (Array Int var1) ((as const (Array Int var1)) (as @var1_1 var1)))\r\n(define-fun var705 () String \"\")\r\n(define-fun var1395 () var3911 (as @var3911_1 var3911))\r\n(define-fun var2978 () var3397 (as @var3397_1 var3397))\r\n(define-fun var399!1 () String \"\")\r\n(define-fun var399!2 () String \"private static final long[] \")\r\n(define-fun var859!1 () String \"private static final long[] \")\r\n(define-fun var2492!1 () String \"private static final long[]  = {\")\r\n(define-fun var1629!1 () (Array Int var1) ((as const (Array Int var1)) (as @var1_0 var1)))\r\n(define-fun var2978!1 () var3397 (as @var3397_0 var3397))\r\n(define-fun var1629!2 () (Array Int var1) ((as const (Array Int var1)) (as @var1_0 var1)))\r\n(define-fun var3098!1 () (Array Int var1) ((as const (Array Int var1)) (as @var1_2 var1)))\r\n(define-fun var2978!2 () var3397 (as @var3397_0 var3397))\r\n(define-fun var3098!2 () (Array Int var1) ((as const (Array Int var1)) (as @var1_0 var1)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38494208,
            "run_time": 0.09315705299377441,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3911:\n  ;;   var3911!val!0 var3911!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3911!val!0 () var3911)\n  (declare-fun var3911!val!1 () var3911)\n  ;; cardinality constraint:\n  (forall ((x var3911)) (or (= x var3911!val!0) (= x var3911!val!1)))\n  ;; -----------\n  ;; universe for var1:\n  ;;   var1!val!1 var1!val!2 var1!val!4 var1!val!3 var1!val!5 var1!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1!val!1 () var1)\n  (declare-fun var1!val!2 () var1)\n  (declare-fun var1!val!4 () var1)\n  (declare-fun var1!val!3 () var1)\n  (declare-fun var1!val!5 () var1)\n  (declare-fun var1!val!0 () var1)\n  ;; cardinality constraint:\n  (forall ((x var1))\n          (or (= x var1!val!1)\n              (= x var1!val!2)\n              (= x var1!val!4)\n              (= x var1!val!3)\n              (= x var1!val!5)\n              (= x var1!val!0)))\n  ;; -----------\n  ;; universe for var3397:\n  ;;   var3397!val!0 var3397!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3397!val!0 () var3397)\n  (declare-fun var3397!val!1 () var3397)\n  ;; cardinality constraint:\n  (forall ((x var3397)) (or (= x var3397!val!0) (= x var3397!val!1)))\n  ;; -----------\n  (define-fun var859!1 () String\n    \"private static final long[] \\u{0}\\u{0}\")\n  (define-fun var399!1 () String\n    \"\")\n  (define-fun var399!2 () String\n    \"private static final long[] \")\n  (define-fun var2492!1 () String\n    \"private static final long[] \\u{0}\\u{0} = {\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3098!1 () (Array Int var1)\n    (store ((as const (Array Int var1)) var1!val!5) 0 var1!val!1))\n  (define-fun null-var3397 () var3397\n    var3397!val!1)\n  (define-fun null-__Array__Int__var1__ () (Array Int var1)\n    (store ((as const (Array Int var1)) var1!val!3) 8 var1!val!4))\n  (define-fun var3105 () (Array Int Int)\n    (toLongArray/-721251322 var1395))\n  (define-fun var705 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2513 () Int\n    (getLength-Arr-Int-1 (toLongArray/-721251322 var1395)))\n  (define-fun var2978 () var3397\n    var3397!val!0)\n  (define-fun var859 () String\n    (str.++ var399!1 \"private static final long[] \"))\n  (define-fun var1541 () String\n    (str.++ var399!1 \"private static final long[] \" var705 \" = {\"))\n  (define-fun var2492 () String\n    (str.++ var399!1 \"private static final long[] \" var705))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-var3911 () var3911\n    var3911!val!1)\n  (define-fun var3623 () String\n    (str.++ var399!1 \"private static final long[] \" var705 \" = {\"))\n  (define-fun var1629!1 () (Array Int var1)\n    (store ((as const (Array Int var1)) var1!val!2) 0 var1!val!0))\n  (define-fun var1434 () Int\n    0)\n  (define-fun var1629 () (Array Int var1)\n    arr-var1-init)\n  (define-fun var3098 () (Array Int var1)\n    arr-var1-init)\n  (define-fun var1395 () var3911\n    var3911!val!0)\n  (define-fun var399 () String\n    String-init)\n  (define-fun var2978!2 () var3397\n    var3397!val!0)\n  (define-fun var2978!1 () var3397\n    var3397!val!0)\n  (define-fun var1629!2 () (Array Int var1)\n    ((as const (Array Int var1)) var1!val!0))\n  (define-fun var3098!2 () (Array Int var1)\n    ((as const (Array Int var1)) var1!val!0))\n  (define-fun arr-var1-init () (Array Int var1)\n    ((as const (Array Int var1)) var1!val!0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun k!103 ((x!0 Int)) var1\n    (ite (= x!0 8) var1!val!4\n      var1!val!3))\n  (define-fun k!105 ((x!0 Int)) var1\n    (ite (= x!0 0) var1!val!1\n      var1!val!5))\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\n    0)\n  (define-fun cast-from-String-to-var1 ((x!0 String)) var1\n    (ite (= x!0 \"};\") var1!val!1\n      var1!val!0))\n  (define-fun toLongArray/-721251322 ((x!0 var3911)) (Array Int Int)\n    ((as const (Array Int Int)) 8))\n  (define-fun genCodeLine/787715242 ((x!0 var3397) (x!1 (Array Int var1))) void\n    void!val!0)\n)\n(error \"line 77 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176975872,
            "run_time": 0.8483288288116455,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3397/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\javacc\\smt\\method-org.javacc.parser.TableDrivenJavaCodeGenerator__generateBitVector__-1939883418\\1702.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_37_3 =\r\n     concat(all_37_4, \" = {\")\r\n   var2492!1 =\r\n     concat(all_34_3, \" = {\")\r\n   var859!1 =\r\n     concat(\"private static final long[] \", var705)\r\n   all_37_4 =\r\n     concat(\"private static final long[] \", var705)\r\n   all_34_3 =\r\n     concat(\"private static final long[] \", var705)\r\n\r\n617ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @parameter0: java.lang.String",
            "r8 := @parameter1: java.util.BitSet",
            "r0 := @parameter2: org.javacc.parser.CodeGenerator",
            "$r1 = newarray (java.lang.Object)[1]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"private static final long[] \")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" = {\")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r1[0] = $r7",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r1)",
            "r9 = virtualinvoke r8.<java.util.BitSet: long[] toLongArray()>()",
            "i2 = 0",
            "$i0 = lengthof r9",
            "if i2 >= $i0 goto $r10 = newarray (java.lang.Object)[1]",
            "$r10 = newarray (java.lang.Object)[1]",
            "$r10[0] = \"};\"",
            "virtualinvoke r0.<org.javacc.parser.CodeGenerator: void genCodeLine(java.lang.Object[])>($r10)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.javacc.parser.TokenMgrError__addEscapes__455866812\\1477.smt2",
        "z3": {
            "memory": 31653888,
            "run_time": 0.05843639373779297,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var683 () Int\r\n    0)\r\n  (define-fun var149 () String\r\n    var2660!1)\r\n  (define-fun var964 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2660 () String\r\n    String-init)\r\n  (define-fun var1373 () Int\r\n    (str.len var964))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2660!1 () String\r\n    \"\")\r\n  (define-fun <init>/-1430969082 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.014574527740478516,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2787 is 1\r\n; rep: (as @var2787_0 var2787)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1430969082 ((BOUND_VARIABLE_530 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var964 () String \"\")\r\n(define-fun var2660!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34623488,
            "run_time": 0.07772302627563477,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var149 () String\n    var2660!1)\n  (define-fun var2660 () String\n    String-init)\n  (define-fun var964 () String\n    \"\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var683 () Int\n    0)\n  (define-fun var1373 () Int\n    (str.len var964))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2660!1 () String\n    \"\")\n  (define-fun <init>/-1430969082 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150831104,
            "run_time": 0.6517069339752197,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var964 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r13 = new java.lang.StringBuffer",
            "specialinvoke $r13.<java.lang.StringBuffer: void <init>()>()",
            "i6 = 0",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "if i6 >= $i0 goto $r2 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r2 = virtualinvoke $r13.<java.lang.StringBuffer: java.lang.String toString()>()",
            "return $r2"
        ]
    }
]