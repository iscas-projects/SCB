(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var2599 0)
(declare-sort var1698 0)
(declare-sort var227 0)
(declare-sort var3423 0)
(declare-sort var440 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun String-init () String)
(define-fun <init>/-1061048412 ((s String)) String s)
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun property/-1137278833 (var2599) String)
(declare-fun append/-1166366385 (String Int) String)
(declare-fun column/-1137278833 (var2599) String)
(declare-fun javaType/-1137278833 (var2599) ClassObject)
(declare-fun append/-1031950772 (String var1698) String)
(declare-fun cast-from-ClassObject-to-var1698 (ClassObject) var1698)
(declare-fun jdbcType/-1137278833 (var2599) var227)
(declare-fun cast-from-var227-to-var1698 (var227) var1698)
(declare-fun nestedResultMapId/-1137278833 (var2599) String)
(declare-fun nestedQueryId/-1137278833 (var2599) String)
(declare-fun notNullColumns/-1137278833 (var2599) var3423)
(declare-fun cast-from-var3423-to-var1698 (var3423) var1698)
(declare-fun columnPrefix/-1137278833 (var2599) String)
(declare-fun flags/-1137278833 (var2599) var440)
(declare-fun cast-from-var440-to-var1698 (var440) var1698)
(declare-fun composites/-1137278833 (var2599) var440)
(declare-fun resultSet/-1137278833 (var2599) String)
(declare-fun foreignColumn/-1137278833 (var2599) String)
(declare-fun lazy/-1137278833 (var2599) Bool)
(declare-fun append/-388390247 (String Bool) String)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-const null-var2599 var2599)
(declare-const var3748 var2599) ; Statement: r1 := @this: org.apache.ibatis.mapping.ResultMapping 
(assert (not (= var3748 null-var2599)))
(define-const var461 String String-init) ; Statement: $r0 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/-1061048412 var461 "ResultMapping{")) ; Statement: specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("ResultMapping{") 
(declare-const var461!1 String)
(assert (= var461!1 "ResultMapping{"))
(assert true)
(define-const var2801 String (append/672562846 var461!1 "property=\u0027")) ; Statement: $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("property=\'") 
(declare-const var461!2 String)
(assert (= var461!2 (str.++ var461!1 "property=\u0027")))
(define-const var2854 String (property/-1137278833 var3748)) ; Statement: $r2 = r1.<org.apache.ibatis.mapping.ResultMapping: java.lang.String property> 
(assert true)
(define-const var2425 String (append/672562846 var2801 var2854)) ; Statement: $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) 
(declare-const var2801!1 String)
(assert (= var2801!1 (str.++ var2801 var2854)))
(assert true)
;(assert (append/-1166366385 var2425 39)) ; Statement: virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39) 
(declare-const var2425!1 String)
(assert (str.prefixof var2425 var2425!1))
(assert true)
(define-const var587 String (append/672562846 var461!2 ", column=\u0027")) ; Statement: $r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", column=\'") 
(declare-const var461!3 String)
(assert (= var461!3 (str.++ var461!2 ", column=\u0027")))
(define-const var2638 String (column/-1137278833 var3748)) ; Statement: $r5 = r1.<org.apache.ibatis.mapping.ResultMapping: java.lang.String column> 
(assert true)
(define-const var3046 String (append/672562846 var587 var2638)) ; Statement: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) 
(declare-const var587!1 String)
(assert (= var587!1 (str.++ var587 var2638)))
(assert true)
;(assert (append/-1166366385 var3046 39)) ; Statement: virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39) 
(declare-const var3046!1 String)
(assert (str.prefixof var3046 var3046!1))
(assert true)
(define-const var2735 String (append/672562846 var461!3 ", javaType=")) ; Statement: $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", javaType=") 
(declare-const var461!4 String)
(assert (= var461!4 (str.++ var461!3 ", javaType=")))
(define-const var3287 ClassObject (javaType/-1137278833 var3748)) ; Statement: $r8 = r1.<org.apache.ibatis.mapping.ResultMapping: java.lang.Class javaType> 
(assert true)
;(assert (append/-1031950772 var2735 (cast-from-ClassObject-to-var1698 var3287))) ; Statement: virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8) 
(declare-const var2735!1 String)
(assert (str.prefixof var2735 var2735!1))
(assert true)
(define-const var1362 String (append/672562846 var461!4 ", jdbcType=")) ; Statement: $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", jdbcType=") 
(declare-const var461!5 String)
(assert (= var461!5 (str.++ var461!4 ", jdbcType=")))
(define-const var1648 var227 (jdbcType/-1137278833 var3748)) ; Statement: $r10 = r1.<org.apache.ibatis.mapping.ResultMapping: org.apache.ibatis.type.JdbcType jdbcType> 
(assert true)
;(assert (append/-1031950772 var1362 (cast-from-var227-to-var1698 var1648))) ; Statement: virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10) 
(declare-const var1362!1 String)
(assert (str.prefixof var1362 var1362!1))
(assert true)
(define-const var1298 String (append/672562846 var461!5 ", nestedResultMapId=\u0027")) ; Statement: $r13 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nestedResultMapId=\'") 
(declare-const var461!6 String)
(assert (= var461!6 (str.++ var461!5 ", nestedResultMapId=\u0027")))
(define-const var924 String (nestedResultMapId/-1137278833 var3748)) ; Statement: $r12 = r1.<org.apache.ibatis.mapping.ResultMapping: java.lang.String nestedResultMapId> 
(assert true)
(define-const var1183 String (append/672562846 var1298 var924)) ; Statement: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12) 
(declare-const var1298!1 String)
(assert (= var1298!1 (str.++ var1298 var924)))
(assert true)
;(assert (append/-1166366385 var1183 39)) ; Statement: virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39) 
(declare-const var1183!1 String)
(assert (str.prefixof var1183 var1183!1))
(assert true)
(define-const var1839 String (append/672562846 var461!6 ", nestedQueryId=\u0027")) ; Statement: $r16 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nestedQueryId=\'") 
(declare-const var461!7 String)
(assert (= var461!7 (str.++ var461!6 ", nestedQueryId=\u0027")))
(define-const var3383 String (nestedQueryId/-1137278833 var3748)) ; Statement: $r15 = r1.<org.apache.ibatis.mapping.ResultMapping: java.lang.String nestedQueryId> 
(assert true)
(define-const var701 String (append/672562846 var1839 var3383)) ; Statement: $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) 
(declare-const var1839!1 String)
(assert (= var1839!1 (str.++ var1839 var3383)))
(assert true)
;(assert (append/-1166366385 var701 39)) ; Statement: virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39) 
(declare-const var701!1 String)
(assert (str.prefixof var701 var701!1))
(assert true)
(define-const var2791 String (append/672562846 var461!7 ", notNullColumns=")) ; Statement: $r19 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", notNullColumns=") 
(declare-const var461!8 String)
(assert (= var461!8 (str.++ var461!7 ", notNullColumns=")))
(define-const var2995 var3423 (notNullColumns/-1137278833 var3748)) ; Statement: $r18 = r1.<org.apache.ibatis.mapping.ResultMapping: java.util.Set notNullColumns> 
(assert true)
;(assert (append/-1031950772 var2791 (cast-from-var3423-to-var1698 var2995))) ; Statement: virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18) 
(declare-const var2791!1 String)
(assert (str.prefixof var2791 var2791!1))
(assert true)
(define-const var3827 String (append/672562846 var461!8 ", columnPrefix=\u0027")) ; Statement: $r21 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", columnPrefix=\'") 
(declare-const var461!9 String)
(assert (= var461!9 (str.++ var461!8 ", columnPrefix=\u0027")))
(define-const var2235 String (columnPrefix/-1137278833 var3748)) ; Statement: $r20 = r1.<org.apache.ibatis.mapping.ResultMapping: java.lang.String columnPrefix> 
(assert true)
(define-const var1983 String (append/672562846 var3827 var2235)) ; Statement: $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) 
(declare-const var3827!1 String)
(assert (= var3827!1 (str.++ var3827 var2235)))
(assert true)
;(assert (append/-1166366385 var1983 39)) ; Statement: virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39) 
(declare-const var1983!1 String)
(assert (str.prefixof var1983 var1983!1))
(assert true)
(define-const var2894 String (append/672562846 var461!9 ", flags=")) ; Statement: $r24 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", flags=") 
(declare-const var461!10 String)
(assert (= var461!10 (str.++ var461!9 ", flags=")))
(define-const var1337 var440 (flags/-1137278833 var3748)) ; Statement: $r23 = r1.<org.apache.ibatis.mapping.ResultMapping: java.util.List flags> 
(assert true)
;(assert (append/-1031950772 var2894 (cast-from-var440-to-var1698 var1337))) ; Statement: virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23) 
(declare-const var2894!1 String)
(assert (str.prefixof var2894 var2894!1))
(assert true)
(define-const var495 String (append/672562846 var461!10 ", composites=")) ; Statement: $r26 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", composites=") 
(declare-const var461!11 String)
(assert (= var461!11 (str.++ var461!10 ", composites=")))
(define-const var2355 var440 (composites/-1137278833 var3748)) ; Statement: $r25 = r1.<org.apache.ibatis.mapping.ResultMapping: java.util.List composites> 
(assert true)
;(assert (append/-1031950772 var495 (cast-from-var440-to-var1698 var2355))) ; Statement: virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25) 
(declare-const var495!1 String)
(assert (str.prefixof var495 var495!1))
(assert true)
(define-const var1505 String (append/672562846 var461!11 ", resultSet=\u0027")) ; Statement: $r28 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", resultSet=\'") 
(declare-const var461!12 String)
(assert (= var461!12 (str.++ var461!11 ", resultSet=\u0027")))
(define-const var904 String (resultSet/-1137278833 var3748)) ; Statement: $r27 = r1.<org.apache.ibatis.mapping.ResultMapping: java.lang.String resultSet> 
(assert true)
(define-const var982 String (append/672562846 var1505 var904)) ; Statement: $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27) 
(declare-const var1505!1 String)
(assert (= var1505!1 (str.++ var1505 var904)))
(assert true)
;(assert (append/-1166366385 var982 39)) ; Statement: virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39) 
(declare-const var982!1 String)
(assert (str.prefixof var982 var982!1))
(assert true)
(define-const var2229 String (append/672562846 var461!12 ", foreignColumn=\u0027")) ; Statement: $r31 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", foreignColumn=\'") 
(declare-const var461!13 String)
(assert (= var461!13 (str.++ var461!12 ", foreignColumn=\u0027")))
(define-const var717 String (foreignColumn/-1137278833 var3748)) ; Statement: $r30 = r1.<org.apache.ibatis.mapping.ResultMapping: java.lang.String foreignColumn> 
(assert true)
(define-const var1182 String (append/672562846 var2229 var717)) ; Statement: $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30) 
(declare-const var2229!1 String)
(assert (= var2229!1 (str.++ var2229 var717)))
(assert true)
;(assert (append/-1166366385 var1182 39)) ; Statement: virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39) 
(declare-const var1182!1 String)
(assert (str.prefixof var1182 var1182!1))
(assert true)
(define-const var3557 String (append/672562846 var461!13 ", lazy=")) ; Statement: $r33 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lazy=") 
(declare-const var461!14 String)
(assert (= var461!14 (str.++ var461!13 ", lazy=")))
(define-const var2253 Bool (lazy/-1137278833 var3748)) ; Statement: $z0 = r1.<org.apache.ibatis.mapping.ResultMapping: boolean lazy> 
(assert true)
;(assert (append/-388390247 var3557 var2253)) ; Statement: virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0) 
(declare-const var3557!1 String)
(assert (str.prefixof var3557 var3557!1))
(assert true)
;(assert (append/-1166366385 var461!14 125)) ; Statement: virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125) 
(declare-const var461!15 String)
(assert (str.prefixof var461!14 var461!15))
(assert true)
(define-const var3542 String (toString/-2075883882 var461!15)) ; Statement: $r34 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>() 
 ; Statement: return $r34 
(check-sat)
(get-model)
(get-unsat-core)
; {String-init=([], java.lang.StringBuilder), <init>/-1061048412=([java.lang.StringBuilder, java.lang.String], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), property/-1137278833=([org.apache.ibatis.mapping.ResultMapping], java.lang.String), append/-1166366385=([java.lang.StringBuilder, char], java.lang.StringBuilder), column/-1137278833=([org.apache.ibatis.mapping.ResultMapping], java.lang.String), javaType/-1137278833=([org.apache.ibatis.mapping.ResultMapping], java.lang.Class), append/-1031950772=([java.lang.StringBuilder, java.lang.Object], java.lang.StringBuilder), cast-from-ClassObject-to-var1698=([java.lang.Class], java.lang.Object), jdbcType/-1137278833=([org.apache.ibatis.mapping.ResultMapping], org.apache.ibatis.type.JdbcType), cast-from-var227-to-var1698=([org.apache.ibatis.type.JdbcType], java.lang.Object), nestedResultMapId/-1137278833=([org.apache.ibatis.mapping.ResultMapping], java.lang.String), nestedQueryId/-1137278833=([org.apache.ibatis.mapping.ResultMapping], java.lang.String), notNullColumns/-1137278833=([org.apache.ibatis.mapping.ResultMapping], java.util.Set), cast-from-var3423-to-var1698=([java.util.Set], java.lang.Object), columnPrefix/-1137278833=([org.apache.ibatis.mapping.ResultMapping], java.lang.String), flags/-1137278833=([org.apache.ibatis.mapping.ResultMapping], java.util.List), cast-from-var440-to-var1698=([java.util.List], java.lang.Object), composites/-1137278833=([org.apache.ibatis.mapping.ResultMapping], java.util.List), resultSet/-1137278833=([org.apache.ibatis.mapping.ResultMapping], java.lang.String), foreignColumn/-1137278833=([org.apache.ibatis.mapping.ResultMapping], java.lang.String), lazy/-1137278833=([org.apache.ibatis.mapping.ResultMapping], boolean), append/-388390247=([java.lang.StringBuilder, boolean], java.lang.StringBuilder), toString/-2075883882=([java.lang.StringBuilder], java.lang.String)}
; {var2599=org.apache.ibatis.mapping.ResultMapping, var3748=r1, var461=$r0, var2801=$r3, var2854=$r2, var2425=$r4, var587=$r6, var2638=$r5, var3046=$r7, var2735=$r9, var3287=$r8, var1698=java.lang.Object, var1362=$r11, var227=org.apache.ibatis.type.JdbcType, var1648=$r10, var1298=$r13, var924=$r12, var1183=$r14, var1839=$r16, var3383=$r15, var701=$r17, var2791=$r19, var3423=java.util.Set, var2995=$r18, var3827=$r21, var2235=$r20, var1983=$r22, var2894=$r24, var440=java.util.List, var1337=$r23, var495=$r26, var2355=$r25, var1505=$r28, var904=$r27, var982=$r29, var2229=$r31, var717=$r30, var1182=$r32, var3557=$r33, var2253=$z0, var3542=$r34}
; {org.apache.ibatis.mapping.ResultMapping=var2599, r1=var3748, $r0=var461, $r3=var2801, $r2=var2854, $r4=var2425, $r6=var587, $r5=var2638, $r7=var3046, $r9=var2735, $r8=var3287, java.lang.Object=var1698, $r11=var1362, org.apache.ibatis.type.JdbcType=var227, $r10=var1648, $r13=var1298, $r12=var924, $r14=var1183, $r16=var1839, $r15=var3383, $r17=var701, $r19=var2791, java.util.Set=var3423, $r18=var2995, $r21=var3827, $r20=var2235, $r22=var1983, $r24=var2894, java.util.List=var440, $r23=var1337, $r26=var495, $r25=var2355, $r28=var1505, $r27=var904, $r29=var982, $r31=var2229, $r30=var717, $r32=var1182, $r33=var3557, $z0=var2253, $r34=var3542}
;seq <java.lang.StringBuilder: void <init>(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>(java.lang.String)>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 20,"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 8,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 5,"<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>": 1,"<java.lang.StringBuilder: java.lang.String toString()>": 1}
;stmts r1 := @this: org.apache.ibatis.mapping.ResultMapping;	$r0 = new java.lang.StringBuilder;	specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>("ResultMapping{");	$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("property=\'");	$r2 = r1.<org.apache.ibatis.mapping.ResultMapping: java.lang.String property>;	$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);	virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);	$r6 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", column=\'");	$r5 = r1.<org.apache.ibatis.mapping.ResultMapping: java.lang.String column>;	$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);	virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);	$r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", javaType=");	$r8 = r1.<org.apache.ibatis.mapping.ResultMapping: java.lang.Class javaType>;	virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8);	$r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", jdbcType=");	$r10 = r1.<org.apache.ibatis.mapping.ResultMapping: org.apache.ibatis.type.JdbcType jdbcType>;	virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10);	$r13 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nestedResultMapId=\'");	$r12 = r1.<org.apache.ibatis.mapping.ResultMapping: java.lang.String nestedResultMapId>;	$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12);	virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);	$r16 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", nestedQueryId=\'");	$r15 = r1.<org.apache.ibatis.mapping.ResultMapping: java.lang.String nestedQueryId>;	$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);	virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);	$r19 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", notNullColumns=");	$r18 = r1.<org.apache.ibatis.mapping.ResultMapping: java.util.Set notNullColumns>;	virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r18);	$r21 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", columnPrefix=\'");	$r20 = r1.<org.apache.ibatis.mapping.ResultMapping: java.lang.String columnPrefix>;	$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);	virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);	$r24 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", flags=");	$r23 = r1.<org.apache.ibatis.mapping.ResultMapping: java.util.List flags>;	virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);	$r26 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", composites=");	$r25 = r1.<org.apache.ibatis.mapping.ResultMapping: java.util.List composites>;	virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25);	$r28 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", resultSet=\'");	$r27 = r1.<org.apache.ibatis.mapping.ResultMapping: java.lang.String resultSet>;	$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);	virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);	$r31 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", foreignColumn=\'");	$r30 = r1.<org.apache.ibatis.mapping.ResultMapping: java.lang.String foreignColumn>;	$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);	virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);	$r33 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", lazy=");	$z0 = r1.<org.apache.ibatis.mapping.ResultMapping: boolean lazy>;	virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);	virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);	$r34 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>();	return $r34
;block_num 1