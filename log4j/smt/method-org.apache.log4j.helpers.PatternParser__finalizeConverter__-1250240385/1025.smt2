(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var3570 0)
(declare-sort var2706 0)
(declare-sort var2413 0)
(declare-sort var667 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(define-fun cast-from-Int-to-Int ((arg Int)) Int arg)
(declare-fun var2706-init () var2706)
(declare-fun formattingInfo/1478879420 (var3570) var2413)
(declare-fun <init>/-2052947620 (var2706 var2413 Int) void)
(declare-fun cast-from-var2706-to-var667 (var2706) var667)
(declare-fun currentLiteral/1478879420 (var3570) String)
(declare-fun setLength/163251007 (String Int) void)
(declare-fun addConverter/-274326691 (var3570 var667) void)
(declare-const null-var3570 var3570)
(declare-const null-Int Int)
(declare-const var2346 var3570) ; Statement: r1 := @this: org.apache.log4j.helpers.PatternParser 
(assert (not (= var2346 null-var3570)))
(declare-const var91 Int) ; Statement: c0 := @parameter0: char 
(assert (not (= var91 null-Int)))
(define-const var2020 Int (cast-from-Int-to-Int var91)) ; Statement: $i4 = (int) c0 
 ; Statement: tableswitch($i4) {     case 67: goto $r69 = new org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter;     case 68: goto $r86 = new java.lang.StringBuffer;     case 69: goto $r86 = new java.lang.StringBuffer;     case 70: goto $r76 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;     case 71: goto $r86 = new java.lang.StringBuffer;     case 72: goto $r86 = new java.lang.StringBuffer;     case 73: goto $r86 = new java.lang.StringBuffer;     case 74: goto $r86 = new java.lang.StringBuffer;     case 75: goto $r86 = new java.lang.StringBuffer;     case 76: goto $r78 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;     case 77: goto $r80 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;     case 78: goto $r86 = new java.lang.StringBuffer;     case 79: goto $r86 = new java.lang.StringBuffer;     case 80: goto $r86 = new java.lang.StringBuffer;     case 81: goto $r86 = new java.lang.StringBuffer;     case 82: goto $r86 = new java.lang.StringBuffer;     case 83: goto $r86 = new java.lang.StringBuffer;     case 84: goto $r86 = new java.lang.StringBuffer;     case 85: goto $r86 = new java.lang.StringBuffer;     case 86: goto $r86 = new java.lang.StringBuffer;     case 87: goto $r86 = new java.lang.StringBuffer;     case 88: goto r67 = virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: java.lang.String extractOption()>();     case 89: goto $r86 = new java.lang.StringBuffer;     case 90: goto $r86 = new java.lang.StringBuffer;     case 91: goto $r86 = new java.lang.StringBuffer;     case 92: goto $r86 = new java.lang.StringBuffer;     case 93: goto $r86 = new java.lang.StringBuffer;     case 94: goto $r86 = new java.lang.StringBuffer;     case 95: goto $r86 = new java.lang.StringBuffer;     case 96: goto $r86 = new java.lang.StringBuffer;     case 97: goto $r86 = new java.lang.StringBuffer;     case 98: goto $r86 = new java.lang.StringBuffer;     case 99: goto $r68 = new org.apache.log4j.helpers.PatternParser$CategoryPatternConverter;     case 100: goto r61 = "ISO8601";     case 101: goto $r86 = new java.lang.StringBuffer;     case 102: goto $r86 = new java.lang.StringBuffer;     case 103: goto $r86 = new java.lang.StringBuffer;     case 104: goto $r86 = new java.lang.StringBuffer;     case 105: goto $r86 = new java.lang.StringBuffer;     case 106: goto $r86 = new java.lang.StringBuffer;     case 107: goto $r86 = new java.lang.StringBuffer;     case 108: goto $r77 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;     case 109: goto $r79 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     case 110: goto $r86 = new java.lang.StringBuffer;     case 111: goto $r86 = new java.lang.StringBuffer;     case 112: goto $r81 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     case 113: goto $r86 = new java.lang.StringBuffer;     case 114: goto $r82 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     case 115: goto $r86 = new java.lang.StringBuffer;     case 116: goto $r83 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     case 117: goto $r86 = new java.lang.StringBuffer;     case 118: goto $r86 = new java.lang.StringBuffer;     case 119: goto $r86 = new java.lang.StringBuffer;     case 120: goto $r84 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     default: goto $r86 = new java.lang.StringBuffer; } 
(assert (and (= var2020 112) (and (not (= var2020 111)) (and (not (= var2020 110)) (and (not (= var2020 109)) (and (not (= var2020 108)) (and (not (= var2020 107)) (and (not (= var2020 106)) (and (not (= var2020 105)) (and (not (= var2020 104)) (and (not (= var2020 103)) (and (not (= var2020 102)) (and (not (= var2020 101)) (and (not (= var2020 100)) (and (not (= var2020 99)) (and (not (= var2020 98)) (and (not (= var2020 97)) (and (not (= var2020 96)) (and (not (= var2020 95)) (and (not (= var2020 94)) (and (not (= var2020 93)) (and (not (= var2020 92)) (and (not (= var2020 91)) (and (not (= var2020 90)) (and (not (= var2020 89)) (and (not (= var2020 88)) (and (not (= var2020 87)) (and (not (= var2020 86)) (and (not (= var2020 85)) (and (not (= var2020 84)) (and (not (= var2020 83)) (and (not (= var2020 82)) (and (not (= var2020 81)) (and (not (= var2020 80)) (and (not (= var2020 79)) (and (not (= var2020 78)) (and (not (= var2020 77)) (and (not (= var2020 76)) (and (not (= var2020 75)) (and (not (= var2020 74)) (and (not (= var2020 73)) (and (not (= var2020 72)) (and (not (= var2020 71)) (and (not (= var2020 70)) (and (not (= var2020 69)) (and (not (= var2020 68)) (and (not (= var2020 67)) true))))))))))))))))))))))))))))))))))))))))))))))) ; Intersect: Cond: $i4 == 112  and Intersect: Negate: Cond: $i4 == 111   and Intersect: Negate: Cond: $i4 == 110   and Intersect: Negate: Cond: $i4 == 109   and Intersect: Negate: Cond: $i4 == 108   and Intersect: Negate: Cond: $i4 == 107   and Intersect: Negate: Cond: $i4 == 106   and Intersect: Negate: Cond: $i4 == 105   and Intersect: Negate: Cond: $i4 == 104   and Intersect: Negate: Cond: $i4 == 103   and Intersect: Negate: Cond: $i4 == 102   and Intersect: Negate: Cond: $i4 == 101   and Intersect: Negate: Cond: $i4 == 100   and Intersect: Negate: Cond: $i4 == 99   and Intersect: Negate: Cond: $i4 == 98   and Intersect: Negate: Cond: $i4 == 97   and Intersect: Negate: Cond: $i4 == 96   and Intersect: Negate: Cond: $i4 == 95   and Intersect: Negate: Cond: $i4 == 94   and Intersect: Negate: Cond: $i4 == 93   and Intersect: Negate: Cond: $i4 == 92   and Intersect: Negate: Cond: $i4 == 91   and Intersect: Negate: Cond: $i4 == 90   and Intersect: Negate: Cond: $i4 == 89   and Intersect: Negate: Cond: $i4 == 88   and Intersect: Negate: Cond: $i4 == 87   and Intersect: Negate: Cond: $i4 == 86   and Intersect: Negate: Cond: $i4 == 85   and Intersect: Negate: Cond: $i4 == 84   and Intersect: Negate: Cond: $i4 == 83   and Intersect: Negate: Cond: $i4 == 82   and Intersect: Negate: Cond: $i4 == 81   and Intersect: Negate: Cond: $i4 == 80   and Intersect: Negate: Cond: $i4 == 79   and Intersect: Negate: Cond: $i4 == 78   and Intersect: Negate: Cond: $i4 == 77   and Intersect: Negate: Cond: $i4 == 76   and Intersect: Negate: Cond: $i4 == 75   and Intersect: Negate: Cond: $i4 == 74   and Intersect: Negate: Cond: $i4 == 73   and Intersect: Negate: Cond: $i4 == 72   and Intersect: Negate: Cond: $i4 == 71   and Intersect: Negate: Cond: $i4 == 70   and Intersect: Negate: Cond: $i4 == 69   and Intersect: Negate: Cond: $i4 == 68   and Intersect: Negate: Cond: $i4 == 67   and Non Conditional                                              
(define-const var3645 var2706 var2706-init) ; Statement: $r81 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter 
(define-const var758 var2413 (formattingInfo/1478879420 var2346)) ; Statement: $r11 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo> 
(assert true)
;(assert (<init>/-2052947620 var3645 var758 2002)) ; Statement: specialinvoke $r81.<org.apache.log4j.helpers.PatternParser$BasicPatternConverter: void <init>(org.apache.log4j.helpers.FormattingInfo,int)>($r11, 2002) 

(declare-const var3645!1 var2706)
(declare-const var758!1 var2413)
(declare-const var3232 Int)
(define-const var34 var667 (cast-from-var2706-to-var667 var3645!1)) ; Statement: r60 = $r81 
(define-const var3586 String (currentLiteral/1478879420 var2346)) ; Statement: $r12 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral> 
(assert true)
;(assert (setLength/163251007 var3586 0)) ; Statement: virtualinvoke $r12.<java.lang.StringBuffer: void setLength(int)>(0) 

(declare-const var3586!1 String)
(declare-const var1835 Int)
 ; Statement: goto [?= virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: void addConverter(org.apache.log4j.helpers.PatternConverter)>(r60)] 
(assert true) ; Non Conditional
(assert true)
;(assert (addConverter/-274326691 var2346 var34)) ; Statement: virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: void addConverter(org.apache.log4j.helpers.PatternConverter)>(r60) 

(declare-const var2346!1 var3570)
(declare-const var34!1 var667)
 ; Statement: return 
(check-sat)
(get-model)
(get-unsat-core)
; {cast-from-Int-to-Int=([char], int), var2706-init=([], org.apache.log4j.helpers.PatternParser$BasicPatternConverter), formattingInfo/1478879420=([org.apache.log4j.helpers.PatternParser], org.apache.log4j.helpers.FormattingInfo), <init>/-2052947620=([org.apache.log4j.helpers.PatternParser$BasicPatternConverter, org.apache.log4j.helpers.FormattingInfo, int], void), cast-from-var2706-to-var667=([org.apache.log4j.helpers.PatternParser$BasicPatternConverter], org.apache.log4j.helpers.PatternConverter), currentLiteral/1478879420=([org.apache.log4j.helpers.PatternParser], java.lang.StringBuffer), setLength/163251007=([java.lang.StringBuffer, int], void), addConverter/-274326691=([org.apache.log4j.helpers.PatternParser, org.apache.log4j.helpers.PatternConverter], void)}
; {var3570=org.apache.log4j.helpers.PatternParser, var2346=r1, var91=c0, var2020=$i4, var2706=org.apache.log4j.helpers.PatternParser$BasicPatternConverter, var3645=$r81, var2413=org.apache.log4j.helpers.FormattingInfo, var758=$r11, var3232=2002, var667=org.apache.log4j.helpers.PatternConverter, var34=r60, var3586=$r12, var1835=0}
; {org.apache.log4j.helpers.PatternParser=var3570, r1=var2346, c0=var91, $i4=var2020, org.apache.log4j.helpers.PatternParser$BasicPatternConverter=var2706, $r81=var3645, org.apache.log4j.helpers.FormattingInfo=var2413, $r11=var758, 2002=var3232, org.apache.log4j.helpers.PatternConverter=var667, r60=var34, $r12=var3586, 0=var1835}
;seq <java.lang.StringBuffer: void setLength(int)>
;cnt {"<java.lang.StringBuffer: void setLength(int)>": 1}
;stmts r1 := @this: org.apache.log4j.helpers.PatternParser;	c0 := @parameter0: char;	$i4 = (int) c0;	tableswitch($i4) {     case 67: goto $r69 = new org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter;     case 68: goto $r86 = new java.lang.StringBuffer;     case 69: goto $r86 = new java.lang.StringBuffer;     case 70: goto $r76 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;     case 71: goto $r86 = new java.lang.StringBuffer;     case 72: goto $r86 = new java.lang.StringBuffer;     case 73: goto $r86 = new java.lang.StringBuffer;     case 74: goto $r86 = new java.lang.StringBuffer;     case 75: goto $r86 = new java.lang.StringBuffer;     case 76: goto $r78 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;     case 77: goto $r80 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;     case 78: goto $r86 = new java.lang.StringBuffer;     case 79: goto $r86 = new java.lang.StringBuffer;     case 80: goto $r86 = new java.lang.StringBuffer;     case 81: goto $r86 = new java.lang.StringBuffer;     case 82: goto $r86 = new java.lang.StringBuffer;     case 83: goto $r86 = new java.lang.StringBuffer;     case 84: goto $r86 = new java.lang.StringBuffer;     case 85: goto $r86 = new java.lang.StringBuffer;     case 86: goto $r86 = new java.lang.StringBuffer;     case 87: goto $r86 = new java.lang.StringBuffer;     case 88: goto r67 = virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: java.lang.String extractOption()>();     case 89: goto $r86 = new java.lang.StringBuffer;     case 90: goto $r86 = new java.lang.StringBuffer;     case 91: goto $r86 = new java.lang.StringBuffer;     case 92: goto $r86 = new java.lang.StringBuffer;     case 93: goto $r86 = new java.lang.StringBuffer;     case 94: goto $r86 = new java.lang.StringBuffer;     case 95: goto $r86 = new java.lang.StringBuffer;     case 96: goto $r86 = new java.lang.StringBuffer;     case 97: goto $r86 = new java.lang.StringBuffer;     case 98: goto $r86 = new java.lang.StringBuffer;     case 99: goto $r68 = new org.apache.log4j.helpers.PatternParser$CategoryPatternConverter;     case 100: goto r61 = "ISO8601";     case 101: goto $r86 = new java.lang.StringBuffer;     case 102: goto $r86 = new java.lang.StringBuffer;     case 103: goto $r86 = new java.lang.StringBuffer;     case 104: goto $r86 = new java.lang.StringBuffer;     case 105: goto $r86 = new java.lang.StringBuffer;     case 106: goto $r86 = new java.lang.StringBuffer;     case 107: goto $r86 = new java.lang.StringBuffer;     case 108: goto $r77 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;     case 109: goto $r79 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     case 110: goto $r86 = new java.lang.StringBuffer;     case 111: goto $r86 = new java.lang.StringBuffer;     case 112: goto $r81 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     case 113: goto $r86 = new java.lang.StringBuffer;     case 114: goto $r82 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     case 115: goto $r86 = new java.lang.StringBuffer;     case 116: goto $r83 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     case 117: goto $r86 = new java.lang.StringBuffer;     case 118: goto $r86 = new java.lang.StringBuffer;     case 119: goto $r86 = new java.lang.StringBuffer;     case 120: goto $r84 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     default: goto $r86 = new java.lang.StringBuffer; };	$r81 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;	$r11 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;	specialinvoke $r81.<org.apache.log4j.helpers.PatternParser$BasicPatternConverter: void <init>(org.apache.log4j.helpers.FormattingInfo,int)>($r11, 2002);	r60 = $r81;	$r12 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;	virtualinvoke $r12.<java.lang.StringBuffer: void setLength(int)>(0);	goto [?= virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: void addConverter(org.apache.log4j.helpers.PatternConverter)>(r60)];	virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: void addConverter(org.apache.log4j.helpers.PatternConverter)>(r60);	return
;block_num 3