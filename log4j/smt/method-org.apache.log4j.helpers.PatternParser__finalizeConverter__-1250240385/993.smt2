(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var2793 0)
(declare-sort var1824 0)
(declare-sort var764 0)
(declare-sort var2375 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(define-fun cast-from-Int-to-Int ((arg Int)) Int arg)
(declare-fun var1824-init () var1824)
(declare-fun formattingInfo/1478879420 (var2793) var764)
(declare-fun extractPrecisionOption/872123644 (var2793) Int)
(declare-fun <init>/-1787553000 (var1824 var2793 var764 Int) void)
(declare-fun cast-from-var1824-to-var2375 (var1824) var2375)
(declare-fun currentLiteral/1478879420 (var2793) String)
(declare-fun setLength/163251007 (String Int) void)
(declare-fun addConverter/-274326691 (var2793 var2375) void)
(declare-const null-var2793 var2793)
(declare-const null-Int Int)
(declare-const var2567 var2793) ; Statement: r1 := @this: org.apache.log4j.helpers.PatternParser 
(assert (not (= var2567 null-var2793)))
(declare-const var518 Int) ; Statement: c0 := @parameter0: char 
(assert (not (= var518 null-Int)))
(define-const var2434 Int (cast-from-Int-to-Int var518)) ; Statement: $i4 = (int) c0 
 ; Statement: tableswitch($i4) {     case 67: goto $r69 = new org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter;     case 68: goto $r86 = new java.lang.StringBuffer;     case 69: goto $r86 = new java.lang.StringBuffer;     case 70: goto $r76 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;     case 71: goto $r86 = new java.lang.StringBuffer;     case 72: goto $r86 = new java.lang.StringBuffer;     case 73: goto $r86 = new java.lang.StringBuffer;     case 74: goto $r86 = new java.lang.StringBuffer;     case 75: goto $r86 = new java.lang.StringBuffer;     case 76: goto $r78 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;     case 77: goto $r80 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;     case 78: goto $r86 = new java.lang.StringBuffer;     case 79: goto $r86 = new java.lang.StringBuffer;     case 80: goto $r86 = new java.lang.StringBuffer;     case 81: goto $r86 = new java.lang.StringBuffer;     case 82: goto $r86 = new java.lang.StringBuffer;     case 83: goto $r86 = new java.lang.StringBuffer;     case 84: goto $r86 = new java.lang.StringBuffer;     case 85: goto $r86 = new java.lang.StringBuffer;     case 86: goto $r86 = new java.lang.StringBuffer;     case 87: goto $r86 = new java.lang.StringBuffer;     case 88: goto r67 = virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: java.lang.String extractOption()>();     case 89: goto $r86 = new java.lang.StringBuffer;     case 90: goto $r86 = new java.lang.StringBuffer;     case 91: goto $r86 = new java.lang.StringBuffer;     case 92: goto $r86 = new java.lang.StringBuffer;     case 93: goto $r86 = new java.lang.StringBuffer;     case 94: goto $r86 = new java.lang.StringBuffer;     case 95: goto $r86 = new java.lang.StringBuffer;     case 96: goto $r86 = new java.lang.StringBuffer;     case 97: goto $r86 = new java.lang.StringBuffer;     case 98: goto $r86 = new java.lang.StringBuffer;     case 99: goto $r68 = new org.apache.log4j.helpers.PatternParser$CategoryPatternConverter;     case 100: goto r61 = "ISO8601";     case 101: goto $r86 = new java.lang.StringBuffer;     case 102: goto $r86 = new java.lang.StringBuffer;     case 103: goto $r86 = new java.lang.StringBuffer;     case 104: goto $r86 = new java.lang.StringBuffer;     case 105: goto $r86 = new java.lang.StringBuffer;     case 106: goto $r86 = new java.lang.StringBuffer;     case 107: goto $r86 = new java.lang.StringBuffer;     case 108: goto $r77 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;     case 109: goto $r79 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     case 110: goto $r86 = new java.lang.StringBuffer;     case 111: goto $r86 = new java.lang.StringBuffer;     case 112: goto $r81 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     case 113: goto $r86 = new java.lang.StringBuffer;     case 114: goto $r82 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     case 115: goto $r86 = new java.lang.StringBuffer;     case 116: goto $r83 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     case 117: goto $r86 = new java.lang.StringBuffer;     case 118: goto $r86 = new java.lang.StringBuffer;     case 119: goto $r86 = new java.lang.StringBuffer;     case 120: goto $r84 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     default: goto $r86 = new java.lang.StringBuffer; } 
(assert (and (= var2434 99) (and (not (= var2434 98)) (and (not (= var2434 97)) (and (not (= var2434 96)) (and (not (= var2434 95)) (and (not (= var2434 94)) (and (not (= var2434 93)) (and (not (= var2434 92)) (and (not (= var2434 91)) (and (not (= var2434 90)) (and (not (= var2434 89)) (and (not (= var2434 88)) (and (not (= var2434 87)) (and (not (= var2434 86)) (and (not (= var2434 85)) (and (not (= var2434 84)) (and (not (= var2434 83)) (and (not (= var2434 82)) (and (not (= var2434 81)) (and (not (= var2434 80)) (and (not (= var2434 79)) (and (not (= var2434 78)) (and (not (= var2434 77)) (and (not (= var2434 76)) (and (not (= var2434 75)) (and (not (= var2434 74)) (and (not (= var2434 73)) (and (not (= var2434 72)) (and (not (= var2434 71)) (and (not (= var2434 70)) (and (not (= var2434 69)) (and (not (= var2434 68)) (and (not (= var2434 67)) true)))))))))))))))))))))))))))))))))) ; Intersect: Cond: $i4 == 99  and Intersect: Negate: Cond: $i4 == 98   and Intersect: Negate: Cond: $i4 == 97   and Intersect: Negate: Cond: $i4 == 96   and Intersect: Negate: Cond: $i4 == 95   and Intersect: Negate: Cond: $i4 == 94   and Intersect: Negate: Cond: $i4 == 93   and Intersect: Negate: Cond: $i4 == 92   and Intersect: Negate: Cond: $i4 == 91   and Intersect: Negate: Cond: $i4 == 90   and Intersect: Negate: Cond: $i4 == 89   and Intersect: Negate: Cond: $i4 == 88   and Intersect: Negate: Cond: $i4 == 87   and Intersect: Negate: Cond: $i4 == 86   and Intersect: Negate: Cond: $i4 == 85   and Intersect: Negate: Cond: $i4 == 84   and Intersect: Negate: Cond: $i4 == 83   and Intersect: Negate: Cond: $i4 == 82   and Intersect: Negate: Cond: $i4 == 81   and Intersect: Negate: Cond: $i4 == 80   and Intersect: Negate: Cond: $i4 == 79   and Intersect: Negate: Cond: $i4 == 78   and Intersect: Negate: Cond: $i4 == 77   and Intersect: Negate: Cond: $i4 == 76   and Intersect: Negate: Cond: $i4 == 75   and Intersect: Negate: Cond: $i4 == 74   and Intersect: Negate: Cond: $i4 == 73   and Intersect: Negate: Cond: $i4 == 72   and Intersect: Negate: Cond: $i4 == 71   and Intersect: Negate: Cond: $i4 == 70   and Intersect: Negate: Cond: $i4 == 69   and Intersect: Negate: Cond: $i4 == 68   and Intersect: Negate: Cond: $i4 == 67   and Non Conditional                                 
(define-const var1306 var1824 var1824-init) ; Statement: $r68 = new org.apache.log4j.helpers.PatternParser$CategoryPatternConverter 
(define-const var2105 var764 (formattingInfo/1478879420 var2567)) ; Statement: $r25 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo> 
(assert true)
(define-const var94 Int (extractPrecisionOption/872123644 var2567)) ; Statement: $i1 = virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: int extractPrecisionOption()>() 
(assert true)
;(assert (<init>/-1787553000 var1306 var2567 var2105 var94)) ; Statement: specialinvoke $r68.<org.apache.log4j.helpers.PatternParser$CategoryPatternConverter: void <init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int)>(r1, $r25, $i1) 

(declare-const var1306!1 var1824)
(declare-const var2567!1 var2793)
(declare-const var2105!1 var764)
(declare-const var94!1 Int)
(define-const var669 var2375 (cast-from-var1824-to-var2375 var1306!1)) ; Statement: r60 = $r68 
(define-const var455 String (currentLiteral/1478879420 var2567!1)) ; Statement: $r26 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral> 
(assert true)
;(assert (setLength/163251007 var455 0)) ; Statement: virtualinvoke $r26.<java.lang.StringBuffer: void setLength(int)>(0) 

(declare-const var455!1 String)
(declare-const var2357 Int)
 ; Statement: goto [?= virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: void addConverter(org.apache.log4j.helpers.PatternConverter)>(r60)] 
(assert true) ; Non Conditional
(assert true)
;(assert (addConverter/-274326691 var2567!1 var669)) ; Statement: virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: void addConverter(org.apache.log4j.helpers.PatternConverter)>(r60) 

(declare-const var2567!2 var2793)
(declare-const var669!1 var2375)
 ; Statement: return 
(check-sat)
(get-model)
(get-unsat-core)
; {cast-from-Int-to-Int=([char], int), var1824-init=([], org.apache.log4j.helpers.PatternParser$CategoryPatternConverter), formattingInfo/1478879420=([org.apache.log4j.helpers.PatternParser], org.apache.log4j.helpers.FormattingInfo), extractPrecisionOption/872123644=([org.apache.log4j.helpers.PatternParser], int), <init>/-1787553000=([org.apache.log4j.helpers.PatternParser$CategoryPatternConverter, org.apache.log4j.helpers.PatternParser, org.apache.log4j.helpers.FormattingInfo, int], void), cast-from-var1824-to-var2375=([org.apache.log4j.helpers.PatternParser$CategoryPatternConverter], org.apache.log4j.helpers.PatternConverter), currentLiteral/1478879420=([org.apache.log4j.helpers.PatternParser], java.lang.StringBuffer), setLength/163251007=([java.lang.StringBuffer, int], void), addConverter/-274326691=([org.apache.log4j.helpers.PatternParser, org.apache.log4j.helpers.PatternConverter], void)}
; {var2793=org.apache.log4j.helpers.PatternParser, var2567=r1, var518=c0, var2434=$i4, var1824=org.apache.log4j.helpers.PatternParser$CategoryPatternConverter, var1306=$r68, var764=org.apache.log4j.helpers.FormattingInfo, var2105=$r25, var94=$i1, var2375=org.apache.log4j.helpers.PatternConverter, var669=r60, var455=$r26, var2357=0}
; {org.apache.log4j.helpers.PatternParser=var2793, r1=var2567, c0=var518, $i4=var2434, org.apache.log4j.helpers.PatternParser$CategoryPatternConverter=var1824, $r68=var1306, org.apache.log4j.helpers.FormattingInfo=var764, $r25=var2105, $i1=var94, org.apache.log4j.helpers.PatternConverter=var2375, r60=var669, $r26=var455, 0=var2357}
;seq <java.lang.StringBuffer: void setLength(int)>
;cnt {"<java.lang.StringBuffer: void setLength(int)>": 1}
;stmts r1 := @this: org.apache.log4j.helpers.PatternParser;	c0 := @parameter0: char;	$i4 = (int) c0;	tableswitch($i4) {     case 67: goto $r69 = new org.apache.log4j.helpers.PatternParser$ClassNamePatternConverter;     case 68: goto $r86 = new java.lang.StringBuffer;     case 69: goto $r86 = new java.lang.StringBuffer;     case 70: goto $r76 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;     case 71: goto $r86 = new java.lang.StringBuffer;     case 72: goto $r86 = new java.lang.StringBuffer;     case 73: goto $r86 = new java.lang.StringBuffer;     case 74: goto $r86 = new java.lang.StringBuffer;     case 75: goto $r86 = new java.lang.StringBuffer;     case 76: goto $r78 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;     case 77: goto $r80 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;     case 78: goto $r86 = new java.lang.StringBuffer;     case 79: goto $r86 = new java.lang.StringBuffer;     case 80: goto $r86 = new java.lang.StringBuffer;     case 81: goto $r86 = new java.lang.StringBuffer;     case 82: goto $r86 = new java.lang.StringBuffer;     case 83: goto $r86 = new java.lang.StringBuffer;     case 84: goto $r86 = new java.lang.StringBuffer;     case 85: goto $r86 = new java.lang.StringBuffer;     case 86: goto $r86 = new java.lang.StringBuffer;     case 87: goto $r86 = new java.lang.StringBuffer;     case 88: goto r67 = virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: java.lang.String extractOption()>();     case 89: goto $r86 = new java.lang.StringBuffer;     case 90: goto $r86 = new java.lang.StringBuffer;     case 91: goto $r86 = new java.lang.StringBuffer;     case 92: goto $r86 = new java.lang.StringBuffer;     case 93: goto $r86 = new java.lang.StringBuffer;     case 94: goto $r86 = new java.lang.StringBuffer;     case 95: goto $r86 = new java.lang.StringBuffer;     case 96: goto $r86 = new java.lang.StringBuffer;     case 97: goto $r86 = new java.lang.StringBuffer;     case 98: goto $r86 = new java.lang.StringBuffer;     case 99: goto $r68 = new org.apache.log4j.helpers.PatternParser$CategoryPatternConverter;     case 100: goto r61 = "ISO8601";     case 101: goto $r86 = new java.lang.StringBuffer;     case 102: goto $r86 = new java.lang.StringBuffer;     case 103: goto $r86 = new java.lang.StringBuffer;     case 104: goto $r86 = new java.lang.StringBuffer;     case 105: goto $r86 = new java.lang.StringBuffer;     case 106: goto $r86 = new java.lang.StringBuffer;     case 107: goto $r86 = new java.lang.StringBuffer;     case 108: goto $r77 = new org.apache.log4j.helpers.PatternParser$LocationPatternConverter;     case 109: goto $r79 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     case 110: goto $r86 = new java.lang.StringBuffer;     case 111: goto $r86 = new java.lang.StringBuffer;     case 112: goto $r81 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     case 113: goto $r86 = new java.lang.StringBuffer;     case 114: goto $r82 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     case 115: goto $r86 = new java.lang.StringBuffer;     case 116: goto $r83 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     case 117: goto $r86 = new java.lang.StringBuffer;     case 118: goto $r86 = new java.lang.StringBuffer;     case 119: goto $r86 = new java.lang.StringBuffer;     case 120: goto $r84 = new org.apache.log4j.helpers.PatternParser$BasicPatternConverter;     default: goto $r86 = new java.lang.StringBuffer; };	$r68 = new org.apache.log4j.helpers.PatternParser$CategoryPatternConverter;	$r25 = r1.<org.apache.log4j.helpers.PatternParser: org.apache.log4j.helpers.FormattingInfo formattingInfo>;	$i1 = virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: int extractPrecisionOption()>();	specialinvoke $r68.<org.apache.log4j.helpers.PatternParser$CategoryPatternConverter: void <init>(org.apache.log4j.helpers.PatternParser,org.apache.log4j.helpers.FormattingInfo,int)>(r1, $r25, $i1);	r60 = $r68;	$r26 = r1.<org.apache.log4j.helpers.PatternParser: java.lang.StringBuffer currentLiteral>;	virtualinvoke $r26.<java.lang.StringBuffer: void setLength(int)>(0);	goto [?= virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: void addConverter(org.apache.log4j.helpers.PatternConverter)>(r60)];	virtualinvoke r1.<org.apache.log4j.helpers.PatternParser: void addConverter(org.apache.log4j.helpers.PatternConverter)>(r60);	return
;block_num 3