(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var2151 0)
(declare-sort var3185 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun hashCode/-467973558 (String) Int)
(declare-fun arr-var3185-init () (Array Int var3185))
(declare-const null-String String)
(declare-const var651 String) ; Statement: r0 := @parameter0: java.lang.String 
(assert (not (= var651 null-String)))
(define-const var3333 Int (- 1)) ; Statement: b14 = -1 
(assert true)
(define-const var276 Int (hashCode/-467973558 var651)) ; Statement: $i0 = virtualinvoke r0.<java.lang.String: int hashCode()>() 
 ; Statement: lookupswitch($i0) {     case -1010649456: goto $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("(Lcom/alibaba/fastjson2/JSONReader;Ljava/lang/reflect/Type;Ljava/lang/Object;J)Ljava/lang/Object;");     case -470836938: goto $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("(Lcom/alibaba/fastjson2/JSONWriter;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;J)V");     case -176321095: goto $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;JLjava/util/List;)V");     case 39797: goto $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("()V");     case 470778755: goto $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("(J)Lcom/alibaba/fastjson2/reader/FieldReader;");     case 835331803: goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("(Ljava/lang/Class;Ljava/util/function/Supplier;[Lcom/alibaba/fastjson2/reader/FieldReader;)V");     case 1014040867: goto $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("(J)Ljava/lang/Object;");     default: goto tableswitch(b14) {     case 0: goto $r6 = newarray (com.alibaba.fastjson2.internal.asm.Type)[0];     case 1: goto $r5 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_3>;     case 2: goto $r5 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_3>;     case 3: goto $r4 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_0>;     case 4: goto $r3 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_1>;     case 5: goto $r2 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_2>;     case 6: goto $r1 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_4>;     default: goto i15 = 0; }; } 
(assert (and (not (= var276 1014040867)) (and (not (= var276 835331803)) (and (not (= var276 470778755)) (and (not (= var276 39797)) (and (not (= var276 (- 176321095))) (and (not (= var276 (- 470836938))) (and (not (= var276 (- 1010649456))) true)))))))) ; Intersect: Negate: Cond: $i0 == 1014040867   and Intersect: Negate: Cond: $i0 == 835331803   and Intersect: Negate: Cond: $i0 == 470778755   and Intersect: Negate: Cond: $i0 == 39797   and Intersect: Negate: Cond: $i0 == -176321095   and Intersect: Negate: Cond: $i0 == -470836938   and Intersect: Negate: Cond: $i0 == -1010649456   and Non Conditional       
 ; Statement: tableswitch(b14) {     case 0: goto $r6 = newarray (com.alibaba.fastjson2.internal.asm.Type)[0];     case 1: goto $r5 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_3>;     case 2: goto $r5 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_3>;     case 3: goto $r4 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_0>;     case 4: goto $r3 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_1>;     case 5: goto $r2 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_2>;     case 6: goto $r1 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_4>;     default: goto i15 = 0; } 
(assert (and (= var3333 0) true)) ; Intersect: Cond: b14 == 0  and Non Conditional 
(define-const var691 (Array Int var3185) arr-var3185-init) ; Statement: $r6 = newarray (com.alibaba.fastjson2.internal.asm.Type)[0] 
 ; Statement: return $r6 
(check-sat)
(get-model)
(get-unsat-core)
; {hashCode/-467973558=([java.lang.String], int), arr-var3185-init=([], com.alibaba.fastjson2.internal.asm.Type[])}
; {var651=r0, var2151=null_type, var3333=b14, var276=$i0, var3185=com.alibaba.fastjson2.internal.asm.Type, var691=$r6}
; {r0=var651, null_type=var2151, b14=var3333, $i0=var276, com.alibaba.fastjson2.internal.asm.Type=var3185, $r6=var691}
;seq <java.lang.String: int hashCode()>
;cnt {"<java.lang.String: int hashCode()>": 1}
;stmts r0 := @parameter0: java.lang.String;	b14 = -1;	$i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();	lookupswitch($i0) {     case -1010649456: goto $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("(Lcom/alibaba/fastjson2/JSONReader;Ljava/lang/reflect/Type;Ljava/lang/Object;J)Ljava/lang/Object;");     case -470836938: goto $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("(Lcom/alibaba/fastjson2/JSONWriter;Ljava/lang/Object;Ljava/lang/Object;Ljava/lang/reflect/Type;J)V");     case -176321095: goto $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("(Ljava/lang/Class;Ljava/lang/String;Ljava/lang/String;JLjava/util/List;)V");     case 39797: goto $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("()V");     case 470778755: goto $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("(J)Lcom/alibaba/fastjson2/reader/FieldReader;");     case 835331803: goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("(Ljava/lang/Class;Ljava/util/function/Supplier;[Lcom/alibaba/fastjson2/reader/FieldReader;)V");     case 1014040867: goto $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("(J)Ljava/lang/Object;");     default: goto tableswitch(b14) {     case 0: goto $r6 = newarray (com.alibaba.fastjson2.internal.asm.Type)[0];     case 1: goto $r5 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_3>;     case 2: goto $r5 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_3>;     case 3: goto $r4 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_0>;     case 4: goto $r3 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_1>;     case 5: goto $r2 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_2>;     case 6: goto $r1 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_4>;     default: goto i15 = 0; }; };	tableswitch(b14) {     case 0: goto $r6 = newarray (com.alibaba.fastjson2.internal.asm.Type)[0];     case 1: goto $r5 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_3>;     case 2: goto $r5 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_3>;     case 3: goto $r4 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_0>;     case 4: goto $r3 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_1>;     case 5: goto $r2 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_2>;     case 6: goto $r1 = <com.alibaba.fastjson2.internal.asm.Type: com.alibaba.fastjson2.internal.asm.Type[] TYPES_4>;     default: goto i15 = 0; };	$r6 = newarray (com.alibaba.fastjson2.internal.asm.Type)[0];	return $r6
;block_num 3