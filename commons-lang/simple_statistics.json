[
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitMsb0ToInt__696600923\\1196.smt2",
        "z3": {
            "memory": 33140736,
            "run_time": 0.1450939178466797,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    71)\r\n  (define-fun var1739 () Int\r\n    var2484)\r\n  (define-fun var2484 () Int\r\n    70)\r\n)\r\n(error \"line 17 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 5296128,
            "run_time": 0.03116607666015625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-Int () Int 0)\r\n(define-fun var2484 () Int 70)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37732352,
            "run_time": 0.1072690486907959,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    71)\n  (define-fun var1739 () Int\n    var2484)\n  (define-fun var2484 () Int\n    70)\n)\n(error \"line 17 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152956928,
            "run_time": 2.0353047847747803,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2484 () Int 70)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 2,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto return 0;     case 49: goto return 8;     case 50: goto return 4;     case 51: goto return 12;     case 52: goto return 2;     case 53: goto return 10;     case 54: goto return 6;     case 55: goto return 14;     case 56: goto return 1;     case 57: goto return 9;     case 58: goto $r7 = new java.lang.IllegalArgumentException;     case 59: goto $r7 = new java.lang.IllegalArgumentException;     case 60: goto $r7 = new java.lang.IllegalArgumentException;     case 61: goto $r7 = new java.lang.IllegalArgumentException;     case 62: goto $r7 = new java.lang.IllegalArgumentException;     case 63: goto $r7 = new java.lang.IllegalArgumentException;     case 64: goto $r7 = new java.lang.IllegalArgumentException;     case 65: goto return 5;     case 66: goto return 13;     case 67: goto return 3;     case 68: goto return 11;     case 69: goto return 7;     case 70: goto return 15;     case 71: goto $r7 = new java.lang.IllegalArgumentException;     case 72: goto $r7 = new java.lang.IllegalArgumentException;     case 73: goto $r7 = new java.lang.IllegalArgumentException;     case 74: goto $r7 = new java.lang.IllegalArgumentException;     case 75: goto $r7 = new java.lang.IllegalArgumentException;     case 76: goto $r7 = new java.lang.IllegalArgumentException;     case 77: goto $r7 = new java.lang.IllegalArgumentException;     case 78: goto $r7 = new java.lang.IllegalArgumentException;     case 79: goto $r7 = new java.lang.IllegalArgumentException;     case 80: goto $r7 = new java.lang.IllegalArgumentException;     case 81: goto $r7 = new java.lang.IllegalArgumentException;     case 82: goto $r7 = new java.lang.IllegalArgumentException;     case 83: goto $r7 = new java.lang.IllegalArgumentException;     case 84: goto $r7 = new java.lang.IllegalArgumentException;     case 85: goto $r7 = new java.lang.IllegalArgumentException;     case 86: goto $r7 = new java.lang.IllegalArgumentException;     case 87: goto $r7 = new java.lang.IllegalArgumentException;     case 88: goto $r7 = new java.lang.IllegalArgumentException;     case 89: goto $r7 = new java.lang.IllegalArgumentException;     case 90: goto $r7 = new java.lang.IllegalArgumentException;     case 91: goto $r7 = new java.lang.IllegalArgumentException;     case 92: goto $r7 = new java.lang.IllegalArgumentException;     case 93: goto $r7 = new java.lang.IllegalArgumentException;     case 94: goto $r7 = new java.lang.IllegalArgumentException;     case 95: goto $r7 = new java.lang.IllegalArgumentException;     case 96: goto $r7 = new java.lang.IllegalArgumentException;     case 97: goto return 5;     case 98: goto return 13;     case 99: goto return 3;     case 100: goto return 11;     case 101: goto return 7;     case 102: goto return 15;     default: goto $r7 = new java.lang.IllegalArgumentException; }",
            "return 15"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ClassLoaderUtils__toString__623674392\\148.smt2",
        "z3": {
            "memory": 32169984,
            "run_time": 0.14628243446350098,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 17 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2285568,
            "run_time": 0.029835224151611328,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36847616,
            "run_time": 0.13839483261108398,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 17 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 128307200,
            "run_time": 2.0825412273406982,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.net.URLClassLoader",
            "if r0 == null goto $r6 = \"null\"",
            "$r6 = \"null\"",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__-893361973\\1993.smt2",
        "z3": {
            "memory": 30789632,
            "run_time": 0.09306502342224121,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1099:\r\n  ;;   var1099!val!1 var1099!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1099!val!1 () var1099)\r\n  (declare-fun var1099!val!0 () var1099)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1099)) (or (= x var1099!val!1) (= x var1099!val!0)))\r\n  ;; -----------\r\n  (define-fun var157 () var1099\r\n    var1099!val!0)\r\n  (define-fun var1236 () Int\r\n    1)\r\n  (define-fun var1860 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-var1099 () var1099\r\n    var1099!val!1)\r\n  (define-fun var171 () String\r\n    \"!2!\")\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var1236!1 () Int\r\n    0)\r\n  (define-fun var1860!1 () String\r\n    \"\")\r\n  (define-fun append/1183289509 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11923456,
            "run_time": 0.031157255172729492,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1099 is 2\r\n; rep: (as @var1099_0 var1099)\r\n; rep: (as @var1099_1 var1099)\r\n; cardinality of var3529 is 1\r\n; rep: (as @var3529_0 var3529)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun append/1183289509 ((BOUND_VARIABLE_539 String) (BOUND_VARIABLE_540 Int)) String \"\")\r\n(define-fun null-var1099 () var1099 (as @var1099_0 var1099))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var157 () var1099 (as @var1099_1 var1099))\r\n(define-fun var1860 () String \"\")\r\n(define-fun var171 () String \"\")\r\n(define-fun var1236 () Int 0)\r\n(define-fun var1860!1 () String \"\")\r\n(define-fun var1236!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37654528,
            "run_time": 0.2159264087677002,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1099:\n  ;;   var1099!val!1 var1099!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1099!val!1 () var1099)\n  (declare-fun var1099!val!0 () var1099)\n  ;; cardinality constraint:\n  (forall ((x var1099)) (or (= x var1099!val!1) (= x var1099!val!0)))\n  ;; -----------\n  (define-fun null-Int () Int\n    0)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var171 () String\n    \"\\u{0}\")\n  (define-fun null-var1099 () var1099\n    var1099!val!1)\n  (define-fun var1236 () Int\n    1)\n  (define-fun var1860 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var157 () var1099\n    var1099!val!0)\n  (define-fun var1236!1 () Int\n    0)\n  (define-fun var1860!1 () String\n    \"\")\n  (define-fun append/1183289509 ((x!0 String) (x!1 Int)) String\n    \"\")\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 131506176,
            "run_time": 2.4288926124572754,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1236 () Int 1)\r\n  (define-fun var171 () String \"\\u{0}\")\r\n  (define-fun var1860 () String \"\\u{0}\")\r\n  (define-fun var157 () var1099 var1099!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var1099 () var1099 var1099!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r2 := @parameter1: java.lang.String",
            "c0 := @parameter2: char",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(c0)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitToBinary__-2007689494\\1484.smt2",
        "z3": {
            "memory": 32772096,
            "run_time": 0.15764880180358887,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var527 () var2696\r\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var2696 var2000-TTTT)))\r\n  (define-fun null-Int () Int\r\n    71)\r\n  (define-fun var3027 () (Array Int Bool)\r\n    (cast-from-var2696-to-__Array__Int__Bool__\r\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var2696 var2000-TTTT))))\r\n  (define-fun var1379 () (Array Int Bool)\r\n    var2000-TTTT)\r\n  (define-fun var3689 () Int\r\n    var1017)\r\n  (define-fun var1017 () Int\r\n    70)\r\n  (define-fun var2000-TTTT () (Array Int Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun clone/791635256 ((x!0 var2696)) var2696\r\n    var2696!val!0)\r\n  (define-fun cast-from-__Array__Int__Bool__-to-var2696 ((x!0 (Array Int Bool))) var2696\r\n    var2696!val!0)\r\n  (define-fun cast-from-var2696-to-__Array__Int__Bool__ ((x!0 var2696)) (Array Int\r\n         Bool)\r\n    ((as const (Array Int Bool)) false))\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8736768,
            "run_time": 0.031177759170532227,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2000 is 1\r\n; rep: (as @var2000_0 var2000)\r\n; cardinality of var2696 is 1\r\n; rep: (as @var2696_0 var2696)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun clone/791635256 ((BOUND_VARIABLE_768 var2696)) var2696 (as @var2696_0 var2696))\r\n(define-fun cast-from-__Array__Int__Bool__-to-var2696 ((BOUND_VARIABLE_771 (Array Int Bool))) var2696 (as @var2696_0 var2696))\r\n(define-fun cast-from-var2696-to-__Array__Int__Bool__ ((BOUND_VARIABLE_774 var2696)) (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var2000-TTTT () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var1017 () Int 70)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37728256,
            "run_time": 0.12387394905090332,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    71)\n  (define-fun var1379 () (Array Int Bool)\n    var2000-TTTT)\n  (define-fun var3689 () Int\n    var1017)\n  (define-fun var527 () var2696\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var2696 var2000-TTTT)))\n  (define-fun var3027 () (Array Int Bool)\n    (cast-from-var2696-to-__Array__Int__Bool__\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var2696 var2000-TTTT))))\n  (define-fun var1017 () Int\n    70)\n  (define-fun var2000-TTTT () (Array Int Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun clone/791635256 ((x!0 var2696)) var2696\n    var2696!val!0)\n  (define-fun cast-from-__Array__Int__Bool__-to-var2696 ((x!0 (Array Int Bool))) var2696\n    var2696!val!0)\n  (define-fun cast-from-var2696-to-__Array__Int__Bool__ ((x!0 var2696)) (Array Int\n         Bool)\n    ((as const (Array Int Bool)) false))\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155107328,
            "run_time": 2.4615509510040283,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1017 () Int 70)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto $r45 = <org.apache.commons.lang3.Conversion: boolean[] FFFF>;     case 49: goto $r42 = <org.apache.commons.lang3.Conversion: boolean[] TFFF>;     case 50: goto $r39 = <org.apache.commons.lang3.Conversion: boolean[] FTFF>;     case 51: goto $r36 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 52: goto $r33 = <org.apache.commons.lang3.Conversion: boolean[] FFTF>;     case 53: goto $r30 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 54: goto $r27 = <org.apache.commons.lang3.Conversion: boolean[] FTTF>;     case 55: goto $r24 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 56: goto $r21 = <org.apache.commons.lang3.Conversion: boolean[] FFFT>;     case 57: goto $r18 = <org.apache.commons.lang3.Conversion: boolean[] TFFT>;     case 58: goto $r55 = new java.lang.IllegalArgumentException;     case 59: goto $r55 = new java.lang.IllegalArgumentException;     case 60: goto $r55 = new java.lang.IllegalArgumentException;     case 61: goto $r55 = new java.lang.IllegalArgumentException;     case 62: goto $r55 = new java.lang.IllegalArgumentException;     case 63: goto $r55 = new java.lang.IllegalArgumentException;     case 64: goto $r55 = new java.lang.IllegalArgumentException;     case 65: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 66: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 67: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 68: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 69: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 70: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     case 71: goto $r55 = new java.lang.IllegalArgumentException;     case 72: goto $r55 = new java.lang.IllegalArgumentException;     case 73: goto $r55 = new java.lang.IllegalArgumentException;     case 74: goto $r55 = new java.lang.IllegalArgumentException;     case 75: goto $r55 = new java.lang.IllegalArgumentException;     case 76: goto $r55 = new java.lang.IllegalArgumentException;     case 77: goto $r55 = new java.lang.IllegalArgumentException;     case 78: goto $r55 = new java.lang.IllegalArgumentException;     case 79: goto $r55 = new java.lang.IllegalArgumentException;     case 80: goto $r55 = new java.lang.IllegalArgumentException;     case 81: goto $r55 = new java.lang.IllegalArgumentException;     case 82: goto $r55 = new java.lang.IllegalArgumentException;     case 83: goto $r55 = new java.lang.IllegalArgumentException;     case 84: goto $r55 = new java.lang.IllegalArgumentException;     case 85: goto $r55 = new java.lang.IllegalArgumentException;     case 86: goto $r55 = new java.lang.IllegalArgumentException;     case 87: goto $r55 = new java.lang.IllegalArgumentException;     case 88: goto $r55 = new java.lang.IllegalArgumentException;     case 89: goto $r55 = new java.lang.IllegalArgumentException;     case 90: goto $r55 = new java.lang.IllegalArgumentException;     case 91: goto $r55 = new java.lang.IllegalArgumentException;     case 92: goto $r55 = new java.lang.IllegalArgumentException;     case 93: goto $r55 = new java.lang.IllegalArgumentException;     case 94: goto $r55 = new java.lang.IllegalArgumentException;     case 95: goto $r55 = new java.lang.IllegalArgumentException;     case 96: goto $r55 = new java.lang.IllegalArgumentException;     case 97: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 98: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 99: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 100: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 101: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 102: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     default: goto $r55 = new java.lang.IllegalArgumentException; }",
            "$r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>",
            "$r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()",
            "$r2 = (boolean[]) $r1",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringBuilder__toString__-493854161\\2334.smt2",
        "z3": {
            "memory": 32186368,
            "run_time": 0.24036359786987305,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2820:\r\n  ;;   var2820!val!0 var2820!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2820!val!0 () var2820)\r\n  (declare-fun var2820!val!1 () var2820)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2820)) (or (= x var2820!val!0) (= x var2820!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2820 () var2820\r\n    var2820!val!1)\r\n  (define-fun var2244 () String\r\n    (getStringBuffer/608998264 var3867))\r\n  (define-fun var1088!1 () String\r\n    \"\")\r\n  (define-fun var3867 () var2820\r\n    var2820!val!0)\r\n  (define-fun var273 () String\r\n    (getNullText/1926929279 (getStyle/-734950904 var3867)))\r\n  (define-fun var3696 () String\r\n    (getStringBuffer/608998264 var3867))\r\n  (define-fun var2961 () var1987\r\n    (getStyle/-734950904 var3867))\r\n  (define-fun var3190 () var112\r\n    (getObject/2026953628 var3867))\r\n  (define-fun var1088 () String\r\n    (getStringBuffer/608998264 var3867))\r\n  (define-fun null-var112 () var112\r\n    var112!val!0)\r\n  (define-fun getStringBuffer/608998264 ((x!0 var2820)) String\r\n    \"\")\r\n  (define-fun getObject/2026953628 ((x!0 var2820)) var112\r\n    var112!val!0)\r\n  (define-fun getNullText/1926929279 ((x!0 var1987)) String\r\n    \"\")\r\n  (define-fun getStyle/-734950904 ((x!0 var2820)) var1987\r\n    var1987!val!0)\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 5197824,
            "run_time": 0.03116607666015625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2820 is 2\r\n; rep: (as @var2820_0 var2820)\r\n; rep: (as @var2820_1 var2820)\r\n; cardinality of var112 is 1\r\n; rep: (as @var112_0 var112)\r\n; cardinality of var1987 is 1\r\n; rep: (as @var1987_0 var1987)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getObject/2026953628 ((BOUND_VARIABLE_626 var2820)) var112 (as @var112_0 var112))\r\n(define-fun getStringBuffer/608998264 ((_arg_1 var2820)) String \"\")\r\n(define-fun getStyle/-734950904 ((BOUND_VARIABLE_629 var2820)) var1987 (as @var1987_0 var1987))\r\n(define-fun getNullText/1926929279 ((BOUND_VARIABLE_632 var1987)) String \"\")\r\n(define-fun null-var2820 () var2820 (as @var2820_0 var2820))\r\n(define-fun null-var112 () var112 (as @var112_0 var112))\r\n(define-fun var3867 () var2820 (as @var2820_1 var2820))\r\n(define-fun var1088!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36958208,
            "run_time": 0.13846373558044434,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 42 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152129536,
            "run_time": 2.5288760662078857,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringBuilder__toString__-493854161\\2334.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1088!1 =\r\n     concat(all_16_0, rhs)\r\n   ... sat\r\n\r\n1905ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1,
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.builder.ToStringBuilder",
            "$r1 = virtualinvoke r0.<org.apache.commons.lang3.builder.ToStringBuilder: java.lang.Object getObject()>()",
            "if $r1 != null goto $r2 = r0.<org.apache.commons.lang3.builder.ToStringBuilder: org.apache.commons.lang3.builder.ToStringStyle style>",
            "$r9 = virtualinvoke r0.<org.apache.commons.lang3.builder.ToStringBuilder: java.lang.StringBuffer getStringBuffer()>()",
            "$r7 = virtualinvoke r0.<org.apache.commons.lang3.builder.ToStringBuilder: org.apache.commons.lang3.builder.ToStringStyle getStyle()>()",
            "$r8 = virtualinvoke $r7.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String getNullText()>()",
            "virtualinvoke $r9.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r8)",
            "goto [?= $r5 = virtualinvoke r0.<org.apache.commons.lang3.builder.ToStringBuilder: java.lang.StringBuffer getStringBuffer()>()]",
            "$r5 = virtualinvoke r0.<org.apache.commons.lang3.builder.ToStringBuilder: java.lang.StringBuffer getStringBuffer()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>()",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.AnnotationUtils$1__lambda$getShortClassName$0__-1947203732\\40.smt2",
        "z3": {
            "memory": 30683136,
            "run_time": 0.09608745574951172,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var2902 () String\r\n    String-init)\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var3983 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var74 () String\r\n    (str.++ var2902!1 \"@\"))\r\n  (define-fun var2797 () String\r\n    (getName/-1958580599 var3983))\r\n  (define-fun var1491 () String\r\n    (str.++ var2902!1 \"@\" (getName/-1958580599 var3983)))\r\n  (define-fun var2735 () String\r\n    (str.++ var2902!1 \"@\" (getName/-1958580599 var3983)))\r\n  (define-fun var74!1 () String\r\n    \"@\")\r\n  (define-fun var2902!2 () String\r\n    \"@\")\r\n  (define-fun var2902!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.030000686645507812,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_497 ClassObject)) String \"\")\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var3983 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var2902!1 () String \"\")\r\n(define-fun var2902!2 () String \"@\")\r\n(define-fun var74!1 () String \"@\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35336192,
            "run_time": 0.17109966278076172,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  (define-fun var2902 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var74 () String\n    (str.++ var2902!1 \"@\"))\n  (define-fun var2797 () String\n    (getName/-1958580599 var3983))\n  (define-fun var3983 () ClassObject\n    ClassObject!val!0)\n  (define-fun var1491 () String\n    (str.++ var2902!1 \"@\" (getName/-1958580599 var3983)))\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var2735 () String\n    (str.++ var2902!1 \"@\" (getName/-1958580599 var3983)))\n  (define-fun var74!1 () String\n    \"@\")\n  (define-fun var2902!2 () String\n    \"@\")\n  (define-fun var2902!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 161710080,
            "run_time": 2.6953659057617188,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: ClassObject/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.AnnotationUtils$1__lambda$getShortClassName$0__-1947203732\\40.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var74!1 =\r\n     concat(\"@\", all_13_3)\r\n\r\n2190ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.Class",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"@\")",
            "$r2 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.math.NumberUtils__getMantissa__-708117625\\2846.smt2",
        "z3": {
            "memory": 32276480,
            "run_time": 0.1272435188293457,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 32 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8740864,
            "run_time": 0.031177759170532227,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36941824,
            "run_time": 0.12487530708312988,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 32 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141660160,
            "run_time": 2.6110012531280518,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i1 := @parameter1: int",
            "c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i2 = (int) c0",
            "if $i2 == 45 goto $z0 = 1",
            "$z0 = 1",
            "goto [?= (branch)]",
            "if $z0 == 0 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1)",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle__isJsonArray__-725497285\\1607.smt2",
        "z3": {
            "memory": 32264192,
            "run_time": 0.08900189399719238,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2747:\r\n  ;;   var2747!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2747!val!0 () var2747)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2747)) (= x var2747!val!0))\r\n  ;; -----------\r\n  ;; universe for var3896:\r\n  ;;   var3896!val!1 var3896!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3896!val!1 () var3896)\r\n  (declare-fun var3896!val!0 () var3896)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3896)) (or (= x var3896!val!1) (= x var3896!val!0)))\r\n  ;; -----------\r\n  (define-fun var3794 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var500 () String\r\n    \"B\")\r\n  (define-fun var3545 () var3896\r\n    var3896!val!0)\r\n  (define-fun null-var3896 () var3896\r\n    var3896!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2046 () Bool\r\n    (str.prefixof (getArrayStart/559431594 (cast-from-var3896-to-var2747 var3545))\r\n              var500))\r\n  (define-fun var552 () String\r\n    (getArrayStart/559431594 (cast-from-var3896-to-var2747 var3545)))\r\n  (define-fun cast-from-var3896-to-var2747 ((x!0 var3896)) var2747\r\n    var2747!val!0)\r\n  (define-fun getArrayStart/559431594 ((x!0 var2747)) String\r\n    \"A\")\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8876032,
            "run_time": 0.031171798706054688,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3896 is 2\r\n; rep: (as @var3896_0 var3896)\r\n; rep: (as @var3896_1 var3896)\r\n; cardinality of var3258 is 1\r\n; rep: (as @var3258_0 var3258)\r\n; cardinality of var2747 is 1\r\n; rep: (as @var2747_0 var2747)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getArrayStart/559431594 ((_arg_1 var2747)) String \"A\")\r\n(define-fun cast-from-var3896-to-var2747 ((_arg_1 var3896)) var2747 (as @var2747_0 var2747))\r\n(define-fun null-var3896 () var3896 (as @var3896_0 var3896))\r\n(define-fun null-String () String \"B\")\r\n(define-fun var3545 () var3896 (as @var3896_1 var3896))\r\n(define-fun var500 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34738176,
            "run_time": 0.12312626838684082,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 29 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164044800,
            "run_time": 2.769768238067627,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var500 () String \"\\u{0}\")\r\n  (define-fun var3545 () var3896 var3896!8)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3896 () var3896 var3896!6)\r\n  (define-fun var2747!22 () var2747 (cast-from-var3896-to-var2747 var3896!8))\r\n  (define-fun getArrayStart/559431594 ((x!0 var2747)) String (ite (= x!0 var2747!22) \"\\u{1}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
            "r0 := @parameter0: java.lang.String",
            "$r2 = virtualinvoke r1.<org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle: java.lang.String getArrayStart()>()",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>($r2)",
            "if $z0 == 0 goto $z2 = 0",
            "$z2 = 0",
            "return $z2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ClassUtils__toCanonicalName__-1103688143\\1479.smt2",
        "z3": {
            "memory": 32452608,
            "run_time": 0.16153669357299805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1920 () String\r\n    (var3813_deleteWhitespace/-404101348 var3000))\r\n  (define-fun var1920!1 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"B\")\r\n  (define-fun var3000 () String\r\n    \"\")\r\n  (define-fun var2769 () Bool\r\n    (str.suffixof \"[]\" var1920!1))\r\n  (define-fun var3064 () String\r\n    \"\")\r\n  (define-fun var3290_requireNonNull/1378936425 ((x!0 var515) (x!1 String)) var515\r\n    var515!val!0)\r\n  (define-fun var3813_deleteWhitespace/-404101348 ((x!0 String)) String\r\n    \"\")\r\n  (define-fun cast-from-String-to-var515 ((x!0 String)) var515\r\n    var515!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 5271552,
            "run_time": 0.03003382682800293,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2139 is 1\r\n; rep: (as @var2139_0 var2139)\r\n; cardinality of var3813 is 1\r\n; rep: (as @var3813_0 var3813)\r\n; cardinality of var3290 is 1\r\n; rep: (as @var3290_0 var3290)\r\n; cardinality of var515 is 1\r\n; rep: (as @var515_0 var515)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3813_deleteWhitespace/-404101348 ((BOUND_VARIABLE_687 String)) String \"\")\r\n(define-fun var3290_requireNonNull/1378936425 ((BOUND_VARIABLE_690 var515) (BOUND_VARIABLE_691 String)) var515 (as @var515_0 var515))\r\n(define-fun cast-from-String-to-var515 ((BOUND_VARIABLE_694 String)) var515 (as @var515_0 var515))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3000 () String \"\")\r\n(define-fun var1920!1 () String \"\")\r\n(define-fun var3064 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38453248,
            "run_time": 0.09171128273010254,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2769 () Bool\n    (str.suffixof \"[]\" var1920!1))\n  (define-fun var3000 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1920!1 () String\n    \"\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1920 () String\n    (var3813_deleteWhitespace/-404101348 var3000))\n  (define-fun var3064 () String\n    \"\")\n  (define-fun var3290_requireNonNull/1378936425 ((x!0 var515) (x!1 String)) var515\n    var515!val!0)\n  (define-fun var3813_deleteWhitespace/-404101348 ((x!0 String)) String\n    \"\")\n  (define-fun cast-from-String-to-var515 ((x!0 String)) var515\n    var515!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165048320,
            "run_time": 2.720273733139038,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1920!1 () String \"\")\r\n  (define-fun var3000 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: boolean endsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r7 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String deleteWhitespace(java.lang.String)>(r0)",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r7, \"className\")",
            "$z0 = virtualinvoke r7.<java.lang.String: boolean endsWith(java.lang.String)>(\"[]\")",
            "if $z0 == 0 goto return r7",
            "return r7"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitMsb0ToBinary__1576048278\\919.smt2",
        "z3": {
            "memory": 33062912,
            "run_time": 0.17060494422912598,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3478 () Int\r\n    var533)\r\n  (define-fun null-Int () Int\r\n    71)\r\n  (define-fun var691 () var718\r\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var718 var3160-TTTT)))\r\n  (define-fun var1699 () (Array Int Bool)\r\n    var3160-TTTT)\r\n  (define-fun var768 () (Array Int Bool)\r\n    (cast-from-var718-to-__Array__Int__Bool__\r\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var718 var3160-TTTT))))\r\n  (define-fun var533 () Int\r\n    70)\r\n  (define-fun var3160-TTTT () (Array Int Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun cast-from-var718-to-__Array__Int__Bool__ ((x!0 var718)) (Array Int\r\n         Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun clone/791635256 ((x!0 var718)) var718\r\n    var718!val!0)\r\n  (define-fun cast-from-__Array__Int__Bool__-to-var718 ((x!0 (Array Int Bool))) var718\r\n    var718!val!0)\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8769536,
            "run_time": 0.031177759170532227,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3160 is 1\r\n; rep: (as @var3160_0 var3160)\r\n; cardinality of var718 is 1\r\n; rep: (as @var718_0 var718)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun clone/791635256 ((BOUND_VARIABLE_768 var718)) var718 (as @var718_0 var718))\r\n(define-fun cast-from-__Array__Int__Bool__-to-var718 ((BOUND_VARIABLE_771 (Array Int Bool))) var718 (as @var718_0 var718))\r\n(define-fun cast-from-var718-to-__Array__Int__Bool__ ((BOUND_VARIABLE_774 var718)) (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var3160-TTTT () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var533 () Int 70)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37814272,
            "run_time": 0.13777899742126465,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1699 () (Array Int Bool)\n    var3160-TTTT)\n  (define-fun null-Int () Int\n    71)\n  (define-fun var768 () (Array Int Bool)\n    (cast-from-var718-to-__Array__Int__Bool__\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var718 var3160-TTTT))))\n  (define-fun var3478 () Int\n    var533)\n  (define-fun var691 () var718\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var718 var3160-TTTT)))\n  (define-fun var533 () Int\n    70)\n  (define-fun var3160-TTTT () (Array Int Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun cast-from-var718-to-__Array__Int__Bool__ ((x!0 var718)) (Array Int\n         Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun clone/791635256 ((x!0 var718)) var718\n    var718!val!0)\n  (define-fun cast-from-__Array__Int__Bool__-to-var718 ((x!0 (Array Int Bool))) var718\n    var718!val!0)\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155795456,
            "run_time": 2.704902410507202,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var533 () Int 70)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto $r45 = <org.apache.commons.lang3.Conversion: boolean[] FFFF>;     case 49: goto $r42 = <org.apache.commons.lang3.Conversion: boolean[] FFFT>;     case 50: goto $r39 = <org.apache.commons.lang3.Conversion: boolean[] FFTF>;     case 51: goto $r36 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 52: goto $r33 = <org.apache.commons.lang3.Conversion: boolean[] FTFF>;     case 53: goto $r30 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 54: goto $r27 = <org.apache.commons.lang3.Conversion: boolean[] FTTF>;     case 55: goto $r24 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 56: goto $r21 = <org.apache.commons.lang3.Conversion: boolean[] TFFF>;     case 57: goto $r18 = <org.apache.commons.lang3.Conversion: boolean[] TFFT>;     case 58: goto $r55 = new java.lang.IllegalArgumentException;     case 59: goto $r55 = new java.lang.IllegalArgumentException;     case 60: goto $r55 = new java.lang.IllegalArgumentException;     case 61: goto $r55 = new java.lang.IllegalArgumentException;     case 62: goto $r55 = new java.lang.IllegalArgumentException;     case 63: goto $r55 = new java.lang.IllegalArgumentException;     case 64: goto $r55 = new java.lang.IllegalArgumentException;     case 65: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 66: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 67: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 68: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 69: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 70: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     case 71: goto $r55 = new java.lang.IllegalArgumentException;     case 72: goto $r55 = new java.lang.IllegalArgumentException;     case 73: goto $r55 = new java.lang.IllegalArgumentException;     case 74: goto $r55 = new java.lang.IllegalArgumentException;     case 75: goto $r55 = new java.lang.IllegalArgumentException;     case 76: goto $r55 = new java.lang.IllegalArgumentException;     case 77: goto $r55 = new java.lang.IllegalArgumentException;     case 78: goto $r55 = new java.lang.IllegalArgumentException;     case 79: goto $r55 = new java.lang.IllegalArgumentException;     case 80: goto $r55 = new java.lang.IllegalArgumentException;     case 81: goto $r55 = new java.lang.IllegalArgumentException;     case 82: goto $r55 = new java.lang.IllegalArgumentException;     case 83: goto $r55 = new java.lang.IllegalArgumentException;     case 84: goto $r55 = new java.lang.IllegalArgumentException;     case 85: goto $r55 = new java.lang.IllegalArgumentException;     case 86: goto $r55 = new java.lang.IllegalArgumentException;     case 87: goto $r55 = new java.lang.IllegalArgumentException;     case 88: goto $r55 = new java.lang.IllegalArgumentException;     case 89: goto $r55 = new java.lang.IllegalArgumentException;     case 90: goto $r55 = new java.lang.IllegalArgumentException;     case 91: goto $r55 = new java.lang.IllegalArgumentException;     case 92: goto $r55 = new java.lang.IllegalArgumentException;     case 93: goto $r55 = new java.lang.IllegalArgumentException;     case 94: goto $r55 = new java.lang.IllegalArgumentException;     case 95: goto $r55 = new java.lang.IllegalArgumentException;     case 96: goto $r55 = new java.lang.IllegalArgumentException;     case 97: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 98: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 99: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 100: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 101: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 102: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     default: goto $r55 = new java.lang.IllegalArgumentException; }",
            "$r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>",
            "$r1 = virtualinvoke $r0.<java.lang.Object: java.lang.Object clone()>()",
            "$r2 = (boolean[]) $r1",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharSequenceUtils__subSequence__-1305673208\\187.smt2",
        "z3": {
            "memory": 32649216,
            "run_time": 0.1937112808227539,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var34 () Int\r\n    1)\r\n  (define-fun var1514 () String\r\n    \"!0!\")\r\n  (define-fun var2064 () Int\r\n    (String_length/-667254855 var1514))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2552 () String\r\n    (String_subSequence/-1087362312\r\n  var1514\r\n  var34\r\n  (String_length/-667254855 var1514)))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    0)\r\n  (define-fun String_subSequence/-1087362312 ((x!0 String) (x!1 Int) (x!2 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9654272,
            "run_time": 0.1072690486907959,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_length/-667254855 ((BOUND_VARIABLE_506 String)) Int 0)\r\n(define-fun String_subSequence/-1087362312 ((BOUND_VARIABLE_509 String) (BOUND_VARIABLE_510 Int) (BOUND_VARIABLE_511 Int)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1514 () String \"\")\r\n(define-fun var34 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38432768,
            "run_time": 0.13805174827575684,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2064 () Int\n    (String_length/-667254855 var1514))\n  (define-fun var1514 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2552 () String\n    (String_subSequence/-1087362312\n  var1514\n  var34\n  (String_length/-667254855 var1514)))\n  (define-fun var34 () Int\n    1)\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    0)\n  (define-fun String_subSequence/-1087362312 ((x!0 String) (x!1 Int) (x!2 Int)) String\n    \"\")\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 131366912,
            "run_time": 2.6606054306030273,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var34 () Int 1)\r\n  (define-fun var1514 () String \"\\u{0}\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 1,
            "<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "i0 := @parameter1: int",
            "if r0 != null goto $i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$r1 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(i0, $i1)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.DiffBuilder__lambda$append$0__-1390849380\\1517.smt2",
        "z3": {
            "memory": 31961088,
            "run_time": 0.08633995056152344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var110:\r\n  ;;   var110!val!1 var110!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var110!val!1 () var110)\r\n  (declare-fun var110!val!0 () var110)\r\n  ;; cardinality constraint:\r\n  (forall ((x var110)) (or (= x var110!val!1) (= x var110!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3015:\r\n  ;;   var3015!val!1 var3015!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3015!val!1 () var3015)\r\n  (declare-fun var3015!val!0 () var3015)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3015)) (or (= x var3015!val!1) (= x var3015!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var110 () var110\r\n    var110!val!1)\r\n  (define-fun var2078 () String\r\n    \"A\")\r\n  (define-fun var762 () var3015\r\n    var3015!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1220 () var3150\r\n    (getRight/-570391911 (cast-from-var3015-to-var3326 var762)))\r\n  (define-fun var143 () String\r\n    String-init)\r\n  (define-fun var2051 () var110\r\n    var110!val!0)\r\n  (define-fun null-var3015 () var3015\r\n    var3015!val!1)\r\n  (define-fun var3438 () String\r\n    (str.++ var143!1 var2078 \".\"))\r\n  (define-fun var1626 () String\r\n    (str.++ var143!1 var2078))\r\n  (define-fun var2854 () String\r\n    (str.++ var143!1 var2078 \".\" (getFieldName/-673177798 var762)))\r\n  (define-fun var979 () String\r\n    (str.++ var143!1 var2078 \".\" (getFieldName/-673177798 var762)))\r\n  (define-fun var130 () var3150\r\n    (getLeft/1053147166 (cast-from-var3015-to-var3326 var762)))\r\n  (define-fun var3075 () String\r\n    (getFieldName/-673177798 var762))\r\n  (define-fun var143!2 () String\r\n    \"A\")\r\n  (define-fun var143!1 () String\r\n    \"\")\r\n  (define-fun var3438!1 () String\r\n    \"A.\")\r\n  (define-fun var1626!1 () String\r\n    \"A.\")\r\n  (define-fun var130!1 () var3150\r\n    var3150!val!0)\r\n  (define-fun var979!1 () String\r\n    \"\")\r\n  (define-fun var2051!1 () var110\r\n    var110!val!1)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1220!1 () var3150\r\n    var3150!val!0)\r\n  (define-fun getFieldName/-673177798 ((x!0 var3015)) String\r\n    \"\")\r\n  (define-fun getRight/-570391911 ((x!0 var3326)) var3150\r\n    var3150!val!0)\r\n  (define-fun cast-from-var3015-to-var3326 ((x!0 var3015)) var3326\r\n    var3326!val!0)\r\n  (define-fun getLeft/1053147166 ((x!0 var3326)) var3150\r\n    var3150!val!0)\r\n  (define-fun append/-2087050170 ((x!0 var110)\r\n   (x!1 String)\r\n   (x!2 var3150)\r\n   (x!3 var3150)) var110\r\n    var110!val!1)\r\n)\r\n(error \"line 65 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 3203072,
            "run_time": 0.030254125595092773,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var110 is 2\r\n; rep: (as @var110_0 var110)\r\n; rep: (as @var110_1 var110)\r\n; cardinality of var1767 is 1\r\n; rep: (as @var1767_0 var1767)\r\n; cardinality of var3015 is 2\r\n; rep: (as @var3015_0 var3015)\r\n; rep: (as @var3015_1 var3015)\r\n; cardinality of var3150 is 1\r\n; rep: (as @var3150_0 var3150)\r\n; cardinality of var3326 is 1\r\n; rep: (as @var3326_0 var3326)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getFieldName/-673177798 ((BOUND_VARIABLE_655 var3015)) String \"\")\r\n(define-fun getLeft/1053147166 ((BOUND_VARIABLE_658 var3326)) var3150 (as @var3150_0 var3150))\r\n(define-fun cast-from-var3015-to-var3326 ((BOUND_VARIABLE_661 var3015)) var3326 (as @var3326_0 var3326))\r\n(define-fun getRight/-570391911 ((BOUND_VARIABLE_664 var3326)) var3150 (as @var3150_0 var3150))\r\n(define-fun append/-2087050170 ((BOUND_VARIABLE_667 var110) (BOUND_VARIABLE_668 String) (BOUND_VARIABLE_669 var3150) (BOUND_VARIABLE_670 var3150)) var110 (as @var110_0 var110))\r\n(define-fun null-var110 () var110 (as @var110_0 var110))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3015 () var3015 (as @var3015_0 var3015))\r\n(define-fun var2051 () var110 (as @var110_1 var110))\r\n(define-fun var2078 () String \"\")\r\n(define-fun var762 () var3015 (as @var3015_1 var3015))\r\n(define-fun var143!1 () String \"\")\r\n(define-fun var143!2 () String \"\")\r\n(define-fun var1626!1 () String \".\")\r\n(define-fun var3438!1 () String \".\")\r\n(define-fun var2051!1 () var110 (as @var110_0 var110))\r\n(define-fun var979!1 () String \"\")\r\n(define-fun var130!1 () var3150 (as @var3150_0 var3150))\r\n(define-fun var1220!1 () var3150 (as @var3150_0 var3150))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37740544,
            "run_time": 0.15593481063842773,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var110:\n  ;;   var110!val!1 var110!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var110!val!1 () var110)\n  (declare-fun var110!val!0 () var110)\n  ;; cardinality constraint:\n  (forall ((x var110)) (or (= x var110!val!1) (= x var110!val!0)))\n  ;; -----------\n  ;; universe for var3015:\n  ;;   var3015!val!1 var3015!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3015!val!1 () var3015)\n  (declare-fun var3015!val!0 () var3015)\n  ;; cardinality constraint:\n  (forall ((x var3015)) (or (= x var3015!val!1) (= x var3015!val!0)))\n  ;; -----------\n  (define-fun null-var110 () var110\n    var110!val!1)\n  (define-fun var1626!1 () String\n    \"\\u{0}\\u{0}.\")\n  (define-fun var3438!1 () String\n    \"\\u{0}\\u{0}.\")\n  (define-fun var143!1 () String\n    \"\")\n  (define-fun var143!2 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var143 () String\n    String-init)\n  (define-fun var1220 () var3150\n    (getRight/-570391911 (cast-from-var3015-to-var3326 var762)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2078 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var762 () var3015\n    var3015!val!0)\n  (define-fun var130 () var3150\n    (getLeft/1053147166 (cast-from-var3015-to-var3326 var762)))\n  (define-fun var3075 () String\n    (getFieldName/-673177798 var762))\n  (define-fun var2051 () var110\n    var110!val!0)\n  (define-fun null-var3015 () var3015\n    var3015!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1626 () String\n    (str.++ var143!1 var2078))\n  (define-fun var979 () String\n    (str.++ var143!1 var2078 \".\" (getFieldName/-673177798 var762)))\n  (define-fun var3438 () String\n    (str.++ var143!1 var2078 \".\"))\n  (define-fun var2854 () String\n    (str.++ var143!1 var2078 \".\" (getFieldName/-673177798 var762)))\n  (define-fun var130!1 () var3150\n    var3150!val!0)\n  (define-fun var979!1 () String\n    \"\")\n  (define-fun var2051!1 () var110\n    var110!val!1)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1220!1 () var3150\n    var3150!val!0)\n  (define-fun getFieldName/-673177798 ((x!0 var3015)) String\n    \"\")\n  (define-fun getRight/-570391911 ((x!0 var3326)) var3150\n    var3150!val!0)\n  (define-fun cast-from-var3015-to-var3326 ((x!0 var3015)) var3326\n    var3326!val!0)\n  (define-fun getLeft/1053147166 ((x!0 var3326)) var3150\n    var3150!val!0)\n  (define-fun append/-2087050170 ((x!0 var110)\n   (x!1 String)\n   (x!2 var3150)\n   (x!3 var3150)) var110\n    var110!val!1)\n)\n(error \"line 65 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166346752,
            "run_time": 2.9081075191497803,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var110/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.DiffBuilder__lambda$append$0__-1390849380\\1517.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3438!1 =\r\n     concat(all_26_5, all_26_4)\r\n   var1626!1 =\r\n     concat(var2078, \".\")\r\n   all_26_5 =\r\n     concat(var2078, \".\")\r\n\r\n2394ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.builder.DiffBuilder",
            "r2 := @parameter0: java.lang.String",
            "r4 := @parameter1: org.apache.commons.lang3.builder.Diff",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r5 = virtualinvoke r4.<org.apache.commons.lang3.builder.Diff: java.lang.String getFieldName()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r9 = virtualinvoke r4.<org.apache.commons.lang3.builder.Diff: java.lang.Object getLeft()>()",
            "$r8 = virtualinvoke r4.<org.apache.commons.lang3.builder.Diff: java.lang.Object getRight()>()",
            "virtualinvoke r0.<org.apache.commons.lang3.builder.DiffBuilder: org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,java.lang.Object,java.lang.Object)>($r10, $r9, $r8)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendSummary__2014633569\\2808.smt2",
        "z3": {
            "memory": 32120832,
            "run_time": 0.18965888023376465,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1040:\r\n  ;;   var1040!val!1 var1040!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1040!val!1 () var1040)\r\n  (declare-fun var1040!val!0 () var1040)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1040)) (or (= x var1040!val!1) (= x var1040!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2929:\r\n  ;;   var2929!val!1 var2929!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2929!val!1 () var2929)\r\n  (declare-fun var2929!val!0 () var2929)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2929)) (or (= x var2929!val!1) (= x var2929!val!0)))\r\n  ;; -----------\r\n  (define-fun var1286!3 () String\r\n    \"\")\r\n  (define-fun null-var1040 () var1040\r\n    var1040!val!1)\r\n  (define-fun var3151 () String\r\n    (getShortClassName/-873297214 var3282 (getClass/1258963082 var1988)))\r\n  (define-fun var1286!1 () String\r\n    \"\")\r\n  (define-fun var1551 () ClassObject\r\n    (getClass/1258963082 var1988))\r\n  (define-fun var1286 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var885 () String\r\n    (summaryObjectStartText/-417041427 var3282))\r\n  (define-fun var1988 () var1040\r\n    var1040!val!0)\r\n  (define-fun null-var2929 () var2929\r\n    var2929!val!1)\r\n  (define-fun var3282 () var2929\r\n    var2929!val!0)\r\n  (define-fun var355 () String\r\n    \"B\")\r\n  (define-fun var1286!2 () String\r\n    \"\")\r\n  (define-fun var2111 () String\r\n    (summaryObjectEndText/-417041427 var3282))\r\n  (define-fun getClass/1258963082 ((x!0 var1040)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun summaryObjectStartText/-417041427 ((x!0 var2929)) String\r\n    \"\")\r\n  (define-fun summaryObjectEndText/-417041427 ((x!0 var2929)) String\r\n    \"\")\r\n  (define-fun getShortClassName/-873297214 ((x!0 var2929) (x!1 ClassObject)) String\r\n    \"\")\r\n)\r\n(error \"line 47 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 5341184,
            "run_time": 0.030157804489135742,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2929 is 2\r\n; rep: (as @var2929_0 var2929)\r\n; rep: (as @var2929_1 var2929)\r\n; cardinality of var3993 is 1\r\n; rep: (as @var3993_0 var3993)\r\n; cardinality of var1040 is 2\r\n; rep: (as @var1040_0 var1040)\r\n; rep: (as @var1040_1 var1040)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun summaryObjectStartText/-417041427 ((BOUND_VARIABLE_878 var2929)) String \"\")\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_881 var1040)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getShortClassName/-873297214 ((BOUND_VARIABLE_884 var2929) (BOUND_VARIABLE_885 ClassObject)) String \"\")\r\n(define-fun summaryObjectEndText/-417041427 ((BOUND_VARIABLE_888 var2929)) String \"\")\r\n(define-fun null-var2929 () var2929 (as @var2929_0 var2929))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1040 () var1040 (as @var1040_0 var1040))\r\n(define-fun var3282 () var2929 (as @var2929_1 var2929))\r\n(define-fun var1286 () String \"\")\r\n(define-fun var355 () String \"\")\r\n(define-fun var1988 () var1040 (as @var1040_1 var1040))\r\n(define-fun var1286!1 () String \"\")\r\n(define-fun var1286!2 () String \"\")\r\n(define-fun var1286!3 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39702528,
            "run_time": 0.3007783889770508,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 46 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 47 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155619328,
            "run_time": 2.681206226348877,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendSummary__2014633569\\2808.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1286!3 =\r\n     concat(var1286!2, rhs)\r\n   var1286!2 =\r\n     concat(var1286!1, rhs)\r\n   var1286!1 =\r\n     concat(var1286, rhs)\r\n   ... sat\r\n\r\n2040ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 3
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r7 := @parameter1: java.lang.String",
            "r3 := @parameter2: java.lang.Object",
            "$r2 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String summaryObjectStartText>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "$r4 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()",
            "$r5 = virtualinvoke r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String getShortClassName(java.lang.Class)>($r4)",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r5)",
            "$r6 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String summaryObjectEndText>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r6)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__-1773303597\\2444.smt2",
        "z3": {
            "memory": 30720000,
            "run_time": 0.10512614250183105,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2351:\r\n  ;;   var2351!val!0 var2351!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2351!val!0 () var2351)\r\n  (declare-fun var2351!val!1 () var2351)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2351)) (or (= x var2351!val!0) (= x var2351!val!1)))\r\n  ;; -----------\r\n  (define-fun var2293 () Int\r\n    (getLength-Arr-Int-1 var447))\r\n  (define-fun var356 () var2351\r\n    var2351!val!0)\r\n  (define-fun var3839!2 () String\r\n    \"\")\r\n  (define-fun var2606 () Int\r\n    0)\r\n  (define-fun var2413 () String\r\n    (arrayStart/-417041427 var356))\r\n  (define-fun var447 () (Array Int Int)\r\n    ((as const (Array Int Int)) (- 1)))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) (- 1)) 0 0))\r\n  (define-fun var273 () String\r\n    (arrayEnd/-417041427 var356))\r\n  (define-fun var3839!1 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3674 () String\r\n    \"\")\r\n  (define-fun var3839 () String\r\n    \"\")\r\n  (define-fun null-var2351 () var2351\r\n    var2351!val!1)\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\r\n    0)\r\n  (define-fun arrayEnd/-417041427 ((x!0 var2351)) String\r\n    \"\")\r\n  (define-fun arrayStart/-417041427 ((x!0 var2351)) String\r\n    \"\")\r\n)\r\n(error \"line 42 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11976704,
            "run_time": 0.031157255172729492,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2351 is 2\r\n; rep: (as @var2351_0 var2351)\r\n; rep: (as @var2351_1 var2351)\r\n; cardinality of var1566 is 1\r\n; rep: (as @var1566_0 var1566)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arrayStart/-417041427 ((BOUND_VARIABLE_819 var2351)) String \"\")\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 0)\r\n(define-fun arrayEnd/-417041427 ((BOUND_VARIABLE_822 var2351)) String \"\")\r\n(define-fun null-var2351 () var2351 (as @var2351_0 var2351))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var356 () var2351 (as @var2351_1 var2351))\r\n(define-fun var3839 () String \"\")\r\n(define-fun var3674 () String \"\")\r\n(define-fun var447 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3839!1 () String \"\")\r\n(define-fun var3839!2 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38727680,
            "run_time": 0.2620260715484619,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 41 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 42 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166555648,
            "run_time": 2.8954598903656006,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__-1773303597\\2444.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3839!2 =\r\n     concat(var3839!1, rhs)\r\n   var3839!1 =\r\n     concat(var3839, rhs)\r\n   ... sat\r\n\r\n2230ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r5 := @parameter1: java.lang.String",
            "r3 := @parameter2: short[]",
            "$r2 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayStart>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "i2 = 0",
            "$i0 = lengthof r3",
            "if i2 >= $i0 goto $r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "$r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.LocaleUtils__lambda$languagesByCountry$2__-521683055\\568.smt2",
        "z3": {
            "memory": 32337920,
            "run_time": 0.15781879425048828,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3605:\r\n  ;;   var3605!val!1 var3605!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3605!val!1 () var3605)\r\n  (declare-fun var3605!val!0 () var3605)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3605)) (or (= x var3605!val!1) (= x var3605!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var3605 () var3605\r\n    var3605!val!1)\r\n  (define-fun var3443 () String\r\n    (getCountry/-945186178 var3779))\r\n  (define-fun var2535 () String\r\n    \"!0!\")\r\n  (define-fun var3779 () var3605\r\n    var3605!val!0)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var3359 () Bool\r\n    (= var2535 (getCountry/-945186178 var3779)))\r\n  (define-fun var2257 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun getCountry/-945186178 ((x!0 var3605)) String\r\n    \"!2!\")\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9654272,
            "run_time": 0.030773401260375977,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3683 is 1\r\n; rep: (as @var3683_0 var3683)\r\n; cardinality of var3605 is 2\r\n; rep: (as @var3605_0 var3605)\r\n; rep: (as @var3605_1 var3605)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getCountry/-945186178 ((_arg_1 var3605)) String \"A\")\r\n(define-fun null-String () String \"B\")\r\n(define-fun null-var3605 () var3605 (as @var3605_0 var3605))\r\n(define-fun var2535 () String \"\")\r\n(define-fun var3779 () var3605 (as @var3605_1 var3605))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37462016,
            "run_time": 0.23104548454284668,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 26 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 149979136,
            "run_time": 2.8297667503356934,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3779 () var3605 var3605!4)\r\n  (define-fun var2535 () String \"\\u{0}\")\r\n  (define-fun null-var3605 () var3605 var3605!2)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun getCountry/-945186178 ((x!0 var3605)) String (ite (= x!0 var3605!4) \"\\u{1}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.util.Locale",
            "$r2 = virtualinvoke r1.<java.util.Locale: java.lang.String getCountry()>()",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2)",
            "if $z0 == 0 goto $z2 = 0",
            "$z2 = 0",
            "return $z2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__474123821\\2020.smt2",
        "z3": {
            "memory": 32120832,
            "run_time": 0.13325834274291992,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3520:\r\n  ;;   var3520!val!0 var3520!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3520!val!0 () var3520)\r\n  (declare-fun var3520!val!1 () var3520)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3520)) (or (= x var3520!val!0) (= x var3520!val!1)))\r\n  ;; -----------\r\n  (define-fun var3765 () var3520\r\n    var3520!val!0)\r\n  (define-fun var1922 () (Array Int Int)\r\n    ((as const (Array Int Int)) (- 1)))\r\n  (define-fun var1169 () Int\r\n    0)\r\n  (define-fun var483 () Int\r\n    (getLength-Arr-Int-1 var1922))\r\n  (define-fun var3136 () String\r\n    \"\")\r\n  (define-fun var2341!2 () String\r\n    \"\")\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) (- 1)) 0 0))\r\n  (define-fun var2341 () String\r\n    \"\")\r\n  (define-fun null-var3520 () var3520\r\n    var3520!val!1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2341!1 () String\r\n    \"\")\r\n  (define-fun var2957 () String\r\n    (arrayStart/-417041427 var3765))\r\n  (define-fun var2076 () String\r\n    (arrayEnd/-417041427 var3765))\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\r\n    0)\r\n  (define-fun arrayEnd/-417041427 ((x!0 var3520)) String\r\n    \"\")\r\n  (define-fun arrayStart/-417041427 ((x!0 var3520)) String\r\n    \"\")\r\n)\r\n(error \"line 42 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11751424,
            "run_time": 0.04668164253234863,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3520 is 2\r\n; rep: (as @var3520_0 var3520)\r\n; rep: (as @var3520_1 var3520)\r\n; cardinality of var3147 is 1\r\n; rep: (as @var3147_0 var3147)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arrayStart/-417041427 ((BOUND_VARIABLE_819 var3520)) String \"\")\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 0)\r\n(define-fun arrayEnd/-417041427 ((BOUND_VARIABLE_822 var3520)) String \"\")\r\n(define-fun null-var3520 () var3520 (as @var3520_0 var3520))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var3765 () var3520 (as @var3520_1 var3520))\r\n(define-fun var2341 () String \"\")\r\n(define-fun var3136 () String \"\")\r\n(define-fun var1922 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2341!1 () String \"\")\r\n(define-fun var2341!2 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39239680,
            "run_time": 0.2929246425628662,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 41 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 42 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168939520,
            "run_time": 2.986215591430664,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__474123821\\2020.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2341!2 =\r\n     concat(var2341!1, rhs)\r\n   var2341!1 =\r\n     concat(var2341, rhs)\r\n   ... sat\r\n\r\n2329ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r5 := @parameter1: java.lang.String",
            "r3 := @parameter2: char[]",
            "$r2 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayStart>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "i2 = 0",
            "$i0 = lengthof r3",
            "if i2 >= $i0 goto $r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "$r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharUtils__toChar__728676319\\241-deviant-0.smt2",
        "z3": {
            "memory": 32731136,
            "run_time": 0.19521737098693848,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var575 () (Array Int var3004)\r\n    arr-var3004-init)\r\n  (define-fun var1498 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1498!1 () String\r\n    \"\")\r\n  (define-fun arr-var3004-init () (Array Int var3004)\r\n    ((as const (Array Int var3004)) var3004!val!0))\r\n  (define-fun var3713 () String\r\n    \"\")\r\n  (define-fun var575!1 () (Array Int var3004)\r\n    ((as const (Array Int var3004)) var3004!val!0))\r\n  (define-fun var2858_notEmpty/1384193294 ((x!0 String)\r\n   (x!1 String)\r\n   (x!2 (Array Int var3004))) String\r\n    \"\")\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9682944,
            "run_time": 0.030773401260375977,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1125 is 1\r\n; rep: (as @var1125_0 var1125)\r\n; cardinality of var3004 is 1\r\n; rep: (as @var3004_0 var3004)\r\n; cardinality of var2858 is 1\r\n; rep: (as @var2858_0 var2858)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var3004-init () (Array Int var3004) ((as const (Array Int var3004)) (as @var3004_0 var3004)))\r\n(define-fun var2858_notEmpty/1384193294 ((BOUND_VARIABLE_548 String) (BOUND_VARIABLE_549 String) (BOUND_VARIABLE_550 (Array Int var3004))) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1498 () String \"\")\r\n(define-fun var1498!1 () String \"\")\r\n(define-fun var3713 () String \"\")\r\n(define-fun var575!1 () (Array Int var3004) ((as const (Array Int var3004)) (as @var3004_0 var3004)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38387712,
            "run_time": 0.23104548454284668,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var575 () (Array Int var3004)\n    arr-var3004-init)\n  (define-fun var1498!1 () String\n    \"\")\n  (define-fun var1498 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun arr-var3004-init () (Array Int var3004)\n    ((as const (Array Int var3004)) var3004!val!0))\n  (define-fun var3713 () String\n    \"\")\n  (define-fun var575!1 () (Array Int var3004)\n    ((as const (Array Int var3004)) var3004!val!0))\n  (define-fun var2858_notEmpty/1384193294 ((x!0 String)\n   (x!1 String)\n   (x!2 (Array Int var3004))) String\n    \"\")\n)\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165732352,
            "run_time": 3.0008389949798584,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1498!1 () String \"\")\r\n  (define-fun var1498 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$r1 = newarray (java.lang.Object)[0]",
            "staticinvoke <org.apache.commons.lang3.Validate: java.lang.CharSequence notEmpty(java.lang.CharSequence,java.lang.String,java.lang.Object[])>(r0, \"The String must not be empty\", $r1)",
            "$c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "return $c0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__binaryToHexDigitMsb0_4bits__-286303204\\304.smt2",
        "z3": {
            "memory": 32555008,
            "run_time": 0.1437673568725586,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1229 () Int\r\n    (getLength-Arr-Bool-1 var83))\r\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool)\r\n    (store ((as const (Array Int Bool)) true) 0 false))\r\n  (define-fun var1569 () String\r\n    (str.++ var881!1 \"src.length>8: src.length=\"))\r\n  (define-fun var1569!1 () String\r\n    \"src.length>8: src.length=\")\r\n  (define-fun var881 () String\r\n    String-init)\r\n  (define-fun var3994 () var2769\r\n    var2769-init)\r\n  (define-fun var83 () (Array Int Bool)\r\n    ((as const (Array Int Bool)) true))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var626 () Int\r\n    (getLength-Arr-Bool-1 var83))\r\n  (define-fun var2182 () Int\r\n    1)\r\n  (define-fun var2412 () String\r\n    (str.++ var881!1\r\n        \"src.length>8: src.length=\"\r\n        (str.from_int (getLength-Arr-Bool-1 var83))))\r\n  (define-fun var1859 () String\r\n    (str.++ var881!1\r\n        \"src.length>8: src.length=\"\r\n        (str.from_int (getLength-Arr-Bool-1 var83))))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var881!2 () String\r\n    \"src.length>8: src.length=\")\r\n  (define-fun var881!1 () String\r\n    \"\")\r\n  (define-fun var2769-init () var2769\r\n    var2769!val!0)\r\n  (define-fun var3994!1 () var2769\r\n    var2769!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1859!1 () String\r\n    \"\")\r\n  (define-fun getLength-Arr-Bool-1 ((x!0 (Array Int Bool))) Int\r\n    9)\r\n  (define-fun <init>/875830710 ((x!0 var2769) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2269184,
            "run_time": 0.029835224151611328,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2769 is 1\r\n; rep: (as @var2769_0 var2769)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getLength-Arr-Bool-1 ((_arg_1 (Array Int Bool))) Int 9)\r\n(define-fun var2769-init () var2769 (as @var2769_0 var2769))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_977 var2769) (BOUND_VARIABLE_978 String)) void (as @void_0 void))\r\n(define-fun null-__Array__Int__Bool__ () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var83 () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var2182 () Int 0)\r\n(define-fun var881!1 () String \"\")\r\n(define-fun var881!2 () String \"src.length>8: src.length=\")\r\n(define-fun var1569!1 () String \"src.length>8: src.length=\")\r\n(define-fun var3994!1 () var2769 (as @var2769_0 var2769))\r\n(define-fun var1859!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37937152,
            "run_time": 0.13839483261108398,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var881 () String\n    String-init)\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool)\n    (store ((as const (Array Int Bool)) false) 0 true))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1229 () Int\n    (getLength-Arr-Bool-1 var83))\n  (define-fun var2412 () String\n    (str.++ var881!1\n        \"src.length>8: src.length=\"\n        (str.from_int (getLength-Arr-Bool-1 var83))))\n  (define-fun var1859 () String\n    (str.++ var881!1\n        \"src.length>8: src.length=\"\n        (str.from_int (getLength-Arr-Bool-1 var83))))\n  (define-fun var83 () (Array Int Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun var3994 () var2769\n    var2769-init)\n  (define-fun var881!1 () String\n    \"\")\n  (define-fun var2182 () Int\n    1)\n  (define-fun var626 () Int\n    (getLength-Arr-Bool-1 var83))\n  (define-fun var1569!1 () String\n    \"src.length>8: src.length=\")\n  (define-fun var1569 () String\n    (str.++ var881!1 \"src.length>8: src.length=\"))\n  (define-fun null-Int () Int\n    0)\n  (define-fun var881!2 () String\n    \"src.length>8: src.length=\")\n  (define-fun var2769-init () var2769\n    var2769!val!0)\n  (define-fun var3994!1 () var2769\n    var2769!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1859!1 () String\n    \"\")\n  (define-fun getLength-Arr-Bool-1 ((x!0 (Array Int Bool))) Int\n    9)\n  (define-fun <init>/875830710 ((x!0 var2769) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181350400,
            "run_time": 3.1399991512298584,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1569!1 () String \"src.length>8: src.length=\")\r\n  (define-fun var881!2 () String \"src.length>8: src.length=\")\r\n  (define-fun var881!1 () String \"\")\r\n  (define-fun var2182 () Int 1)\r\n  (define-fun var83 () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool) (store ((as const (Array Int Bool)) true) 0 false))\r\n  (define-fun abbrev_106 ((x!0 Int)) String (ite (= x!0 0) \"src.length>8: src.length=\" \"\"))\r\n  (define-fun getLength-Arr-Bool-1 ((x!0 (Array Int Bool))) Int (ite (= x!0 ((as const (Array Int Bool)) true)) 9 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: boolean[]",
            "i1 := @parameter1: int",
            "$i0 = lengthof r0",
            "if $i0 <= 8 goto $i2 = lengthof r0",
            "$r8 = new java.lang.IllegalArgumentException",
            "$r9 = new java.lang.StringBuilder",
            "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"src.length>8: src.length=\")",
            "$i12 = lengthof r0",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i12)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r12)",
            "throw $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ArrayUtils__add__-1248627063\\309.smt2",
        "z3": {
            "memory": 32727040,
            "run_time": 0.10053181648254395,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3723:\r\n  ;;   var3723!val!2 var3723!val!0 var3723!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3723!val!2 () var3723)\r\n  (declare-fun var3723!val!0 () var3723)\r\n  (declare-fun var3723!val!1 () var3723)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3723))\r\n          (or (= x var3723!val!2) (= x var3723!val!0) (= x var3723!val!1)))\r\n  ;; -----------\r\n  (define-fun var1548 () Int\r\n    (- 2))\r\n  (define-fun var2525 () String\r\n    (str.++ var1856!1 \"Index: \" (str.from_int var1548) \", Length: \"))\r\n  (define-fun var3544 () String\r\n    (str.++ var1856!1 \"Index: \"))\r\n  (define-fun var2525!1 () String\r\n    \"Index: , Length: \")\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1496 () String\r\n    (str.++ var1856!1 \"Index: \" (str.from_int var1548)))\r\n  (define-fun var3272 () var3723\r\n    var3723!val!0)\r\n  (define-fun var1072 () String\r\n    (str.++ var1856!1\r\n        \"Index: \"\r\n        (str.from_int var1548)\r\n        \", Length: \"\r\n        (str.from_int (var413_getLength/133105635 var3272))))\r\n  (define-fun var3588 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun null-var3723 () var3723\r\n    var3723!val!1)\r\n  (define-fun var2789 () String\r\n    (str.++ var1856!1\r\n        \"Index: \"\r\n        (str.from_int var1548)\r\n        \", Length: \"\r\n        (str.from_int (var413_getLength/133105635 var3272))))\r\n  (define-fun var1856 () String\r\n    String-init)\r\n  (define-fun null-Int () Int\r\n    (- 1))\r\n  (define-fun var2432 () var2574\r\n    var2574-init)\r\n  (define-fun var3544!1 () String\r\n    \"Index: \")\r\n  (define-fun var3509 () var3723\r\n    var3723!val!2)\r\n  (define-fun var3991 () Int\r\n    (var413_getLength/133105635 var3272))\r\n  (define-fun var1856!2 () String\r\n    \"Index: \")\r\n  (define-fun var1856!1 () String\r\n    \"\")\r\n  (define-fun var1496!1 () String\r\n    \"Index: , Length: \")\r\n  (define-fun var2789!1 () String\r\n    \"\")\r\n  (define-fun var2574-init () var2574\r\n    var2574!val!0)\r\n  (define-fun var2432!1 () var2574\r\n    var2574!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var413_getLength/133105635 ((x!0 var3723)) Int\r\n    (- 3))\r\n  (define-fun <init>/1107025377 ((x!0 var2574) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 66 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12107776,
            "run_time": 0.0950937271118164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3723 is 3\r\n; rep: (as @var3723_0 var3723)\r\n; rep: (as @var3723_1 var3723)\r\n; rep: (as @var3723_2 var3723)\r\n; cardinality of var413 is 1\r\n; rep: (as @var413_0 var413)\r\n; cardinality of var2574 is 1\r\n; rep: (as @var2574_0 var2574)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var413_getLength/133105635 ((_arg_1 var3723)) Int (- 2))\r\n(define-fun var2574-init () var2574 (as @var2574_0 var2574))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1107025377 ((BOUND_VARIABLE_1754 var2574) (BOUND_VARIABLE_1755 String)) void (as @void_0 void))\r\n(define-fun null-var3723 () var3723 (as @var3723_0 var3723))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var3272 () var3723 (as @var3723_1 var3723))\r\n(define-fun var1548 () Int (- 1))\r\n(define-fun var3509 () var3723 (as @var3723_2 var3723))\r\n(define-fun var3588 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var1856!1 () String \"\")\r\n(define-fun var1856!2 () String \"Index: \")\r\n(define-fun var3544!1 () String \"Index: \")\r\n(define-fun var1496!1 () String \"Index: , Length: \")\r\n(define-fun var2525!1 () String \"Index: , Length: \")\r\n(define-fun var2432!1 () var2574 (as @var2574_0 var2574))\r\n(define-fun var2789!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38068224,
            "run_time": 0.2138969898223877,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 65 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 66 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182407168,
            "run_time": 3.3739013671875,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2525!1 () String \"Index: , Length: \")\r\n  (define-fun var1496!1 () String \"Index: , Length: \")\r\n  (define-fun var3544!1 () String \"Index: \")\r\n  (define-fun var1856!2 () String \"Index: \")\r\n  (define-fun var1856!1 () String \"\")\r\n  (define-fun var3588 () ClassObject ClassObject!10)\r\n  (define-fun var3509 () var3723 var3723!8)\r\n  (define-fun var1548 () Int (- 6))\r\n  (define-fun var3272 () var3723 var3723!6)\r\n  (define-fun null-ClassObject () ClassObject ClassObject!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3723 () var3723 var3723!2)\r\n  (define-fun var413_getLength/133105635 ((x!0 var3723)) Int (ite (= x!0 var3723!6) (- 7) 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "i0 := @parameter1: int",
            "r10 := @parameter2: java.lang.Object",
            "r8 := @parameter3: java.lang.Class",
            "if r0 != null goto i4 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0)",
            "i4 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0)",
            "if i0 > i4 goto $r1 = new java.lang.IndexOutOfBoundsException",
            "$r1 = new java.lang.IndexOutOfBoundsException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Index: \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", Length: \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.math.Fraction__getFraction__389135042\\2591.smt2",
        "z3": {
            "memory": 32821248,
            "run_time": 0.12155556678771973,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3567 () Float64\r\n    (Float64_parseDouble/1471110886 var2852!1))\r\n  (define-fun var353 () Int\r\n    (str.indexof var2852!1 (str.from_code 46) 0))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3171 () var3372\r\n    (var3372_getFraction/-1425131730 (Float64_parseDouble/1471110886 var2852!1)))\r\n  (define-fun var2852!1 () String\r\n    \".\")\r\n  (define-fun var2852 () String\r\n    \"C\")\r\n  (define-fun var1081 () String\r\n    \"\")\r\n  (define-fun Float64_parseDouble/1471110886 ((x!0 String)) Float64\r\n    (_ NaN 11 53))\r\n  (define-fun var3270_requireNonNull/1378936425 ((x!0 var2819) (x!1 String)) var2819\r\n    var2819!val!0)\r\n  (define-fun var3372_getFraction/-1425131730 ((x!0 Float64)) var3372\r\n    var3372!val!0)\r\n  (define-fun cast-from-String-to-var2819 ((x!0 String)) var2819\r\n    var2819!val!0)\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9912320,
            "run_time": 0.04614591598510742,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1471 is 1\r\n; rep: (as @var1471_0 var1471)\r\n; cardinality of var3270 is 1\r\n; rep: (as @var3270_0 var3270)\r\n; cardinality of var2819 is 1\r\n; rep: (as @var2819_0 var2819)\r\n; cardinality of var3372 is 1\r\n; rep: (as @var3372_0 var3372)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3270_requireNonNull/1378936425 ((BOUND_VARIABLE_855 var2819) (BOUND_VARIABLE_856 String)) var2819 (as @var2819_0 var2819))\r\n(define-fun cast-from-String-to-var2819 ((BOUND_VARIABLE_859 String)) var2819 (as @var2819_0 var2819))\r\n(define-fun Float64_parseDouble/1471110886 ((BOUND_VARIABLE_862 String)) (_ FloatingPoint 11 53) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun var3372_getFraction/-1425131730 ((BOUND_VARIABLE_866 (_ FloatingPoint 11 53))) var3372 (as @var3372_0 var3372))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2852 () String \"\")\r\n(define-fun var2852!1 () String \".\")\r\n(define-fun var1081 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38797312,
            "run_time": 0.13835525512695312,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2852!1 () String\n    \"\\u{0}.\")\n  (define-fun var353 () Int\n    (str.indexof var2852!1 (str.from_code 46) 0))\n  (define-fun var3171 () var3372\n    (var3372_getFraction/-1425131730 (Float64_parseDouble/1471110886 var2852!1)))\n  (define-fun null-String () String\n    \"\")\n  (define-fun var3567 () Float64\n    (Float64_parseDouble/1471110886 var2852!1))\n  (define-fun var2852 () String\n    \"\\u{0}\")\n  (define-fun var1081 () String\n    \"\")\n  (define-fun Float64_parseDouble/1471110886 ((x!0 String)) Float64\n    (_ NaN 11 53))\n  (define-fun var3270_requireNonNull/1378936425 ((x!0 var2819) (x!1 String)) var2819\n    var2819!val!0)\n  (define-fun var3372_getFraction/-1425131730 ((x!0 Float64)) var3372\n    var3372!val!0)\n  (define-fun cast-from-String-to-var2819 ((x!0 String)) var2819\n    var2819!val!0)\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 125599744,
            "run_time": 1.4555342197418213,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.math.Fraction__getFraction__389135042\\2591.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n940ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: int indexOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int)>": 1
        },
        "jimple_statements": [
            "r10 := @parameter0: java.lang.String",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r10, \"str\")",
            "i5 = virtualinvoke r10.<java.lang.String: int indexOf(int)>(46)",
            "if i5 < 0 goto i6 = virtualinvoke r10.<java.lang.String: int indexOf(int)>(32)",
            "$d0 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(r10)",
            "$r9 = staticinvoke <org.apache.commons.lang3.math.Fraction: org.apache.commons.lang3.math.Fraction getFraction(double)>($d0)",
            "return $r9"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ClassPathUtils__packageToPath__-652765388\\0.smt2",
        "z3": {
            "memory": 32747520,
            "run_time": 0.5144031047821045,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3556 () String\r\n    (str.replace_all (cast-from-var3805-to-String\r\n                   (var3944_requireNonNull/1378936425\r\n                     (cast-from-String-to-var3805 var800)\r\n                     \"path\"))\r\n                 (str.from_code 46)\r\n                 (str.from_code 47)))\r\n  (define-fun var1488 () String\r\n    (cast-from-var3805-to-String\r\n  (var3944_requireNonNull/1378936425\r\n    (cast-from-String-to-var3805 var800)\r\n    \"path\")))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var800 () String\r\n    \"A\")\r\n  (define-fun var1091 () var3805\r\n    (var3944_requireNonNull/1378936425 (cast-from-String-to-var3805 var800) \"path\"))\r\n  (define-fun cast-from-String-to-var3805 ((x!0 String)) var3805\r\n    var3805!val!0)\r\n  (define-fun var3944_requireNonNull/1378936425 ((x!0 var3805) (x!1 String)) var3805\r\n    var3805!val!0)\r\n  (define-fun cast-from-var3805-to-String ((x!0 var3805)) String\r\n    \"\")\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9568256,
            "run_time": 0.18652987480163574,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var514 is 1\r\n; rep: (as @var514_0 var514)\r\n; cardinality of var3805 is 1\r\n; rep: (as @var3805_0 var3805)\r\n; cardinality of var3944 is 1\r\n; rep: (as @var3944_0 var3944)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3944_requireNonNull/1378936425 ((BOUND_VARIABLE_532 var3805) (BOUND_VARIABLE_533 String)) var3805 (as @var3805_0 var3805))\r\n(define-fun cast-from-String-to-var3805 ((BOUND_VARIABLE_536 String)) var3805 (as @var3805_0 var3805))\r\n(define-fun cast-from-var3805-to-String ((BOUND_VARIABLE_539 var3805)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun var800 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37777408,
            "run_time": 0.23204350471496582,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1488 () String\n    (cast-from-var3805-to-String\n  (var3944_requireNonNull/1378936425\n    (cast-from-String-to-var3805 var800)\n    \"path\")))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3556 () String\n    (str.replace_all (cast-from-var3805-to-String\n                   (var3944_requireNonNull/1378936425\n                     (cast-from-String-to-var3805 var800)\n                     \"path\"))\n                 (str.from_code 46)\n                 (str.from_code 47)))\n  (define-fun var1091 () var3805\n    (var3944_requireNonNull/1378936425 (cast-from-String-to-var3805 var800) \"path\"))\n  (define-fun var800 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun cast-from-String-to-var3805 ((x!0 String)) var3805\n    var3805!val!0)\n  (define-fun var3944_requireNonNull/1378936425 ((x!0 var3805) (x!1 String)) var3805\n    var3805!val!0)\n  (define-fun cast-from-var3805-to-String ((x!0 var3805)) String\n    \"\")\n)\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140423168,
            "run_time": 1.809997797012329,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var800 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: java.lang.String replace(char,char)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String replace(char,char)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$r1 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"path\")",
            "$r2 = (java.lang.String) $r1",
            "$r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>(46, 47)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringBuilder__toString__-493854161\\2366.smt2",
        "z3": {
            "memory": 32636928,
            "run_time": 0.2935750484466553,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3068:\r\n  ;;   var3068!val!1 var3068!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3068!val!1 () var3068)\r\n  (declare-fun var3068!val!0 () var3068)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3068)) (or (= x var3068!val!1) (= x var3068!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3141:\r\n  ;;   var3141!val!1 var3141!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3141!val!1 () var3141)\r\n  (declare-fun var3141!val!0 () var3141)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3141)) (or (= x var3141!val!1) (= x var3141!val!0)))\r\n  ;; -----------\r\n  (define-fun var240 () var3141\r\n    (getObject/2026953628 var1396))\r\n  (define-fun null-var3068 () var3068\r\n    var3068!val!1)\r\n  (define-fun var3751 () String\r\n    (getStringBuffer/608998264 var1396))\r\n  (define-fun var2450 () String\r\n    (getStringBuffer/608998264 var1396))\r\n  (define-fun var1416 () String\r\n    (getStringBuffer/608998264 var1396))\r\n  (define-fun var2858 () var3141\r\n    (getObject/2026953628 var1396))\r\n  (define-fun var1396 () var3068\r\n    var3068!val!0)\r\n  (define-fun null-var3141 () var3141\r\n    var3141!val!1)\r\n  (define-fun var3189 () var265\r\n    (style/761308887 var1396))\r\n  (define-fun var2450!1 () String\r\n    \"\")\r\n  (define-fun var2858!1 () var3141\r\n    var3141!val!1)\r\n  (define-fun var3189!1 () var265\r\n    var265!val!0)\r\n  (define-fun getObject/2026953628 ((x!0 var3068)) var3141\r\n    var3141!val!0)\r\n  (define-fun appendEnd/-712887925 ((x!0 var265) (x!1 String) (x!2 var3141)) void\r\n    void!val!0)\r\n  (define-fun style/761308887 ((x!0 var3068)) var265\r\n    var265!val!0)\r\n  (define-fun getStringBuffer/608998264 ((x!0 var3068)) String\r\n    \"\")\r\n)\r\n(error \"line 42 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7884800,
            "run_time": 0.10041594505310059,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3068 is 2\r\n; rep: (as @var3068_0 var3068)\r\n; rep: (as @var3068_1 var3068)\r\n; cardinality of var3141 is 2\r\n; rep: (as @var3141_0 var3141)\r\n; rep: (as @var3141_1 var3141)\r\n; cardinality of var265 is 1\r\n; rep: (as @var265_0 var265)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getObject/2026953628 ((_arg_1 var3068)) var3141 (as @var3141_1 var3141))\r\n(define-fun style/761308887 ((BOUND_VARIABLE_472 var3068)) var265 (as @var265_0 var265))\r\n(define-fun getStringBuffer/608998264 ((BOUND_VARIABLE_475 var3068)) String \"\")\r\n(define-fun appendEnd/-712887925 ((BOUND_VARIABLE_478 var265) (BOUND_VARIABLE_479 String) (BOUND_VARIABLE_480 var3141)) void (as @void_0 void))\r\n(define-fun null-var3068 () var3068 (as @var3068_0 var3068))\r\n(define-fun null-var3141 () var3141 (as @var3141_0 var3141))\r\n(define-fun var1396 () var3068 (as @var3068_1 var3068))\r\n(define-fun var3189!1 () var265 (as @var265_0 var265))\r\n(define-fun var2450!1 () String \"\")\r\n(define-fun var2858!1 () var3141 (as @var3141_0 var3141))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37195776,
            "run_time": 0.11625003814697266,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3068:\n  ;;   var3068!val!1 var3068!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3068!val!1 () var3068)\n  (declare-fun var3068!val!0 () var3068)\n  ;; cardinality constraint:\n  (forall ((x var3068)) (or (= x var3068!val!1) (= x var3068!val!0)))\n  ;; -----------\n  ;; universe for var3141:\n  ;;   var3141!val!1 var3141!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3141!val!1 () var3141)\n  (declare-fun var3141!val!0 () var3141)\n  ;; cardinality constraint:\n  (forall ((x var3141)) (or (= x var3141!val!1) (= x var3141!val!0)))\n  ;; -----------\n  (define-fun var3751 () String\n    (getStringBuffer/608998264 var1396))\n  (define-fun null-var3068 () var3068\n    var3068!val!1)\n  (define-fun var3189 () var265\n    (style/761308887 var1396))\n  (define-fun var2450 () String\n    (getStringBuffer/608998264 var1396))\n  (define-fun var240 () var3141\n    (getObject/2026953628 var1396))\n  (define-fun var1416 () String\n    (getStringBuffer/608998264 var1396))\n  (define-fun var1396 () var3068\n    var3068!val!0)\n  (define-fun null-var3141 () var3141\n    var3141!val!1)\n  (define-fun var2858 () var3141\n    (getObject/2026953628 var1396))\n  (define-fun var2450!1 () String\n    \"\")\n  (define-fun var2858!1 () var3141\n    var3141!val!1)\n  (define-fun var3189!1 () var265\n    var265!val!0)\n  (define-fun getObject/2026953628 ((x!0 var3068)) var3141\n    var3141!val!0)\n  (define-fun appendEnd/-712887925 ((x!0 var265) (x!1 String) (x!2 var3141)) void\n    void!val!0)\n  (define-fun style/761308887 ((x!0 var3068)) var265\n    var265!val!0)\n  (define-fun getStringBuffer/608998264 ((x!0 var3068)) String\n    \"\")\n)\n(error \"line 42 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164540416,
            "run_time": 1.985245943069458,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1396 () var3068 var3068!6)\r\n  (define-fun null-var3141 () var3141 var3141!4)\r\n  (define-fun null-var3068 () var3068 var3068!2)\r\n  (define-fun var3141!20 () var3141 (getObject/2026953628 var3068!6))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.builder.ToStringBuilder",
            "$r1 = virtualinvoke r0.<org.apache.commons.lang3.builder.ToStringBuilder: java.lang.Object getObject()>()",
            "if $r1 != null goto $r2 = r0.<org.apache.commons.lang3.builder.ToStringBuilder: org.apache.commons.lang3.builder.ToStringStyle style>",
            "$r2 = r0.<org.apache.commons.lang3.builder.ToStringBuilder: org.apache.commons.lang3.builder.ToStringStyle style>",
            "$r4 = virtualinvoke r0.<org.apache.commons.lang3.builder.ToStringBuilder: java.lang.StringBuffer getStringBuffer()>()",
            "$r3 = virtualinvoke r0.<org.apache.commons.lang3.builder.ToStringBuilder: java.lang.Object getObject()>()",
            "virtualinvoke $r2.<org.apache.commons.lang3.builder.ToStringStyle: void appendEnd(java.lang.StringBuffer,java.lang.Object)>($r4, $r3)",
            "$r5 = virtualinvoke r0.<org.apache.commons.lang3.builder.ToStringBuilder: java.lang.StringBuffer getStringBuffer()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.String toString()>()",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.AnnotationUtils__hashMember__1121480159\\126.smt2",
        "z3": {
            "memory": 32350208,
            "run_time": 0.2815253734588623,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1109:\r\n  ;;   var1109!val!1 var1109!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1109!val!1 () var1109)\r\n  (declare-fun var1109!val!0 () var1109)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1109)) (or (= x var1109!val!1) (= x var1109!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var1109 () var1109\r\n    var1109!val!1)\r\n  (define-fun var2858 () Bool\r\n    (var1219_isArray/-2045800536 var2013))\r\n  (define-fun var1122 () ClassObject\r\n    (getClass/1258963082 var2013))\r\n  (define-fun var2013 () var1109\r\n    var1109!val!0)\r\n  (define-fun var891 () Int\r\n    (hashCode/-467973558 var974))\r\n  (define-fun var1778 () Int\r\n    (var2804_arrayMemberHash/-460030553\r\n  (getComponentType/1960034130 (getClass/1258963082 var2013))\r\n  var2013))\r\n  (define-fun var1617 () ClassObject\r\n    (getComponentType/1960034130 (getClass/1258963082 var2013)))\r\n  (define-fun var805 () Int\r\n    (* (hashCode/-467973558 var974) 127))\r\n  (define-fun var974 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2078 () Int\r\n    (let ((a!1 ((_ int2bv 64)\r\n             (var2804_arrayMemberHash/-460030553\r\n               (getComponentType/1960034130 (getClass/1258963082 var2013))\r\n               var2013))))\r\n(let ((a!2 (bvxor ((_ int2bv 64) (* (hashCode/-467973558 var974) 127)) a!1)))\r\n  (bv2int a!2))))\r\n  (define-fun var1219_isArray/-2045800536 ((x!0 var1109)) Bool\r\n    true)\r\n  (define-fun getClass/1258963082 ((x!0 var1109)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun getComponentType/1960034130 ((x!0 ClassObject)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var2804_arrayMemberHash/-460030553 ((x!0 ClassObject) (x!1 var1109)) Int\r\n    0)\r\n  (define-fun hashCode/-467973558 ((x!0 String)) Int\r\n    0)\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7884800,
            "run_time": 0.12529301643371582,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var739 is 1\r\n; rep: (as @var739_0 var739)\r\n; cardinality of var1109 is 2\r\n; rep: (as @var1109_0 var1109)\r\n; rep: (as @var1109_1 var1109)\r\n; cardinality of var1219 is 1\r\n; rep: (as @var1219_0 var1219)\r\n; cardinality of var2804 is 1\r\n; rep: (as @var2804_0 var2804)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun hashCode/-467973558 ((BOUND_VARIABLE_585 String)) Int 0)\r\n(define-fun var1219_isArray/-2045800536 ((_arg_1 var1109)) Bool true)\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_588 var1109)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getComponentType/1960034130 ((BOUND_VARIABLE_591 ClassObject)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var2804_arrayMemberHash/-460030553 ((BOUND_VARIABLE_594 ClassObject) (BOUND_VARIABLE_595 var1109)) Int 0)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1109 () var1109 (as @var1109_0 var1109))\r\n(define-fun var974 () String \"\")\r\n(define-fun var2013 () var1109 (as @var1109_1 var1109))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38039552,
            "run_time": 0.15464448928833008,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1109:\n  ;;   var1109!val!1 var1109!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1109!val!1 () var1109)\n  (declare-fun var1109!val!0 () var1109)\n  ;; cardinality constraint:\n  (forall ((x var1109)) (or (= x var1109!val!1) (= x var1109!val!0)))\n  ;; -----------\n  (define-fun var1778 () Int\n    (var2804_arrayMemberHash/-460030553\n  (getComponentType/1960034130 (getClass/1258963082 var2013))\n  var2013))\n  (define-fun var2078 () Int\n    (let ((a!1 ((_ int2bv 64)\n             (var2804_arrayMemberHash/-460030553\n               (getComponentType/1960034130 (getClass/1258963082 var2013))\n               var2013))))\n(let ((a!2 (bvxor ((_ int2bv 64) (* (hashCode/-467973558 var974) 127)) a!1)))\n  (bv2int a!2))))\n  (define-fun var1122 () ClassObject\n    (getClass/1258963082 var2013))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-var1109 () var1109\n    var1109!val!1)\n  (define-fun var805 () Int\n    (* (hashCode/-467973558 var974) 127))\n  (define-fun var1617 () ClassObject\n    (getComponentType/1960034130 (getClass/1258963082 var2013)))\n  (define-fun var2013 () var1109\n    var1109!val!0)\n  (define-fun var974 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2858 () Bool\n    (var1219_isArray/-2045800536 var2013))\n  (define-fun var891 () Int\n    (hashCode/-467973558 var974))\n  (define-fun var1219_isArray/-2045800536 ((x!0 var1109)) Bool\n    true)\n  (define-fun getClass/1258963082 ((x!0 var1109)) ClassObject\n    ClassObject!val!0)\n  (define-fun getComponentType/1960034130 ((x!0 ClassObject)) ClassObject\n    ClassObject!val!0)\n  (define-fun var2804_arrayMemberHash/-460030553 ((x!0 ClassObject) (x!1 var1109)) Int\n    0)\n  (define-fun hashCode/-467973558 ((x!0 String)) Int\n    0)\n)\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151781376,
            "run_time": 2.19160795211792,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2013 () var1109 var1109!4)\r\n  (define-fun var974 () String \"\\u{0}\")\r\n  (define-fun null-var1109 () var1109 var1109!2)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var1219_isArray/-2045800536 ((x!0 var1109)) Bool (ite (= x!0 var1109!4) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: int hashCode()>"
        ],
        "api_count": {
            "<java.lang.String: int hashCode()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.Object",
            "$i0 = virtualinvoke r0.<java.lang.String: int hashCode()>()",
            "i1 = $i0 * 127",
            "$z0 = staticinvoke <org.apache.commons.lang3.ObjectUtils: boolean isArray(java.lang.Object)>(r1)",
            "if $z0 == 0 goto $z1 = r1 instanceof java.lang.annotation.Annotation",
            "$r3 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()",
            "$r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Class getComponentType()>()",
            "$i6 = staticinvoke <org.apache.commons.lang3.AnnotationUtils: int arrayMemberHash(java.lang.Class,java.lang.Object)>($r4, r1)",
            "$i7 = i1 ^ $i6",
            "return $i7"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.math.NumberUtils__withDecimalsParsing__-2081306874\\4103.smt2",
        "z3": {
            "memory": 32755712,
            "run_time": 0.26064252853393555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2483 () String\r\n    \"A\")\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var1417 () Int\r\n    1)\r\n  (define-fun var3140 () Int\r\n    0)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var168 () Int\r\n    var1417)\r\n  (define-fun var1306 () Int\r\n    (str.len var2483))\r\n)\r\n(error \"line 25 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7942144,
            "run_time": 0.0769495964050293,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1976 is 1\r\n; rep: (as @var1976_0 var1976)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2483 () String \"\")\r\n(define-fun var1417 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38010880,
            "run_time": 0.13914728164672852,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3140 () Int\n    0)\n  (define-fun var2483 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1417 () Int\n    2)\n  (define-fun var1306 () Int\n    (str.len var2483))\n  (define-fun var168 () Int\n    var1417)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-Int () Int\n    3)\n)\n(error \"line 25 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 159399936,
            "run_time": 2.252699851989746,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1417 () Int 0)\r\n  (define-fun var2483 () String \"\")\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i4 = 0",
            "i5 = i0",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i5 >= $i1 goto return 1",
            "return 1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__-1856620877\\2157.smt2",
        "z3": {
            "memory": 33312768,
            "run_time": 0.1613771915435791,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3011:\r\n  ;;   var3011!val!0 var3011!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3011!val!0 () var3011)\r\n  (declare-fun var3011!val!1 () var3011)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3011)) (or (= x var3011!val!0) (= x var3011!val!1)))\r\n  ;; -----------\r\n  (define-fun var566 () Int\r\n    0)\r\n  (define-fun var3134 () Int\r\n    (getLength-Arr-Float32-1 var3816))\r\n  (define-fun var2890 () String\r\n    \"\")\r\n  (define-fun var3900 () String\r\n    (arrayEnd/-417041427 var1253))\r\n  (define-fun var1253 () var3011\r\n    var3011!val!0)\r\n  (define-fun var2890!2 () String\r\n    \"\")\r\n  (define-fun null-__Array__Int__Float32__ () (Array Int Float32)\r\n    ((as const (Array Int Float32)) (fp #b1 #x80 #b00000000000000000000100)))\r\n  (define-fun var1166 () String\r\n    \"\")\r\n  (define-fun var3816 () (Array Int Float32)\r\n    ((as const (Array Int Float32)) (fp #b0 #x00 #b00000000000000000000001)))\r\n  (define-fun null-var3011 () var3011\r\n    var3011!val!1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2890!1 () String\r\n    \"\")\r\n  (define-fun var2533 () String\r\n    (arrayStart/-417041427 var1253))\r\n  (define-fun getLength-Arr-Float32-1 ((x!0 (Array Int Float32))) Int\r\n    0)\r\n  (define-fun arrayEnd/-417041427 ((x!0 var3011)) String\r\n    \"\")\r\n  (define-fun arrayStart/-417041427 ((x!0 var3011)) String\r\n    \"\")\r\n)\r\n(error \"line 42 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14831616,
            "run_time": 0.29636430740356445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3011 is 2\r\n; rep: (as @var3011_0 var3011)\r\n; rep: (as @var3011_1 var3011)\r\n; cardinality of var13 is 1\r\n; rep: (as @var13_0 var13)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arrayStart/-417041427 ((BOUND_VARIABLE_4593 var3011)) String \"\")\r\n(define-fun getLength-Arr-Float32-1 ((_arg_1 (Array Int (_ FloatingPoint 8 24)))) Int 0)\r\n(define-fun arrayEnd/-417041427 ((BOUND_VARIABLE_4596 var3011)) String \"\")\r\n(define-fun null-var3011 () var3011 (as @var3011_0 var3011))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__Float32__ () (Array Int (_ FloatingPoint 8 24)) (store ((as const (Array Int (_ FloatingPoint 8 24))) (fp #b1 #b00000000 #b00000000000000000000000)) 0 (fp #b1 #b11111111 #b00000000000000000000000)))\r\n(define-fun var1253 () var3011 (as @var3011_1 var3011))\r\n(define-fun var2890 () String \"\")\r\n(define-fun var1166 () String \"\")\r\n(define-fun var3816 () (Array Int (_ FloatingPoint 8 24)) (store ((as const (Array Int (_ FloatingPoint 8 24))) (fp #b0 #b00000000 #b00000000000000000000000)) 0 (fp #b0 #b11111111 #b00000000000000000000000)))\r\n(define-fun var2890!1 () String \"\")\r\n(define-fun var2890!2 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39866368,
            "run_time": 0.2461397647857666,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 41 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 42 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 125726720,
            "run_time": 1.8457095623016357,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__-1856620877\\2157.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n1230ms\r\nSort Float32 not declared\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r5 := @parameter1: java.lang.String",
            "r3 := @parameter2: float[]",
            "$r2 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayStart>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "i1 = 0",
            "$i0 = lengthof r3",
            "if i1 >= $i0 goto $r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "$r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__-905737731\\1921.smt2",
        "z3": {
            "memory": 32747520,
            "run_time": 0.3641340732574463,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var681:\r\n  ;;   var681!val!1 var681!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var681!val!1 () var681)\r\n  (declare-fun var681!val!0 () var681)\r\n  ;; cardinality constraint:\r\n  (forall ((x var681)) (or (= x var681!val!1) (= x var681!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var681 () var681\r\n    var681!val!1)\r\n  (define-fun var2976 () Int\r\n    1)\r\n  (define-fun var2692 () String\r\n    \"!0!\")\r\n  (define-fun var2005 () String\r\n    \"!2!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var3005 () var681\r\n    var681!val!0)\r\n  (define-fun var2332 () Int\r\n    var2976)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var2332!1 () Int\r\n    0)\r\n  (define-fun var2692!1 () String\r\n    \"\")\r\n  (define-fun append/1845021834 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7966720,
            "run_time": 0.1426379680633545,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var681 is 2\r\n; rep: (as @var681_0 var681)\r\n; rep: (as @var681_1 var681)\r\n; cardinality of var3035 is 1\r\n; rep: (as @var3035_0 var3035)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun append/1845021834 ((BOUND_VARIABLE_566 String) (BOUND_VARIABLE_567 Int)) String \"\")\r\n(define-fun null-var681 () var681 (as @var681_0 var681))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3005 () var681 (as @var681_1 var681))\r\n(define-fun var2692 () String \"\")\r\n(define-fun var2005 () String \"\")\r\n(define-fun var2976 () Int 0)\r\n(define-fun var2692!1 () String \"\")\r\n(define-fun var2332!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38506496,
            "run_time": 0.4642784595489502,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var681:\n  ;;   var681!val!1 var681!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var681!val!1 () var681)\n  (declare-fun var681!val!0 () var681)\n  ;; cardinality constraint:\n  (forall ((x var681)) (or (= x var681!val!1) (= x var681!val!0)))\n  ;; -----------\n  (define-fun null-Int () Int\n    0)\n  (define-fun var2692 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var2005 () String\n    \"\\u{0}\")\n  (define-fun var3005 () var681\n    var681!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2332 () Int\n    var2976)\n  (define-fun null-var681 () var681\n    var681!val!1)\n  (define-fun var2976 () Int\n    1)\n  (define-fun var2332!1 () Int\n    0)\n  (define-fun var2692!1 () String\n    \"\")\n  (define-fun append/1845021834 ((x!0 String) (x!1 Int)) String\n    \"\")\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141393920,
            "run_time": 2.234626531600952,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2976 () Int 1)\r\n  (define-fun var2005 () String \"\\u{0}\")\r\n  (define-fun var2692 () String \"\\u{0}\")\r\n  (define-fun var3005 () var681 var681!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var681 () var681 var681!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(int)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r2 := @parameter1: java.lang.String",
            "b0 := @parameter2: byte",
            "$i1 = (int) b0",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharSetUtils__modify__-1330853192\\94.smt2",
        "z3": {
            "memory": 32792576,
            "run_time": 0.2454514503479004,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3789 () (Array Int String)\r\n    ((as const (Array Int String)) \"A\"))\r\n  (define-fun null-__Array__Int__String__ () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun var1690 () Int\r\n    (str.len var67))\r\n  (define-fun var2733 () (Array Int Int)\r\n    (toCharArray/415275702 var67))\r\n  (define-fun var587 () String\r\n    var2645!1)\r\n  (define-fun var2211 () Bool\r\n    true)\r\n  (define-fun var67 () String\r\n    \"A\")\r\n  (define-fun var2157 () var3063\r\n    (var3063_getInstance/-1802634007 var3789))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1035 () Int\r\n    (getLength-Arr-Int-1 (toCharArray/415275702 var67)))\r\n  (define-fun var2104 () Int\r\n    0)\r\n  (define-fun var2645 () String\r\n    String-init)\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var2645!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1690!1 () Int\r\n    0)\r\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\r\n    ((as const (Array Int Int)) (- 1)))\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\r\n    0)\r\n  (define-fun var3063_getInstance/-1802634007 ((x!0 (Array Int String))) var3063\r\n    var3063!val!0)\r\n  (define-fun <init>/543593434 ((x!0 String) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 46 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9445376,
            "run_time": 0.04466128349304199,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3970 is 1\r\n; rep: (as @var3970_0 var3970)\r\n; cardinality of var3063 is 1\r\n; rep: (as @var3063_0 var3063)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3063_getInstance/-1802634007 ((BOUND_VARIABLE_671 (Array Int String))) var3063 (as @var3063_0 var3063))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/543593434 ((BOUND_VARIABLE_674 String) (BOUND_VARIABLE_675 Int)) void (as @void_0 void))\r\n(define-fun toCharArray/415275702 ((_arg_1 String)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 0)\r\n(define-fun null-String () String \"B\")\r\n(define-fun null-__Array__Int__String__ () (Array Int String) ((as const (Array Int String)) \"A\"))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var67 () String \"\")\r\n(define-fun var3789 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var2211 () Bool false)\r\n(define-fun var2645!1 () String \"\")\r\n(define-fun var1690!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36773888,
            "run_time": 0.09164786338806152,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 45 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 46 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168083456,
            "run_time": 2.5168228149414062,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3789 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n  (define-fun var67 () String \"\\u{0}\")\r\n  (define-fun null-__Array__Int__String__ () (Array Int String) (store ((as const (Array Int String)) \"\") 0 \"\\u{0}\"))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var2211 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int (ite (= x!0 ((as const (Array Int Int)) 0)) 0 0))\r\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int) (ite (= x!0 \"\\u{0}\") ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.String: char[] toCharArray()>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.String: char[] toCharArray()>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.lang.String[]",
            "z0 := @parameter2: boolean",
            "r1 = staticinvoke <org.apache.commons.lang3.CharSet: org.apache.commons.lang3.CharSet getInstance(java.lang.String[])>(r0)",
            "$r2 = new java.lang.StringBuilder",
            "$i0 = virtualinvoke r3.<java.lang.String: int length()>()",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i0)",
            "r4 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>()",
            "i1 = lengthof r4",
            "i3 = 0",
            "if i3 >= i1 goto $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__reflectionAppendArrayDetail__1055904648\\3398.smt2",
        "z3": {
            "memory": 32776192,
            "run_time": 0.19796347618103027,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3265:\r\n  ;;   var3265!val!1 var3265!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3265!val!1 () var3265)\r\n  (declare-fun var3265!val!0 () var3265)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3265)) (or (= x var3265!val!1) (= x var3265!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2700:\r\n  ;;   var2700!val!1 var2700!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2700!val!1 () var2700)\r\n  (declare-fun var2700!val!0 () var2700)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2700)) (or (= x var2700!val!1) (= x var2700!val!0)))\r\n  ;; -----------\r\n  (define-fun var2588 () String\r\n    \"\")\r\n  (define-fun var637 () String\r\n    \"\")\r\n  (define-fun var2629 () String\r\n    (arrayStart/-417041427 var1799))\r\n  (define-fun var902 () Int\r\n    0)\r\n  (define-fun null-var3265 () var3265\r\n    var3265!val!1)\r\n  (define-fun var610 () Int\r\n    (var2449_getLength/133105635 var1211))\r\n  (define-fun var1799 () var3265\r\n    var3265!val!0)\r\n  (define-fun null-var2700 () var2700\r\n    var2700!val!1)\r\n  (define-fun var1211 () var2700\r\n    var2700!val!0)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2588!1 () String\r\n    \"\")\r\n  (define-fun var2588!2 () String\r\n    \"\")\r\n  (define-fun var3875 () String\r\n    (arrayEnd/-417041427 var1799))\r\n  (define-fun var2449_getLength/133105635 ((x!0 var2700)) Int\r\n    0)\r\n  (define-fun arrayEnd/-417041427 ((x!0 var3265)) String\r\n    \"\")\r\n  (define-fun arrayStart/-417041427 ((x!0 var3265)) String\r\n    \"\")\r\n)\r\n(error \"line 44 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13291520,
            "run_time": 0.0462193489074707,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3265 is 2\r\n; rep: (as @var3265_0 var3265)\r\n; rep: (as @var3265_1 var3265)\r\n; cardinality of var1650 is 1\r\n; rep: (as @var1650_0 var1650)\r\n; cardinality of var2700 is 2\r\n; rep: (as @var2700_0 var2700)\r\n; rep: (as @var2700_1 var2700)\r\n; cardinality of var2449 is 1\r\n; rep: (as @var2449_0 var2449)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arrayStart/-417041427 ((BOUND_VARIABLE_787 var3265)) String \"\")\r\n(define-fun var2449_getLength/133105635 ((_arg_1 var2700)) Int 0)\r\n(define-fun arrayEnd/-417041427 ((BOUND_VARIABLE_790 var3265)) String \"\")\r\n(define-fun null-var3265 () var3265 (as @var3265_0 var3265))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var2700 () var2700 (as @var2700_0 var2700))\r\n(define-fun var1799 () var3265 (as @var3265_1 var3265))\r\n(define-fun var2588 () String \"\")\r\n(define-fun var637 () String \"\")\r\n(define-fun var1211 () var2700 (as @var2700_1 var2700))\r\n(define-fun var2588!1 () String \"\")\r\n(define-fun var2588!2 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39309312,
            "run_time": 0.28130626678466797,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 43 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 44 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 157806592,
            "run_time": 2.4452555179595947,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__reflectionAppendArrayDetail__1055904648\\3398.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2588!2 =\r\n     concat(var2588!1, rhs)\r\n   var2588!1 =\r\n     concat(var2588, rhs)\r\n   ... sat\r\n\r\n1912ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r5 := @parameter1: java.lang.String",
            "r3 := @parameter2: java.lang.Object",
            "$r2 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayStart>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "i0 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r3)",
            "i1 = 0",
            "if i1 >= i0 goto $r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "$r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitToBinary__-2007689494\\1389.smt2",
        "z3": {
            "memory": 32759808,
            "run_time": 0.32004475593566895,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2964 () Int\r\n    var1659)\r\n  (define-fun var2389 () String\r\n    (str.++ var677!1 \"Cannot interpret '\"))\r\n  (define-fun var2326 () String\r\n    (str.++ (append/-1166366385 (str.++ var677!1 \"Cannot interpret '\") var1659)\r\n        \"' as a hexadecimal digit\"))\r\n  (define-fun var2389!1 () String\r\n    \"Cannot interpret '\")\r\n  (define-fun var1659 () Int\r\n    2)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var812 () var883\r\n    var883-init)\r\n  (define-fun var1553 () String\r\n    (str.++ (append/-1166366385 (str.++ var677!1 \"Cannot interpret '\") var1659)\r\n        \"' as a hexadecimal digit\"))\r\n  (define-fun var677 () String\r\n    String-init)\r\n  (define-fun var3830 () String\r\n    (append/-1166366385 (str.++ var677!1 \"Cannot interpret '\") var1659))\r\n  (define-fun var677!1 () String\r\n    \"\")\r\n  (define-fun var3830!1 () String\r\n    \"' as a hexadecimal digit\")\r\n  (define-fun var677!2 () String\r\n    \"Cannot interpret '\")\r\n  (define-fun var1553!1 () String\r\n    \"\")\r\n  (define-fun var883-init () var883\r\n    var883!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var812!1 () var883\r\n    var883!val!0)\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var883) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12574720,
            "run_time": 0.32382655143737793,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var883 is 1\r\n; rep: (as @var883_0 var883)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var883-init () var883 (as @var883_0 var883))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_1157 String) (BOUND_VARIABLE_1158 Int)) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_1161 var883) (BOUND_VARIABLE_1162 String)) void (as @void_0 void))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1659 () Int 0)\r\n(define-fun var677!1 () String \"\")\r\n(define-fun var677!2 () String \"Cannot interpret '\")\r\n(define-fun var2389!1 () String \"Cannot interpret '\")\r\n(define-fun var3830!1 () String \"' as a hexadecimal digit\")\r\n(define-fun var812!1 () var883 (as @var883_0 var883))\r\n(define-fun var1553!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38232064,
            "run_time": 0.31126904487609863,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2326 () String\n    (str.++ (append/-1166366385 (str.++ var677!1 \"Cannot interpret '\") var1659)\n        \"' as a hexadecimal digit\"))\n  (define-fun var2964 () Int\n    var1659)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1553 () String\n    (str.++ (append/-1166366385 (str.++ var677!1 \"Cannot interpret '\") var1659)\n        \"' as a hexadecimal digit\"))\n  (define-fun var677 () String\n    String-init)\n  (define-fun var1659 () Int\n    2)\n  (define-fun null-Int () Int\n    3)\n  (define-fun var3830 () String\n    (append/-1166366385 (str.++ var677!1 \"Cannot interpret '\") var1659))\n  (define-fun var2389!1 () String\n    \"Cannot interpret '\")\n  (define-fun var677!2 () String\n    \"Cannot interpret '\")\n  (define-fun var812 () var883\n    var883-init)\n  (define-fun var2389 () String\n    (str.++ var677!1 \"Cannot interpret '\"))\n  (define-fun var677!1 () String\n    \"\")\n  (define-fun var3830!1 () String\n    \"' as a hexadecimal digit\")\n  (define-fun var1553!1 () String\n    \"\")\n  (define-fun var883-init () var883\n    var883!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var812!1 () var883\n    var883!val!0)\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var883) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 205459456,
            "run_time": 3.0674095153808594,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3830!1 () String \"\\u{0}27 as a hexadecimal digit\")\r\n  (define-fun var2389!1 () String \"Cannot interpret \\u{0}27\")\r\n  (define-fun var677!2 () String \"Cannot interpret \\u{0}27\")\r\n  (define-fun var677!1 () String \"\")\r\n  (define-fun var1659 () Int 58)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun abbrev_106 ((x!0 Int)) String (ite (= x!0 0) \"Cannot interpret \\u{0}27\" \"\"))\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String (ite (and (= x!0 \"Cannot interpret \\u{0}27\") (= x!1 58)) \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto $r45 = <org.apache.commons.lang3.Conversion: boolean[] FFFF>;     case 49: goto $r42 = <org.apache.commons.lang3.Conversion: boolean[] TFFF>;     case 50: goto $r39 = <org.apache.commons.lang3.Conversion: boolean[] FTFF>;     case 51: goto $r36 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 52: goto $r33 = <org.apache.commons.lang3.Conversion: boolean[] FFTF>;     case 53: goto $r30 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 54: goto $r27 = <org.apache.commons.lang3.Conversion: boolean[] FTTF>;     case 55: goto $r24 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 56: goto $r21 = <org.apache.commons.lang3.Conversion: boolean[] FFFT>;     case 57: goto $r18 = <org.apache.commons.lang3.Conversion: boolean[] TFFT>;     case 58: goto $r55 = new java.lang.IllegalArgumentException;     case 59: goto $r55 = new java.lang.IllegalArgumentException;     case 60: goto $r55 = new java.lang.IllegalArgumentException;     case 61: goto $r55 = new java.lang.IllegalArgumentException;     case 62: goto $r55 = new java.lang.IllegalArgumentException;     case 63: goto $r55 = new java.lang.IllegalArgumentException;     case 64: goto $r55 = new java.lang.IllegalArgumentException;     case 65: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 66: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 67: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 68: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 69: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 70: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     case 71: goto $r55 = new java.lang.IllegalArgumentException;     case 72: goto $r55 = new java.lang.IllegalArgumentException;     case 73: goto $r55 = new java.lang.IllegalArgumentException;     case 74: goto $r55 = new java.lang.IllegalArgumentException;     case 75: goto $r55 = new java.lang.IllegalArgumentException;     case 76: goto $r55 = new java.lang.IllegalArgumentException;     case 77: goto $r55 = new java.lang.IllegalArgumentException;     case 78: goto $r55 = new java.lang.IllegalArgumentException;     case 79: goto $r55 = new java.lang.IllegalArgumentException;     case 80: goto $r55 = new java.lang.IllegalArgumentException;     case 81: goto $r55 = new java.lang.IllegalArgumentException;     case 82: goto $r55 = new java.lang.IllegalArgumentException;     case 83: goto $r55 = new java.lang.IllegalArgumentException;     case 84: goto $r55 = new java.lang.IllegalArgumentException;     case 85: goto $r55 = new java.lang.IllegalArgumentException;     case 86: goto $r55 = new java.lang.IllegalArgumentException;     case 87: goto $r55 = new java.lang.IllegalArgumentException;     case 88: goto $r55 = new java.lang.IllegalArgumentException;     case 89: goto $r55 = new java.lang.IllegalArgumentException;     case 90: goto $r55 = new java.lang.IllegalArgumentException;     case 91: goto $r55 = new java.lang.IllegalArgumentException;     case 92: goto $r55 = new java.lang.IllegalArgumentException;     case 93: goto $r55 = new java.lang.IllegalArgumentException;     case 94: goto $r55 = new java.lang.IllegalArgumentException;     case 95: goto $r55 = new java.lang.IllegalArgumentException;     case 96: goto $r55 = new java.lang.IllegalArgumentException;     case 97: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 98: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 99: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 100: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 101: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 102: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     default: goto $r55 = new java.lang.IllegalArgumentException; }",
            "$r55 = new java.lang.IllegalArgumentException",
            "$r54 = new java.lang.StringBuilder",
            "specialinvoke $r54.<java.lang.StringBuilder: void <init>()>()",
            "$r50 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot interpret \\'\")",
            "$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0)",
            "$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' as a hexadecimal digit\")",
            "$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r55.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r53)",
            "throw $r55"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitToInt__-1826717945\\1495.smt2",
        "z3": {
            "memory": 32878592,
            "run_time": 0.3582015037536621,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3628 () String\r\n    (str.++ (append/-1166366385 (str.++ var1500!1 \"Cannot interpret '\") var1301)\r\n        \"' as a hexadecimal digit\"))\r\n  (define-fun var3254 () String\r\n    (str.++ (append/-1166366385 (str.++ var1500!1 \"Cannot interpret '\") var1301)\r\n        \"' as a hexadecimal digit\"))\r\n  (define-fun var2445 () String\r\n    (append/-1166366385 (str.++ var1500!1 \"Cannot interpret '\") var1301))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var1988!1 () String\r\n    \"Cannot interpret '\")\r\n  (define-fun var1988 () String\r\n    (str.++ var1500!1 \"Cannot interpret '\"))\r\n  (define-fun var1901 () var3933\r\n    var3933-init)\r\n  (define-fun var1500 () String\r\n    String-init)\r\n  (define-fun var1301 () Int\r\n    2)\r\n  (define-fun var3042 () Int\r\n    (var2764_digit/-929202055 var1301 16))\r\n  (define-fun var2445!1 () String\r\n    \"' as a hexadecimal digit\")\r\n  (define-fun var1500!2 () String\r\n    \"Cannot interpret '\")\r\n  (define-fun var1500!1 () String\r\n    \"\")\r\n  (define-fun var3933-init () var3933\r\n    var3933!val!0)\r\n  (define-fun var3254!1 () String\r\n    \"\")\r\n  (define-fun var1901!1 () var3933\r\n    var3933!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2764_digit/-929202055 ((x!0 Int) (x!1 Int)) Int\r\n    (- 1))\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var3933) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10297344,
            "run_time": 0.13983678817749023,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2764 is 1\r\n; rep: (as @var2764_0 var2764)\r\n; cardinality of var3933 is 1\r\n; rep: (as @var3933_0 var3933)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2764_digit/-929202055 ((_arg_1 Int) (_arg_2 Int)) Int (- 1))\r\n(define-fun var3933-init () var3933 (as @var3933_0 var3933))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_954 String) (BOUND_VARIABLE_955 Int)) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_958 var3933) (BOUND_VARIABLE_959 String)) void (as @void_0 void))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1301 () Int 0)\r\n(define-fun var1500!1 () String \"\")\r\n(define-fun var1500!2 () String \"Cannot interpret '\")\r\n(define-fun var1988!1 () String \"Cannot interpret '\")\r\n(define-fun var2445!1 () String \"' as a hexadecimal digit\")\r\n(define-fun var1901!1 () var3933 (as @var3933_0 var3933))\r\n(define-fun var3254!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37625856,
            "run_time": 0.1391289234161377,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1901 () var3933\n    var3933-init)\n  (define-fun var2445 () String\n    (append/-1166366385 (str.++ var1500!1 \"Cannot interpret '\") var1301))\n  (define-fun var1988!1 () String\n    \"Cannot interpret '\")\n  (define-fun var3042 () Int\n    (var2764_digit/-929202055 var1301 16))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1988 () String\n    (str.++ var1500!1 \"Cannot interpret '\"))\n  (define-fun var1500 () String\n    String-init)\n  (define-fun null-Int () Int\n    3)\n  (define-fun var1500!1 () String\n    \"\")\n  (define-fun var3628 () String\n    (str.++ (append/-1166366385 (str.++ var1500!1 \"Cannot interpret '\") var1301)\n        \"' as a hexadecimal digit\"))\n  (define-fun var1301 () Int\n    2)\n  (define-fun var3254 () String\n    (str.++ (append/-1166366385 (str.++ var1500!1 \"Cannot interpret '\") var1301)\n        \"' as a hexadecimal digit\"))\n  (define-fun var2445!1 () String\n    \"' as a hexadecimal digit\")\n  (define-fun var1500!2 () String\n    \"Cannot interpret '\")\n  (define-fun var3933-init () var3933\n    var3933!val!0)\n  (define-fun var3254!1 () String\n    \"\")\n  (define-fun var1901!1 () var3933\n    var3933!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2764_digit/-929202055 ((x!0 Int) (x!1 Int)) Int\n    (- 1))\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var3933) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 222310400,
            "run_time": 3.0435619354248047,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2445!1 () String \"\\u{0}27 as a hexadecimal digit\")\r\n  (define-fun var1988!1 () String \"Cannot interpret \\u{0}27\")\r\n  (define-fun var1500!2 () String \"Cannot interpret \\u{0}27\")\r\n  (define-fun var1500!1 () String \"\")\r\n  (define-fun var1301 () Int 21)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun abbrev_108 ((x!0 Int)) String (ite (= x!0 0) \"Cannot interpret \\u{0}27\" \"\"))\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String (ite (and (= x!0 \"Cannot interpret \\u{0}27\") (= x!1 21)) \"\" \"\"))\r\n  (define-fun var2764_digit/-929202055 ((x!0 Int) (x!1 Int)) Int (ite (and (= x!0 21) (= x!1 16)) (- 1) 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "c0 := @parameter0: char",
            "i1 = staticinvoke <java.lang.Character: int digit(char,int)>(c0, 16)",
            "if i1 >= 0 goto return i1",
            "$r0 = new java.lang.IllegalArgumentException",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot interpret \\'\")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' as a hexadecimal digit\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharUtils__toChar__728676319\\241.smt2",
        "z3": {
            "memory": 32808960,
            "run_time": 0.12082409858703613,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var575 () (Array Int var3004)\r\n    arr-var3004-init)\r\n  (define-fun var1498 () String\r\n    \"B\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1498!1 () String\r\n    \"A\")\r\n  (define-fun var1734 () Int\r\n    (str.to_code (str.at var1498!1 0)))\r\n  (define-fun arr-var3004-init () (Array Int var3004)\r\n    ((as const (Array Int var3004)) var3004!val!0))\r\n  (define-fun var3713 () String\r\n    \"\")\r\n  (define-fun var575!1 () (Array Int var3004)\r\n    ((as const (Array Int var3004)) var3004!val!0))\r\n  (define-fun var2858_notEmpty/1384193294 ((x!0 String)\r\n   (x!1 String)\r\n   (x!2 (Array Int var3004))) String\r\n    \"\")\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9142272,
            "run_time": 0.03064131736755371,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1125 is 1\r\n; rep: (as @var1125_0 var1125)\r\n; cardinality of var3004 is 1\r\n; rep: (as @var3004_0 var3004)\r\n; cardinality of var2858 is 1\r\n; rep: (as @var2858_0 var2858)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var3004-init () (Array Int var3004) ((as const (Array Int var3004)) (as @var3004_0 var3004)))\r\n(define-fun var2858_notEmpty/1384193294 ((BOUND_VARIABLE_559 String) (BOUND_VARIABLE_560 String) (BOUND_VARIABLE_561 (Array Int var3004))) String \"\")\r\n(define-fun null-String () String \"B\")\r\n(define-fun var1498 () String \"\")\r\n(define-fun var1498!1 () String \"A\")\r\n(define-fun var3713 () String \"\")\r\n(define-fun var575!1 () (Array Int var3004) ((as const (Array Int var3004)) (as @var3004_0 var3004)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38150144,
            "run_time": 0.2023487091064453,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1734 () Int\n    (str.to_code (str.at var1498!1 0)))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1498!1 () String\n    \"a\")\n  (define-fun var1498 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var575 () (Array Int var3004)\n    arr-var3004-init)\n  (define-fun arr-var3004-init () (Array Int var3004)\n    ((as const (Array Int var3004)) var3004!val!0))\n  (define-fun var3713 () String\n    \"\")\n  (define-fun var575!1 () (Array Int var3004)\n    ((as const (Array Int var3004)) var3004!val!0))\n  (define-fun var2858_notEmpty/1384193294 ((x!0 String)\n   (x!1 String)\n   (x!2 (Array Int var3004))) String\n    \"\")\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 162299904,
            "run_time": 2.747480630874634,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1498!1 () String \"\\u{0}\")\r\n  (define-fun var1498 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$r1 = newarray (java.lang.Object)[0]",
            "staticinvoke <org.apache.commons.lang3.Validate: java.lang.CharSequence notEmpty(java.lang.CharSequence,java.lang.String,java.lang.Object[])>(r0, \"The String must not be empty\", $r1)",
            "$c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "return $c0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__748908010\\2385.smt2",
        "z3": {
            "memory": 32808960,
            "run_time": 0.11925411224365234,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var587:\r\n  ;;   var587!val!1 var587!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var587!val!1 () var587)\r\n  (declare-fun var587!val!0 () var587)\r\n  ;; cardinality constraint:\r\n  (forall ((x var587)) (or (= x var587!val!1) (= x var587!val!0)))\r\n  ;; -----------\r\n  ;; universe for var873:\r\n  ;;   var873!val!0 var873!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var873!val!0 () var873)\r\n  (declare-fun var873!val!1 () var873)\r\n  ;; cardinality constraint:\r\n  (forall ((x var873)) (or (= x var873!val!0) (= x var873!val!1)))\r\n  ;; -----------\r\n  (define-fun var3771 () String\r\n    \"\")\r\n  (define-fun var2436 () (Array Int var587)\r\n    ((as const (Array Int var587)) var587!val!0))\r\n  (define-fun null-__Array__Int__var587__ () (Array Int var587)\r\n    ((as const (Array Int var587)) var587!val!1))\r\n  (define-fun null-var873 () var873\r\n    var873!val!1)\r\n  (define-fun var3532 () Int\r\n    (getLength-Arr-var587-1 var2436))\r\n  (define-fun var2082 () String\r\n    (arrayStart/-417041427 var1080))\r\n  (define-fun var57 () String\r\n    \"\")\r\n  (define-fun var3783 () Int\r\n    0)\r\n  (define-fun var3939 () String\r\n    (arrayEnd/-417041427 var1080))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1080 () var873\r\n    var873!val!0)\r\n  (define-fun var57!1 () String\r\n    \"\")\r\n  (define-fun var57!2 () String\r\n    \"\")\r\n  (define-fun getLength-Arr-var587-1 ((x!0 (Array Int var587))) Int\r\n    0)\r\n  (define-fun arrayEnd/-417041427 ((x!0 var873)) String\r\n    \"\")\r\n  (define-fun arrayStart/-417041427 ((x!0 var873)) String\r\n    \"\")\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11960320,
            "run_time": 0.04617762565612793,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var873 is 2\r\n; rep: (as @var873_0 var873)\r\n; rep: (as @var873_1 var873)\r\n; cardinality of var3369 is 1\r\n; rep: (as @var3369_0 var3369)\r\n; cardinality of var587 is 2\r\n; rep: (as @var587_0 var587)\r\n; rep: (as @var587_1 var587)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arrayStart/-417041427 ((BOUND_VARIABLE_806 var873)) String \"\")\r\n(define-fun getLength-Arr-var587-1 ((_arg_1 (Array Int var587))) Int 0)\r\n(define-fun arrayEnd/-417041427 ((BOUND_VARIABLE_809 var873)) String \"\")\r\n(define-fun null-var873 () var873 (as @var873_0 var873))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var587__ () (Array Int var587) (store ((as const (Array Int var587)) (as @var587_1 var587)) 0 (as @var587_0 var587)))\r\n(define-fun var1080 () var873 (as @var873_1 var873))\r\n(define-fun var57 () String \"\")\r\n(define-fun var3771 () String \"\")\r\n(define-fun var2436 () (Array Int var587) (store ((as const (Array Int var587)) (as @var587_0 var587)) 0 (as @var587_1 var587)))\r\n(define-fun var57!1 () String \"\")\r\n(define-fun var57!2 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39215104,
            "run_time": 0.29517579078674316,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 42 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173977600,
            "run_time": 2.7471446990966797,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__748908010\\2385.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var57!2 =\r\n     concat(var57!1, rhs)\r\n   var57!1 =\r\n     concat(var57, rhs)\r\n   ... sat\r\n\r\n2152ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r5 := @parameter1: java.lang.String",
            "r3 := @parameter2: java.lang.Object[]",
            "$r2 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayStart>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "i1 = 0",
            "$i0 = lengthof r3",
            "if i1 >= $i0 goto $r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "$r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle__isJsonObject__-1478469519\\1636.smt2",
        "z3": {
            "memory": 32776192,
            "run_time": 0.31980299949645996,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1459:\r\n  ;;   var1459!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1459!val!0 () var1459)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1459)) (= x var1459!val!0))\r\n  ;; -----------\r\n  ;; universe for var2923:\r\n  ;;   var2923!val!1 var2923!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2923!val!1 () var2923)\r\n  (declare-fun var2923!val!0 () var2923)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2923)) (or (= x var2923!val!1) (= x var2923!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var2923 () var2923\r\n    var2923!val!1)\r\n  (define-fun var2817 () String\r\n    \"B\")\r\n  (define-fun var3846 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2523 () String\r\n    (getContentStart/-743629750 (cast-from-var2923-to-var1459 var2929)))\r\n  (define-fun var847 () Bool\r\n    (str.prefixof (getContentStart/-743629750\r\n                (cast-from-var2923-to-var1459 var2929))\r\n              var2817))\r\n  (define-fun var2929 () var2923\r\n    var2923!val!0)\r\n  (define-fun cast-from-var2923-to-var1459 ((x!0 var2923)) var1459\r\n    var1459!val!0)\r\n  (define-fun getContentStart/-743629750 ((x!0 var1459)) String\r\n    \"A\")\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.1094965934753418,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2923 is 2\r\n; rep: (as @var2923_0 var2923)\r\n; rep: (as @var2923_1 var2923)\r\n; cardinality of var855 is 1\r\n; rep: (as @var855_0 var855)\r\n; cardinality of var1459 is 1\r\n; rep: (as @var1459_0 var1459)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getContentStart/-743629750 ((_arg_1 var1459)) String \"A\")\r\n(define-fun cast-from-var2923-to-var1459 ((_arg_1 var2923)) var1459 (as @var1459_0 var1459))\r\n(define-fun null-var2923 () var2923 (as @var2923_0 var2923))\r\n(define-fun null-String () String \"B\")\r\n(define-fun var2929 () var2923 (as @var2923_1 var2923))\r\n(define-fun var2817 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37457920,
            "run_time": 0.3109569549560547,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 29 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 178192384,
            "run_time": 2.977710247039795,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2817 () String \"\\u{0}\")\r\n  (define-fun var2929 () var2923 var2923!8)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2923 () var2923 var2923!6)\r\n  (define-fun var1459!22 () var1459 (cast-from-var2923-to-var1459 var2923!8))\r\n  (define-fun getContentStart/-743629750 ((x!0 var1459)) String (ite (= x!0 var1459!22) \"\\u{1}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
            "r0 := @parameter0: java.lang.String",
            "$r2 = virtualinvoke r1.<org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle: java.lang.String getContentStart()>()",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>($r2)",
            "if $z0 == 0 goto $z2 = 0",
            "$z2 = 0",
            "return $z2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitMsb0ToInt__696600923\\1120.smt2",
        "z3": {
            "memory": 32505856,
            "run_time": 0.2308340072631836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var659 () String\r\n    (append/-1166366385 (str.++ var2647!1 \"Cannot interpret '\") var2312))\r\n  (define-fun var2312 () Int\r\n    2)\r\n  (define-fun var1963 () Int\r\n    var2312)\r\n  (define-fun var2647 () String\r\n    String-init)\r\n  (define-fun var3303 () String\r\n    (str.++ (append/-1166366385 (str.++ var2647!1 \"Cannot interpret '\") var2312)\r\n        \"' as a hexadecimal digit\"))\r\n  (define-fun var3634 () String\r\n    (str.++ var2647!1 \"Cannot interpret '\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var3634!1 () String\r\n    \"Cannot interpret '\")\r\n  (define-fun var414 () String\r\n    (str.++ (append/-1166366385 (str.++ var2647!1 \"Cannot interpret '\") var2312)\r\n        \"' as a hexadecimal digit\"))\r\n  (define-fun var2580 () var3239\r\n    var3239-init)\r\n  (define-fun var2647!1 () String\r\n    \"\")\r\n  (define-fun var659!1 () String\r\n    \"' as a hexadecimal digit\")\r\n  (define-fun var2647!2 () String\r\n    \"Cannot interpret '\")\r\n  (define-fun var2580!1 () var3239\r\n    var3239!val!0)\r\n  (define-fun var3239-init () var3239\r\n    var3239!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var414!1 () String\r\n    \"\")\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var3239) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11751424,
            "run_time": 0.04618120193481445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3239 is 1\r\n; rep: (as @var3239_0 var3239)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3239-init () var3239 (as @var3239_0 var3239))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_1157 String) (BOUND_VARIABLE_1158 Int)) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_1161 var3239) (BOUND_VARIABLE_1162 String)) void (as @void_0 void))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2312 () Int 0)\r\n(define-fun var2647!1 () String \"\")\r\n(define-fun var2647!2 () String \"Cannot interpret '\")\r\n(define-fun var3634!1 () String \"Cannot interpret '\")\r\n(define-fun var659!1 () String \"' as a hexadecimal digit\")\r\n(define-fun var2580!1 () var3239 (as @var3239_0 var3239))\r\n(define-fun var414!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37593088,
            "run_time": 0.12304162979125977,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3634!1 () String\n    \"Cannot interpret '\")\n  (define-fun var2312 () Int\n    2)\n  (define-fun var2580 () var3239\n    var3239-init)\n  (define-fun var3634 () String\n    (str.++ var2647!1 \"Cannot interpret '\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3303 () String\n    (str.++ (append/-1166366385 (str.++ var2647!1 \"Cannot interpret '\") var2312)\n        \"' as a hexadecimal digit\"))\n  (define-fun var1963 () Int\n    var2312)\n  (define-fun var414 () String\n    (str.++ (append/-1166366385 (str.++ var2647!1 \"Cannot interpret '\") var2312)\n        \"' as a hexadecimal digit\"))\n  (define-fun null-Int () Int\n    3)\n  (define-fun var2647!2 () String\n    \"Cannot interpret '\")\n  (define-fun var659 () String\n    (append/-1166366385 (str.++ var2647!1 \"Cannot interpret '\") var2312))\n  (define-fun var2647 () String\n    String-init)\n  (define-fun var2647!1 () String\n    \"\")\n  (define-fun var659!1 () String\n    \"' as a hexadecimal digit\")\n  (define-fun var2580!1 () var3239\n    var3239!val!0)\n  (define-fun var3239-init () var3239\n    var3239!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var414!1 () String\n    \"\")\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var3239) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 205484032,
            "run_time": 3.3847620487213135,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var659!1 () String \"\\u{0}27 as a hexadecimal digit\")\r\n  (define-fun var3634!1 () String \"Cannot interpret \\u{0}27\")\r\n  (define-fun var2647!2 () String \"Cannot interpret \\u{0}27\")\r\n  (define-fun var2647!1 () String \"\")\r\n  (define-fun var2312 () Int 58)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun abbrev_106 ((x!0 Int)) String (ite (= x!0 0) \"Cannot interpret \\u{0}27\" \"\"))\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String (ite (and (= x!0 \"Cannot interpret \\u{0}27\") (= x!1 58)) \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto return 0;     case 49: goto return 8;     case 50: goto return 4;     case 51: goto return 12;     case 52: goto return 2;     case 53: goto return 10;     case 54: goto return 6;     case 55: goto return 14;     case 56: goto return 1;     case 57: goto return 9;     case 58: goto $r7 = new java.lang.IllegalArgumentException;     case 59: goto $r7 = new java.lang.IllegalArgumentException;     case 60: goto $r7 = new java.lang.IllegalArgumentException;     case 61: goto $r7 = new java.lang.IllegalArgumentException;     case 62: goto $r7 = new java.lang.IllegalArgumentException;     case 63: goto $r7 = new java.lang.IllegalArgumentException;     case 64: goto $r7 = new java.lang.IllegalArgumentException;     case 65: goto return 5;     case 66: goto return 13;     case 67: goto return 3;     case 68: goto return 11;     case 69: goto return 7;     case 70: goto return 15;     case 71: goto $r7 = new java.lang.IllegalArgumentException;     case 72: goto $r7 = new java.lang.IllegalArgumentException;     case 73: goto $r7 = new java.lang.IllegalArgumentException;     case 74: goto $r7 = new java.lang.IllegalArgumentException;     case 75: goto $r7 = new java.lang.IllegalArgumentException;     case 76: goto $r7 = new java.lang.IllegalArgumentException;     case 77: goto $r7 = new java.lang.IllegalArgumentException;     case 78: goto $r7 = new java.lang.IllegalArgumentException;     case 79: goto $r7 = new java.lang.IllegalArgumentException;     case 80: goto $r7 = new java.lang.IllegalArgumentException;     case 81: goto $r7 = new java.lang.IllegalArgumentException;     case 82: goto $r7 = new java.lang.IllegalArgumentException;     case 83: goto $r7 = new java.lang.IllegalArgumentException;     case 84: goto $r7 = new java.lang.IllegalArgumentException;     case 85: goto $r7 = new java.lang.IllegalArgumentException;     case 86: goto $r7 = new java.lang.IllegalArgumentException;     case 87: goto $r7 = new java.lang.IllegalArgumentException;     case 88: goto $r7 = new java.lang.IllegalArgumentException;     case 89: goto $r7 = new java.lang.IllegalArgumentException;     case 90: goto $r7 = new java.lang.IllegalArgumentException;     case 91: goto $r7 = new java.lang.IllegalArgumentException;     case 92: goto $r7 = new java.lang.IllegalArgumentException;     case 93: goto $r7 = new java.lang.IllegalArgumentException;     case 94: goto $r7 = new java.lang.IllegalArgumentException;     case 95: goto $r7 = new java.lang.IllegalArgumentException;     case 96: goto $r7 = new java.lang.IllegalArgumentException;     case 97: goto return 5;     case 98: goto return 13;     case 99: goto return 3;     case 100: goto return 11;     case 101: goto return 7;     case 102: goto return 15;     default: goto $r7 = new java.lang.IllegalArgumentException; }",
            "$r7 = new java.lang.IllegalArgumentException",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot interpret \\'\")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' as a hexadecimal digit\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5)",
            "throw $r7"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitMsb0ToBinary__1576048278\\846.smt2",
        "z3": {
            "memory": 32903168,
            "run_time": 0.18566274642944336,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2973 () String\r\n    String-init)\r\n  (define-fun var935!1 () String\r\n    \"Cannot interpret '\")\r\n  (define-fun var1112 () var1909\r\n    var1909-init)\r\n  (define-fun var456 () String\r\n    (str.++ (append/-1166366385 (str.++ var2973!1 \"Cannot interpret '\") var586)\r\n        \"' as a hexadecimal digit\"))\r\n  (define-fun var3973 () String\r\n    (append/-1166366385 (str.++ var2973!1 \"Cannot interpret '\") var586))\r\n  (define-fun var2173 () Int\r\n    var586)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var935 () String\r\n    (str.++ var2973!1 \"Cannot interpret '\"))\r\n  (define-fun var3815 () String\r\n    (str.++ (append/-1166366385 (str.++ var2973!1 \"Cannot interpret '\") var586)\r\n        \"' as a hexadecimal digit\"))\r\n  (define-fun var586 () Int\r\n    2)\r\n  (define-fun var3973!1 () String\r\n    \"' as a hexadecimal digit\")\r\n  (define-fun var2973!1 () String\r\n    \"\")\r\n  (define-fun var2973!2 () String\r\n    \"Cannot interpret '\")\r\n  (define-fun var456!1 () String\r\n    \"\")\r\n  (define-fun var1909-init () var1909\r\n    var1909!val!0)\r\n  (define-fun var1112!1 () var1909\r\n    var1909!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var1909) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12357632,
            "run_time": 0.04636669158935547,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1909 is 1\r\n; rep: (as @var1909_0 var1909)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1909-init () var1909 (as @var1909_0 var1909))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_1157 String) (BOUND_VARIABLE_1158 Int)) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_1161 var1909) (BOUND_VARIABLE_1162 String)) void (as @void_0 void))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var586 () Int 0)\r\n(define-fun var2973!1 () String \"\")\r\n(define-fun var2973!2 () String \"Cannot interpret '\")\r\n(define-fun var935!1 () String \"Cannot interpret '\")\r\n(define-fun var3973!1 () String \"' as a hexadecimal digit\")\r\n(define-fun var1112!1 () var1909 (as @var1909_0 var1909))\r\n(define-fun var456!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37761024,
            "run_time": 0.1239938735961914,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3973 () String\n    (append/-1166366385 (str.++ var2973!1 \"Cannot interpret '\") var586))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var935 () String\n    (str.++ var2973!1 \"Cannot interpret '\"))\n  (define-fun var1112 () var1909\n    var1909-init)\n  (define-fun var3815 () String\n    (str.++ (append/-1166366385 (str.++ var2973!1 \"Cannot interpret '\") var586)\n        \"' as a hexadecimal digit\"))\n  (define-fun null-Int () Int\n    3)\n  (define-fun var935!1 () String\n    \"Cannot interpret '\")\n  (define-fun var2173 () Int\n    var586)\n  (define-fun var2973!2 () String\n    \"Cannot interpret '\")\n  (define-fun var586 () Int\n    2)\n  (define-fun var2973 () String\n    String-init)\n  (define-fun var456 () String\n    (str.++ (append/-1166366385 (str.++ var2973!1 \"Cannot interpret '\") var586)\n        \"' as a hexadecimal digit\"))\n  (define-fun var3973!1 () String\n    \"' as a hexadecimal digit\")\n  (define-fun var2973!1 () String\n    \"\")\n  (define-fun var456!1 () String\n    \"\")\n  (define-fun var1909-init () var1909\n    var1909!val!0)\n  (define-fun var1112!1 () var1909\n    var1909!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var1909) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 225497088,
            "run_time": 3.263951301574707,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3973!1 () String \"\\u{0}27 as a hexadecimal digit\")\r\n  (define-fun var935!1 () String \"Cannot interpret \\u{0}27\")\r\n  (define-fun var2973!2 () String \"Cannot interpret \\u{0}27\")\r\n  (define-fun var2973!1 () String \"\")\r\n  (define-fun var586 () Int 58)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun abbrev_106 ((x!0 Int)) String (ite (= x!0 0) \"Cannot interpret \\u{0}27\" \"\"))\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String (ite (and (= x!0 \"Cannot interpret \\u{0}27\") (= x!1 58)) \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto $r45 = <org.apache.commons.lang3.Conversion: boolean[] FFFF>;     case 49: goto $r42 = <org.apache.commons.lang3.Conversion: boolean[] FFFT>;     case 50: goto $r39 = <org.apache.commons.lang3.Conversion: boolean[] FFTF>;     case 51: goto $r36 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 52: goto $r33 = <org.apache.commons.lang3.Conversion: boolean[] FTFF>;     case 53: goto $r30 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 54: goto $r27 = <org.apache.commons.lang3.Conversion: boolean[] FTTF>;     case 55: goto $r24 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 56: goto $r21 = <org.apache.commons.lang3.Conversion: boolean[] TFFF>;     case 57: goto $r18 = <org.apache.commons.lang3.Conversion: boolean[] TFFT>;     case 58: goto $r55 = new java.lang.IllegalArgumentException;     case 59: goto $r55 = new java.lang.IllegalArgumentException;     case 60: goto $r55 = new java.lang.IllegalArgumentException;     case 61: goto $r55 = new java.lang.IllegalArgumentException;     case 62: goto $r55 = new java.lang.IllegalArgumentException;     case 63: goto $r55 = new java.lang.IllegalArgumentException;     case 64: goto $r55 = new java.lang.IllegalArgumentException;     case 65: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 66: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 67: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 68: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 69: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 70: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     case 71: goto $r55 = new java.lang.IllegalArgumentException;     case 72: goto $r55 = new java.lang.IllegalArgumentException;     case 73: goto $r55 = new java.lang.IllegalArgumentException;     case 74: goto $r55 = new java.lang.IllegalArgumentException;     case 75: goto $r55 = new java.lang.IllegalArgumentException;     case 76: goto $r55 = new java.lang.IllegalArgumentException;     case 77: goto $r55 = new java.lang.IllegalArgumentException;     case 78: goto $r55 = new java.lang.IllegalArgumentException;     case 79: goto $r55 = new java.lang.IllegalArgumentException;     case 80: goto $r55 = new java.lang.IllegalArgumentException;     case 81: goto $r55 = new java.lang.IllegalArgumentException;     case 82: goto $r55 = new java.lang.IllegalArgumentException;     case 83: goto $r55 = new java.lang.IllegalArgumentException;     case 84: goto $r55 = new java.lang.IllegalArgumentException;     case 85: goto $r55 = new java.lang.IllegalArgumentException;     case 86: goto $r55 = new java.lang.IllegalArgumentException;     case 87: goto $r55 = new java.lang.IllegalArgumentException;     case 88: goto $r55 = new java.lang.IllegalArgumentException;     case 89: goto $r55 = new java.lang.IllegalArgumentException;     case 90: goto $r55 = new java.lang.IllegalArgumentException;     case 91: goto $r55 = new java.lang.IllegalArgumentException;     case 92: goto $r55 = new java.lang.IllegalArgumentException;     case 93: goto $r55 = new java.lang.IllegalArgumentException;     case 94: goto $r55 = new java.lang.IllegalArgumentException;     case 95: goto $r55 = new java.lang.IllegalArgumentException;     case 96: goto $r55 = new java.lang.IllegalArgumentException;     case 97: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 98: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 99: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 100: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 101: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 102: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     default: goto $r55 = new java.lang.IllegalArgumentException; }",
            "$r55 = new java.lang.IllegalArgumentException",
            "$r54 = new java.lang.StringBuilder",
            "specialinvoke $r54.<java.lang.StringBuilder: void <init>()>()",
            "$r50 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot interpret \\'\")",
            "$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0)",
            "$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' as a hexadecimal digit\")",
            "$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r55.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r53)",
            "throw $r55"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ClassPathUtils__pathToPackage__816384436\\27.smt2",
        "z3": {
            "memory": 32808960,
            "run_time": 0.22969770431518555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1308 () var1818\r\n    (var1255_requireNonNull/1378936425 (cast-from-String-to-var1818 var1049) \"path\"))\r\n  (define-fun var1049 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var800 () String\r\n    (cast-from-var1818-to-String\r\n  (var1255_requireNonNull/1378936425\r\n    (cast-from-String-to-var1818 var1049)\r\n    \"path\")))\r\n  (define-fun var1177 () String\r\n    (str.replace_all (cast-from-var1818-to-String\r\n                   (var1255_requireNonNull/1378936425\r\n                     (cast-from-String-to-var1818 var1049)\r\n                     \"path\"))\r\n                 (str.from_code 47)\r\n                 (str.from_code 46)))\r\n  (define-fun cast-from-String-to-var1818 ((x!0 String)) var1818\r\n    var1818!val!0)\r\n  (define-fun cast-from-var1818-to-String ((x!0 var1818)) String\r\n    \"\")\r\n  (define-fun var1255_requireNonNull/1378936425 ((x!0 var1818) (x!1 String)) var1818\r\n    var1818!val!0)\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7520256,
            "run_time": 0.20232844352722168,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1047 is 1\r\n; rep: (as @var1047_0 var1047)\r\n; cardinality of var1818 is 1\r\n; rep: (as @var1818_0 var1818)\r\n; cardinality of var1255 is 1\r\n; rep: (as @var1255_0 var1255)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1255_requireNonNull/1378936425 ((BOUND_VARIABLE_532 var1818) (BOUND_VARIABLE_533 String)) var1818 (as @var1818_0 var1818))\r\n(define-fun cast-from-String-to-var1818 ((BOUND_VARIABLE_536 String)) var1818 (as @var1818_0 var1818))\r\n(define-fun cast-from-var1818-to-String ((BOUND_VARIABLE_539 var1818)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1049 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38748160,
            "run_time": 0.4879424571990967,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var800 () String\n    (cast-from-var1818-to-String\n  (var1255_requireNonNull/1378936425\n    (cast-from-String-to-var1818 var1049)\n    \"path\")))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1049 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1177 () String\n    (str.replace_all (cast-from-var1818-to-String\n                   (var1255_requireNonNull/1378936425\n                     (cast-from-String-to-var1818 var1049)\n                     \"path\"))\n                 (str.from_code 47)\n                 (str.from_code 46)))\n  (define-fun var1308 () var1818\n    (var1255_requireNonNull/1378936425 (cast-from-String-to-var1818 var1049) \"path\"))\n  (define-fun cast-from-String-to-var1818 ((x!0 String)) var1818\n    var1818!val!0)\n  (define-fun cast-from-var1818-to-String ((x!0 var1818)) String\n    \"\")\n  (define-fun var1255_requireNonNull/1378936425 ((x!0 var1818) (x!1 String)) var1818\n    var1818!val!0)\n)\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140234752,
            "run_time": 2.019319772720337,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1049 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: java.lang.String replace(char,char)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String replace(char,char)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$r1 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"path\")",
            "$r2 = (java.lang.String) $r1",
            "$r3 = virtualinvoke $r2.<java.lang.String: java.lang.String replace(char,char)>(47, 46)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.math.NumberUtils__getMantissa__-708117625\\2812-deviant-0.smt2",
        "z3": {
            "memory": 32788480,
            "run_time": 0.19576430320739746,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2738 () Int\r\n    1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3327 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    0)\r\n)\r\n(error \"line 20 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2777088,
            "run_time": 0.3348233699798584,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2321 is 1\r\n; rep: (as @var2321_0 var2321)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3327 () String \"\")\r\n(define-fun var2738 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37613568,
            "run_time": 0.3136885166168213,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2738 () Int\n    1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-Int () Int\n    0)\n  (define-fun var3327 () String\n    \"\")\n)\n(error \"line 20 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 156078080,
            "run_time": 2.3429863452911377,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2738 () Int 1)\r\n  (define-fun var3327 () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i1 := @parameter1: int",
            "c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i2 = (int) c0",
            "if $i2 == 45 goto $z0 = 1",
            "$z0 = 1",
            "goto [?= (branch)]",
            "if $z0 == 0 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1)",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, i1)",
            "goto [?= return $r1]",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle__appendDetail__-1069354024\\1479.smt2",
        "z3": {
            "memory": 32362496,
            "run_time": 0.44072818756103516,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 33 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.3584256172180176,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33886208,
            "run_time": 0.25992488861083984,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 33 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 139988992,
            "run_time": 1.8414332866668701,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
            "r1 := @parameter0: java.lang.StringBuffer",
            "r12 := @parameter1: java.lang.String",
            "r0 := @parameter2: java.util.Map",
            "if r0 == null goto virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0)",
            "virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.mutable.MutableBoolean__toString__-246630833\\2820.smt2",
        "z3": {
            "memory": 32608256,
            "run_time": 0.47032666206359863,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3417:\r\n  ;;   var3417!val!0 var3417!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3417!val!0 () var3417)\r\n  (declare-fun var3417!val!1 () var3417)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3417)) (or (= x var3417!val!0) (= x var3417!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var3417 () var3417\r\n    var3417!val!1)\r\n  (define-fun var2171 () var3417\r\n    var3417!val!0)\r\n  (define-fun var3184 () Bool\r\n    (value/-799859985 var2171))\r\n  (define-fun var814 () String\r\n    (String_valueOf/-1973653463 (value/-799859985 var2171)))\r\n  (define-fun String_valueOf/-1973653463 ((x!0 Bool)) String\r\n    \"\")\r\n  (define-fun value/-799859985 ((x!0 var3417)) Bool\r\n    false)\r\n)\r\n(error \"line 18 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2220032,
            "run_time": 0.11554503440856934,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3417 is 2\r\n; rep: (as @var3417_0 var3417)\r\n; rep: (as @var3417_1 var3417)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun value/-799859985 ((BOUND_VARIABLE_417 var3417)) Bool false)\r\n(define-fun String_valueOf/-1973653463 ((BOUND_VARIABLE_420 Bool)) String \"\")\r\n(define-fun null-var3417 () var3417 (as @var3417_0 var3417))\r\n(define-fun var2171 () var3417 (as @var3417_1 var3417))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34140160,
            "run_time": 0.16785383224487305,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3417:\n  ;;   var3417!val!0 var3417!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3417!val!0 () var3417)\n  (declare-fun var3417!val!1 () var3417)\n  ;; cardinality constraint:\n  (forall ((x var3417)) (or (= x var3417!val!0) (= x var3417!val!1)))\n  ;; -----------\n  (define-fun null-var3417 () var3417\n    var3417!val!1)\n  (define-fun var3184 () Bool\n    (value/-799859985 var2171))\n  (define-fun var814 () String\n    (String_valueOf/-1973653463 (value/-799859985 var2171)))\n  (define-fun var2171 () var3417\n    var3417!val!0)\n  (define-fun String_valueOf/-1973653463 ((x!0 Bool)) String\n    \"\")\n  (define-fun value/-799859985 ((x!0 var3417)) Bool\n    false)\n)\n(error \"line 18 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 133210112,
            "run_time": 2.0414109230041504,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2171 () var3417 var3417!4)\r\n  (define-fun null-var3417 () var3417 var3417!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 1,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(boolean)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(boolean)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.mutable.MutableBoolean",
            "$z0 = r0.<org.apache.commons.lang3.mutable.MutableBoolean: boolean value>",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(boolean)>($z0)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__-1982010979\\1864.smt2",
        "z3": {
            "memory": 32337920,
            "run_time": 0.3887357711791992,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2502:\r\n  ;;   var2502!val!1 var2502!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2502!val!1 () var2502)\r\n  (declare-fun var2502!val!0 () var2502)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2502)) (or (= x var2502!val!1) (= x var2502!val!0)))\r\n  ;; -----------\r\n  (define-fun var737 () String\r\n    \"!2!\")\r\n  (define-fun var2803 () Bool\r\n    true)\r\n  (define-fun var3817 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-var2502 () var2502\r\n    var2502!val!1)\r\n  (define-fun var2240 () var2502\r\n    var2502!val!0)\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var3817!1 () String\r\n    \"\")\r\n  (define-fun var2803!1 () Bool\r\n    false)\r\n  (define-fun append/-1166642301 ((x!0 String) (x!1 Bool)) String\r\n    \"\")\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6103040,
            "run_time": 0.11139035224914551,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2502 is 2\r\n; rep: (as @var2502_0 var2502)\r\n; rep: (as @var2502_1 var2502)\r\n; cardinality of var1283 is 1\r\n; rep: (as @var1283_0 var1283)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun append/-1166642301 ((BOUND_VARIABLE_527 String) (BOUND_VARIABLE_528 Bool)) String \"\")\r\n(define-fun null-var2502 () var2502 (as @var2502_0 var2502))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var2240 () var2502 (as @var2502_1 var2502))\r\n(define-fun var3817 () String \"\")\r\n(define-fun var737 () String \"\")\r\n(define-fun var2803 () Bool false)\r\n(define-fun var3817!1 () String \"\")\r\n(define-fun var2803!1 () Bool false)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37556224,
            "run_time": 0.2226107120513916,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2502:\n  ;;   var2502!val!1 var2502!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2502!val!1 () var2502)\n  (declare-fun var2502!val!0 () var2502)\n  ;; cardinality constraint:\n  (forall ((x var2502)) (or (= x var2502!val!1) (= x var2502!val!0)))\n  ;; -----------\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun var2803 () Bool\n    true)\n  (define-fun var737 () String\n    \"\\u{0}\")\n  (define-fun var2240 () var2502\n    var2502!val!0)\n  (define-fun null-var2502 () var2502\n    var2502!val!1)\n  (define-fun var3817 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var3817!1 () String\n    \"\")\n  (define-fun var2803!1 () Bool\n    false)\n  (define-fun append/-1166642301 ((x!0 String) (x!1 Bool)) String\n    \"\")\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 133525504,
            "run_time": 2.0080220699310303,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var737 () String \"\\u{0}\")\r\n  (define-fun var3817 () String \"\\u{0}\")\r\n  (define-fun var2240 () var2502 var2502!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2502 () var2502 var2502!2)\r\n  (define-fun var2803 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r2 := @parameter1: java.lang.String",
            "z0 := @parameter2: boolean",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(boolean)>(z0)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharSequenceUtils__indexOf__-1745998643\\40.smt2",
        "z3": {
            "memory": 32342016,
            "run_time": 0.16296052932739258,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1559 () Bool\r\n    true)\r\n  (define-fun var383 () String\r\n    \"A\")\r\n  (define-fun var627 () Int\r\n    1)\r\n  (define-fun var1112 () Int\r\n    1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1153 () String\r\n    var383)\r\n  (define-fun var3087 () Int\r\n    (str.indexof var383 (str.from_code var627) var1112))\r\n  (define-fun null-Int () Int\r\n    0)\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7577600,
            "run_time": 0.11429882049560547,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int 0)\r\n(define-fun var383 () String \"\")\r\n(define-fun var627 () Int 1)\r\n(define-fun var1112 () Int 1)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37232640,
            "run_time": 0.18545317649841309,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var627 () Int\n    1)\n  (define-fun var1559 () Bool\n    true)\n  (define-fun var3087 () Int\n    (str.indexof var383 (str.from_code var627) var1112))\n  (define-fun var1153 () String\n    var383)\n  (define-fun var383 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1112 () Int\n    1)\n)\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140763136,
            "run_time": 1.9132094383239746,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1112 () Int 1)\r\n  (define-fun var627 () Int 1)\r\n  (define-fun var383 () String \"\\u{0}\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int indexOf(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "i1 := @parameter1: int",
            "i10 := @parameter2: int",
            "$z0 = r0 instanceof java.lang.String",
            "if $z0 == 0 goto i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$r1 = (java.lang.String) r0",
            "$i9 = virtualinvoke $r1.<java.lang.String: int indexOf(int,int)>(i1, i10)",
            "return $i9"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharUtils__lambda$static$0__-826850064\\688.smt2",
        "z3": {
            "memory": 33153024,
            "run_time": 0.34078264236450195,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1081 () Int\r\n    1)\r\n  (define-fun var3826 () String\r\n    (String_valueOf/-371898945 var1081))\r\n  (define-fun var1582 () Int\r\n    var1081)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun String_valueOf/-371898945 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 17 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 4874240,
            "run_time": 0.14468169212341309,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-371898945 ((BOUND_VARIABLE_444 Int)) String \"\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1081 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37322752,
            "run_time": 0.15456652641296387,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1081 () Int\n    1)\n  (define-fun var1582 () Int\n    var1081)\n  (define-fun var3826 () String\n    (String_valueOf/-371898945 var1081))\n  (define-fun null-Int () Int\n    0)\n  (define-fun String_valueOf/-371898945 ((x!0 Int)) String\n    \"\")\n)\n(error \"line 17 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132014080,
            "run_time": 1.9953861236572266,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1081 () Int 1)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 1,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(char)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(char)>": 1
        },
        "jimple_statements": [
            "i0 := @parameter0: int",
            "$c1 = (char) i0",
            "$r0 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>($c1)",
            "return $r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__1223843748\\2184.smt2",
        "z3": {
            "memory": 31940608,
            "run_time": 0.3086106777191162,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2652:\r\n  ;;   var2652!val!1 var2652!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2652!val!1 () var2652)\r\n  (declare-fun var2652!val!0 () var2652)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2652)) (or (= x var2652!val!1) (= x var2652!val!0)))\r\n  ;; -----------\r\n  (define-fun var7 () Int\r\n    1)\r\n  (define-fun var1468 () var2652\r\n    var2652!val!0)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-var2652 () var2652\r\n    var2652!val!1)\r\n  (define-fun var354 () String\r\n    \"!0!\")\r\n  (define-fun var3379 () String\r\n    \"!2!\")\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var354!1 () String\r\n    \"\")\r\n  (define-fun var7!1 () Int\r\n    0)\r\n  (define-fun append/1845021834 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12791808,
            "run_time": 0.09365963935852051,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2652 is 2\r\n; rep: (as @var2652_0 var2652)\r\n; rep: (as @var2652_1 var2652)\r\n; cardinality of var3437 is 1\r\n; rep: (as @var3437_0 var3437)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun append/1845021834 ((BOUND_VARIABLE_539 String) (BOUND_VARIABLE_540 Int)) String \"\")\r\n(define-fun null-var2652 () var2652 (as @var2652_0 var2652))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1468 () var2652 (as @var2652_1 var2652))\r\n(define-fun var354 () String \"\")\r\n(define-fun var3379 () String \"\")\r\n(define-fun var7 () Int 0)\r\n(define-fun var354!1 () String \"\")\r\n(define-fun var7!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37576704,
            "run_time": 0.31746363639831543,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2652:\n  ;;   var2652!val!1 var2652!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2652!val!1 () var2652)\n  (declare-fun var2652!val!0 () var2652)\n  ;; cardinality constraint:\n  (forall ((x var2652)) (or (= x var2652!val!1) (= x var2652!val!0)))\n  ;; -----------\n  (define-fun null-Int () Int\n    0)\n  (define-fun var354 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1468 () var2652\n    var2652!val!0)\n  (define-fun var3379 () String\n    \"\\u{0}\")\n  (define-fun var7 () Int\n    1)\n  (define-fun null-var2652 () var2652\n    var2652!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var354!1 () String\n    \"\")\n  (define-fun var7!1 () Int\n    0)\n  (define-fun append/1845021834 ((x!0 String) (x!1 Int)) String\n    \"\")\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 133398528,
            "run_time": 2.070866823196411,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var7 () Int 1)\r\n  (define-fun var3379 () String \"\\u{0}\")\r\n  (define-fun var354 () String \"\\u{0}\")\r\n  (define-fun var1468 () var2652 var2652!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2652 () var2652 var2652!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(int)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r2 := @parameter1: java.lang.String",
            "i0 := @parameter2: int",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__79581480\\2100.smt2",
        "z3": {
            "memory": 33312768,
            "run_time": 0.19085288047790527,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var262:\r\n  ;;   var262!val!1 var262!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var262!val!1 () var262)\r\n  (declare-fun var262!val!0 () var262)\r\n  ;; cardinality constraint:\r\n  (forall ((x var262)) (or (= x var262!val!1) (= x var262!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var262 () var262\r\n    var262!val!1)\r\n  (define-fun var1427 () (Array Int Float64)\r\n    ((as const (Array Int Float64)) (fp #b0 #b00000010000 #x0000000000001)))\r\n  (define-fun null-__Array__Int__Float64__ () (Array Int Float64)\r\n    ((as const (Array Int Float64)) (fp #b1 #b00000000000 #x0000000000002)))\r\n  (define-fun var82 () String\r\n    (arrayStart/-417041427 var585))\r\n  (define-fun var3289 () String\r\n    \"\")\r\n  (define-fun var2656 () Int\r\n    (getLength-Arr-Float64-1 var1427))\r\n  (define-fun var2793 () String\r\n    (arrayEnd/-417041427 var585))\r\n  (define-fun var847 () Int\r\n    0)\r\n  (define-fun var1703!1 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1703!2 () String\r\n    \"\")\r\n  (define-fun var585 () var262\r\n    var262!val!0)\r\n  (define-fun var1703 () String\r\n    \"\")\r\n  (define-fun getLength-Arr-Float64-1 ((x!0 (Array Int Float64))) Int\r\n    0)\r\n  (define-fun arrayEnd/-417041427 ((x!0 var262)) String\r\n    \"\")\r\n  (define-fun arrayStart/-417041427 ((x!0 var262)) String\r\n    \"\")\r\n)\r\n(error \"line 42 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 16650240,
            "run_time": 0.1090383529663086,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var262 is 2\r\n; rep: (as @var262_0 var262)\r\n; rep: (as @var262_1 var262)\r\n; cardinality of var3374 is 1\r\n; rep: (as @var3374_0 var3374)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arrayStart/-417041427 ((BOUND_VARIABLE_7215 var262)) String \"\")\r\n(define-fun getLength-Arr-Float64-1 ((_arg_1 (Array Int (_ FloatingPoint 11 53)))) Int 0)\r\n(define-fun arrayEnd/-417041427 ((BOUND_VARIABLE_7218 var262)) String \"\")\r\n(define-fun null-var262 () var262 (as @var262_0 var262))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__Float64__ () (Array Int (_ FloatingPoint 11 53)) (store ((as const (Array Int (_ FloatingPoint 11 53))) (fp #b1 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) 0 (fp #b1 #b11111111111 #b0000000000000000000000000000000000000000000000000000)))\r\n(define-fun var585 () var262 (as @var262_1 var262))\r\n(define-fun var1703 () String \"\")\r\n(define-fun var3289 () String \"\")\r\n(define-fun var1427 () (Array Int (_ FloatingPoint 11 53)) (store ((as const (Array Int (_ FloatingPoint 11 53))) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000)) 0 (fp #b0 #b11111111111 #b0000000000000000000000000000000000000000000000000000)))\r\n(define-fun var1703!1 () String \"\")\r\n(define-fun var1703!2 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 40247296,
            "run_time": 0.31149888038635254,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 41 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 42 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 124719104,
            "run_time": 1.6232891082763672,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__79581480\\2100.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n1011ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r5 := @parameter1: java.lang.String",
            "r3 := @parameter2: double[]",
            "$r2 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayStart>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "i1 = 0",
            "$i0 = lengthof r3",
            "if i1 >= $i0 goto $r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "$r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitToInt__-1826717945\\1521.smt2",
        "z3": {
            "memory": 32796672,
            "run_time": 0.14989018440246582,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3453 () Int\r\n    1)\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var1075 () Int\r\n    (var2948_digit/-929202055 var3453 16))\r\n  (define-fun var2948_digit/-929202055 ((x!0 Int) (x!1 Int)) Int\r\n    0)\r\n)\r\n(error \"line 18 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10162176,
            "run_time": 0.07775473594665527,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2948 is 1\r\n; rep: (as @var2948_0 var2948)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2948_digit/-929202055 ((_arg_1 Int) (_arg_2 Int)) Int 0)\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3453 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35098624,
            "run_time": 0.17203474044799805,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3453 () Int\n    1)\n  (define-fun null-Int () Int\n    2)\n  (define-fun var1075 () Int\n    (var2948_digit/-929202055 var3453 16))\n  (define-fun var2948_digit/-929202055 ((x!0 Int) (x!1 Int)) Int\n    0)\n)\n(error \"line 18 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 125997056,
            "run_time": 2.0385959148406982,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3453 () Int 17)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun var2948_digit/-929202055 ((x!0 Int) (x!1 Int)) Int (ite (and (= x!0 17) (= x!1 16)) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 2,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "i1 = staticinvoke <java.lang.Character: int digit(char,int)>(c0, 16)",
            "if i1 >= 0 goto return i1",
            "return i1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.arch.Processor__toString__820522527\\976.smt2",
        "z3": {
            "memory": 32792576,
            "run_time": 0.3648076057434082,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3879:\r\n  ;;   var3879!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3879!val!0 () var3879)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3879)) (= x var3879!val!0))\r\n  ;; -----------\r\n  ;; universe for var3051:\r\n  ;;   var3051!val!1 var3051!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3051!val!1 () var3051)\r\n  (declare-fun var3051!val!0 () var3051)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3051)) (or (= x var3051!val!1) (= x var3051!val!0)))\r\n  ;; -----------\r\n  (define-fun var3625 () String\r\n    (getLabel/-66966143 (arch/1894554303 var3911)))\r\n  (define-fun var2753 () String\r\n    String-init)\r\n  (define-fun var2402 () String\r\n    (str.++ var2753!1 (getLabel/-1577269915 (type/1894554303 var3911))))\r\n  (define-fun var3233 () String\r\n    (append/-1166366385\r\n  (str.++ var2753!1 (getLabel/-1577269915 (type/1894554303 var3911)))\r\n  32))\r\n  (define-fun null-var3051 () var3051\r\n    var3051!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2978 () String\r\n    var2753!2)\r\n  (define-fun var3701 () var818\r\n    (arch/1894554303 var3911))\r\n  (define-fun var3911 () var3051\r\n    var3051!val!0)\r\n  (define-fun var2402!1 () String\r\n    \"\")\r\n  (define-fun var3036 () var3879\r\n    (type/1894554303 var3911))\r\n  (define-fun var3616 () String\r\n    (getLabel/-1577269915 (type/1894554303 var3911)))\r\n  (define-fun var3233!1 () String\r\n    \"\")\r\n  (define-fun var2753!1 () String\r\n    \"\")\r\n  (define-fun var2753!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun type/1894554303 ((x!0 var3051)) var3879\r\n    var3879!val!0)\r\n  (define-fun getLabel/-1577269915 ((x!0 var3879)) String\r\n    \"\")\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun arch/1894554303 ((x!0 var3051)) var818\r\n    var818!val!0)\r\n  (define-fun getLabel/-66966143 ((x!0 var818)) String\r\n    \"\")\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10842112,
            "run_time": 0.1745467185974121,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3051 is 2\r\n; rep: (as @var3051_0 var3051)\r\n; rep: (as @var3051_1 var3051)\r\n; cardinality of var3879 is 1\r\n; rep: (as @var3879_0 var3879)\r\n; cardinality of var818 is 1\r\n; rep: (as @var818_0 var818)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun type/1894554303 ((_arg_1 var3051)) var3879 (as @var3879_0 var3879))\r\n(define-fun getLabel/-1577269915 ((_arg_1 var3879)) String \"\")\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_770 String) (BOUND_VARIABLE_771 Int)) String \"\")\r\n(define-fun arch/1894554303 ((BOUND_VARIABLE_774 var3051)) var818 (as @var818_0 var818))\r\n(define-fun getLabel/-66966143 ((BOUND_VARIABLE_777 var818)) String \"\")\r\n(define-fun null-var3051 () var3051 (as @var3051_0 var3051))\r\n(define-fun var3911 () var3051 (as @var3051_1 var3051))\r\n(define-fun var2753!1 () String \"\")\r\n(define-fun var2753!2 () String \"\")\r\n(define-fun var2402!1 () String \"\")\r\n(define-fun var3233!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35192832,
            "run_time": 0.3209517002105713,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 49 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165560320,
            "run_time": 2.408731460571289,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3051/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.arch.Processor__toString__820522527\\976.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3233!1 =\r\n     concat(all_22_6, all_22_4)\r\n   var2402!1 =\r\n     concat(var2753!2, rhs)\r\n\r\n1843ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.arch.Processor",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = r1.<org.apache.commons.lang3.arch.Processor: org.apache.commons.lang3.arch.Processor$Type type>",
            "$r3 = virtualinvoke $r2.<org.apache.commons.lang3.arch.Processor$Type: java.lang.String getLabel()>()",
            "$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)",
            "$r5 = r1.<org.apache.commons.lang3.arch.Processor: org.apache.commons.lang3.arch.Processor$Arch arch>",
            "$r6 = virtualinvoke $r5.<org.apache.commons.lang3.arch.Processor$Arch: java.lang.String getLabel()>()",
            "virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r8 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitToBinary__-2007689494\\1418.smt2",
        "z3": {
            "memory": 33140736,
            "run_time": 0.26561641693115234,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    66)\r\n  (define-fun var2085 () var1999\r\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var1999 var1490-FTFT)))\r\n  (define-fun var2986 () (Array Int Bool)\r\n    var1490-FTFT)\r\n  (define-fun var2849 () (Array Int Bool)\r\n    (cast-from-var1999-to-__Array__Int__Bool__\r\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var1999 var1490-FTFT))))\r\n  (define-fun var3884 () Int\r\n    var3545)\r\n  (define-fun var3545 () Int\r\n    65)\r\n  (define-fun var1490-FTFT () (Array Int Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun cast-from-__Array__Int__Bool__-to-var1999 ((x!0 (Array Int Bool))) var1999\r\n    var1999!val!0)\r\n  (define-fun cast-from-var1999-to-__Array__Int__Bool__ ((x!0 var1999)) (Array Int\r\n         Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun clone/791635256 ((x!0 var1999)) var1999\r\n    var1999!val!0)\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11915264,
            "run_time": 0.06142067909240723,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1490 is 1\r\n; rep: (as @var1490_0 var1490)\r\n; cardinality of var1999 is 1\r\n; rep: (as @var1999_0 var1999)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun clone/791635256 ((BOUND_VARIABLE_698 var1999)) var1999 (as @var1999_0 var1999))\r\n(define-fun cast-from-__Array__Int__Bool__-to-var1999 ((BOUND_VARIABLE_701 (Array Int Bool))) var1999 (as @var1999_0 var1999))\r\n(define-fun cast-from-var1999-to-__Array__Int__Bool__ ((BOUND_VARIABLE_704 var1999)) (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var1490-FTFT () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var3545 () Int 65)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36364288,
            "run_time": 0.18657970428466797,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2986 () (Array Int Bool)\n    var1490-FTFT)\n  (define-fun null-Int () Int\n    66)\n  (define-fun var2849 () (Array Int Bool)\n    (cast-from-var1999-to-__Array__Int__Bool__\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var1999 var1490-FTFT))))\n  (define-fun var3884 () Int\n    var3545)\n  (define-fun var2085 () var1999\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var1999 var1490-FTFT)))\n  (define-fun var3545 () Int\n    65)\n  (define-fun var1490-FTFT () (Array Int Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun cast-from-__Array__Int__Bool__-to-var1999 ((x!0 (Array Int Bool))) var1999\n    var1999!val!0)\n  (define-fun cast-from-var1999-to-__Array__Int__Bool__ ((x!0 var1999)) (Array Int\n         Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun clone/791635256 ((x!0 var1999)) var1999\n    var1999!val!0)\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155103232,
            "run_time": 2.1648387908935547,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3545 () Int 65)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto $r45 = <org.apache.commons.lang3.Conversion: boolean[] FFFF>;     case 49: goto $r42 = <org.apache.commons.lang3.Conversion: boolean[] TFFF>;     case 50: goto $r39 = <org.apache.commons.lang3.Conversion: boolean[] FTFF>;     case 51: goto $r36 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 52: goto $r33 = <org.apache.commons.lang3.Conversion: boolean[] FFTF>;     case 53: goto $r30 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 54: goto $r27 = <org.apache.commons.lang3.Conversion: boolean[] FTTF>;     case 55: goto $r24 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 56: goto $r21 = <org.apache.commons.lang3.Conversion: boolean[] FFFT>;     case 57: goto $r18 = <org.apache.commons.lang3.Conversion: boolean[] TFFT>;     case 58: goto $r55 = new java.lang.IllegalArgumentException;     case 59: goto $r55 = new java.lang.IllegalArgumentException;     case 60: goto $r55 = new java.lang.IllegalArgumentException;     case 61: goto $r55 = new java.lang.IllegalArgumentException;     case 62: goto $r55 = new java.lang.IllegalArgumentException;     case 63: goto $r55 = new java.lang.IllegalArgumentException;     case 64: goto $r55 = new java.lang.IllegalArgumentException;     case 65: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 66: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 67: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 68: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 69: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 70: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     case 71: goto $r55 = new java.lang.IllegalArgumentException;     case 72: goto $r55 = new java.lang.IllegalArgumentException;     case 73: goto $r55 = new java.lang.IllegalArgumentException;     case 74: goto $r55 = new java.lang.IllegalArgumentException;     case 75: goto $r55 = new java.lang.IllegalArgumentException;     case 76: goto $r55 = new java.lang.IllegalArgumentException;     case 77: goto $r55 = new java.lang.IllegalArgumentException;     case 78: goto $r55 = new java.lang.IllegalArgumentException;     case 79: goto $r55 = new java.lang.IllegalArgumentException;     case 80: goto $r55 = new java.lang.IllegalArgumentException;     case 81: goto $r55 = new java.lang.IllegalArgumentException;     case 82: goto $r55 = new java.lang.IllegalArgumentException;     case 83: goto $r55 = new java.lang.IllegalArgumentException;     case 84: goto $r55 = new java.lang.IllegalArgumentException;     case 85: goto $r55 = new java.lang.IllegalArgumentException;     case 86: goto $r55 = new java.lang.IllegalArgumentException;     case 87: goto $r55 = new java.lang.IllegalArgumentException;     case 88: goto $r55 = new java.lang.IllegalArgumentException;     case 89: goto $r55 = new java.lang.IllegalArgumentException;     case 90: goto $r55 = new java.lang.IllegalArgumentException;     case 91: goto $r55 = new java.lang.IllegalArgumentException;     case 92: goto $r55 = new java.lang.IllegalArgumentException;     case 93: goto $r55 = new java.lang.IllegalArgumentException;     case 94: goto $r55 = new java.lang.IllegalArgumentException;     case 95: goto $r55 = new java.lang.IllegalArgumentException;     case 96: goto $r55 = new java.lang.IllegalArgumentException;     case 97: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 98: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 99: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 100: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 101: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 102: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     default: goto $r55 = new java.lang.IllegalArgumentException; }",
            "$r15 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>",
            "$r16 = virtualinvoke $r15.<java.lang.Object: java.lang.Object clone()>()",
            "$r17 = (boolean[]) $r16",
            "return $r17"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitMsb0ToInt__696600923\\1146.smt2",
        "z3": {
            "memory": 32858112,
            "run_time": 0.13699960708618164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    66)\r\n  (define-fun var1857 () Int\r\n    var800)\r\n  (define-fun var800 () Int\r\n    65)\r\n)\r\n(error \"line 17 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.09385490417480469,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-Int () Int 0)\r\n(define-fun var800 () Int 65)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37384192,
            "run_time": 0.13995051383972168,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    66)\n  (define-fun var1857 () Int\n    var800)\n  (define-fun var800 () Int\n    65)\n)\n(error \"line 17 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153993216,
            "run_time": 1.8820874691009521,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var800 () Int 65)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 2,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto return 0;     case 49: goto return 8;     case 50: goto return 4;     case 51: goto return 12;     case 52: goto return 2;     case 53: goto return 10;     case 54: goto return 6;     case 55: goto return 14;     case 56: goto return 1;     case 57: goto return 9;     case 58: goto $r7 = new java.lang.IllegalArgumentException;     case 59: goto $r7 = new java.lang.IllegalArgumentException;     case 60: goto $r7 = new java.lang.IllegalArgumentException;     case 61: goto $r7 = new java.lang.IllegalArgumentException;     case 62: goto $r7 = new java.lang.IllegalArgumentException;     case 63: goto $r7 = new java.lang.IllegalArgumentException;     case 64: goto $r7 = new java.lang.IllegalArgumentException;     case 65: goto return 5;     case 66: goto return 13;     case 67: goto return 3;     case 68: goto return 11;     case 69: goto return 7;     case 70: goto return 15;     case 71: goto $r7 = new java.lang.IllegalArgumentException;     case 72: goto $r7 = new java.lang.IllegalArgumentException;     case 73: goto $r7 = new java.lang.IllegalArgumentException;     case 74: goto $r7 = new java.lang.IllegalArgumentException;     case 75: goto $r7 = new java.lang.IllegalArgumentException;     case 76: goto $r7 = new java.lang.IllegalArgumentException;     case 77: goto $r7 = new java.lang.IllegalArgumentException;     case 78: goto $r7 = new java.lang.IllegalArgumentException;     case 79: goto $r7 = new java.lang.IllegalArgumentException;     case 80: goto $r7 = new java.lang.IllegalArgumentException;     case 81: goto $r7 = new java.lang.IllegalArgumentException;     case 82: goto $r7 = new java.lang.IllegalArgumentException;     case 83: goto $r7 = new java.lang.IllegalArgumentException;     case 84: goto $r7 = new java.lang.IllegalArgumentException;     case 85: goto $r7 = new java.lang.IllegalArgumentException;     case 86: goto $r7 = new java.lang.IllegalArgumentException;     case 87: goto $r7 = new java.lang.IllegalArgumentException;     case 88: goto $r7 = new java.lang.IllegalArgumentException;     case 89: goto $r7 = new java.lang.IllegalArgumentException;     case 90: goto $r7 = new java.lang.IllegalArgumentException;     case 91: goto $r7 = new java.lang.IllegalArgumentException;     case 92: goto $r7 = new java.lang.IllegalArgumentException;     case 93: goto $r7 = new java.lang.IllegalArgumentException;     case 94: goto $r7 = new java.lang.IllegalArgumentException;     case 95: goto $r7 = new java.lang.IllegalArgumentException;     case 96: goto $r7 = new java.lang.IllegalArgumentException;     case 97: goto return 5;     case 98: goto return 13;     case 99: goto return 3;     case 100: goto return 11;     case 101: goto return 7;     case 102: goto return 15;     default: goto $r7 = new java.lang.IllegalArgumentException; }",
            "return 5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle__\u300ainit\u300b__1634827672\\1217.smt2",
        "z3": {
            "memory": 32284672,
            "run_time": 0.13675451278686523,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1930:\r\n  ;;   var1930!val!0 var1930!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1930!val!0 () var1930)\r\n  (declare-fun var1930!val!1 () var1930)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1930)) (or (= x var1930!val!0) (= x var1930!val!1)))\r\n  ;; -----------\r\n  (define-fun var610 () String\r\n    (str.++ var2093!1 var664_lineSeparator/-342590142 \"  \"))\r\n  (define-fun var1196 () var1930\r\n    var1930!val!0)\r\n  (define-fun var3034 () String\r\n    var664_lineSeparator/-342590142)\r\n  (define-fun var2207 () String\r\n    (str.++ var2093!1 var664_lineSeparator/-342590142))\r\n  (define-fun var1758 () String\r\n    (str.++ var1214!1 var664_lineSeparator/-342590142 \"]\"))\r\n  (define-fun var2093 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1214 () String\r\n    String-init)\r\n  (define-fun var176 () String\r\n    var664_lineSeparator/-342590142)\r\n  (define-fun var3512 () String\r\n    (str.++ var1214!1 var664_lineSeparator/-342590142))\r\n  (define-fun var839 () String\r\n    (str.++ var2093!1 var664_lineSeparator/-342590142 \"  \"))\r\n  (define-fun null-var1930 () var1930\r\n    var1930!val!1)\r\n  (define-fun var3258 () String\r\n    (str.++ var1214!1 var664_lineSeparator/-342590142 \"]\"))\r\n  (define-fun var1214!2 () String\r\n    \"\")\r\n  (define-fun var3512!1 () String\r\n    \"]\")\r\n  (define-fun var664_lineSeparator/-342590142 () String\r\n    \"\")\r\n  (define-fun var2093!1 () String\r\n    \"\")\r\n  (define-fun var2093!2 () String\r\n    \"\")\r\n  (define-fun var1214!1 () String\r\n    \"\")\r\n  (define-fun var2207!1 () String\r\n    \"  \")\r\n  (define-fun var1196!2 () var1930\r\n    var1930!val!0)\r\n  (define-fun var839!1 () String\r\n    \"\")\r\n  (define-fun var2375 () Int\r\n    0)\r\n  (define-fun var1196!4 () var1930\r\n    var1930!val!0)\r\n  (define-fun var432 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1196!1 () var1930\r\n    var1930!val!0)\r\n  (define-fun var1196!3 () var1930\r\n    var1930!val!0)\r\n  (define-fun var1196!5 () var1930\r\n    var1930!val!0)\r\n  (define-fun var1758!1 () String\r\n    \"\")\r\n  (define-fun <init>/-1196933650 ((x!0 var468)) void\r\n    void!val!0)\r\n  (define-fun setContentStart/-305650476 ((x!0 var468) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun setContentEnd/-1348493125 ((x!0 var468) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var1930-to-var468 ((x!0 var1930)) var468\r\n    var468!val!0)\r\n  (define-fun setFieldSeparatorAtStart/1616699380 ((x!0 var468) (x!1 Bool)) void\r\n    void!val!0)\r\n  (define-fun setFieldSeparator/766569266 ((x!0 var468) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 83 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2285568,
            "run_time": 0.045679330825805664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1930 is 2\r\n; rep: (as @var1930_0 var1930)\r\n; rep: (as @var1930_1 var1930)\r\n; cardinality of var468 is 1\r\n; rep: (as @var468_0 var468)\r\n; cardinality of var664 is 1\r\n; rep: (as @var664_0 var664)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun <init>/-1196933650 ((BOUND_VARIABLE_594 var468)) void (as @void_0 void))\r\n(define-fun cast-from-var1930-to-var468 ((BOUND_VARIABLE_597 var1930)) var468 (as @var468_0 var468))\r\n(define-fun setContentStart/-305650476 ((BOUND_VARIABLE_600 var468) (BOUND_VARIABLE_601 String)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun var664_lineSeparator/-342590142 () String \"\")\r\n(define-fun setFieldSeparator/766569266 ((BOUND_VARIABLE_604 var468) (BOUND_VARIABLE_605 String)) void (as @void_0 void))\r\n(define-fun setFieldSeparatorAtStart/1616699380 ((BOUND_VARIABLE_608 var468) (BOUND_VARIABLE_609 Bool)) void (as @void_0 void))\r\n(define-fun setContentEnd/-1348493125 ((BOUND_VARIABLE_612 var468) (BOUND_VARIABLE_613 String)) void (as @void_0 void))\r\n(define-fun null-var1930 () var1930 (as @var1930_0 var1930))\r\n(define-fun var1196 () var1930 (as @var1930_1 var1930))\r\n(define-fun var1196!1 () var1930 (as @var1930_0 var1930))\r\n(define-fun var1196!2 () var1930 (as @var1930_0 var1930))\r\n(define-fun var432 () String \"\")\r\n(define-fun var2093!1 () String \"\")\r\n(define-fun var2093!2 () String \"\")\r\n(define-fun var2207!1 () String \"  \")\r\n(define-fun var1196!3 () var1930 (as @var1930_0 var1930))\r\n(define-fun var839!1 () String \"\")\r\n(define-fun var1196!4 () var1930 (as @var1930_0 var1930))\r\n(define-fun var2375 () Int 0)\r\n(define-fun var1214!1 () String \"\")\r\n(define-fun var1214!2 () String \"\")\r\n(define-fun var3512!1 () String \"]\")\r\n(define-fun var1196!5 () var1930 (as @var1930_0 var1930))\r\n(define-fun var1758!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36089856,
            "run_time": 0.15704059600830078,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1930:\n  ;;   var1930!val!0 var1930!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1930!val!0 () var1930)\n  (declare-fun var1930!val!1 () var1930)\n  ;; cardinality constraint:\n  (forall ((x var1930)) (or (= x var1930!val!0) (= x var1930!val!1)))\n  ;; -----------\n  (define-fun var3034 () String\n    var664_lineSeparator/-342590142)\n  (define-fun var610 () String\n    (str.++ var2093!1 var664_lineSeparator/-342590142 \"  \"))\n  (define-fun var2207 () String\n    (str.++ var2093!1 var664_lineSeparator/-342590142))\n  (define-fun var1214 () String\n    String-init)\n  (define-fun var1196 () var1930\n    var1930!val!0)\n  (define-fun var2093 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var176 () String\n    var664_lineSeparator/-342590142)\n  (define-fun var3512 () String\n    (str.++ var1214!1 var664_lineSeparator/-342590142))\n  (define-fun var839 () String\n    (str.++ var2093!1 var664_lineSeparator/-342590142 \"  \"))\n  (define-fun var3258 () String\n    (str.++ var1214!1 var664_lineSeparator/-342590142 \"]\"))\n  (define-fun null-var1930 () var1930\n    var1930!val!1)\n  (define-fun var1758 () String\n    (str.++ var1214!1 var664_lineSeparator/-342590142 \"]\"))\n  (define-fun var1214!2 () String\n    \"\")\n  (define-fun var3512!1 () String\n    \"]\")\n  (define-fun var664_lineSeparator/-342590142 () String\n    \"\")\n  (define-fun var2093!1 () String\n    \"\")\n  (define-fun var2093!2 () String\n    \"\")\n  (define-fun var1214!1 () String\n    \"\")\n  (define-fun var2207!1 () String\n    \"  \")\n  (define-fun var1196!2 () var1930\n    var1930!val!0)\n  (define-fun var839!1 () String\n    \"\")\n  (define-fun var2375 () Int\n    0)\n  (define-fun var1196!4 () var1930\n    var1930!val!0)\n  (define-fun var432 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1196!1 () var1930\n    var1930!val!0)\n  (define-fun var1196!3 () var1930\n    var1930!val!0)\n  (define-fun var1196!5 () var1930\n    var1930!val!0)\n  (define-fun var1758!1 () String\n    \"\")\n  (define-fun <init>/-1196933650 ((x!0 var468)) void\n    void!val!0)\n  (define-fun setContentStart/-305650476 ((x!0 var468) (x!1 String)) void\n    void!val!0)\n  (define-fun setContentEnd/-1348493125 ((x!0 var468) (x!1 String)) void\n    void!val!0)\n  (define-fun cast-from-var1930-to-var468 ((x!0 var1930)) var468\n    var468!val!0)\n  (define-fun setFieldSeparatorAtStart/1616699380 ((x!0 var468) (x!1 Bool)) void\n    void!val!0)\n  (define-fun setFieldSeparator/766569266 ((x!0 var468) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 83 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165515264,
            "run_time": 2.388725519180298,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1930/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle__init__1634827672\\1217.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3512!1 =\r\n     concat(var664_lineSeparator/-342590142, \"]\")\r\n   var2207!1 =\r\n     concat(var664_lineSeparator/-342590142, \"  \")\r\n\r\n1848ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle",
            "specialinvoke r0.<org.apache.commons.lang3.builder.ToStringStyle: void <init>()>()",
            "virtualinvoke r0.<org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle: void setContentStart(java.lang.String)>(\"[\")",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"  \")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle: void setFieldSeparator(java.lang.String)>($r5)",
            "virtualinvoke r0.<org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle: void setFieldSeparatorAtStart(boolean)>(1)",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>()",
            "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.lang3.builder.ToStringStyle$MultiLineToStringStyle: void setContentEnd(java.lang.String)>($r10)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitMsb0ToBinary__1576048278\\872.smt2",
        "z3": {
            "memory": 32710656,
            "run_time": 0.1041717529296875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    66)\r\n  (define-fun var1745 () Int\r\n    var3742)\r\n  (define-fun var3812 () var2187\r\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var2187 var2710-TFTF)))\r\n  (define-fun var1830 () (Array Int Bool)\r\n    var2710-TFTF)\r\n  (define-fun var1478 () (Array Int Bool)\r\n    (cast-from-var2187-to-__Array__Int__Bool__\r\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var2187 var2710-TFTF))))\r\n  (define-fun var3742 () Int\r\n    65)\r\n  (define-fun var2710-TFTF () (Array Int Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun clone/791635256 ((x!0 var2187)) var2187\r\n    var2187!val!0)\r\n  (define-fun cast-from-__Array__Int__Bool__-to-var2187 ((x!0 (Array Int Bool))) var2187\r\n    var2187!val!0)\r\n  (define-fun cast-from-var2187-to-__Array__Int__Bool__ ((x!0 var2187)) (Array Int\r\n         Bool)\r\n    ((as const (Array Int Bool)) false))\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10256384,
            "run_time": 0.04575085639953613,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2710 is 1\r\n; rep: (as @var2710_0 var2710)\r\n; cardinality of var2187 is 1\r\n; rep: (as @var2187_0 var2187)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun clone/791635256 ((BOUND_VARIABLE_698 var2187)) var2187 (as @var2187_0 var2187))\r\n(define-fun cast-from-__Array__Int__Bool__-to-var2187 ((BOUND_VARIABLE_701 (Array Int Bool))) var2187 (as @var2187_0 var2187))\r\n(define-fun cast-from-var2187-to-__Array__Int__Bool__ ((BOUND_VARIABLE_704 var2187)) (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var2710-TFTF () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var3742 () Int 65)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36773888,
            "run_time": 0.15546250343322754,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1830 () (Array Int Bool)\n    var2710-TFTF)\n  (define-fun null-Int () Int\n    66)\n  (define-fun var1478 () (Array Int Bool)\n    (cast-from-var2187-to-__Array__Int__Bool__\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var2187 var2710-TFTF))))\n  (define-fun var1745 () Int\n    var3742)\n  (define-fun var3812 () var2187\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var2187 var2710-TFTF)))\n  (define-fun var3742 () Int\n    65)\n  (define-fun var2710-TFTF () (Array Int Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun clone/791635256 ((x!0 var2187)) var2187\n    var2187!val!0)\n  (define-fun cast-from-__Array__Int__Bool__-to-var2187 ((x!0 (Array Int Bool))) var2187\n    var2187!val!0)\n  (define-fun cast-from-var2187-to-__Array__Int__Bool__ ((x!0 var2187)) (Array Int\n         Bool)\n    ((as const (Array Int Bool)) false))\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155103232,
            "run_time": 2.1288318634033203,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3742 () Int 65)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto $r45 = <org.apache.commons.lang3.Conversion: boolean[] FFFF>;     case 49: goto $r42 = <org.apache.commons.lang3.Conversion: boolean[] FFFT>;     case 50: goto $r39 = <org.apache.commons.lang3.Conversion: boolean[] FFTF>;     case 51: goto $r36 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 52: goto $r33 = <org.apache.commons.lang3.Conversion: boolean[] FTFF>;     case 53: goto $r30 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 54: goto $r27 = <org.apache.commons.lang3.Conversion: boolean[] FTTF>;     case 55: goto $r24 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 56: goto $r21 = <org.apache.commons.lang3.Conversion: boolean[] TFFF>;     case 57: goto $r18 = <org.apache.commons.lang3.Conversion: boolean[] TFFT>;     case 58: goto $r55 = new java.lang.IllegalArgumentException;     case 59: goto $r55 = new java.lang.IllegalArgumentException;     case 60: goto $r55 = new java.lang.IllegalArgumentException;     case 61: goto $r55 = new java.lang.IllegalArgumentException;     case 62: goto $r55 = new java.lang.IllegalArgumentException;     case 63: goto $r55 = new java.lang.IllegalArgumentException;     case 64: goto $r55 = new java.lang.IllegalArgumentException;     case 65: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 66: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 67: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 68: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 69: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 70: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     case 71: goto $r55 = new java.lang.IllegalArgumentException;     case 72: goto $r55 = new java.lang.IllegalArgumentException;     case 73: goto $r55 = new java.lang.IllegalArgumentException;     case 74: goto $r55 = new java.lang.IllegalArgumentException;     case 75: goto $r55 = new java.lang.IllegalArgumentException;     case 76: goto $r55 = new java.lang.IllegalArgumentException;     case 77: goto $r55 = new java.lang.IllegalArgumentException;     case 78: goto $r55 = new java.lang.IllegalArgumentException;     case 79: goto $r55 = new java.lang.IllegalArgumentException;     case 80: goto $r55 = new java.lang.IllegalArgumentException;     case 81: goto $r55 = new java.lang.IllegalArgumentException;     case 82: goto $r55 = new java.lang.IllegalArgumentException;     case 83: goto $r55 = new java.lang.IllegalArgumentException;     case 84: goto $r55 = new java.lang.IllegalArgumentException;     case 85: goto $r55 = new java.lang.IllegalArgumentException;     case 86: goto $r55 = new java.lang.IllegalArgumentException;     case 87: goto $r55 = new java.lang.IllegalArgumentException;     case 88: goto $r55 = new java.lang.IllegalArgumentException;     case 89: goto $r55 = new java.lang.IllegalArgumentException;     case 90: goto $r55 = new java.lang.IllegalArgumentException;     case 91: goto $r55 = new java.lang.IllegalArgumentException;     case 92: goto $r55 = new java.lang.IllegalArgumentException;     case 93: goto $r55 = new java.lang.IllegalArgumentException;     case 94: goto $r55 = new java.lang.IllegalArgumentException;     case 95: goto $r55 = new java.lang.IllegalArgumentException;     case 96: goto $r55 = new java.lang.IllegalArgumentException;     case 97: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 98: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 99: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 100: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 101: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 102: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     default: goto $r55 = new java.lang.IllegalArgumentException; }",
            "$r15 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>",
            "$r16 = virtualinvoke $r15.<java.lang.Object: java.lang.Object clone()>()",
            "$r17 = (boolean[]) $r16",
            "return $r17"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharUtils__toIntValue__-829675635\\383.smt2",
        "z3": {
            "memory": 32849920,
            "run_time": 0.13531255722045898,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3286 () var542\r\n    var542-init)\r\n  (define-fun var3507!1 () String\r\n    \"The character \")\r\n  (define-fun var588 () String\r\n    String-init)\r\n  (define-fun var2326 () String\r\n    (str.++ (append/-1166366385 (str.++ var588!1 \"The character \") var2914)\r\n        \" is not in the range '0' - '9'\"))\r\n  (define-fun var3158 () Bool\r\n    (var2862_isAsciiNumeric/641335549 var2914))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var3507 () String\r\n    (str.++ var588!1 \"The character \"))\r\n  (define-fun var2303 () String\r\n    (append/-1166366385 (str.++ var588!1 \"The character \") var2914))\r\n  (define-fun var2914 () Int\r\n    2)\r\n  (define-fun var1579 () String\r\n    (str.++ (append/-1166366385 (str.++ var588!1 \"The character \") var2914)\r\n        \" is not in the range '0' - '9'\"))\r\n  (define-fun var588!1 () String\r\n    \"\")\r\n  (define-fun var2303!1 () String\r\n    \" is not in the range '0' - '9'\")\r\n  (define-fun var588!2 () String\r\n    \"The character \")\r\n  (define-fun var542-init () var542\r\n    var542!val!0)\r\n  (define-fun var2326!1 () String\r\n    \"\")\r\n  (define-fun var3286!1 () var542\r\n    var542!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2862_isAsciiNumeric/641335549 ((x!0 Int)) Bool\r\n    false)\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var542) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8650752,
            "run_time": 0.13971972465515137,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2862 is 1\r\n; rep: (as @var2862_0 var2862)\r\n; cardinality of var542 is 1\r\n; rep: (as @var542_0 var542)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2862_isAsciiNumeric/641335549 ((_arg_1 Int)) Bool false)\r\n(define-fun var542-init () var542 (as @var542_0 var542))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_969 String) (BOUND_VARIABLE_970 Int)) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_973 var542) (BOUND_VARIABLE_974 String)) void (as @void_0 void))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2914 () Int 0)\r\n(define-fun var588!1 () String \"\")\r\n(define-fun var588!2 () String \"The character \")\r\n(define-fun var3507!1 () String \"The character \")\r\n(define-fun var2303!1 () String \" is not in the range '0' - '9'\")\r\n(define-fun var3286!1 () var542 (as @var542_0 var542))\r\n(define-fun var2326!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38359040,
            "run_time": 0.187225341796875,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var588 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3286 () var542\n    var542-init)\n  (define-fun var3507 () String\n    (str.++ var588!1 \"The character \"))\n  (define-fun var2303 () String\n    (append/-1166366385 (str.++ var588!1 \"The character \") var2914))\n  (define-fun var1579 () String\n    (str.++ (append/-1166366385 (str.++ var588!1 \"The character \") var2914)\n        \" is not in the range '0' - '9'\"))\n  (define-fun null-Int () Int\n    3)\n  (define-fun var3507!1 () String\n    \"The character \")\n  (define-fun var3158 () Bool\n    (var2862_isAsciiNumeric/641335549 var2914))\n  (define-fun var2914 () Int\n    2)\n  (define-fun var588!2 () String\n    \"The character \")\n  (define-fun var2326 () String\n    (str.++ (append/-1166366385 (str.++ var588!1 \"The character \") var2914)\n        \" is not in the range '0' - '9'\"))\n  (define-fun var588!1 () String\n    \"\")\n  (define-fun var2303!1 () String\n    \" is not in the range '0' - '9'\")\n  (define-fun var542-init () var542\n    var542!val!0)\n  (define-fun var2326!1 () String\n    \"\")\n  (define-fun var3286!1 () var542\n    var542!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2862_isAsciiNumeric/641335549 ((x!0 Int)) Bool\n    false)\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var542) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 220237824,
            "run_time": 2.9940829277038574,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2303!1 () String \" is not in the range \\u{0}270\\u{0}27 - \\u{0}279\\u{0}27\")\r\n  (define-fun var3507!1 () String \"The character \")\r\n  (define-fun var588!2 () String \"The character \")\r\n  (define-fun var588!1 () String \"\")\r\n  (define-fun var2914 () Int 15)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String (ite (and (= x!0 \"The character \") (= x!1 15)) \"\" \"\"))\r\n  (define-fun var2862_isAsciiNumeric/641335549 ((x!0 Int)) Bool (ite (= x!0 15) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.CharUtils: boolean isAsciiNumeric(char)>(c0)",
            "if $z0 != 0 goto $i2 = (int) c0",
            "$r7 = new java.lang.IllegalArgumentException",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The character \")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is not in the range \\'0\\' - \\'9\\'\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5)",
            "throw $r7"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle__appendDetail__-475478748\\1414.smt2",
        "z3": {
            "memory": 32759808,
            "run_time": 0.11443066596984863,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1580:\r\n  ;;   var1580!val!1 var1580!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1580!val!1 () var1580)\r\n  (declare-fun var1580!val!0 () var1580)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1580)) (or (= x var1580!val!1) (= x var1580!val!0)))\r\n  ;; -----------\r\n  (define-fun var1741 () Int\r\n    1)\r\n  (define-fun var2257 () var1580\r\n    var1580!val!0)\r\n  (define-fun var1603 () String\r\n    (String_valueOf/-371898945 var1741))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-var1580 () var1580\r\n    var1580!val!1)\r\n  (define-fun var2615 () String\r\n    \"!2!\")\r\n  (define-fun var50 () String\r\n    \"!0!\")\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var50!1 () String\r\n    \"\")\r\n  (define-fun var1603!1 () String\r\n    \"\")\r\n  (define-fun var2257!1 () var1580\r\n    var1580!val!1)\r\n  (define-fun appendValueAsString/1526211599 ((x!0 var1580)\r\n   (x!1 String)\r\n   (x!2 String)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-371898945 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7634944,
            "run_time": 0.07819461822509766,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1580 is 2\r\n; rep: (as @var1580_0 var1580)\r\n; rep: (as @var1580_1 var1580)\r\n; cardinality of var150 is 1\r\n; rep: (as @var150_0 var150)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-371898945 ((BOUND_VARIABLE_548 Int)) String \"\")\r\n(define-fun appendValueAsString/1526211599 ((BOUND_VARIABLE_551 var1580) (BOUND_VARIABLE_552 String) (BOUND_VARIABLE_553 String)) void (as @void_0 void))\r\n(define-fun null-var1580 () var1580 (as @var1580_0 var1580))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2257 () var1580 (as @var1580_1 var1580))\r\n(define-fun var50 () String \"\")\r\n(define-fun var2615 () String \"\")\r\n(define-fun var1741 () Int 0)\r\n(define-fun var2257!1 () var1580 (as @var1580_0 var1580))\r\n(define-fun var50!1 () String \"\")\r\n(define-fun var1603!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38158336,
            "run_time": 0.3571932315826416,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1580:\n  ;;   var1580!val!1 var1580!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1580!val!1 () var1580)\n  (declare-fun var1580!val!0 () var1580)\n  ;; cardinality constraint:\n  (forall ((x var1580)) (or (= x var1580!val!1) (= x var1580!val!0)))\n  ;; -----------\n  (define-fun null-Int () Int\n    0)\n  (define-fun null-var1580 () var1580\n    var1580!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2257 () var1580\n    var1580!val!0)\n  (define-fun var1741 () Int\n    1)\n  (define-fun var50 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var2615 () String\n    \"\\u{0}\")\n  (define-fun var1603 () String\n    (String_valueOf/-371898945 var1741))\n  (define-fun var50!1 () String\n    \"\")\n  (define-fun var1603!1 () String\n    \"\")\n  (define-fun var2257!1 () var1580\n    var1580!val!1)\n  (define-fun appendValueAsString/1526211599 ((x!0 var1580)\n   (x!1 String)\n   (x!2 String)) void\n    void!val!0)\n  (define-fun String_valueOf/-371898945 ((x!0 Int)) String\n    \"\")\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140726272,
            "run_time": 1.952613353729248,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1741 () Int 1)\r\n  (define-fun var2615 () String \"\\u{0}\")\r\n  (define-fun var50 () String \"\\u{0}\")\r\n  (define-fun var2257 () var1580 var1580!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var1580 () var1580 var1580!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(char)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(char)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
            "r1 := @parameter0: java.lang.StringBuffer",
            "r3 := @parameter1: java.lang.String",
            "c0 := @parameter2: char",
            "$r2 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0)",
            "specialinvoke r0.<org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle: void appendValueAsString(java.lang.StringBuffer,java.lang.String)>(r1, $r2)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.mutable.MutableByte__toString__-2003813511\\3075.smt2",
        "z3": {
            "memory": 32632832,
            "run_time": 0.2098374366760254,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1014:\r\n  ;;   var1014!val!0 var1014!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1014!val!0 () var1014)\r\n  (declare-fun var1014!val!1 () var1014)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1014)) (or (= x var1014!val!0) (= x var1014!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var1014 () var1014\r\n    var1014!val!1)\r\n  (define-fun var77 () String\r\n    (String_valueOf/1240665136 (value/1677688737 var950)))\r\n  (define-fun var115 () Int\r\n    (value/1677688737 var950))\r\n  (define-fun var204 () Int\r\n    (value/1677688737 var950))\r\n  (define-fun var950 () var1014\r\n    var1014!val!0)\r\n  (define-fun value/1677688737 ((x!0 var1014)) Int\r\n    0)\r\n  (define-fun String_valueOf/1240665136 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 20 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2244608,
            "run_time": 0.08116984367370605,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1014 is 2\r\n; rep: (as @var1014_0 var1014)\r\n; rep: (as @var1014_1 var1014)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun value/1677688737 ((BOUND_VARIABLE_436 var1014)) Int 0)\r\n(define-fun String_valueOf/1240665136 ((BOUND_VARIABLE_439 Int)) String \"\")\r\n(define-fun null-var1014 () var1014 (as @var1014_0 var1014))\r\n(define-fun var950 () var1014 (as @var1014_1 var1014))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37986304,
            "run_time": 0.16602063179016113,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1014:\n  ;;   var1014!val!0 var1014!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1014!val!0 () var1014)\n  (declare-fun var1014!val!1 () var1014)\n  ;; cardinality constraint:\n  (forall ((x var1014)) (or (= x var1014!val!0) (= x var1014!val!1)))\n  ;; -----------\n  (define-fun var204 () Int\n    (value/1677688737 var950))\n  (define-fun null-var1014 () var1014\n    var1014!val!1)\n  (define-fun var77 () String\n    (String_valueOf/1240665136 (value/1677688737 var950)))\n  (define-fun var115 () Int\n    (value/1677688737 var950))\n  (define-fun var950 () var1014\n    var1014!val!0)\n  (define-fun value/1677688737 ((x!0 var1014)) Int\n    0)\n  (define-fun String_valueOf/1240665136 ((x!0 Int)) String\n    \"\")\n)\n(error \"line 20 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132820992,
            "run_time": 1.9564828872680664,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var950 () var1014 var1014!4)\r\n  (define-fun null-var1014 () var1014 var1014!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 1,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.mutable.MutableByte",
            "$b0 = r0.<org.apache.commons.lang3.mutable.MutableByte: byte value>",
            "$i1 = (int) $b0",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__865104593\\2127.smt2",
        "z3": {
            "memory": 32669696,
            "run_time": 0.16335010528564453,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2071:\r\n  ;;   var2071!val!1 var2071!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2071!val!1 () var2071)\r\n  (declare-fun var2071!val!0 () var2071)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2071)) (or (= x var2071!val!1) (= x var2071!val!0)))\r\n  ;; -----------\r\n  (define-fun var443 () var2071\r\n    var2071!val!0)\r\n  (define-fun var1893 () Float32\r\n    (_ +zero 8 24))\r\n  (define-fun var1536 () String\r\n    \"!2!\")\r\n  (define-fun null-var2071 () var2071\r\n    var2071!val!1)\r\n  (define-fun var3489 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-Float32 () Float32\r\n    (fp #b0 #x00 #b00000000000000000000001))\r\n  (define-fun var3489!1 () String\r\n    \"\")\r\n  (define-fun var1893!1 () Float32\r\n    (_ NaN 8 24))\r\n  (define-fun append/816791095 ((x!0 String) (x!1 Float32)) String\r\n    \"\")\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13156352,
            "run_time": 0.046195030212402344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2071 is 2\r\n; rep: (as @var2071_0 var2071)\r\n; rep: (as @var2071_1 var2071)\r\n; cardinality of var3179 is 1\r\n; rep: (as @var3179_0 var3179)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun append/816791095 ((BOUND_VARIABLE_4311 String) (BOUND_VARIABLE_4312 (_ FloatingPoint 8 24))) String \"\")\r\n(define-fun null-var2071 () var2071 (as @var2071_0 var2071))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Float32 () (_ FloatingPoint 8 24) (fp #b1 #b11111111 #b00000000000000000000000))\r\n(define-fun var443 () var2071 (as @var2071_1 var2071))\r\n(define-fun var3489 () String \"\")\r\n(define-fun var1536 () String \"\")\r\n(define-fun var1893 () (_ FloatingPoint 8 24) (fp #b0 #b11111111 #b00000000000000000000000))\r\n(define-fun var3489!1 () String \"\")\r\n(define-fun var1893!1 () (_ FloatingPoint 8 24) (fp #b0 #b00000000 #b00000000000000000000000))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38703104,
            "run_time": 0.2553391456604004,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2071:\n  ;;   var2071!val!1 var2071!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2071!val!1 () var2071)\n  (declare-fun var2071!val!0 () var2071)\n  ;; cardinality constraint:\n  (forall ((x var2071)) (or (= x var2071!val!1) (= x var2071!val!0)))\n  ;; -----------\n  (define-fun var3489 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1893 () Float32\n    (_ +zero 8 24))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1536 () String\n    \"\\u{0}\")\n  (define-fun null-var2071 () var2071\n    var2071!val!1)\n  (define-fun var443 () var2071\n    var2071!val!0)\n  (define-fun null-Float32 () Float32\n    (fp #b0 #x00 #b00000000000000000000001))\n  (define-fun var3489!1 () String\n    \"\")\n  (define-fun var1893!1 () Float32\n    (_ NaN 8 24))\n  (define-fun append/816791095 ((x!0 String) (x!1 Float32)) String\n    \"\")\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 124358656,
            "run_time": 1.5714356899261475,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__865104593\\2127.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n966ms\r\nSort Float32 not declared\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(float)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(float)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r2 := @parameter1: java.lang.String",
            "f0 := @parameter2: float",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(float)>(f0)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharSequenceUtils__indexOf__-967842851\\19.smt2",
        "z3": {
            "memory": 32411648,
            "run_time": 0.2469463348388672,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2780 () Bool\r\n    true)\r\n  (define-fun var3726 () String\r\n    \"B\")\r\n  (define-fun var169 () String\r\n    \"A\")\r\n  (define-fun var1714 () Int\r\n    1)\r\n  (define-fun var1579 () String\r\n    (String_toString/-1426662429 var3726))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1216 () String\r\n    var169)\r\n  (define-fun var380 () Int\r\n    (str.indexof var169 (String_toString/-1426662429 var3726) var1714))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun String_toString/-1426662429 ((x!0 String)) String\r\n    \"\")\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.07715153694152832,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_toString/-1426662429 ((BOUND_VARIABLE_588 String)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var169 () String \"\")\r\n(define-fun var3726 () String \"\")\r\n(define-fun var1714 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38350848,
            "run_time": 0.1568601131439209,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    0)\n  (define-fun var1714 () Int\n    1)\n  (define-fun var3726 () String\n    \"\\u{0}\")\n  (define-fun var380 () Int\n    (str.indexof var169 (String_toString/-1426662429 var3726) var1714))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1579 () String\n    (String_toString/-1426662429 var3726))\n  (define-fun var169 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2780 () Bool\n    true)\n  (define-fun var1216 () String\n    var169)\n  (define-fun String_toString/-1426662429 ((x!0 String)) String\n    \"\")\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140505088,
            "run_time": 1.9067363739013672,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1714 () Int 1)\r\n  (define-fun var3726 () String \"\\u{0}\")\r\n  (define-fun var169 () String \"\\u{0}\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.CharSequence: java.lang.String toString()>",
            "<java.lang.String: int indexOf(java.lang.String,int)>"
        ],
        "api_count": {
            "<java.lang.CharSequence: java.lang.String toString()>": 1,
            "<java.lang.String: int indexOf(java.lang.String,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "r1 := @parameter1: java.lang.CharSequence",
            "i0 := @parameter2: int",
            "$z0 = r0 instanceof java.lang.String",
            "if $z0 == 0 goto $z1 = r0 instanceof java.lang.StringBuilder",
            "$r9 = (java.lang.String) r0",
            "$r8 = interfaceinvoke r1.<java.lang.CharSequence: java.lang.String toString()>()",
            "$i4 = virtualinvoke $r9.<java.lang.String: int indexOf(java.lang.String,int)>($r8, i0)",
            "return $i4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.math.NumberUtils__getMantissa__-708117625\\2812-deviant-1.smt2",
        "z3": {
            "memory": 32972800,
            "run_time": 0.21075749397277832,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2738 () Int\r\n    0)\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun var473 () Int\r\n    (str.to_code (str.at var3327 0)))\r\n  (define-fun var2804 () Int\r\n    (str.to_code (str.at var3327 0)))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var756 () Bool\r\n    (ite (= 1 1) true false))\r\n  (define-fun var3327 () String\r\n    \"-\")\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12513280,
            "run_time": 0.04542899131774902,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2321 is 1\r\n; rep: (as @var2321_0 var2321)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"\")\r\n(define-fun null-Int () Int 0)\r\n(define-fun var3327 () String \"-\")\r\n(define-fun var2738 () Int 2)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37740544,
            "run_time": 0.26766347885131836,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var473 () Int\n    (str.to_code (str.at var3327 0)))\n  (define-fun var2738 () Int\n    3)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var756 () Bool\n    (ite (= 1 1) true false))\n  (define-fun var3327 () String\n    \"-\\u{0}\")\n  (define-fun null-Int () Int\n    4)\n  (define-fun var2804 () Int\n    (str.to_code (str.at var3327 0)))\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153141248,
            "run_time": 2.23007869720459,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_11_0, 45)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.math.NumberUtils__getMantissa__-708117625\\2812-deviant-1.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n1655ms\r\n"
        },
        "undefined_function_count": 0,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i1 := @parameter1: int",
            "c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i2 = (int) c0",
            "if $i2 == 45 goto $z0 = 1",
            "$z0 = 1",
            "goto [?= (branch)]",
            "if $z0 == 0 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1)",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, i1)",
            "goto [?= return $r1]",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ClassPathUtils__toFullyQualifiedName__326421228\\77.smt2",
        "z3": {
            "memory": 32817152,
            "run_time": 0.16525840759277344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3648:\r\n  ;;   var3648!val!0 var3648!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3648!val!0 () var3648)\r\n  (declare-fun var3648!val!1 () var3648)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3648)) (or (= x var3648!val!0) (= x var3648!val!1)))\r\n  ;; -----------\r\n  (define-fun var2798 () String\r\n    (str.++ var1774!1 (getName/-900081029 var1113!1) \".\"))\r\n  (define-fun var2644 () String\r\n    \"A\")\r\n  (define-fun var2768 () String\r\n    (str.++ var1774!1 (getName/-900081029 var1113!1)))\r\n  (define-fun var2211 () String\r\n    (str.++ var1774!1 (getName/-900081029 var1113!1) \".\" var2644!1))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1113 () var3648\r\n    var3648!val!0)\r\n  (define-fun null-var3648 () var3648\r\n    var3648!val!1)\r\n  (define-fun var1774 () String\r\n    String-init)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2812 () String\r\n    (getName/-900081029 var1113!1))\r\n  (define-fun var1516 () String\r\n    (str.++ var1774!1 (getName/-900081029 var1113!1) \".\" var2644!1))\r\n  (define-fun var1113!1 () var3648\r\n    var3648!val!0)\r\n  (define-fun var1774!2 () String\r\n    \"\")\r\n  (define-fun var2768!1 () String\r\n    \".\")\r\n  (define-fun var1774!1 () String\r\n    \"\")\r\n  (define-fun var2644!1 () String\r\n    \"\")\r\n  (define-fun var2798!1 () String\r\n    \".\")\r\n  (define-fun var3184 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3790 () String\r\n    \"\")\r\n  (define-fun getName/-900081029 ((x!0 var3648)) String\r\n    \"\")\r\n  (define-fun cast-from-var3648-to-var3918 ((x!0 var3648)) var3918\r\n    var3918!val!0)\r\n  (define-fun cast-from-String-to-var3918 ((x!0 String)) var3918\r\n    var3918!val!0)\r\n  (define-fun var1878_requireNonNull/1378936425 ((x!0 var3918) (x!1 String)) var3918\r\n    var3918!val!0)\r\n)\r\n(error \"line 57 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.10783791542053223,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3648 is 2\r\n; rep: (as @var3648_0 var3648)\r\n; rep: (as @var3648_1 var3648)\r\n; cardinality of var1781 is 1\r\n; rep: (as @var1781_0 var1781)\r\n; cardinality of var1878 is 1\r\n; rep: (as @var1878_0 var1878)\r\n; cardinality of var3918 is 1\r\n; rep: (as @var3918_0 var3918)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1878_requireNonNull/1378936425 ((BOUND_VARIABLE_628 var3918) (BOUND_VARIABLE_629 String)) var3918 (as @var3918_0 var3918))\r\n(define-fun cast-from-var3648-to-var3918 ((BOUND_VARIABLE_632 var3648)) var3918 (as @var3918_0 var3918))\r\n(define-fun cast-from-String-to-var3918 ((BOUND_VARIABLE_635 String)) var3918 (as @var3918_0 var3918))\r\n(define-fun String-init () String \"\")\r\n(define-fun getName/-900081029 ((BOUND_VARIABLE_638 var3648)) String \"\")\r\n(define-fun null-var3648 () var3648 (as @var3648_0 var3648))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1113 () var3648 (as @var3648_1 var3648))\r\n(define-fun var2644 () String \"\")\r\n(define-fun var1113!1 () var3648 (as @var3648_0 var3648))\r\n(define-fun var3790 () String \"\")\r\n(define-fun var2644!1 () String \"\")\r\n(define-fun var3184 () String \"\")\r\n(define-fun var1774!1 () String \"\")\r\n(define-fun var1774!2 () String \"\")\r\n(define-fun var2768!1 () String \".\")\r\n(define-fun var2798!1 () String \".\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38531072,
            "run_time": 0.3241384029388428,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3648:\n  ;;   var3648!val!0 var3648!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3648!val!0 () var3648)\n  (declare-fun var3648!val!1 () var3648)\n  ;; cardinality constraint:\n  (forall ((x var3648)) (or (= x var3648!val!0) (= x var3648!val!1)))\n  ;; -----------\n  (define-fun var2798!1 () String\n    \".\")\n  (define-fun var2644!1 () String\n    \"\")\n  (define-fun var1774!1 () String\n    \"\")\n  (define-fun var2768!1 () String\n    \".\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1774!2 () String\n    \"\")\n  (define-fun var1113!1 () var3648\n    var3648!val!0)\n  (define-fun var2798 () String\n    (str.++ var1774!1 (getName/-900081029 var1113!1) \".\"))\n  (define-fun var2211 () String\n    (str.++ var1774!1 (getName/-900081029 var1113!1) \".\" var2644!1))\n  (define-fun var2644 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2768 () String\n    (str.++ var1774!1 (getName/-900081029 var1113!1)))\n  (define-fun var1113 () var3648\n    var3648!val!0)\n  (define-fun null-var3648 () var3648\n    var3648!val!1)\n  (define-fun var2812 () String\n    (getName/-900081029 var1113!1))\n  (define-fun var1516 () String\n    (str.++ var1774!1 (getName/-900081029 var1113!1) \".\" var2644!1))\n  (define-fun var1774 () String\n    String-init)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3184 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3790 () String\n    \"\")\n  (define-fun getName/-900081029 ((x!0 var3648)) String\n    \"\")\n  (define-fun cast-from-var3648-to-var3918 ((x!0 var3648)) var3918\n    var3918!val!0)\n  (define-fun cast-from-String-to-var3918 ((x!0 String)) var3918\n    var3918!val!0)\n  (define-fun var1878_requireNonNull/1378936425 ((x!0 var3918) (x!1 String)) var3918\n    var3918!val!0)\n)\n(error \"line 57 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179453952,
            "run_time": 2.5802860260009766,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3648/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.ClassPathUtils__toFullyQualifiedName__326421228\\77.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2798!1 =\r\n     concat(all_24_4, var2644!1)\r\n   var2768!1 =\r\n     concat(var1774!2, \".\")\r\n   all_24_4 =\r\n     concat(var1774!2, \".\")\r\n\r\n1955ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Package",
            "r1 := @parameter1: java.lang.String",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"context\")",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"resourceName\")",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke r0.<java.lang.Package: java.lang.String getName()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitMsb0ToInt__696600923\\1153.smt2",
        "z3": {
            "memory": 33181696,
            "run_time": 0.15169048309326172,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    67)\r\n  (define-fun var2320 () Int\r\n    var282)\r\n  (define-fun var282 () Int\r\n    66)\r\n)\r\n(error \"line 17 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.11515545845031738,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-Int () Int 0)\r\n(define-fun var282 () Int 66)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37687296,
            "run_time": 0.14180469512939453,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    67)\n  (define-fun var2320 () Int\n    var282)\n  (define-fun var282 () Int\n    66)\n)\n(error \"line 17 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152555520,
            "run_time": 1.8875417709350586,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var282 () Int 66)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 2,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto return 0;     case 49: goto return 8;     case 50: goto return 4;     case 51: goto return 12;     case 52: goto return 2;     case 53: goto return 10;     case 54: goto return 6;     case 55: goto return 14;     case 56: goto return 1;     case 57: goto return 9;     case 58: goto $r7 = new java.lang.IllegalArgumentException;     case 59: goto $r7 = new java.lang.IllegalArgumentException;     case 60: goto $r7 = new java.lang.IllegalArgumentException;     case 61: goto $r7 = new java.lang.IllegalArgumentException;     case 62: goto $r7 = new java.lang.IllegalArgumentException;     case 63: goto $r7 = new java.lang.IllegalArgumentException;     case 64: goto $r7 = new java.lang.IllegalArgumentException;     case 65: goto return 5;     case 66: goto return 13;     case 67: goto return 3;     case 68: goto return 11;     case 69: goto return 7;     case 70: goto return 15;     case 71: goto $r7 = new java.lang.IllegalArgumentException;     case 72: goto $r7 = new java.lang.IllegalArgumentException;     case 73: goto $r7 = new java.lang.IllegalArgumentException;     case 74: goto $r7 = new java.lang.IllegalArgumentException;     case 75: goto $r7 = new java.lang.IllegalArgumentException;     case 76: goto $r7 = new java.lang.IllegalArgumentException;     case 77: goto $r7 = new java.lang.IllegalArgumentException;     case 78: goto $r7 = new java.lang.IllegalArgumentException;     case 79: goto $r7 = new java.lang.IllegalArgumentException;     case 80: goto $r7 = new java.lang.IllegalArgumentException;     case 81: goto $r7 = new java.lang.IllegalArgumentException;     case 82: goto $r7 = new java.lang.IllegalArgumentException;     case 83: goto $r7 = new java.lang.IllegalArgumentException;     case 84: goto $r7 = new java.lang.IllegalArgumentException;     case 85: goto $r7 = new java.lang.IllegalArgumentException;     case 86: goto $r7 = new java.lang.IllegalArgumentException;     case 87: goto $r7 = new java.lang.IllegalArgumentException;     case 88: goto $r7 = new java.lang.IllegalArgumentException;     case 89: goto $r7 = new java.lang.IllegalArgumentException;     case 90: goto $r7 = new java.lang.IllegalArgumentException;     case 91: goto $r7 = new java.lang.IllegalArgumentException;     case 92: goto $r7 = new java.lang.IllegalArgumentException;     case 93: goto $r7 = new java.lang.IllegalArgumentException;     case 94: goto $r7 = new java.lang.IllegalArgumentException;     case 95: goto $r7 = new java.lang.IllegalArgumentException;     case 96: goto $r7 = new java.lang.IllegalArgumentException;     case 97: goto return 5;     case 98: goto return 13;     case 99: goto return 3;     case 100: goto return 11;     case 101: goto return 7;     case 102: goto return 15;     default: goto $r7 = new java.lang.IllegalArgumentException; }",
            "return 13"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharUtils__toCharacterObject__-940816840\\350-deviant-0.smt2",
        "z3": {
            "memory": 32473088,
            "run_time": 0.2114109992980957,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3805 () Bool\r\n    (var156_isEmpty/1595667738 var2219))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2219 () String\r\n    \"\")\r\n  (define-fun var156_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun var3719_valueOf/-1186540555 ((x!0 Int)) var3719\r\n    var3719!val!0)\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9584640,
            "run_time": 0.02617478370666504,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2987 is 1\r\n; rep: (as @var2987_0 var2987)\r\n; cardinality of var156 is 1\r\n; rep: (as @var156_0 var156)\r\n; cardinality of var3719 is 1\r\n; rep: (as @var3719_0 var3719)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var156_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun var3719_valueOf/-1186540555 ((BOUND_VARIABLE_553 Int)) var3719 (as @var3719_0 var3719))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2219 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37916672,
            "run_time": 0.15766191482543945,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2219 () String\n    \"\")\n  (define-fun var3805 () Bool\n    (var156_isEmpty/1595667738 var2219))\n  (define-fun var156_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n  (define-fun var3719_valueOf/-1186540555 ((x!0 Int)) var3719\n    var3719!val!0)\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 172130304,
            "run_time": 2.4704806804656982,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2219 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun var156_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__-2040518017\\1896.smt2",
        "z3": {
            "memory": 32817152,
            "run_time": 0.15341782569885254,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3866:\r\n  ;;   var3866!val!1 var3866!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3866!val!1 () var3866)\r\n  (declare-fun var3866!val!0 () var3866)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3866)) (or (= x var3866!val!1) (= x var3866!val!0)))\r\n  ;; -----------\r\n  (define-fun var2585 () String\r\n    (arrayStart/-417041427 var3251))\r\n  (define-fun var2826 () String\r\n    \"\")\r\n  (define-fun var651!1 () String\r\n    \"\")\r\n  (define-fun var1301 () (Array Int Bool)\r\n    ((as const (Array Int Bool)) true))\r\n  (define-fun var651!2 () String\r\n    \"\")\r\n  (define-fun var2362 () Int\r\n    0)\r\n  (define-fun null-var3866 () var3866\r\n    var3866!val!1)\r\n  (define-fun var974 () Int\r\n    (getLength-Arr-Bool-1 var1301))\r\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool)\r\n    (store ((as const (Array Int Bool)) true) 0 false))\r\n  (define-fun var3251 () var3866\r\n    var3866!val!0)\r\n  (define-fun var167 () String\r\n    (arrayEnd/-417041427 var3251))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var651 () String\r\n    \"\")\r\n  (define-fun getLength-Arr-Bool-1 ((x!0 (Array Int Bool))) Int\r\n    0)\r\n  (define-fun arrayEnd/-417041427 ((x!0 var3866)) String\r\n    \"\")\r\n  (define-fun arrayStart/-417041427 ((x!0 var3866)) String\r\n    \"\")\r\n)\r\n(error \"line 42 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12021760,
            "run_time": 0.10735249519348145,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3866 is 2\r\n; rep: (as @var3866_0 var3866)\r\n; rep: (as @var3866_1 var3866)\r\n; cardinality of var519 is 1\r\n; rep: (as @var519_0 var519)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arrayStart/-417041427 ((BOUND_VARIABLE_803 var3866)) String \"\")\r\n(define-fun getLength-Arr-Bool-1 ((_arg_1 (Array Int Bool))) Int 0)\r\n(define-fun arrayEnd/-417041427 ((BOUND_VARIABLE_806 var3866)) String \"\")\r\n(define-fun null-var3866 () var3866 (as @var3866_0 var3866))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__Bool__ () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n(define-fun var3251 () var3866 (as @var3866_1 var3866))\r\n(define-fun var651 () String \"\")\r\n(define-fun var2826 () String \"\")\r\n(define-fun var1301 () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var651!1 () String \"\")\r\n(define-fun var651!2 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39051264,
            "run_time": 0.2966947555541992,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 41 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 42 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 171225088,
            "run_time": 2.455324172973633,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__-2040518017\\1896.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var651!2 =\r\n     concat(var651!1, rhs)\r\n   var651!1 =\r\n     concat(var651, rhs)\r\n   ... sat\r\n\r\n1929ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r5 := @parameter1: java.lang.String",
            "r3 := @parameter2: boolean[]",
            "$r2 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayStart>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "i1 = 0",
            "$i0 = lengthof r3",
            "if i1 >= $i0 goto $r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "$r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitToBinary__-2007689494\\1425.smt2",
        "z3": {
            "memory": 33181696,
            "run_time": 0.13640451431274414,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1309 () (Array Int Bool)\r\n    var2953-TTFT)\r\n  (define-fun null-Int () Int\r\n    67)\r\n  (define-fun var3023 () var3220\r\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var3220 var2953-TTFT)))\r\n  (define-fun var1556 () Int\r\n    var3586)\r\n  (define-fun var3719 () (Array Int Bool)\r\n    (cast-from-var3220-to-__Array__Int__Bool__\r\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var3220 var2953-TTFT))))\r\n  (define-fun var3586 () Int\r\n    66)\r\n  (define-fun var2953-TTFT () (Array Int Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun clone/791635256 ((x!0 var3220)) var3220\r\n    var3220!val!0)\r\n  (define-fun cast-from-__Array__Int__Bool__-to-var3220 ((x!0 (Array Int Bool))) var3220\r\n    var3220!val!0)\r\n  (define-fun cast-from-var3220-to-__Array__Int__Bool__ ((x!0 var3220)) (Array Int\r\n         Bool)\r\n    ((as const (Array Int Bool)) false))\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.09490799903869629,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2953 is 1\r\n; rep: (as @var2953_0 var2953)\r\n; cardinality of var3220 is 1\r\n; rep: (as @var3220_0 var3220)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun clone/791635256 ((BOUND_VARIABLE_712 var3220)) var3220 (as @var3220_0 var3220))\r\n(define-fun cast-from-__Array__Int__Bool__-to-var3220 ((BOUND_VARIABLE_715 (Array Int Bool))) var3220 (as @var3220_0 var3220))\r\n(define-fun cast-from-var3220-to-__Array__Int__Bool__ ((BOUND_VARIABLE_718 var3220)) (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var2953-TTFT () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var3586 () Int 66)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37679104,
            "run_time": 0.22254395484924316,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    67)\n  (define-fun var3719 () (Array Int Bool)\n    (cast-from-var3220-to-__Array__Int__Bool__\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var3220 var2953-TTFT))))\n  (define-fun var1309 () (Array Int Bool)\n    var2953-TTFT)\n  (define-fun var3023 () var3220\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var3220 var2953-TTFT)))\n  (define-fun var1556 () Int\n    var3586)\n  (define-fun var3586 () Int\n    66)\n  (define-fun var2953-TTFT () (Array Int Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun clone/791635256 ((x!0 var3220)) var3220\n    var3220!val!0)\n  (define-fun cast-from-__Array__Int__Bool__-to-var3220 ((x!0 (Array Int Bool))) var3220\n    var3220!val!0)\n  (define-fun cast-from-var3220-to-__Array__Int__Bool__ ((x!0 var3220)) (Array Int\n         Bool)\n    ((as const (Array Int Bool)) false))\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155590656,
            "run_time": 2.074711561203003,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3586 () Int 66)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto $r45 = <org.apache.commons.lang3.Conversion: boolean[] FFFF>;     case 49: goto $r42 = <org.apache.commons.lang3.Conversion: boolean[] TFFF>;     case 50: goto $r39 = <org.apache.commons.lang3.Conversion: boolean[] FTFF>;     case 51: goto $r36 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 52: goto $r33 = <org.apache.commons.lang3.Conversion: boolean[] FFTF>;     case 53: goto $r30 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 54: goto $r27 = <org.apache.commons.lang3.Conversion: boolean[] FTTF>;     case 55: goto $r24 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 56: goto $r21 = <org.apache.commons.lang3.Conversion: boolean[] FFFT>;     case 57: goto $r18 = <org.apache.commons.lang3.Conversion: boolean[] TFFT>;     case 58: goto $r55 = new java.lang.IllegalArgumentException;     case 59: goto $r55 = new java.lang.IllegalArgumentException;     case 60: goto $r55 = new java.lang.IllegalArgumentException;     case 61: goto $r55 = new java.lang.IllegalArgumentException;     case 62: goto $r55 = new java.lang.IllegalArgumentException;     case 63: goto $r55 = new java.lang.IllegalArgumentException;     case 64: goto $r55 = new java.lang.IllegalArgumentException;     case 65: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 66: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 67: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 68: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 69: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 70: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     case 71: goto $r55 = new java.lang.IllegalArgumentException;     case 72: goto $r55 = new java.lang.IllegalArgumentException;     case 73: goto $r55 = new java.lang.IllegalArgumentException;     case 74: goto $r55 = new java.lang.IllegalArgumentException;     case 75: goto $r55 = new java.lang.IllegalArgumentException;     case 76: goto $r55 = new java.lang.IllegalArgumentException;     case 77: goto $r55 = new java.lang.IllegalArgumentException;     case 78: goto $r55 = new java.lang.IllegalArgumentException;     case 79: goto $r55 = new java.lang.IllegalArgumentException;     case 80: goto $r55 = new java.lang.IllegalArgumentException;     case 81: goto $r55 = new java.lang.IllegalArgumentException;     case 82: goto $r55 = new java.lang.IllegalArgumentException;     case 83: goto $r55 = new java.lang.IllegalArgumentException;     case 84: goto $r55 = new java.lang.IllegalArgumentException;     case 85: goto $r55 = new java.lang.IllegalArgumentException;     case 86: goto $r55 = new java.lang.IllegalArgumentException;     case 87: goto $r55 = new java.lang.IllegalArgumentException;     case 88: goto $r55 = new java.lang.IllegalArgumentException;     case 89: goto $r55 = new java.lang.IllegalArgumentException;     case 90: goto $r55 = new java.lang.IllegalArgumentException;     case 91: goto $r55 = new java.lang.IllegalArgumentException;     case 92: goto $r55 = new java.lang.IllegalArgumentException;     case 93: goto $r55 = new java.lang.IllegalArgumentException;     case 94: goto $r55 = new java.lang.IllegalArgumentException;     case 95: goto $r55 = new java.lang.IllegalArgumentException;     case 96: goto $r55 = new java.lang.IllegalArgumentException;     case 97: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 98: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 99: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 100: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 101: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 102: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     default: goto $r55 = new java.lang.IllegalArgumentException; }",
            "$r12 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>",
            "$r13 = virtualinvoke $r12.<java.lang.Object: java.lang.Object clone()>()",
            "$r14 = (boolean[]) $r13",
            "return $r14"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__1259126355\\2306.smt2",
        "z3": {
            "memory": 32837632,
            "run_time": 0.1519310474395752,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3684:\r\n  ;;   var3684!val!1 var3684!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3684!val!1 () var3684)\r\n  (declare-fun var3684!val!0 () var3684)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3684)) (or (= x var3684!val!1) (= x var3684!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var3684 () var3684\r\n    var3684!val!1)\r\n  (define-fun var1499 () String\r\n    (arrayEnd/-417041427 var57))\r\n  (define-fun var3456 () String\r\n    \"\")\r\n  (define-fun var3456!2 () String\r\n    \"\")\r\n  (define-fun var57 () var3684\r\n    var3684!val!0)\r\n  (define-fun var3090 () Int\r\n    (getLength-Arr-Int-1 var3433))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) (- 1)) 0 0))\r\n  (define-fun var138 () String\r\n    \"\")\r\n  (define-fun var3456!1 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2321 () String\r\n    (arrayStart/-417041427 var57))\r\n  (define-fun var3433 () (Array Int Int)\r\n    ((as const (Array Int Int)) (- 1)))\r\n  (define-fun var1188 () Int\r\n    0)\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\r\n    0)\r\n  (define-fun arrayEnd/-417041427 ((x!0 var3684)) String\r\n    \"\")\r\n  (define-fun arrayStart/-417041427 ((x!0 var3684)) String\r\n    \"\")\r\n)\r\n(error \"line 42 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9687040,
            "run_time": 0.030091285705566406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3684 is 2\r\n; rep: (as @var3684_0 var3684)\r\n; rep: (as @var3684_1 var3684)\r\n; cardinality of var2641 is 1\r\n; rep: (as @var2641_0 var2641)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arrayStart/-417041427 ((BOUND_VARIABLE_819 var3684)) String \"\")\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 0)\r\n(define-fun arrayEnd/-417041427 ((BOUND_VARIABLE_822 var3684)) String \"\")\r\n(define-fun null-var3684 () var3684 (as @var3684_0 var3684))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var57 () var3684 (as @var3684_1 var3684))\r\n(define-fun var3456 () String \"\")\r\n(define-fun var138 () String \"\")\r\n(define-fun var3433 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3456!1 () String \"\")\r\n(define-fun var3456!2 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39108608,
            "run_time": 0.3121154308319092,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 41 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 42 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175558656,
            "run_time": 2.454453706741333,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__1259126355\\2306.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3456!2 =\r\n     concat(var3456!1, rhs)\r\n   var3456!1 =\r\n     concat(var3456, rhs)\r\n   ... sat\r\n\r\n1807ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r5 := @parameter1: java.lang.String",
            "r3 := @parameter2: long[]",
            "$r2 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayStart>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "i2 = 0",
            "$i0 = lengthof r3",
            "if i2 >= $i0 goto $r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "$r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ArchUtils__addProcessor__-818065808\\13.smt2",
        "z3": {
            "memory": 32833536,
            "run_time": 0.1376807689666748,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3787:\r\n  ;;   var3787!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3787!val!0 () var3787)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3787)) (= x var3787!val!0))\r\n  ;; -----------\r\n  ;; universe for var1314:\r\n  ;;   var1314!val!1 var1314!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1314!val!1 () var1314)\r\n  (declare-fun var1314!val!0 () var1314)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1314)) (or (= x var1314!val!1) (= x var1314!val!0)))\r\n  ;; -----------\r\n  ;; universe for var909:\r\n  ;;   var909!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var909!val!0 () var909)\r\n  ;; cardinality constraint:\r\n  (forall ((x var909)) (= x var909!val!0))\r\n  ;; -----------\r\n  (define-fun var423 () Bool\r\n    (var909_containsKey/1715618542\r\n  var3630-ARCH_TO_PROCESSOR\r\n  (cast-from-String-to-var3787 var3714)))\r\n  (define-fun var1367 () var1314\r\n    var1314!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun null-var1314 () var1314\r\n    var1314!val!1)\r\n  (define-fun var1140 () String\r\n    String-init)\r\n  (define-fun var3714 () String\r\n    \"A\")\r\n  (define-fun var1133 () var909\r\n    var3630-ARCH_TO_PROCESSOR)\r\n  (define-fun var1464 () String\r\n    (str.++ var1140!1 \"Key \" var3714 \" already exists in processor map\"))\r\n  (define-fun var3630-ARCH_TO_PROCESSOR () var909\r\n    var909!val!0)\r\n  (define-fun var3538 () var3984\r\n    var3984-init)\r\n  (define-fun var3561 () String\r\n    (str.++ var1140!1 \"Key \" var3714))\r\n  (define-fun var3449 () String\r\n    (str.++ var1140!1 \"Key \"))\r\n  (define-fun var501 () String\r\n    (str.++ var1140!1 \"Key \" var3714 \" already exists in processor map\"))\r\n  (define-fun var1140!1 () String\r\n    \"\")\r\n  (define-fun var3561!1 () String\r\n    \"Key A already exists in processor map\")\r\n  (define-fun var3449!1 () String\r\n    \"Key A\")\r\n  (define-fun var1140!2 () String\r\n    \"Key \")\r\n  (define-fun var3538!1 () var3984\r\n    var3984!val!0)\r\n  (define-fun var501!1 () String\r\n    \"\")\r\n  (define-fun var3984-init () var3984\r\n    var3984!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-String-to-var3787 ((x!0 String)) var3787\r\n    var3787!val!0)\r\n  (define-fun var909_containsKey/1715618542 ((x!0 var909) (x!1 var3787)) Bool\r\n    true)\r\n  (define-fun <init>/-1092629202 ((x!0 var3984) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 60 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12537856,
            "run_time": 0.04642438888549805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2007 is 1\r\n; rep: (as @var2007_0 var2007)\r\n; cardinality of var1314 is 2\r\n; rep: (as @var1314_0 var1314)\r\n; rep: (as @var1314_1 var1314)\r\n; cardinality of var909 is 1\r\n; rep: (as @var909_0 var909)\r\n; cardinality of var3630 is 1\r\n; rep: (as @var3630_0 var3630)\r\n; cardinality of var3787 is 1\r\n; rep: (as @var3787_0 var3787)\r\n; cardinality of var3984 is 1\r\n; rep: (as @var3984_0 var3984)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var909_containsKey/1715618542 ((_arg_1 var909) (_arg_2 var3787)) Bool true)\r\n(define-fun cast-from-String-to-var3787 ((_arg_1 String)) var3787 (as @var3787_0 var3787))\r\n(define-fun var3984-init () var3984 (as @var3984_0 var3984))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_686 var3984) (BOUND_VARIABLE_687 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1314 () var1314 (as @var1314_0 var1314))\r\n(define-fun var3630-ARCH_TO_PROCESSOR () var909 (as @var909_0 var909))\r\n(define-fun var3714 () String \"\")\r\n(define-fun var1367 () var1314 (as @var1314_1 var1314))\r\n(define-fun var1140!1 () String \"\")\r\n(define-fun var1140!2 () String \"Key \")\r\n(define-fun var3449!1 () String \"Key \")\r\n(define-fun var3561!1 () String \"Key  already exists in processor map\")\r\n(define-fun var3538!1 () var3984 (as @var3984_0 var3984))\r\n(define-fun var501!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38068224,
            "run_time": 0.13864350318908691,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3787:\n  ;;   var3787!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3787!val!0 () var3787)\n  ;; cardinality constraint:\n  (forall ((x var3787)) (= x var3787!val!0))\n  ;; -----------\n  ;; universe for var1314:\n  ;;   var1314!val!1 var1314!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1314!val!1 () var1314)\n  (declare-fun var1314!val!0 () var1314)\n  ;; cardinality constraint:\n  (forall ((x var1314)) (or (= x var1314!val!1) (= x var1314!val!0)))\n  ;; -----------\n  ;; universe for var909:\n  ;;   var909!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var909!val!0 () var909)\n  ;; cardinality constraint:\n  (forall ((x var909)) (= x var909!val!0))\n  ;; -----------\n  (define-fun var1140!2 () String\n    \"Key \")\n  (define-fun var3449!1 () String\n    \"Key \\u{0}\\u{0}\")\n  (define-fun var3561!1 () String\n    \"Key \\u{0}\\u{0} already exists in processor map\")\n  (define-fun var1140!1 () String\n    \"\")\n  (define-fun var1367 () var1314\n    var1314!val!0)\n  (define-fun var1464 () String\n    (str.++ var1140!1 \"Key \" var3714 \" already exists in processor map\"))\n  (define-fun var501 () String\n    (str.++ var1140!1 \"Key \" var3714 \" already exists in processor map\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1133 () var909\n    var3630-ARCH_TO_PROCESSOR)\n  (define-fun var1140 () String\n    String-init)\n  (define-fun null-var1314 () var1314\n    var1314!val!1)\n  (define-fun var3714 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3538 () var3984\n    var3984-init)\n  (define-fun var3561 () String\n    (str.++ var1140!1 \"Key \" var3714))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3630-ARCH_TO_PROCESSOR () var909\n    var909!val!0)\n  (define-fun var423 () Bool\n    (var909_containsKey/1715618542\n  var3630-ARCH_TO_PROCESSOR\n  (cast-from-String-to-var3787 var3714)))\n  (define-fun var3449 () String\n    (str.++ var1140!1 \"Key \"))\n  (define-fun var3538!1 () var3984\n    var3984!val!0)\n  (define-fun var501!1 () String\n    \"\")\n  (define-fun var3984-init () var3984\n    var3984!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var909_containsKey/1715618542 ((x!0 var909) (x!1 var3787)) Bool\n    true)\n  (define-fun cast-from-String-to-var3787 ((x!0 String)) var3787\n    var3787!val!0)\n  (define-fun <init>/-1092629202 ((x!0 var3984) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 60 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 174850048,
            "run_time": 2.688802719116211,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1314/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.ArchUtils__addProcessor__-818065808\\13.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_33_4 =\r\n     concat(all_33_5, \" already exists in processor map\")\r\n   var3561!1 =\r\n     concat(all_30_4, \" already exists in processor map\")\r\n   var3449!1 =\r\n     concat(\"Key \", var3714)\r\n   all_33_5 =\r\n     concat(\"Key \", var3714)\r\n   all_30_4 =\r\n     concat(\"Key \", var3714)\r\n\r\n1991ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r2 := @parameter1: org.apache.commons.lang3.arch.Processor",
            "$r1 = <org.apache.commons.lang3.ArchUtils: java.util.Map ARCH_TO_PROCESSOR>",
            "$z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0)",
            "if $z0 == 0 goto $r3 = <org.apache.commons.lang3.ArchUtils: java.util.Map ARCH_TO_PROCESSOR>",
            "$r4 = new java.lang.IllegalStateException",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Key \")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" already exists in processor map\")",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r4.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r9)",
            "throw $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__intToHexDigitMsb0__635237191\\2026.smt2",
        "z3": {
            "memory": 32858112,
            "run_time": 0.15433788299560547,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3461 () String\r\n    (str.++ var2597!1 \"nibble value not between 0 and 15: \"))\r\n  (define-fun var3461!1 () String\r\n    \"nibble value not between 0 and 15: \")\r\n  (define-fun var2597 () String\r\n    String-init)\r\n  (define-fun var521 () var2468\r\n    var2468-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    17)\r\n  (define-fun var445 () String\r\n    (str.++ var2597!1 \"nibble value not between 0 and 15: \" (str.from_int var1637)))\r\n  (define-fun var1637 () Int\r\n    16)\r\n  (define-fun var3057 () String\r\n    (str.++ var2597!1 \"nibble value not between 0 and 15: \" (str.from_int var1637)))\r\n  (define-fun var2597!1 () String\r\n    \"\")\r\n  (define-fun var2597!2 () String\r\n    \"nibble value not between 0 and 15: \")\r\n  (define-fun var521!1 () var2468\r\n    var2468!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2468-init () var2468\r\n    var2468!val!0)\r\n  (define-fun var445!1 () String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var2468) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 44 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8851456,
            "run_time": 0.18533802032470703,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2468 is 1\r\n; rep: (as @var2468_0 var2468)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2468-init () var2468 (as @var2468_0 var2468))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_1280 var2468) (BOUND_VARIABLE_1281 String)) void (as @void_0 void))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var1637 () Int (- 1))\r\n(define-fun var2597!1 () String \"\")\r\n(define-fun var2597!2 () String \"nibble value not between 0 and 15: \")\r\n(define-fun var3461!1 () String \"nibble value not between 0 and 15: \")\r\n(define-fun var521!1 () var2468 (as @var2468_0 var2468))\r\n(define-fun var445!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38219776,
            "run_time": 0.24139118194580078,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2597 () String\n    String-init)\n  (define-fun var445 () String\n    (str.++ var2597!1 \"nibble value not between 0 and 15: \" (str.from_int var1637)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3057 () String\n    (str.++ var2597!1 \"nibble value not between 0 and 15: \" (str.from_int var1637)))\n  (define-fun null-Int () Int\n    17)\n  (define-fun var521 () var2468\n    var2468-init)\n  (define-fun var1637 () Int\n    16)\n  (define-fun var2597!2 () String\n    \"nibble value not between 0 and 15: \")\n  (define-fun var3461!1 () String\n    \"nibble value not between 0 and 15: \")\n  (define-fun var3461 () String\n    (str.++ var2597!1 \"nibble value not between 0 and 15: \"))\n  (define-fun var2597!1 () String\n    \"\")\n  (define-fun var521!1 () var2468\n    var2468!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2468-init () var2468\n    var2468!val!0)\n  (define-fun var445!1 () String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var2468) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 44 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180727808,
            "run_time": 2.5744025707244873,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3461!1 () String \"nibble value not between 0 and 15: \")\r\n  (define-fun var2597!2 () String \"nibble value not between 0 and 15: \")\r\n  (define-fun var2597!1 () String \"\")\r\n  (define-fun var1637 () Int 16)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun abbrev_105 ((x!0 Int)) String (ite (= x!0 0) \"nibble value not between 0 and 15: \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "i0 := @parameter0: int",
            "tableswitch(i0) {     case 0: goto return 48;     case 1: goto return 56;     case 2: goto return 52;     case 3: goto return 99;     case 4: goto return 50;     case 5: goto return 97;     case 6: goto return 54;     case 7: goto return 101;     case 8: goto return 49;     case 9: goto return 57;     case 10: goto return 53;     case 11: goto return 100;     case 12: goto return 51;     case 13: goto return 98;     case 14: goto return 55;     case 15: goto return 102;     default: goto $r0 = new java.lang.IllegalArgumentException; }",
            "$r0 = new java.lang.IllegalArgumentException",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"nibble value not between 0 and 15: \")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharUtils__toIntValue__-829675635\\406.smt2",
        "z3": {
            "memory": 32370688,
            "run_time": 0.3102424144744873,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun var181 () Bool\r\n    (var2857_isAsciiNumeric/641335549 var2134))\r\n  (define-fun var1713 () Int\r\n    var2134)\r\n  (define-fun var2134 () Int\r\n    0)\r\n  (define-fun var1469 () Int\r\n    (- var2134 48))\r\n  (define-fun var2857_isAsciiNumeric/641335549 ((x!0 Int)) Bool\r\n    true)\r\n)\r\n(error \"line 21 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10280960,
            "run_time": 0.06083178520202637,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2857 is 1\r\n; rep: (as @var2857_0 var2857)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2857_isAsciiNumeric/641335549 ((_arg_1 Int)) Bool true)\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2134 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34476032,
            "run_time": 0.32753515243530273,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    1)\n  (define-fun var1469 () Int\n    (- var2134 48))\n  (define-fun var181 () Bool\n    (var2857_isAsciiNumeric/641335549 var2134))\n  (define-fun var2134 () Int\n    0)\n  (define-fun var1713 () Int\n    var2134)\n  (define-fun var2857_isAsciiNumeric/641335549 ((x!0 Int)) Bool\n    true)\n)\n(error \"line 21 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 125943808,
            "run_time": 1.7474825382232666,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2134 () Int 1)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun var2857_isAsciiNumeric/641335549 ((x!0 Int)) Bool (ite (= x!0 1) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 2,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.CharUtils: boolean isAsciiNumeric(char)>(c0)",
            "if $z0 != 0 goto $i2 = (int) c0",
            "$i2 = (int) c0",
            "$i1 = $i2 - 48",
            "return $i1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitMsb0ToBinary__1576048278\\881.smt2",
        "z3": {
            "memory": 33202176,
            "run_time": 0.11721587181091309,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    67)\r\n  (define-fun var1410 () var260\r\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var260 var1810-TFTT)))\r\n  (define-fun var3503 () (Array Int Bool)\r\n    (cast-from-var260-to-__Array__Int__Bool__\r\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var260 var1810-TFTT))))\r\n  (define-fun var3798 () (Array Int Bool)\r\n    var1810-TFTT)\r\n  (define-fun var305 () Int\r\n    var2845)\r\n  (define-fun var2845 () Int\r\n    66)\r\n  (define-fun var1810-TFTT () (Array Int Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun clone/791635256 ((x!0 var260)) var260\r\n    var260!val!0)\r\n  (define-fun cast-from-__Array__Int__Bool__-to-var260 ((x!0 (Array Int Bool))) var260\r\n    var260!val!0)\r\n  (define-fun cast-from-var260-to-__Array__Int__Bool__ ((x!0 var260)) (Array Int\r\n         Bool)\r\n    ((as const (Array Int Bool)) false))\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2244608,
            "run_time": 0.07836294174194336,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1810 is 1\r\n; rep: (as @var1810_0 var1810)\r\n; cardinality of var260 is 1\r\n; rep: (as @var260_0 var260)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun clone/791635256 ((BOUND_VARIABLE_712 var260)) var260 (as @var260_0 var260))\r\n(define-fun cast-from-__Array__Int__Bool__-to-var260 ((BOUND_VARIABLE_715 (Array Int Bool))) var260 (as @var260_0 var260))\r\n(define-fun cast-from-var260-to-__Array__Int__Bool__ ((BOUND_VARIABLE_718 var260)) (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var1810-TFTT () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var2845 () Int 66)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35835904,
            "run_time": 0.9015989303588867,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    67)\n  (define-fun var3503 () (Array Int Bool)\n    (cast-from-var260-to-__Array__Int__Bool__\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var260 var1810-TFTT))))\n  (define-fun var305 () Int\n    var2845)\n  (define-fun var3798 () (Array Int Bool)\n    var1810-TFTT)\n  (define-fun var1410 () var260\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var260 var1810-TFTT)))\n  (define-fun var2845 () Int\n    66)\n  (define-fun var1810-TFTT () (Array Int Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun clone/791635256 ((x!0 var260)) var260\n    var260!val!0)\n  (define-fun cast-from-__Array__Int__Bool__-to-var260 ((x!0 (Array Int Bool))) var260\n    var260!val!0)\n  (define-fun cast-from-var260-to-__Array__Int__Bool__ ((x!0 var260)) (Array Int\n         Bool)\n    ((as const (Array Int Bool)) false))\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155312128,
            "run_time": 1.9845221042633057,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2845 () Int 66)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto $r45 = <org.apache.commons.lang3.Conversion: boolean[] FFFF>;     case 49: goto $r42 = <org.apache.commons.lang3.Conversion: boolean[] FFFT>;     case 50: goto $r39 = <org.apache.commons.lang3.Conversion: boolean[] FFTF>;     case 51: goto $r36 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 52: goto $r33 = <org.apache.commons.lang3.Conversion: boolean[] FTFF>;     case 53: goto $r30 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 54: goto $r27 = <org.apache.commons.lang3.Conversion: boolean[] FTTF>;     case 55: goto $r24 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 56: goto $r21 = <org.apache.commons.lang3.Conversion: boolean[] TFFF>;     case 57: goto $r18 = <org.apache.commons.lang3.Conversion: boolean[] TFFT>;     case 58: goto $r55 = new java.lang.IllegalArgumentException;     case 59: goto $r55 = new java.lang.IllegalArgumentException;     case 60: goto $r55 = new java.lang.IllegalArgumentException;     case 61: goto $r55 = new java.lang.IllegalArgumentException;     case 62: goto $r55 = new java.lang.IllegalArgumentException;     case 63: goto $r55 = new java.lang.IllegalArgumentException;     case 64: goto $r55 = new java.lang.IllegalArgumentException;     case 65: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 66: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 67: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 68: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 69: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 70: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     case 71: goto $r55 = new java.lang.IllegalArgumentException;     case 72: goto $r55 = new java.lang.IllegalArgumentException;     case 73: goto $r55 = new java.lang.IllegalArgumentException;     case 74: goto $r55 = new java.lang.IllegalArgumentException;     case 75: goto $r55 = new java.lang.IllegalArgumentException;     case 76: goto $r55 = new java.lang.IllegalArgumentException;     case 77: goto $r55 = new java.lang.IllegalArgumentException;     case 78: goto $r55 = new java.lang.IllegalArgumentException;     case 79: goto $r55 = new java.lang.IllegalArgumentException;     case 80: goto $r55 = new java.lang.IllegalArgumentException;     case 81: goto $r55 = new java.lang.IllegalArgumentException;     case 82: goto $r55 = new java.lang.IllegalArgumentException;     case 83: goto $r55 = new java.lang.IllegalArgumentException;     case 84: goto $r55 = new java.lang.IllegalArgumentException;     case 85: goto $r55 = new java.lang.IllegalArgumentException;     case 86: goto $r55 = new java.lang.IllegalArgumentException;     case 87: goto $r55 = new java.lang.IllegalArgumentException;     case 88: goto $r55 = new java.lang.IllegalArgumentException;     case 89: goto $r55 = new java.lang.IllegalArgumentException;     case 90: goto $r55 = new java.lang.IllegalArgumentException;     case 91: goto $r55 = new java.lang.IllegalArgumentException;     case 92: goto $r55 = new java.lang.IllegalArgumentException;     case 93: goto $r55 = new java.lang.IllegalArgumentException;     case 94: goto $r55 = new java.lang.IllegalArgumentException;     case 95: goto $r55 = new java.lang.IllegalArgumentException;     case 96: goto $r55 = new java.lang.IllegalArgumentException;     case 97: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 98: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 99: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 100: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 101: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 102: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     default: goto $r55 = new java.lang.IllegalArgumentException; }",
            "$r12 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>",
            "$r13 = virtualinvoke $r12.<java.lang.Object: java.lang.Object clone()>()",
            "$r14 = (boolean[]) $r13",
            "return $r14"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendContentEnd__-693719927\\1793.smt2",
        "z3": {
            "memory": 32784384,
            "run_time": 0.17943978309631348,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var41:\r\n  ;;   var41!val!1 var41!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var41!val!1 () var41)\r\n  (declare-fun var41!val!0 () var41)\r\n  ;; cardinality constraint:\r\n  (forall ((x var41)) (or (= x var41!val!1) (= x var41!val!0)))\r\n  ;; -----------\r\n  (define-fun var289 () var41\r\n    var41!val!0)\r\n  (define-fun var3488 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3787 () String\r\n    (contentEnd/-417041427 var289))\r\n  (define-fun null-var41 () var41\r\n    var41!val!1)\r\n  (define-fun var3488!1 () String\r\n    \"\")\r\n  (define-fun contentEnd/-417041427 ((x!0 var41)) String\r\n    \"\")\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11452416,
            "run_time": 0.046375274658203125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var41 is 2\r\n; rep: (as @var41_0 var41)\r\n; rep: (as @var41_1 var41)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun contentEnd/-417041427 ((BOUND_VARIABLE_609 var41)) String \"\")\r\n(define-fun null-var41 () var41 (as @var41_0 var41))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var289 () var41 (as @var41_1 var41))\r\n(define-fun var3488 () String \"\")\r\n(define-fun var3488!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38948864,
            "run_time": 1.089914321899414,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 23 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 133541888,
            "run_time": 2.065685272216797,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendContentEnd__-693719927\\1793.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3488!1 =\r\n     concat(var3488, rhs)\r\n   ... sat\r\n\r\n1219ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "$r2 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String contentEnd>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.mutable.MutableDouble__toString__-1922506942\\3095.smt2",
        "z3": {
            "memory": 32161792,
            "run_time": 0.27973175048828125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1959:\r\n  ;;   var1959!val!1 var1959!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1959!val!1 () var1959)\r\n  (declare-fun var1959!val!0 () var1959)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1959)) (or (= x var1959!val!1) (= x var1959!val!0)))\r\n  ;; -----------\r\n  (define-fun var2228 () String\r\n    (String_valueOf/-987357574 (value/1694193706 var736)))\r\n  (define-fun null-var1959 () var1959\r\n    var1959!val!1)\r\n  (define-fun var736 () var1959\r\n    var1959!val!0)\r\n  (define-fun var2665 () Float64\r\n    (value/1694193706 var736))\r\n  (define-fun value/1694193706 ((x!0 var1959)) Float64\r\n    (_ NaN 11 53))\r\n  (define-fun String_valueOf/-987357574 ((x!0 Float64)) String\r\n    \"\")\r\n)\r\n(error \"line 18 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12668928,
            "run_time": 0.045998334884643555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1959 is 2\r\n; rep: (as @var1959_0 var1959)\r\n; rep: (as @var1959_1 var1959)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun value/1694193706 ((BOUND_VARIABLE_417 var1959)) (_ FloatingPoint 11 53) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun String_valueOf/-987357574 ((BOUND_VARIABLE_421 (_ FloatingPoint 11 53))) String \"\")\r\n(define-fun null-var1959 () var1959 (as @var1959_0 var1959))\r\n(define-fun var736 () var1959 (as @var1959_1 var1959))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34848768,
            "run_time": 0.3732147216796875,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1959:\n  ;;   var1959!val!1 var1959!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1959!val!1 () var1959)\n  (declare-fun var1959!val!0 () var1959)\n  ;; cardinality constraint:\n  (forall ((x var1959)) (or (= x var1959!val!1) (= x var1959!val!0)))\n  ;; -----------\n  (define-fun var2665 () Float64\n    (value/1694193706 var736))\n  (define-fun null-var1959 () var1959\n    var1959!val!1)\n  (define-fun var736 () var1959\n    var1959!val!0)\n  (define-fun var2228 () String\n    (String_valueOf/-987357574 (value/1694193706 var736)))\n  (define-fun value/1694193706 ((x!0 var1959)) Float64\n    (_ NaN 11 53))\n  (define-fun String_valueOf/-987357574 ((x!0 Float64)) String\n    \"\")\n)\n(error \"line 18 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 119169024,
            "run_time": 1.249422311782837,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.mutable.MutableDouble__toString__-1922506942\\3095.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n654ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 1,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(double)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(double)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.mutable.MutableDouble",
            "$d0 = r0.<org.apache.commons.lang3.mutable.MutableDouble: double value>",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>($d0)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle__appendDetail__497862188\\1444.smt2",
        "z3": {
            "memory": 32264192,
            "run_time": 0.3067493438720703,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 33 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.07744765281677246,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34410496,
            "run_time": 0.42278265953063965,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 33 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 139649024,
            "run_time": 1.822887659072876,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
            "r1 := @parameter0: java.lang.StringBuffer",
            "r7 := @parameter1: java.lang.String",
            "r0 := @parameter2: java.util.Collection",
            "if r0 == null goto virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0)",
            "virtualinvoke r1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r0)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitMsb0ToInt__696600923\\1162.smt2",
        "z3": {
            "memory": 32710656,
            "run_time": 0.08771777153015137,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    68)\r\n  (define-fun var3099 () Int\r\n    var2229)\r\n  (define-fun var2229 () Int\r\n    67)\r\n)\r\n(error \"line 17 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9064448,
            "run_time": 0.04659628868103027,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-Int () Int 0)\r\n(define-fun var2229 () Int 67)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37265408,
            "run_time": 0.15588092803955078,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    68)\n  (define-fun var3099 () Int\n    var2229)\n  (define-fun var2229 () Int\n    67)\n)\n(error \"line 17 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152260608,
            "run_time": 1.7912771701812744,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2229 () Int 67)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 2,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto return 0;     case 49: goto return 8;     case 50: goto return 4;     case 51: goto return 12;     case 52: goto return 2;     case 53: goto return 10;     case 54: goto return 6;     case 55: goto return 14;     case 56: goto return 1;     case 57: goto return 9;     case 58: goto $r7 = new java.lang.IllegalArgumentException;     case 59: goto $r7 = new java.lang.IllegalArgumentException;     case 60: goto $r7 = new java.lang.IllegalArgumentException;     case 61: goto $r7 = new java.lang.IllegalArgumentException;     case 62: goto $r7 = new java.lang.IllegalArgumentException;     case 63: goto $r7 = new java.lang.IllegalArgumentException;     case 64: goto $r7 = new java.lang.IllegalArgumentException;     case 65: goto return 5;     case 66: goto return 13;     case 67: goto return 3;     case 68: goto return 11;     case 69: goto return 7;     case 70: goto return 15;     case 71: goto $r7 = new java.lang.IllegalArgumentException;     case 72: goto $r7 = new java.lang.IllegalArgumentException;     case 73: goto $r7 = new java.lang.IllegalArgumentException;     case 74: goto $r7 = new java.lang.IllegalArgumentException;     case 75: goto $r7 = new java.lang.IllegalArgumentException;     case 76: goto $r7 = new java.lang.IllegalArgumentException;     case 77: goto $r7 = new java.lang.IllegalArgumentException;     case 78: goto $r7 = new java.lang.IllegalArgumentException;     case 79: goto $r7 = new java.lang.IllegalArgumentException;     case 80: goto $r7 = new java.lang.IllegalArgumentException;     case 81: goto $r7 = new java.lang.IllegalArgumentException;     case 82: goto $r7 = new java.lang.IllegalArgumentException;     case 83: goto $r7 = new java.lang.IllegalArgumentException;     case 84: goto $r7 = new java.lang.IllegalArgumentException;     case 85: goto $r7 = new java.lang.IllegalArgumentException;     case 86: goto $r7 = new java.lang.IllegalArgumentException;     case 87: goto $r7 = new java.lang.IllegalArgumentException;     case 88: goto $r7 = new java.lang.IllegalArgumentException;     case 89: goto $r7 = new java.lang.IllegalArgumentException;     case 90: goto $r7 = new java.lang.IllegalArgumentException;     case 91: goto $r7 = new java.lang.IllegalArgumentException;     case 92: goto $r7 = new java.lang.IllegalArgumentException;     case 93: goto $r7 = new java.lang.IllegalArgumentException;     case 94: goto $r7 = new java.lang.IllegalArgumentException;     case 95: goto $r7 = new java.lang.IllegalArgumentException;     case 96: goto $r7 = new java.lang.IllegalArgumentException;     case 97: goto return 5;     case 98: goto return 13;     case 99: goto return 3;     case 100: goto return 11;     case 101: goto return 7;     case 102: goto return 15;     default: goto $r7 = new java.lang.IllegalArgumentException; }",
            "return 3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharSequenceUtils__lastIndexOf__445018499\\96.smt2",
        "z3": {
            "memory": 32378880,
            "run_time": 0.18670201301574707,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1910 () String\r\n    var1791)\r\n  (define-fun var477 () Int\r\n    1)\r\n  (define-fun var784 () Int\r\n    1)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var3609 () Bool\r\n    true)\r\n  (define-fun var1791 () String\r\n    \"!0!\")\r\n  (define-fun var1729 () Int\r\n    (lastIndexOf/679652410 var1791 var477 var784))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun lastIndexOf/679652410 ((x!0 String) (x!1 Int) (x!2 Int)) Int\r\n    0)\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12271616,
            "run_time": 0.12555480003356934,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun lastIndexOf/679652410 ((BOUND_VARIABLE_563 String) (BOUND_VARIABLE_564 Int) (BOUND_VARIABLE_565 Int)) Int 0)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int 0)\r\n(define-fun var1791 () String \"\")\r\n(define-fun var477 () Int 1)\r\n(define-fun var784 () Int 1)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37253120,
            "run_time": 0.2929708957672119,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    0)\n  (define-fun var1910 () String\n    var1791)\n  (define-fun var477 () Int\n    1)\n  (define-fun var784 () Int\n    1)\n  (define-fun var3609 () Bool\n    true)\n  (define-fun var1729 () Int\n    (lastIndexOf/679652410 var1791 var477 var784))\n  (define-fun var1791 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun lastIndexOf/679652410 ((x!0 String) (x!1 Int) (x!2 Int)) Int\n    0)\n)\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141971456,
            "run_time": 2.0060832500457764,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var784 () Int 1)\r\n  (define-fun var477 () Int 1)\r\n  (define-fun var1791 () String \"\\u{0}\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int lastIndexOf(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int lastIndexOf(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "i1 := @parameter1: int",
            "i10 := @parameter2: int",
            "$z0 = r0 instanceof java.lang.String",
            "if $z0 == 0 goto i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$r1 = (java.lang.String) r0",
            "$i9 = virtualinvoke $r1.<java.lang.String: int lastIndexOf(int,int)>(i1, i10)",
            "return $i9"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendFieldSeparator__-17802560\\2509.smt2",
        "z3": {
            "memory": 32858112,
            "run_time": 0.1938774585723877,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var768:\r\n  ;;   var768!val!1 var768!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var768!val!1 () var768)\r\n  (declare-fun var768!val!0 () var768)\r\n  ;; cardinality constraint:\r\n  (forall ((x var768)) (or (= x var768!val!1) (= x var768!val!0)))\r\n  ;; -----------\r\n  (define-fun var307 () var768\r\n    var768!val!0)\r\n  (define-fun var1803 () String\r\n    \"\")\r\n  (define-fun var1803!1 () String\r\n    \"\")\r\n  (define-fun var1534 () String\r\n    (fieldSeparator/-417041427 var307))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun null-var768 () var768\r\n    var768!val!1)\r\n  (define-fun fieldSeparator/-417041427 ((x!0 var768)) String\r\n    \"\")\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10018816,
            "run_time": 0.043970346450805664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var768 is 2\r\n; rep: (as @var768_0 var768)\r\n; rep: (as @var768_1 var768)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun fieldSeparator/-417041427 ((BOUND_VARIABLE_609 var768)) String \"\")\r\n(define-fun null-var768 () var768 (as @var768_0 var768))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var307 () var768 (as @var768_1 var768))\r\n(define-fun var1803 () String \"\")\r\n(define-fun var1803!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38064128,
            "run_time": 0.40804004669189453,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 23 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 131194880,
            "run_time": 2.0231242179870605,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendFieldSeparator__-17802560\\2509.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1803!1 =\r\n     concat(var1803, rhs)\r\n   ... sat\r\n\r\n1438ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "$r2 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String fieldSeparator>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.math.NumberUtils__getMantissa__-708117625\\2812.smt2",
        "z3": {
            "memory": 33132544,
            "run_time": 0.21715021133422852,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2738 () Int\r\n    1)\r\n  (define-fun var473 () Int\r\n    (str.to_code (str.at var3327 0)))\r\n  (define-fun var3327 () String\r\n    \"-\")\r\n  (define-fun var2804 () Int\r\n    (str.to_code (str.at var3327 0)))\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var756 () Bool\r\n    (ite (= 1 1) true false))\r\n  (define-fun var1832 () String\r\n    (str.substr var3327 1 (- var2738 1)))\r\n)\r\n(error \"line 34 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9428992,
            "run_time": 0.15895295143127441,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2321 is 1\r\n; rep: (as @var2321_0 var2321)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"\")\r\n(define-fun null-Int () Int 0)\r\n(define-fun var3327 () String \"-\")\r\n(define-fun var2738 () Int 1)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37994496,
            "run_time": 0.21426177024841309,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var473 () Int\n    (str.to_code (str.at var3327 0)))\n  (define-fun var756 () Bool\n    (ite (= 1 1) true false))\n  (define-fun var3327 () String\n    \"-\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1832 () String\n    (str.substr var3327 1 (- var2738 1)))\n  (define-fun null-Int () Int\n    2)\n  (define-fun var2804 () Int\n    (str.to_code (str.at var3327 0)))\n  (define-fun var2738 () Int\n    1)\n)\n(error \"line 34 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154456064,
            "run_time": 2.1440768241882324,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_11_0, 45)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.math.NumberUtils__getMantissa__-708117625\\2812.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n1562ms\r\n"
        },
        "undefined_function_count": 0,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i1 := @parameter1: int",
            "c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i2 = (int) c0",
            "if $i2 == 45 goto $z0 = 1",
            "$z0 = 1",
            "goto [?= (branch)]",
            "if $z0 == 0 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1)",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(1, i1)",
            "goto [?= return $r1]",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__-596259599\\2413.smt2",
        "z3": {
            "memory": 32817152,
            "run_time": 0.1340625286102295,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3095:\r\n  ;;   var3095!val!0 var3095!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3095!val!0 () var3095)\r\n  (declare-fun var3095!val!1 () var3095)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3095)) (or (= x var3095!val!0) (= x var3095!val!1)))\r\n  ;; -----------\r\n  (define-fun var3754 () var3095\r\n    var3095!val!0)\r\n  (define-fun var331 () Int\r\n    1)\r\n  (define-fun var2037 () Int\r\n    var331)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var351 () String\r\n    \"!0!\")\r\n  (define-fun var210 () String\r\n    \"!2!\")\r\n  (define-fun null-var3095 () var3095\r\n    var3095!val!1)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var2037!1 () Int\r\n    0)\r\n  (define-fun var351!1 () String\r\n    \"\")\r\n  (define-fun append/1845021834 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2244608,
            "run_time": 0.15717172622680664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3095 is 2\r\n; rep: (as @var3095_0 var3095)\r\n; rep: (as @var3095_1 var3095)\r\n; cardinality of var3533 is 1\r\n; rep: (as @var3533_0 var3533)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun append/1845021834 ((BOUND_VARIABLE_566 String) (BOUND_VARIABLE_567 Int)) String \"\")\r\n(define-fun null-var3095 () var3095 (as @var3095_0 var3095))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3754 () var3095 (as @var3095_1 var3095))\r\n(define-fun var351 () String \"\")\r\n(define-fun var210 () String \"\")\r\n(define-fun var331 () Int 0)\r\n(define-fun var351!1 () String \"\")\r\n(define-fun var2037!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37531648,
            "run_time": 0.1685347557067871,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3095:\n  ;;   var3095!val!0 var3095!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3095!val!0 () var3095)\n  (declare-fun var3095!val!1 () var3095)\n  ;; cardinality constraint:\n  (forall ((x var3095)) (or (= x var3095!val!0) (= x var3095!val!1)))\n  ;; -----------\n  (define-fun null-Int () Int\n    0)\n  (define-fun null-var3095 () var3095\n    var3095!val!1)\n  (define-fun var3754 () var3095\n    var3095!val!0)\n  (define-fun var351 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var331 () Int\n    1)\n  (define-fun var2037 () Int\n    var331)\n  (define-fun var210 () String\n    \"\\u{0}\")\n  (define-fun var2037!1 () Int\n    0)\n  (define-fun var351!1 () String\n    \"\")\n  (define-fun append/1845021834 ((x!0 String) (x!1 Int)) String\n    \"\")\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141598720,
            "run_time": 1.9917645454406738,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var331 () Int 1)\r\n  (define-fun var210 () String \"\\u{0}\")\r\n  (define-fun var351 () String \"\\u{0}\")\r\n  (define-fun var3754 () var3095 var3095!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3095 () var3095 var3095!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(int)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r2 := @parameter1: java.lang.String",
            "s0 := @parameter2: short",
            "$i1 = (int) s0",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>($i1)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ClassPathUtils__toFullyQualifiedPath__-810305134\\127.smt2",
        "z3": {
            "memory": 32464896,
            "run_time": 0.10129022598266602,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var680:\r\n  ;;   var680!val!1 var680!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var680!val!1 () var680)\r\n  (declare-fun var680!val!0 () var680)\r\n  ;; cardinality constraint:\r\n  (forall ((x var680)) (or (= x var680!val!1) (= x var680!val!0)))\r\n  ;; -----------\r\n  (define-fun var1140 () String\r\n    (str.++ var2727!1\r\n        (var3173_packageToPath/-652765388 (getName/-900081029 var300!1))\r\n        \"/\"\r\n        var2842!1))\r\n  (define-fun var898 () String\r\n    (str.++ var2727!1\r\n        (var3173_packageToPath/-652765388 (getName/-900081029 var300!1))))\r\n  (define-fun var476 () String\r\n    (var3173_packageToPath/-652765388 (getName/-900081029 var300!1)))\r\n  (define-fun var1251 () String\r\n    (str.++ var2727!1\r\n        (var3173_packageToPath/-652765388 (getName/-900081029 var300!1))\r\n        \"/\"\r\n        var2842!1))\r\n  (define-fun var300 () var680\r\n    var680!val!0)\r\n  (define-fun var1300 () String\r\n    (str.++ var2727!1\r\n        (var3173_packageToPath/-652765388 (getName/-900081029 var300!1))\r\n        \"/\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2944 () String\r\n    (getName/-900081029 var300!1))\r\n  (define-fun var2727 () String\r\n    String-init)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun null-var680 () var680\r\n    var680!val!1)\r\n  (define-fun var2842 () String\r\n    \"A\")\r\n  (define-fun var300!1 () var680\r\n    var680!val!1)\r\n  (define-fun var2842!1 () String\r\n    \"\")\r\n  (define-fun var1300!1 () String\r\n    \"/\")\r\n  (define-fun var2727!2 () String\r\n    \"\")\r\n  (define-fun var898!1 () String\r\n    \"/\")\r\n  (define-fun var2727!1 () String\r\n    \"\")\r\n  (define-fun var3560 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var151 () String\r\n    \"\")\r\n  (define-fun getName/-900081029 ((x!0 var680)) String\r\n    \"\")\r\n  (define-fun var3173_packageToPath/-652765388 ((x!0 String)) String\r\n    \"\")\r\n  (define-fun var1276_requireNonNull/1378936425 ((x!0 var3140) (x!1 String)) var3140\r\n    var3140!val!0)\r\n  (define-fun cast-from-String-to-var3140 ((x!0 String)) var3140\r\n    var3140!val!0)\r\n  (define-fun cast-from-var680-to-var3140 ((x!0 var680)) var3140\r\n    var3140!val!0)\r\n)\r\n(error \"line 60 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.03191184997558594,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var680 is 2\r\n; rep: (as @var680_0 var680)\r\n; rep: (as @var680_1 var680)\r\n; cardinality of var1576 is 1\r\n; rep: (as @var1576_0 var1576)\r\n; cardinality of var1276 is 1\r\n; rep: (as @var1276_0 var1276)\r\n; cardinality of var3140 is 1\r\n; rep: (as @var3140_0 var3140)\r\n; cardinality of var3173 is 1\r\n; rep: (as @var3173_0 var3173)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1276_requireNonNull/1378936425 ((BOUND_VARIABLE_637 var3140) (BOUND_VARIABLE_638 String)) var3140 (as @var3140_0 var3140))\r\n(define-fun cast-from-var680-to-var3140 ((BOUND_VARIABLE_641 var680)) var3140 (as @var3140_0 var3140))\r\n(define-fun cast-from-String-to-var3140 ((BOUND_VARIABLE_644 String)) var3140 (as @var3140_0 var3140))\r\n(define-fun String-init () String \"\")\r\n(define-fun getName/-900081029 ((BOUND_VARIABLE_647 var680)) String \"\")\r\n(define-fun var3173_packageToPath/-652765388 ((BOUND_VARIABLE_650 String)) String \"\")\r\n(define-fun null-var680 () var680 (as @var680_0 var680))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var300 () var680 (as @var680_1 var680))\r\n(define-fun var2842 () String \"\")\r\n(define-fun var300!1 () var680 (as @var680_0 var680))\r\n(define-fun var151 () String \"\")\r\n(define-fun var2842!1 () String \"\")\r\n(define-fun var3560 () String \"\")\r\n(define-fun var2727!1 () String \"\")\r\n(define-fun var2727!2 () String \"\")\r\n(define-fun var898!1 () String \"/\")\r\n(define-fun var1300!1 () String \"/\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37576704,
            "run_time": 0.17017483711242676,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var680:\n  ;;   var680!val!1 var680!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var680!val!1 () var680)\n  (declare-fun var680!val!0 () var680)\n  ;; cardinality constraint:\n  (forall ((x var680)) (or (= x var680!val!1) (= x var680!val!0)))\n  ;; -----------\n  (define-fun var2727!1 () String\n    \"\")\n  (define-fun var898!1 () String\n    \"/\")\n  (define-fun var2727!2 () String\n    \"\")\n  (define-fun var1300!1 () String\n    \"/\")\n  (define-fun var1300 () String\n    (str.++ var2727!1\n        (var3173_packageToPath/-652765388 (getName/-900081029 var300!1))\n        \"/\"))\n  (define-fun var300 () var680\n    var680!val!0)\n  (define-fun var2842!1 () String\n    \"\")\n  (define-fun var300!1 () var680\n    var680!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2944 () String\n    (getName/-900081029 var300!1))\n  (define-fun var2727 () String\n    String-init)\n  (define-fun var1140 () String\n    (str.++ var2727!1\n        (var3173_packageToPath/-652765388 (getName/-900081029 var300!1))\n        \"/\"\n        var2842!1))\n  (define-fun var476 () String\n    (var3173_packageToPath/-652765388 (getName/-900081029 var300!1)))\n  (define-fun null-var680 () var680\n    var680!val!1)\n  (define-fun var1251 () String\n    (str.++ var2727!1\n        (var3173_packageToPath/-652765388 (getName/-900081029 var300!1))\n        \"/\"\n        var2842!1))\n  (define-fun var898 () String\n    (str.++ var2727!1\n        (var3173_packageToPath/-652765388 (getName/-900081029 var300!1))))\n  (define-fun var2842 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3560 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var151 () String\n    \"\")\n  (define-fun getName/-900081029 ((x!0 var680)) String\n    \"\")\n  (define-fun var3173_packageToPath/-652765388 ((x!0 String)) String\n    \"\")\n  (define-fun var1276_requireNonNull/1378936425 ((x!0 var3140) (x!1 String)) var3140\n    var3140!val!0)\n  (define-fun cast-from-String-to-var3140 ((x!0 String)) var3140\n    var3140!val!0)\n  (define-fun cast-from-var680-to-var3140 ((x!0 var680)) var3140\n    var3140!val!0)\n)\n(error \"line 60 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179138560,
            "run_time": 2.5315628051757812,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var680/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.ClassPathUtils__toFullyQualifiedPath__-810305134\\127.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1300!1 =\r\n     concat(all_26_4, var2842!1)\r\n   var898!1 =\r\n     concat(var2727!2, \"/\")\r\n   all_26_4 =\r\n     concat(var2727!2, \"/\")\r\n\r\n1912ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Package",
            "r1 := @parameter1: java.lang.String",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"context\")",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"resourceName\")",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke r0.<java.lang.Package: java.lang.String getName()>()",
            "$r4 = staticinvoke <org.apache.commons.lang3.ClassPathUtils: java.lang.String packageToPath(java.lang.String)>($r3)",
            "$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"/\")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitToBinary__-2007689494\\1433.smt2",
        "z3": {
            "memory": 33189888,
            "run_time": 0.1007080078125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3911 () (Array Int Bool)\r\n    var3080-FFTT)\r\n  (define-fun null-Int () Int\r\n    68)\r\n  (define-fun var1470 () (Array Int Bool)\r\n    (cast-from-var132-to-__Array__Int__Bool__\r\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var132 var3080-FFTT))))\r\n  (define-fun var1406 () var132\r\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var132 var3080-FFTT)))\r\n  (define-fun var1265 () Int\r\n    var2320)\r\n  (define-fun var2320 () Int\r\n    67)\r\n  (define-fun var3080-FFTT () (Array Int Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun cast-from-var132-to-__Array__Int__Bool__ ((x!0 var132)) (Array Int\r\n         Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun clone/791635256 ((x!0 var132)) var132\r\n    var132!val!0)\r\n  (define-fun cast-from-__Array__Int__Bool__-to-var132 ((x!0 (Array Int Bool))) var132\r\n    var132!val!0)\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2260992,
            "run_time": 0.030658960342407227,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3080 is 1\r\n; rep: (as @var3080_0 var3080)\r\n; cardinality of var132 is 1\r\n; rep: (as @var132_0 var132)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun clone/791635256 ((BOUND_VARIABLE_726 var132)) var132 (as @var132_0 var132))\r\n(define-fun cast-from-__Array__Int__Bool__-to-var132 ((BOUND_VARIABLE_729 (Array Int Bool))) var132 (as @var132_0 var132))\r\n(define-fun cast-from-var132-to-__Array__Int__Bool__ ((BOUND_VARIABLE_732 var132)) (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var3080-FFTT () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var2320 () Int 67)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36831232,
            "run_time": 0.24723410606384277,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    68)\n  (define-fun var1265 () Int\n    var2320)\n  (define-fun var3911 () (Array Int Bool)\n    var3080-FFTT)\n  (define-fun var1470 () (Array Int Bool)\n    (cast-from-var132-to-__Array__Int__Bool__\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var132 var3080-FFTT))))\n  (define-fun var1406 () var132\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var132 var3080-FFTT)))\n  (define-fun var2320 () Int\n    67)\n  (define-fun var3080-FFTT () (Array Int Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun cast-from-var132-to-__Array__Int__Bool__ ((x!0 var132)) (Array Int\n         Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun clone/791635256 ((x!0 var132)) var132\n    var132!val!0)\n  (define-fun cast-from-__Array__Int__Bool__-to-var132 ((x!0 (Array Int Bool))) var132\n    var132!val!0)\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155398144,
            "run_time": 2.2886154651641846,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2320 () Int 67)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto $r45 = <org.apache.commons.lang3.Conversion: boolean[] FFFF>;     case 49: goto $r42 = <org.apache.commons.lang3.Conversion: boolean[] TFFF>;     case 50: goto $r39 = <org.apache.commons.lang3.Conversion: boolean[] FTFF>;     case 51: goto $r36 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 52: goto $r33 = <org.apache.commons.lang3.Conversion: boolean[] FFTF>;     case 53: goto $r30 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 54: goto $r27 = <org.apache.commons.lang3.Conversion: boolean[] FTTF>;     case 55: goto $r24 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 56: goto $r21 = <org.apache.commons.lang3.Conversion: boolean[] FFFT>;     case 57: goto $r18 = <org.apache.commons.lang3.Conversion: boolean[] TFFT>;     case 58: goto $r55 = new java.lang.IllegalArgumentException;     case 59: goto $r55 = new java.lang.IllegalArgumentException;     case 60: goto $r55 = new java.lang.IllegalArgumentException;     case 61: goto $r55 = new java.lang.IllegalArgumentException;     case 62: goto $r55 = new java.lang.IllegalArgumentException;     case 63: goto $r55 = new java.lang.IllegalArgumentException;     case 64: goto $r55 = new java.lang.IllegalArgumentException;     case 65: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 66: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 67: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 68: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 69: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 70: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     case 71: goto $r55 = new java.lang.IllegalArgumentException;     case 72: goto $r55 = new java.lang.IllegalArgumentException;     case 73: goto $r55 = new java.lang.IllegalArgumentException;     case 74: goto $r55 = new java.lang.IllegalArgumentException;     case 75: goto $r55 = new java.lang.IllegalArgumentException;     case 76: goto $r55 = new java.lang.IllegalArgumentException;     case 77: goto $r55 = new java.lang.IllegalArgumentException;     case 78: goto $r55 = new java.lang.IllegalArgumentException;     case 79: goto $r55 = new java.lang.IllegalArgumentException;     case 80: goto $r55 = new java.lang.IllegalArgumentException;     case 81: goto $r55 = new java.lang.IllegalArgumentException;     case 82: goto $r55 = new java.lang.IllegalArgumentException;     case 83: goto $r55 = new java.lang.IllegalArgumentException;     case 84: goto $r55 = new java.lang.IllegalArgumentException;     case 85: goto $r55 = new java.lang.IllegalArgumentException;     case 86: goto $r55 = new java.lang.IllegalArgumentException;     case 87: goto $r55 = new java.lang.IllegalArgumentException;     case 88: goto $r55 = new java.lang.IllegalArgumentException;     case 89: goto $r55 = new java.lang.IllegalArgumentException;     case 90: goto $r55 = new java.lang.IllegalArgumentException;     case 91: goto $r55 = new java.lang.IllegalArgumentException;     case 92: goto $r55 = new java.lang.IllegalArgumentException;     case 93: goto $r55 = new java.lang.IllegalArgumentException;     case 94: goto $r55 = new java.lang.IllegalArgumentException;     case 95: goto $r55 = new java.lang.IllegalArgumentException;     case 96: goto $r55 = new java.lang.IllegalArgumentException;     case 97: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 98: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 99: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 100: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 101: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 102: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     default: goto $r55 = new java.lang.IllegalArgumentException; }",
            "$r9 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>",
            "$r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Object clone()>()",
            "$r11 = (boolean[]) $r10",
            "return $r11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharUtils__toCharacterObject__-940816840\\350.smt2",
        "z3": {
            "memory": 32817152,
            "run_time": 0.16792750358581543,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2120 () var3719\r\n    (var3719_valueOf/-1186540555 (str.to_code (str.at var2219 0))))\r\n  (define-fun var3805 () Bool\r\n    (var156_isEmpty/1595667738 var2219))\r\n  (define-fun var3477 () Int\r\n    (str.to_code (str.at var2219 0)))\r\n  (define-fun null-String () String\r\n    \"B\")\r\n  (define-fun var2219 () String\r\n    \"A\")\r\n  (define-fun var156_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun var3719_valueOf/-1186540555 ((x!0 Int)) var3719\r\n    var3719!val!0)\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 5390336,
            "run_time": 0.12753939628601074,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2987 is 1\r\n; rep: (as @var2987_0 var2987)\r\n; cardinality of var156 is 1\r\n; rep: (as @var156_0 var156)\r\n; cardinality of var3719 is 1\r\n; rep: (as @var3719_0 var3719)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var156_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun var3719_valueOf/-1186540555 ((BOUND_VARIABLE_558 Int)) var3719 (as @var3719_0 var3719))\r\n(define-fun null-String () String \"\")\r\n(define-fun var2219 () String \"A\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37212160,
            "run_time": 0.13426852226257324,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2219 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2120 () var3719\n    (var3719_valueOf/-1186540555 (str.to_code (str.at var2219 0))))\n  (define-fun var3477 () Int\n    (str.to_code (str.at var2219 0)))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3805 () Bool\n    (var156_isEmpty/1595667738 var2219))\n  (define-fun var156_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n  (define-fun var3719_valueOf/-1186540555 ((x!0 Int)) var3719\n    var3719!val!0)\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166395904,
            "run_time": 2.4108002185821533,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2219 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var156_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\\u{0}\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto $c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$r1 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c0)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ArchUtils__addProcessor__-818065808\\38.smt2",
        "z3": {
            "memory": 31830016,
            "run_time": 0.13413023948669434,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2682:\r\n  ;;   var2682!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2682!val!0 () var2682)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2682)) (= x var2682!val!0))\r\n  ;; -----------\r\n  ;; universe for var1232:\r\n  ;;   var1232!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1232!val!0 () var1232)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1232)) (= x var1232!val!0))\r\n  ;; -----------\r\n  ;; universe for var735:\r\n  ;;   var735!val!1 var735!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var735!val!1 () var735)\r\n  (declare-fun var735!val!0 () var735)\r\n  ;; cardinality constraint:\r\n  (forall ((x var735)) (or (= x var735!val!1) (= x var735!val!0)))\r\n  ;; -----------\r\n  (define-fun var2617-ARCH_TO_PROCESSOR () var1232\r\n    var1232!val!0)\r\n  (define-fun var3017 () var1232\r\n    var2617-ARCH_TO_PROCESSOR)\r\n  (define-fun var1233 () var735\r\n    var735!val!0)\r\n  (define-fun null-var735 () var735\r\n    var735!val!1)\r\n  (define-fun var3980 () Bool\r\n    (var1232_containsKey/1715618542\r\n  var2617-ARCH_TO_PROCESSOR\r\n  (cast-from-String-to-var2682 var282)))\r\n  (define-fun var1985 () var1232\r\n    var2617-ARCH_TO_PROCESSOR)\r\n  (define-fun var282 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1985!1 () var1232\r\n    var1232!val!0)\r\n  (define-fun var1233!1 () var735\r\n    var735!val!1)\r\n  (define-fun var282!1 () String\r\n    \"\")\r\n  (define-fun cast-from-String-to-var2682 ((x!0 String)) var2682\r\n    var2682!val!0)\r\n  (define-fun var1232_containsKey/1715618542 ((x!0 var1232) (x!1 var2682)) Bool\r\n    false)\r\n  (define-fun cast-from-var735-to-var2682 ((x!0 var735)) var2682\r\n    var2682!val!0)\r\n  (define-fun var1232_put/1464166817 ((x!0 var1232) (x!1 var2682) (x!2 var2682)) var2682\r\n    var2682!val!0)\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2244608,
            "run_time": 0.04660773277282715,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1969 is 1\r\n; rep: (as @var1969_0 var1969)\r\n; cardinality of var735 is 2\r\n; rep: (as @var735_0 var735)\r\n; rep: (as @var735_1 var735)\r\n; cardinality of var1232 is 1\r\n; rep: (as @var1232_0 var1232)\r\n; cardinality of var2617 is 1\r\n; rep: (as @var2617_0 var2617)\r\n; cardinality of var2682 is 1\r\n; rep: (as @var2682_0 var2682)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1232_containsKey/1715618542 ((_arg_1 var1232) (_arg_2 var2682)) Bool false)\r\n(define-fun cast-from-String-to-var2682 ((_arg_1 String)) var2682 (as @var2682_0 var2682))\r\n(define-fun var1232_put/1464166817 ((BOUND_VARIABLE_544 var1232) (BOUND_VARIABLE_545 var2682) (BOUND_VARIABLE_546 var2682)) var2682 (as @var2682_0 var2682))\r\n(define-fun cast-from-var735-to-var2682 ((BOUND_VARIABLE_549 var735)) var2682 (as @var2682_0 var2682))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var735 () var735 (as @var735_0 var735))\r\n(define-fun var2617-ARCH_TO_PROCESSOR () var1232 (as @var1232_0 var1232))\r\n(define-fun var282 () String \"\")\r\n(define-fun var1233 () var735 (as @var735_1 var735))\r\n(define-fun var1985!1 () var1232 (as @var1232_0 var1232))\r\n(define-fun var282!1 () String \"\")\r\n(define-fun var1233!1 () var735 (as @var735_0 var735))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37965824,
            "run_time": 0.1396627426147461,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2682:\n  ;;   var2682!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2682!val!0 () var2682)\n  ;; cardinality constraint:\n  (forall ((x var2682)) (= x var2682!val!0))\n  ;; -----------\n  ;; universe for var1232:\n  ;;   var1232!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1232!val!0 () var1232)\n  ;; cardinality constraint:\n  (forall ((x var1232)) (= x var1232!val!0))\n  ;; -----------\n  ;; universe for var735:\n  ;;   var735!val!1 var735!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var735!val!1 () var735)\n  (declare-fun var735!val!0 () var735)\n  ;; cardinality constraint:\n  (forall ((x var735)) (or (= x var735!val!1) (= x var735!val!0)))\n  ;; -----------\n  (define-fun var3017 () var1232\n    var2617-ARCH_TO_PROCESSOR)\n  (define-fun var1985 () var1232\n    var2617-ARCH_TO_PROCESSOR)\n  (define-fun var3980 () Bool\n    (var1232_containsKey/1715618542\n  var2617-ARCH_TO_PROCESSOR\n  (cast-from-String-to-var2682 var282)))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var282 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1233 () var735\n    var735!val!0)\n  (define-fun null-var735 () var735\n    var735!val!1)\n  (define-fun var2617-ARCH_TO_PROCESSOR () var1232\n    var1232!val!0)\n  (define-fun var1985!1 () var1232\n    var1232!val!0)\n  (define-fun var1233!1 () var735\n    var735!val!1)\n  (define-fun var282!1 () String\n    \"\")\n  (define-fun var1232_containsKey/1715618542 ((x!0 var1232) (x!1 var2682)) Bool\n    false)\n  (define-fun cast-from-String-to-var2682 ((x!0 String)) var2682\n    var2682!val!0)\n  (define-fun cast-from-var735-to-var2682 ((x!0 var735)) var2682\n    var2682!val!0)\n  (define-fun var1232_put/1464166817 ((x!0 var1232) (x!1 var2682) (x!2 var2682)) var2682\n    var2682!val!0)\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167079936,
            "run_time": 2.129185438156128,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1233 () var735 var735!8)\r\n  (define-fun var282 () String \"\\u{0}\")\r\n  (define-fun var2617-ARCH_TO_PROCESSOR () var1232 var1232!4)\r\n  (define-fun null-var735 () var735 var735!2)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var2682!26 () var2682 (cast-from-String-to-var2682 \"\\u{0}\"))\r\n  (define-fun var1232_containsKey/1715618542 ((x!0 var1232) (x!1 var2682)) Bool (ite (and (= x!0 var1232!4) (= x!1 var2682!26)) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r2 := @parameter1: org.apache.commons.lang3.arch.Processor",
            "$r1 = <org.apache.commons.lang3.ArchUtils: java.util.Map ARCH_TO_PROCESSOR>",
            "$z0 = interfaceinvoke $r1.<java.util.Map: boolean containsKey(java.lang.Object)>(r0)",
            "if $z0 == 0 goto $r3 = <org.apache.commons.lang3.ArchUtils: java.util.Map ARCH_TO_PROCESSOR>",
            "$r3 = <org.apache.commons.lang3.ArchUtils: java.util.Map ARCH_TO_PROCESSOR>",
            "interfaceinvoke $r3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r0, r2)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.mutable.MutableFloat__toString__-2111729597\\3108.smt2",
        "z3": {
            "memory": 32227328,
            "run_time": 0.22724461555480957,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2218:\r\n  ;;   var2218!val!0 var2218!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2218!val!0 () var2218)\r\n  (declare-fun var2218!val!1 () var2218)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2218)) (or (= x var2218!val!0) (= x var2218!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2218 () var2218\r\n    var2218!val!1)\r\n  (define-fun var1614 () var2218\r\n    var2218!val!0)\r\n  (define-fun var3201 () Float32\r\n    (value/472045283 var1614))\r\n  (define-fun var3603 () String\r\n    (String_valueOf/-149410723 (value/472045283 var1614)))\r\n  (define-fun value/472045283 ((x!0 var2218)) Float32\r\n    (_ NaN 8 24))\r\n  (define-fun String_valueOf/-149410723 ((x!0 Float32)) String\r\n    \"\")\r\n)\r\n(error \"line 18 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.045703887939453125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2218 is 2\r\n; rep: (as @var2218_0 var2218)\r\n; rep: (as @var2218_1 var2218)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun value/472045283 ((BOUND_VARIABLE_417 var2218)) (_ FloatingPoint 8 24) (fp #b0 #b00000000 #b00000000000000000000000))\r\n(define-fun String_valueOf/-149410723 ((BOUND_VARIABLE_421 (_ FloatingPoint 8 24))) String \"\")\r\n(define-fun null-var2218 () var2218 (as @var2218_0 var2218))\r\n(define-fun var1614 () var2218 (as @var2218_1 var2218))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34820096,
            "run_time": 0.1696159839630127,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2218:\n  ;;   var2218!val!0 var2218!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2218!val!0 () var2218)\n  (declare-fun var2218!val!1 () var2218)\n  ;; cardinality constraint:\n  (forall ((x var2218)) (or (= x var2218!val!0) (= x var2218!val!1)))\n  ;; -----------\n  (define-fun null-var2218 () var2218\n    var2218!val!1)\n  (define-fun var1614 () var2218\n    var2218!val!0)\n  (define-fun var3201 () Float32\n    (value/472045283 var1614))\n  (define-fun var3603 () String\n    (String_valueOf/-149410723 (value/472045283 var1614)))\n  (define-fun value/472045283 ((x!0 var2218)) Float32\n    (_ NaN 8 24))\n  (define-fun String_valueOf/-149410723 ((x!0 Float32)) String\n    \"\")\n)\n(error \"line 18 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 118280192,
            "run_time": 1.3158700466156006,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.mutable.MutableFloat__toString__-2111729597\\3108.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n669ms\r\nSort Float32 not declared\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 1,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(float)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(float)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.mutable.MutableFloat",
            "$f0 = r0.<org.apache.commons.lang3.mutable.MutableFloat: float value>",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>($f0)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__1465922271\\1966.smt2",
        "z3": {
            "memory": 32473088,
            "run_time": 0.21381711959838867,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1643:\r\n  ;;   var1643!val!0 var1643!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1643!val!0 () var1643)\r\n  (declare-fun var1643!val!1 () var1643)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1643)) (or (= x var1643!val!0) (= x var1643!val!1)))\r\n  ;; -----------\r\n  (define-fun var1217 () String\r\n    \"\")\r\n  (define-fun var403 () Int\r\n    0)\r\n  (define-fun var2240 () String\r\n    (arrayStart/-417041427 var2793))\r\n  (define-fun var1217!2 () String\r\n    \"\")\r\n  (define-fun var1402 () Int\r\n    (getLength-Arr-Int-1 var3905))\r\n  (define-fun var1204 () String\r\n    (arrayEnd/-417041427 var2793))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) (- 1)) 0 0))\r\n  (define-fun var2793 () var1643\r\n    var1643!val!0)\r\n  (define-fun var3523 () String\r\n    \"\")\r\n  (define-fun null-var1643 () var1643\r\n    var1643!val!1)\r\n  (define-fun var3905 () (Array Int Int)\r\n    ((as const (Array Int Int)) (- 1)))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1217!1 () String\r\n    \"\")\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\r\n    0)\r\n  (define-fun arrayEnd/-417041427 ((x!0 var1643)) String\r\n    \"\")\r\n  (define-fun arrayStart/-417041427 ((x!0 var1643)) String\r\n    \"\")\r\n)\r\n(error \"line 42 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11792384,
            "run_time": 0.07714128494262695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1643 is 2\r\n; rep: (as @var1643_0 var1643)\r\n; rep: (as @var1643_1 var1643)\r\n; cardinality of var717 is 1\r\n; rep: (as @var717_0 var717)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arrayStart/-417041427 ((BOUND_VARIABLE_819 var1643)) String \"\")\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 0)\r\n(define-fun arrayEnd/-417041427 ((BOUND_VARIABLE_822 var1643)) String \"\")\r\n(define-fun null-var1643 () var1643 (as @var1643_0 var1643))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var2793 () var1643 (as @var1643_1 var1643))\r\n(define-fun var1217 () String \"\")\r\n(define-fun var3523 () String \"\")\r\n(define-fun var3905 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1217!1 () String \"\")\r\n(define-fun var1217!2 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39788544,
            "run_time": 0.3284029960632324,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 41 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 42 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 172900352,
            "run_time": 2.4241883754730225,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__1465922271\\1966.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1217!2 =\r\n     concat(var1217!1, rhs)\r\n   var1217!1 =\r\n     concat(var1217, rhs)\r\n   ... sat\r\n\r\n1762ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r5 := @parameter1: java.lang.String",
            "r3 := @parameter2: byte[]",
            "$r2 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayStart>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "i2 = 0",
            "$i0 = lengthof r3",
            "if i2 >= $i0 goto $r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "$r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharUtils__toString__1050564420\\528.smt2",
        "z3": {
            "memory": 32206848,
            "run_time": 0.10720539093017578,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var33 () (Array Int String)\r\n    var215-CHAR_STRING_ARRAY)\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun var3483 () Int\r\n    0)\r\n  (define-fun var708 () String\r\n    (String_valueOf/-371898945 var3483))\r\n  (define-fun var222 () Int\r\n    var3483)\r\n  (define-fun var775 () Int\r\n    (getLength-Arr-String-1 var215-CHAR_STRING_ARRAY))\r\n  (define-fun var215-CHAR_STRING_ARRAY () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun getLength-Arr-String-1 ((x!0 (Array Int String))) Int\r\n    0)\r\n  (define-fun String_valueOf/-371898945 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9261056,
            "run_time": 0.07655763626098633,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var215 is 1\r\n; rep: (as @var215_0 var215)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getLength-Arr-String-1 ((_arg_1 (Array Int String))) Int 0)\r\n(define-fun String_valueOf/-371898945 ((BOUND_VARIABLE_477 Int)) String \"\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var215-CHAR_STRING_ARRAY () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var3483 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35262464,
            "run_time": 0.16993355751037598,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    1)\n  (define-fun var3483 () Int\n    0)\n  (define-fun var222 () Int\n    var3483)\n  (define-fun var775 () Int\n    (getLength-Arr-String-1 var215-CHAR_STRING_ARRAY))\n  (define-fun var33 () (Array Int String)\n    var215-CHAR_STRING_ARRAY)\n  (define-fun var708 () String\n    (String_valueOf/-371898945 var3483))\n  (define-fun var215-CHAR_STRING_ARRAY () (Array Int String)\n    ((as const (Array Int String)) \"\"))\n  (define-fun getLength-Arr-String-1 ((x!0 (Array Int String))) Int\n    0)\n  (define-fun String_valueOf/-371898945 ((x!0 Int)) String\n    \"\")\n)\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 147030016,
            "run_time": 2.250338554382324,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3483 () Int 6)\r\n  (define-fun var215-CHAR_STRING_ARRAY () (Array Int String) ((as const (Array Int String)) \"\"))\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun getLength-Arr-String-1 ((x!0 (Array Int String))) Int (ite (= x!0 ((as const (Array Int String)) \"\")) 6 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(char)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(char)>": 1
        },
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$r0 = <org.apache.commons.lang3.CharUtils: java.lang.String[] CHAR_STRING_ARRAY>",
            "$i1 = lengthof $r0",
            "$i2 = (int) c0",
            "if $i2 >= $i1 goto $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0)",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__intToHexDigit__467417459\\1710.smt2",
        "z3": {
            "memory": 32727040,
            "run_time": 0.19998407363891602,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1844!1 () String\r\n    \"nibble value not between 0 and 15: \")\r\n  (define-fun var168 () var3669\r\n    var3669-init)\r\n  (define-fun var1409 () String\r\n    (str.++ var3840!1 \"nibble value not between 0 and 15: \" (str.from_int var1447)))\r\n  (define-fun var3840 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var2250 () String\r\n    (str.++ var3840!1 \"nibble value not between 0 and 15: \" (str.from_int var1447)))\r\n  (define-fun var1447 () Int\r\n    2)\r\n  (define-fun var3555 () Int\r\n    (var1323_forDigit/-2032867890 var1447 16))\r\n  (define-fun var1844 () String\r\n    (str.++ var3840!1 \"nibble value not between 0 and 15: \"))\r\n  (define-fun var3840!1 () String\r\n    \"\")\r\n  (define-fun var3840!2 () String\r\n    \"nibble value not between 0 and 15: \")\r\n  (define-fun var3669-init () var3669\r\n    var3669!val!0)\r\n  (define-fun var2250!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var168!1 () var3669\r\n    var3669!val!0)\r\n  (define-fun var1323_forDigit/-2032867890 ((x!0 Int) (x!1 Int)) Int\r\n    0)\r\n  (define-fun <init>/875830710 ((x!0 var3669) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 47 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12845056,
            "run_time": 0.04616403579711914,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1323 is 1\r\n; rep: (as @var1323_0 var1323)\r\n; cardinality of var3669 is 1\r\n; rep: (as @var3669_0 var3669)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1323_forDigit/-2032867890 ((_arg_1 Int) (_arg_2 Int)) Int 0)\r\n(define-fun var3669-init () var3669 (as @var3669_0 var3669))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_948 var3669) (BOUND_VARIABLE_949 String)) void (as @void_0 void))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1447 () Int 0)\r\n(define-fun var3840!1 () String \"\")\r\n(define-fun var3840!2 () String \"nibble value not between 0 and 15: \")\r\n(define-fun var1844!1 () String \"nibble value not between 0 and 15: \")\r\n(define-fun var168!1 () var3669 (as @var3669_0 var3669))\r\n(define-fun var2250!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38346752,
            "run_time": 0.23582172393798828,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3555 () Int\n    (var1323_forDigit/-2032867890 var1447 16))\n  (define-fun var3840 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2250 () String\n    (str.++ var3840!1 \"nibble value not between 0 and 15: \" (str.from_int var1447)))\n  (define-fun var168 () var3669\n    var3669-init)\n  (define-fun var1844!1 () String\n    \"nibble value not between 0 and 15: \")\n  (define-fun null-Int () Int\n    3)\n  (define-fun var1844 () String\n    (str.++ var3840!1 \"nibble value not between 0 and 15: \"))\n  (define-fun var1447 () Int\n    2)\n  (define-fun var3840!2 () String\n    \"nibble value not between 0 and 15: \")\n  (define-fun var1409 () String\n    (str.++ var3840!1 \"nibble value not between 0 and 15: \" (str.from_int var1447)))\n  (define-fun var3840!1 () String\n    \"\")\n  (define-fun var3669-init () var3669\n    var3669!val!0)\n  (define-fun var2250!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var168!1 () var3669\n    var3669!val!0)\n  (define-fun var1323_forDigit/-2032867890 ((x!0 Int) (x!1 Int)) Int\n    0)\n  (define-fun <init>/875830710 ((x!0 var3669) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 47 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175738880,
            "run_time": 2.6838059425354004,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1844!1 () String \"nibble value not between 0 and 15: \")\r\n  (define-fun var3840!2 () String \"nibble value not between 0 and 15: \")\r\n  (define-fun var3840!1 () String \"\")\r\n  (define-fun var1447 () Int 36)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun abbrev_107 ((x!0 Int)) String (ite (= x!0 0) \"nibble value not between 0 and 15: \" \"\"))\r\n  (define-fun var1323_forDigit/-2032867890 ((x!0 Int) (x!1 Int)) Int (ite (and (= x!0 36) (= x!1 16)) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "i0 := @parameter0: int",
            "c1 = staticinvoke <java.lang.Character: char forDigit(int,int)>(i0, 16)",
            "if c1 != 0 goto return c1",
            "$r0 = new java.lang.IllegalArgumentException",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"nibble value not between 0 and 15: \")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitMsb0ToBinary__1576048278\\892.smt2",
        "z3": {
            "memory": 33185792,
            "run_time": 0.24254250526428223,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var765 () (Array Int Bool)\r\n    var3891-TTFF)\r\n  (define-fun null-Int () Int\r\n    68)\r\n  (define-fun var3582 () var141\r\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var141 var3891-TTFF)))\r\n  (define-fun var1965 () (Array Int Bool)\r\n    (cast-from-var141-to-__Array__Int__Bool__\r\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var141 var3891-TTFF))))\r\n  (define-fun var811 () Int\r\n    var209)\r\n  (define-fun var209 () Int\r\n    67)\r\n  (define-fun var3891-TTFF () (Array Int Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun clone/791635256 ((x!0 var141)) var141\r\n    var141!val!0)\r\n  (define-fun cast-from-var141-to-__Array__Int__Bool__ ((x!0 var141)) (Array Int\r\n         Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun cast-from-__Array__Int__Bool__-to-var141 ((x!0 (Array Int Bool))) var141\r\n    var141!val!0)\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.15718293190002441,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3891 is 1\r\n; rep: (as @var3891_0 var3891)\r\n; cardinality of var141 is 1\r\n; rep: (as @var141_0 var141)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun clone/791635256 ((BOUND_VARIABLE_726 var141)) var141 (as @var141_0 var141))\r\n(define-fun cast-from-__Array__Int__Bool__-to-var141 ((BOUND_VARIABLE_729 (Array Int Bool))) var141 (as @var141_0 var141))\r\n(define-fun cast-from-var141-to-__Array__Int__Bool__ ((BOUND_VARIABLE_732 var141)) (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var3891-TTFF () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var209 () Int 67)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36175872,
            "run_time": 0.18337273597717285,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    68)\n  (define-fun var811 () Int\n    var209)\n  (define-fun var765 () (Array Int Bool)\n    var3891-TTFF)\n  (define-fun var3582 () var141\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var141 var3891-TTFF)))\n  (define-fun var1965 () (Array Int Bool)\n    (cast-from-var141-to-__Array__Int__Bool__\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var141 var3891-TTFF))))\n  (define-fun var209 () Int\n    67)\n  (define-fun var3891-TTFF () (Array Int Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun clone/791635256 ((x!0 var141)) var141\n    var141!val!0)\n  (define-fun cast-from-var141-to-__Array__Int__Bool__ ((x!0 var141)) (Array Int\n         Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun cast-from-__Array__Int__Bool__-to-var141 ((x!0 (Array Int Bool))) var141\n    var141!val!0)\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154755072,
            "run_time": 2.0949676036834717,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var209 () Int 67)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto $r45 = <org.apache.commons.lang3.Conversion: boolean[] FFFF>;     case 49: goto $r42 = <org.apache.commons.lang3.Conversion: boolean[] FFFT>;     case 50: goto $r39 = <org.apache.commons.lang3.Conversion: boolean[] FFTF>;     case 51: goto $r36 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 52: goto $r33 = <org.apache.commons.lang3.Conversion: boolean[] FTFF>;     case 53: goto $r30 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 54: goto $r27 = <org.apache.commons.lang3.Conversion: boolean[] FTTF>;     case 55: goto $r24 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 56: goto $r21 = <org.apache.commons.lang3.Conversion: boolean[] TFFF>;     case 57: goto $r18 = <org.apache.commons.lang3.Conversion: boolean[] TFFT>;     case 58: goto $r55 = new java.lang.IllegalArgumentException;     case 59: goto $r55 = new java.lang.IllegalArgumentException;     case 60: goto $r55 = new java.lang.IllegalArgumentException;     case 61: goto $r55 = new java.lang.IllegalArgumentException;     case 62: goto $r55 = new java.lang.IllegalArgumentException;     case 63: goto $r55 = new java.lang.IllegalArgumentException;     case 64: goto $r55 = new java.lang.IllegalArgumentException;     case 65: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 66: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 67: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 68: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 69: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 70: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     case 71: goto $r55 = new java.lang.IllegalArgumentException;     case 72: goto $r55 = new java.lang.IllegalArgumentException;     case 73: goto $r55 = new java.lang.IllegalArgumentException;     case 74: goto $r55 = new java.lang.IllegalArgumentException;     case 75: goto $r55 = new java.lang.IllegalArgumentException;     case 76: goto $r55 = new java.lang.IllegalArgumentException;     case 77: goto $r55 = new java.lang.IllegalArgumentException;     case 78: goto $r55 = new java.lang.IllegalArgumentException;     case 79: goto $r55 = new java.lang.IllegalArgumentException;     case 80: goto $r55 = new java.lang.IllegalArgumentException;     case 81: goto $r55 = new java.lang.IllegalArgumentException;     case 82: goto $r55 = new java.lang.IllegalArgumentException;     case 83: goto $r55 = new java.lang.IllegalArgumentException;     case 84: goto $r55 = new java.lang.IllegalArgumentException;     case 85: goto $r55 = new java.lang.IllegalArgumentException;     case 86: goto $r55 = new java.lang.IllegalArgumentException;     case 87: goto $r55 = new java.lang.IllegalArgumentException;     case 88: goto $r55 = new java.lang.IllegalArgumentException;     case 89: goto $r55 = new java.lang.IllegalArgumentException;     case 90: goto $r55 = new java.lang.IllegalArgumentException;     case 91: goto $r55 = new java.lang.IllegalArgumentException;     case 92: goto $r55 = new java.lang.IllegalArgumentException;     case 93: goto $r55 = new java.lang.IllegalArgumentException;     case 94: goto $r55 = new java.lang.IllegalArgumentException;     case 95: goto $r55 = new java.lang.IllegalArgumentException;     case 96: goto $r55 = new java.lang.IllegalArgumentException;     case 97: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 98: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 99: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 100: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 101: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 102: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     default: goto $r55 = new java.lang.IllegalArgumentException; }",
            "$r9 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>",
            "$r10 = virtualinvoke $r9.<java.lang.Object: java.lang.Object clone()>()",
            "$r11 = (boolean[]) $r10",
            "return $r11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendContentStart__280999522\\1818.smt2",
        "z3": {
            "memory": 32399360,
            "run_time": 0.19516777992248535,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3720:\r\n  ;;   var3720!val!1 var3720!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3720!val!1 () var3720)\r\n  (declare-fun var3720!val!0 () var3720)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3720)) (or (= x var3720!val!1) (= x var3720!val!0)))\r\n  ;; -----------\r\n  (define-fun var224 () String\r\n    (contentStart/-417041427 var185))\r\n  (define-fun var185 () var3720\r\n    var3720!val!0)\r\n  (define-fun var630!1 () String\r\n    \"\")\r\n  (define-fun null-var3720 () var3720\r\n    var3720!val!1)\r\n  (define-fun var630 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun contentStart/-417041427 ((x!0 var3720)) String\r\n    \"\")\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2220032,
            "run_time": 0.14022040367126465,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3720 is 2\r\n; rep: (as @var3720_0 var3720)\r\n; rep: (as @var3720_1 var3720)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun contentStart/-417041427 ((BOUND_VARIABLE_609 var3720)) String \"\")\r\n(define-fun null-var3720 () var3720 (as @var3720_0 var3720))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var185 () var3720 (as @var3720_1 var3720))\r\n(define-fun var630 () String \"\")\r\n(define-fun var630!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37531648,
            "run_time": 0.21329355239868164,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 23 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132198400,
            "run_time": 2.000506639480591,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendContentStart__280999522\\1818.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var630!1 =\r\n     concat(var630, rhs)\r\n   ... sat\r\n\r\n1373ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "$r2 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String contentStart>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitMsb0ToInt__696600923\\1168.smt2",
        "z3": {
            "memory": 32710656,
            "run_time": 0.19433093070983887,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1760 () Int\r\n    var1089)\r\n  (define-fun null-Int () Int\r\n    69)\r\n  (define-fun var1089 () Int\r\n    68)\r\n)\r\n(error \"line 17 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7503872,
            "run_time": 0.06082463264465332,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-Int () Int 0)\r\n(define-fun var1089 () Int 68)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35299328,
            "run_time": 0.15438055992126465,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    69)\n  (define-fun var1760 () Int\n    var1089)\n  (define-fun var1089 () Int\n    68)\n)\n(error \"line 17 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154755072,
            "run_time": 1.7612578868865967,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1089 () Int 68)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 2,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto return 0;     case 49: goto return 8;     case 50: goto return 4;     case 51: goto return 12;     case 52: goto return 2;     case 53: goto return 10;     case 54: goto return 6;     case 55: goto return 14;     case 56: goto return 1;     case 57: goto return 9;     case 58: goto $r7 = new java.lang.IllegalArgumentException;     case 59: goto $r7 = new java.lang.IllegalArgumentException;     case 60: goto $r7 = new java.lang.IllegalArgumentException;     case 61: goto $r7 = new java.lang.IllegalArgumentException;     case 62: goto $r7 = new java.lang.IllegalArgumentException;     case 63: goto $r7 = new java.lang.IllegalArgumentException;     case 64: goto $r7 = new java.lang.IllegalArgumentException;     case 65: goto return 5;     case 66: goto return 13;     case 67: goto return 3;     case 68: goto return 11;     case 69: goto return 7;     case 70: goto return 15;     case 71: goto $r7 = new java.lang.IllegalArgumentException;     case 72: goto $r7 = new java.lang.IllegalArgumentException;     case 73: goto $r7 = new java.lang.IllegalArgumentException;     case 74: goto $r7 = new java.lang.IllegalArgumentException;     case 75: goto $r7 = new java.lang.IllegalArgumentException;     case 76: goto $r7 = new java.lang.IllegalArgumentException;     case 77: goto $r7 = new java.lang.IllegalArgumentException;     case 78: goto $r7 = new java.lang.IllegalArgumentException;     case 79: goto $r7 = new java.lang.IllegalArgumentException;     case 80: goto $r7 = new java.lang.IllegalArgumentException;     case 81: goto $r7 = new java.lang.IllegalArgumentException;     case 82: goto $r7 = new java.lang.IllegalArgumentException;     case 83: goto $r7 = new java.lang.IllegalArgumentException;     case 84: goto $r7 = new java.lang.IllegalArgumentException;     case 85: goto $r7 = new java.lang.IllegalArgumentException;     case 86: goto $r7 = new java.lang.IllegalArgumentException;     case 87: goto $r7 = new java.lang.IllegalArgumentException;     case 88: goto $r7 = new java.lang.IllegalArgumentException;     case 89: goto $r7 = new java.lang.IllegalArgumentException;     case 90: goto $r7 = new java.lang.IllegalArgumentException;     case 91: goto $r7 = new java.lang.IllegalArgumentException;     case 92: goto $r7 = new java.lang.IllegalArgumentException;     case 93: goto $r7 = new java.lang.IllegalArgumentException;     case 94: goto $r7 = new java.lang.IllegalArgumentException;     case 95: goto $r7 = new java.lang.IllegalArgumentException;     case 96: goto $r7 = new java.lang.IllegalArgumentException;     case 97: goto return 5;     case 98: goto return 13;     case 99: goto return 3;     case 100: goto return 11;     case 101: goto return 7;     case 102: goto return 15;     default: goto $r7 = new java.lang.IllegalArgumentException; }",
            "return 11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharSequenceUtils__regionMatches__613342544\\130.smt2",
        "z3": {
            "memory": 32423936,
            "run_time": 0.1658954620361328,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1844 () String\r\n    var3911)\r\n  (define-fun var2773 () String\r\n    \"!0!\")\r\n  (define-fun var3297 () Bool\r\n    true)\r\n  (define-fun var758 () Bool\r\n    true)\r\n  (define-fun var3950 () Int\r\n    1)\r\n  (define-fun var1569 () Bool\r\n    true)\r\n  (define-fun var3911 () String\r\n    \"!2!\")\r\n  (define-fun var637 () Bool\r\n    (regionMatches/-1964120983 var2773 var3297 var339 var3911 var3950 var3854))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var339 () Int\r\n    1)\r\n  (define-fun var1744 () String\r\n    var2773)\r\n  (define-fun var3854 () Int\r\n    1)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun regionMatches/-1964120983 ((x!0 String)\r\n   (x!1 Bool)\r\n   (x!2 Int)\r\n   (x!3 String)\r\n   (x!4 Int)\r\n   (x!5 Int)) Bool\r\n    false)\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7397376,
            "run_time": 0.07688665390014648,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun regionMatches/-1964120983 ((BOUND_VARIABLE_649 String) (BOUND_VARIABLE_650 Bool) (BOUND_VARIABLE_651 Int) (BOUND_VARIABLE_652 String) (BOUND_VARIABLE_653 Int) (BOUND_VARIABLE_654 Int)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Bool () Bool true)\r\n(define-fun null-Int () Int 0)\r\n(define-fun var2773 () String \"\")\r\n(define-fun var3297 () Bool false)\r\n(define-fun var339 () Int 1)\r\n(define-fun var3911 () String \"\")\r\n(define-fun var3950 () Int 1)\r\n(define-fun var3854 () Int 1)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37945344,
            "run_time": 0.24553632736206055,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3911 () String\n    \"\\u{0}\")\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun var1569 () Bool\n    true)\n  (define-fun var3854 () Int\n    1)\n  (define-fun var637 () Bool\n    (regionMatches/-1964120983 var2773 var3297 var339 var3911 var3950 var3854))\n  (define-fun null-Int () Int\n    0)\n  (define-fun var1844 () String\n    var3911)\n  (define-fun var758 () Bool\n    true)\n  (define-fun var2773 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var339 () Int\n    1)\n  (define-fun var3950 () Int\n    1)\n  (define-fun var1744 () String\n    var2773)\n  (define-fun var3297 () Bool\n    true)\n  (define-fun regionMatches/-1964120983 ((x!0 String)\n   (x!1 Bool)\n   (x!2 Int)\n   (x!3 String)\n   (x!4 Int)\n   (x!5 Int)) Bool\n    false)\n)\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154443776,
            "run_time": 1.8389737606048584,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3854 () Int 1)\r\n  (define-fun var3950 () Int 1)\r\n  (define-fun var3911 () String \"\\u{0}\")\r\n  (define-fun var339 () Int 1)\r\n  (define-fun var2773 () String \"\\u{0}\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var3297 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>"
        ],
        "api_count": {
            "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "z1 := @parameter1: boolean",
            "i0 := @parameter2: int",
            "r1 := @parameter3: java.lang.CharSequence",
            "i1 := @parameter4: int",
            "i2 := @parameter5: int",
            "$z0 = r0 instanceof java.lang.String",
            "if $z0 == 0 goto i15 = i0",
            "$z2 = r1 instanceof java.lang.String",
            "if $z2 == 0 goto i15 = i0",
            "$r3 = (java.lang.String) r0",
            "$r2 = (java.lang.String) r1",
            "$z3 = virtualinvoke $r3.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(z1, i0, $r2, i1, i2)",
            "return $z3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendNullText__1484251044\\2616.smt2",
        "z3": {
            "memory": 32845824,
            "run_time": 0.1325361728668213,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1059:\r\n  ;;   var1059!val!0 var1059!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1059!val!0 () var1059)\r\n  (declare-fun var1059!val!1 () var1059)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1059)) (or (= x var1059!val!0) (= x var1059!val!1)))\r\n  ;; -----------\r\n  (define-fun var300 () var1059\r\n    var1059!val!0)\r\n  (define-fun null-var1059 () var1059\r\n    var1059!val!1)\r\n  (define-fun var3070 () String\r\n    (nullText/-417041427 var300))\r\n  (define-fun var1276 () String\r\n    \"\")\r\n  (define-fun var1276!1 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2920 () String\r\n    \"B\")\r\n  (define-fun nullText/-417041427 ((x!0 var1059)) String\r\n    \"\")\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12005376,
            "run_time": 0.07616186141967773,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1059 is 2\r\n; rep: (as @var1059_0 var1059)\r\n; rep: (as @var1059_1 var1059)\r\n; cardinality of var3271 is 1\r\n; rep: (as @var3271_0 var3271)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun nullText/-417041427 ((BOUND_VARIABLE_643 var1059)) String \"\")\r\n(define-fun null-var1059 () var1059 (as @var1059_0 var1059))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var300 () var1059 (as @var1059_1 var1059))\r\n(define-fun var1276 () String \"\")\r\n(define-fun var2920 () String \"\")\r\n(define-fun var1276!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38477824,
            "run_time": 0.2774803638458252,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 26 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140476416,
            "run_time": 2.0241260528564453,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendNullText__1484251044\\2616.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1276!1 =\r\n     concat(var1276, rhs)\r\n   ... sat\r\n\r\n1455ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r3 := @parameter1: java.lang.String",
            "$r2 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String nullText>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle__appendFieldStart__-507560545\\1546.smt2",
        "z3": {
            "memory": 32436224,
            "run_time": 0.15109968185424805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1117:\r\n  ;;   var1117!val!0 var1117!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1117!val!0 () var1117)\r\n  (declare-fun var1117!val!1 () var1117)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1117)) (or (= x var1117!val!0) (= x var1117!val!1)))\r\n  ;; -----------\r\n  (define-fun var3592 () var1117\r\n    var1117!val!0)\r\n  (define-fun var2436 () String\r\n    \"A\")\r\n  (define-fun var3392 () String\r\n    (var1123_escapeJson/623543802 var2267))\r\n  (define-fun var1099 () String\r\n    String-init)\r\n  (define-fun var3835 () String\r\n    (str.++ var1099!1 \"\"\"\" (var1123_escapeJson/623543802 var2267)))\r\n  (define-fun var2267 () String\r\n    \"B\")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var216 () String\r\n    (str.++ var1099!1 \"\"\"\" (var1123_escapeJson/623543802 var2267) \"\"\"\"))\r\n  (define-fun null-var1117 () var1117\r\n    var1117!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var140 () String\r\n    (str.++ var1099!1 \"\"\"\" (var1123_escapeJson/623543802 var2267) \"\"\"\"))\r\n  (define-fun var2887 () String\r\n    (str.++ var1099!1 \"\"\"\"))\r\n  (define-fun var1099!2 () String\r\n    \"\"\"\")\r\n  (define-fun var3835!1 () String\r\n    \"\"\"\"\"\")\r\n  (define-fun var1099!1 () String\r\n    \"\")\r\n  (define-fun var2887!1 () String\r\n    \"\"\"\")\r\n  (define-fun var3592!1 () var1117\r\n    var1117!val!0)\r\n  (define-fun var140!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2436!1 () String\r\n    \"\")\r\n  (define-fun var1123_escapeJson/623543802 ((x!0 String)) String\r\n    \"\")\r\n  (define-fun appendFieldStart/587338008 ((x!0 var392) (x!1 String) (x!2 String)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var1117-to-var392 ((x!0 var1117)) var392\r\n    var392!val!0)\r\n)\r\n(error \"line 57 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.08784222602844238,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1117 is 2\r\n; rep: (as @var1117_0 var1117)\r\n; rep: (as @var1117_1 var1117)\r\n; cardinality of var232 is 1\r\n; rep: (as @var232_0 var232)\r\n; cardinality of var1123 is 1\r\n; rep: (as @var1123_0 var1123)\r\n; cardinality of var392 is 1\r\n; rep: (as @var392_0 var392)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var1123_escapeJson/623543802 ((BOUND_VARIABLE_654 String)) String \"\")\r\n(define-fun appendFieldStart/587338008 ((BOUND_VARIABLE_657 var392) (BOUND_VARIABLE_658 String) (BOUND_VARIABLE_659 String)) void (as @void_0 void))\r\n(define-fun cast-from-var1117-to-var392 ((BOUND_VARIABLE_662 var1117)) var392 (as @var392_0 var392))\r\n(define-fun null-var1117 () var1117 (as @var1117_0 var1117))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3592 () var1117 (as @var1117_1 var1117))\r\n(define-fun var2436 () String \"\")\r\n(define-fun var2267 () String \"\")\r\n(define-fun var1099!1 () String \"\")\r\n(define-fun var1099!2 () String \"\"\"\")\r\n(define-fun var2887!1 () String \"\"\"\")\r\n(define-fun var3835!1 () String \"\"\"\"\"\")\r\n(define-fun var3592!1 () var1117 (as @var1117_0 var1117))\r\n(define-fun var2436!1 () String \"\")\r\n(define-fun var140!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38764544,
            "run_time": 0.2631247043609619,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1117:\n  ;;   var1117!val!0 var1117!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1117!val!0 () var1117)\n  (declare-fun var1117!val!1 () var1117)\n  ;; cardinality constraint:\n  (forall ((x var1117)) (or (= x var1117!val!0) (= x var1117!val!1)))\n  ;; -----------\n  (define-fun var2887!1 () String\n    \"\"\"\")\n  (define-fun var3592 () var1117\n    var1117!val!0)\n  (define-fun var2887 () String\n    (str.++ var1099!1 \"\"\"\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1099 () String\n    String-init)\n  (define-fun var1099!1 () String\n    \"\")\n  (define-fun var3392 () String\n    (var1123_escapeJson/623543802 var2267))\n  (define-fun null-var1117 () var1117\n    var1117!val!1)\n  (define-fun var3835!1 () String\n    \"\"\"\"\"\")\n  (define-fun var2267 () String\n    \"\\u{0}\")\n  (define-fun var140 () String\n    (str.++ var1099!1 \"\"\"\" (var1123_escapeJson/623543802 var2267) \"\"\"\"))\n  (define-fun var2436 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3835 () String\n    (str.++ var1099!1 \"\"\"\" (var1123_escapeJson/623543802 var2267)))\n  (define-fun var1099!2 () String\n    \"\"\"\")\n  (define-fun var216 () String\n    (str.++ var1099!1 \"\"\"\" (var1123_escapeJson/623543802 var2267) \"\"\"\"))\n  (define-fun var3592!1 () var1117\n    var1117!val!0)\n  (define-fun var140!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2436!1 () String\n    \"\")\n  (define-fun var1123_escapeJson/623543802 ((x!0 String)) String\n    \"\")\n  (define-fun appendFieldStart/587338008 ((x!0 var392) (x!1 String) (x!2 String)) void\n    void!val!0)\n  (define-fun cast-from-var1117-to-var392 ((x!0 var1117)) var392\n    var392!val!0)\n)\n(error \"line 57 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180207616,
            "run_time": 2.3785388469696045,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1117/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle__appendFieldStart__-507560545\\1546.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3835!1 =\r\n     concat(all_24_3, \"\\u{0}22\")\r\n   var2887!1 =\r\n     concat(\"\\u{0}22\", all_21_3)\r\n   all_24_3 =\r\n     concat(\"\\u{0}22\", all_21_3)\r\n\r\n1722ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
            "r2 := @parameter0: java.lang.StringBuffer",
            "r0 := @parameter1: java.lang.String",
            "if r0 != null goto $r3 = new java.lang.StringBuilder",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r4 = staticinvoke <org.apache.commons.lang3.StringEscapeUtils: java.lang.String escapeJson(java.lang.String)>(r0)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\"\")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke r1.<org.apache.commons.lang3.builder.ToStringStyle: void appendFieldStart(java.lang.StringBuffer,java.lang.String)>(r2, $r8)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.math.NumberUtils__getMantissa__-708117625\\2846-deviant-0.smt2",
        "z3": {
            "memory": 32821248,
            "run_time": 0.21201372146606445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2262 () Int\r\n    1)\r\n  (define-fun var129 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun null-Int () Int\r\n    0)\r\n)\r\n(error \"line 20 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.09084486961364746,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var538 is 1\r\n; rep: (as @var538_0 var538)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var129 () String \"\")\r\n(define-fun var2262 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38711296,
            "run_time": 0.1911172866821289,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2262 () Int\n    1)\n  (define-fun var129 () String\n    \"\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-Int () Int\n    0)\n)\n(error \"line 20 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155455488,
            "run_time": 2.234588146209717,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2262 () Int 1)\r\n  (define-fun var129 () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i1 := @parameter1: int",
            "c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i2 = (int) c0",
            "if $i2 == 45 goto $z0 = 1",
            "$z0 = 1",
            "goto [?= (branch)]",
            "if $z0 == 0 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1)",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ClassUtils$compareTo__25__compare__338371430\\4594.smt2",
        "z3": {
            "memory": 33517568,
            "run_time": 0.16747283935546875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1989:\r\n  ;;   var1989!val!1 var1989!val!0 var1989!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1989!val!1 () var1989)\r\n  (declare-fun var1989!val!0 () var1989)\r\n  (declare-fun var1989!val!2 () var1989)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1989))\r\n          (or (= x var1989!val!1) (= x var1989!val!0) (= x var1989!val!2)))\r\n  ;; -----------\r\n  ;; universe for var364:\r\n  ;;   var364!val!0 var364!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var364!val!0 () var364)\r\n  (declare-fun var364!val!1 () var364)\r\n  ;; cardinality constraint:\r\n  (forall ((x var364)) (or (= x var364!val!0) (= x var364!val!1)))\r\n  ;; -----------\r\n  (define-fun var2987 () var364\r\n    var364!val!0)\r\n  (define-fun null-var364 () var364\r\n    var364!val!1)\r\n  (define-fun null-var1989 () var1989\r\n    var1989!val!1)\r\n  (define-fun var1753 () var1989\r\n    var1989!val!2)\r\n  (define-fun var68 () String\r\n    (cast-from-var1989-to-String var1753))\r\n  (define-fun var486 () var1989\r\n    var1989!val!0)\r\n  (define-fun var140 () String\r\n    (cast-from-var1989-to-String var486))\r\n  (define-fun var410 () Int\r\n    (compareTo/1411385946\r\n  (cast-from-var1989-to-String var486)\r\n  (cast-from-var1989-to-String var1753)))\r\n  (define-fun cast-from-var1989-to-String ((x!0 var1989)) String\r\n    (ite (= x!0 var1989!val!2) \"\\u{204}\"\r\n      \"\"))\r\n  (define-fun compareTo/1411385946 ((x!0 String) (x!1 String)) Int\r\n    (- 1))\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12967936,
            "run_time": 0.0747520923614502,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var364 is 2\r\n; rep: (as @var364_0 var364)\r\n; rep: (as @var364_1 var364)\r\n; cardinality of var1989 is 3\r\n; rep: (as @var1989_0 var1989)\r\n; rep: (as @var1989_1 var1989)\r\n; rep: (as @var1989_2 var1989)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var1989-to-String ((_arg_1 var1989)) String (ite (= (as @var1989_2 var1989) _arg_1) \"\" \"\\u{0}\"))\r\n(define-fun compareTo/1411385946 ((_arg_1 String) (_arg_2 String)) Int 1)\r\n(define-fun null-var364 () var364 (as @var364_0 var364))\r\n(define-fun null-var1989 () var1989 (as @var1989_0 var1989))\r\n(define-fun var2987 () var364 (as @var364_1 var364))\r\n(define-fun var486 () var1989 (as @var1989_1 var1989))\r\n(define-fun var1753 () var1989 (as @var1989_2 var1989))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34856960,
            "run_time": 0.1396162509918213,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 26 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165199872,
            "run_time": 2.079448699951172,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_<=(all_14_2, all_14_2)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.ClassUtils$compareTo__25__compare__338371430\\4594.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n1496ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int compareTo(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: int compareTo(java.lang.String)>": 1
        },
        "jimple_statements": [
            "$r0 := @this: org.apache.commons.lang3.ClassUtils$compareTo__25",
            "$r1 := @parameter0: java.lang.Object",
            "$r2 := @parameter1: java.lang.Object",
            "$r3 = (java.lang.String) $r1",
            "$r4 = (java.lang.String) $r2",
            "$i0 = virtualinvoke $r3.<java.lang.String: int compareTo(java.lang.String)>($r4)",
            "return $i0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitToBinary__-2007689494\\1440.smt2",
        "z3": {
            "memory": 33234944,
            "run_time": 0.16580653190612793,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var380 () Int\r\n    var1483)\r\n  (define-fun null-Int () Int\r\n    69)\r\n  (define-fun var2922 () (Array Int Bool)\r\n    var1008-TFTT)\r\n  (define-fun var3948 () var717\r\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var717 var1008-TFTT)))\r\n  (define-fun var46 () (Array Int Bool)\r\n    (cast-from-var717-to-__Array__Int__Bool__\r\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var717 var1008-TFTT))))\r\n  (define-fun var1483 () Int\r\n    68)\r\n  (define-fun var1008-TFTT () (Array Int Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun clone/791635256 ((x!0 var717)) var717\r\n    var717!val!0)\r\n  (define-fun cast-from-var717-to-__Array__Int__Bool__ ((x!0 var717)) (Array Int\r\n         Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun cast-from-__Array__Int__Bool__-to-var717 ((x!0 (Array Int Bool))) var717\r\n    var717!val!0)\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10723328,
            "run_time": 0.07653355598449707,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1008 is 1\r\n; rep: (as @var1008_0 var1008)\r\n; cardinality of var717 is 1\r\n; rep: (as @var717_0 var717)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun clone/791635256 ((BOUND_VARIABLE_740 var717)) var717 (as @var717_0 var717))\r\n(define-fun cast-from-__Array__Int__Bool__-to-var717 ((BOUND_VARIABLE_743 (Array Int Bool))) var717 (as @var717_0 var717))\r\n(define-fun cast-from-var717-to-__Array__Int__Bool__ ((BOUND_VARIABLE_746 var717)) (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var1008-TFTT () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var1483 () Int 68)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37462016,
            "run_time": 0.10937380790710449,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    69)\n  (define-fun var380 () Int\n    var1483)\n  (define-fun var46 () (Array Int Bool)\n    (cast-from-var717-to-__Array__Int__Bool__\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var717 var1008-TFTT))))\n  (define-fun var2922 () (Array Int Bool)\n    var1008-TFTT)\n  (define-fun var3948 () var717\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var717 var1008-TFTT)))\n  (define-fun var1483 () Int\n    68)\n  (define-fun var1008-TFTT () (Array Int Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun clone/791635256 ((x!0 var717)) var717\n    var717!val!0)\n  (define-fun cast-from-var717-to-__Array__Int__Bool__ ((x!0 var717)) (Array Int\n         Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun cast-from-__Array__Int__Bool__-to-var717 ((x!0 (Array Int Bool))) var717\n    var717!val!0)\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155267072,
            "run_time": 2.004248857498169,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1483 () Int 68)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto $r45 = <org.apache.commons.lang3.Conversion: boolean[] FFFF>;     case 49: goto $r42 = <org.apache.commons.lang3.Conversion: boolean[] TFFF>;     case 50: goto $r39 = <org.apache.commons.lang3.Conversion: boolean[] FTFF>;     case 51: goto $r36 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 52: goto $r33 = <org.apache.commons.lang3.Conversion: boolean[] FFTF>;     case 53: goto $r30 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 54: goto $r27 = <org.apache.commons.lang3.Conversion: boolean[] FTTF>;     case 55: goto $r24 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 56: goto $r21 = <org.apache.commons.lang3.Conversion: boolean[] FFFT>;     case 57: goto $r18 = <org.apache.commons.lang3.Conversion: boolean[] TFFT>;     case 58: goto $r55 = new java.lang.IllegalArgumentException;     case 59: goto $r55 = new java.lang.IllegalArgumentException;     case 60: goto $r55 = new java.lang.IllegalArgumentException;     case 61: goto $r55 = new java.lang.IllegalArgumentException;     case 62: goto $r55 = new java.lang.IllegalArgumentException;     case 63: goto $r55 = new java.lang.IllegalArgumentException;     case 64: goto $r55 = new java.lang.IllegalArgumentException;     case 65: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 66: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 67: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 68: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 69: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 70: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     case 71: goto $r55 = new java.lang.IllegalArgumentException;     case 72: goto $r55 = new java.lang.IllegalArgumentException;     case 73: goto $r55 = new java.lang.IllegalArgumentException;     case 74: goto $r55 = new java.lang.IllegalArgumentException;     case 75: goto $r55 = new java.lang.IllegalArgumentException;     case 76: goto $r55 = new java.lang.IllegalArgumentException;     case 77: goto $r55 = new java.lang.IllegalArgumentException;     case 78: goto $r55 = new java.lang.IllegalArgumentException;     case 79: goto $r55 = new java.lang.IllegalArgumentException;     case 80: goto $r55 = new java.lang.IllegalArgumentException;     case 81: goto $r55 = new java.lang.IllegalArgumentException;     case 82: goto $r55 = new java.lang.IllegalArgumentException;     case 83: goto $r55 = new java.lang.IllegalArgumentException;     case 84: goto $r55 = new java.lang.IllegalArgumentException;     case 85: goto $r55 = new java.lang.IllegalArgumentException;     case 86: goto $r55 = new java.lang.IllegalArgumentException;     case 87: goto $r55 = new java.lang.IllegalArgumentException;     case 88: goto $r55 = new java.lang.IllegalArgumentException;     case 89: goto $r55 = new java.lang.IllegalArgumentException;     case 90: goto $r55 = new java.lang.IllegalArgumentException;     case 91: goto $r55 = new java.lang.IllegalArgumentException;     case 92: goto $r55 = new java.lang.IllegalArgumentException;     case 93: goto $r55 = new java.lang.IllegalArgumentException;     case 94: goto $r55 = new java.lang.IllegalArgumentException;     case 95: goto $r55 = new java.lang.IllegalArgumentException;     case 96: goto $r55 = new java.lang.IllegalArgumentException;     case 97: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 98: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 99: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 100: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 101: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 102: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     default: goto $r55 = new java.lang.IllegalArgumentException; }",
            "$r6 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>",
            "$r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Object clone()>()",
            "$r8 = (boolean[]) $r7",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__-628858255\\2272.smt2",
        "z3": {
            "memory": 32776192,
            "run_time": 0.1329348087310791,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3043:\r\n  ;;   var3043!val!1 var3043!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3043!val!1 () var3043)\r\n  (declare-fun var3043!val!0 () var3043)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3043)) (or (= x var3043!val!1) (= x var3043!val!0)))\r\n  ;; -----------\r\n  (define-fun var2782 () String\r\n    \"!2!\")\r\n  (define-fun var772 () Int\r\n    1)\r\n  (define-fun null-var3043 () var3043\r\n    var3043!val!1)\r\n  (define-fun var2291 () var3043\r\n    var3043!val!0)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var3138 () String\r\n    \"!0!\")\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var3138!1 () String\r\n    \"\")\r\n  (define-fun var772!1 () Int\r\n    0)\r\n  (define-fun append/1447793227 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2240512,
            "run_time": 0.2046067714691162,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3043 is 2\r\n; rep: (as @var3043_0 var3043)\r\n; rep: (as @var3043_1 var3043)\r\n; cardinality of var3263 is 1\r\n; rep: (as @var3263_0 var3263)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun append/1447793227 ((BOUND_VARIABLE_539 String) (BOUND_VARIABLE_540 Int)) String \"\")\r\n(define-fun null-var3043 () var3043 (as @var3043_0 var3043))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2291 () var3043 (as @var3043_1 var3043))\r\n(define-fun var3138 () String \"\")\r\n(define-fun var2782 () String \"\")\r\n(define-fun var772 () Int 0)\r\n(define-fun var3138!1 () String \"\")\r\n(define-fun var772!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38420480,
            "run_time": 0.24766182899475098,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3043:\n  ;;   var3043!val!1 var3043!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3043!val!1 () var3043)\n  (declare-fun var3043!val!0 () var3043)\n  ;; cardinality constraint:\n  (forall ((x var3043)) (or (= x var3043!val!1) (= x var3043!val!0)))\n  ;; -----------\n  (define-fun var2782 () String\n    \"\\u{0}\")\n  (define-fun null-Int () Int\n    0)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var3043 () var3043\n    var3043!val!1)\n  (define-fun var3138 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var2291 () var3043\n    var3043!val!0)\n  (define-fun var772 () Int\n    1)\n  (define-fun var3138!1 () String\n    \"\")\n  (define-fun var772!1 () Int\n    0)\n  (define-fun append/1447793227 ((x!0 String) (x!1 Int)) String\n    \"\")\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132366336,
            "run_time": 2.0676968097686768,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var772 () Int 1)\r\n  (define-fun var2782 () String \"\\u{0}\")\r\n  (define-fun var3138 () String \"\\u{0}\")\r\n  (define-fun var2291 () var3043 var3043!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3043 () var3043 var3043!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(long)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(long)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r2 := @parameter1: java.lang.String",
            "l0 := @parameter2: long",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(long)>(l0)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ArrayUtils__add__-1248627063\\276.smt2",
        "z3": {
            "memory": 32378880,
            "run_time": 0.13283348083496094,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 58 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10420224,
            "run_time": 0.06302452087402344,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36855808,
            "run_time": 0.14034056663513184,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 58 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 162766848,
            "run_time": 2.1535325050354004,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "i0 := @parameter1: int",
            "r10 := @parameter2: java.lang.Object",
            "r8 := @parameter3: java.lang.Class",
            "if r0 != null goto i4 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0)",
            "if i0 == 0 goto r17 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r8, 1)",
            "$r11 = new java.lang.IndexOutOfBoundsException",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Index: \")",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", Length: 0\")",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r11.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r16)",
            "throw $r11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharUtils__toChar__1886499277\\285-deviant-0.smt2",
        "z3": {
            "memory": 32866304,
            "run_time": 0.15123319625854492,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2164 () Int\r\n    1)\r\n  (define-fun var2854 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var116 () Bool\r\n    (var2655_isEmpty/1595667738 var2854))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var2655_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10846208,
            "run_time": 0.04714488983154297,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3931 is 1\r\n; rep: (as @var3931_0 var3931)\r\n; cardinality of var2655 is 1\r\n; rep: (as @var2655_0 var2655)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2655_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2854 () String \"\")\r\n(define-fun var2164 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38879232,
            "run_time": 0.1562201976776123,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2164 () Int\n    1)\n  (define-fun var116 () Bool\n    (var2655_isEmpty/1595667738 var2854))\n  (define-fun var2854 () String\n    \"\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-Int () Int\n    0)\n  (define-fun var2655_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 157184000,
            "run_time": 2.1694679260253906,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2164 () Int 1)\r\n  (define-fun var2854 () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun var2655_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "return $c1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__1862153171\\2048.smt2",
        "z3": {
            "memory": 32350208,
            "run_time": 0.13548707962036133,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1146:\r\n  ;;   var1146!val!0 var1146!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1146!val!0 () var1146)\r\n  (declare-fun var1146!val!1 () var1146)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1146)) (or (= x var1146!val!0) (= x var1146!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1156:\r\n  ;;   var1156!val!0 var1156!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1156!val!0 () var1156)\r\n  (declare-fun var1156!val!1 () var1156)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1156)) (or (= x var1156!val!0) (= x var1156!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var1156 () var1156\r\n    var1156!val!1)\r\n  (define-fun var604 () var1146\r\n    var1146!val!0)\r\n  (define-fun null-var1146 () var1146\r\n    var1146!val!1)\r\n  (define-fun var959 () String\r\n    \"!0!\")\r\n  (define-fun var686 () var1156\r\n    var1156!val!0)\r\n  (define-fun var369 () String\r\n    \"!2!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var686!1 () var1156\r\n    var1156!val!0)\r\n  (define-fun var959!1 () String\r\n    \"\")\r\n  (define-fun append/-143899486 ((x!0 String) (x!1 var235)) String\r\n    \"\")\r\n  (define-fun cast-from-var1156-to-var235 ((x!0 var1156)) var235\r\n    var235!val!0)\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.10418581962585449,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1146 is 2\r\n; rep: (as @var1146_0 var1146)\r\n; rep: (as @var1146_1 var1146)\r\n; cardinality of var3237 is 1\r\n; rep: (as @var3237_0 var3237)\r\n; cardinality of var1156 is 2\r\n; rep: (as @var1156_0 var1156)\r\n; rep: (as @var1156_1 var1156)\r\n; cardinality of var235 is 1\r\n; rep: (as @var235_0 var235)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun append/-143899486 ((BOUND_VARIABLE_528 String) (BOUND_VARIABLE_529 var235)) String \"\")\r\n(define-fun cast-from-var1156-to-var235 ((BOUND_VARIABLE_532 var1156)) var235 (as @var235_0 var235))\r\n(define-fun null-var1146 () var1146 (as @var1146_0 var1146))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1156 () var1156 (as @var1156_0 var1156))\r\n(define-fun var604 () var1146 (as @var1146_1 var1146))\r\n(define-fun var959 () String \"\")\r\n(define-fun var369 () String \"\")\r\n(define-fun var686 () var1156 (as @var1156_1 var1156))\r\n(define-fun var959!1 () String \"\")\r\n(define-fun var686!1 () var1156 (as @var1156_0 var1156))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38883328,
            "run_time": 0.29604268074035645,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1146:\n  ;;   var1146!val!0 var1146!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1146!val!0 () var1146)\n  (declare-fun var1146!val!1 () var1146)\n  ;; cardinality constraint:\n  (forall ((x var1146)) (or (= x var1146!val!0) (= x var1146!val!1)))\n  ;; -----------\n  ;; universe for var1156:\n  ;;   var1156!val!0 var1156!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1156!val!0 () var1156)\n  (declare-fun var1156!val!1 () var1156)\n  ;; cardinality constraint:\n  (forall ((x var1156)) (or (= x var1156!val!0) (= x var1156!val!1)))\n  ;; -----------\n  (define-fun var686 () var1156\n    var1156!val!0)\n  (define-fun var959 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var604 () var1146\n    var1146!val!0)\n  (define-fun null-var1146 () var1146\n    var1146!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var1156 () var1156\n    var1156!val!1)\n  (define-fun var369 () String\n    \"\\u{0}\")\n  (define-fun var686!1 () var1156\n    var1156!val!0)\n  (define-fun var959!1 () String\n    \"\")\n  (define-fun append/-143899486 ((x!0 String) (x!1 var235)) String\n    \"\")\n  (define-fun cast-from-var1156-to-var235 ((x!0 var1156)) var235\n    var235!val!0)\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141758464,
            "run_time": 1.8781538009643555,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var686 () var1156 var1156!8)\r\n  (define-fun var369 () String \"\\u{0}\")\r\n  (define-fun var959 () String \"\\u{0}\")\r\n  (define-fun var604 () var1146 var1146!6)\r\n  (define-fun null-var1156 () var1156 var1156!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var1146 () var1146 var1146!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r3 := @parameter1: java.lang.String",
            "r1 := @parameter2: java.util.Collection",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.mutable.MutableInt__toString__965470550\\3067.smt2",
        "z3": {
            "memory": 31821824,
            "run_time": 0.11913013458251953,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1510:\r\n  ;;   var1510!val!0 var1510!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1510!val!0 () var1510)\r\n  (declare-fun var1510!val!1 () var1510)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1510)) (or (= x var1510!val!0) (= x var1510!val!1)))\r\n  ;; -----------\r\n  (define-fun var3924 () var1510\r\n    var1510!val!0)\r\n  (define-fun null-var1510 () var1510\r\n    var1510!val!1)\r\n  (define-fun var546 () String\r\n    (String_valueOf/1240665136 (value/-222969290 var3924)))\r\n  (define-fun var3575 () Int\r\n    (value/-222969290 var3924))\r\n  (define-fun String_valueOf/1240665136 ((x!0 Int)) String\r\n    \"\")\r\n  (define-fun value/-222969290 ((x!0 var1510)) Int\r\n    0)\r\n)\r\n(error \"line 18 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.1244809627532959,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1510 is 2\r\n; rep: (as @var1510_0 var1510)\r\n; rep: (as @var1510_1 var1510)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun value/-222969290 ((BOUND_VARIABLE_417 var1510)) Int 0)\r\n(define-fun String_valueOf/1240665136 ((BOUND_VARIABLE_420 Int)) String \"\")\r\n(define-fun null-var1510 () var1510 (as @var1510_0 var1510))\r\n(define-fun var3924 () var1510 (as @var1510_1 var1510))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35311616,
            "run_time": 0.2924165725708008,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1510:\n  ;;   var1510!val!0 var1510!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1510!val!0 () var1510)\n  (declare-fun var1510!val!1 () var1510)\n  ;; cardinality constraint:\n  (forall ((x var1510)) (or (= x var1510!val!0) (= x var1510!val!1)))\n  ;; -----------\n  (define-fun var546 () String\n    (String_valueOf/1240665136 (value/-222969290 var3924)))\n  (define-fun var3575 () Int\n    (value/-222969290 var3924))\n  (define-fun var3924 () var1510\n    var1510!val!0)\n  (define-fun null-var1510 () var1510\n    var1510!val!1)\n  (define-fun String_valueOf/1240665136 ((x!0 Int)) String\n    \"\")\n  (define-fun value/-222969290 ((x!0 var1510)) Int\n    0)\n)\n(error \"line 18 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132669440,
            "run_time": 2.0038959980010986,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3924 () var1510 var1510!4)\r\n  (define-fun null-var1510 () var1510 var1510!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 1,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.mutable.MutableInt",
            "$i0 = r0.<org.apache.commons.lang3.mutable.MutableInt: int value>",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i0)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__intToHexDigit__467417459\\1735.smt2",
        "z3": {
            "memory": 33050624,
            "run_time": 0.2619149684906006,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var1533 () Int\r\n    (var1141_forDigit/-2032867890 var3378 16))\r\n  (define-fun var3378 () Int\r\n    1)\r\n  (define-fun var1141_forDigit/-2032867890 ((x!0 Int) (x!1 Int)) Int\r\n    2)\r\n)\r\n(error \"line 18 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2281472,
            "run_time": 0.10990357398986816,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1141 is 1\r\n; rep: (as @var1141_0 var1141)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1141_forDigit/-2032867890 ((_arg_1 Int) (_arg_2 Int)) Int (- 1))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3378 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34508800,
            "run_time": 0.18361973762512207,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    2)\n  (define-fun var1533 () Int\n    (var1141_forDigit/-2032867890 var3378 16))\n  (define-fun var3378 () Int\n    1)\n  (define-fun var1141_forDigit/-2032867890 ((x!0 Int) (x!1 Int)) Int\n    2)\n)\n(error \"line 18 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 127123456,
            "run_time": 1.8479743003845215,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3378 () Int 17)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun var1141_forDigit/-2032867890 ((x!0 Int) (x!1 Int)) Int (ite (and (= x!0 17) (= x!1 16)) 22 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 2,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "i0 := @parameter0: int",
            "c1 = staticinvoke <java.lang.Character: char forDigit(int,int)>(i0, 16)",
            "if c1 != 0 goto return c1",
            "return c1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitMsb0ToBinary__1576048278\\903.smt2",
        "z3": {
            "memory": 33370112,
            "run_time": 0.15063810348510742,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    69)\r\n  (define-fun var2130 () var1733\r\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var1733 var1427-TTFT)))\r\n  (define-fun var2511 () Int\r\n    var2562)\r\n  (define-fun var2502 () (Array Int Bool)\r\n    var1427-TTFT)\r\n  (define-fun var381 () (Array Int Bool)\r\n    (cast-from-var1733-to-__Array__Int__Bool__\r\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var1733 var1427-TTFT))))\r\n  (define-fun var2562 () Int\r\n    68)\r\n  (define-fun var1427-TTFT () (Array Int Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun cast-from-__Array__Int__Bool__-to-var1733 ((x!0 (Array Int Bool))) var1733\r\n    var1733!val!0)\r\n  (define-fun clone/791635256 ((x!0 var1733)) var1733\r\n    var1733!val!0)\r\n  (define-fun cast-from-var1733-to-__Array__Int__Bool__ ((x!0 var1733)) (Array Int\r\n         Bool)\r\n    ((as const (Array Int Bool)) false))\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.03156709671020508,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1427 is 1\r\n; rep: (as @var1427_0 var1427)\r\n; cardinality of var1733 is 1\r\n; rep: (as @var1733_0 var1733)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun clone/791635256 ((BOUND_VARIABLE_740 var1733)) var1733 (as @var1733_0 var1733))\r\n(define-fun cast-from-__Array__Int__Bool__-to-var1733 ((BOUND_VARIABLE_743 (Array Int Bool))) var1733 (as @var1733_0 var1733))\r\n(define-fun cast-from-var1733-to-__Array__Int__Bool__ ((BOUND_VARIABLE_746 var1733)) (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var1427-TTFT () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var2562 () Int 68)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36782080,
            "run_time": 0.2634279727935791,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2511 () Int\n    var2562)\n  (define-fun null-Int () Int\n    69)\n  (define-fun var2502 () (Array Int Bool)\n    var1427-TTFT)\n  (define-fun var381 () (Array Int Bool)\n    (cast-from-var1733-to-__Array__Int__Bool__\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var1733 var1427-TTFT))))\n  (define-fun var2130 () var1733\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var1733 var1427-TTFT)))\n  (define-fun var2562 () Int\n    68)\n  (define-fun var1427-TTFT () (Array Int Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun cast-from-__Array__Int__Bool__-to-var1733 ((x!0 (Array Int Bool))) var1733\n    var1733!val!0)\n  (define-fun clone/791635256 ((x!0 var1733)) var1733\n    var1733!val!0)\n  (define-fun cast-from-var1733-to-__Array__Int__Bool__ ((x!0 var1733)) (Array Int\n         Bool)\n    ((as const (Array Int Bool)) false))\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155717632,
            "run_time": 1.9099698066711426,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2562 () Int 68)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto $r45 = <org.apache.commons.lang3.Conversion: boolean[] FFFF>;     case 49: goto $r42 = <org.apache.commons.lang3.Conversion: boolean[] FFFT>;     case 50: goto $r39 = <org.apache.commons.lang3.Conversion: boolean[] FFTF>;     case 51: goto $r36 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 52: goto $r33 = <org.apache.commons.lang3.Conversion: boolean[] FTFF>;     case 53: goto $r30 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 54: goto $r27 = <org.apache.commons.lang3.Conversion: boolean[] FTTF>;     case 55: goto $r24 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 56: goto $r21 = <org.apache.commons.lang3.Conversion: boolean[] TFFF>;     case 57: goto $r18 = <org.apache.commons.lang3.Conversion: boolean[] TFFT>;     case 58: goto $r55 = new java.lang.IllegalArgumentException;     case 59: goto $r55 = new java.lang.IllegalArgumentException;     case 60: goto $r55 = new java.lang.IllegalArgumentException;     case 61: goto $r55 = new java.lang.IllegalArgumentException;     case 62: goto $r55 = new java.lang.IllegalArgumentException;     case 63: goto $r55 = new java.lang.IllegalArgumentException;     case 64: goto $r55 = new java.lang.IllegalArgumentException;     case 65: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 66: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 67: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 68: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 69: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 70: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     case 71: goto $r55 = new java.lang.IllegalArgumentException;     case 72: goto $r55 = new java.lang.IllegalArgumentException;     case 73: goto $r55 = new java.lang.IllegalArgumentException;     case 74: goto $r55 = new java.lang.IllegalArgumentException;     case 75: goto $r55 = new java.lang.IllegalArgumentException;     case 76: goto $r55 = new java.lang.IllegalArgumentException;     case 77: goto $r55 = new java.lang.IllegalArgumentException;     case 78: goto $r55 = new java.lang.IllegalArgumentException;     case 79: goto $r55 = new java.lang.IllegalArgumentException;     case 80: goto $r55 = new java.lang.IllegalArgumentException;     case 81: goto $r55 = new java.lang.IllegalArgumentException;     case 82: goto $r55 = new java.lang.IllegalArgumentException;     case 83: goto $r55 = new java.lang.IllegalArgumentException;     case 84: goto $r55 = new java.lang.IllegalArgumentException;     case 85: goto $r55 = new java.lang.IllegalArgumentException;     case 86: goto $r55 = new java.lang.IllegalArgumentException;     case 87: goto $r55 = new java.lang.IllegalArgumentException;     case 88: goto $r55 = new java.lang.IllegalArgumentException;     case 89: goto $r55 = new java.lang.IllegalArgumentException;     case 90: goto $r55 = new java.lang.IllegalArgumentException;     case 91: goto $r55 = new java.lang.IllegalArgumentException;     case 92: goto $r55 = new java.lang.IllegalArgumentException;     case 93: goto $r55 = new java.lang.IllegalArgumentException;     case 94: goto $r55 = new java.lang.IllegalArgumentException;     case 95: goto $r55 = new java.lang.IllegalArgumentException;     case 96: goto $r55 = new java.lang.IllegalArgumentException;     case 97: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 98: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 99: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 100: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 101: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 102: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     default: goto $r55 = new java.lang.IllegalArgumentException; }",
            "$r6 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>",
            "$r7 = virtualinvoke $r6.<java.lang.Object: java.lang.Object clone()>()",
            "$r8 = (boolean[]) $r7",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__-1000338488\\2357.smt2",
        "z3": {
            "memory": 32587776,
            "run_time": 0.11907792091369629,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var218:\r\n  ;;   var218!val!0 var218!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var218!val!0 () var218)\r\n  (declare-fun var218!val!1 () var218)\r\n  ;; cardinality constraint:\r\n  (forall ((x var218)) (or (= x var218!val!0) (= x var218!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2447:\r\n  ;;   var2447!val!1 var2447!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2447!val!1 () var2447)\r\n  (declare-fun var2447!val!0 () var2447)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2447)) (or (= x var2447!val!1) (= x var2447!val!0)))\r\n  ;; -----------\r\n  (define-fun var1632 () var218\r\n    var218!val!0)\r\n  (define-fun var1436 () String\r\n    \"!0!\")\r\n  (define-fun null-var2447 () var2447\r\n    var2447!val!1)\r\n  (define-fun null-var218 () var218\r\n    var218!val!1)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2119 () String\r\n    \"!2!\")\r\n  (define-fun var1770 () var2447\r\n    var2447!val!0)\r\n  (define-fun var1436!1 () String\r\n    \"\")\r\n  (define-fun var1770!1 () var2447\r\n    var2447!val!1)\r\n  (define-fun append/-143899486 ((x!0 String) (x!1 var2447)) String\r\n    \"\")\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.04628133773803711,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var218 is 2\r\n; rep: (as @var218_0 var218)\r\n; rep: (as @var218_1 var218)\r\n; cardinality of var1404 is 1\r\n; rep: (as @var1404_0 var1404)\r\n; cardinality of var2447 is 2\r\n; rep: (as @var2447_0 var2447)\r\n; rep: (as @var2447_1 var2447)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun append/-143899486 ((BOUND_VARIABLE_524 String) (BOUND_VARIABLE_525 var2447)) String \"\")\r\n(define-fun null-var218 () var218 (as @var218_0 var218))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var2447 () var2447 (as @var2447_0 var2447))\r\n(define-fun var1632 () var218 (as @var218_1 var218))\r\n(define-fun var1436 () String \"\")\r\n(define-fun var2119 () String \"\")\r\n(define-fun var1770 () var2447 (as @var2447_1 var2447))\r\n(define-fun var1436!1 () String \"\")\r\n(define-fun var1770!1 () var2447 (as @var2447_0 var2447))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37490688,
            "run_time": 0.3405470848083496,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var218:\n  ;;   var218!val!0 var218!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var218!val!0 () var218)\n  (declare-fun var218!val!1 () var218)\n  ;; cardinality constraint:\n  (forall ((x var218)) (or (= x var218!val!0) (= x var218!val!1)))\n  ;; -----------\n  ;; universe for var2447:\n  ;;   var2447!val!1 var2447!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2447!val!1 () var2447)\n  (declare-fun var2447!val!0 () var2447)\n  ;; cardinality constraint:\n  (forall ((x var2447)) (or (= x var2447!val!1) (= x var2447!val!0)))\n  ;; -----------\n  (define-fun var1632 () var218\n    var218!val!0)\n  (define-fun var1436 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1770 () var2447\n    var2447!val!0)\n  (define-fun var2119 () String\n    \"\\u{0}\")\n  (define-fun null-var2447 () var2447\n    var2447!val!1)\n  (define-fun null-var218 () var218\n    var218!val!1)\n  (define-fun var1436!1 () String\n    \"\")\n  (define-fun var1770!1 () var2447\n    var2447!val!1)\n  (define-fun append/-143899486 ((x!0 String) (x!1 var2447)) String\n    \"\")\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 133832704,
            "run_time": 1.9741461277008057,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1770 () var2447 var2447!8)\r\n  (define-fun var2119 () String \"\\u{0}\")\r\n  (define-fun var1436 () String \"\\u{0}\")\r\n  (define-fun var1632 () var218 var218!6)\r\n  (define-fun null-var2447 () var2447 var2447!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var218 () var218 var218!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r3 := @parameter1: java.lang.String",
            "r1 := @parameter2: java.lang.Object",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitMsb0ToInt__696600923\\1187.smt2",
        "z3": {
            "memory": 33402880,
            "run_time": 0.2064375877380371,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    70)\r\n  (define-fun var1475 () Int\r\n    var2927)\r\n  (define-fun var2927 () Int\r\n    69)\r\n)\r\n(error \"line 17 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.20075035095214844,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-Int () Int 0)\r\n(define-fun var2927 () Int 69)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36212736,
            "run_time": 0.2621135711669922,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    70)\n  (define-fun var1475 () Int\n    var2927)\n  (define-fun var2927 () Int\n    69)\n)\n(error \"line 17 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153931776,
            "run_time": 1.6961705684661865,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2927 () Int 69)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 2,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto return 0;     case 49: goto return 8;     case 50: goto return 4;     case 51: goto return 12;     case 52: goto return 2;     case 53: goto return 10;     case 54: goto return 6;     case 55: goto return 14;     case 56: goto return 1;     case 57: goto return 9;     case 58: goto $r7 = new java.lang.IllegalArgumentException;     case 59: goto $r7 = new java.lang.IllegalArgumentException;     case 60: goto $r7 = new java.lang.IllegalArgumentException;     case 61: goto $r7 = new java.lang.IllegalArgumentException;     case 62: goto $r7 = new java.lang.IllegalArgumentException;     case 63: goto $r7 = new java.lang.IllegalArgumentException;     case 64: goto $r7 = new java.lang.IllegalArgumentException;     case 65: goto return 5;     case 66: goto return 13;     case 67: goto return 3;     case 68: goto return 11;     case 69: goto return 7;     case 70: goto return 15;     case 71: goto $r7 = new java.lang.IllegalArgumentException;     case 72: goto $r7 = new java.lang.IllegalArgumentException;     case 73: goto $r7 = new java.lang.IllegalArgumentException;     case 74: goto $r7 = new java.lang.IllegalArgumentException;     case 75: goto $r7 = new java.lang.IllegalArgumentException;     case 76: goto $r7 = new java.lang.IllegalArgumentException;     case 77: goto $r7 = new java.lang.IllegalArgumentException;     case 78: goto $r7 = new java.lang.IllegalArgumentException;     case 79: goto $r7 = new java.lang.IllegalArgumentException;     case 80: goto $r7 = new java.lang.IllegalArgumentException;     case 81: goto $r7 = new java.lang.IllegalArgumentException;     case 82: goto $r7 = new java.lang.IllegalArgumentException;     case 83: goto $r7 = new java.lang.IllegalArgumentException;     case 84: goto $r7 = new java.lang.IllegalArgumentException;     case 85: goto $r7 = new java.lang.IllegalArgumentException;     case 86: goto $r7 = new java.lang.IllegalArgumentException;     case 87: goto $r7 = new java.lang.IllegalArgumentException;     case 88: goto $r7 = new java.lang.IllegalArgumentException;     case 89: goto $r7 = new java.lang.IllegalArgumentException;     case 90: goto $r7 = new java.lang.IllegalArgumentException;     case 91: goto $r7 = new java.lang.IllegalArgumentException;     case 92: goto $r7 = new java.lang.IllegalArgumentException;     case 93: goto $r7 = new java.lang.IllegalArgumentException;     case 94: goto $r7 = new java.lang.IllegalArgumentException;     case 95: goto $r7 = new java.lang.IllegalArgumentException;     case 96: goto $r7 = new java.lang.IllegalArgumentException;     case 97: goto return 5;     case 98: goto return 13;     case 99: goto return 3;     case 100: goto return 11;     case 101: goto return 7;     case 102: goto return 15;     default: goto $r7 = new java.lang.IllegalArgumentException; }",
            "return 7"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharSequenceUtils__regionMatches__613342544\\153.smt2",
        "z3": {
            "memory": 32055296,
            "run_time": 0.2118370532989502,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 37 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2248704,
            "run_time": 0.13816380500793457,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36048896,
            "run_time": 0.1690974235534668,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 37 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140316672,
            "run_time": 1.5883772373199463,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 2
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "z1 := @parameter1: boolean",
            "i0 := @parameter2: int",
            "r1 := @parameter3: java.lang.CharSequence",
            "i1 := @parameter4: int",
            "i2 := @parameter5: int",
            "$z0 = r0 instanceof java.lang.String",
            "if $z0 == 0 goto i15 = i0",
            "i15 = i0",
            "i16 = i1",
            "i17 = i2",
            "$i3 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$i13 = $i3 - i0",
            "$i4 = interfaceinvoke r1.<java.lang.CharSequence: int length()>()",
            "$i14 = $i4 - i1",
            "if i0 < 0 goto return 0",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendSummarySize__2070223692\\2876.smt2",
        "z3": {
            "memory": 33058816,
            "run_time": 0.1656816005706787,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3840:\r\n  ;;   var3840!val!0 var3840!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3840!val!0 () var3840)\r\n  (declare-fun var3840!val!1 () var3840)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3840)) (or (= x var3840!val!0) (= x var3840!val!1)))\r\n  ;; -----------\r\n  (define-fun var3863 () var3840\r\n    var3840!val!0)\r\n  (define-fun null-var3840 () var3840\r\n    var3840!val!1)\r\n  (define-fun var3213!2 () String\r\n    \"\")\r\n  (define-fun var2034 () String\r\n    (sizeEndText/-417041427 var3863))\r\n  (define-fun var3213!1 () String\r\n    \"\")\r\n  (define-fun var3213!3 () String\r\n    \"\")\r\n  (define-fun var3213 () String\r\n    \"\")\r\n  (define-fun var2343 () String\r\n    (sizeStartText/-417041427 var3863))\r\n  (define-fun var3462 () Int\r\n    1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var192 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var3462!1 () Int\r\n    0)\r\n  (define-fun append/1845021834 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun sizeEndText/-417041427 ((x!0 var3840)) String\r\n    \"\")\r\n  (define-fun sizeStartText/-417041427 ((x!0 var3840)) String\r\n    \"\")\r\n)\r\n(error \"line 42 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2207744,
            "run_time": 0.07863712310791016,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3840 is 2\r\n; rep: (as @var3840_0 var3840)\r\n; rep: (as @var3840_1 var3840)\r\n; cardinality of var1008 is 1\r\n; rep: (as @var1008_0 var1008)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun sizeStartText/-417041427 ((BOUND_VARIABLE_806 var3840)) String \"\")\r\n(define-fun append/1845021834 ((BOUND_VARIABLE_809 String) (BOUND_VARIABLE_810 Int)) String \"\")\r\n(define-fun sizeEndText/-417041427 ((BOUND_VARIABLE_813 var3840)) String \"\")\r\n(define-fun null-var3840 () var3840 (as @var3840_0 var3840))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3863 () var3840 (as @var3840_1 var3840))\r\n(define-fun var3213 () String \"\")\r\n(define-fun var192 () String \"\")\r\n(define-fun var3462 () Int 0)\r\n(define-fun var3213!1 () String \"\")\r\n(define-fun var3213!2 () String \"\")\r\n(define-fun var3462!1 () Int 0)\r\n(define-fun var3213!3 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39165952,
            "run_time": 0.382770299911499,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 41 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 42 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 149798912,
            "run_time": 1.87565016746521,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendSummarySize__2070223692\\2876.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3213!3 =\r\n     concat(var3213!2, rhs)\r\n   var3213!1 =\r\n     concat(var3213, rhs)\r\n   ... sat\r\n\r\n1376ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(int)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r4 := @parameter1: java.lang.String",
            "i0 := @parameter2: int",
            "$r2 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String sizeStartText>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(int)>(i0)",
            "$r3 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String sizeEndText>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.math.NumberUtils__getMantissa__-708117625\\2846-deviant-1.smt2",
        "z3": {
            "memory": 32526336,
            "run_time": 0.13504552841186523,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 29 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.045455217361450195,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36630528,
            "run_time": 0.12354254722595215,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 29 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 143343616,
            "run_time": 1.9511222839355469,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i1 := @parameter1: int",
            "c0 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i2 = (int) c0",
            "if $i2 == 45 goto $z0 = 1",
            "$z0 = 1",
            "goto [?= (branch)]",
            "if $z0 == 0 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1)",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle__appendValueAsString__1526211599\\1577.smt2",
        "z3": {
            "memory": 33075200,
            "run_time": 0.14901423454284668,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3896:\r\n  ;;   var3896!val!1 var3896!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3896!val!1 () var3896)\r\n  (declare-fun var3896!val!0 () var3896)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3896)) (or (= x var3896!val!1) (= x var3896!val!0)))\r\n  ;; -----------\r\n  (define-fun var174 () String\r\n    \"B\")\r\n  (define-fun var1239 () String\r\n    (str.++ (append/1183289509 var1977 34) (var797_escapeJson/623543802 var174)))\r\n  (define-fun var1135 () String\r\n    (var797_escapeJson/623543802 var174))\r\n  (define-fun var3710 () var3896\r\n    var3896!val!0)\r\n  (define-fun null-var3896 () var3896\r\n    var3896!val!1)\r\n  (define-fun var1977 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2362!1 () String\r\n    \"\")\r\n  (define-fun var2362 () String\r\n    (append/1183289509 var1977 34))\r\n  (define-fun var713 () Int\r\n    0)\r\n  (define-fun var1239!1 () String\r\n    \"\")\r\n  (define-fun append/1183289509 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun var797_escapeJson/623543802 ((x!0 String)) String\r\n    \"\")\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12976128,
            "run_time": 0.06028342247009277,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3896 is 2\r\n; rep: (as @var3896_0 var3896)\r\n; rep: (as @var3896_1 var3896)\r\n; cardinality of var66 is 1\r\n; rep: (as @var66_0 var66)\r\n; cardinality of var797 is 1\r\n; rep: (as @var797_0 var797)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun append/1183289509 ((_arg_1 String) (_arg_2 Int)) String \"\")\r\n(define-fun var797_escapeJson/623543802 ((BOUND_VARIABLE_696 String)) String \"\")\r\n(define-fun null-var3896 () var3896 (as @var3896_0 var3896))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3710 () var3896 (as @var3896_1 var3896))\r\n(define-fun var1977 () String \"\")\r\n(define-fun var174 () String \"\")\r\n(define-fun var2362!1 () String \"\")\r\n(define-fun var1239!1 () String \"\")\r\n(define-fun var713 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37404672,
            "run_time": 0.1680140495300293,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 35 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150732800,
            "run_time": 2.0292720794677734,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle__appendValueAsString__1526211599\\1577.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2362!1 =\r\n     concat(all_16_0, rhs)\r\n   ... sat\r\n\r\n1456ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>": 2,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r5 := @this: org.apache.commons.lang3.builder.ToStringStyle$JsonToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r1 := @parameter1: java.lang.String",
            "$r3 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34)",
            "$r2 = staticinvoke <org.apache.commons.lang3.StringEscapeUtils: java.lang.String escapeJson(java.lang.String)>(r1)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "virtualinvoke $r4.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(34)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ArrayUtils__add__-1248627063\\304.smt2",
        "z3": {
            "memory": 32546816,
            "run_time": 0.12328672409057617,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 34 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.03168797492980957,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36667392,
            "run_time": 0.12537169456481934,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 34 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 148475904,
            "run_time": 1.7487492561340332,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "i0 := @parameter1: int",
            "r10 := @parameter2: java.lang.Object",
            "r8 := @parameter3: java.lang.Class",
            "if r0 != null goto i4 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(r0)",
            "if i0 == 0 goto r17 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r8, 1)",
            "r17 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(r8, 1)",
            "staticinvoke <java.lang.reflect.Array: void set(java.lang.Object,int,java.lang.Object)>(r17, 0, r10)",
            "return r17"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitToBinary__-2007689494\\1475.smt2",
        "z3": {
            "memory": 32927744,
            "run_time": 0.11687350273132324,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    70)\r\n  (define-fun var2974 () (Array Int Bool)\r\n    (cast-from-var723-to-__Array__Int__Bool__\r\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var723 var1606-FTTT))))\r\n  (define-fun var3829 () Int\r\n    var663)\r\n  (define-fun var3783 () (Array Int Bool)\r\n    var1606-FTTT)\r\n  (define-fun var3632 () var723\r\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var723 var1606-FTTT)))\r\n  (define-fun var663 () Int\r\n    69)\r\n  (define-fun var1606-FTTT () (Array Int Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun clone/791635256 ((x!0 var723)) var723\r\n    var723!val!0)\r\n  (define-fun cast-from-__Array__Int__Bool__-to-var723 ((x!0 (Array Int Bool))) var723\r\n    var723!val!0)\r\n  (define-fun cast-from-var723-to-__Array__Int__Bool__ ((x!0 var723)) (Array Int\r\n         Bool)\r\n    ((as const (Array Int Bool)) false))\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2285568,
            "run_time": 0.04623150825500488,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1606 is 1\r\n; rep: (as @var1606_0 var1606)\r\n; cardinality of var723 is 1\r\n; rep: (as @var723_0 var723)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun clone/791635256 ((BOUND_VARIABLE_754 var723)) var723 (as @var723_0 var723))\r\n(define-fun cast-from-__Array__Int__Bool__-to-var723 ((BOUND_VARIABLE_757 (Array Int Bool))) var723 (as @var723_0 var723))\r\n(define-fun cast-from-var723-to-__Array__Int__Bool__ ((BOUND_VARIABLE_760 var723)) (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var1606-FTTT () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var663 () Int 69)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36794368,
            "run_time": 0.1547870635986328,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3829 () Int\n    var663)\n  (define-fun null-Int () Int\n    70)\n  (define-fun var3783 () (Array Int Bool)\n    var1606-FTTT)\n  (define-fun var3632 () var723\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var723 var1606-FTTT)))\n  (define-fun var2974 () (Array Int Bool)\n    (cast-from-var723-to-__Array__Int__Bool__\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var723 var1606-FTTT))))\n  (define-fun var663 () Int\n    69)\n  (define-fun var1606-FTTT () (Array Int Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun clone/791635256 ((x!0 var723)) var723\n    var723!val!0)\n  (define-fun cast-from-__Array__Int__Bool__-to-var723 ((x!0 (Array Int Bool))) var723\n    var723!val!0)\n  (define-fun cast-from-var723-to-__Array__Int__Bool__ ((x!0 var723)) (Array Int\n         Bool)\n    ((as const (Array Int Bool)) false))\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154370048,
            "run_time": 1.999504566192627,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var663 () Int 69)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto $r45 = <org.apache.commons.lang3.Conversion: boolean[] FFFF>;     case 49: goto $r42 = <org.apache.commons.lang3.Conversion: boolean[] TFFF>;     case 50: goto $r39 = <org.apache.commons.lang3.Conversion: boolean[] FTFF>;     case 51: goto $r36 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 52: goto $r33 = <org.apache.commons.lang3.Conversion: boolean[] FFTF>;     case 53: goto $r30 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 54: goto $r27 = <org.apache.commons.lang3.Conversion: boolean[] FTTF>;     case 55: goto $r24 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 56: goto $r21 = <org.apache.commons.lang3.Conversion: boolean[] FFFT>;     case 57: goto $r18 = <org.apache.commons.lang3.Conversion: boolean[] TFFT>;     case 58: goto $r55 = new java.lang.IllegalArgumentException;     case 59: goto $r55 = new java.lang.IllegalArgumentException;     case 60: goto $r55 = new java.lang.IllegalArgumentException;     case 61: goto $r55 = new java.lang.IllegalArgumentException;     case 62: goto $r55 = new java.lang.IllegalArgumentException;     case 63: goto $r55 = new java.lang.IllegalArgumentException;     case 64: goto $r55 = new java.lang.IllegalArgumentException;     case 65: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 66: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 67: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 68: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 69: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 70: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     case 71: goto $r55 = new java.lang.IllegalArgumentException;     case 72: goto $r55 = new java.lang.IllegalArgumentException;     case 73: goto $r55 = new java.lang.IllegalArgumentException;     case 74: goto $r55 = new java.lang.IllegalArgumentException;     case 75: goto $r55 = new java.lang.IllegalArgumentException;     case 76: goto $r55 = new java.lang.IllegalArgumentException;     case 77: goto $r55 = new java.lang.IllegalArgumentException;     case 78: goto $r55 = new java.lang.IllegalArgumentException;     case 79: goto $r55 = new java.lang.IllegalArgumentException;     case 80: goto $r55 = new java.lang.IllegalArgumentException;     case 81: goto $r55 = new java.lang.IllegalArgumentException;     case 82: goto $r55 = new java.lang.IllegalArgumentException;     case 83: goto $r55 = new java.lang.IllegalArgumentException;     case 84: goto $r55 = new java.lang.IllegalArgumentException;     case 85: goto $r55 = new java.lang.IllegalArgumentException;     case 86: goto $r55 = new java.lang.IllegalArgumentException;     case 87: goto $r55 = new java.lang.IllegalArgumentException;     case 88: goto $r55 = new java.lang.IllegalArgumentException;     case 89: goto $r55 = new java.lang.IllegalArgumentException;     case 90: goto $r55 = new java.lang.IllegalArgumentException;     case 91: goto $r55 = new java.lang.IllegalArgumentException;     case 92: goto $r55 = new java.lang.IllegalArgumentException;     case 93: goto $r55 = new java.lang.IllegalArgumentException;     case 94: goto $r55 = new java.lang.IllegalArgumentException;     case 95: goto $r55 = new java.lang.IllegalArgumentException;     case 96: goto $r55 = new java.lang.IllegalArgumentException;     case 97: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 98: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 99: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 100: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 101: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 102: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     default: goto $r55 = new java.lang.IllegalArgumentException; }",
            "$r3 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>",
            "$r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>()",
            "$r5 = (boolean[]) $r4",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ClassUtils__getClass__1362730861\\441.smt2",
        "z3": {
            "memory": 32686080,
            "run_time": 0.1184844970703125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3719:\r\n  ;;   var3719!val!0 var3719!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3719!val!0 () var3719)\r\n  (declare-fun var3719!val!1 () var3719)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3719)) (or (= x var3719!val!0) (= x var3719!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2061:\r\n  ;;   var2061!val!0 var2061!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2061!val!0 () var2061)\r\n  (declare-fun var2061!val!1 () var2061)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2061)) (or (= x var2061!val!0) (= x var2061!val!1)))\r\n  ;; -----------\r\n  (define-fun var11 () var3915\r\n    var3604-namePrimitiveMap)\r\n  (define-fun var3384 () var3719\r\n    var3719!val!0)\r\n  (define-fun null-var3719 () var3719\r\n    var3719!val!1)\r\n  (define-fun var3740 () String\r\n    \"!0!\")\r\n  (define-fun var1348 () Int\r\n    (- 1))\r\n  (define-fun var3110 () Bool\r\n    true)\r\n  (define-fun null-var2061 () var2061\r\n    var2061!val!1)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2954 () var2061\r\n    var2061!val!0)\r\n  (define-fun var527 () Int\r\n    (lastIndexOf/-1292097097 var3740 46))\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var3604-namePrimitiveMap () var3915\r\n    var3915!val!0)\r\n  (define-fun lastIndexOf/-1292097097 ((x!0 String) (x!1 Int)) Int\r\n    (- 1))\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.09265542030334473,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2061 is 2\r\n; rep: (as @var2061_0 var2061)\r\n; rep: (as @var2061_1 var2061)\r\n; cardinality of var614 is 1\r\n; rep: (as @var614_0 var614)\r\n; cardinality of var3915 is 1\r\n; rep: (as @var3915_0 var3915)\r\n; cardinality of var3604 is 1\r\n; rep: (as @var3604_0 var3604)\r\n; cardinality of var3719 is 2\r\n; rep: (as @var3719_0 var3719)\r\n; rep: (as @var3719_1 var3719)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun lastIndexOf/-1292097097 ((_arg_1 String) (_arg_2 Int)) Int (- 1))\r\n(define-fun null-var2061 () var2061 (as @var2061_0 var2061))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var3604-namePrimitiveMap () var3915 (as @var3915_0 var3915))\r\n(define-fun null-var3719 () var3719 (as @var3719_0 var3719))\r\n(define-fun var2954 () var2061 (as @var2061_1 var2061))\r\n(define-fun var3740 () String \"\")\r\n(define-fun var3110 () Bool false)\r\n(define-fun var3384 () var3719 (as @var3719_1 var3719))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37302272,
            "run_time": 0.12394046783447266,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3719:\n  ;;   var3719!val!0 var3719!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3719!val!0 () var3719)\n  (declare-fun var3719!val!1 () var3719)\n  ;; cardinality constraint:\n  (forall ((x var3719)) (or (= x var3719!val!0) (= x var3719!val!1)))\n  ;; -----------\n  ;; universe for var2061:\n  ;;   var2061!val!0 var2061!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2061!val!0 () var2061)\n  (declare-fun var2061!val!1 () var2061)\n  ;; cardinality constraint:\n  (forall ((x var2061)) (or (= x var2061!val!0) (= x var2061!val!1)))\n  ;; -----------\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun var527 () Int\n    (lastIndexOf/-1292097097 var3740 46))\n  (define-fun var2954 () var2061\n    var2061!val!0)\n  (define-fun null-var2061 () var2061\n    var2061!val!1)\n  (define-fun var1348 () Int\n    (- 1))\n  (define-fun var3110 () Bool\n    true)\n  (define-fun var11 () var3915\n    var3604-namePrimitiveMap)\n  (define-fun var3740 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3384 () var3719\n    var3719!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-var3719 () var3719\n    var3719!val!1)\n  (define-fun var3604-namePrimitiveMap () var3915\n    var3915!val!0)\n  (define-fun lastIndexOf/-1292097097 ((x!0 String) (x!1 Int)) Int\n    (- 1))\n)\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167313408,
            "run_time": 2.0293190479278564,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3384 () var3719 var3719!102)\r\n  (define-fun var3740 () String \"\\u{0}\")\r\n  (define-fun var2954 () var2061 var2061!98)\r\n  (define-fun null-var3719 () var3719 var3719!96)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2061 () var2061 var2061!94)\r\n  (define-fun var3110 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n  (define-fun lastIndexOf/-1292097097 ((x!0 String) (x!1 Int)) Int (ite (and (= x!0 \"\\u{0}\") (= x!1 46)) (- 1) 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: int lastIndexOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: int lastIndexOf(int)>": 1
        },
        "jimple_statements": [
            "r3 := @parameter0: java.lang.ClassLoader",
            "r0 := @parameter1: java.lang.String",
            "z0 := @parameter2: boolean",
            "$r1 = <org.apache.commons.lang3.ClassUtils: java.util.Map namePrimitiveMap>",
            "$r6 := @caughtexception",
            "i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(46)",
            "$i3 = (int) -1",
            "if i0 == $i3 goto throw $r6",
            "throw $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__397846150\\2073.smt2",
        "z3": {
            "memory": 32866304,
            "run_time": 0.12200117111206055,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2002:\r\n  ;;   var2002!val!1 var2002!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2002!val!1 () var2002)\r\n  (declare-fun var2002!val!0 () var2002)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2002)) (or (= x var2002!val!1) (= x var2002!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var2002 () var2002\r\n    var2002!val!1)\r\n  (define-fun var3442 () String\r\n    \"!0!\")\r\n  (define-fun var3255 () String\r\n    \"!2!\")\r\n  (define-fun var2558 () Float64\r\n    (_ +zero 11 53))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-Float64 () Float64\r\n    (fp #b0 #b00000000000 #x0000000000001))\r\n  (define-fun var2771 () var2002\r\n    var2002!val!0)\r\n  (define-fun var3442!1 () String\r\n    \"\")\r\n  (define-fun var2558!1 () Float64\r\n    (_ NaN 11 53))\r\n  (define-fun append/-1099872288 ((x!0 String) (x!1 Float64)) String\r\n    \"\")\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14336000,
            "run_time": 0.14064812660217285,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2002 is 2\r\n; rep: (as @var2002_0 var2002)\r\n; rep: (as @var2002_1 var2002)\r\n; cardinality of var3678 is 1\r\n; rep: (as @var3678_0 var3678)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun append/-1099872288 ((BOUND_VARIABLE_6933 String) (BOUND_VARIABLE_6934 (_ FloatingPoint 11 53))) String \"\")\r\n(define-fun null-var2002 () var2002 (as @var2002_0 var2002))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Float64 () (_ FloatingPoint 11 53) (fp #b1 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun var2771 () var2002 (as @var2002_1 var2002))\r\n(define-fun var3442 () String \"\")\r\n(define-fun var3255 () String \"\")\r\n(define-fun var2558 () (_ FloatingPoint 11 53) (fp #b0 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun var3442!1 () String \"\")\r\n(define-fun var2558!1 () (_ FloatingPoint 11 53) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38526976,
            "run_time": 0.2648332118988037,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2002:\n  ;;   var2002!val!1 var2002!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2002!val!1 () var2002)\n  (declare-fun var2002!val!0 () var2002)\n  ;; cardinality constraint:\n  (forall ((x var2002)) (or (= x var2002!val!1) (= x var2002!val!0)))\n  ;; -----------\n  (define-fun var3255 () String\n    \"\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2771 () var2002\n    var2002!val!0)\n  (define-fun var2558 () Float64\n    (_ +zero 11 53))\n  (define-fun var3442 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun null-Float64 () Float64\n    (fp #b0 #b00000000000 #x0000000000001))\n  (define-fun null-var2002 () var2002\n    var2002!val!1)\n  (define-fun var3442!1 () String\n    \"\")\n  (define-fun var2558!1 () Float64\n    (_ NaN 11 53))\n  (define-fun append/-1099872288 ((x!0 String) (x!1 Float64)) String\n    \"\")\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 126435328,
            "run_time": 1.371849775314331,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__397846150\\2073.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n804ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(double)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(double)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r2 := @parameter1: java.lang.String",
            "d0 := @parameter2: double",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(double)>(d0)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.mutable.MutableLong__toString__-99574291\\3076.smt2",
        "z3": {
            "memory": 32952320,
            "run_time": 0.0948324203491211,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3600:\r\n  ;;   var3600!val!1 var3600!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3600!val!1 () var3600)\r\n  (declare-fun var3600!val!0 () var3600)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3600)) (or (= x var3600!val!1) (= x var3600!val!0)))\r\n  ;; -----------\r\n  (define-fun var442 () var3600\r\n    var3600!val!0)\r\n  (define-fun var2276 () Int\r\n    (value/1677976853 var442))\r\n  (define-fun null-var3600 () var3600\r\n    var3600!val!1)\r\n  (define-fun var3086 () String\r\n    (String_valueOf/-107395227 (value/1677976853 var442)))\r\n  (define-fun value/1677976853 ((x!0 var3600)) Int\r\n    0)\r\n  (define-fun String_valueOf/-107395227 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 18 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8364032,
            "run_time": 0.030315399169921875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3600 is 2\r\n; rep: (as @var3600_0 var3600)\r\n; rep: (as @var3600_1 var3600)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun value/1677976853 ((BOUND_VARIABLE_417 var3600)) Int 0)\r\n(define-fun String_valueOf/-107395227 ((BOUND_VARIABLE_420 Int)) String \"\")\r\n(define-fun null-var3600 () var3600 (as @var3600_0 var3600))\r\n(define-fun var442 () var3600 (as @var3600_1 var3600))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35762176,
            "run_time": 0.20688486099243164,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3600:\n  ;;   var3600!val!1 var3600!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3600!val!1 () var3600)\n  (declare-fun var3600!val!0 () var3600)\n  ;; cardinality constraint:\n  (forall ((x var3600)) (or (= x var3600!val!1) (= x var3600!val!0)))\n  ;; -----------\n  (define-fun var2276 () Int\n    (value/1677976853 var442))\n  (define-fun var442 () var3600\n    var3600!val!0)\n  (define-fun var3086 () String\n    (String_valueOf/-107395227 (value/1677976853 var442)))\n  (define-fun null-var3600 () var3600\n    var3600!val!1)\n  (define-fun value/1677976853 ((x!0 var3600)) Int\n    0)\n  (define-fun String_valueOf/-107395227 ((x!0 Int)) String\n    \"\")\n)\n(error \"line 18 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 133459968,
            "run_time": 1.7758150100708008,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var442 () var3600 var3600!4)\r\n  (define-fun null-var3600 () var3600 var3600!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 1,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(long)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(long)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.mutable.MutableLong",
            "$l0 = r0.<org.apache.commons.lang3.mutable.MutableLong: long value>",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>($l0)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__-705676602\\2248.smt2",
        "z3": {
            "memory": 33054720,
            "run_time": 0.16191482543945312,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1097:\r\n  ;;   var1097!val!1 var1097!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1097!val!1 () var1097)\r\n  (declare-fun var1097!val!0 () var1097)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1097)) (or (= x var1097!val!1) (= x var1097!val!0)))\r\n  ;; -----------\r\n  (define-fun var3966 () String\r\n    (arrayStart/-417041427 var3455))\r\n  (define-fun var217!1 () String\r\n    \"\")\r\n  (define-fun null-var1097 () var1097\r\n    var1097!val!1)\r\n  (define-fun var1353 () Int\r\n    0)\r\n  (define-fun var217 () String\r\n    \"\")\r\n  (define-fun var401 () (Array Int Int)\r\n    ((as const (Array Int Int)) (- 1)))\r\n  (define-fun var3420 () Int\r\n    (getLength-Arr-Int-1 var401))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) (- 1)) 0 0))\r\n  (define-fun var3455 () var1097\r\n    var1097!val!0)\r\n  (define-fun var1928 () String\r\n    (arrayEnd/-417041427 var3455))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var217!2 () String\r\n    \"\")\r\n  (define-fun var1797 () String\r\n    \"\")\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\r\n    0)\r\n  (define-fun arrayEnd/-417041427 ((x!0 var1097)) String\r\n    \"\")\r\n  (define-fun arrayStart/-417041427 ((x!0 var1097)) String\r\n    \"\")\r\n)\r\n(error \"line 42 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10723328,
            "run_time": 0.04474997520446777,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1097 is 2\r\n; rep: (as @var1097_0 var1097)\r\n; rep: (as @var1097_1 var1097)\r\n; cardinality of var3397 is 1\r\n; rep: (as @var3397_0 var3397)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arrayStart/-417041427 ((BOUND_VARIABLE_819 var1097)) String \"\")\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 0)\r\n(define-fun arrayEnd/-417041427 ((BOUND_VARIABLE_822 var1097)) String \"\")\r\n(define-fun null-var1097 () var1097 (as @var1097_0 var1097))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var3455 () var1097 (as @var1097_1 var1097))\r\n(define-fun var217 () String \"\")\r\n(define-fun var1797 () String \"\")\r\n(define-fun var401 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var217!1 () String \"\")\r\n(define-fun var217!2 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39260160,
            "run_time": 0.3614482879638672,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 41 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 42 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169324544,
            "run_time": 2.1354968547821045,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__-705676602\\2248.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var217!2 =\r\n     concat(var217!1, rhs)\r\n   var217!1 =\r\n     concat(var217, rhs)\r\n   ... sat\r\n\r\n1554ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r5 := @parameter1: java.lang.String",
            "r3 := @parameter2: int[]",
            "$r2 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayStart>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r2)",
            "i2 = 0",
            "$i0 = lengthof r3",
            "if i2 >= $i0 goto $r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "$r4 = r1.<org.apache.commons.lang3.builder.ToStringStyle: java.lang.String arrayEnd>",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharUtils__toChar__1886499277\\285.smt2",
        "z3": {
            "memory": 32931840,
            "run_time": 0.14002203941345215,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2164 () Int\r\n    1)\r\n  (define-fun var2854 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"B\")\r\n  (define-fun var3421 () Int\r\n    (str.to_code (str.at var2854 0)))\r\n  (define-fun var116 () Bool\r\n    (var2655_isEmpty/1595667738 var2854))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var2655_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2240512,
            "run_time": 0.07686352729797363,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3931 is 1\r\n; rep: (as @var3931_0 var3931)\r\n; cardinality of var2655 is 1\r\n; rep: (as @var2655_0 var2655)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2655_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2854 () String \"A\")\r\n(define-fun var2164 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38088704,
            "run_time": 0.15413403511047363,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    0)\n  (define-fun var2854 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2164 () Int\n    1)\n  (define-fun var116 () Bool\n    (var2655_isEmpty/1595667738 var2854))\n  (define-fun var3421 () Int\n    (str.to_code (str.at var2854 0)))\n  (define-fun var2655_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 156803072,
            "run_time": 2.2474472522735596,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2164 () Int 1)\r\n  (define-fun var2854 () String \"\\u{0}\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var2655_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\\u{0}\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "return $c1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__hexDigitMsb0ToBinary__1576048278\\915.smt2",
        "z3": {
            "memory": 32972800,
            "run_time": 0.18396639823913574,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1286 () Int\r\n    var409)\r\n  (define-fun null-Int () Int\r\n    70)\r\n  (define-fun var2676 () var1335\r\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var1335 var2174-TTTF)))\r\n  (define-fun var156 () (Array Int Bool)\r\n    var2174-TTTF)\r\n  (define-fun var3398 () (Array Int Bool)\r\n    (cast-from-var1335-to-__Array__Int__Bool__\r\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var1335 var2174-TTTF))))\r\n  (define-fun var409 () Int\r\n    69)\r\n  (define-fun var2174-TTTF () (Array Int Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun clone/791635256 ((x!0 var1335)) var1335\r\n    var1335!val!0)\r\n  (define-fun cast-from-var1335-to-__Array__Int__Bool__ ((x!0 var1335)) (Array Int\r\n         Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun cast-from-__Array__Int__Bool__-to-var1335 ((x!0 (Array Int Bool))) var1335\r\n    var1335!val!0)\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2244608,
            "run_time": 0.04471778869628906,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2174 is 1\r\n; rep: (as @var2174_0 var2174)\r\n; cardinality of var1335 is 1\r\n; rep: (as @var1335_0 var1335)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun clone/791635256 ((BOUND_VARIABLE_754 var1335)) var1335 (as @var1335_0 var1335))\r\n(define-fun cast-from-__Array__Int__Bool__-to-var1335 ((BOUND_VARIABLE_757 (Array Int Bool))) var1335 (as @var1335_0 var1335))\r\n(define-fun cast-from-var1335-to-__Array__Int__Bool__ ((BOUND_VARIABLE_760 var1335)) (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var2174-TTTF () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var409 () Int 69)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36139008,
            "run_time": 0.19130802154541016,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    70)\n  (define-fun var156 () (Array Int Bool)\n    var2174-TTTF)\n  (define-fun var3398 () (Array Int Bool)\n    (cast-from-var1335-to-__Array__Int__Bool__\n  (clone/791635256 (cast-from-__Array__Int__Bool__-to-var1335 var2174-TTTF))))\n  (define-fun var1286 () Int\n    var409)\n  (define-fun var2676 () var1335\n    (clone/791635256 (cast-from-__Array__Int__Bool__-to-var1335 var2174-TTTF)))\n  (define-fun var409 () Int\n    69)\n  (define-fun var2174-TTTF () (Array Int Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun clone/791635256 ((x!0 var1335)) var1335\n    var1335!val!0)\n  (define-fun cast-from-var1335-to-__Array__Int__Bool__ ((x!0 var1335)) (Array Int\n         Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun cast-from-__Array__Int__Bool__-to-var1335 ((x!0 (Array Int Bool))) var1335\n    var1335!val!0)\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155271168,
            "run_time": 1.7767608165740967,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var409 () Int 69)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$i1 = (int) c0",
            "tableswitch($i1) {     case 48: goto $r45 = <org.apache.commons.lang3.Conversion: boolean[] FFFF>;     case 49: goto $r42 = <org.apache.commons.lang3.Conversion: boolean[] FFFT>;     case 50: goto $r39 = <org.apache.commons.lang3.Conversion: boolean[] FFTF>;     case 51: goto $r36 = <org.apache.commons.lang3.Conversion: boolean[] FFTT>;     case 52: goto $r33 = <org.apache.commons.lang3.Conversion: boolean[] FTFF>;     case 53: goto $r30 = <org.apache.commons.lang3.Conversion: boolean[] FTFT>;     case 54: goto $r27 = <org.apache.commons.lang3.Conversion: boolean[] FTTF>;     case 55: goto $r24 = <org.apache.commons.lang3.Conversion: boolean[] FTTT>;     case 56: goto $r21 = <org.apache.commons.lang3.Conversion: boolean[] TFFF>;     case 57: goto $r18 = <org.apache.commons.lang3.Conversion: boolean[] TFFT>;     case 58: goto $r55 = new java.lang.IllegalArgumentException;     case 59: goto $r55 = new java.lang.IllegalArgumentException;     case 60: goto $r55 = new java.lang.IllegalArgumentException;     case 61: goto $r55 = new java.lang.IllegalArgumentException;     case 62: goto $r55 = new java.lang.IllegalArgumentException;     case 63: goto $r55 = new java.lang.IllegalArgumentException;     case 64: goto $r55 = new java.lang.IllegalArgumentException;     case 65: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 66: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 67: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 68: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 69: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 70: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     case 71: goto $r55 = new java.lang.IllegalArgumentException;     case 72: goto $r55 = new java.lang.IllegalArgumentException;     case 73: goto $r55 = new java.lang.IllegalArgumentException;     case 74: goto $r55 = new java.lang.IllegalArgumentException;     case 75: goto $r55 = new java.lang.IllegalArgumentException;     case 76: goto $r55 = new java.lang.IllegalArgumentException;     case 77: goto $r55 = new java.lang.IllegalArgumentException;     case 78: goto $r55 = new java.lang.IllegalArgumentException;     case 79: goto $r55 = new java.lang.IllegalArgumentException;     case 80: goto $r55 = new java.lang.IllegalArgumentException;     case 81: goto $r55 = new java.lang.IllegalArgumentException;     case 82: goto $r55 = new java.lang.IllegalArgumentException;     case 83: goto $r55 = new java.lang.IllegalArgumentException;     case 84: goto $r55 = new java.lang.IllegalArgumentException;     case 85: goto $r55 = new java.lang.IllegalArgumentException;     case 86: goto $r55 = new java.lang.IllegalArgumentException;     case 87: goto $r55 = new java.lang.IllegalArgumentException;     case 88: goto $r55 = new java.lang.IllegalArgumentException;     case 89: goto $r55 = new java.lang.IllegalArgumentException;     case 90: goto $r55 = new java.lang.IllegalArgumentException;     case 91: goto $r55 = new java.lang.IllegalArgumentException;     case 92: goto $r55 = new java.lang.IllegalArgumentException;     case 93: goto $r55 = new java.lang.IllegalArgumentException;     case 94: goto $r55 = new java.lang.IllegalArgumentException;     case 95: goto $r55 = new java.lang.IllegalArgumentException;     case 96: goto $r55 = new java.lang.IllegalArgumentException;     case 97: goto $r15 = <org.apache.commons.lang3.Conversion: boolean[] TFTF>;     case 98: goto $r12 = <org.apache.commons.lang3.Conversion: boolean[] TFTT>;     case 99: goto $r9 = <org.apache.commons.lang3.Conversion: boolean[] TTFF>;     case 100: goto $r6 = <org.apache.commons.lang3.Conversion: boolean[] TTFT>;     case 101: goto $r3 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>;     case 102: goto $r0 = <org.apache.commons.lang3.Conversion: boolean[] TTTT>;     default: goto $r55 = new java.lang.IllegalArgumentException; }",
            "$r3 = <org.apache.commons.lang3.Conversion: boolean[] TTTF>",
            "$r4 = virtualinvoke $r3.<java.lang.Object: java.lang.Object clone()>()",
            "$r5 = (boolean[]) $r4",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ToStringStyle__appendDetail__-1234009071\\2329.smt2",
        "z3": {
            "memory": 32620544,
            "run_time": 0.13516640663146973,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3397:\r\n  ;;   var3397!val!0 var3397!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3397!val!0 () var3397)\r\n  (declare-fun var3397!val!1 () var3397)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3397)) (or (= x var3397!val!0) (= x var3397!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3738:\r\n  ;;   var3738!val!0 var3738!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3738!val!0 () var3738)\r\n  (declare-fun var3738!val!1 () var3738)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3738)) (or (= x var3738!val!0) (= x var3738!val!1)))\r\n  ;; -----------\r\n  (define-fun var446 () var3397\r\n    var3397!val!0)\r\n  (define-fun var1861 () String\r\n    \"!0!\")\r\n  (define-fun var2445 () var3738\r\n    var3738!val!0)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var695 () String\r\n    \"!2!\")\r\n  (define-fun null-var3397 () var3397\r\n    var3397!val!1)\r\n  (define-fun null-var3738 () var3738\r\n    var3738!val!1)\r\n  (define-fun var446!1 () var3397\r\n    var3397!val!0)\r\n  (define-fun var1861!1 () String\r\n    \"\")\r\n  (define-fun cast-from-var3397-to-var556 ((x!0 var3397)) var556\r\n    var556!val!0)\r\n  (define-fun append/-143899486 ((x!0 String) (x!1 var556)) String\r\n    \"\")\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2248704,
            "run_time": 0.048731088638305664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3738 is 2\r\n; rep: (as @var3738_0 var3738)\r\n; rep: (as @var3738_1 var3738)\r\n; cardinality of var2484 is 1\r\n; rep: (as @var2484_0 var2484)\r\n; cardinality of var3397 is 2\r\n; rep: (as @var3397_0 var3397)\r\n; rep: (as @var3397_1 var3397)\r\n; cardinality of var556 is 1\r\n; rep: (as @var556_0 var556)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun append/-143899486 ((BOUND_VARIABLE_528 String) (BOUND_VARIABLE_529 var556)) String \"\")\r\n(define-fun cast-from-var3397-to-var556 ((BOUND_VARIABLE_532 var3397)) var556 (as @var556_0 var556))\r\n(define-fun null-var3738 () var3738 (as @var3738_0 var3738))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3397 () var3397 (as @var3397_0 var3397))\r\n(define-fun var2445 () var3738 (as @var3738_1 var3738))\r\n(define-fun var1861 () String \"\")\r\n(define-fun var695 () String \"\")\r\n(define-fun var446 () var3397 (as @var3397_1 var3397))\r\n(define-fun var1861!1 () String \"\")\r\n(define-fun var446!1 () var3397 (as @var3397_0 var3397))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37535744,
            "run_time": 0.28391289710998535,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3397:\n  ;;   var3397!val!0 var3397!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3397!val!0 () var3397)\n  (declare-fun var3397!val!1 () var3397)\n  ;; cardinality constraint:\n  (forall ((x var3397)) (or (= x var3397!val!0) (= x var3397!val!1)))\n  ;; -----------\n  ;; universe for var3738:\n  ;;   var3738!val!0 var3738!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3738!val!0 () var3738)\n  (declare-fun var3738!val!1 () var3738)\n  ;; cardinality constraint:\n  (forall ((x var3738)) (or (= x var3738!val!0) (= x var3738!val!1)))\n  ;; -----------\n  (define-fun var1861 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun null-var3738 () var3738\n    var3738!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2445 () var3738\n    var3738!val!0)\n  (define-fun var695 () String\n    \"\\u{0}\")\n  (define-fun null-var3397 () var3397\n    var3397!val!1)\n  (define-fun var446 () var3397\n    var3397!val!0)\n  (define-fun var446!1 () var3397\n    var3397!val!0)\n  (define-fun var1861!1 () String\n    \"\")\n  (define-fun cast-from-var3397-to-var556 ((x!0 var3397)) var556\n    var556!val!0)\n  (define-fun append/-143899486 ((x!0 String) (x!1 var556)) String\n    \"\")\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141750272,
            "run_time": 1.7615618705749512,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var446 () var3397 var3397!8)\r\n  (define-fun var695 () String \"\\u{0}\")\r\n  (define-fun var1861 () String \"\\u{0}\")\r\n  (define-fun var2445 () var3738 var3738!6)\r\n  (define-fun null-var3397 () var3397 var3397!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3738 () var3738 var3738!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.apache.commons.lang3.builder.ToStringStyle",
            "r0 := @parameter0: java.lang.StringBuffer",
            "r3 := @parameter1: java.lang.String",
            "r1 := @parameter2: java.util.Map",
            "virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.Object)>(r1)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.MethodUtils$valueOf__252__apply__-1912307660\\5515.smt2",
        "z3": {
            "memory": 32468992,
            "run_time": 0.14392352104187012,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2655:\r\n  ;;   var2655!val!0 var2655!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2655!val!0 () var2655)\r\n  (declare-fun var2655!val!1 () var2655)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2655)) (or (= x var2655!val!0) (= x var2655!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1289:\r\n  ;;   var1289!val!0 var1289!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1289!val!0 () var1289)\r\n  (declare-fun var1289!val!1 () var1289)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1289)) (or (= x var1289!val!0) (= x var1289!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2655 () var2655\r\n    var2655!val!1)\r\n  (define-fun var3950 () String\r\n    (String_valueOf/-333372740\r\n  (cast-from-ClassObject-to-var1289 (cast-from-var1289-to-ClassObject var1932))))\r\n  (define-fun null-var1289 () var1289\r\n    var1289!val!1)\r\n  (define-fun var1932 () var1289\r\n    var1289!val!0)\r\n  (define-fun var2970 () ClassObject\r\n    (cast-from-var1289-to-ClassObject var1932))\r\n  (define-fun var2179 () var2655\r\n    var2655!val!0)\r\n  (define-fun cast-from-ClassObject-to-var1289 ((x!0 ClassObject)) var1289\r\n    var1289!val!0)\r\n  (define-fun cast-from-var1289-to-ClassObject ((x!0 var1289)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var1289)) String\r\n    \"\")\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.1258091926574707,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2655 is 2\r\n; rep: (as @var2655_0 var2655)\r\n; rep: (as @var2655_1 var2655)\r\n; cardinality of var1289 is 2\r\n; rep: (as @var1289_0 var1289)\r\n; rep: (as @var1289_1 var1289)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var1289-to-ClassObject ((BOUND_VARIABLE_432 var1289)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_435 var1289)) String \"\")\r\n(define-fun cast-from-ClassObject-to-var1289 ((BOUND_VARIABLE_438 ClassObject)) var1289 (as @var1289_0 var1289))\r\n(define-fun null-var2655 () var2655 (as @var2655_0 var2655))\r\n(define-fun null-var1289 () var1289 (as @var1289_0 var1289))\r\n(define-fun var2179 () var2655 (as @var2655_1 var2655))\r\n(define-fun var1932 () var1289 (as @var1289_1 var1289))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37208064,
            "run_time": 0.201646089553833,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2655:\n  ;;   var2655!val!0 var2655!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2655!val!0 () var2655)\n  (declare-fun var2655!val!1 () var2655)\n  ;; cardinality constraint:\n  (forall ((x var2655)) (or (= x var2655!val!0) (= x var2655!val!1)))\n  ;; -----------\n  ;; universe for var1289:\n  ;;   var1289!val!0 var1289!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1289!val!0 () var1289)\n  (declare-fun var1289!val!1 () var1289)\n  ;; cardinality constraint:\n  (forall ((x var1289)) (or (= x var1289!val!0) (= x var1289!val!1)))\n  ;; -----------\n  (define-fun null-var2655 () var2655\n    var2655!val!1)\n  (define-fun var2970 () ClassObject\n    (cast-from-var1289-to-ClassObject var1932))\n  (define-fun null-var1289 () var1289\n    var1289!val!1)\n  (define-fun var1932 () var1289\n    var1289!val!0)\n  (define-fun var3950 () String\n    (String_valueOf/-333372740\n  (cast-from-ClassObject-to-var1289 (cast-from-var1289-to-ClassObject var1932))))\n  (define-fun var2179 () var2655\n    var2655!val!0)\n  (define-fun cast-from-ClassObject-to-var1289 ((x!0 ClassObject)) var1289\n    var1289!val!0)\n  (define-fun cast-from-var1289-to-ClassObject ((x!0 var1289)) ClassObject\n    ClassObject!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var1289)) String\n    \"\")\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 134037504,
            "run_time": 1.6821346282958984,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1932 () var1289 var1289!8)\r\n  (define-fun var2179 () var2655 var2655!6)\r\n  (define-fun null-var1289 () var1289 var1289!4)\r\n  (define-fun null-var2655 () var2655 var2655!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "$r0 := @this: org.apache.commons.lang3.reflect.MethodUtils$valueOf__252",
            "$r1 := @parameter0: java.lang.Object",
            "$r2 = (java.lang.Class) $r1",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r2)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ObjectUtils__identityToString__285071854\\1022.smt2",
        "z3": {
            "memory": 32698368,
            "run_time": 0.15967655181884766,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  ;; universe for var252:\r\n  ;;   var252!val!2 var252!val!1 var252!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var252!val!2 () var252)\r\n  (declare-fun var252!val!1 () var252)\r\n  (declare-fun var252!val!0 () var252)\r\n  ;; cardinality constraint:\r\n  (forall ((x var252))\r\n          (or (= x var252!val!2) (= x var252!val!1) (= x var252!val!0)))\r\n  ;; -----------\r\n  (define-fun var1850 () String\r\n    (getName/-1958580599 (getClass/1258963082 var1529!1)))\r\n  (define-fun var1689 () Int\r\n    (+ (length/-1112840705 var1376)\r\n   (str.len (getName/-1958580599 (getClass/1258963082 var1529!1)))\r\n   1\r\n   (str.len (var3117_identityHashCodeHex/834881754 var1529!1))))\r\n  (define-fun var1376!1 () String\r\n    \"\")\r\n  (define-fun var3031 () String\r\n    (str.++ var1376!1 (getName/-1958580599 (getClass/1258963082 var1529!1))))\r\n  (define-fun var1376!2 () String\r\n    \"\")\r\n  (define-fun var736 () Int\r\n    (+ (length/-1112840705 var1376)\r\n   (str.len (getName/-1958580599 (getClass/1258963082 var1529!1)))))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3322 () Int\r\n    (str.len (getName/-1958580599 (getClass/1258963082 var1529!1))))\r\n  (define-fun var1529!1 () var252\r\n    var252!val!2)\r\n  (define-fun var2031 () String\r\n    (append/1183289509\r\n  (str.++ var1376!1 (getName/-1958580599 (getClass/1258963082 var1529!1)))\r\n  64))\r\n  (define-fun var3567 () Int\r\n    (str.len (var3117_identityHashCodeHex/834881754 var1529!1)))\r\n  (define-fun var1529 () var252\r\n    var252!val!0)\r\n  (define-fun var1376 () String\r\n    \"A\")\r\n  (define-fun var94 () String\r\n    (var3117_identityHashCodeHex/834881754 var1529!1))\r\n  (define-fun var3035 () Int\r\n    (+ (length/-1112840705 var1376)\r\n   (str.len (getName/-1958580599 (getClass/1258963082 var1529!1)))\r\n   1))\r\n  (define-fun var2031!1 () String\r\n    \"\")\r\n  (define-fun var3862 () ClassObject\r\n    (getClass/1258963082 var1529!1))\r\n  (define-fun var588 () Int\r\n    (length/-1112840705 var1376))\r\n  (define-fun null-var252 () var252\r\n    var252!val!1)\r\n  (define-fun var1689!1 () Int\r\n    0)\r\n  (define-fun var2265 () String\r\n    \"\")\r\n  (define-fun getClass/1258963082 ((x!0 var252)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"A\")\r\n  (define-fun append/1183289509 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun var2452_requireNonNull/1378936425 ((x!0 var252) (x!1 String)) var252\r\n    var252!val!2)\r\n  (define-fun var3117_identityHashCodeHex/834881754 ((x!0 var252)) String\r\n    \"\")\r\n  (define-fun ensureCapacity/378252057 ((x!0 String) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun length/-1112840705 ((x!0 String)) Int\r\n    0)\r\n)\r\n(error \"line 61 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11259904,
            "run_time": 0.062274932861328125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var252 is 3\r\n; rep: (as @var252_0 var252)\r\n; rep: (as @var252_1 var252)\r\n; rep: (as @var252_2 var252)\r\n; cardinality of var2452 is 1\r\n; rep: (as @var2452_0 var2452)\r\n; cardinality of var3117 is 1\r\n; rep: (as @var3117_0 var3117)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2452_requireNonNull/1378936425 ((BOUND_VARIABLE_930 var252) (BOUND_VARIABLE_931 String)) var252 (as @var252_0 var252))\r\n(define-fun getClass/1258963082 ((_arg_1 var252)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun var3117_identityHashCodeHex/834881754 ((BOUND_VARIABLE_934 var252)) String \"\")\r\n(define-fun length/-1112840705 ((BOUND_VARIABLE_937 String)) Int 0)\r\n(define-fun ensureCapacity/378252057 ((BOUND_VARIABLE_940 String) (BOUND_VARIABLE_941 Int)) void (as @void_0 void))\r\n(define-fun append/1183289509 ((_arg_1 String) (_arg_2 Int)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var252 () var252 (as @var252_0 var252))\r\n(define-fun var1376 () String \"\")\r\n(define-fun var1529 () var252 (as @var252_1 var252))\r\n(define-fun var1529!1 () var252 (as @var252_2 var252))\r\n(define-fun var2265 () String \"\")\r\n(define-fun var1376!1 () String \"\")\r\n(define-fun var1689!1 () Int 0)\r\n(define-fun var1376!2 () String \"\")\r\n(define-fun var2031!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37638144,
            "run_time": 0.15528178215026855,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 60 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 61 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175570944,
            "run_time": 1.8691673278808594,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var252/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.ObjectUtils__identityToString__285071854\\1022.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_16_3 =\r\n     concat(var1376!1, all_16_4)\r\n   var2031!1 =\r\n     concat(all_16_2, rhs)\r\n   var1376!2 =\r\n     concat(var1376!1, rhs)\r\n\r\n1297ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuffer: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuffer: void ensureCapacity(int)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: int length()>": 1,
            "<java.lang.String: int length()>": 2,
            "<java.lang.StringBuffer: void ensureCapacity(int)>": 1,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 2,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char)>": 1
        },
        "jimple_statements": [
            "r4 := @parameter0: java.lang.StringBuffer",
            "r0 := @parameter1: java.lang.Object",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"object\")",
            "$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>()",
            "r3 = staticinvoke <org.apache.commons.lang3.ObjectUtils: java.lang.String identityHashCodeHex(java.lang.Object)>(r0)",
            "$i1 = virtualinvoke r4.<java.lang.StringBuffer: int length()>()",
            "$i0 = virtualinvoke r2.<java.lang.String: int length()>()",
            "$i2 = $i1 + $i0",
            "$i4 = $i2 + 1",
            "$i3 = virtualinvoke r3.<java.lang.String: int length()>()",
            "$i5 = $i4 + $i3",
            "virtualinvoke r4.<java.lang.StringBuffer: void ensureCapacity(int)>($i5)",
            "$r5 = virtualinvoke r4.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r2)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuffer: java.lang.StringBuffer append(char)>(64)",
            "virtualinvoke $r6.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.TypeUtils__toLongString__1204546232\\4035.smt2",
        "z3": {
            "memory": 32509952,
            "run_time": 0.16067767143249512,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 63 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.030622482299804688,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33906688,
            "run_time": 0.13702011108398438,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 63 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 142856192,
            "run_time": 1.6634390354156494,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<org.apache.commons.lang3.reflect.TypeUtils: java.lang.String toString(java.lang.reflect.Type)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.reflect.TypeVariable",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"typeVariable\")",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "r2 = interfaceinvoke r0.<java.lang.reflect.TypeVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()>()",
            "$z0 = r2 instanceof java.lang.Class",
            "if $z0 == 0 goto $z1 = r2 instanceof java.lang.reflect.Type",
            "$z1 = r2 instanceof java.lang.reflect.Type",
            "if $z1 == 0 goto virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)",
            "$r3 = (java.lang.reflect.Type) r2",
            "$r4 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.String toString(java.lang.reflect.Type)>($r3)",
            "virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "goto [?= $r10 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)]",
            "$r10 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)",
            "$r11 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.String typeVariableToString(java.lang.reflect.TypeVariable)>(r0)",
            "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r13"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__lastIndexOf__2077538686\\3544.smt2",
        "z3": {
            "memory": 33013760,
            "run_time": 0.10487532615661621,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var609 () Int\r\n    (var1098_lastIndexOf/-155744409\r\n  var1270\r\n  var2731\r\n  (String_length/-667254855 var1270)))\r\n  (define-fun var1270 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2731 () String\r\n    \"!2!\")\r\n  (define-fun var1265 () Int\r\n    (String_length/-667254855 var1270))\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    0)\r\n  (define-fun var1098_lastIndexOf/-155744409 ((x!0 String) (x!1 String) (x!2 Int)) Int\r\n    0)\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 3977216,
            "run_time": 0.030873537063598633,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1098 is 1\r\n; rep: (as @var1098_0 var1098)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_length/-667254855 ((BOUND_VARIABLE_513 String)) Int 0)\r\n(define-fun var1098_lastIndexOf/-155744409 ((BOUND_VARIABLE_516 String) (BOUND_VARIABLE_517 String) (BOUND_VARIABLE_518 Int)) Int 0)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1270 () String \"\")\r\n(define-fun var2731 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38215680,
            "run_time": 0.16999030113220215,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2731 () String\n    \"\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1265 () Int\n    (String_length/-667254855 var1270))\n  (define-fun var1270 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var609 () Int\n    (var1098_lastIndexOf/-155744409\n  var1270\n  var2731\n  (String_length/-667254855 var1270)))\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    0)\n  (define-fun var1098_lastIndexOf/-155744409 ((x!0 String) (x!1 String) (x!2 Int)) Int\n    0)\n)\n(error \"line 22 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132829184,
            "run_time": 1.6157770156860352,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2731 () String \"\\u{0}\")\r\n  (define-fun var1270 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "r1 := @parameter1: java.lang.CharSequence",
            "if r0 != null goto $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$i1 = staticinvoke <org.apache.commons.lang3.CharSequenceUtils: int lastIndexOf(java.lang.CharSequence,java.lang.CharSequence,int)>(r0, r1, $i0)",
            "return $i1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.stream.LangCollectors$init__235__get__2068052821\\5471.smt2",
        "z3": {
            "memory": 32923648,
            "run_time": 0.13156914710998535,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2883:\r\n  ;;   var2883!val!0 var2883!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2883!val!0 () var2883)\r\n  (declare-fun var2883!val!1 () var2883)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2883)) (or (= x var2883!val!0) (= x var2883!val!1)))\r\n  ;; -----------\r\n  (define-fun var2028 () var2883\r\n    var2883!val!0)\r\n  (define-fun null-var2883 () var2883\r\n    var2883!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3020 () String\r\n    String-init)\r\n  (define-fun var3020!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n)\r\n(error \"line 21 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2289664,
            "run_time": 0.030324220657348633,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2883 is 2\r\n; rep: (as @var2883_0 var2883)\r\n; rep: (as @var2883_1 var2883)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun null-var2883 () var2883 (as @var2883_0 var2883))\r\n(define-fun var2028 () var2883 (as @var2883_1 var2883))\r\n(define-fun var3020!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34795520,
            "run_time": 0.15394282341003418,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2883:\n  ;;   var2883!val!0 var2883!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2883!val!0 () var2883)\n  (declare-fun var2883!val!1 () var2883)\n  ;; cardinality constraint:\n  (forall ((x var2883)) (or (= x var2883!val!0) (= x var2883!val!1)))\n  ;; -----------\n  (define-fun var2028 () var2883\n    var2883!val!0)\n  (define-fun null-var2883 () var2883\n    var2883!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3020 () String\n    String-init)\n  (define-fun var3020!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n)\n(error \"line 21 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 143249408,
            "run_time": 1.7083220481872559,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3020!1 () String \"\")\r\n  (define-fun var2028 () var2883 var2883!4)\r\n  (define-fun null-var2883 () var2883 var2883!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1
        },
        "jimple_statements": [
            "$r0 := @this: org.apache.commons.lang3.stream.LangCollectors$init__235",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__replaceChars__-58783429\\4564.smt2",
        "z3": {
            "memory": 32636928,
            "run_time": 0.10799765586853027,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var783 () String\r\n    (str.replace_all var1433 (str.from_code var1620) (str.from_code var3991)))\r\n  (define-fun var1620 () Int\r\n    1)\r\n  (define-fun var3991 () Int\r\n    1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1433 () String\r\n    \"A\")\r\n  (define-fun null-Int () Int\r\n    0)\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.02993464469909668,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1506 is 1\r\n; rep: (as @var1506_0 var1506)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int 0)\r\n(define-fun var1433 () String \"\")\r\n(define-fun var1620 () Int 1)\r\n(define-fun var3991 () Int 1)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38043648,
            "run_time": 0.15716934204101562,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    0)\n  (define-fun var1433 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1620 () Int\n    1)\n  (define-fun var783 () String\n    (str.replace_all var1433 (str.from_code var1620) (str.from_code var3991)))\n  (define-fun var3991 () Int\n    1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n)\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140955648,
            "run_time": 1.581986427307129,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3991 () Int 1)\r\n  (define-fun var1620 () Int 1)\r\n  (define-fun var1433 () String \"\\u{0}\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: java.lang.String replace(char,char)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String replace(char,char)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "c1 := @parameter2: char",
            "if r0 != null goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(c0, c1)",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String replace(char,char)>(c0, c1)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__endsWith__-567571448\\1451.smt2",
        "z3": {
            "memory": 32608256,
            "run_time": 0.19962239265441895,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var515 () Bool\r\n    (var576_regionMatches/613342544\r\n  var1759\r\n  var3878\r\n  (- (String_length/-667254855 var1759) (String_length/-667254855 var1995))\r\n  var1995\r\n  0\r\n  (String_length/-667254855 var1995)))\r\n  (define-fun var3208 () Int\r\n    (- (String_length/-667254855 var1759) (String_length/-667254855 var1995)))\r\n  (define-fun var2036 () Int\r\n    (String_length/-667254855 var1995))\r\n  (define-fun var2431 () Int\r\n    (String_length/-667254855 var1759))\r\n  (define-fun var1759 () String\r\n    \"!0!\")\r\n  (define-fun var1798 () Int\r\n    (String_length/-667254855 var1995))\r\n  (define-fun var3878 () Bool\r\n    true)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var998 () Int\r\n    (String_length/-667254855 var1995))\r\n  (define-fun var1995 () String\r\n    \"!2!\")\r\n  (define-fun var3615 () Int\r\n    (String_length/-667254855 var1759))\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    0)\r\n  (define-fun var576_regionMatches/613342544 ((x!0 String)\r\n   (x!1 Bool)\r\n   (x!2 Int)\r\n   (x!3 String)\r\n   (x!4 Int)\r\n   (x!5 Int)) Bool\r\n    false)\r\n)\r\n(error \"line 34 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2318336,
            "run_time": 0.02971339225769043,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var576 is 1\r\n; rep: (as @var576_0 var576)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_length/-667254855 ((_arg_1 String)) Int 0)\r\n(define-fun var576_regionMatches/613342544 ((BOUND_VARIABLE_569 String) (BOUND_VARIABLE_570 Bool) (BOUND_VARIABLE_571 Int) (BOUND_VARIABLE_572 String) (BOUND_VARIABLE_573 Int) (BOUND_VARIABLE_574 Int)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var1759 () String \"\")\r\n(define-fun var1995 () String \"\")\r\n(define-fun var3878 () Bool false)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38055936,
            "run_time": 0.2642245292663574,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun var1759 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var3615 () Int\n    (String_length/-667254855 var1759))\n  (define-fun var3878 () Bool\n    true)\n  (define-fun var1995 () String\n    \"\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3208 () Int\n    (- (String_length/-667254855 var1759) (String_length/-667254855 var1995)))\n  (define-fun var515 () Bool\n    (var576_regionMatches/613342544\n  var1759\n  var3878\n  (- (String_length/-667254855 var1759) (String_length/-667254855 var1995))\n  var1995\n  0\n  (String_length/-667254855 var1995)))\n  (define-fun var2431 () Int\n    (String_length/-667254855 var1759))\n  (define-fun var1798 () Int\n    (String_length/-667254855 var1995))\n  (define-fun var2036 () Int\n    (String_length/-667254855 var1995))\n  (define-fun var998 () Int\n    (String_length/-667254855 var1995))\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    0)\n  (define-fun var576_regionMatches/613342544 ((x!0 String)\n   (x!1 Bool)\n   (x!2 Int)\n   (x!3 String)\n   (x!4 Int)\n   (x!5 Int)) Bool\n    false)\n)\n(error \"line 34 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166318080,
            "run_time": 1.7009339332580566,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1995 () String \"\\u{0}\")\r\n  (define-fun var1759 () String \"\\u{1}\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var3878 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int (ite (= x!0 \"\\u{1}\") 7 (ite (= x!0 \"\\u{0}\") 7 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 5
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "r1 := @parameter1: java.lang.CharSequence",
            "z0 := @parameter2: boolean",
            "if r0 == null goto (branch)",
            "if r1 != null goto $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>()",
            "$i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>()",
            "$i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "if $i1 <= $i0 goto $i3 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$i3 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$i2 = interfaceinvoke r1.<java.lang.CharSequence: int length()>()",
            "i4 = $i3 - $i2",
            "$i5 = interfaceinvoke r1.<java.lang.CharSequence: int length()>()",
            "$z1 = staticinvoke <org.apache.commons.lang3.CharSequenceUtils: boolean regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)>(r0, z0, i4, r1, 0, $i5)",
            "return $z1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.mutable.MutableShort__toString__-774342045\\3144.smt2",
        "z3": {
            "memory": 32460800,
            "run_time": 0.10673642158508301,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1104:\r\n  ;;   var1104!val!1 var1104!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1104!val!1 () var1104)\r\n  (declare-fun var1104!val!0 () var1104)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1104)) (or (= x var1104!val!1) (= x var1104!val!0)))\r\n  ;; -----------\r\n  (define-fun var1220 () String\r\n    (String_valueOf/1240665136 (value/483932419 var3356)))\r\n  (define-fun var3356 () var1104\r\n    var1104!val!0)\r\n  (define-fun null-var1104 () var1104\r\n    var1104!val!1)\r\n  (define-fun var1024 () Int\r\n    (value/483932419 var3356))\r\n  (define-fun var3196 () Int\r\n    (value/483932419 var3356))\r\n  (define-fun value/483932419 ((x!0 var1104)) Int\r\n    0)\r\n  (define-fun String_valueOf/1240665136 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 20 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11730944,
            "run_time": 0.04535055160522461,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1104 is 2\r\n; rep: (as @var1104_0 var1104)\r\n; rep: (as @var1104_1 var1104)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun value/483932419 ((BOUND_VARIABLE_436 var1104)) Int 0)\r\n(define-fun String_valueOf/1240665136 ((BOUND_VARIABLE_439 Int)) String \"\")\r\n(define-fun null-var1104 () var1104 (as @var1104_0 var1104))\r\n(define-fun var3356 () var1104 (as @var1104_1 var1104))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35819520,
            "run_time": 0.15471220016479492,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1104:\n  ;;   var1104!val!1 var1104!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1104!val!1 () var1104)\n  (declare-fun var1104!val!0 () var1104)\n  ;; cardinality constraint:\n  (forall ((x var1104)) (or (= x var1104!val!1) (= x var1104!val!0)))\n  ;; -----------\n  (define-fun var3356 () var1104\n    var1104!val!0)\n  (define-fun null-var1104 () var1104\n    var1104!val!1)\n  (define-fun var3196 () Int\n    (value/483932419 var3356))\n  (define-fun var1220 () String\n    (String_valueOf/1240665136 (value/483932419 var3356)))\n  (define-fun var1024 () Int\n    (value/483932419 var3356))\n  (define-fun value/483932419 ((x!0 var1104)) Int\n    0)\n  (define-fun String_valueOf/1240665136 ((x!0 Int)) String\n    \"\")\n)\n(error \"line 20 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132616192,
            "run_time": 1.5578937530517578,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3356 () var1104 var1104!4)\r\n  (define-fun null-var1104 () var1104 var1104!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 1,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.mutable.MutableShort",
            "$s0 = r0.<org.apache.commons.lang3.mutable.MutableShort: short value>",
            "$i1 = (int) $s0",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>($i1)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__stripEnd__1285542170\\5604-deviant-0.smt2",
        "z3": {
            "memory": 32567296,
            "run_time": 0.12748336791992188,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 26 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8867840,
            "run_time": 0.059763193130493164,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33812480,
            "run_time": 0.24019336700439453,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 26 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141533184,
            "run_time": 1.5946288108825684,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "i5 = staticinvoke <org.apache.commons.lang3.StringUtils: int length(java.lang.CharSequence)>(r0)",
            "if i5 != 0 goto (branch)",
            "if r1 != null goto $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "if i5 == 0 goto $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i5)",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i5)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringAfter__1025226940\\5697-deviant-0.smt2",
        "z3": {
            "memory": 34787328,
            "run_time": 0.14246678352355957,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var951 () Int\r\n    (+ (str.indexof var3283 (str.from_code var427) 0) 1))\r\n  (define-fun var3283 () String\r\n    \"\")\r\n  (define-fun var1606 () Bool\r\n    (var1786_isEmpty/1595667738 var3283))\r\n  (define-fun var3330 () Int\r\n    (str.indexof var3283 (str.from_code var427) 0))\r\n  (define-fun var1853 () Int\r\n    (- 1))\r\n  (define-fun null-Int () Int\r\n    (- 1))\r\n  (define-fun var427 () Int\r\n    (- 2))\r\n  (define-fun null-String () String\r\n    \"C\")\r\n  (define-fun var1786_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13189120,
            "run_time": 0.04685568809509277,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1623 is 1\r\n; rep: (as @var1623_0 var1623)\r\n; cardinality of var1786 is 1\r\n; rep: (as @var1786_0 var1786)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1786_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int 196607)\r\n(define-fun var3283 () String \"\")\r\n(define-fun var427 () Int 196608)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38920192,
            "run_time": 0.21802616119384766,
            "is_sat": "",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 144961536,
            "run_time": 1.3466408252716064,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.StringUtils__substringAfter__1025226940\\5697-deviant-0.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n802ms\r\nstr_cons(var427, 0) (of class ap.parser.IFunApp)\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int)>": 1,
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(i0)",
            "i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(i0)",
            "$i4 = (int) -1",
            "if i1 != $i4 goto $i2 = i1 + 1",
            "$i2 = i1 + 1",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__stripToNull__-829298938\\5647.smt2",
        "z3": {
            "memory": 33050624,
            "run_time": 0.13711953163146973,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3713 () String\r\n    (var1178_strip/820136851 var763 null-String))\r\n  (define-fun var120 () String\r\n    (var1178_strip/820136851 var763 null-String))\r\n  (define-fun var763 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2637 () Bool\r\n    (= (str.len (var1178_strip/820136851 var763 null-String)) 0))\r\n  (define-fun var1178_strip/820136851 ((x!0 String) (x!1 String)) String\r\n    \"A\")\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2220032,
            "run_time": 0.030987977981567383,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var865 is 1\r\n; rep: (as @var865_0 var865)\r\n; cardinality of var1178 is 1\r\n; rep: (as @var1178_0 var1178)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1178_strip/820136851 ((_arg_1 String) (_arg_2 String)) String \"A\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun var763 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33656832,
            "run_time": 0.1617264747619629,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 25 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164945920,
            "run_time": 1.842952013015747,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var763 () String \"\\u{1}\")\r\n  (define-fun null-String () String \"\\u{2}\")\r\n  (define-fun var1178_strip/820136851 ((x!0 String) (x!1 String)) String (ite (and (= x!0 \"\\u{1}\") (= x!1 \"\\u{2}\")) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: boolean isEmpty()>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto r1 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>(r0, null)",
            "r1 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>(r0, null)",
            "$z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "if $z0 == 0 goto $r2 = r1",
            "$r2 = r1",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.RandomStringUtils__random__-1251637029\\397.smt2",
        "z3": {
            "memory": 33046528,
            "run_time": 0.11687564849853516,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1803 () Int\r\n    1)\r\n  (define-fun var2336 () String\r\n    \"!0!\")\r\n  (define-fun var165 () String\r\n    (var3061_random/1671104558 var1803 (toCharArray/415275702 var2336)))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var665 () (Array Int Int)\r\n    (toCharArray/415275702 var2336))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var3061_random/1671104558 ((x!0 Int) (x!1 (Array Int Int))) String\r\n    \"\")\r\n)\r\n(error \"line 25 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2334720,
            "run_time": 0.061369895935058594,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2781 is 1\r\n; rep: (as @var2781_0 var2781)\r\n; cardinality of var3061 is 1\r\n; rep: (as @var3061_0 var3061)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun toCharArray/415275702 ((BOUND_VARIABLE_512 String)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3061_random/1671104558 ((BOUND_VARIABLE_517 Int) (BOUND_VARIABLE_518 (Array Int Int))) String \"\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1803 () Int 0)\r\n(define-fun var2336 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39104512,
            "run_time": 0.21782159805297852,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    0)\n  (define-fun var1803 () Int\n    1)\n  (define-fun var165 () String\n    (var3061_random/1671104558 var1803 (toCharArray/415275702 var2336)))\n  (define-fun var665 () (Array Int Int)\n    (toCharArray/415275702 var2336))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2336 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var3061_random/1671104558 ((x!0 Int) (x!1 (Array Int Int))) String\n    \"\")\n)\n(error \"line 25 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151064576,
            "run_time": 1.487248420715332,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2336 () String \"\\u{0}\")\r\n  (define-fun var1803 () Int 1)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: char[] toCharArray()>"
        ],
        "api_count": {
            "<java.lang.String: char[] toCharArray()>": 1
        },
        "jimple_statements": [
            "i0 := @parameter0: int",
            "r0 := @parameter1: java.lang.String",
            "if r0 != null goto $r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()",
            "$r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()",
            "$r2 = staticinvoke <org.apache.commons.lang3.RandomStringUtils: java.lang.String random(int,char[])>(i0, $r1)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringBeforeLast__-1368097311\\5787.smt2",
        "z3": {
            "memory": 32645120,
            "run_time": 0.15046906471252441,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3600 () Bool\r\n    (var1346_isEmpty/1595667738 var1577))\r\n  (define-fun var1595 () Int\r\n    (- 1))\r\n  (define-fun var1192 () Int\r\n    (lastIndexOf/-618837785 var1577 var169))\r\n  (define-fun var1577 () String\r\n    \"\")\r\n  (define-fun var3283 () Bool\r\n    (var1346_isEmpty/1595667738 var169))\r\n  (define-fun var169 () String\r\n    \"\")\r\n  (define-fun var2190 () String\r\n    (str.substr var1577 0 (- (lastIndexOf/-618837785 var1577 var169) 0)))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1346_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int\r\n    0)\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2269184,
            "run_time": 0.030942916870117188,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var354 is 1\r\n; rep: (as @var354_0 var354)\r\n; cardinality of var1346 is 1\r\n; rep: (as @var1346_0 var1346)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1346_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun lastIndexOf/-618837785 ((_arg_1 String) (_arg_2 String)) Int 0)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1577 () String \"\")\r\n(define-fun var169 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38043648,
            "run_time": 0.23043107986450195,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3283 () Bool\n    (var1346_isEmpty/1595667738 var169))\n  (define-fun var169 () String\n    \"\\u{0}\")\n  (define-fun var1577 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1595 () Int\n    (- 1))\n  (define-fun var2190 () String\n    (str.substr var1577 0 (- (lastIndexOf/-618837785 var1577 var169) 0)))\n  (define-fun var1192 () Int\n    (lastIndexOf/-618837785 var1577 var169))\n  (define-fun var3600 () Bool\n    (var1346_isEmpty/1595667738 var1577))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int\n    0)\n  (define-fun var1346_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 172630016,
            "run_time": 1.845942497253418,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var169 () String \"\\u{0}\")\r\n  (define-fun var1577 () String \"\")\r\n  (define-fun null-String () String \"\\u{1}\")\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int (ite (and (= x!0 \"\") (= x!1 \"\\u{0}\")) 0 0))\r\n  (define-fun var1346_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\") false (ite (= x!0 \"\\u{0}\") false true)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: int lastIndexOf(java.lang.String)>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int lastIndexOf(java.lang.String)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(r1)",
            "i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(r1)",
            "$i2 = (int) -1",
            "if i0 != $i2 goto $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0)",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__length__1752045268\\3833.smt2",
        "z3": {
            "memory": 32620544,
            "run_time": 0.10388755798339844,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2779 () String\r\n    \"!0!\")\r\n  (define-fun var1746 () Int\r\n    (String_length/-667254855 var2779))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    0)\r\n)\r\n(error \"line 18 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2265088,
            "run_time": 0.028874635696411133,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_length/-667254855 ((BOUND_VARIABLE_471 String)) Int 0)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2779 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37408768,
            "run_time": 0.10315823554992676,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1746 () Int\n    (String_length/-667254855 var2779))\n  (define-fun var2779 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    0)\n)\n(error \"line 18 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132927488,
            "run_time": 1.4846165180206299,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2779 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "if r0 != null goto $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "return $i0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.stream.LangCollectors$toString__254__apply__-323368689\\5547.smt2",
        "z3": {
            "memory": 32464896,
            "run_time": 0.0873880386352539,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3404:\r\n  ;;   var3404!val!1 var3404!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3404!val!1 () var3404)\r\n  (declare-fun var3404!val!0 () var3404)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3404)) (or (= x var3404!val!1) (= x var3404!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3843:\r\n  ;;   var3843!val!0 var3843!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3843!val!0 () var3843)\r\n  (declare-fun var3843!val!1 () var3843)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3843)) (or (= x var3843!val!0) (= x var3843!val!1)))\r\n  ;; -----------\r\n  (define-fun var2990 () var3404\r\n    var3404!val!0)\r\n  (define-fun null-var3404 () var3404\r\n    var3404!val!1)\r\n  (define-fun var2337 () String\r\n    (cast-from-var3843-to-String var1088))\r\n  (define-fun var959 () String\r\n    (cast-from-var3843-to-String var1088))\r\n  (define-fun null-var3843 () var3843\r\n    var3843!val!1)\r\n  (define-fun var1088 () var3843\r\n    var3843!val!0)\r\n  (define-fun cast-from-var3843-to-String ((x!0 var3843)) String\r\n    \"\")\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.030475139617919922,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3404 is 2\r\n; rep: (as @var3404_0 var3404)\r\n; rep: (as @var3404_1 var3404)\r\n; cardinality of var3843 is 2\r\n; rep: (as @var3843_0 var3843)\r\n; rep: (as @var3843_1 var3843)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var3843-to-String ((BOUND_VARIABLE_436 var3843)) String \"\")\r\n(define-fun null-var3404 () var3404 (as @var3404_0 var3404))\r\n(define-fun null-var3843 () var3843 (as @var3843_0 var3843))\r\n(define-fun var2990 () var3404 (as @var3404_1 var3404))\r\n(define-fun var1088 () var3843 (as @var3843_1 var3843))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34938880,
            "run_time": 0.1342630386352539,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3404:\n  ;;   var3404!val!1 var3404!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3404!val!1 () var3404)\n  (declare-fun var3404!val!0 () var3404)\n  ;; cardinality constraint:\n  (forall ((x var3404)) (or (= x var3404!val!1) (= x var3404!val!0)))\n  ;; -----------\n  ;; universe for var3843:\n  ;;   var3843!val!0 var3843!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3843!val!0 () var3843)\n  (declare-fun var3843!val!1 () var3843)\n  ;; cardinality constraint:\n  (forall ((x var3843)) (or (= x var3843!val!0) (= x var3843!val!1)))\n  ;; -----------\n  (define-fun var2990 () var3404\n    var3404!val!0)\n  (define-fun null-var3404 () var3404\n    var3404!val!1)\n  (define-fun var959 () String\n    (cast-from-var3843-to-String var1088))\n  (define-fun var2337 () String\n    (cast-from-var3843-to-String var1088))\n  (define-fun null-var3843 () var3843\n    var3843!val!1)\n  (define-fun var1088 () var3843\n    var3843!val!0)\n  (define-fun cast-from-var3843-to-String ((x!0 var3843)) String\n    \"\")\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 133087232,
            "run_time": 1.517721176147461,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1088 () var3843 var3843!8)\r\n  (define-fun var2990 () var3404 var3404!6)\r\n  (define-fun null-var3843 () var3843 var3843!4)\r\n  (define-fun null-var3404 () var3404 var3404!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "$r0 := @this: org.apache.commons.lang3.stream.LangCollectors$toString__254",
            "$r1 := @parameter0: java.lang.Object",
            "$r2 = (java.lang.StringBuilder) $r1",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.TypeUtils__toLongString__1204546232\\4063.smt2",
        "z3": {
            "memory": 32595968,
            "run_time": 0.11795330047607422,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 60 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.03012561798095703,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33886208,
            "run_time": 0.1379075050354004,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 60 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150892544,
            "run_time": 1.6206085681915283,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.reflect.TypeVariable",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"typeVariable\")",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "r2 = interfaceinvoke r0.<java.lang.reflect.TypeVariable: java.lang.reflect.GenericDeclaration getGenericDeclaration()>()",
            "$z0 = r2 instanceof java.lang.Class",
            "if $z0 == 0 goto $z1 = r2 instanceof java.lang.reflect.Type",
            "$z1 = r2 instanceof java.lang.reflect.Type",
            "if $z1 == 0 goto virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)",
            "virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)",
            "$r10 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)",
            "$r11 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.String typeVariableToString(java.lang.reflect.TypeVariable)>(r0)",
            "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r13"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__reverse__-1722075650\\4824.smt2",
        "z3": {
            "memory": 32600064,
            "run_time": 0.08994865417480469,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1936 () String\r\n    (reverse/1133943941 var934!1))\r\n  (define-fun var2981 () String\r\n    (reverse/1133943941 var934!1))\r\n  (define-fun var934 () String\r\n    String-init)\r\n  (define-fun var480 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var934!1 () String\r\n    \"!0!\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun reverse/1133943941 ((x!0 String)) String\r\n    \"\")\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.04171395301818848,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2405 is 1\r\n; rep: (as @var2405_0 var2405)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun reverse/1133943941 ((BOUND_VARIABLE_523 String)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun var480 () String \"\")\r\n(define-fun var934!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37982208,
            "run_time": 0.15253376960754395,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var934!1 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1936 () String\n    (reverse/1133943941 var934!1))\n  (define-fun var934 () String\n    String-init)\n  (define-fun var2981 () String\n    (reverse/1133943941 var934!1))\n  (define-fun var480 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun reverse/1133943941 ((x!0 String)) String\n    \"\")\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140095488,
            "run_time": 1.5498461723327637,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var934!1 () String \"\")\r\n  (define-fun var480 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder reverse()>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder reverse()>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>(r0)",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder reverse()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__endsWith__-567571448\\1460.smt2",
        "z3": {
            "memory": 32530432,
            "run_time": 0.1803145408630371,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 24 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2285568,
            "run_time": 0.030586719512939453,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33697792,
            "run_time": 0.13918066024780273,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 24 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 130306048,
            "run_time": 1.379622220993042,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 6,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "r1 := @parameter1: java.lang.CharSequence",
            "z0 := @parameter2: boolean",
            "if r0 == null goto (branch)",
            "if r0 != r1 goto $z2 = 0",
            "$z2 = 1",
            "goto [?= return $z2]",
            "return $z2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__stripEnd__1285542170\\5604.smt2",
        "z3": {
            "memory": 32559104,
            "run_time": 0.12039065361022949,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 28 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2269184,
            "run_time": 0.03108072280883789,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34709504,
            "run_time": 0.1377415657043457,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 28 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 142417920,
            "run_time": 1.5232915878295898,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "i5 = staticinvoke <org.apache.commons.lang3.StringUtils: int length(java.lang.CharSequence)>(r0)",
            "if i5 != 0 goto (branch)",
            "if r1 != null goto $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "if i5 == 0 goto $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i5)",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i5)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringAfter__1025226940\\5697.smt2",
        "z3": {
            "memory": 34717696,
            "run_time": 0.1823596954345703,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var951 () Int\r\n    (+ (str.indexof var3283 (str.from_code var427) 0) 1))\r\n  (define-fun var3283 () String\r\n    \"\\u{2ff7b}\")\r\n  (define-fun var1606 () Bool\r\n    (var1786_isEmpty/1595667738 var3283))\r\n  (define-fun var2924 () String\r\n    (let ((a!1 (- (str.len var3283)\r\n              (+ (str.indexof var3283 (str.from_code var427) 0) 1))))\r\n  (str.substr var3283 (+ (str.indexof var3283 (str.from_code var427) 0) 1) a!1)))\r\n  (define-fun var3330 () Int\r\n    (str.indexof var3283 (str.from_code var427) 0))\r\n  (define-fun var1853 () Int\r\n    (- 1))\r\n  (define-fun null-Int () Int\r\n    (- 1))\r\n  (define-fun var427 () Int\r\n    (- 2))\r\n  (define-fun null-String () String\r\n    \"C\")\r\n  (define-fun var1786_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 34 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13344768,
            "run_time": 0.04565024375915527,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1623 is 1\r\n; rep: (as @var1623_0 var1623)\r\n; cardinality of var1786 is 1\r\n; rep: (as @var1786_0 var1786)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1786_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3283 () String \"\\u{0}\")\r\n(define-fun var427 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38162432,
            "run_time": 0.15358901023864746,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1606 () Bool\n    (var1786_isEmpty/1595667738 var3283))\n  (define-fun var2924 () String\n    (let ((a!1 (- (str.len var3283)\n              (+ (str.indexof var3283 (str.from_code var427) 0) 1))))\n  (str.substr var3283 (+ (str.indexof var3283 (str.from_code var427) 0) 1) a!1)))\n  (define-fun var1853 () Int\n    (- 1))\n  (define-fun var427 () Int\n    196608)\n  (define-fun var3330 () Int\n    (str.indexof var3283 (str.from_code var427) 0))\n  (define-fun null-Int () Int\n    196609)\n  (define-fun var951 () Int\n    (+ (str.indexof var3283 (str.from_code var427) 0) 1))\n  (define-fun var3283 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1786_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 34 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 142708736,
            "run_time": 1.3153488636016846,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.StringUtils__substringAfter__1025226940\\5697.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n789ms\r\nstr_cons(var427, 0) (of class ap.parser.IFunApp)\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int)>": 1,
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(i0)",
            "i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(i0)",
            "$i4 = (int) -1",
            "if i1 != $i4 goto $i2 = i1 + 1",
            "$i2 = i1 + 1",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringAfterLast__-233827898\\5722.smt2",
        "z3": {
            "memory": 32608256,
            "run_time": 0.09097027778625488,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var996 () Int\r\n    (lastIndexOf/-1292097097 var3883 var1756))\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var1429 () Bool\r\n    (var1657_isEmpty/1595667738 var3883))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var3883 () String\r\n    \"!0!\")\r\n  (define-fun var1756 () Int\r\n    2)\r\n  (define-fun var3317 () Int\r\n    (- 1))\r\n  (define-fun var1657_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun lastIndexOf/-1292097097 ((x!0 String) (x!1 Int)) Int\r\n    (- 1))\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2265088,
            "run_time": 0.031110048294067383,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1597 is 1\r\n; rep: (as @var1597_0 var1597)\r\n; cardinality of var1657 is 1\r\n; rep: (as @var1657_0 var1657)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1657_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun lastIndexOf/-1292097097 ((_arg_1 String) (_arg_2 Int)) Int (- 1))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3883 () String \"\")\r\n(define-fun var1756 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38100992,
            "run_time": 0.1386864185333252,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1429 () Bool\n    (var1657_isEmpty/1595667738 var3883))\n  (define-fun null-Int () Int\n    4)\n  (define-fun var996 () Int\n    (lastIndexOf/-1292097097 var3883 var1756))\n  (define-fun var3317 () Int\n    (- 1))\n  (define-fun var1756 () Int\n    3)\n  (define-fun var3883 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1657_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n  (define-fun lastIndexOf/-1292097097 ((x!0 String) (x!1 Int)) Int\n    (- 1))\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150941696,
            "run_time": 1.6856508255004883,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1756 () Int 2)\r\n  (define-fun var3883 () String \"\\u{0}\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun lastIndexOf/-1292097097 ((x!0 String) (x!1 Int)) Int (ite (and (= x!0 \"\\u{0}\") (= x!1 2)) (- 1) 0))\r\n  (define-fun var1657_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\\u{0}\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int lastIndexOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: int lastIndexOf(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(i0)",
            "i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(i0)",
            "$i6 = (int) -1",
            "if i1 == $i6 goto return \"\"",
            "return \"\""
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ObjectUtils__CONST_BYTE__-1335185591\\619.smt2",
        "z3": {
            "memory": 33746944,
            "run_time": 0.11955475807189941,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3397 () Int\r\n    (- 128))\r\n  (define-fun var715 () String\r\n    (str.++ var1767!1\r\n        \"Supplied value must be a valid byte literal between (- 128) and 127: [\"))\r\n  (define-fun var1767 () String\r\n    String-init)\r\n  (define-fun var2970 () var3045\r\n    var3045-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    (- 128))\r\n  (define-fun var892 () String\r\n    (str.++ var1767!1\r\n        \"Supplied value must be a valid byte literal between (- 128) and 127: [\"\r\n        (str.from_int var3096)\r\n        \"]\"))\r\n  (define-fun var3096 () Int\r\n    (- 129))\r\n  (define-fun var715!1 () String\r\n    \"Supplied value must be a valid byte literal between (- 128) and 127: [\")\r\n  (define-fun var3729 () String\r\n    (str.++ var1767!1\r\n        \"Supplied value must be a valid byte literal between (- 128) and 127: [\"\r\n        (str.from_int var3096)\r\n        \"]\"))\r\n  (define-fun var3264 () String\r\n    (str.++ var1767!1\r\n        \"Supplied value must be a valid byte literal between (- 128) and 127: [\"\r\n        (str.from_int var3096)))\r\n  (define-fun var1767!1 () String\r\n    \"\")\r\n  (define-fun var1767!2 () String\r\n    \"Supplied value must be a valid byte literal between (- 128) and 127: [\")\r\n  (define-fun var3264!1 () String\r\n    \"Supplied value must be a valid byte literal between (- 128) and 127: []\")\r\n  (define-fun var892!1 () String\r\n    \"\")\r\n  (define-fun var2970!1 () var3045\r\n    var3045!val!0)\r\n  (define-fun var3045-init () var3045\r\n    var3045!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var3045) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.030438661575317383,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3045 is 1\r\n; rep: (as @var3045_0 var3045)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3045-init () var3045 (as @var3045_0 var3045))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_989 var3045) (BOUND_VARIABLE_990 String)) void (as @void_0 void))\r\n(define-fun null-Int () Int (- 130))\r\n(define-fun var3096 () Int (- 129))\r\n(define-fun var1767!1 () String \"\")\r\n(define-fun var1767!2 () String \"Supplied value must be a valid byte literal between (- 128) and 127: [\")\r\n(define-fun var715!1 () String \"Supplied value must be a valid byte literal between (- 128) and 127: [\")\r\n(define-fun var3264!1 () String \"Supplied value must be a valid byte literal between (- 128) and 127: []\")\r\n(define-fun var2970!1 () var3045 (as @var3045_0 var3045))\r\n(define-fun var892!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37597184,
            "run_time": 0.16924619674682617,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1767 () String\n    String-init)\n  (define-fun var715!1 () String\n    \"Supplied value must be a valid byte literal between (- 128) and 127: [\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3397 () Int\n    (- 128))\n  (define-fun var892 () String\n    (str.++ var1767!1\n        \"Supplied value must be a valid byte literal between (- 128) and 127: [\"\n        (str.from_int var3096)\n        \"]\"))\n  (define-fun null-Int () Int\n    (- 128))\n  (define-fun var3264!1 () String\n    \"Supplied value must be a valid byte literal between (- 128) and 127: []\")\n  (define-fun var3096 () Int\n    (- 129))\n  (define-fun var2970 () var3045\n    var3045-init)\n  (define-fun var3264 () String\n    (str.++ var1767!1\n        \"Supplied value must be a valid byte literal between (- 128) and 127: [\"\n        (str.from_int var3096)))\n  (define-fun var715 () String\n    (str.++ var1767!1\n        \"Supplied value must be a valid byte literal between (- 128) and 127: [\"))\n  (define-fun var3729 () String\n    (str.++ var1767!1\n        \"Supplied value must be a valid byte literal between (- 128) and 127: [\"\n        (str.from_int var3096)\n        \"]\"))\n  (define-fun var1767!1 () String\n    \"\")\n  (define-fun var1767!2 () String\n    \"Supplied value must be a valid byte literal between (- 128) and 127: [\")\n  (define-fun var892!1 () String\n    \"\")\n  (define-fun var2970!1 () var3045\n    var3045!val!0)\n  (define-fun var3045-init () var3045\n    var3045!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var3045) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 212144128,
            "run_time": 2.213104009628296,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3264!1 () String \"Supplied value must be a valid byte literal between (- 128) and 127: []\")\r\n  (define-fun var715!1 () String \"Supplied value must be a valid byte literal between (- 128) and 127: [\")\r\n  (define-fun var1767!2 () String \"Supplied value must be a valid byte literal between (- 128) and 127: [\")\r\n  (define-fun var1767!1 () String \"\")\r\n  (define-fun var3096 () Int (- 254))\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun abbrev_105 ((x!0 Int)) String (ite (= x!0 0) \"Supplied value must be a valid byte literal between (- 128) and 127: [\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "i0 := @parameter0: int",
            "$i3 = (int) -128",
            "if i0 < $i3 goto $r7 = new java.lang.IllegalArgumentException",
            "$r7 = new java.lang.IllegalArgumentException",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Supplied value must be a valid byte literal between -128 and 127: [\")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5)",
            "throw $r7"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringBefore__-686746837\\5765.smt2",
        "z3": {
            "memory": 33116160,
            "run_time": 0.14906954765319824,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1066 () String\r\n    \"\")\r\n  (define-fun var913 () Bool\r\n    (= (str.len var2982) 0))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1697 () Bool\r\n    (var1516_isEmpty/1595667738 var1066))\r\n  (define-fun var2982 () String\r\n    \"\")\r\n  (define-fun var1516_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2244608,
            "run_time": 0.03011941909790039,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1659 is 1\r\n; rep: (as @var1659_0 var1659)\r\n; cardinality of var1516 is 1\r\n; rep: (as @var1516_0 var1516)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1516_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1066 () String \"\")\r\n(define-fun var2982 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37871616,
            "run_time": 0.13912391662597656,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1066 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var913 () Bool\n    (= (str.len var2982) 0))\n  (define-fun var1697 () Bool\n    (var1516_isEmpty/1595667738 var1066))\n  (define-fun var2982 () String\n    \"\")\n  (define-fun var1516_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164052992,
            "run_time": 1.7609732151031494,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2982 () String \"\")\r\n  (define-fun var1066 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\\u{1}\")\r\n  (define-fun var1516_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\\u{0}\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: boolean isEmpty()>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if r1 != null goto $z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "$z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "if $z1 == 0 goto i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1)",
            "return \"\""
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Range__intersectionWith__-565083560\\615.smt2",
        "z3": {
            "memory": 32653312,
            "run_time": 0.12077999114990234,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3094:\r\n  ;;   var3094!val!0 var3094!val!2 var3094!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3094!val!0 () var3094)\r\n  (declare-fun var3094!val!2 () var3094)\r\n  (declare-fun var3094!val!1 () var3094)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3094))\r\n          (or (= x var3094!val!0) (= x var3094!val!2) (= x var3094!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3616:\r\n  ;;   var3616!val!0 var3616!val!1 var3616!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3616!val!0 () var3616)\r\n  (declare-fun var3616!val!1 () var3616)\r\n  (declare-fun var3616!val!2 () var3616)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3616))\r\n          (or (= x var3616!val!0) (= x var3616!val!1) (= x var3616!val!2)))\r\n  ;; -----------\r\n  (define-fun null-var3094 () var3094\r\n    var3094!val!1)\r\n  (define-fun var3546!1 () (Array Int var3616)\r\n    (store ((as const (Array Int var3616)) var3616!val!1) 0 var3616!val!0))\r\n  (define-fun var276 () var3645\r\n    var3645-init)\r\n  (define-fun var717 () var3094\r\n    var3094!val!0)\r\n  (define-fun var3561 () String\r\n    (String_format/1339386452\r\n  \"Cannot calculate intersection with non-overlapping range %s\"\r\n  var3546!1))\r\n  (define-fun var2763 () var3094\r\n    var3094!val!2)\r\n  (define-fun var1496 () Bool\r\n    (isOverlappedBy/1466116538 var717 var2763))\r\n  (define-fun null-__Array__Int__var3616__ () (Array Int var3616)\r\n    ((as const (Array Int var3616)) var3616!val!2))\r\n  (define-fun var3546 () (Array Int var3616)\r\n    arr-var3616-init)\r\n  (define-fun arr-var3616-init () (Array Int var3616)\r\n    ((as const (Array Int var3616)) var3616!val!0))\r\n  (define-fun var276!1 () var3645\r\n    var3645!val!0)\r\n  (define-fun var3561!1 () String\r\n    \"\")\r\n  (define-fun var3645-init () var3645\r\n    var3645!val!0)\r\n  (define-fun cast-from-var3094-to-var3616 ((x!0 var3094)) var3616\r\n    var3616!val!0)\r\n  (define-fun isOverlappedBy/1466116538 ((x!0 var3094) (x!1 var3094)) Bool\r\n    false)\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var3616))) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var3645) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 40 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2269184,
            "run_time": 0.030902385711669922,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3094 is 3\r\n; rep: (as @var3094_0 var3094)\r\n; rep: (as @var3094_1 var3094)\r\n; rep: (as @var3094_2 var3094)\r\n; cardinality of var3645 is 1\r\n; rep: (as @var3645_0 var3645)\r\n; cardinality of var3616 is 2\r\n; rep: (as @var3616_0 var3616)\r\n; rep: (as @var3616_1 var3616)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun isOverlappedBy/1466116538 ((_arg_1 var3094) (_arg_2 var3094)) Bool false)\r\n(define-fun var3645-init () var3645 (as @var3645_0 var3645))\r\n(define-fun arr-var3616-init () (Array Int var3616) ((as const (Array Int var3616)) (as @var3616_0 var3616)))\r\n(define-fun cast-from-var3094-to-var3616 ((_arg_1 var3094)) var3616 (as @var3616_1 var3616))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_542 String) (BOUND_VARIABLE_543 (Array Int var3616))) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_546 var3645) (BOUND_VARIABLE_547 String)) void (as @void_0 void))\r\n(define-fun null-var3094 () var3094 (as @var3094_0 var3094))\r\n(define-fun null-__Array__Int__var3616__ () (Array Int var3616) (store ((as const (Array Int var3616)) (as @var3616_1 var3616)) 0 (as @var3616_0 var3616)))\r\n(define-fun var717 () var3094 (as @var3094_1 var3094))\r\n(define-fun var2763 () var3094 (as @var3094_2 var3094))\r\n(define-fun var3546!1 () (Array Int var3616) (store ((as const (Array Int var3616)) (as @var3616_0 var3616)) 0 (as @var3616_1 var3616)))\r\n(define-fun var276!1 () var3645 (as @var3645_0 var3645))\r\n(define-fun var3561!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36118528,
            "run_time": 0.18543577194213867,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3094:\n  ;;   var3094!val!0 var3094!val!2 var3094!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3094!val!0 () var3094)\n  (declare-fun var3094!val!2 () var3094)\n  (declare-fun var3094!val!1 () var3094)\n  ;; cardinality constraint:\n  (forall ((x var3094))\n          (or (= x var3094!val!0) (= x var3094!val!2) (= x var3094!val!1)))\n  ;; -----------\n  ;; universe for var3616:\n  ;;   var3616!val!0 var3616!val!1 var3616!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3616!val!0 () var3616)\n  (declare-fun var3616!val!1 () var3616)\n  (declare-fun var3616!val!2 () var3616)\n  ;; cardinality constraint:\n  (forall ((x var3616))\n          (or (= x var3616!val!0) (= x var3616!val!1) (= x var3616!val!2)))\n  ;; -----------\n  (define-fun var1496 () Bool\n    (isOverlappedBy/1466116538 var717 var2763))\n  (define-fun var3561 () String\n    (String_format/1339386452\n  \"Cannot calculate intersection with non-overlapping range %s\"\n  var3546!1))\n  (define-fun null-var3094 () var3094\n    var3094!val!1)\n  (define-fun null-__Array__Int__var3616__ () (Array Int var3616)\n    ((as const (Array Int var3616)) var3616!val!2))\n  (define-fun var717 () var3094\n    var3094!val!0)\n  (define-fun var276 () var3645\n    var3645-init)\n  (define-fun var3546 () (Array Int var3616)\n    arr-var3616-init)\n  (define-fun var2763 () var3094\n    var3094!val!2)\n  (define-fun var3546!1 () (Array Int var3616)\n    (store ((as const (Array Int var3616)) var3616!val!0) 2 var3616!val!1))\n  (define-fun arr-var3616-init () (Array Int var3616)\n    ((as const (Array Int var3616)) var3616!val!0))\n  (define-fun var276!1 () var3645\n    var3645!val!0)\n  (define-fun var3561!1 () String\n    \"\")\n  (define-fun var3645-init () var3645\n    var3645!val!0)\n  (define-fun cast-from-var3094-to-var3616 ((x!0 var3094)) var3616\n    var3616!val!0)\n  (define-fun isOverlappedBy/1466116538 ((x!0 var3094) (x!1 var3094)) Bool\n    false)\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var3616))) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var3645) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 40 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179822592,
            "run_time": 1.9584465026855469,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3546!1 () (Array Int var3616) (store ((as const (Array Int var3616)) var3616!144) 0 var3616!140))\r\n  (define-fun var2763 () var3094 var3094!124)\r\n  (define-fun var717 () var3094 var3094!122)\r\n  (define-fun null-__Array__Int__var3616__ () (Array Int var3616) ((as const (Array Int var3616)) var3616!0))\r\n  (define-fun null-var3094 () var3094 var3094!120)\r\n  (define-fun var3616!140 () var3616 (cast-from-var3094-to-var3616 var3094!124))\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var3616))) String (ite (and (= x!0 \"Cannot calculate intersection with non-overlapping range %s\") (= x!1 (store ((as const (Array Int var3616)) var3616!144) 0 var3616!140))) \"\\u{0}\" \"\"))\r\n  (define-fun isOverlappedBy/1466116538 ((x!0 var3094) (x!1 var3094)) Bool (ite (and (= x!0 var3094!122) (= x!1 var3094!124)) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.Range",
            "r1 := @parameter0: org.apache.commons.lang3.Range",
            "$z0 = virtualinvoke r0.<org.apache.commons.lang3.Range: boolean isOverlappedBy(org.apache.commons.lang3.Range)>(r1)",
            "if $z0 != 0 goto $z1 = virtualinvoke r0.<org.apache.commons.lang3.Range: boolean equals(java.lang.Object)>(r1)",
            "$r11 = new java.lang.IllegalArgumentException",
            "$r12 = newarray (java.lang.Object)[1]",
            "$r12[0] = r1",
            "$r13 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"Cannot calculate intersection with non-overlapping range %s\", $r12)",
            "specialinvoke $r11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r13)",
            "throw $r11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__lowerCase__-524277439\\3920.smt2",
        "z3": {
            "memory": 32583680,
            "run_time": 0.10594964027404785,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var528:\r\n  ;;   var528!val!1 var528!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var528!val!1 () var528)\r\n  (declare-fun var528!val!0 () var528)\r\n  ;; cardinality constraint:\r\n  (forall ((x var528)) (or (= x var528!val!1) (= x var528!val!0)))\r\n  ;; -----------\r\n  (define-fun var517 () String\r\n    (toLowerCase/1946809429 var2079 (var492_toLocale/455255440 var3992)))\r\n  (define-fun var3992 () var528\r\n    var528!val!0)\r\n  (define-fun null-var528 () var528\r\n    var528!val!1)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var3250 () var528\r\n    (var492_toLocale/455255440 var3992))\r\n  (define-fun var2079 () String\r\n    \"!0!\")\r\n  (define-fun var492_toLocale/455255440 ((x!0 var528)) var528\r\n    var528!val!1)\r\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var528)) String\r\n    \"\")\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.030699968338012695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2182 is 1\r\n; rep: (as @var2182_0 var2182)\r\n; cardinality of var528 is 2\r\n; rep: (as @var528_0 var528)\r\n; rep: (as @var528_1 var528)\r\n; cardinality of var492 is 1\r\n; rep: (as @var492_0 var492)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var492_toLocale/455255440 ((BOUND_VARIABLE_495 var528)) var528 (as @var528_0 var528))\r\n(define-fun toLowerCase/1946809429 ((BOUND_VARIABLE_498 String) (BOUND_VARIABLE_499 var528)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var528 () var528 (as @var528_0 var528))\r\n(define-fun var2079 () String \"\")\r\n(define-fun var3992 () var528 (as @var528_1 var528))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38793216,
            "run_time": 0.14110684394836426,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var528:\n  ;;   var528!val!1 var528!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var528!val!1 () var528)\n  (declare-fun var528!val!0 () var528)\n  ;; cardinality constraint:\n  (forall ((x var528)) (or (= x var528!val!1) (= x var528!val!0)))\n  ;; -----------\n  (define-fun var517 () String\n    (toLowerCase/1946809429 var2079 (var492_toLocale/455255440 var3992)))\n  (define-fun var3250 () var528\n    (var492_toLocale/455255440 var3992))\n  (define-fun null-var528 () var528\n    var528!val!1)\n  (define-fun var3992 () var528\n    var528!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2079 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var492_toLocale/455255440 ((x!0 var528)) var528\n    var528!val!1)\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var528)) String\n    \"\")\n)\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 133607424,
            "run_time": 1.6191442012786865,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3992 () var528 var528!4)\r\n  (define-fun var2079 () String \"\\u{0}\")\r\n  (define-fun null-var528 () var528 var528!2)\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.util.Locale",
            "if r0 != null goto $r2 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.Locale toLocale(java.util.Locale)>(r1)",
            "$r2 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.Locale toLocale(java.util.Locale)>(r1)",
            "$r3 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__endsWith__-567571448\\1465.smt2",
        "z3": {
            "memory": 32550912,
            "run_time": 0.1854703426361084,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 23 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.030242443084716797,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36597760,
            "run_time": 0.09155678749084473,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 23 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 130732032,
            "run_time": 1.4324891567230225,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 6,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "r1 := @parameter1: java.lang.CharSequence",
            "z0 := @parameter2: boolean",
            "if r0 == null goto (branch)",
            "if r0 != r1 goto $z2 = 0",
            "$z2 = 0",
            "return $z2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.TypeUtils__typeVariableToString__-1793078242\\4154.smt2",
        "z3": {
            "memory": 32591872,
            "run_time": 0.09294605255126953,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2572:\r\n  ;;   var2572!val!0 var2572!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2572!val!0 () var2572)\r\n  (declare-fun var2572!val!1 () var2572)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2572)) (or (= x var2572!val!0) (= x var2572!val!1)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  (define-fun var2001 () String\r\n    var3082!1)\r\n  (define-fun var848 () var2572\r\n    var2572!val!0)\r\n  (define-fun var1665 () (Array Int ClassObject)\r\n    (var2572_getBounds/931539860 var848))\r\n  (define-fun null-var2572 () var2572\r\n    var2572!val!1)\r\n  (define-fun var1753 () String\r\n    (var2572_getName/-1279641638 var848))\r\n  (define-fun var3082 () String\r\n    String-init)\r\n  (define-fun var1887 () Int\r\n    (getLength-Arr-ClassObject-1 (var2572_getBounds/931539860 var848)))\r\n  (define-fun var3082!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2572_getBounds/931539860 ((x!0 var2572)) (Array Int ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\r\n  (define-fun getLength-Arr-ClassObject-1 ((x!0 (Array Int ClassObject))) Int\r\n    0)\r\n  (define-fun var2572_getName/-1279641638 ((x!0 var2572)) String\r\n    \"\")\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9236480,
            "run_time": 0.0310366153717041,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2572 is 2\r\n; rep: (as @var2572_0 var2572)\r\n; rep: (as @var2572_1 var2572)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2572_getName/-1279641638 ((BOUND_VARIABLE_481 var2572)) String \"\")\r\n(define-fun var2572_getBounds/931539860 ((_arg_1 var2572)) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun getLength-Arr-ClassObject-1 ((_arg_1 (Array Int ClassObject))) Int 0)\r\n(define-fun null-var2572 () var2572 (as @var2572_0 var2572))\r\n(define-fun var848 () var2572 (as @var2572_1 var2572))\r\n(define-fun var3082!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33435648,
            "run_time": 0.12535715103149414,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2572:\n  ;;   var2572!val!0 var2572!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2572!val!0 () var2572)\n  (declare-fun var2572!val!1 () var2572)\n  ;; cardinality constraint:\n  (forall ((x var2572)) (or (= x var2572!val!0) (= x var2572!val!1)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\n  ;; -----------\n  (define-fun var1753 () String\n    (var2572_getName/-1279641638 var848))\n  (define-fun var848 () var2572\n    var2572!val!0)\n  (define-fun var3082 () String\n    String-init)\n  (define-fun var1665 () (Array Int ClassObject)\n    (var2572_getBounds/931539860 var848))\n  (define-fun null-var2572 () var2572\n    var2572!val!1)\n  (define-fun var1887 () Int\n    (getLength-Arr-ClassObject-1 (var2572_getBounds/931539860 var848)))\n  (define-fun var2001 () String\n    var3082!1)\n  (define-fun var3082!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun getLength-Arr-ClassObject-1 ((x!0 (Array Int ClassObject))) Int\n    0)\n  (define-fun var2572_getBounds/931539860 ((x!0 var2572)) (Array Int ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\n  (define-fun var2572_getName/-1279641638 ((x!0 var2572)) String\n    \"\")\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165449728,
            "run_time": 1.7720458507537842,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3082!1 () String \"\\u{0}\")\r\n  (define-fun var848 () var2572 var2572!4)\r\n  (define-fun null-var2572 () var2572 var2572!2)\r\n  (define-fun getLength-Arr-ClassObject-1 ((x!0 (Array Int ClassObject))) Int (ite (= x!0 ((as const (Array Int ClassObject)) ClassObject!0)) 0 0))\r\n  (define-fun var2572_getBounds/931539860 ((x!0 var2572)) (Array Int ClassObject) (ite (= x!0 var2572!4) ((as const (Array Int ClassObject)) ClassObject!0) ((as const (Array Int ClassObject)) ClassObject!0)))\r\n  (define-fun var2572_getName/-1279641638 ((x!0 var2572)) String (ite (= x!0 var2572!4) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.reflect.TypeVariable",
            "$r0 = new java.lang.StringBuilder",
            "$r2 = interfaceinvoke r1.<java.lang.reflect.TypeVariable: java.lang.String getName()>()",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r2)",
            "r3 = interfaceinvoke r1.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>()",
            "$i0 = lengthof r3",
            "if $i0 <= 0 goto $r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r7 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringEscapeUtils$CsvEscaper__\u300aclinit\u300b__-702194137\\475.smt2",
        "z3": {
            "memory": 32239616,
            "run_time": 0.10641288757324219,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var719 () String\r\n    (String_valueOf/-371898945 34))\r\n  (define-fun var1!4 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 17) 3 10))\r\n  (define-fun var1!1 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 5) 0 44))\r\n  (define-fun var2047 () String\r\n    (String_valueOf/-371898945 34))\r\n  (define-fun var1334 () (Array Int Int)\r\n    var1!4)\r\n  (define-fun var1!3 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 14) 2 13))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store (store (store ((as const (Array Int Int)) 6) 11 12) 7 8) 15 16))\r\n  (define-fun var1 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var1!2 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 34) 7 9))\r\n  (define-fun arr-Int-init () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun k!3 ((x!0 Int)) Int\r\n    (ite (= x!0 2) 13\r\n      14))\r\n  (define-fun k!4 ((x!0 Int)) Int\r\n    (ite (= x!0 3) 10\r\n      17))\r\n  (define-fun k!1 ((x!0 Int)) Int\r\n    (ite (= x!0 11) 12\r\n    (ite (= x!0 7) 8\r\n    (ite (= x!0 15) 16\r\n      6))))\r\n  (define-fun k!2 ((x!0 Int)) Int\r\n    (ite (= x!0 7) 9\r\n      34))\r\n  (define-fun String_valueOf/-371898945 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2281472,
            "run_time": 0.06186270713806152,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-371898945 ((BOUND_VARIABLE_731 Int)) String \"\")\r\n(define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 43))\r\n(define-fun var1!1 () (Array Int Int) (store ((as const (Array Int Int)) 0) 0 44))\r\n(define-fun var1!2 () (Array Int Int) (store (store ((as const (Array Int Int)) (- 1)) 0 44) 1 34))\r\n(define-fun var1!3 () (Array Int Int) (store (store ((as const (Array Int Int)) 2) 0 44) 2 13))\r\n(define-fun var1!4 () (Array Int Int) (store (store ((as const (Array Int Int)) (- 2)) 0 44) 3 10))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36134912,
            "run_time": 0.14083456993103027,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2047 () String\n    (String_valueOf/-371898945 34))\n  (define-fun var1!2 () (Array Int Int)\n    (store ((as const (Array Int Int)) 34) 7 9))\n  (define-fun var1 () (Array Int Int)\n    arr-Int-init)\n  (define-fun var1!4 () (Array Int Int)\n    (store ((as const (Array Int Int)) 10) 15 17))\n  (define-fun var1!1 () (Array Int Int)\n    (store ((as const (Array Int Int)) 5) 0 44))\n  (define-fun var1!3 () (Array Int Int)\n    (store ((as const (Array Int Int)) 14) 2 13))\n  (define-fun var719 () String\n    (String_valueOf/-371898945 34))\n  (define-fun var1334 () (Array Int Int)\n    var1!4)\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store (store (store ((as const (Array Int Int)) 8) 4 6) 15 16) 11 12))\n  (define-fun arr-Int-init () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun k!3 ((x!0 Int)) Int\n    (ite (= x!0 2) 13\n      14))\n  (define-fun k!4 ((x!0 Int)) Int\n    (ite (= x!0 15) 17\n      10))\n  (define-fun k!1 ((x!0 Int)) Int\n    (ite (= x!0 4) 6\n    (ite (= x!0 15) 16\n    (ite (= x!0 11) 12\n      8))))\n  (define-fun k!2 ((x!0 Int)) Int\n    (ite (= x!0 7) 9\n      34))\n  (define-fun String_valueOf/-371898945 ((x!0 Int)) String\n    \"\")\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166297600,
            "run_time": 1.8198189735412598,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1!4 () (Array Int Int) (store ((as const (Array Int Int)) 51) 3 10))\r\n  (define-fun var1!3 () (Array Int Int) (store ((as const (Array Int Int)) 50) 2 13))\r\n  (define-fun var1!2 () (Array Int Int) (store ((as const (Array Int Int)) 49) 1 34))\r\n  (define-fun var1!1 () (Array Int Int) (store ((as const (Array Int Int)) 48) 0 44))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) ((as const (Array Int Int)) 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(char)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(char)>": 1
        },
        "jimple_statements": [
            "$r0 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(34)",
            "<org.apache.commons.lang3.StringEscapeUtils$CsvEscaper: java.lang.String CSV_QUOTE_STR> = $r0",
            "$r1 = newarray (char)[4]",
            "$r1[0] = 44",
            "$r1[1] = 34",
            "$r1[2] = 13",
            "$r1[3] = 10",
            "<org.apache.commons.lang3.StringEscapeUtils$CsvEscaper: char[] CSV_SEARCH_CHARS> = $r1",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__startsWith__1205185697\\5382.smt2",
        "z3": {
            "memory": 32555008,
            "run_time": 0.13625383377075195,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var691 () Int\r\n    (String_length/-667254855 var631))\r\n  (define-fun var211 () Bool\r\n    true)\r\n  (define-fun var2250 () String\r\n    \"!2!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2362 () Int\r\n    (String_length/-667254855 var2250))\r\n  (define-fun var631 () String\r\n    \"!0!\")\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    (ite (= x!0 \"!2!\") 0\r\n      (- 1)))\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2269184,
            "run_time": 0.03119373321533203,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_length/-667254855 ((_arg_1 String)) Int (ite (= \"A\" _arg_1) 1 0))\r\n(define-fun null-String () String \"B\")\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var631 () String \"\")\r\n(define-fun var2250 () String \"A\")\r\n(define-fun var211 () Bool false)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39223296,
            "run_time": 0.1850895881652832,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2362 () Int\n    (String_length/-667254855 var2250))\n  (define-fun var631 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var211 () Bool\n    true)\n  (define-fun var691 () Int\n    (String_length/-667254855 var631))\n  (define-fun var2250 () String\n    \"\\u{0}\")\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    (ite (= x!0 \"\\u{0}\") 1\n      0))\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151666688,
            "run_time": 1.7274878025054932,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2250 () String \"\\u{0}\")\r\n  (define-fun var631 () String \"\\u{1}\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var211 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int (ite (= x!0 \"\\u{1}\") 7 (ite (= x!0 \"\\u{0}\") 8 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 2
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "r1 := @parameter1: java.lang.CharSequence",
            "z0 := @parameter2: boolean",
            "if r0 == null goto (branch)",
            "if r1 != null goto i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>()",
            "i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>()",
            "$i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "if i0 <= $i1 goto $z1 = staticinvoke <org.apache.commons.lang3.CharSequenceUtils: boolean regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)>(r0, z0, 0, r1, 0, i0)",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__stripEnd__1285542170\\5610.smt2",
        "z3": {
            "memory": 32595968,
            "run_time": 0.1472303867340088,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1850 () String\r\n    \"\")\r\n  (define-fun var674 () Int\r\n    (var3534_length/1752045268 var2740))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3776 () Bool\r\n    (= (str.len var1850) 0))\r\n  (define-fun var2740 () String\r\n    \"\")\r\n  (define-fun var3534_length/1752045268 ((x!0 String)) Int\r\n    2)\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2244608,
            "run_time": 0.0310971736907959,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var486 is 1\r\n; rep: (as @var486_0 var486)\r\n; cardinality of var3534 is 1\r\n; rep: (as @var3534_0 var3534)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3534_length/1752045268 ((_arg_1 String)) Int (- 1))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2740 () String \"\")\r\n(define-fun var1850 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38211584,
            "run_time": 0.1527400016784668,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3776 () Bool\n    (= (str.len var1850) 0))\n  (define-fun var674 () Int\n    (var3534_length/1752045268 var2740))\n  (define-fun var1850 () String\n    \"\")\n  (define-fun var2740 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3534_length/1752045268 ((x!0 String)) Int\n    3)\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 162803712,
            "run_time": 1.7481749057769775,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1850 () String \"\")\r\n  (define-fun var2740 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\\u{1}\")\r\n  (define-fun var3534_length/1752045268 ((x!0 String)) Int (ite (= x!0 \"\\u{0}\") 7 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: boolean isEmpty()>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "i5 = staticinvoke <org.apache.commons.lang3.StringUtils: int length(java.lang.CharSequence)>(r0)",
            "if i5 != 0 goto (branch)",
            "if r1 != null goto $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "$z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "if $z0 == 0 goto (branch)",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringAfterLast__-233827898\\5725.smt2",
        "z3": {
            "memory": 33075200,
            "run_time": 0.10370326042175293,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3010 () String\r\n    \"A\")\r\n  (define-fun var1517 () Int\r\n    2)\r\n  (define-fun var3737 () Int\r\n    (- 1))\r\n  (define-fun var634 () Int\r\n    (str.len var3010))\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var1676 () Bool\r\n    (var2765_isEmpty/1595667738 var3010))\r\n  (define-fun var2510 () Int\r\n    (- (str.len var3010) 1))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var267 () Int\r\n    (lastIndexOf/-1292097097 var3010 var1517))\r\n  (define-fun lastIndexOf/-1292097097 ((x!0 String) (x!1 Int)) Int\r\n    0)\r\n  (define-fun var2765_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.0921468734741211,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2888 is 1\r\n; rep: (as @var2888_0 var2888)\r\n; cardinality of var2765 is 1\r\n; rep: (as @var2765_0 var2765)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2765_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun lastIndexOf/-1292097097 ((_arg_1 String) (_arg_2 Int)) Int 0)\r\n(define-fun null-String () String \"\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3010 () String \"A\")\r\n(define-fun var1517 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38105088,
            "run_time": 0.15521740913391113,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3737 () Int\n    (- 1))\n  (define-fun null-Int () Int\n    4)\n  (define-fun var1517 () Int\n    3)\n  (define-fun var267 () Int\n    (lastIndexOf/-1292097097 var3010 var1517))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1676 () Bool\n    (var2765_isEmpty/1595667738 var3010))\n  (define-fun var3010 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var634 () Int\n    (str.len var3010))\n  (define-fun var2510 () Int\n    (- (str.len var3010) 1))\n  (define-fun var2765_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n  (define-fun lastIndexOf/-1292097097 ((x!0 String) (x!1 Int)) Int\n    1)\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 174006272,
            "run_time": 1.922776460647583,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1517 () Int 2)\r\n  (define-fun var3010 () String \"\\u{0}\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun lastIndexOf/-1292097097 ((x!0 String) (x!1 Int)) Int (ite (and (= x!0 \"\\u{0}\") (= x!1 2)) 0 0))\r\n  (define-fun var2765_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\\u{0}\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: int lastIndexOf(int)>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int lastIndexOf(int)>": 1,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(i0)",
            "i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(i0)",
            "$i6 = (int) -1",
            "if i1 == $i6 goto return \"\"",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = $i2 - 1",
            "if i1 != $i3 goto $i4 = i1 + 1",
            "return \"\""
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ObjectUtils__CONST_SHORT__-1962320087\\646.smt2",
        "z3": {
            "memory": 33288192,
            "run_time": 0.18040013313293457,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3375 () String\r\n    (str.++ var930!1\r\n        \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\"\r\n        (str.from_int var2505)\r\n        \"]\"))\r\n  (define-fun var1963 () Int\r\n    (- 32768))\r\n  (define-fun var2912 () String\r\n    (str.++ var930!1\r\n        \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\"\r\n        (str.from_int var2505)))\r\n  (define-fun var3177!1 () String\r\n    \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\")\r\n  (define-fun var3177 () String\r\n    (str.++ var930!1\r\n        \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\"))\r\n  (define-fun var1774 () var2508\r\n    var2508-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    (- 32768))\r\n  (define-fun var2505 () Int\r\n    (- 32769))\r\n  (define-fun var3038 () String\r\n    (str.++ var930!1\r\n        \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\"\r\n        (str.from_int var2505)\r\n        \"]\"))\r\n  (define-fun var930 () String\r\n    String-init)\r\n  (define-fun var2912!1 () String\r\n    \"Supplied value must be a valid byte literal between (- 32768) and 32767: []\")\r\n  (define-fun var930!2 () String\r\n    \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\")\r\n  (define-fun var930!1 () String\r\n    \"\")\r\n  (define-fun var3375!1 () String\r\n    \"\")\r\n  (define-fun var2508-init () var2508\r\n    var2508!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1774!1 () var2508\r\n    var2508!val!0)\r\n  (define-fun <init>/875830710 ((x!0 var2508) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12324864,
            "run_time": 0.04346632957458496,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2508 is 1\r\n; rep: (as @var2508_0 var2508)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2508-init () var2508 (as @var2508_0 var2508))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_990 var2508) (BOUND_VARIABLE_991 String)) void (as @void_0 void))\r\n(define-fun null-Int () Int (- 32770))\r\n(define-fun var2505 () Int (- 32769))\r\n(define-fun var930!1 () String \"\")\r\n(define-fun var930!2 () String \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\")\r\n(define-fun var3177!1 () String \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\")\r\n(define-fun var2912!1 () String \"Supplied value must be a valid byte literal between (- 32768) and 32767: []\")\r\n(define-fun var1774!1 () var2508 (as @var2508_0 var2508))\r\n(define-fun var3375!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38068224,
            "run_time": 0.15568304061889648,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2912 () String\n    (str.++ var930!1\n        \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\"\n        (str.from_int var2505)))\n  (define-fun var3375 () String\n    (str.++ var930!1\n        \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\"\n        (str.from_int var2505)\n        \"]\"))\n  (define-fun var3177 () String\n    (str.++ var930!1\n        \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1963 () Int\n    (- 32768))\n  (define-fun null-Int () Int\n    (- 32768))\n  (define-fun var930!1 () String\n    \"\")\n  (define-fun var2505 () Int\n    (- 32769))\n  (define-fun var930 () String\n    String-init)\n  (define-fun var3177!1 () String\n    \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\")\n  (define-fun var1774 () var2508\n    var2508-init)\n  (define-fun var3038 () String\n    (str.++ var930!1\n        \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\"\n        (str.from_int var2505)\n        \"]\"))\n  (define-fun var2912!1 () String\n    \"Supplied value must be a valid byte literal between (- 32768) and 32767: []\")\n  (define-fun var930!2 () String\n    \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\")\n  (define-fun var3375!1 () String\n    \"\")\n  (define-fun var2508-init () var2508\n    var2508!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1774!1 () var2508\n    var2508!val!0)\n  (define-fun <init>/875830710 ((x!0 var2508) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 210239488,
            "run_time": 2.320543050765991,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2912!1 () String \"Supplied value must be a valid byte literal between (- 32768) and 32767: []\")\r\n  (define-fun var3177!1 () String \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\")\r\n  (define-fun var930!2 () String \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\")\r\n  (define-fun var930!1 () String \"\")\r\n  (define-fun var2505 () Int (- 65534))\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun abbrev_105 ((x!0 Int)) String (ite (= x!0 0) \"Supplied value must be a valid byte literal between (- 32768) and 32767: [\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "i0 := @parameter0: int",
            "$i3 = (int) -32768",
            "if i0 < $i3 goto $r7 = new java.lang.IllegalArgumentException",
            "$r7 = new java.lang.IllegalArgumentException",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Supplied value must be a valid byte literal between -32768 and 32767: [\")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5)",
            "throw $r7"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__lowerCase__1981598511\\3874.smt2",
        "z3": {
            "memory": 33132544,
            "run_time": 0.08802103996276855,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3385 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3471 () String\r\n    (let ((a!1 (str.replace_all (str.replace_all (str.replace_all (str.replace_all var3385\r\n                                                                               \"A\"\r\n                                                                               \"a\")\r\n                                                              \"B\"\r\n                                                              \"b\")\r\n                                             \"C\"\r\n                                             \"c\")\r\n                            \"D\"\r\n                            \"d\")))\r\n(let ((a!2 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!1\r\n                                                                               \"E\"\r\n                                                                               \"e\")\r\n                                                              \"F\"\r\n                                                              \"f\")\r\n                                             \"G\"\r\n                                             \"g\")\r\n                            \"H\"\r\n                            \"h\")))\r\n(let ((a!3 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!2\r\n                                                                               \"I\"\r\n                                                                               \"i\")\r\n                                                              \"J\"\r\n                                                              \"j\")\r\n                                             \"K\"\r\n                                             \"k\")\r\n                            \"L\"\r\n                            \"l\")))\r\n(let ((a!4 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!3\r\n                                                                               \"M\"\r\n                                                                               \"m\")\r\n                                                              \"N\"\r\n                                                              \"n\")\r\n                                             \"O\"\r\n                                             \"o\")\r\n                            \"P\"\r\n                            \"p\")))\r\n(let ((a!5 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!4\r\n                                                                               \"Q\"\r\n                                                                               \"q\")\r\n                                                              \"R\"\r\n                                                              \"r\")\r\n                                             \"S\"\r\n                                             \"s\")\r\n                            \"T\"\r\n                            \"t\")))\r\n(let ((a!6 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!5\r\n                                                                               \"U\"\r\n                                                                               \"u\")\r\n                                                              \"V\"\r\n                                                              \"v\")\r\n                                             \"W\"\r\n                                             \"w\")\r\n                            \"X\"\r\n                            \"x\")))\r\n  (str.replace_all (str.replace_all a!6 \"Y\" \"y\") \"Z\" \"z\"))))))))\r\n)\r\n(error \"line 19 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.030740737915039062,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1734 is 1\r\n; rep: (as @var1734_0 var1734)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3385 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37617664,
            "run_time": 0.1397545337677002,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3385 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3471 () String\n    (let ((a!1 (str.replace_all (str.replace_all (str.replace_all (str.replace_all var3385\n                                                                               \"A\"\n                                                                               \"a\")\n                                                              \"B\"\n                                                              \"b\")\n                                             \"C\"\n                                             \"c\")\n                            \"D\"\n                            \"d\")))\n(let ((a!2 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!1\n                                                                               \"E\"\n                                                                               \"e\")\n                                                              \"F\"\n                                                              \"f\")\n                                             \"G\"\n                                             \"g\")\n                            \"H\"\n                            \"h\")))\n(let ((a!3 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!2\n                                                                               \"I\"\n                                                                               \"i\")\n                                                              \"J\"\n                                                              \"j\")\n                                             \"K\"\n                                             \"k\")\n                            \"L\"\n                            \"l\")))\n(let ((a!4 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!3\n                                                                               \"M\"\n                                                                               \"m\")\n                                                              \"N\"\n                                                              \"n\")\n                                             \"O\"\n                                             \"o\")\n                            \"P\"\n                            \"p\")))\n(let ((a!5 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!4\n                                                                               \"Q\"\n                                                                               \"q\")\n                                                              \"R\"\n                                                              \"r\")\n                                             \"S\"\n                                             \"s\")\n                            \"T\"\n                            \"t\")))\n(let ((a!6 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!5\n                                                                               \"U\"\n                                                                               \"u\")\n                                                              \"V\"\n                                                              \"v\")\n                                             \"W\"\n                                             \"w\")\n                            \"X\"\n                            \"x\")))\n  (str.replace_all (str.replace_all a!6 \"Y\" \"y\") \"Z\" \"z\"))))))))\n)\n(error \"line 19 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155246592,
            "run_time": 1.7018094062805176,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3385 () String \"A\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String toLowerCase()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toLowerCase()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>()",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase()>()",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__getBytes__-1859676153\\1690.smt2",
        "z3": {
            "memory": 33034240,
            "run_time": 0.08931565284729004,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1039 () String\r\n    (var3501_toCharsetName/-419498293 var1913))\r\n  (define-fun var3480 () (Array Int Int)\r\n    (getBytes/-343950658 var3422 (var3501_toCharsetName/-419498293 var1913)))\r\n  (define-fun var1913 () String\r\n    \"!2!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var3422 () String\r\n    \"!0!\")\r\n  (define-fun var3501_toCharsetName/-419498293 ((x!0 String)) String\r\n    \"\")\r\n  (define-fun getBytes/-343950658 ((x!0 String) (x!1 String)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n)\r\n(error \"line 25 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.031170129776000977,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1263 is 1\r\n; rep: (as @var1263_0 var1263)\r\n; cardinality of var3501 is 1\r\n; rep: (as @var3501_0 var3501)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3501_toCharsetName/-419498293 ((BOUND_VARIABLE_516 String)) String \"\")\r\n(define-fun getBytes/-343950658 ((BOUND_VARIABLE_519 String) (BOUND_VARIABLE_520 String)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3422 () String \"\")\r\n(define-fun var1913 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37658624,
            "run_time": 0.1549382209777832,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1039 () String\n    (var3501_toCharsetName/-419498293 var1913))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1913 () String\n    \"\\u{0}\")\n  (define-fun var3422 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var3480 () (Array Int Int)\n    (getBytes/-343950658 var3422 (var3501_toCharsetName/-419498293 var1913)))\n  (define-fun var3501_toCharsetName/-419498293 ((x!0 String)) String\n    \"\")\n  (define-fun getBytes/-343950658 ((x!0 String) (x!1 String)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n)\n(error \"line 25 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 143630336,
            "run_time": 1.6574203968048096,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1913 () String \"\\u{0}\")\r\n  (define-fun var3422 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: byte[] getBytes(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: byte[] getBytes(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "if r0 != null goto $r2 = staticinvoke <org.apache.commons.lang3.Charsets: java.lang.String toCharsetName(java.lang.String)>(r1)",
            "$r2 = staticinvoke <org.apache.commons.lang3.Charsets: java.lang.String toCharsetName(java.lang.String)>(r1)",
            "$r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.lang.String)>($r2)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Range__toString__-1442526379\\883.smt2",
        "z3": {
            "memory": 32227328,
            "run_time": 0.08998560905456543,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var907:\r\n  ;;   var907!val!1 var907!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var907!val!1 () var907)\r\n  (declare-fun var907!val!0 () var907)\r\n  ;; cardinality constraint:\r\n  (forall ((x var907)) (or (= x var907!val!1) (= x var907!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1496:\r\n  ;;   var1496!val!8 var1496!val!0 var1496!val!4 var1496!val!1 var1496!val!5 var1496!val!3 var1496!val!6 var1496!val!7 var1496!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1496!val!8 () var1496)\r\n  (declare-fun var1496!val!0 () var1496)\r\n  (declare-fun var1496!val!4 () var1496)\r\n  (declare-fun var1496!val!1 () var1496)\r\n  (declare-fun var1496!val!5 () var1496)\r\n  (declare-fun var1496!val!3 () var1496)\r\n  (declare-fun var1496!val!6 () var1496)\r\n  (declare-fun var1496!val!7 () var1496)\r\n  (declare-fun var1496!val!2 () var1496)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1496))\r\n          (or (= x var1496!val!8)\r\n              (= x var1496!val!0)\r\n              (= x var1496!val!4)\r\n              (= x var1496!val!1)\r\n              (= x var1496!val!5)\r\n              (= x var1496!val!3)\r\n              (= x var1496!val!6)\r\n              (= x var1496!val!7)\r\n              (= x var1496!val!2)))\r\n  ;; -----------\r\n  ;; universe for var271:\r\n  ;;   var271!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var271!val!0 () var271)\r\n  ;; cardinality constraint:\r\n  (forall ((x var271)) (= x var271!val!0))\r\n  ;; -----------\r\n  (define-fun null-__Array__Int__var1496__ () (Array Int var1496)\r\n    (store (store ((as const (Array Int var1496)) var1496!val!5) 5 var1496!val!7)\r\n       3\r\n       var1496!val!4))\r\n  (define-fun var2502 () String\r\n    (String_format/1339386452 var2051 var415!3))\r\n  (define-fun var415!2 () (Array Int var1496)\r\n    (store ((as const (Array Int var1496)) var1496!val!6) 1 var1496!val!1))\r\n  (define-fun var3469 () var1496\r\n    (minimum/1162290584 var2001))\r\n  (define-fun var1944 () var271\r\n    (comparator/1162290584 var2001))\r\n  (define-fun var2001 () var907\r\n    var907!val!0)\r\n  (define-fun null-var907 () var907\r\n    var907!val!1)\r\n  (define-fun var2298 () var1496\r\n    (maximum/1162290584 var2001))\r\n  (define-fun var415 () (Array Int var1496)\r\n    arr-var1496-init)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var415!3 () (Array Int var1496)\r\n    (store ((as const (Array Int var1496)) var1496!val!8) 2 var1496!val!2))\r\n  (define-fun var2051 () String\r\n    \"!0!\")\r\n  (define-fun var415!1 () (Array Int var1496)\r\n    (store ((as const (Array Int var1496)) var1496!val!0) 3 var1496!val!3))\r\n  (define-fun arr-var1496-init () (Array Int var1496)\r\n    ((as const (Array Int var1496)) var1496!val!0))\r\n  (define-fun cast-from-var271-to-var1496 ((x!0 var271)) var1496\r\n    var1496!val!2)\r\n  (define-fun maximum/1162290584 ((x!0 var907)) var1496\r\n    var1496!val!1)\r\n  (define-fun k!1 ((x!0 Int)) var1496\r\n    (ite (= x!0 5) var1496!val!7\r\n    (ite (= x!0 3) var1496!val!4\r\n      var1496!val!5)))\r\n  (define-fun comparator/1162290584 ((x!0 var907)) var271\r\n    var271!val!0)\r\n  (define-fun k!2 ((x!0 Int)) var1496\r\n    (ite (= x!0 1) var1496!val!1\r\n      var1496!val!6))\r\n  (define-fun k!3 ((x!0 Int)) var1496\r\n    (ite (= x!0 2) var1496!val!2\r\n      var1496!val!8))\r\n  (define-fun minimum/1162290584 ((x!0 var907)) var1496\r\n    var1496!val!0)\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var1496))) String\r\n    \"\")\r\n)\r\n(error \"line 41 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 5025792,
            "run_time": 0.030735015869140625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var907 is 2\r\n; rep: (as @var907_0 var907)\r\n; rep: (as @var907_1 var907)\r\n; cardinality of var3482 is 1\r\n; rep: (as @var3482_0 var3482)\r\n; cardinality of var1496 is 6\r\n; rep: (as @var1496_0 var1496)\r\n; rep: (as @var1496_1 var1496)\r\n; rep: (as @var1496_2 var1496)\r\n; rep: (as @var1496_3 var1496)\r\n; rep: (as @var1496_4 var1496)\r\n; rep: (as @var1496_5 var1496)\r\n; cardinality of var271 is 1\r\n; rep: (as @var271_0 var271)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var1496-init () (Array Int var1496) ((as const (Array Int var1496)) (as @var1496_0 var1496)))\r\n(define-fun minimum/1162290584 ((_arg_1 var907)) var1496 (as @var1496_2 var1496))\r\n(define-fun maximum/1162290584 ((_arg_1 var907)) var1496 (as @var1496_0 var1496))\r\n(define-fun comparator/1162290584 ((_arg_1 var907)) var271 (as @var271_0 var271))\r\n(define-fun cast-from-var271-to-var1496 ((_arg_1 var271)) var1496 (as @var1496_1 var1496))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_717 String) (BOUND_VARIABLE_718 (Array Int var1496))) String \"\")\r\n(define-fun null-var907 () var907 (as @var907_0 var907))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var1496__ () (Array Int var1496) (store ((as const (Array Int var1496)) (as @var1496_1 var1496)) 0 (as @var1496_4 var1496)))\r\n(define-fun var2001 () var907 (as @var907_1 var907))\r\n(define-fun var2051 () String \"\")\r\n(define-fun var415!1 () (Array Int var1496) (store ((as const (Array Int var1496)) (as @var1496_0 var1496)) 0 (as @var1496_2 var1496)))\r\n(define-fun var415!2 () (Array Int var1496) (store (store ((as const (Array Int var1496)) (as @var1496_2 var1496)) 0 (as @var1496_3 var1496)) 1 (as @var1496_0 var1496)))\r\n(define-fun var415!3 () (Array Int var1496) (store (store ((as const (Array Int var1496)) (as @var1496_3 var1496)) 0 (as @var1496_5 var1496)) 2 (as @var1496_1 var1496)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38162432,
            "run_time": 0.10740017890930176,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var907:\n  ;;   var907!val!1 var907!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var907!val!1 () var907)\n  (declare-fun var907!val!0 () var907)\n  ;; cardinality constraint:\n  (forall ((x var907)) (or (= x var907!val!1) (= x var907!val!0)))\n  ;; -----------\n  ;; universe for var1496:\n  ;;   var1496!val!8 var1496!val!0 var1496!val!4 var1496!val!1 var1496!val!5 var1496!val!3 var1496!val!6 var1496!val!7 var1496!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1496!val!8 () var1496)\n  (declare-fun var1496!val!0 () var1496)\n  (declare-fun var1496!val!4 () var1496)\n  (declare-fun var1496!val!1 () var1496)\n  (declare-fun var1496!val!5 () var1496)\n  (declare-fun var1496!val!3 () var1496)\n  (declare-fun var1496!val!6 () var1496)\n  (declare-fun var1496!val!7 () var1496)\n  (declare-fun var1496!val!2 () var1496)\n  ;; cardinality constraint:\n  (forall ((x var1496))\n          (or (= x var1496!val!8)\n              (= x var1496!val!0)\n              (= x var1496!val!4)\n              (= x var1496!val!1)\n              (= x var1496!val!5)\n              (= x var1496!val!3)\n              (= x var1496!val!6)\n              (= x var1496!val!7)\n              (= x var1496!val!2)))\n  ;; -----------\n  ;; universe for var271:\n  ;;   var271!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var271!val!0 () var271)\n  ;; cardinality constraint:\n  (forall ((x var271)) (= x var271!val!0))\n  ;; -----------\n  (define-fun var2001 () var907\n    var907!val!0)\n  (define-fun null-__Array__Int__var1496__ () (Array Int var1496)\n    (store (store ((as const (Array Int var1496)) var1496!val!4) 5 var1496!val!7)\n       4\n       var1496!val!5))\n  (define-fun var415!3 () (Array Int var1496)\n    (store ((as const (Array Int var1496)) var1496!val!8) 2 var1496!val!2))\n  (define-fun var415!2 () (Array Int var1496)\n    (store ((as const (Array Int var1496)) var1496!val!1) 4 var1496!val!6))\n  (define-fun var2051 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var907 () var907\n    var907!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var415 () (Array Int var1496)\n    arr-var1496-init)\n  (define-fun var415!1 () (Array Int var1496)\n    (store ((as const (Array Int var1496)) var1496!val!3) 0 var1496!val!0))\n  (define-fun var2298 () var1496\n    (maximum/1162290584 var2001))\n  (define-fun var3469 () var1496\n    (minimum/1162290584 var2001))\n  (define-fun var1944 () var271\n    (comparator/1162290584 var2001))\n  (define-fun var2502 () String\n    (String_format/1339386452 var2051 var415!3))\n  (define-fun arr-var1496-init () (Array Int var1496)\n    ((as const (Array Int var1496)) var1496!val!0))\n  (define-fun cast-from-var271-to-var1496 ((x!0 var271)) var1496\n    var1496!val!2)\n  (define-fun maximum/1162290584 ((x!0 var907)) var1496\n    var1496!val!1)\n  (define-fun k!49 ((x!0 Int)) var1496\n    (ite (= x!0 5) var1496!val!7\n    (ite (= x!0 4) var1496!val!5\n      var1496!val!4)))\n  (define-fun comparator/1162290584 ((x!0 var907)) var271\n    var271!val!0)\n  (define-fun k!50 ((x!0 Int)) var1496\n    (ite (= x!0 4) var1496!val!6\n      var1496!val!1))\n  (define-fun k!51 ((x!0 Int)) var1496\n    (ite (= x!0 2) var1496!val!2\n      var1496!val!8))\n  (define-fun minimum/1162290584 ((x!0 var907)) var1496\n    var1496!val!0)\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var1496))) String\n    \"\")\n)\n(error \"line 41 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180195328,
            "run_time": 1.9063405990600586,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var415!3 () (Array Int var1496) (store ((as const (Array Int var1496)) var1496!34) 2 var1496!28))\r\n  (define-fun var415!2 () (Array Int var1496) (store ((as const (Array Int var1496)) var1496!32) 1 var1496!24))\r\n  (define-fun var415!1 () (Array Int var1496) (store ((as const (Array Int var1496)) var1496!36) 0 var1496!26))\r\n  (define-fun var2051 () String \"\\u{0}\")\r\n  (define-fun var2001 () var907 var907!8)\r\n  (define-fun null-__Array__Int__var1496__ () (Array Int var1496) ((as const (Array Int var1496)) var1496!0))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var907 () var907 var907!6)\r\n  (define-fun var1496!28 () var1496 (cast-from-var271-to-var1496 var271!30))\r\n  (define-fun var271!30 () var271 (comparator/1162290584 var907!8))\r\n  (define-fun var1496!24 () var1496 (maximum/1162290584 var907!8))\r\n  (define-fun var1496!26 () var1496 (minimum/1162290584 var907!8))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.apache.commons.lang3.Range",
            "r0 := @parameter0: java.lang.String",
            "$r1 = newarray (java.lang.Object)[3]",
            "$r3 = r2.<org.apache.commons.lang3.Range: java.lang.Object minimum>",
            "$r1[0] = $r3",
            "$r4 = r2.<org.apache.commons.lang3.Range: java.lang.Object maximum>",
            "$r1[1] = $r4",
            "$r5 = r2.<org.apache.commons.lang3.Range: java.util.Comparator comparator>",
            "$r1[2] = $r5",
            "$r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, $r1)",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__startsWith__1205185697\\5406.smt2",
        "z3": {
            "memory": 33030144,
            "run_time": 0.09005045890808105,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var994 () String\r\n    \"!0!\")\r\n  (define-fun var2878 () Bool\r\n    true)\r\n  (define-fun var427 () Int\r\n    (String_length/-667254855 var3444))\r\n  (define-fun var1462 () Bool\r\n    (var3012_regionMatches/613342544\r\n  var994\r\n  var2878\r\n  0\r\n  var3444\r\n  0\r\n  (String_length/-667254855 var3444)))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var3444 () String\r\n    \"!2!\")\r\n  (define-fun var1404 () Int\r\n    (String_length/-667254855 var994))\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    0)\r\n  (define-fun var3012_regionMatches/613342544 ((x!0 String)\r\n   (x!1 Bool)\r\n   (x!2 Int)\r\n   (x!3 String)\r\n   (x!4 Int)\r\n   (x!5 Int)) Bool\r\n    false)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6459392,
            "run_time": 0.030771732330322266,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3012 is 1\r\n; rep: (as @var3012_0 var3012)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_length/-667254855 ((_arg_1 String)) Int 0)\r\n(define-fun var3012_regionMatches/613342544 ((BOUND_VARIABLE_550 String) (BOUND_VARIABLE_551 Bool) (BOUND_VARIABLE_552 Int) (BOUND_VARIABLE_553 String) (BOUND_VARIABLE_554 Int) (BOUND_VARIABLE_555 Int)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var994 () String \"\")\r\n(define-fun var3444 () String \"\")\r\n(define-fun var2878 () Bool false)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38481920,
            "run_time": 0.20432758331298828,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun var427 () Int\n    (String_length/-667254855 var3444))\n  (define-fun var1462 () Bool\n    (var3012_regionMatches/613342544\n  var994\n  var2878\n  0\n  var3444\n  0\n  (String_length/-667254855 var3444)))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2878 () Bool\n    true)\n  (define-fun var3444 () String\n    \"\\u{0}\")\n  (define-fun var994 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1404 () Int\n    (String_length/-667254855 var994))\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    0)\n  (define-fun var3012_regionMatches/613342544 ((x!0 String)\n   (x!1 Bool)\n   (x!2 Int)\n   (x!3 String)\n   (x!4 Int)\n   (x!5 Int)) Bool\n    false)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167669760,
            "run_time": 1.6721060276031494,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3444 () String \"\\u{0}\")\r\n  (define-fun var994 () String \"\\u{1}\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var2878 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int (ite (= x!0 \"\\u{1}\") 7 (ite (= x!0 \"\\u{0}\") 7 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 2
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "r1 := @parameter1: java.lang.CharSequence",
            "z0 := @parameter2: boolean",
            "if r0 == null goto (branch)",
            "if r1 != null goto i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>()",
            "i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>()",
            "$i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "if i0 <= $i1 goto $z1 = staticinvoke <org.apache.commons.lang3.CharSequenceUtils: boolean regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)>(r0, z0, 0, r1, 0, i0)",
            "$z1 = staticinvoke <org.apache.commons.lang3.CharSequenceUtils: boolean regionMatches(java.lang.CharSequence,boolean,int,java.lang.CharSequence,int,int)>(r0, z0, 0, r1, 0, i0)",
            "return $z1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper__\u300aclinit\u300b__1175253934\\493.smt2",
        "z3": {
            "memory": 33067008,
            "run_time": 0.15169572830200195,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1575!1 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 44) 4 5))\r\n  (define-fun var1575 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var973 () (Array Int Int)\r\n    var1575!4)\r\n  (define-fun var1575!3 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 14) 2 13))\r\n  (define-fun var1575!2 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 9) 1 34))\r\n  (define-fun var3414 () String\r\n    (String_valueOf/-371898945 34))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store (store (store ((as const (Array Int Int)) 8) 15 16) 11 12) 4 6))\r\n  (define-fun var1575!4 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 17) 3 10))\r\n  (define-fun var515 () String\r\n    (String_valueOf/-371898945 34))\r\n  (define-fun arr-Int-init () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun k!3 ((x!0 Int)) Int\r\n    (ite (= x!0 2) 13\r\n      14))\r\n  (define-fun k!4 ((x!0 Int)) Int\r\n    (ite (= x!0 3) 10\r\n      17))\r\n  (define-fun k!1 ((x!0 Int)) Int\r\n    (ite (= x!0 15) 16\r\n    (ite (= x!0 11) 12\r\n    (ite (= x!0 4) 6\r\n      8))))\r\n  (define-fun k!2 ((x!0 Int)) Int\r\n    (ite (= x!0 1) 34\r\n      9))\r\n  (define-fun String_valueOf/-371898945 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2310144,
            "run_time": 0.028097867965698242,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-371898945 ((BOUND_VARIABLE_731 Int)) String \"\")\r\n(define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 43))\r\n(define-fun var1575!1 () (Array Int Int) (store ((as const (Array Int Int)) 0) 0 44))\r\n(define-fun var1575!2 () (Array Int Int) (store (store ((as const (Array Int Int)) (- 1)) 0 44) 1 34))\r\n(define-fun var1575!3 () (Array Int Int) (store (store ((as const (Array Int Int)) 2) 0 44) 2 13))\r\n(define-fun var1575!4 () (Array Int Int) (store (store ((as const (Array Int Int)) (- 2)) 0 44) 3 10))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37502976,
            "run_time": 0.10758352279663086,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1575!4 () (Array Int Int)\n    (store ((as const (Array Int Int)) 10) 15 17))\n  (define-fun var3414 () String\n    (String_valueOf/-371898945 34))\n  (define-fun var1575!1 () (Array Int Int)\n    (store ((as const (Array Int Int)) 5) 0 44))\n  (define-fun var1575 () (Array Int Int)\n    arr-Int-init)\n  (define-fun var1575!2 () (Array Int Int)\n    (store ((as const (Array Int Int)) 34) 7 9))\n  (define-fun var1575!3 () (Array Int Int)\n    (store ((as const (Array Int Int)) 14) 2 13))\n  (define-fun var515 () String\n    (String_valueOf/-371898945 34))\n  (define-fun var973 () (Array Int Int)\n    var1575!4)\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store (store (store ((as const (Array Int Int)) 6) 11 12) 15 16) 7 8))\n  (define-fun arr-Int-init () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun k!3 ((x!0 Int)) Int\n    (ite (= x!0 2) 13\n      14))\n  (define-fun k!4 ((x!0 Int)) Int\n    (ite (= x!0 15) 17\n      10))\n  (define-fun k!1 ((x!0 Int)) Int\n    (ite (= x!0 11) 12\n    (ite (= x!0 15) 16\n    (ite (= x!0 7) 8\n      6))))\n  (define-fun k!2 ((x!0 Int)) Int\n    (ite (= x!0 7) 9\n      34))\n  (define-fun String_valueOf/-371898945 ((x!0 Int)) String\n    \"\")\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163667968,
            "run_time": 1.800410270690918,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1575!4 () (Array Int Int) (store ((as const (Array Int Int)) 51) 3 10))\r\n  (define-fun var1575!3 () (Array Int Int) (store ((as const (Array Int Int)) 50) 2 13))\r\n  (define-fun var1575!2 () (Array Int Int) (store ((as const (Array Int Int)) 49) 1 34))\r\n  (define-fun var1575!1 () (Array Int Int) (store ((as const (Array Int Int)) 48) 0 44))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) ((as const (Array Int Int)) 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(char)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(char)>": 1
        },
        "jimple_statements": [
            "$r0 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(34)",
            "<org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper: java.lang.String CSV_QUOTE_STR> = $r0",
            "$r1 = newarray (char)[4]",
            "$r1[0] = 44",
            "$r1[1] = 34",
            "$r1[2] = 13",
            "$r1[3] = 10",
            "<org.apache.commons.lang3.StringEscapeUtils$CsvUnescaper: char[] CSV_SEARCH_CHARS> = $r1",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__stripStart__-1756023903\\5615-deviant-0.smt2",
        "z3": {
            "memory": 32034816,
            "run_time": 0.08743906021118164,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 27 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.03154253959655762,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36319232,
            "run_time": 0.0952146053314209,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 27 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141365248,
            "run_time": 1.425231695175171,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "i0 = staticinvoke <org.apache.commons.lang3.StringUtils: int length(java.lang.CharSequence)>(r0)",
            "if i0 != 0 goto i4 = 0",
            "i4 = 0",
            "if r1 != null goto $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "if i4 == i0 goto $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i4)",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i4)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.TypeUtils__wildcardTypeToString__1279307358\\4272.smt2",
        "z3": {
            "memory": 32907264,
            "run_time": 0.1058645248413086,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  ;; universe for var349:\r\n  ;;   var349!val!0 var349!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var349!val!0 () var349)\r\n  (declare-fun var349!val!1 () var349)\r\n  ;; cardinality constraint:\r\n  (forall ((x var349)) (or (= x var349!val!0) (= x var349!val!1)))\r\n  ;; -----------\r\n  (define-fun var175 () String\r\n    var406!1)\r\n  (define-fun var3941 () var349\r\n    var349!val!0)\r\n  (define-fun var2154 () Int\r\n    (getLength-Arr-ClassObject-1 (var349_getLowerBounds/-1189759399 var3941)))\r\n  (define-fun var1814 () (Array Int ClassObject)\r\n    (var349_getLowerBounds/-1189759399 var3941))\r\n  (define-fun var229 () String\r\n    (str.++ (append/-1166366385 var0!1 63) \" super \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var0 () String\r\n    String-init)\r\n  (define-fun null-var349 () var349\r\n    var349!val!1)\r\n  (define-fun var1441 () (Array Int ClassObject)\r\n    (var349_getUpperBounds/1653165528 var3941))\r\n  (define-fun var406 () String\r\n    (append/-1166366385 var0!1 63))\r\n  (define-fun var406!1 () String\r\n    \" super \")\r\n  (define-fun var0!1 () String\r\n    \"\")\r\n  (define-fun var229!1 () String\r\n    \"\")\r\n  (define-fun var3828 () String\r\n    \"\")\r\n  (define-fun var1814!1 () (Array Int ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var0!2 () String\r\n    \"\")\r\n  (define-fun getLength-Arr-ClassObject-1 ((x!0 (Array Int ClassObject))) Int\r\n    2)\r\n  (define-fun var349_getLowerBounds/-1189759399 ((x!0 var349)) (Array Int\r\n         ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun cast-from-__Array__Int__ClassObject__-to-__Array__Int__var3603__ ((x!0\r\n    (Array Int ClassObject))) (Array Int var3603)\r\n    ((as const (Array Int var3603)) var3603!val!0))\r\n  (define-fun var906_appendAllTo/-1343076024 ((x!0 String)\r\n   (x!1 String)\r\n   (x!2 (Array Int var3603))) String\r\n    \"\")\r\n  (define-fun var349_getUpperBounds/1653165528 ((x!0 var349)) (Array Int\r\n         ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\r\n)\r\n(error \"line 53 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.031148195266723633,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var349 is 2\r\n; rep: (as @var349_0 var349)\r\n; rep: (as @var349_1 var349)\r\n; cardinality of var906 is 1\r\n; rep: (as @var906_0 var906)\r\n; cardinality of var3603 is 1\r\n; rep: (as @var3603_0 var3603)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_592 String) (BOUND_VARIABLE_593 Int)) String \"\")\r\n(define-fun var349_getLowerBounds/-1189759399 ((_arg_1 var349)) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun var349_getUpperBounds/1653165528 ((BOUND_VARIABLE_596 var349)) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun getLength-Arr-ClassObject-1 ((_arg_1 (Array Int ClassObject))) Int 2)\r\n(define-fun var906_appendAllTo/-1343076024 ((BOUND_VARIABLE_599 String) (BOUND_VARIABLE_600 String) (BOUND_VARIABLE_601 (Array Int var3603))) String \"\")\r\n(define-fun cast-from-__Array__Int__ClassObject__-to-__Array__Int__var3603__ ((BOUND_VARIABLE_604 (Array Int ClassObject))) (Array Int var3603) ((as const (Array Int var3603)) (as @var3603_0 var3603)))\r\n(define-fun null-var349 () var349 (as @var349_0 var349))\r\n(define-fun var3941 () var349 (as @var349_1 var349))\r\n(define-fun var0!1 () String \"\")\r\n(define-fun var0!2 () String \"\")\r\n(define-fun var406!1 () String \" super \")\r\n(define-fun var229!1 () String \"\")\r\n(define-fun var3828 () String \"\")\r\n(define-fun var1814!1 () (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36782080,
            "run_time": 0.10678648948669434,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\n  ;; -----------\n  ;; universe for var349:\n  ;;   var349!val!0 var349!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var349!val!0 () var349)\n  (declare-fun var349!val!1 () var349)\n  ;; cardinality constraint:\n  (forall ((x var349)) (or (= x var349!val!0) (= x var349!val!1)))\n  ;; -----------\n  (define-fun var3941 () var349\n    var349!val!0)\n  (define-fun var229 () String\n    (str.++ (append/-1166366385 var0!1 63) \" super \"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var0 () String\n    String-init)\n  (define-fun var1814 () (Array Int ClassObject)\n    (var349_getLowerBounds/-1189759399 var3941))\n  (define-fun var406 () String\n    (append/-1166366385 var0!1 63))\n  (define-fun null-var349 () var349\n    var349!val!1)\n  (define-fun var2154 () Int\n    (getLength-Arr-ClassObject-1 (var349_getLowerBounds/-1189759399 var3941)))\n  (define-fun var175 () String\n    var406!1)\n  (define-fun var1441 () (Array Int ClassObject)\n    (var349_getUpperBounds/1653165528 var3941))\n  (define-fun var406!1 () String\n    \" super \")\n  (define-fun var0!1 () String\n    \"\")\n  (define-fun var229!1 () String\n    \"\")\n  (define-fun var3828 () String\n    \"\")\n  (define-fun var1814!1 () (Array Int ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var0!2 () String\n    \"\")\n  (define-fun getLength-Arr-ClassObject-1 ((x!0 (Array Int ClassObject))) Int\n    2)\n  (define-fun var349_getLowerBounds/-1189759399 ((x!0 var349)) (Array Int\n         ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\n    \"\")\n  (define-fun cast-from-__Array__Int__ClassObject__-to-__Array__Int__var3603__ ((x!0\n    (Array Int ClassObject))) (Array Int var3603)\n    ((as const (Array Int var3603)) var3603!val!0))\n  (define-fun var906_appendAllTo/-1343076024 ((x!0 String)\n   (x!1 String)\n   (x!2 (Array Int var3603))) String\n    \"\")\n  (define-fun var349_getUpperBounds/1653165528 ((x!0 var349)) (Array Int\n         ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\n)\n(error \"line 53 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164462592,
            "run_time": 1.9397637844085693,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var349/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.reflect.TypeUtils__wildcardTypeToString__1279307358\\4272.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var406!1 =\r\n     concat(all_19_2, \" super \")\r\n\r\n1448ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.reflect.WildcardType",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "r1 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(63)",
            "r3 = interfaceinvoke r2.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>()",
            "r4 = interfaceinvoke r2.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>()",
            "$i0 = lengthof r3",
            "if $i0 > 1 goto $r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" super \")",
            "$r5 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" super \")",
            "staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.Object[])>($r5, \" & \", r3)",
            "goto [?= $r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()]",
            "$r10 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r10"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringAfterLast__-233827898\\5729-deviant-0.smt2",
        "z3": {
            "memory": 33042432,
            "run_time": 0.10336923599243164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2159 () Int\r\n    (str.len var1073))\r\n  (define-fun var1103 () Int\r\n    (- 1))\r\n  (define-fun var2281 () Int\r\n    (lastIndexOf/-1292097097 var1073 var3584))\r\n  (define-fun var3676 () Bool\r\n    (var1758_isEmpty/1595667738 var1073))\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var1073 () String\r\n    \"\")\r\n  (define-fun var1409 () Int\r\n    (- (str.len var1073) 1))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3584 () Int\r\n    2)\r\n  (define-fun var2240 () Int\r\n    (+ (lastIndexOf/-1292097097 var1073 var3584) 1))\r\n  (define-fun lastIndexOf/-1292097097 ((x!0 String) (x!1 Int)) Int\r\n    0)\r\n  (define-fun var1758_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2285568,
            "run_time": 0.07727909088134766,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var889 is 1\r\n; rep: (as @var889_0 var889)\r\n; cardinality of var1758 is 1\r\n; rep: (as @var1758_0 var1758)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1758_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun lastIndexOf/-1292097097 ((_arg_1 String) (_arg_2 Int)) Int (- 2))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1073 () String \"\")\r\n(define-fun var3584 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37392384,
            "run_time": 0.13834285736083984,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3584 () Int\n    3)\n  (define-fun var1073 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3676 () Bool\n    (var1758_isEmpty/1595667738 var1073))\n  (define-fun var1103 () Int\n    (- 1))\n  (define-fun var2281 () Int\n    (lastIndexOf/-1292097097 var1073 var3584))\n  (define-fun null-Int () Int\n    4)\n  (define-fun var2159 () Int\n    (str.len var1073))\n  (define-fun var2240 () Int\n    (+ (lastIndexOf/-1292097097 var1073 var3584) 1))\n  (define-fun var1409 () Int\n    (- (str.len var1073) 1))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1758_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n  (define-fun lastIndexOf/-1292097097 ((x!0 String) (x!1 Int)) Int\n    (- 2))\n)\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177737728,
            "run_time": 1.799839735031128,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3584 () Int 1)\r\n  (define-fun var1073 () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun lastIndexOf/-1292097097 ((x!0 String) (x!1 Int)) Int (ite (and (= x!0 \"\") (= x!1 1)) (- 2) 0))\r\n  (define-fun var1758_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int lastIndexOf(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: int lastIndexOf(int)>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(i0)",
            "i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(i0)",
            "$i6 = (int) -1",
            "if i1 == $i6 goto return \"\"",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = $i2 - 1",
            "if i1 != $i3 goto $i4 = i1 + 1",
            "$i4 = i1 + 1",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i4)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__getBytes__1614596550\\1647.smt2",
        "z3": {
            "memory": 32505856,
            "run_time": 0.30629611015319824,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1652:\r\n  ;;   var1652!val!0 var1652!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1652!val!0 () var1652)\r\n  (declare-fun var1652!val!1 () var1652)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1652)) (or (= x var1652!val!0) (= x var1652!val!1)))\r\n  ;; -----------\r\n  (define-fun var2370 () String\r\n    \"!0!\")\r\n  (define-fun var2831 () var1652\r\n    (var1462_toCharset/318113526 var3343))\r\n  (define-fun null-var1652 () var1652\r\n    var1652!val!1)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2704 () (Array Int Int)\r\n    (getBytes/-163691139 var2370 (var1462_toCharset/318113526 var3343)))\r\n  (define-fun var3343 () var1652\r\n    var1652!val!0)\r\n  (define-fun var1462_toCharset/318113526 ((x!0 var1652)) var1652\r\n    var1652!val!0)\r\n  (define-fun getBytes/-163691139 ((x!0 String) (x!1 var1652)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.02976250648498535,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1677 is 1\r\n; rep: (as @var1677_0 var1677)\r\n; cardinality of var1652 is 2\r\n; rep: (as @var1652_0 var1652)\r\n; rep: (as @var1652_1 var1652)\r\n; cardinality of var1462 is 1\r\n; rep: (as @var1462_0 var1462)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1462_toCharset/318113526 ((BOUND_VARIABLE_496 var1652)) var1652 (as @var1652_0 var1652))\r\n(define-fun getBytes/-163691139 ((BOUND_VARIABLE_499 String) (BOUND_VARIABLE_500 var1652)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1652 () var1652 (as @var1652_0 var1652))\r\n(define-fun var2370 () String \"\")\r\n(define-fun var3343 () var1652 (as @var1652_1 var1652))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37474304,
            "run_time": 0.07773208618164062,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1652:\n  ;;   var1652!val!0 var1652!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1652!val!0 () var1652)\n  (declare-fun var1652!val!1 () var1652)\n  ;; cardinality constraint:\n  (forall ((x var1652)) (or (= x var1652!val!0) (= x var1652!val!1)))\n  ;; -----------\n  (define-fun var2831 () var1652\n    (var1462_toCharset/318113526 var3343))\n  (define-fun var2370 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2704 () (Array Int Int)\n    (getBytes/-163691139 var2370 (var1462_toCharset/318113526 var3343)))\n  (define-fun null-var1652 () var1652\n    var1652!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3343 () var1652\n    var1652!val!0)\n  (define-fun var1462_toCharset/318113526 ((x!0 var1652)) var1652\n    var1652!val!0)\n  (define-fun getBytes/-163691139 ((x!0 String) (x!1 var1652)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150282240,
            "run_time": 1.5544438362121582,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3343 () var1652 var1652!4)\r\n  (define-fun var2370 () String \"\\u{0}\")\r\n  (define-fun null-var1652 () var1652 var1652!2)\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>"
        ],
        "api_count": {
            "<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.nio.charset.Charset",
            "if r0 != null goto $r2 = staticinvoke <org.apache.commons.lang3.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(r1)",
            "$r2 = staticinvoke <org.apache.commons.lang3.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(r1)",
            "$r3 = virtualinvoke r0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>($r2)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ObjectUtils__identityToString__-1462368038\\963.smt2",
        "z3": {
            "memory": 33112064,
            "run_time": 0.1377732753753662,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2862:\r\n  ;;   var2862!val!0 var2862!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2862!val!0 () var2862)\r\n  (declare-fun var2862!val!1 () var2862)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2862)) (or (= x var2862!val!0) (= x var2862!val!1)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  (define-fun var2053 () Int\r\n    (+ (str.len (getName/-1958580599 (getClass/1258963082 var830)))\r\n   1\r\n   (str.len (var2277_identityHashCodeHex/834881754 var830))))\r\n  (define-fun null-var2862 () var2862\r\n    var2862!val!1)\r\n  (define-fun var2812!1 () String\r\n    \"\")\r\n  (define-fun var3943 () String\r\n    var2812!2)\r\n  (define-fun var2568 () String\r\n    (getName/-1958580599 (getClass/1258963082 var830)))\r\n  (define-fun var441 () String\r\n    (str.++ var2812!1 (getName/-1958580599 (getClass/1258963082 var830))))\r\n  (define-fun var441!1 () String\r\n    \"\")\r\n  (define-fun var3653 () Int\r\n    (str.len (getName/-1958580599 (getClass/1258963082 var830))))\r\n  (define-fun var830 () var2862\r\n    var2862!val!0)\r\n  (define-fun var3425 () Int\r\n    (+ (str.len (getName/-1958580599 (getClass/1258963082 var830))) 1))\r\n  (define-fun var2612 () String\r\n    (append/-1166366385\r\n  (str.++ var2812!1 (getName/-1958580599 (getClass/1258963082 var830)))\r\n  64))\r\n  (define-fun var2617 () ClassObject\r\n    (getClass/1258963082 var830))\r\n  (define-fun var2627 () Int\r\n    (str.len (var2277_identityHashCodeHex/834881754 var830)))\r\n  (define-fun var2812 () String\r\n    String-init)\r\n  (define-fun var629 () String\r\n    (var2277_identityHashCodeHex/834881754 var830))\r\n  (define-fun var2812!2 () String\r\n    \"\")\r\n  (define-fun var2612!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2053!1 () Int\r\n    0)\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun getClass/1258963082 ((x!0 var2862)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun var2277_identityHashCodeHex/834881754 ((x!0 var2862)) String\r\n    \"\")\r\n  (define-fun <init>/543593434 ((x!0 String) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 57 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12226560,
            "run_time": 0.04642987251281738,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2862 is 2\r\n; rep: (as @var2862_0 var2862)\r\n; rep: (as @var2862_1 var2862)\r\n; cardinality of var2277 is 1\r\n; rep: (as @var2277_0 var2277)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getClass/1258963082 ((_arg_1 var2862)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun var2277_identityHashCodeHex/834881754 ((BOUND_VARIABLE_797 var2862)) String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/543593434 ((BOUND_VARIABLE_800 String) (BOUND_VARIABLE_801 Int)) void (as @void_0 void))\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_804 String) (BOUND_VARIABLE_805 Int)) String \"\")\r\n(define-fun null-var2862 () var2862 (as @var2862_0 var2862))\r\n(define-fun var830 () var2862 (as @var2862_1 var2862))\r\n(define-fun var2812!1 () String \"\")\r\n(define-fun var2053!1 () Int 0)\r\n(define-fun var2812!2 () String \"\")\r\n(define-fun var441!1 () String \"\")\r\n(define-fun var2612!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36696064,
            "run_time": 0.07679295539855957,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 56 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 57 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177070080,
            "run_time": 1.7907896041870117,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2862/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.ObjectUtils__identityToString__-1462368038\\963.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2612!1 =\r\n     concat(all_20_5, all_20_4)\r\n   all_20_6 =\r\n     concat(var2812!1, all_14_2)\r\n   var2812!2 =\r\n     concat(var2812!1, all_14_2)\r\n   var441!1 =\r\n     concat(all_17_2, rhs)\r\n   all_17_2 =\r\n     concat(var2812!1, all_14_2)\r\n\r\n1353ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "if r0 != null goto $r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>()",
            "r3 = staticinvoke <org.apache.commons.lang3.ObjectUtils: java.lang.String identityHashCodeHex(java.lang.Object)>(r0)",
            "$r4 = new java.lang.StringBuilder",
            "$i0 = virtualinvoke r2.<java.lang.String: int length()>()",
            "$i2 = $i0 + 1",
            "$i1 = virtualinvoke r3.<java.lang.String: int length()>()",
            "$i3 = $i2 + $i1",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>(int)>($i3)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64)",
            "virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__startsWith__1205185697\\5414.smt2",
        "z3": {
            "memory": 32575488,
            "run_time": 0.15224027633666992,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 24 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.04688692092895508,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36233216,
            "run_time": 0.07721996307373047,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 24 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 130174976,
            "run_time": 1.3534612655639648,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 6,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "r1 := @parameter1: java.lang.CharSequence",
            "z0 := @parameter2: boolean",
            "if r0 == null goto (branch)",
            "if r0 != r1 goto $z2 = 0",
            "$z2 = 1",
            "goto [?= return $z2]",
            "return $z2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__stripStart__-1756023903\\5615.smt2",
        "z3": {
            "memory": 32567296,
            "run_time": 0.24621152877807617,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 29 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.031053543090820312,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36364288,
            "run_time": 0.07864022254943848,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 29 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 142663680,
            "run_time": 1.4448134899139404,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "i0 = staticinvoke <org.apache.commons.lang3.StringUtils: int length(java.lang.CharSequence)>(r0)",
            "if i0 != 0 goto i4 = 0",
            "i4 = 0",
            "if r1 != null goto $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "if i4 == i0 goto $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i4)",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i4)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__matches__1589751232\\3953.smt2",
        "z3": {
            "memory": 33091584,
            "run_time": 0.12150263786315918,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var411 () Int\r\n    0)\r\n  (define-fun var2436 () String\r\n    \"!2!\")\r\n  (define-fun var3677 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var1595 () Int\r\n    0)\r\n  (define-fun var2707 () Int\r\n    (String_length/-667254855 var1351))\r\n  (define-fun var986 () Int\r\n    (String_length/-667254855 var2436))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2189 () Int\r\n    (String_length/-667254855 var2436))\r\n  (define-fun var250 () Int\r\n    (String_length/-667254855 var2436))\r\n  (define-fun var1351 () String\r\n    \"!0!\")\r\n  (define-fun var1982!2 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 0) 9 11))\r\n  (define-fun var964 () String\r\n    var2436)\r\n  (define-fun var1530 () Int\r\n    (- (div (String_length/-667254855 var1351) 2) 1))\r\n  (define-fun var968 () Int\r\n    0)\r\n  (define-fun var618 () Int\r\n    0)\r\n  (define-fun var1982!4 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) (- 38)) 15 17))\r\n  (define-fun var1982 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var1156 () Int\r\n    (String_length/-667254855 var1351))\r\n  (define-fun var2135 () Int\r\n    (String_length/-667254855 var2436))\r\n  (define-fun var1982!3 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 14) 2 0))\r\n  (define-fun var2185 () Int\r\n    0)\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store (store (store ((as const (Array Int Int)) 13) 9 10) 6 8) 15 16))\r\n  (define-fun var1791 () Int\r\n    (div (String_length/-667254855 var1351) 2))\r\n  (define-fun var3366 () Int\r\n    (String_length/-667254855 var1351))\r\n  (define-fun var2782 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var1982!1 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 0) 6 7))\r\n  (define-fun var2983 () Int\r\n    0)\r\n  (define-fun var3140 () Int\r\n    0)\r\n  (define-fun var2777 () Int\r\n    (- 1))\r\n  (define-fun var3060 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var2373 () Int\r\n    0)\r\n  (define-fun arr-Int-init () (Array Int Int)\r\n    ((as const (Array Int Int)) 8))\r\n  (define-fun var196 () Int\r\n    (div 0 2))\r\n  (define-fun var2539 () Int\r\n    (String_length/-667254855 var1351))\r\n  (define-fun var524 () Int\r\n    (var804_max/1360571700 (- (div (String_length/-667254855 var1351) 2) 1) 0))\r\n  (define-fun var218 () Int\r\n    (getLength-Arr-Int-1 arr-Int-init))\r\n  (define-fun var949 () Int\r\n    0)\r\n  (define-fun var950 () Int\r\n    0)\r\n  (define-fun var1990 () (Array Int Bool)\r\n    arr-Bool-init)\r\n  (define-fun var276 () String\r\n    var1351)\r\n  (define-fun var3319 () Int\r\n    (String_length/-667254855 var2436))\r\n  (define-fun var3494 () Int\r\n    (String_length/-667254855 var1351))\r\n  (define-fun var3060!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var2777!1 () Int\r\n    0)\r\n  (define-fun arr-Bool-init () (Array Int Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    (ite (= x!0 \"!0!\") (- 38)\r\n      (- 39)))\r\n  (define-fun k!2 ((x!0 Int)) Int\r\n    (ite (= x!0 9) 10\r\n    (ite (= x!0 6) 8\r\n    (ite (= x!0 15) 16\r\n      13))))\r\n  (define-fun k!3 ((x!0 Int)) Int\r\n    (ite (= x!0 9) 11\r\n      0))\r\n  (define-fun k!4 ((x!0 Int)) Int\r\n    (ite (= x!0 2) 0\r\n      14))\r\n  (define-fun k!5 ((x!0 Int)) Int\r\n    (ite (= x!0 15) 17\r\n      (- 38)))\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\r\n    0)\r\n  (define-fun var835_fill/506259732 ((x!0 (Array Int Int)) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun var804_max/1360571700 ((x!0 Int) (x!1 Int)) Int\r\n    0)\r\n)\r\n(error \"line 93 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13586432,
            "run_time": 0.04642987251281738,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var804 is 1\r\n; rep: (as @var804_0 var804)\r\n; cardinality of var835 is 1\r\n; rep: (as @var835_0 var835)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_length/-667254855 ((_arg_1 String)) Int (ite (= \"\" _arg_1) 0 (- 1)))\r\n(define-fun var804_max/1360571700 ((BOUND_VARIABLE_1094 Int) (BOUND_VARIABLE_1095 Int)) Int 0)\r\n(define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var835_fill/506259732 ((BOUND_VARIABLE_1098 (Array Int Int)) (BOUND_VARIABLE_1099 Int)) void (as @void_0 void))\r\n(define-fun arr-Bool-init () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 0)\r\n(define-fun null-String () String \"B\")\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) ((as const (Array Int Int)) (- 1)))\r\n(define-fun var1351 () String \"\")\r\n(define-fun var2436 () String \"A\")\r\n(define-fun var3060!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2777!1 () Int 0)\r\n(define-fun var1982!1 () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 0))\r\n(define-fun var1982!2 () (Array Int Int) (store (store ((as const (Array Int Int)) 2) 0 0) 1 0))\r\n(define-fun var1982!3 () (Array Int Int) (store (store ((as const (Array Int Int)) (- 2)) 0 0) 2 0))\r\n(define-fun var1982!4 () (Array Int Int) (store (store ((as const (Array Int Int)) 3) 0 0) 3 0))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37916672,
            "run_time": 0.17046761512756348,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1791 () Int\n    (div (String_length/-667254855 var1351) 2))\n  (define-fun var196 () Int\n    (div 0 2))\n  (define-fun var2777 () Int\n    (- 1))\n  (define-fun var1595 () Int\n    0)\n  (define-fun var1351 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var949 () Int\n    0)\n  (define-fun var3319 () Int\n    (String_length/-667254855 var2436))\n  (define-fun var3494 () Int\n    (String_length/-667254855 var1351))\n  (define-fun var2135 () Int\n    (String_length/-667254855 var2436))\n  (define-fun var964 () String\n    var2436)\n  (define-fun var1982!3 () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 11 13))\n  (define-fun var2539 () Int\n    (String_length/-667254855 var1351))\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store (store (store ((as const (Array Int Int)) 9) 5 7) 14 15) 11 12))\n  (define-fun var986 () Int\n    (String_length/-667254855 var2436))\n  (define-fun var524 () Int\n    (var804_max/1360571700 (- (div (String_length/-667254855 var1351) 2) 1) 0))\n  (define-fun var2189 () Int\n    (String_length/-667254855 var2436))\n  (define-fun var1982!1 () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 5 6))\n  (define-fun var218 () Int\n    (getLength-Arr-Int-1 arr-Int-init))\n  (define-fun var1982!4 () (Array Int Int)\n    (store ((as const (Array Int Int)) (- 8855)) 14 16))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var250 () Int\n    (String_length/-667254855 var2436))\n  (define-fun var1990 () (Array Int Bool)\n    arr-Bool-init)\n  (define-fun var1982 () (Array Int Int)\n    arr-Int-init)\n  (define-fun var2436 () String\n    \"\\u{0}\")\n  (define-fun var3677 () (Array Int Int)\n    arr-Int-init)\n  (define-fun var2782 () (Array Int Int)\n    arr-Int-init)\n  (define-fun arr-Int-init () (Array Int Int)\n    ((as const (Array Int Int)) 19))\n  (define-fun var1982!2 () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 8 10))\n  (define-fun var1530 () Int\n    (- (div (String_length/-667254855 var1351) 2) 1))\n  (define-fun var618 () Int\n    0)\n  (define-fun var276 () String\n    var1351)\n  (define-fun var3060 () (Array Int Int)\n    arr-Int-init)\n  (define-fun var968 () Int\n    0)\n  (define-fun var1156 () Int\n    (String_length/-667254855 var1351))\n  (define-fun var3140 () Int\n    0)\n  (define-fun var2983 () Int\n    0)\n  (define-fun var411 () Int\n    0)\n  (define-fun var3366 () Int\n    (String_length/-667254855 var1351))\n  (define-fun var2185 () Int\n    0)\n  (define-fun var950 () Int\n    0)\n  (define-fun var2373 () Int\n    0)\n  (define-fun var2707 () Int\n    (String_length/-667254855 var1351))\n  (define-fun var3060!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var2777!1 () Int\n    0)\n  (define-fun arr-Bool-init () (Array Int Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\n    0)\n  (define-fun k!362 ((x!0 Int)) Int\n    (ite (= x!0 5) 7\n    (ite (= x!0 14) 15\n    (ite (= x!0 11) 12\n      9))))\n  (define-fun k!363 ((x!0 Int)) Int\n    (ite (= x!0 8) 10\n      0))\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    (ite (= x!0 \"\\u{0}\\u{0}\") (- 8855)\n      (- 8856)))\n  (define-fun k!364 ((x!0 Int)) Int\n    (ite (= x!0 11) 13\n      0))\n  (define-fun k!365 ((x!0 Int)) Int\n    (ite (= x!0 14) 16\n      (- 8855)))\n  (define-fun var835_fill/506259732 ((x!0 (Array Int Int)) (x!1 Int)) void\n    void!val!0)\n  (define-fun var804_max/1360571700 ((x!0 Int) (x!1 Int)) Int\n    0)\n)\n(error \"line 93 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 186269696,
            "run_time": 1.9916911125183105,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1982!4 () (Array Int Int) (store ((as const (Array Int Int)) 15) 3 0))\r\n  (define-fun var1982!3 () (Array Int Int) (store ((as const (Array Int Int)) 14) 2 0))\r\n  (define-fun var1982!2 () (Array Int Int) (store ((as const (Array Int Int)) 13) 1 0))\r\n  (define-fun var1982!1 () (Array Int Int) (store ((as const (Array Int Int)) 12) 0 0))\r\n  (define-fun var2436 () String \"\\u{0}\")\r\n  (define-fun var1351 () String \"\\u{1}\")\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int (ite (= x!0 ((as const (Array Int Int)) 0)) 0 0))\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int (ite (= x!0 \"\\u{1}\") 0 (ite (= x!0 \"\\u{0}\") (- 1) 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 22,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 10
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "r1 := @parameter1: java.lang.CharSequence",
            "$i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>()",
            "if $i1 <= $i0 goto r5 = r1",
            "r5 = r0",
            "r6 = r1",
            "goto [?= $i2 = interfaceinvoke r5.<java.lang.CharSequence: int length()>()]",
            "$i2 = interfaceinvoke r5.<java.lang.CharSequence: int length()>()",
            "$i3 = $i2 / 2",
            "$i4 = $i3 - 1",
            "$i25 = staticinvoke <java.lang.Math: int max(int,int)>($i4, 0)",
            "$i5 = interfaceinvoke r6.<java.lang.CharSequence: int length()>()",
            "$r3 = newarray (int)[$i5]",
            "$i41 = (int) -1",
            "staticinvoke <java.util.Arrays: void fill(int[],int)>($r3, $i41)",
            "$i6 = interfaceinvoke r5.<java.lang.CharSequence: int length()>()",
            "$r4 = newarray (boolean)[$i6]",
            "i26 = 0",
            "i27 = 0",
            "$i28 = interfaceinvoke r6.<java.lang.CharSequence: int length()>()",
            "if i27 >= $i28 goto r7 = newarray (char)[i26]",
            "r7 = newarray (char)[i26]",
            "r8 = newarray (char)[i26]",
            "i32 = 0",
            "i33 = 0",
            "$i7 = interfaceinvoke r6.<java.lang.CharSequence: int length()>()",
            "if i32 >= $i7 goto i34 = 0",
            "i34 = 0",
            "i35 = 0",
            "$i8 = interfaceinvoke r5.<java.lang.CharSequence: int length()>()",
            "if i34 >= $i8 goto i36 = 0",
            "i36 = 0",
            "i37 = 0",
            "$i9 = lengthof r7",
            "if i37 >= $i9 goto i38 = 0",
            "i38 = 0",
            "i39 = 0",
            "$i10 = interfaceinvoke r6.<java.lang.CharSequence: int length()>()",
            "if i39 >= $i10 goto $r2 = newarray (int)[4]",
            "$r2 = newarray (int)[4]",
            "$r2[0] = i26",
            "$i11 = i36 / 2",
            "$r2[1] = $i11",
            "$r2[2] = i38",
            "$i12 = interfaceinvoke r5.<java.lang.CharSequence: int length()>()",
            "$r2[3] = $i12",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__containsNone__-29961153\\1093.smt2",
        "z3": {
            "memory": 33046528,
            "run_time": 0.1376645565032959,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var606 () String\r\n    \"!0!\")\r\n  (define-fun var3075 () String\r\n    \"!2!\")\r\n  (define-fun var1267 () (Array Int Int)\r\n    (toCharArray/415275702 var3075))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var740 () Bool\r\n    (var2887_containsNone/143425682 var606 (toCharArray/415275702 var3075)))\r\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var2887_containsNone/143425682 ((x!0 String) (x!1 (Array Int Int))) Bool\r\n    false)\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11612160,
            "run_time": 0.03120112419128418,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2231 is 1\r\n; rep: (as @var2231_0 var2231)\r\n; cardinality of var2887 is 1\r\n; rep: (as @var2887_0 var2887)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun toCharArray/415275702 ((BOUND_VARIABLE_516 String)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2887_containsNone/143425682 ((BOUND_VARIABLE_521 String) (BOUND_VARIABLE_522 (Array Int Int))) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var606 () String \"\")\r\n(define-fun var3075 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37642240,
            "run_time": 0.13963556289672852,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1267 () (Array Int Int)\n    (toCharArray/415275702 var3075))\n  (define-fun var606 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var740 () Bool\n    (var2887_containsNone/143425682 var606 (toCharArray/415275702 var3075)))\n  (define-fun var3075 () String\n    \"\\u{0}\")\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var2887_containsNone/143425682 ((x!0 String) (x!1 (Array Int Int))) Bool\n    false)\n)\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141901824,
            "run_time": 1.5379412174224854,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3075 () String \"\\u{0}\")\r\n  (define-fun var606 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: char[] toCharArray()>"
        ],
        "api_count": {
            "<java.lang.String: char[] toCharArray()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.CharSequence",
            "r0 := @parameter1: java.lang.String",
            "if r0 != null goto $r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()",
            "$r2 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean containsNone(java.lang.CharSequence,char[])>(r1, $r2)",
            "return $z0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.ConstructorUtils__invokeConstructor__703095368\\2685.smt2",
        "z3": {
            "memory": 33120256,
            "run_time": 0.24425911903381348,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 ClassObject!val!3 ClassObject!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  (declare-fun ClassObject!val!3 () ClassObject)\r\n  (declare-fun ClassObject!val!2 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject))\r\n          (or (= x ClassObject!val!0)\r\n              (= x ClassObject!val!1)\r\n              (= x ClassObject!val!3)\r\n              (= x ClassObject!val!2)))\r\n  ;; -----------\r\n  ;; universe for var3817:\r\n  ;;   var3817!val!1 var3817!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3817!val!1 () var3817)\r\n  (declare-fun var3817!val!0 () var3817)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3817)) (or (= x var3817!val!1) (= x var3817!val!0)))\r\n  ;; -----------\r\n  (define-fun var1599 () String\r\n    (getName/-1958580599 var745))\r\n  (define-fun var1990 () (Array Int var3817)\r\n    (var1658_nullToEmpty/627354827 var1791))\r\n  (define-fun var745 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var696 () String\r\n    (str.++ var3244!1 \"No such accessible constructor on object: \"))\r\n  (define-fun var2118 () String\r\n    (str.++ var3244!1\r\n        \"No such accessible constructor on object: \"\r\n        (getName/-1958580599 var745)))\r\n  (define-fun var3512 () (Array Int ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!2))\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var1791 () (Array Int var3817)\r\n    ((as const (Array Int var3817)) var3817!val!0))\r\n  (define-fun var3721 () var1337\r\n    (var1081_getMatchingAccessibleConstructor/-1470579810\r\n  var745\r\n  (var1658_nullToEmpty/1403447389 var3512)))\r\n  (define-fun null-__Array__Int__var3817__ () (Array Int var3817)\r\n    ((as const (Array Int var3817)) var3817!val!1))\r\n  (define-fun var3451 () var1212\r\n    var1212-init)\r\n  (define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!3))\r\n  (define-fun var3244 () String\r\n    String-init)\r\n  (define-fun var1343 () (Array Int ClassObject)\r\n    (var1658_nullToEmpty/1403447389 var3512))\r\n  (define-fun var3275 () String\r\n    (str.++ var3244!1\r\n        \"No such accessible constructor on object: \"\r\n        (getName/-1958580599 var745)))\r\n  (define-fun var696!1 () String\r\n    \"No such accessible constructor on object: \")\r\n  (define-fun null-var1337 () var1337\r\n    var1337!val!0)\r\n  (define-fun var3244!2 () String\r\n    \"No such accessible constructor on object: \")\r\n  (define-fun var3244!1 () String\r\n    \"\")\r\n  (define-fun var3451!1 () var1212\r\n    var1212!val!0)\r\n  (define-fun var1212-init () var1212\r\n    var1212!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3275!1 () String\r\n    \"\")\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun var1658_nullToEmpty/1403447389 ((x!0 (Array Int ClassObject))) (Array Int\r\n         ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\r\n  (define-fun var1081_getMatchingAccessibleConstructor/-1470579810 ((x!0\r\n    ClassObject)\r\n   (x!1 (Array Int ClassObject))) var1337\r\n    var1337!val!0)\r\n  (define-fun <init>/-966825728 ((x!0 var1212) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun var1658_nullToEmpty/627354827 ((x!0 (Array Int var3817))) (Array Int\r\n         var3817)\r\n    ((as const (Array Int var3817)) var3817!val!0))\r\n)\r\n(error \"line 63 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2207744,
            "run_time": 0.07729506492614746,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3817 is 2\r\n; rep: (as @var3817_0 var3817)\r\n; rep: (as @var3817_1 var3817)\r\n; cardinality of var1658 is 1\r\n; rep: (as @var1658_0 var1658)\r\n; cardinality of var1337 is 1\r\n; rep: (as @var1337_0 var1337)\r\n; cardinality of var1081 is 1\r\n; rep: (as @var1081_0 var1081)\r\n; cardinality of var1212 is 1\r\n; rep: (as @var1212_0 var1212)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 4\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n; rep: (as @ClassObject_2 ClassObject)\r\n; rep: (as @ClassObject_3 ClassObject)\r\n(define-fun var1658_nullToEmpty/627354827 ((BOUND_VARIABLE_614 (Array Int var3817))) (Array Int var3817) ((as const (Array Int var3817)) (as @var3817_0 var3817)))\r\n(define-fun var1658_nullToEmpty/1403447389 ((BOUND_VARIABLE_618 (Array Int ClassObject))) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun var1081_getMatchingAccessibleConstructor/-1470579810 ((BOUND_VARIABLE_622 ClassObject) (BOUND_VARIABLE_623 (Array Int ClassObject))) var1337 (as @var1337_0 var1337))\r\n(define-fun var1212-init () var1212 (as @var1212_0 var1212))\r\n(define-fun String-init () String \"\")\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_626 ClassObject)) String \"\")\r\n(define-fun <init>/-966825728 ((BOUND_VARIABLE_629 var1212) (BOUND_VARIABLE_630 String)) void (as @void_0 void))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-__Array__Int__var3817__ () (Array Int var3817) (store ((as const (Array Int var3817)) (as @var3817_1 var3817)) 0 (as @var3817_0 var3817)))\r\n(define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_1 ClassObject)) 0 (as @ClassObject_2 ClassObject)))\r\n(define-fun null-var1337 () var1337 (as @var1337_0 var1337))\r\n(define-fun var745 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var1791 () (Array Int var3817) (store ((as const (Array Int var3817)) (as @var3817_0 var3817)) 0 (as @var3817_1 var3817)))\r\n(define-fun var3512 () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)) 0 (as @ClassObject_3 ClassObject)))\r\n(define-fun var3244!1 () String \"\")\r\n(define-fun var3244!2 () String \"No such accessible constructor on object: \")\r\n(define-fun var696!1 () String \"No such accessible constructor on object: \")\r\n(define-fun var3451!1 () var1212 (as @var1212_0 var1212))\r\n(define-fun var3275!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37351424,
            "run_time": 0.07750058174133301,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 ClassObject!val!3 ClassObject!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  (declare-fun ClassObject!val!3 () ClassObject)\n  (declare-fun ClassObject!val!2 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject))\n          (or (= x ClassObject!val!0)\n              (= x ClassObject!val!1)\n              (= x ClassObject!val!3)\n              (= x ClassObject!val!2)))\n  ;; -----------\n  ;; universe for var3817:\n  ;;   var3817!val!1 var3817!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3817!val!1 () var3817)\n  (declare-fun var3817!val!0 () var3817)\n  ;; cardinality constraint:\n  (forall ((x var3817)) (or (= x var3817!val!1) (= x var3817!val!0)))\n  ;; -----------\n  ;; universe for var1337:\n  ;;   var1337!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1337!val!0 () var1337)\n  ;; cardinality constraint:\n  (forall ((x var1337)) (= x var1337!val!0))\n  ;; -----------\n  (define-fun var1791 () (Array Int var3817)\n    ((as const (Array Int var3817)) var3817!val!0))\n  (define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!3))\n  (define-fun null-__Array__Int__var3817__ () (Array Int var3817)\n    ((as const (Array Int var3817)) var3817!val!1))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var745 () ClassObject\n    ClassObject!val!0)\n  (define-fun var696 () String\n    (str.++ var3244!1 \"No such accessible constructor on object: \"))\n  (define-fun var3451 () var1212\n    var1212-init)\n  (define-fun var3721 () var1337\n    (var1081_getMatchingAccessibleConstructor/-1470579810\n  var745\n  (var1658_nullToEmpty/1403447389 var3512)))\n  (define-fun var1990 () (Array Int var3817)\n    (var1658_nullToEmpty/627354827 var1791))\n  (define-fun var2118 () String\n    (str.++ var3244!1\n        \"No such accessible constructor on object: \"\n        (getName/-1958580599 var745)))\n  (define-fun var3244 () String\n    String-init)\n  (define-fun var3275 () String\n    (str.++ var3244!1\n        \"No such accessible constructor on object: \"\n        (getName/-1958580599 var745)))\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var1343 () (Array Int ClassObject)\n    (var1658_nullToEmpty/1403447389 var3512))\n  (define-fun var1599 () String\n    (getName/-1958580599 var745))\n  (define-fun var3512 () (Array Int ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!2))\n  (define-fun var696!1 () String\n    \"No such accessible constructor on object: \")\n  (define-fun null-var1337 () var1337\n    var1337!val!0)\n  (define-fun var3244!2 () String\n    \"No such accessible constructor on object: \")\n  (define-fun var3244!1 () String\n    \"\")\n  (define-fun var3451!1 () var1212\n    var1212!val!0)\n  (define-fun var1212-init () var1212\n    var1212!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3275!1 () String\n    \"\")\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n  (define-fun var1658_nullToEmpty/1403447389 ((x!0 (Array Int ClassObject))) (Array Int\n         ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\n  (define-fun var1081_getMatchingAccessibleConstructor/-1470579810 ((x!0\n    ClassObject)\n   (x!1 (Array Int ClassObject))) var1337\n    var1337!val!0)\n  (define-fun <init>/-966825728 ((x!0 var1212) (x!1 String)) void\n    void!val!0)\n  (define-fun var1658_nullToEmpty/627354827 ((x!0 (Array Int var3817))) (Array Int\n         var3817)\n    ((as const (Array Int var3817)) var3817!val!0))\n)\n(error \"line 63 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180043776,
            "run_time": 1.896390438079834,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: ClassObject/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.reflect.ConstructorUtils__invokeConstructor__703095368\\2685.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var696!1 =\r\n     concat(\"No such accessible constructor on object: \", all_25_2)\r\n\r\n1473ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Class",
            "r10 := @parameter1: java.lang.Object[]",
            "r11 := @parameter2: java.lang.Class[]",
            "r12 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(r10)",
            "r13 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Class[] nullToEmpty(java.lang.Class[])>(r11)",
            "r1 = staticinvoke <org.apache.commons.lang3.reflect.ConstructorUtils: java.lang.reflect.Constructor getMatchingAccessibleConstructor(java.lang.Class,java.lang.Class[])>(r0, r13)",
            "if r1 != null goto $z0 = virtualinvoke r1.<java.lang.reflect.Constructor: boolean isVarArgs()>()",
            "$r4 = new java.lang.NoSuchMethodException",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No such accessible constructor on object: \")",
            "$r6 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>()",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r4.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r9)",
            "throw $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__startsWith__1205185697\\5417.smt2",
        "z3": {
            "memory": 32579584,
            "run_time": 0.08821821212768555,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 23 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.0304872989654541,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35770368,
            "run_time": 0.10934591293334961,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 23 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 130572288,
            "run_time": 1.193333387374878,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 6,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "r1 := @parameter1: java.lang.CharSequence",
            "z0 := @parameter2: boolean",
            "if r0 == null goto (branch)",
            "if r0 != r1 goto $z2 = 0",
            "$z2 = 0",
            "return $z2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringAfterLast__-233827898\\5729.smt2",
        "z3": {
            "memory": 33103872,
            "run_time": 0.12030553817749023,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1892 () String\r\n    (str.substr var1073\r\n            (+ (lastIndexOf/-1292097097 var1073 var3584) 1)\r\n            (- (str.len var1073)\r\n               (+ (lastIndexOf/-1292097097 var1073 var3584) 1))))\r\n  (define-fun var2159 () Int\r\n    (str.len var1073))\r\n  (define-fun var1103 () Int\r\n    (- 1))\r\n  (define-fun var2281 () Int\r\n    (lastIndexOf/-1292097097 var1073 var3584))\r\n  (define-fun var3676 () Bool\r\n    (var1758_isEmpty/1595667738 var1073))\r\n  (define-fun null-Int () Int\r\n    4)\r\n  (define-fun var1073 () String\r\n    \"AB\")\r\n  (define-fun var1409 () Int\r\n    (- (str.len var1073) 1))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3584 () Int\r\n    3)\r\n  (define-fun var2240 () Int\r\n    (+ (lastIndexOf/-1292097097 var1073 var3584) 1))\r\n  (define-fun lastIndexOf/-1292097097 ((x!0 String) (x!1 Int)) Int\r\n    0)\r\n  (define-fun var1758_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 40 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.031414031982421875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var889 is 1\r\n; rep: (as @var889_0 var889)\r\n; cardinality of var1758 is 1\r\n; rep: (as @var1758_0 var1758)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1758_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun lastIndexOf/-1292097097 ((_arg_1 String) (_arg_2 Int)) Int 0)\r\n(define-fun null-String () String \"\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1073 () String \"AA\")\r\n(define-fun var3584 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38076416,
            "run_time": 0.126678466796875,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3584 () Int\n    3)\n  (define-fun var1073 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3676 () Bool\n    (var1758_isEmpty/1595667738 var1073))\n  (define-fun var1103 () Int\n    (- 1))\n  (define-fun var2281 () Int\n    (lastIndexOf/-1292097097 var1073 var3584))\n  (define-fun null-Int () Int\n    4)\n  (define-fun var2159 () Int\n    (str.len var1073))\n  (define-fun var2240 () Int\n    (+ (lastIndexOf/-1292097097 var1073 var3584) 1))\n  (define-fun var1892 () String\n    (str.substr var1073\n            (+ (lastIndexOf/-1292097097 var1073 var3584) 1)\n            (- (str.len var1073)\n               (+ (lastIndexOf/-1292097097 var1073 var3584) 1))))\n  (define-fun var1409 () Int\n    (- (str.len var1073) 1))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1758_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n  (define-fun lastIndexOf/-1292097097 ((x!0 String) (x!1 Int)) Int\n    0)\n)\n(error \"line 40 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 178376704,
            "run_time": 1.9425253868103027,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3584 () Int 2)\r\n  (define-fun var1073 () String \"\\u{0}\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun lastIndexOf/-1292097097 ((x!0 String) (x!1 Int)) Int (ite (and (= x!0 \"\\u{0}\") (= x!1 2)) 0 0))\r\n  (define-fun var1758_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\\u{0}\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int lastIndexOf(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: int lastIndexOf(int)>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(i0)",
            "i1 = virtualinvoke r0.<java.lang.String: int lastIndexOf(int)>(i0)",
            "$i6 = (int) -1",
            "if i1 == $i6 goto return \"\"",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = $i2 - 1",
            "if i1 != $i3 goto $i4 = i1 + 1",
            "$i4 = i1 + 1",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i4)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__join__1888165640\\3307.smt2",
        "z3": {
            "memory": 33054720,
            "run_time": 0.16661620140075684,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1031:\r\n  ;;   var1031!val!1 var1031!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1031!val!1 () var1031)\r\n  (declare-fun var1031!val!0 () var1031)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1031)) (or (= x var1031!val!1) (= x var1031!val!0)))\r\n  ;; -----------\r\n  (define-fun null-__Array__Int__var1031__ () (Array Int var1031)\r\n    ((as const (Array Int var1031)) var1031!val!1))\r\n  (define-fun var847 () String\r\n    (String_valueOf/-371898945 var167))\r\n  (define-fun var167 () Int\r\n    1)\r\n  (define-fun var1671 () Int\r\n    1)\r\n  (define-fun var1519 () Int\r\n    1)\r\n  (define-fun var3226 () String\r\n    (var927_join/1770488023\r\n  var2834\r\n  (String_valueOf/-371898945 var167)\r\n  var1671\r\n  var1519))\r\n  (define-fun var2834 () (Array Int var1031)\r\n    ((as const (Array Int var1031)) var1031!val!0))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var927_join/1770488023 ((x!0 (Array Int var1031))\r\n   (x!1 String)\r\n   (x!2 Int)\r\n   (x!3 Int)) String\r\n    \"\")\r\n  (define-fun String_valueOf/-371898945 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.029128551483154297,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1031 is 2\r\n; rep: (as @var1031_0 var1031)\r\n; rep: (as @var1031_1 var1031)\r\n; cardinality of var927 is 1\r\n; rep: (as @var927_0 var927)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-371898945 ((BOUND_VARIABLE_516 Int)) String \"\")\r\n(define-fun var927_join/1770488023 ((BOUND_VARIABLE_519 (Array Int var1031)) (BOUND_VARIABLE_520 String) (BOUND_VARIABLE_521 Int) (BOUND_VARIABLE_522 Int)) String \"\")\r\n(define-fun null-__Array__Int__var1031__ () (Array Int var1031) (store ((as const (Array Int var1031)) (as @var1031_1 var1031)) 0 (as @var1031_0 var1031)))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var2834 () (Array Int var1031) (store ((as const (Array Int var1031)) (as @var1031_0 var1031)) 0 (as @var1031_1 var1031)))\r\n(define-fun var167 () Int 1)\r\n(define-fun var1671 () Int 1)\r\n(define-fun var1519 () Int 1)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37003264,
            "run_time": 0.07769155502319336,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1031:\n  ;;   var1031!val!1 var1031!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1031!val!1 () var1031)\n  (declare-fun var1031!val!0 () var1031)\n  ;; cardinality constraint:\n  (forall ((x var1031)) (or (= x var1031!val!1) (= x var1031!val!0)))\n  ;; -----------\n  (define-fun null-__Array__Int__var1031__ () (Array Int var1031)\n    ((as const (Array Int var1031)) var1031!val!1))\n  (define-fun var847 () String\n    (String_valueOf/-371898945 var167))\n  (define-fun var3226 () String\n    (var927_join/1770488023\n  var2834\n  (String_valueOf/-371898945 var167)\n  var1671\n  var1519))\n  (define-fun var167 () Int\n    1)\n  (define-fun var1671 () Int\n    1)\n  (define-fun var1519 () Int\n    1)\n  (define-fun var2834 () (Array Int var1031)\n    ((as const (Array Int var1031)) var1031!val!0))\n  (define-fun null-Int () Int\n    0)\n  (define-fun var927_join/1770488023 ((x!0 (Array Int var1031))\n   (x!1 String)\n   (x!2 Int)\n   (x!3 Int)) String\n    \"\")\n  (define-fun String_valueOf/-371898945 ((x!0 Int)) String\n    \"\")\n)\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151732224,
            "run_time": 1.5975465774536133,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1519 () Int 1)\r\n  (define-fun var1671 () Int 1)\r\n  (define-fun var167 () Int 1)\r\n  (define-fun var2834 () (Array Int var1031) ((as const (Array Int var1031)) var1031!0))\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-__Array__Int__var1031__ () (Array Int var1031) (store ((as const (Array Int var1031)) var1031!0) 0 var1031!1))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(char)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(char)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object[]",
            "c0 := @parameter1: char",
            "i1 := @parameter2: int",
            "i2 := @parameter3: int",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(c0)",
            "$r2 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String join(java.lang.Object[],java.lang.String,int,int)>(r0, $r1, i1, i2)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ObjectUtils__identityToString__-52368385\\1054.smt2",
        "z3": {
            "memory": 32935936,
            "run_time": 0.10245299339294434,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3489:\r\n  ;;   var3489!val!2 var3489!val!1 var3489!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3489!val!2 () var3489)\r\n  (declare-fun var3489!val!1 () var3489)\r\n  (declare-fun var3489!val!0 () var3489)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3489))\r\n          (or (= x var3489!val!2) (= x var3489!val!1) (= x var3489!val!0)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  (define-fun var3303 () String\r\n    \"A\")\r\n  (define-fun null-var3489 () var3489\r\n    var3489!val!1)\r\n  (define-fun var1778!1 () String\r\n    \"\")\r\n  (define-fun var532 () String\r\n    (getName/-1958580599 (getClass/1258963082 var2798!1)))\r\n  (define-fun var608 () String\r\n    (var1428_identityHashCodeHex/834881754 var2798!1))\r\n  (define-fun var2798!1 () var3489\r\n    var3489!val!2)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2798 () var3489\r\n    var3489!val!0)\r\n  (define-fun var520 () String\r\n    (append/-1166366385\r\n  (str.++ var3303!1 (getName/-1958580599 (getClass/1258963082 var2798!1)))\r\n  64))\r\n  (define-fun var3859 () Int\r\n    (+ (length/-171891354 var3303)\r\n   (str.len (getName/-1958580599 (getClass/1258963082 var2798!1)))))\r\n  (define-fun var3097 () ClassObject\r\n    (getClass/1258963082 var2798!1))\r\n  (define-fun var3331 () Int\r\n    (length/-171891354 var3303))\r\n  (define-fun var1144 () Int\r\n    (+ (length/-171891354 var3303)\r\n   (str.len (getName/-1958580599 (getClass/1258963082 var2798!1)))\r\n   1\r\n   (str.len (var1428_identityHashCodeHex/834881754 var2798!1))))\r\n  (define-fun var751 () Int\r\n    (str.len (var1428_identityHashCodeHex/834881754 var2798!1)))\r\n  (define-fun var422 () Int\r\n    (str.len (getName/-1958580599 (getClass/1258963082 var2798!1))))\r\n  (define-fun var1778 () String\r\n    (str.++ var3303!1 (getName/-1958580599 (getClass/1258963082 var2798!1))))\r\n  (define-fun var3303!1 () String\r\n    \"\")\r\n  (define-fun var1721 () Int\r\n    (+ (length/-171891354 var3303)\r\n   (str.len (getName/-1958580599 (getClass/1258963082 var2798!1)))\r\n   1))\r\n  (define-fun var520!1 () String\r\n    \"\")\r\n  (define-fun var3303!2 () String\r\n    \"\")\r\n  (define-fun var423 () String\r\n    \"\")\r\n  (define-fun var1144!1 () Int\r\n    0)\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun getClass/1258963082 ((x!0 var3489)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun var1428_identityHashCodeHex/834881754 ((x!0 var3489)) String\r\n    \"\")\r\n  (define-fun length/-171891354 ((x!0 String)) Int\r\n    0)\r\n  (define-fun var892_requireNonNull/1378936425 ((x!0 var3489) (x!1 String)) var3489\r\n    var3489!val!2)\r\n  (define-fun ensureCapacity/-1884125184 ((x!0 String) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 63 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2285568,
            "run_time": 0.031159162521362305,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3489 is 3\r\n; rep: (as @var3489_0 var3489)\r\n; rep: (as @var3489_1 var3489)\r\n; rep: (as @var3489_2 var3489)\r\n; cardinality of var892 is 1\r\n; rep: (as @var892_0 var892)\r\n; cardinality of var1428 is 1\r\n; rep: (as @var1428_0 var1428)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var892_requireNonNull/1378936425 ((BOUND_VARIABLE_867 var3489) (BOUND_VARIABLE_868 String)) var3489 (as @var3489_0 var3489))\r\n(define-fun getClass/1258963082 ((_arg_1 var3489)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun var1428_identityHashCodeHex/834881754 ((BOUND_VARIABLE_871 var3489)) String \"\")\r\n(define-fun length/-171891354 ((BOUND_VARIABLE_874 String)) Int 0)\r\n(define-fun ensureCapacity/-1884125184 ((BOUND_VARIABLE_877 String) (BOUND_VARIABLE_878 Int)) void (as @void_0 void))\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_881 String) (BOUND_VARIABLE_882 Int)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3489 () var3489 (as @var3489_0 var3489))\r\n(define-fun var3303 () String \"\")\r\n(define-fun var2798 () var3489 (as @var3489_1 var3489))\r\n(define-fun var2798!1 () var3489 (as @var3489_2 var3489))\r\n(define-fun var423 () String \"\")\r\n(define-fun var3303!1 () String \"\")\r\n(define-fun var1144!1 () Int 0)\r\n(define-fun var3303!2 () String \"\")\r\n(define-fun var1778!1 () String \"\")\r\n(define-fun var520!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35926016,
            "run_time": 0.0932011604309082,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 62 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 63 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168202240,
            "run_time": 1.7349233627319336,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3489/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.ObjectUtils__identityToString__-52368385\\1054.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var520!1 =\r\n     concat(all_22_5, all_22_4)\r\n   all_22_6 =\r\n     concat(var3303!1, all_16_2)\r\n   var3303!2 =\r\n     concat(var3303!1, all_16_2)\r\n   var1778!1 =\r\n     concat(all_19_2, rhs)\r\n   all_19_2 =\r\n     concat(var3303!1, all_16_2)\r\n\r\n1359ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void ensureCapacity(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: int length()>": 1,
            "<java.lang.String: int length()>": 2,
            "<java.lang.StringBuilder: void ensureCapacity(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1
        },
        "jimple_statements": [
            "r4 := @parameter0: java.lang.StringBuilder",
            "r0 := @parameter1: java.lang.Object",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"object\")",
            "$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>()",
            "r3 = staticinvoke <org.apache.commons.lang3.ObjectUtils: java.lang.String identityHashCodeHex(java.lang.Object)>(r0)",
            "$i1 = virtualinvoke r4.<java.lang.StringBuilder: int length()>()",
            "$i0 = virtualinvoke r2.<java.lang.String: int length()>()",
            "$i2 = $i1 + $i0",
            "$i4 = $i2 + 1",
            "$i3 = virtualinvoke r3.<java.lang.String: int length()>()",
            "$i5 = $i4 + $i3",
            "virtualinvoke r4.<java.lang.StringBuilder: void ensureCapacity(int)>($i5)",
            "$r5 = virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64)",
            "virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__convertRemainingAccentCharacters__1565406537\\1181.smt2",
        "z3": {
            "memory": 32645120,
            "run_time": 0.07536840438842773,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2693 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var737 () Int\r\n    (length/-171891354 var2693))\r\n  (define-fun var3705 () Int\r\n    0)\r\n  (define-fun length/-171891354 ((x!0 String)) Int\r\n    0)\r\n)\r\n(error \"line 20 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2285568,
            "run_time": 0.03185629844665527,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun length/-171891354 ((_arg_1 String)) Int 0)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2693 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37376000,
            "run_time": 0.09198665618896484,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var737 () Int\n    (length/-171891354 var2693))\n  (define-fun var3705 () Int\n    0)\n  (define-fun var2693 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun length/-171891354 ((x!0 String)) Int\n    0)\n)\n(error \"line 20 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141078528,
            "run_time": 1.582139015197754,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2693 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun length/-171891354 ((x!0 String)) Int (ite (= x!0 \"\\u{0}\") 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.StringBuilder: int length()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.StringBuilder",
            "i3 = 0",
            "$i0 = virtualinvoke r0.<java.lang.StringBuilder: int length()>()",
            "if i3 >= $i0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__stripStart__-1756023903\\5621.smt2",
        "z3": {
            "memory": 32690176,
            "run_time": 0.0758826732635498,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1095 () String\r\n    \"\")\r\n  (define-fun var1028 () Bool\r\n    (= (str.len var1095) 0))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1512 () Int\r\n    0)\r\n  (define-fun var3341 () String\r\n    \"\")\r\n  (define-fun var2658 () Int\r\n    (var1894_length/1752045268 var3341))\r\n  (define-fun var1894_length/1752045268 ((x!0 String)) Int\r\n    2)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.0302884578704834,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var377 is 1\r\n; rep: (as @var377_0 var377)\r\n; cardinality of var1894 is 1\r\n; rep: (as @var1894_0 var1894)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1894_length/1752045268 ((_arg_1 String)) Int (- 1))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3341 () String \"\")\r\n(define-fun var1095 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37494784,
            "run_time": 0.12429475784301758,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2658 () Int\n    (var1894_length/1752045268 var3341))\n  (define-fun var1028 () Bool\n    (= (str.len var1095) 0))\n  (define-fun var1095 () String\n    \"\")\n  (define-fun var1512 () Int\n    0)\n  (define-fun var3341 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1894_length/1752045268 ((x!0 String)) Int\n    3)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163569664,
            "run_time": 1.6876509189605713,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1095 () String \"\")\r\n  (define-fun var3341 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\\u{1}\")\r\n  (define-fun var1894_length/1752045268 ((x!0 String)) Int (ite (= x!0 \"\\u{0}\") 7 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: boolean isEmpty()>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "i0 = staticinvoke <org.apache.commons.lang3.StringUtils: int length(java.lang.CharSequence)>(r0)",
            "if i0 != 0 goto i4 = 0",
            "i4 = 0",
            "if r1 != null goto $z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "$z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "if $z0 == 0 goto (branch)",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.ConstructorUtils__invokeExactConstructor__43306315\\2737.smt2",
        "z3": {
            "memory": 33120256,
            "run_time": 0.11888360977172852,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var969:\r\n  ;;   var969!val!1 var969!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var969!val!1 () var969)\r\n  (declare-fun var969!val!0 () var969)\r\n  ;; cardinality constraint:\r\n  (forall ((x var969)) (or (= x var969!val!1) (= x var969!val!0)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 ClassObject!val!3 ClassObject!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  (declare-fun ClassObject!val!3 () ClassObject)\r\n  (declare-fun ClassObject!val!2 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject))\r\n          (or (= x ClassObject!val!0)\r\n              (= x ClassObject!val!1)\r\n              (= x ClassObject!val!3)\r\n              (= x ClassObject!val!2)))\r\n  ;; -----------\r\n  (define-fun null-__Array__Int__var969__ () (Array Int var969)\r\n    ((as const (Array Int var969)) var969!val!1))\r\n  (define-fun var1095 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var3648 () var3812\r\n    var3812-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3159 () var2151\r\n    (var345_getAccessibleConstructor/-450938597\r\n  var1095\r\n  (var819_nullToEmpty/1403447389 var999)))\r\n  (define-fun var3225 () (Array Int var969)\r\n    (var819_nullToEmpty/627354827 var254))\r\n  (define-fun var1138 () String\r\n    String-init)\r\n  (define-fun var999 () (Array Int ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!2))\r\n  (define-fun var2997 () String\r\n    (str.++ var1138!1\r\n        \"No such accessible constructor on object: \"\r\n        (getName/-1958580599 var1095)))\r\n  (define-fun var477 () String\r\n    (str.++ var1138!1 \"No such accessible constructor on object: \"))\r\n  (define-fun var254 () (Array Int var969)\r\n    ((as const (Array Int var969)) var969!val!0))\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var3096 () (Array Int ClassObject)\r\n    (var819_nullToEmpty/1403447389 var999))\r\n  (define-fun var60 () String\r\n    (getName/-1958580599 var1095))\r\n  (define-fun var835 () String\r\n    (str.++ var1138!1\r\n        \"No such accessible constructor on object: \"\r\n        (getName/-1958580599 var1095)))\r\n  (define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!3))\r\n  (define-fun var477!1 () String\r\n    \"No such accessible constructor on object: \")\r\n  (define-fun null-var2151 () var2151\r\n    var2151!val!0)\r\n  (define-fun var1138!1 () String\r\n    \"\")\r\n  (define-fun var1138!2 () String\r\n    \"No such accessible constructor on object: \")\r\n  (define-fun var3648!1 () var3812\r\n    var3812!val!0)\r\n  (define-fun var3812-init () var3812\r\n    var3812!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2997!1 () String\r\n    \"\")\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun var819_nullToEmpty/1403447389 ((x!0 (Array Int ClassObject))) (Array Int\r\n         ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\r\n  (define-fun var345_getAccessibleConstructor/-450938597 ((x!0 ClassObject)\r\n   (x!1 (Array Int ClassObject))) var2151\r\n    var2151!val!0)\r\n  (define-fun <init>/-966825728 ((x!0 var3812) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun var819_nullToEmpty/627354827 ((x!0 (Array Int var969))) (Array Int\r\n         var969)\r\n    ((as const (Array Int var969)) var969!val!0))\r\n)\r\n(error \"line 63 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.03055739402770996,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var969 is 2\r\n; rep: (as @var969_0 var969)\r\n; rep: (as @var969_1 var969)\r\n; cardinality of var819 is 1\r\n; rep: (as @var819_0 var819)\r\n; cardinality of var2151 is 1\r\n; rep: (as @var2151_0 var2151)\r\n; cardinality of var345 is 1\r\n; rep: (as @var345_0 var345)\r\n; cardinality of var3812 is 1\r\n; rep: (as @var3812_0 var3812)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 4\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n; rep: (as @ClassObject_2 ClassObject)\r\n; rep: (as @ClassObject_3 ClassObject)\r\n(define-fun var819_nullToEmpty/627354827 ((BOUND_VARIABLE_614 (Array Int var969))) (Array Int var969) ((as const (Array Int var969)) (as @var969_0 var969)))\r\n(define-fun var819_nullToEmpty/1403447389 ((BOUND_VARIABLE_618 (Array Int ClassObject))) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun var345_getAccessibleConstructor/-450938597 ((BOUND_VARIABLE_622 ClassObject) (BOUND_VARIABLE_623 (Array Int ClassObject))) var2151 (as @var2151_0 var2151))\r\n(define-fun var3812-init () var3812 (as @var3812_0 var3812))\r\n(define-fun String-init () String \"\")\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_626 ClassObject)) String \"\")\r\n(define-fun <init>/-966825728 ((BOUND_VARIABLE_629 var3812) (BOUND_VARIABLE_630 String)) void (as @void_0 void))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-__Array__Int__var969__ () (Array Int var969) (store ((as const (Array Int var969)) (as @var969_1 var969)) 0 (as @var969_0 var969)))\r\n(define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_1 ClassObject)) 0 (as @ClassObject_2 ClassObject)))\r\n(define-fun null-var2151 () var2151 (as @var2151_0 var2151))\r\n(define-fun var1095 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var254 () (Array Int var969) (store ((as const (Array Int var969)) (as @var969_0 var969)) 0 (as @var969_1 var969)))\r\n(define-fun var999 () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)) 0 (as @ClassObject_3 ClassObject)))\r\n(define-fun var1138!1 () String \"\")\r\n(define-fun var1138!2 () String \"No such accessible constructor on object: \")\r\n(define-fun var477!1 () String \"No such accessible constructor on object: \")\r\n(define-fun var3648!1 () var3812 (as @var3812_0 var3812))\r\n(define-fun var2997!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37408768,
            "run_time": 0.07921934127807617,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var969:\n  ;;   var969!val!1 var969!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var969!val!1 () var969)\n  (declare-fun var969!val!0 () var969)\n  ;; cardinality constraint:\n  (forall ((x var969)) (or (= x var969!val!1) (= x var969!val!0)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 ClassObject!val!3 ClassObject!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  (declare-fun ClassObject!val!3 () ClassObject)\n  (declare-fun ClassObject!val!2 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject))\n          (or (= x ClassObject!val!0)\n              (= x ClassObject!val!1)\n              (= x ClassObject!val!3)\n              (= x ClassObject!val!2)))\n  ;; -----------\n  ;; universe for var2151:\n  ;;   var2151!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2151!val!0 () var2151)\n  ;; cardinality constraint:\n  (forall ((x var2151)) (= x var2151!val!0))\n  ;; -----------\n  (define-fun var1095 () ClassObject\n    ClassObject!val!0)\n  (define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!3))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1138 () String\n    String-init)\n  (define-fun var3225 () (Array Int var969)\n    (var819_nullToEmpty/627354827 var254))\n  (define-fun var2997 () String\n    (str.++ var1138!1\n        \"No such accessible constructor on object: \"\n        (getName/-1958580599 var1095)))\n  (define-fun var477 () String\n    (str.++ var1138!1 \"No such accessible constructor on object: \"))\n  (define-fun null-__Array__Int__var969__ () (Array Int var969)\n    ((as const (Array Int var969)) var969!val!1))\n  (define-fun var60 () String\n    (getName/-1958580599 var1095))\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var3096 () (Array Int ClassObject)\n    (var819_nullToEmpty/1403447389 var999))\n  (define-fun var835 () String\n    (str.++ var1138!1\n        \"No such accessible constructor on object: \"\n        (getName/-1958580599 var1095)))\n  (define-fun var999 () (Array Int ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!2))\n  (define-fun var3648 () var3812\n    var3812-init)\n  (define-fun var254 () (Array Int var969)\n    ((as const (Array Int var969)) var969!val!0))\n  (define-fun var3159 () var2151\n    (var345_getAccessibleConstructor/-450938597\n  var1095\n  (var819_nullToEmpty/1403447389 var999)))\n  (define-fun var477!1 () String\n    \"No such accessible constructor on object: \")\n  (define-fun null-var2151 () var2151\n    var2151!val!0)\n  (define-fun var1138!1 () String\n    \"\")\n  (define-fun var1138!2 () String\n    \"No such accessible constructor on object: \")\n  (define-fun var3648!1 () var3812\n    var3812!val!0)\n  (define-fun var3812-init () var3812\n    var3812!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2997!1 () String\n    \"\")\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n  (define-fun var819_nullToEmpty/1403447389 ((x!0 (Array Int ClassObject))) (Array Int\n         ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\n  (define-fun var345_getAccessibleConstructor/-450938597 ((x!0 ClassObject)\n   (x!1 (Array Int ClassObject))) var2151\n    var2151!val!0)\n  (define-fun <init>/-966825728 ((x!0 var3812) (x!1 String)) void\n    void!val!0)\n  (define-fun var819_nullToEmpty/627354827 ((x!0 (Array Int var969))) (Array Int\n         var969)\n    ((as const (Array Int var969)) var969!val!0))\n)\n(error \"line 63 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 183189504,
            "run_time": 1.9662272930145264,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: ClassObject/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.reflect.ConstructorUtils__invokeExactConstructor__43306315\\2737.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var477!1 =\r\n     concat(\"No such accessible constructor on object: \", all_25_2)\r\n\r\n1534ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Class",
            "r9 := @parameter1: java.lang.Object[]",
            "r10 := @parameter2: java.lang.Class[]",
            "r11 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(r9)",
            "r12 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Class[] nullToEmpty(java.lang.Class[])>(r10)",
            "r1 = staticinvoke <org.apache.commons.lang3.reflect.ConstructorUtils: java.lang.reflect.Constructor getAccessibleConstructor(java.lang.Class,java.lang.Class[])>(r0, r12)",
            "if r1 != null goto $r2 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r11)",
            "$r3 = new java.lang.NoSuchMethodException",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No such accessible constructor on object: \")",
            "$r5 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r3.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r8)",
            "throw $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__matches__1589751232\\3983.smt2",
        "z3": {
            "memory": 33153024,
            "run_time": 0.09108304977416992,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2241 () Int\r\n    0)\r\n  (define-fun var1775 () String\r\n    \"!0!\")\r\n  (define-fun var55 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var2645 () Int\r\n    0)\r\n  (define-fun var3026 () Int\r\n    (String_length/-667254855 var93))\r\n  (define-fun var1423 () Int\r\n    0)\r\n  (define-fun var55!2 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 0) 9 11))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var647 () Int\r\n    0)\r\n  (define-fun var2323 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var2381 () (Array Int Bool)\r\n    arr-Bool-init)\r\n  (define-fun var704 () Int\r\n    (String_length/-667254855 var1775))\r\n  (define-fun var3993 () Int\r\n    (- 1))\r\n  (define-fun var3922 () Int\r\n    (div 0 2))\r\n  (define-fun var996 () Int\r\n    0)\r\n  (define-fun var2833 () Int\r\n    0)\r\n  (define-fun var2849 () Int\r\n    0)\r\n  (define-fun var55!4 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 0) 15 17))\r\n  (define-fun var2902 () Int\r\n    (- (div (String_length/-667254855 var93) 2) 1))\r\n  (define-fun var3463 () Int\r\n    (String_length/-667254855 var1775))\r\n  (define-fun var93 () String\r\n    \"!2!\")\r\n  (define-fun var900 () Int\r\n    (String_length/-667254855 var1775))\r\n  (define-fun var132 () Int\r\n    (getLength-Arr-Int-1 arr-Int-init))\r\n  (define-fun var55!3 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 14) 2 0))\r\n  (define-fun var2148 () Int\r\n    (String_length/-667254855 var1775))\r\n  (define-fun var2572 () Int\r\n    (String_length/-667254855 var93))\r\n  (define-fun var1758 () String\r\n    var1775)\r\n  (define-fun var55!1 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 7) 0 0))\r\n  (define-fun var3274 () Int\r\n    (String_length/-667254855 var93))\r\n  (define-fun var2908 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var2234 () Int\r\n    (var2975_max/1360571700 (- (div (String_length/-667254855 var93) 2) 1) 0))\r\n  (define-fun var2265 () Int\r\n    (div (String_length/-667254855 var93) 2))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store (store (store ((as const (Array Int Int)) 8) 12 13) 9 10) 15 16))\r\n  (define-fun var3921 () Int\r\n    (String_length/-667254855 var1775))\r\n  (define-fun var3053 () String\r\n    var93)\r\n  (define-fun var2518 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var2190 () Int\r\n    0)\r\n  (define-fun var2544 () Int\r\n    0)\r\n  (define-fun arr-Int-init () (Array Int Int)\r\n    ((as const (Array Int Int)) 8))\r\n  (define-fun var2377 () Int\r\n    0)\r\n  (define-fun var3622 () Int\r\n    (String_length/-667254855 var93))\r\n  (define-fun var1946 () Int\r\n    (String_length/-667254855 var93))\r\n  (define-fun arr-Bool-init () (Array Int Bool)\r\n    ((as const (Array Int Bool)) false))\r\n  (define-fun var3993!1 () Int\r\n    0)\r\n  (define-fun var2323!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    0)\r\n  (define-fun k!2 ((x!0 Int)) Int\r\n    (ite (= x!0 12) 13\r\n    (ite (= x!0 9) 10\r\n    (ite (= x!0 15) 16\r\n      8))))\r\n  (define-fun k!3 ((x!0 Int)) Int\r\n    (ite (= x!0 9) 11\r\n      0))\r\n  (define-fun k!4 ((x!0 Int)) Int\r\n    (ite (= x!0 2) 0\r\n      14))\r\n  (define-fun k!5 ((x!0 Int)) Int\r\n    (ite (= x!0 15) 17\r\n      0))\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\r\n    0)\r\n  (define-fun var2975_max/1360571700 ((x!0 Int) (x!1 Int)) Int\r\n    0)\r\n  (define-fun var520_fill/506259732 ((x!0 (Array Int Int)) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 92 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10342400,
            "run_time": 0.031009197235107422,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2975 is 1\r\n; rep: (as @var2975_0 var2975)\r\n; cardinality of var520 is 1\r\n; rep: (as @var520_0 var520)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_length/-667254855 ((_arg_1 String)) Int 0)\r\n(define-fun var2975_max/1360571700 ((BOUND_VARIABLE_1062 Int) (BOUND_VARIABLE_1063 Int)) Int 0)\r\n(define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var520_fill/506259732 ((BOUND_VARIABLE_1066 (Array Int Int)) (BOUND_VARIABLE_1067 Int)) void (as @void_0 void))\r\n(define-fun arr-Bool-init () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 0)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) ((as const (Array Int Int)) (- 1)))\r\n(define-fun var1775 () String \"\")\r\n(define-fun var93 () String \"\")\r\n(define-fun var2323!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3993!1 () Int 0)\r\n(define-fun var55!1 () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 0))\r\n(define-fun var55!2 () (Array Int Int) (store (store ((as const (Array Int Int)) 2) 0 0) 1 0))\r\n(define-fun var55!3 () (Array Int Int) (store (store ((as const (Array Int Int)) (- 2)) 0 0) 2 0))\r\n(define-fun var55!4 () (Array Int Int) (store (store ((as const (Array Int Int)) 3) 0 0) 3 0))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37851136,
            "run_time": 0.15523719787597656,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var647 () Int\n    0)\n  (define-fun var2265 () Int\n    (div (String_length/-667254855 var93) 2))\n  (define-fun var2381 () (Array Int Bool)\n    arr-Bool-init)\n  (define-fun var1423 () Int\n    0)\n  (define-fun var2190 () Int\n    0)\n  (define-fun var55 () (Array Int Int)\n    arr-Int-init)\n  (define-fun var2518 () (Array Int Int)\n    arr-Int-init)\n  (define-fun var55!4 () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 14 16))\n  (define-fun var1946 () Int\n    (String_length/-667254855 var93))\n  (define-fun var55!3 () (Array Int Int)\n    (store ((as const (Array Int Int)) 13) 2 0))\n  (define-fun var2241 () Int\n    0)\n  (define-fun var2645 () Int\n    0)\n  (define-fun var55!1 () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 5 6))\n  (define-fun var93 () String\n    \"\\u{0}\")\n  (define-fun var2572 () Int\n    (String_length/-667254855 var93))\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store (store (store ((as const (Array Int Int)) 12) 14 15) 5 7) 8 9))\n  (define-fun var1758 () String\n    var1775)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2148 () Int\n    (String_length/-667254855 var1775))\n  (define-fun var2849 () Int\n    0)\n  (define-fun var2323 () (Array Int Int)\n    arr-Int-init)\n  (define-fun var704 () Int\n    (String_length/-667254855 var1775))\n  (define-fun var2544 () Int\n    0)\n  (define-fun var1775 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var2377 () Int\n    0)\n  (define-fun arr-Int-init () (Array Int Int)\n    ((as const (Array Int Int)) 19))\n  (define-fun var3622 () Int\n    (String_length/-667254855 var93))\n  (define-fun var3922 () Int\n    (div 0 2))\n  (define-fun var3026 () Int\n    (String_length/-667254855 var93))\n  (define-fun var3993 () Int\n    (- 1))\n  (define-fun var2908 () (Array Int Int)\n    arr-Int-init)\n  (define-fun var996 () Int\n    0)\n  (define-fun var3053 () String\n    var93)\n  (define-fun var2833 () Int\n    0)\n  (define-fun var2902 () Int\n    (- (div (String_length/-667254855 var93) 2) 1))\n  (define-fun var3463 () Int\n    (String_length/-667254855 var1775))\n  (define-fun var900 () Int\n    (String_length/-667254855 var1775))\n  (define-fun var132 () Int\n    (getLength-Arr-Int-1 arr-Int-init))\n  (define-fun var3274 () Int\n    (String_length/-667254855 var93))\n  (define-fun var2234 () Int\n    (var2975_max/1360571700 (- (div (String_length/-667254855 var93) 2) 1) 0))\n  (define-fun var3921 () Int\n    (String_length/-667254855 var1775))\n  (define-fun var55!2 () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 8 10))\n  (define-fun arr-Bool-init () (Array Int Bool)\n    ((as const (Array Int Bool)) false))\n  (define-fun var3993!1 () Int\n    0)\n  (define-fun var2323!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun k!719 ((x!0 Int)) Int\n    (ite (= x!0 14) 16\n      0))\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\n    0)\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    0)\n  (define-fun k!716 ((x!0 Int)) Int\n    (ite (= x!0 14) 15\n    (ite (= x!0 5) 7\n    (ite (= x!0 8) 9\n      12))))\n  (define-fun k!717 ((x!0 Int)) Int\n    (ite (= x!0 8) 10\n      0))\n  (define-fun k!718 ((x!0 Int)) Int\n    (ite (= x!0 2) 0\n      13))\n  (define-fun var2975_max/1360571700 ((x!0 Int) (x!1 Int)) Int\n    0)\n  (define-fun var520_fill/506259732 ((x!0 (Array Int Int)) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 92 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 183660544,
            "run_time": 2.0860016345977783,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var55!4 () (Array Int Int) (store ((as const (Array Int Int)) 15) 3 0))\r\n  (define-fun var55!3 () (Array Int Int) (store ((as const (Array Int Int)) 14) 2 0))\r\n  (define-fun var55!2 () (Array Int Int) (store ((as const (Array Int Int)) 13) 1 0))\r\n  (define-fun var55!1 () (Array Int Int) (store ((as const (Array Int Int)) 12) 0 0))\r\n  (define-fun var93 () String \"\\u{0}\")\r\n  (define-fun var1775 () String \"\\u{1}\")\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int (ite (= x!0 ((as const (Array Int Int)) 0)) 0 0))\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int (ite (= x!0 \"\\u{1}\") 0 (ite (= x!0 \"\\u{0}\") 0 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 22,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 10
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "r1 := @parameter1: java.lang.CharSequence",
            "$i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$i0 = interfaceinvoke r1.<java.lang.CharSequence: int length()>()",
            "if $i1 <= $i0 goto r5 = r1",
            "r5 = r1",
            "r6 = r0",
            "$i2 = interfaceinvoke r5.<java.lang.CharSequence: int length()>()",
            "$i3 = $i2 / 2",
            "$i4 = $i3 - 1",
            "$i25 = staticinvoke <java.lang.Math: int max(int,int)>($i4, 0)",
            "$i5 = interfaceinvoke r6.<java.lang.CharSequence: int length()>()",
            "$r3 = newarray (int)[$i5]",
            "$i41 = (int) -1",
            "staticinvoke <java.util.Arrays: void fill(int[],int)>($r3, $i41)",
            "$i6 = interfaceinvoke r5.<java.lang.CharSequence: int length()>()",
            "$r4 = newarray (boolean)[$i6]",
            "i26 = 0",
            "i27 = 0",
            "$i28 = interfaceinvoke r6.<java.lang.CharSequence: int length()>()",
            "if i27 >= $i28 goto r7 = newarray (char)[i26]",
            "r7 = newarray (char)[i26]",
            "r8 = newarray (char)[i26]",
            "i32 = 0",
            "i33 = 0",
            "$i7 = interfaceinvoke r6.<java.lang.CharSequence: int length()>()",
            "if i32 >= $i7 goto i34 = 0",
            "i34 = 0",
            "i35 = 0",
            "$i8 = interfaceinvoke r5.<java.lang.CharSequence: int length()>()",
            "if i34 >= $i8 goto i36 = 0",
            "i36 = 0",
            "i37 = 0",
            "$i9 = lengthof r7",
            "if i37 >= $i9 goto i38 = 0",
            "i38 = 0",
            "i39 = 0",
            "$i10 = interfaceinvoke r6.<java.lang.CharSequence: int length()>()",
            "if i39 >= $i10 goto $r2 = newarray (int)[4]",
            "$r2 = newarray (int)[4]",
            "$r2[0] = i26",
            "$i11 = i36 / 2",
            "$r2[1] = $i11",
            "$r2[2] = i38",
            "$i12 = interfaceinvoke r5.<java.lang.CharSequence: int length()>()",
            "$r2[3] = $i12",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__stripAccents__-134795949\\5519.smt2",
        "z3": {
            "memory": 33009664,
            "run_time": 0.10454654693603516,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3160 () String\r\n    String-init)\r\n  (define-fun var1920 () String\r\n    \"!0!\")\r\n  (define-fun var3767 () var1016\r\n    var1016-NFD)\r\n  (define-fun var549 () String\r\n    (replaceAll/-445382577\r\n  (matcher/468719934 var1183-STRIP_ACCENTS_PATTERN var3160!2)\r\n  \"\"))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2755 () var590\r\n    (matcher/468719934 var1183-STRIP_ACCENTS_PATTERN var3160!2))\r\n  (define-fun var2246 () String\r\n    (var2631_normalize/541309276 var1920 var1016-NFD))\r\n  (define-fun var703 () var1099\r\n    var1183-STRIP_ACCENTS_PATTERN)\r\n  (define-fun var1016-NFD () var1016\r\n    var1016!val!0)\r\n  (define-fun var3160!1 () String\r\n    \"\")\r\n  (define-fun var3160!2 () String\r\n    \"\")\r\n  (define-fun var1183-STRIP_ACCENTS_PATTERN () var1099\r\n    var1099!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2631_normalize/541309276 ((x!0 String) (x!1 var1016)) String\r\n    \"\")\r\n  (define-fun matcher/468719934 ((x!0 var1099) (x!1 String)) var590\r\n    var590!val!0)\r\n  (define-fun replaceAll/-445382577 ((x!0 var590) (x!1 String)) String\r\n    \"\")\r\n  (define-fun var1183_convertRemainingAccentCharacters/1565406537 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 45 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.030537128448486328,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var277 is 1\r\n; rep: (as @var277_0 var277)\r\n; cardinality of var1016 is 1\r\n; rep: (as @var1016_0 var1016)\r\n; cardinality of var2631 is 1\r\n; rep: (as @var2631_0 var2631)\r\n; cardinality of var1183 is 1\r\n; rep: (as @var1183_0 var1183)\r\n; cardinality of var1099 is 1\r\n; rep: (as @var1099_0 var1099)\r\n; cardinality of var590 is 1\r\n; rep: (as @var590_0 var590)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2631_normalize/541309276 ((BOUND_VARIABLE_567 String) (BOUND_VARIABLE_568 var1016)) String \"\")\r\n(define-fun var1183_convertRemainingAccentCharacters/1565406537 ((BOUND_VARIABLE_571 String)) void (as @void_0 void))\r\n(define-fun matcher/468719934 ((BOUND_VARIABLE_574 var1099) (BOUND_VARIABLE_575 String)) var590 (as @var590_0 var590))\r\n(define-fun replaceAll/-445382577 ((BOUND_VARIABLE_578 var590) (BOUND_VARIABLE_579 String)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1016-NFD () var1016 (as @var1016_0 var1016))\r\n(define-fun var1183-STRIP_ACCENTS_PATTERN () var1099 (as @var1099_0 var1099))\r\n(define-fun var1920 () String \"\")\r\n(define-fun var3160!1 () String \"\")\r\n(define-fun var3160!2 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37511168,
            "run_time": 0.12485647201538086,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3160!1 () String\n    \"\")\n  (define-fun var1016-NFD () var1016\n    var1016!val!0)\n  (define-fun var3767 () var1016\n    var1016-NFD)\n  (define-fun var703 () var1099\n    var1183-STRIP_ACCENTS_PATTERN)\n  (define-fun var1920 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var549 () String\n    (replaceAll/-445382577\n  (matcher/468719934 var1183-STRIP_ACCENTS_PATTERN var3160!2)\n  \"\"))\n  (define-fun var3160 () String\n    String-init)\n  (define-fun var2755 () var590\n    (matcher/468719934 var1183-STRIP_ACCENTS_PATTERN var3160!2))\n  (define-fun var2246 () String\n    (var2631_normalize/541309276 var1920 var1016-NFD))\n  (define-fun var3160!2 () String\n    \"\")\n  (define-fun var1183-STRIP_ACCENTS_PATTERN () var1099\n    var1099!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2631_normalize/541309276 ((x!0 String) (x!1 var1016)) String\n    \"\")\n  (define-fun matcher/468719934 ((x!0 var1099) (x!1 String)) var590\n    var590!val!0)\n  (define-fun replaceAll/-445382577 ((x!0 var590) (x!1 String)) String\n    \"\")\n  (define-fun var1183_convertRemainingAccentCharacters/1565406537 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 45 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164782080,
            "run_time": 1.5247864723205566,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3160!1 () String \"\\u{0}\")\r\n  (define-fun var1920 () String \"\\u{1}\")\r\n  (define-fun var1016-NFD () var1016 var1016!2)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var2631_normalize/541309276 ((x!0 String) (x!1 var1016)) String (ite (and (= x!0 \"\\u{1}\") (= x!1 var1016!2)) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "$r2 = <java.text.Normalizer$Form: java.text.Normalizer$Form NFD>",
            "$r3 = staticinvoke <java.text.Normalizer: java.lang.String normalize(java.lang.CharSequence,java.text.Normalizer$Form)>(r0, $r2)",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3)",
            "staticinvoke <org.apache.commons.lang3.StringUtils: void convertRemainingAccentCharacters(java.lang.StringBuilder)>($r1)",
            "$r4 = <org.apache.commons.lang3.StringUtils: java.util.regex.Pattern STRIP_ACCENTS_PATTERN>",
            "$r5 = virtualinvoke $r4.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r1)",
            "$r6 = virtualinvoke $r5.<java.util.regex.Matcher: java.lang.String replaceAll(java.lang.String)>(\"\")",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.RegExUtils__replaceAll__1943568179\\466.smt2",
        "z3": {
            "memory": 33058816,
            "run_time": 0.260221004486084,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var68:\r\n  ;;   var68!val!8 var68!val!6 var68!val!5 var68!val!1 var68!val!0 var68!val!2 var68!val!3 var68!val!4 var68!val!7 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var68!val!8 () var68)\r\n  (declare-fun var68!val!6 () var68)\r\n  (declare-fun var68!val!5 () var68)\r\n  (declare-fun var68!val!1 () var68)\r\n  (declare-fun var68!val!0 () var68)\r\n  (declare-fun var68!val!2 () var68)\r\n  (declare-fun var68!val!3 () var68)\r\n  (declare-fun var68!val!4 () var68)\r\n  (declare-fun var68!val!7 () var68)\r\n  ;; cardinality constraint:\r\n  (forall ((x var68))\r\n          (or (= x var68!val!8)\r\n              (= x var68!val!6)\r\n              (= x var68!val!5)\r\n              (= x var68!val!1)\r\n              (= x var68!val!0)\r\n              (= x var68!val!2)\r\n              (= x var68!val!3)\r\n              (= x var68!val!4)\r\n              (= x var68!val!7)))\r\n  ;; -----------\r\n  (define-fun var3478!3 () (Array Int var68)\r\n    (store ((as const (Array Int var68)) var68!val!8) 2 var68!val!2))\r\n  (define-fun var3478 () (Array Int var68)\r\n    arr-var68-init)\r\n  (define-fun var2716 () String\r\n    \"!3!\")\r\n  (define-fun null-__Array__Int__var68__ () (Array Int var68)\r\n    (store (store ((as const (Array Int var68)) var68!val!5) 5 var68!val!7)\r\n       3\r\n       var68!val!4))\r\n  (define-fun var3478!1 () (Array Int var68)\r\n    (store ((as const (Array Int var68)) var68!val!0) 3 var68!val!3))\r\n  (define-fun var3478!2 () (Array Int var68)\r\n    (store ((as const (Array Int var68)) var68!val!1) 4 var68!val!6))\r\n  (define-fun var2095 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var142 () String\r\n    \"!2!\")\r\n  (define-fun var1727 () Bool\r\n    (var1808_anyNull/-1149301242 var3478!3))\r\n  (define-fun var1151 () String\r\n    (replaceAll/1692887130 var2095 var142 var2716))\r\n  (define-fun arr-var68-init () (Array Int var68)\r\n    ((as const (Array Int var68)) var68!val!0))\r\n  (define-fun k!3 ((x!0 Int)) var68\r\n    (ite (= x!0 2) var68!val!2\r\n      var68!val!8))\r\n  (define-fun cast-from-String-to-var68 ((x!0 String)) var68\r\n    (ite (= x!0 \"!2!\") var68!val!1\r\n    (ite (= x!0 \"!3!\") var68!val!2\r\n      var68!val!0)))\r\n  (define-fun var1808_anyNull/-1149301242 ((x!0 (Array Int var68))) Bool\r\n    false)\r\n  (define-fun k!1 ((x!0 Int)) var68\r\n    (ite (= x!0 5) var68!val!7\r\n    (ite (= x!0 3) var68!val!4\r\n      var68!val!5)))\r\n  (define-fun k!2 ((x!0 Int)) var68\r\n    (ite (= x!0 4) var68!val!6\r\n      var68!val!1))\r\n  (define-fun replaceAll/1692887130 ((x!0 String) (x!1 String) (x!2 String)) String\r\n    \"\")\r\n)\r\n(error \"line 40 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6279168,
            "run_time": 0.03057098388671875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3697 is 1\r\n; rep: (as @var3697_0 var3697)\r\n; cardinality of var68 is 4\r\n; rep: (as @var68_0 var68)\r\n; rep: (as @var68_1 var68)\r\n; rep: (as @var68_2 var68)\r\n; rep: (as @var68_3 var68)\r\n; cardinality of var1808 is 1\r\n; rep: (as @var1808_0 var1808)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var68-init () (Array Int var68) ((as const (Array Int var68)) (as @var68_0 var68)))\r\n(define-fun cast-from-String-to-var68 ((_arg_1 String)) var68 (as @var68_0 var68))\r\n(define-fun var1808_anyNull/-1149301242 ((_arg_1 (Array Int var68))) Bool false)\r\n(define-fun replaceAll/1692887130 ((BOUND_VARIABLE_769 String) (BOUND_VARIABLE_770 String) (BOUND_VARIABLE_771 String)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var68__ () (Array Int var68) (store ((as const (Array Int var68)) (as @var68_1 var68)) 0 (as @var68_2 var68)))\r\n(define-fun var2095 () String \"\")\r\n(define-fun var142 () String \"\")\r\n(define-fun var2716 () String \"\")\r\n(define-fun var3478!1 () (Array Int var68) ((as const (Array Int var68)) (as @var68_0 var68)))\r\n(define-fun var3478!2 () (Array Int var68) (store (store ((as const (Array Int var68)) (as @var68_2 var68)) 0 (as @var68_1 var68)) 1 (as @var68_0 var68)))\r\n(define-fun var3478!3 () (Array Int var68) (store ((as const (Array Int var68)) (as @var68_3 var68)) 2 (as @var68_0 var68)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38735872,
            "run_time": 2.918854236602783,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var68:\n  ;;   var68!val!8 var68!val!6 var68!val!5 var68!val!1 var68!val!0 var68!val!2 var68!val!3 var68!val!4 var68!val!7 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var68!val!8 () var68)\n  (declare-fun var68!val!6 () var68)\n  (declare-fun var68!val!5 () var68)\n  (declare-fun var68!val!1 () var68)\n  (declare-fun var68!val!0 () var68)\n  (declare-fun var68!val!2 () var68)\n  (declare-fun var68!val!3 () var68)\n  (declare-fun var68!val!4 () var68)\n  (declare-fun var68!val!7 () var68)\n  ;; cardinality constraint:\n  (forall ((x var68))\n          (or (= x var68!val!8)\n              (= x var68!val!6)\n              (= x var68!val!5)\n              (= x var68!val!1)\n              (= x var68!val!0)\n              (= x var68!val!2)\n              (= x var68!val!3)\n              (= x var68!val!4)\n              (= x var68!val!7)))\n  ;; -----------\n  (define-fun var3478!2 () (Array Int var68)\n    (store ((as const (Array Int var68)) var68!val!1) 6 var68!val!6))\n  (define-fun var2716 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3478 () (Array Int var68)\n    arr-var68-init)\n  (define-fun var1151 () String\n    (replaceAll/1692887130 var2095 var142 var2716))\n  (define-fun var1727 () Bool\n    (var1808_anyNull/-1149301242 var3478!3))\n  (define-fun var3478!1 () (Array Int var68)\n    (store ((as const (Array Int var68)) var68!val!3) 0 var68!val!0))\n  (define-fun var3478!3 () (Array Int var68)\n    (store ((as const (Array Int var68)) var68!val!8) 2 var68!val!2))\n  (define-fun null-__Array__Int__var68__ () (Array Int var68)\n    (store (store ((as const (Array Int var68)) var68!val!4) 6 var68!val!5)\n       7\n       var68!val!7))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var142 () String\n    \"\\u{0}\")\n  (define-fun var2095 () String\n    \"\\u{0}\\u{0}\\u{0}\\u{0}\")\n  (define-fun arr-var68-init () (Array Int var68)\n    ((as const (Array Int var68)) var68!val!0))\n  (define-fun k!17571 ((x!0 Int)) var68\n    (ite (= x!0 2) var68!val!2\n      var68!val!8))\n  (define-fun k!17569 ((x!0 Int)) var68\n    (ite (= x!0 6) var68!val!5\n    (ite (= x!0 7) var68!val!7\n      var68!val!4)))\n  (define-fun cast-from-String-to-var68 ((x!0 String)) var68\n    (ite (= x!0 \"\\u{0}\") var68!val!1\n    (ite (= x!0 \"\\u{0}\\u{0}\") var68!val!2\n      var68!val!0)))\n  (define-fun k!17570 ((x!0 Int)) var68\n    (ite (= x!0 6) var68!val!6\n      var68!val!1))\n  (define-fun var1808_anyNull/-1149301242 ((x!0 (Array Int var68))) Bool\n    false)\n  (define-fun replaceAll/1692887130 ((x!0 String) (x!1 String) (x!2 String)) String\n    \"\")\n)\n(error \"line 40 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176533504,
            "run_time": 1.7432539463043213,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3478!3 () (Array Int var68) (store ((as const (Array Int var68)) var68!34) 2 var68!26))\r\n  (define-fun var3478!2 () (Array Int var68) (store ((as const (Array Int var68)) var68!32) 1 var68!28))\r\n  (define-fun var3478!1 () (Array Int var68) (store ((as const (Array Int var68)) var68!36) 0 var68!30))\r\n  (define-fun var2716 () String \"\\u{0}\")\r\n  (define-fun var142 () String \"\\u{1}\")\r\n  (define-fun var2095 () String \"\\u{2}\")\r\n  (define-fun null-__Array__Int__var68__ () (Array Int var68) ((as const (Array Int var68)) var68!0))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var68!26 () var68 (cast-from-String-to-var68 \"\\u{0}\"))\r\n  (define-fun var68!28 () var68 (cast-from-String-to-var68 \"\\u{1}\"))\r\n  (define-fun var68!30 () var68 (cast-from-String-to-var68 \"\\u{2}\"))\r\n  (define-fun var1808_anyNull/-1149301242 ((x!0 (Array Int var68))) Bool (ite (= x!0 (store ((as const (Array Int var68)) var68!34) 2 var68!26)) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.String",
            "r3 := @parameter2: java.lang.String",
            "$r0 = newarray (java.lang.Object)[3]",
            "$r0[0] = r1",
            "$r0[1] = r2",
            "$r0[2] = r3",
            "$z0 = staticinvoke <org.apache.commons.lang3.ObjectUtils: boolean anyNull(java.lang.Object[])>($r0)",
            "if $z0 == 0 goto $r4 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(r2, r3)",
            "$r4 = virtualinvoke r1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>(r2, r3)",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__lastIndexOf__-1939916890\\3608.smt2",
        "z3": {
            "memory": 32632832,
            "run_time": 0.13158917427062988,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2178 () Int\r\n    (var1637_lastIndexOf/445018499 var437 var3021 (String_length/-667254855 var437)))\r\n  (define-fun var3021 () Int\r\n    1)\r\n  (define-fun var366 () Bool\r\n    (var1141_isEmpty/1595667738 var437))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var3100 () Int\r\n    (String_length/-667254855 var437))\r\n  (define-fun var437 () String\r\n    \"!0!\")\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var1141_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    0)\r\n  (define-fun var1637_lastIndexOf/445018499 ((x!0 String) (x!1 Int) (x!2 Int)) Int\r\n    0)\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.06291580200195312,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1141 is 1\r\n; rep: (as @var1141_0 var1141)\r\n; cardinality of var1637 is 1\r\n; rep: (as @var1637_0 var1637)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1141_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun String_length/-667254855 ((BOUND_VARIABLE_546 String)) Int 0)\r\n(define-fun var1637_lastIndexOf/445018499 ((BOUND_VARIABLE_549 String) (BOUND_VARIABLE_550 Int) (BOUND_VARIABLE_551 Int)) Int 0)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var437 () String \"\")\r\n(define-fun var3021 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37982208,
            "run_time": 0.12364435195922852,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    0)\n  (define-fun var2178 () Int\n    (var1637_lastIndexOf/445018499 var437 var3021 (String_length/-667254855 var437)))\n  (define-fun var3100 () Int\n    (String_length/-667254855 var437))\n  (define-fun var366 () Bool\n    (var1141_isEmpty/1595667738 var437))\n  (define-fun var437 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3021 () Int\n    1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1141_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    0)\n  (define-fun var1637_lastIndexOf/445018499 ((x!0 String) (x!1 Int) (x!2 Int)) Int\n    0)\n)\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150773760,
            "run_time": 1.4366281032562256,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3021 () Int 1)\r\n  (define-fun var437 () String \"\\u{0}\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var1141_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\\u{0}\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "i0 := @parameter1: int",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto $i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$i2 = staticinvoke <org.apache.commons.lang3.CharSequenceUtils: int lastIndexOf(java.lang.CharSequence,int,int)>(r0, i0, $i1)",
            "return $i2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringAfterLast__765538616\\5740.smt2",
        "z3": {
            "memory": 33050624,
            "run_time": 0.11571907997131348,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3177 () String\r\n    \"!2!\")\r\n  (define-fun var903 () Int\r\n    (- 1))\r\n  (define-fun var409 () Bool\r\n    (var276_isEmpty/1595667738 var184))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1281 () Bool\r\n    (var276_isEmpty/1595667738 var3177))\r\n  (define-fun var184 () String\r\n    \"!0!\")\r\n  (define-fun var3692 () Int\r\n    (lastIndexOf/-618837785 var184 var3177))\r\n  (define-fun var276_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int\r\n    (- 1))\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11362304,
            "run_time": 0.09166479110717773,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3429 is 1\r\n; rep: (as @var3429_0 var3429)\r\n; cardinality of var276 is 1\r\n; rep: (as @var276_0 var276)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var276_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun lastIndexOf/-618837785 ((_arg_1 String) (_arg_2 String)) Int (- 1))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var184 () String \"\")\r\n(define-fun var3177 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38289408,
            "run_time": 0.23241496086120605,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1281 () Bool\n    (var276_isEmpty/1595667738 var3177))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var409 () Bool\n    (var276_isEmpty/1595667738 var184))\n  (define-fun var903 () Int\n    (- 1))\n  (define-fun var184 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3177 () String\n    \"\\u{0}\")\n  (define-fun var3692 () Int\n    (lastIndexOf/-618837785 var184 var3177))\n  (define-fun var276_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int\n    (- 1))\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163426304,
            "run_time": 1.4989261627197266,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3177 () String \"\\u{0}\")\r\n  (define-fun var184 () String \"\\u{1}\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int (ite (and (= x!0 \"\\u{1}\") (= x!1 \"\\u{0}\")) (- 1) 0))\r\n  (define-fun var276_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\\u{1}\") false (ite (= x!0 \"\\u{0}\") false true)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: int lastIndexOf(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: int lastIndexOf(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto $z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(r1)",
            "i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(r1)",
            "$i7 = (int) -1",
            "if i0 == $i7 goto return \"\"",
            "return \"\""
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ObjectUtils__identityToString__1367943981\\995.smt2",
        "z3": {
            "memory": 32530432,
            "run_time": 0.11995410919189453,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var929:\r\n  ;;   var929!val!0 var929!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var929!val!0 () var929)\r\n  (declare-fun var929!val!1 () var929)\r\n  ;; cardinality constraint:\r\n  (forall ((x var929)) (or (= x var929!val!0) (= x var929!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1935:\r\n  ;;   var1935!val!0 var1935!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1935!val!0 () var1935)\r\n  (declare-fun var1935!val!1 () var1935)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1935)) (or (= x var1935!val!0) (= x var1935!val!1)))\r\n  ;; -----------\r\n  (define-fun var2217 () Int\r\n    (+ (length/-360784002 var2641)\r\n   (str.len (getName/-1958580599 (getClass/1258963082 var1464!1)))\r\n   1))\r\n  (define-fun var2641 () var929\r\n    var929!val!0)\r\n  (define-fun var2234 () var929\r\n    (append/551651303 (append/1659648310\r\n                    var2641!1\r\n                    (getName/-1958580599 (getClass/1258963082 var1464!1)))\r\n                  64))\r\n  (define-fun null-var929 () var929\r\n    var929!val!1)\r\n  (define-fun var966 () Int\r\n    (str.len (getName/-1958580599 (getClass/1258963082 var1464!1))))\r\n  (define-fun var465 () Int\r\n    (+ (length/-360784002 var2641)\r\n   (str.len (getName/-1958580599 (getClass/1258963082 var1464!1)))))\r\n  (define-fun var2603 () ClassObject\r\n    (getClass/1258963082 var1464!1))\r\n  (define-fun var3760 () var929\r\n    (append/1659648310\r\n  var2641!1\r\n  (getName/-1958580599 (getClass/1258963082 var1464!1))))\r\n  (define-fun var3498 () String\r\n    (getName/-1958580599 (getClass/1258963082 var1464!1)))\r\n  (define-fun var1817 () Int\r\n    (length/-360784002 var2641))\r\n  (define-fun var1464 () var1935\r\n    var1935!val!0)\r\n  (define-fun var559 () Int\r\n    (str.len (var818_identityHashCodeHex/834881754 var1464!1)))\r\n  (define-fun var2718 () Int\r\n    (+ (length/-360784002 var2641)\r\n   (str.len (getName/-1958580599 (getClass/1258963082 var1464!1)))\r\n   1\r\n   (str.len (var818_identityHashCodeHex/834881754 var1464!1))))\r\n  (define-fun null-var1935 () var1935\r\n    var1935!val!1)\r\n  (define-fun var1103 () String\r\n    (var818_identityHashCodeHex/834881754 var1464!1))\r\n  (define-fun var2641!1 () var929\r\n    var929!val!0)\r\n  (define-fun var1103!1 () String\r\n    \"\")\r\n  (define-fun var2718!1 () Int\r\n    0)\r\n  (define-fun var1464!1 () var1935\r\n    var1935!val!0)\r\n  (define-fun var2060 () String\r\n    \"\")\r\n  (define-fun var2234!1 () var929\r\n    var929!val!0)\r\n  (define-fun var3233_requireNonNull/1378936425 ((x!0 var1935) (x!1 String)) var1935\r\n    var1935!val!0)\r\n  (define-fun length/-360784002 ((x!0 var929)) Int\r\n    0)\r\n  (define-fun ensureCapacity/784942214 ((x!0 var929) (x!1 Int)) var929\r\n    var929!val!0)\r\n  (define-fun append/1659648310 ((x!0 var929) (x!1 String)) var929\r\n    var929!val!0)\r\n  (define-fun getClass/1258963082 ((x!0 var1935)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var818_identityHashCodeHex/834881754 ((x!0 var1935)) String\r\n    \"\")\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun append/551651303 ((x!0 var929) (x!1 Int)) var929\r\n    var929!val!0)\r\n)\r\n(error \"line 61 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2289664,
            "run_time": 0.046122074127197266,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var929 is 2\r\n; rep: (as @var929_0 var929)\r\n; rep: (as @var929_1 var929)\r\n; cardinality of var1935 is 2\r\n; rep: (as @var1935_0 var1935)\r\n; rep: (as @var1935_1 var1935)\r\n; cardinality of var3233 is 1\r\n; rep: (as @var3233_0 var3233)\r\n; cardinality of var818 is 1\r\n; rep: (as @var818_0 var818)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3233_requireNonNull/1378936425 ((BOUND_VARIABLE_522 var1935) (BOUND_VARIABLE_523 String)) var1935 (as @var1935_0 var1935))\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_526 var1935)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_529 ClassObject)) String \"\")\r\n(define-fun var818_identityHashCodeHex/834881754 ((BOUND_VARIABLE_532 var1935)) String \"\")\r\n(define-fun length/-360784002 ((BOUND_VARIABLE_535 var929)) Int 0)\r\n(define-fun ensureCapacity/784942214 ((BOUND_VARIABLE_538 var929) (BOUND_VARIABLE_539 Int)) var929 (as @var929_0 var929))\r\n(define-fun append/1659648310 ((BOUND_VARIABLE_542 var929) (BOUND_VARIABLE_543 String)) var929 (as @var929_0 var929))\r\n(define-fun append/551651303 ((BOUND_VARIABLE_546 var929) (BOUND_VARIABLE_547 Int)) var929 (as @var929_0 var929))\r\n(define-fun null-var929 () var929 (as @var929_0 var929))\r\n(define-fun null-var1935 () var1935 (as @var1935_0 var1935))\r\n(define-fun var2641 () var929 (as @var929_1 var929))\r\n(define-fun var1464 () var1935 (as @var1935_1 var1935))\r\n(define-fun var1464!1 () var1935 (as @var1935_0 var1935))\r\n(define-fun var2060 () String \"\")\r\n(define-fun var2641!1 () var929 (as @var929_0 var929))\r\n(define-fun var2718!1 () Int 0)\r\n(define-fun var2234!1 () var929 (as @var929_0 var929))\r\n(define-fun var1103!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36728832,
            "run_time": 0.16809654235839844,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var929:\n  ;;   var929!val!0 var929!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var929!val!0 () var929)\n  (declare-fun var929!val!1 () var929)\n  ;; cardinality constraint:\n  (forall ((x var929)) (or (= x var929!val!0) (= x var929!val!1)))\n  ;; -----------\n  ;; universe for var1935:\n  ;;   var1935!val!0 var1935!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1935!val!0 () var1935)\n  (declare-fun var1935!val!1 () var1935)\n  ;; cardinality constraint:\n  (forall ((x var1935)) (or (= x var1935!val!0) (= x var1935!val!1)))\n  ;; -----------\n  (define-fun var2603 () ClassObject\n    (getClass/1258963082 var1464!1))\n  (define-fun var2641 () var929\n    var929!val!0)\n  (define-fun var465 () Int\n    (+ (length/-360784002 var2641)\n   (str.len (getName/-1958580599 (getClass/1258963082 var1464!1)))))\n  (define-fun var3760 () var929\n    (append/1659648310\n  var2641!1\n  (getName/-1958580599 (getClass/1258963082 var1464!1))))\n  (define-fun var1817 () Int\n    (length/-360784002 var2641))\n  (define-fun var559 () Int\n    (str.len (var818_identityHashCodeHex/834881754 var1464!1)))\n  (define-fun null-var929 () var929\n    var929!val!1)\n  (define-fun var2718 () Int\n    (+ (length/-360784002 var2641)\n   (str.len (getName/-1958580599 (getClass/1258963082 var1464!1)))\n   1\n   (str.len (var818_identityHashCodeHex/834881754 var1464!1))))\n  (define-fun var3498 () String\n    (getName/-1958580599 (getClass/1258963082 var1464!1)))\n  (define-fun var2217 () Int\n    (+ (length/-360784002 var2641)\n   (str.len (getName/-1958580599 (getClass/1258963082 var1464!1)))\n   1))\n  (define-fun var1464 () var1935\n    var1935!val!0)\n  (define-fun var2234 () var929\n    (append/551651303 (append/1659648310\n                    var2641!1\n                    (getName/-1958580599 (getClass/1258963082 var1464!1)))\n                  64))\n  (define-fun null-var1935 () var1935\n    var1935!val!1)\n  (define-fun var1103 () String\n    (var818_identityHashCodeHex/834881754 var1464!1))\n  (define-fun var966 () Int\n    (str.len (getName/-1958580599 (getClass/1258963082 var1464!1))))\n  (define-fun var2641!1 () var929\n    var929!val!0)\n  (define-fun var1103!1 () String\n    \"\")\n  (define-fun var2718!1 () Int\n    0)\n  (define-fun var1464!1 () var1935\n    var1935!val!0)\n  (define-fun var2060 () String\n    \"\")\n  (define-fun var2234!1 () var929\n    var929!val!0)\n  (define-fun var3233_requireNonNull/1378936425 ((x!0 var1935) (x!1 String)) var1935\n    var1935!val!0)\n  (define-fun length/-360784002 ((x!0 var929)) Int\n    0)\n  (define-fun ensureCapacity/784942214 ((x!0 var929) (x!1 Int)) var929\n    var929!val!0)\n  (define-fun append/1659648310 ((x!0 var929) (x!1 String)) var929\n    var929!val!0)\n  (define-fun getClass/1258963082 ((x!0 var1935)) ClassObject\n    ClassObject!val!0)\n  (define-fun var818_identityHashCodeHex/834881754 ((x!0 var1935)) String\n    \"\")\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n  (define-fun append/551651303 ((x!0 var929) (x!1 Int)) var929\n    var929!val!0)\n)\n(error \"line 61 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155639808,
            "run_time": 1.440110206604004,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1464 () var1935 var1935!8)\r\n  (define-fun var2641 () var929 var929!6)\r\n  (define-fun null-var1935 () var1935 var1935!4)\r\n  (define-fun null-var929 () var929 var929!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2
        },
        "jimple_statements": [
            "r4 := @parameter0: org.apache.commons.lang3.text.StrBuilder",
            "r0 := @parameter1: java.lang.Object",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"object\")",
            "$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "r2 = virtualinvoke $r1.<java.lang.Class: java.lang.String getName()>()",
            "r3 = staticinvoke <org.apache.commons.lang3.ObjectUtils: java.lang.String identityHashCodeHex(java.lang.Object)>(r0)",
            "$i1 = virtualinvoke r4.<org.apache.commons.lang3.text.StrBuilder: int length()>()",
            "$i0 = virtualinvoke r2.<java.lang.String: int length()>()",
            "$i2 = $i1 + $i0",
            "$i4 = $i2 + 1",
            "$i3 = virtualinvoke r3.<java.lang.String: int length()>()",
            "$i5 = $i4 + $i3",
            "virtualinvoke r4.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder ensureCapacity(int)>($i5)",
            "$r5 = virtualinvoke r4.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder append(java.lang.String)>(r2)",
            "$r6 = virtualinvoke $r5.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder append(char)>(64)",
            "virtualinvoke $r6.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder append(java.lang.String)>(r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__endsWith__-567571448\\1425.smt2",
        "z3": {
            "memory": 32620544,
            "run_time": 0.08902359008789062,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3724 () String\r\n    \"!0!\")\r\n  (define-fun var3633 () Bool\r\n    true)\r\n  (define-fun var3775 () Int\r\n    (String_length/-667254855 var157))\r\n  (define-fun var1365 () Int\r\n    (String_length/-667254855 var3724))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var157 () String\r\n    \"!2!\")\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    (ite (= x!0 \"!2!\") 0\r\n      (- 1)))\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2236416,
            "run_time": 0.03014850616455078,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_length/-667254855 ((_arg_1 String)) Int (ite (= \"A\" _arg_1) 1 0))\r\n(define-fun null-String () String \"B\")\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var3724 () String \"\")\r\n(define-fun var157 () String \"A\")\r\n(define-fun var3633 () Bool false)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38051840,
            "run_time": 0.18511390686035156,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun var3724 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1365 () Int\n    (String_length/-667254855 var3724))\n  (define-fun var157 () String\n    \"\\u{0}\")\n  (define-fun var3633 () Bool\n    true)\n  (define-fun var3775 () Int\n    (String_length/-667254855 var157))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    (ite (= x!0 \"\\u{0}\") 1\n      0))\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151236608,
            "run_time": 1.4706363677978516,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var157 () String \"\\u{0}\")\r\n  (define-fun var3724 () String \"\\u{1}\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var3633 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int (ite (= x!0 \"\\u{1}\") 7 (ite (= x!0 \"\\u{0}\") 8 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: int length()>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 2
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "r1 := @parameter1: java.lang.CharSequence",
            "z0 := @parameter2: boolean",
            "if r0 == null goto (branch)",
            "if r1 != null goto $i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>()",
            "$i1 = interfaceinvoke r1.<java.lang.CharSequence: int length()>()",
            "$i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "if $i1 <= $i0 goto $i3 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__stripToNull__-829298938\\5635.smt2",
        "z3": {
            "memory": 32718848,
            "run_time": 0.13406157493591309,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var324 () Bool\r\n    (= (str.len (var3820_strip/820136851 var125 null-String)) 0))\r\n  (define-fun var125 () String\r\n    \"A\")\r\n  (define-fun var1569 () String\r\n    null-String)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3412 () String\r\n    (var3820_strip/820136851 var125 null-String))\r\n  (define-fun var3820_strip/820136851 ((x!0 String) (x!1 String)) String\r\n    \"\")\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10579968,
            "run_time": 0.04668426513671875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var256 is 1\r\n; rep: (as @var256_0 var256)\r\n; cardinality of var3820 is 1\r\n; rep: (as @var3820_0 var3820)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3820_strip/820136851 ((_arg_1 String) (_arg_2 String)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun var125 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37052416,
            "run_time": 0.12941312789916992,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 26 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154525696,
            "run_time": 1.5761291980743408,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var125 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\\u{1}\")\r\n  (define-fun var3820_strip/820136851 ((x!0 String) (x!1 String)) String (ite (and (= x!0 \"\\u{0}\") (= x!1 \"\\u{1}\")) \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: boolean isEmpty()>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto r1 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>(r0, null)",
            "r1 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String strip(java.lang.String,java.lang.String)>(r0, null)",
            "$z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "if $z0 == 0 goto $r2 = r1",
            "$r2 = null",
            "goto [?= return $r2]",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.ConstructorUtils__invokeExactConstructor__43306315\\2765.smt2",
        "z3": {
            "memory": 32538624,
            "run_time": 0.2718222141265869,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1529:\r\n  ;;   var1529!val!0 var1529!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1529!val!0 () var1529)\r\n  (declare-fun var1529!val!1 () var1529)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1529)) (or (= x var1529!val!0) (= x var1529!val!1)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 ClassObject!val!5 ClassObject!val!3 ClassObject!val!4 ClassObject!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  (declare-fun ClassObject!val!5 () ClassObject)\r\n  (declare-fun ClassObject!val!3 () ClassObject)\r\n  (declare-fun ClassObject!val!4 () ClassObject)\r\n  (declare-fun ClassObject!val!2 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject))\r\n          (or (= x ClassObject!val!0)\r\n              (= x ClassObject!val!1)\r\n              (= x ClassObject!val!5)\r\n              (= x ClassObject!val!3)\r\n              (= x ClassObject!val!4)\r\n              (= x ClassObject!val!2)))\r\n  ;; -----------\r\n  ;; universe for var1090:\r\n  ;;   var1090!val!0 var1090!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1090!val!0 () var1090)\r\n  (declare-fun var1090!val!1 () var1090)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1090)) (or (= x var1090!val!0) (= x var1090!val!1)))\r\n  ;; -----------\r\n  (define-fun var2549 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun null-__Array__Int__var1090__ () (Array Int var1090)\r\n    ((as const (Array Int var1090)) var1090!val!1))\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var2301 () (Array Int ClassObject)\r\n    (var2100_nullToEmpty/1403447389 var2386))\r\n  (define-fun var3714 () var1529\r\n    (var2209_getAccessibleConstructor/-450938597\r\n  var2549\r\n  (var2100_nullToEmpty/1403447389 var2386)))\r\n  (define-fun null-var1529 () var1529\r\n    var1529!val!1)\r\n  (define-fun var435 () var1090\r\n    (newInstance/-156294837\r\n  (var2209_getAccessibleConstructor/-450938597\r\n    var2549\r\n    (var2100_nullToEmpty/1403447389 var2386))\r\n  (var2100_nullToEmpty/627354827 var2164)))\r\n  (define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!3))\r\n  (define-fun var2386 () (Array Int ClassObject)\r\n    (store ((as const (Array Int ClassObject)) ClassObject!val!2)\r\n       4\r\n       ClassObject!val!4))\r\n  (define-fun var639 () (Array Int var1090)\r\n    (var2100_nullToEmpty/627354827 var2164))\r\n  (define-fun var2164 () (Array Int var1090)\r\n    ((as const (Array Int var1090)) var1090!val!0))\r\n  (define-fun k!2 ((x!0 Int)) ClassObject\r\n    (ite (= x!0 4) ClassObject!val!4\r\n      ClassObject!val!2))\r\n  (define-fun var2100_nullToEmpty/1403447389 ((x!0 (Array Int ClassObject))) (Array Int\r\n         ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!5))\r\n  (define-fun k!4 ((x!0 Int)) ClassObject\r\n    ClassObject!val!5)\r\n  (define-fun var2209_getAccessibleConstructor/-450938597 ((x!0 ClassObject)\r\n   (x!1 (Array Int ClassObject))) var1529\r\n    var1529!val!0)\r\n  (define-fun var2100_nullToEmpty/627354827 ((x!0 (Array Int var1090))) (Array Int\r\n         var1090)\r\n    ((as const (Array Int var1090)) var1090!val!0))\r\n  (define-fun newInstance/-156294837 ((x!0 var1529) (x!1 (Array Int var1090))) var1090\r\n    var1090!val!0)\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2220032,
            "run_time": 0.10884571075439453,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1090 is 2\r\n; rep: (as @var1090_0 var1090)\r\n; rep: (as @var1090_1 var1090)\r\n; cardinality of var2100 is 1\r\n; rep: (as @var2100_0 var2100)\r\n; cardinality of var1529 is 2\r\n; rep: (as @var1529_0 var1529)\r\n; rep: (as @var1529_1 var1529)\r\n; cardinality of var2209 is 1\r\n; rep: (as @var2209_0 var2209)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 4\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n; rep: (as @ClassObject_2 ClassObject)\r\n; rep: (as @ClassObject_3 ClassObject)\r\n(define-fun var2100_nullToEmpty/627354827 ((BOUND_VARIABLE_522 (Array Int var1090))) (Array Int var1090) ((as const (Array Int var1090)) (as @var1090_0 var1090)))\r\n(define-fun var2100_nullToEmpty/1403447389 ((_arg_1 (Array Int ClassObject))) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun var2209_getAccessibleConstructor/-450938597 ((_arg_1 ClassObject) (_arg_2 (Array Int ClassObject))) var1529 (as @var1529_1 var1529))\r\n(define-fun newInstance/-156294837 ((BOUND_VARIABLE_526 var1529) (BOUND_VARIABLE_527 (Array Int var1090))) var1090 (as @var1090_0 var1090))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-__Array__Int__var1090__ () (Array Int var1090) (store ((as const (Array Int var1090)) (as @var1090_1 var1090)) 0 (as @var1090_0 var1090)))\r\n(define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_1 ClassObject)) 0 (as @ClassObject_2 ClassObject)))\r\n(define-fun null-var1529 () var1529 (as @var1529_0 var1529))\r\n(define-fun var2549 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var2164 () (Array Int var1090) (store ((as const (Array Int var1090)) (as @var1090_0 var1090)) 0 (as @var1090_1 var1090)))\r\n(define-fun var2386 () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)) 0 (as @ClassObject_3 ClassObject)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36708352,
            "run_time": 0.139695405960083,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1529:\n  ;;   var1529!val!0 var1529!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1529!val!0 () var1529)\n  (declare-fun var1529!val!1 () var1529)\n  ;; cardinality constraint:\n  (forall ((x var1529)) (or (= x var1529!val!0) (= x var1529!val!1)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 ClassObject!val!5 ClassObject!val!3 ClassObject!val!4 ClassObject!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  (declare-fun ClassObject!val!5 () ClassObject)\n  (declare-fun ClassObject!val!3 () ClassObject)\n  (declare-fun ClassObject!val!4 () ClassObject)\n  (declare-fun ClassObject!val!2 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject))\n          (or (= x ClassObject!val!0)\n              (= x ClassObject!val!1)\n              (= x ClassObject!val!5)\n              (= x ClassObject!val!3)\n              (= x ClassObject!val!4)\n              (= x ClassObject!val!2)))\n  ;; -----------\n  ;; universe for var1090:\n  ;;   var1090!val!0 var1090!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1090!val!0 () var1090)\n  (declare-fun var1090!val!1 () var1090)\n  ;; cardinality constraint:\n  (forall ((x var1090)) (or (= x var1090!val!0) (= x var1090!val!1)))\n  ;; -----------\n  (define-fun var2549 () ClassObject\n    ClassObject!val!0)\n  (define-fun var639 () (Array Int var1090)\n    (var2100_nullToEmpty/627354827 var2164))\n  (define-fun null-__Array__Int__var1090__ () (Array Int var1090)\n    ((as const (Array Int var1090)) var1090!val!1))\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!3))\n  (define-fun var2386 () (Array Int ClassObject)\n    (store ((as const (Array Int ClassObject)) ClassObject!val!2)\n       4\n       ClassObject!val!4))\n  (define-fun null-var1529 () var1529\n    var1529!val!1)\n  (define-fun var2301 () (Array Int ClassObject)\n    (var2100_nullToEmpty/1403447389 var2386))\n  (define-fun var3714 () var1529\n    (var2209_getAccessibleConstructor/-450938597\n  var2549\n  (var2100_nullToEmpty/1403447389 var2386)))\n  (define-fun var435 () var1090\n    (newInstance/-156294837\n  (var2209_getAccessibleConstructor/-450938597\n    var2549\n    (var2100_nullToEmpty/1403447389 var2386))\n  (var2100_nullToEmpty/627354827 var2164)))\n  (define-fun var2164 () (Array Int var1090)\n    ((as const (Array Int var1090)) var1090!val!0))\n  (define-fun k!2 ((x!0 Int)) ClassObject\n    (ite (= x!0 4) ClassObject!val!4\n      ClassObject!val!2))\n  (define-fun var2100_nullToEmpty/1403447389 ((x!0 (Array Int ClassObject))) (Array Int\n         ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!5))\n  (define-fun var2209_getAccessibleConstructor/-450938597 ((x!0 ClassObject)\n   (x!1 (Array Int ClassObject))) var1529\n    var1529!val!0)\n  (define-fun k!4 ((x!0 Int)) ClassObject\n    ClassObject!val!5)\n  (define-fun var2100_nullToEmpty/627354827 ((x!0 (Array Int var1090))) (Array Int\n         var1090)\n    ((as const (Array Int var1090)) var1090!val!0))\n  (define-fun newInstance/-156294837 ((x!0 var1529) (x!1 (Array Int var1090))) var1090\n    var1090!val!0)\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167403520,
            "run_time": 1.2706713676452637,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2386 () (Array Int ClassObject) ((as const (Array Int ClassObject)) ClassObject!0))\r\n  (define-fun var2164 () (Array Int var1090) ((as const (Array Int var1090)) var1090!0))\r\n  (define-fun var2549 () ClassObject ClassObject!6)\r\n  (define-fun null-var1529 () var1529 var1529!4)\r\n  (define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) ClassObject!0) 0 ClassObject!1))\r\n  (define-fun null-__Array__Int__var1090__ () (Array Int var1090) (store ((as const (Array Int var1090)) var1090!0) 0 var1090!1))\r\n  (define-fun null-ClassObject () ClassObject ClassObject!2)\r\n  (define-fun var1529!26 () var1529 (var2209_getAccessibleConstructor/-450938597 ClassObject!6 (store ((as const (Array Int ClassObject)) ClassObject!0) 1 ClassObject!1)))\r\n  (define-fun var2100_nullToEmpty/1403447389 ((x!0 (Array Int ClassObject))) (Array Int ClassObject) (ite (= x!0 ((as const (Array Int ClassObject)) ClassObject!0)) (store ((as const (Array Int ClassObject)) ClassObject!0) 1 ClassObject!1) ((as const (Array Int ClassObject)) ClassObject!0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 5,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Class",
            "r9 := @parameter1: java.lang.Object[]",
            "r10 := @parameter2: java.lang.Class[]",
            "r11 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(r9)",
            "r12 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Class[] nullToEmpty(java.lang.Class[])>(r10)",
            "r1 = staticinvoke <org.apache.commons.lang3.reflect.ConstructorUtils: java.lang.reflect.Constructor getAccessibleConstructor(java.lang.Class,java.lang.Class[])>(r0, r12)",
            "if r1 != null goto $r2 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r11)",
            "$r2 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(r11)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__repeat__473194461\\4400.smt2",
        "z3": {
            "memory": 32989184,
            "run_time": 0.38748764991760254,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3624 () Int\r\n    3)\r\n  (define-fun var2282 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var2867 () String\r\n    String-init)\r\n  (define-fun var2061 () Int\r\n    1)\r\n  (define-fun arr-Int-init () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2867!1 () String\r\n    \"\")\r\n  (define-fun var2282!2 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var3624!1 () Int\r\n    0)\r\n  (define-fun var2282!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var3196_fill/1918582986 ((x!0 (Array Int Int)) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun <init>/-915723298 ((x!0 String) (x!1 (Array Int Int))) void\r\n    void!val!0)\r\n)\r\n(error \"line 33 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.1457374095916748,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3196 is 1\r\n; rep: (as @var3196_0 var3196)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3196_fill/1918582986 ((BOUND_VARIABLE_473 (Array Int Int)) (BOUND_VARIABLE_474 Int)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-915723298 ((BOUND_VARIABLE_477 String) (BOUND_VARIABLE_478 (Array Int Int))) void (as @void_0 void))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var3624 () Int 1)\r\n(define-fun var2061 () Int 1)\r\n(define-fun var2282!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3624!1 () Int 0)\r\n(define-fun var2867!1 () String \"\")\r\n(define-fun var2282!2 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37367808,
            "run_time": 0.1887829303741455,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2867 () String\n    String-init)\n  (define-fun var3624 () Int\n    3)\n  (define-fun var2282 () (Array Int Int)\n    arr-Int-init)\n  (define-fun null-Int () Int\n    2)\n  (define-fun var2061 () Int\n    1)\n  (define-fun arr-Int-init () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2867!1 () String\n    \"\")\n  (define-fun var2282!2 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var3624!1 () Int\n    0)\n  (define-fun var2282!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var3196_fill/1918582986 ((x!0 (Array Int Int)) (x!1 Int)) void\n    void!val!0)\n  (define-fun <init>/-915723298 ((x!0 String) (x!1 (Array Int Int))) void\n    void!val!0)\n)\n(error \"line 33 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 149729280,
            "run_time": 1.16581130027771,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2061 () Int 1)\r\n  (define-fun var3624 () Int 1)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: void <init>(char[])>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[])>": 1
        },
        "jimple_statements": [
            "c1 := @parameter0: char",
            "i0 := @parameter1: int",
            "if i0 > 0 goto r0 = newarray (char)[i0]",
            "r0 = newarray (char)[i0]",
            "staticinvoke <java.util.Arrays: void fill(char[],char)>(r0, c1)",
            "$r1 = new java.lang.String",
            "specialinvoke $r1.<java.lang.String: void <init>(char[])>(r0)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringBefore__1356398835\\5754.smt2",
        "z3": {
            "memory": 34983936,
            "run_time": 0.5469675064086914,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var639 () Int\r\n    (- 1))\r\n  (define-fun var1949 () String\r\n    (str.substr var2282 0 (- (str.indexof var2282 (str.from_code var2362) 0) 0)))\r\n  (define-fun var3773 () Int\r\n    (str.indexof var2282 (str.from_code var2362) 0))\r\n  (define-fun var2282 () String\r\n    \"\")\r\n  (define-fun var3699 () Bool\r\n    (var953_isEmpty/1595667738 var2282))\r\n  (define-fun null-Int () Int\r\n    (- 1))\r\n  (define-fun null-String () String\r\n    \"C\")\r\n  (define-fun var2362 () Int\r\n    (- 2))\r\n  (define-fun var953_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 33 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13418496,
            "run_time": 0.062276363372802734,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3402 is 1\r\n; rep: (as @var3402_0 var3402)\r\n; cardinality of var953 is 1\r\n; rep: (as @var953_0 var953)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var953_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2282 () String \"\\u{0}\")\r\n(define-fun var2362 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38125568,
            "run_time": 0.24718642234802246,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2362 () Int\n    196608)\n  (define-fun var3699 () Bool\n    (var953_isEmpty/1595667738 var2282))\n  (define-fun var3773 () Int\n    (str.indexof var2282 (str.from_code var2362) 0))\n  (define-fun var639 () Int\n    (- 1))\n  (define-fun null-Int () Int\n    196609)\n  (define-fun var2282 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\")\n  (define-fun var1949 () String\n    (str.substr var2282 0 (- (str.indexof var2282 (str.from_code var2362) 0) 0)))\n  (define-fun var953_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 33 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 144961536,
            "run_time": 1.130601406097412,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.StringUtils__substringBefore__1356398835\\5754.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n589ms\r\nstr_cons(var2362, 0) (of class ap.parser.IFunApp)\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(i0)",
            "i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(i0)",
            "$i3 = (int) -1",
            "if i1 != $i3 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1)",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringAfter__1025226940\\5692.smt2",
        "z3": {
            "memory": 33079296,
            "run_time": 0.1996467113494873,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1629 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    126976)\r\n  (define-fun var1212 () Bool\r\n    (var106_isEmpty/1595667738 var1629))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3173 () Int\r\n    126975)\r\n  (define-fun var1814 () Int\r\n    (str.indexof var1629 (str.from_code var3173) 0))\r\n  (define-fun var2237 () Int\r\n    (- 1))\r\n  (define-fun var106_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2289664,
            "run_time": 0.26410579681396484,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2717 is 1\r\n; rep: (as @var2717_0 var2717)\r\n; cardinality of var106 is 1\r\n; rep: (as @var106_0 var106)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var106_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1629 () String \"\")\r\n(define-fun var3173 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 42295296,
            "run_time": 0.6025688648223877,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 29 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 137912320,
            "run_time": 1.9457480907440186,
            "is_sat": "error",
            "stdout": "(error \"str_cons(var3173, 0) (of class ap.parser.IFunApp)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.StringUtils__substringAfter__1025226940\\5692.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n805ms\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int indexOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(i0)",
            "i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(i0)",
            "$i4 = (int) -1",
            "if i1 != $i4 goto $i2 = i1 + 1",
            "return \"\""
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.stream.LangCollectors$append__239__accept__-249913900\\5494.smt2",
        "z3": {
            "memory": 33046528,
            "run_time": 0.46593308448791504,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2152:\r\n  ;;   var2152!val!1 var2152!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2152!val!1 () var2152)\r\n  (declare-fun var2152!val!0 () var2152)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2152)) (or (= x var2152!val!1) (= x var2152!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1850:\r\n  ;;   var1850!val!2 var1850!val!0 var1850!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1850!val!2 () var1850)\r\n  (declare-fun var1850!val!0 () var1850)\r\n  (declare-fun var1850!val!1 () var1850)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1850))\r\n          (or (= x var1850!val!2) (= x var1850!val!0) (= x var1850!val!1)))\r\n  ;; -----------\r\n  (define-fun var885 () String\r\n    (cast-from-var1850-to-String var3710))\r\n  (define-fun var1249 () var1850\r\n    var1850!val!2)\r\n  (define-fun var3710 () var1850\r\n    var1850!val!0)\r\n  (define-fun null-var1850 () var1850\r\n    var1850!val!1)\r\n  (define-fun null-var2152 () var2152\r\n    var2152!val!1)\r\n  (define-fun var685 () var2152\r\n    var2152!val!0)\r\n  (define-fun var885!1 () String\r\n    \"\")\r\n  (define-fun cast-from-var1850-to-String ((x!0 var1850)) String\r\n    \"\")\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1850)) String\r\n    \"\")\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.23314213752746582,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2152 is 2\r\n; rep: (as @var2152_0 var2152)\r\n; rep: (as @var2152_1 var2152)\r\n; cardinality of var1850 is 3\r\n; rep: (as @var1850_0 var1850)\r\n; rep: (as @var1850_1 var1850)\r\n; rep: (as @var1850_2 var1850)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var1850-to-String ((_arg_1 var1850)) String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_576 String) (BOUND_VARIABLE_577 var1850)) String \"\")\r\n(define-fun null-var2152 () var2152 (as @var2152_0 var2152))\r\n(define-fun null-var1850 () var1850 (as @var1850_0 var1850))\r\n(define-fun var685 () var2152 (as @var2152_1 var2152))\r\n(define-fun var3710 () var1850 (as @var1850_1 var1850))\r\n(define-fun var1249 () var1850 (as @var1850_2 var1850))\r\n(define-fun var885!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35565568,
            "run_time": 0.3712444305419922,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 26 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 139563008,
            "run_time": 2.2546398639678955,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.stream.LangCollectors$append__239__accept__-249913900\\5494.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var885!1 =\r\n     concat(all_14_0, rhs)\r\n   ... sat\r\n\r\n1031ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "$r0 := @this: org.apache.commons.lang3.stream.LangCollectors$append__239",
            "$r1 := @parameter0: java.lang.Object",
            "$r2 := @parameter1: java.lang.Object",
            "$r3 = (java.lang.StringBuilder) $r1",
            "virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substring__-2090793678\\5667-deviant-0.smt2",
        "z3": {
            "memory": 32538624,
            "run_time": 0.2413337230682373,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 28 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2334720,
            "run_time": 0.09336495399475098,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36139008,
            "run_time": 0.44913363456726074,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 28 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 162242560,
            "run_time": 2.424757719039917,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1118 () Int 1)\r\n  (define-fun var3504 () String \"\\u{0}\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i2 := @parameter1: int",
            "if r0 != null goto (branch)",
            "if i2 >= 0 goto (branch)",
            "if i2 >= 0 goto $i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i2 <= $i0 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i2)",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i2)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__uncapitalize__1277667647\\6305.smt2",
        "z3": {
            "memory": 32133120,
            "run_time": 0.34629273414611816,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var835 () String\r\n    \"!0!\")\r\n  (define-fun var1339 () Int\r\n    (codePointAt/-1532245030 var835 0))\r\n  (define-fun var2862 () Int\r\n    (var2603_length/1752045268 var835))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2163 () Int\r\n    (var3495_toLowerCase/1002571586 (codePointAt/-1532245030 var835 0)))\r\n  (define-fun var2603_length/1752045268 ((x!0 String)) Int\r\n    2)\r\n  (define-fun codePointAt/-1532245030 ((x!0 String) (x!1 Int)) Int\r\n    3)\r\n  (define-fun var3495_toLowerCase/1002571586 ((x!0 Int)) Int\r\n    3)\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2289664,
            "run_time": 0.27837705612182617,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var520 is 1\r\n; rep: (as @var520_0 var520)\r\n; cardinality of var2603 is 1\r\n; rep: (as @var2603_0 var2603)\r\n; cardinality of var3495 is 1\r\n; rep: (as @var3495_0 var3495)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2603_length/1752045268 ((_arg_1 String)) Int (- 1))\r\n(define-fun codePointAt/-1532245030 ((_arg_1 String) (_arg_2 Int)) Int 0)\r\n(define-fun var3495_toLowerCase/1002571586 ((_arg_1 Int)) Int 0)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var835 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37683200,
            "run_time": 0.19983410835266113,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1339 () Int\n    (codePointAt/-1532245030 var835 0))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2163 () Int\n    (var3495_toLowerCase/1002571586 (codePointAt/-1532245030 var835 0)))\n  (define-fun var2862 () Int\n    (var2603_length/1752045268 var835))\n  (define-fun var835 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun codePointAt/-1532245030 ((x!0 String) (x!1 Int)) Int\n    4)\n  (define-fun var2603_length/1752045268 ((x!0 String)) Int\n    3)\n  (define-fun var3495_toLowerCase/1002571586 ((x!0 Int)) Int\n    4)\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150945792,
            "run_time": 1.9474608898162842,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var835 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var3495_toLowerCase/1002571586 ((x!0 Int)) Int (ite (= x!0 8) 8 0))\r\n  (define-fun codePointAt/-1532245030 ((x!0 String) (x!1 Int)) Int (ite (and (= x!0 \"\\u{0}\") (= x!1 0)) 8 0))\r\n  (define-fun var2603_length/1752045268 ((x!0 String)) Int (ite (= x!0 \"\\u{0}\") 9 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: int codePointAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: int codePointAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 = staticinvoke <org.apache.commons.lang3.StringUtils: int length(java.lang.CharSequence)>(r0)",
            "if i0 != 0 goto i1 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(0)",
            "i1 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(0)",
            "i2 = staticinvoke <java.lang.Character: int toLowerCase(int)>(i1)",
            "if i1 != i2 goto r1 = newarray (int)[i0]",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__swapCase__-1466471327\\5835.smt2",
        "z3": {
            "memory": 32731136,
            "run_time": 0.1615605354309082,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3724 () String\r\n    \"A\")\r\n  (define-fun var3892 () Int\r\n    (str.len var3724))\r\n  (define-fun var1925 () Int\r\n    (var2797_toLowerCase/1002571586 (codePointAt/-1532245030 var3724 0)))\r\n  (define-fun var3384 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var1797 () String\r\n    String-init)\r\n  (define-fun var16!1 () Int\r\n    (+ 0 1))\r\n  (define-fun var3384!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 3))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3483 () Int\r\n    (var2797_charCount/-1254868283\r\n  (var2797_toLowerCase/1002571586 (codePointAt/-1532245030 var3724 0))))\r\n  (define-fun var2736 () Bool\r\n    (var2797_isUpperCase/-1392178035 (codePointAt/-1532245030 var3724 0)))\r\n  (define-fun var1749 () Bool\r\n    (var3491_isEmpty/1595667738 var3724))\r\n  (define-fun var188 () Int\r\n    0)\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 3) 0 4))\r\n  (define-fun var16 () Int\r\n    0)\r\n  (define-fun var3377 () Int\r\n    (codePointAt/-1532245030 var3724 0))\r\n  (define-fun var498 () Int\r\n    0)\r\n  (define-fun var188!1 () Int\r\n    (+ 0\r\n   (var2797_charCount/-1254868283\r\n     (var2797_toLowerCase/1002571586 (codePointAt/-1532245030 var3724 0)))))\r\n  (define-fun var1797!1 () String\r\n    \"\")\r\n  (define-fun arr-Int-init () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3384!2 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var2281 () Int\r\n    0)\r\n  (define-fun var16!2 () Int\r\n    0)\r\n  (define-fun var2797_isUpperCase/-1392178035 ((x!0 Int)) Bool\r\n    true)\r\n  (define-fun var2797_toLowerCase/1002571586 ((x!0 Int)) Int\r\n    3)\r\n  (define-fun codePointAt/-1532245030 ((x!0 String) (x!1 Int)) Int\r\n    2)\r\n  (define-fun var2797_charCount/-1254868283 ((x!0 Int)) Int\r\n    1)\r\n  (define-fun var3491_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun <init>/1703972987 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 65 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.37229299545288086,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var138 is 1\r\n; rep: (as @var138_0 var138)\r\n; cardinality of var3491 is 1\r\n; rep: (as @var3491_0 var3491)\r\n; cardinality of var2797 is 1\r\n; rep: (as @var2797_0 var2797)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3491_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun codePointAt/-1532245030 ((_arg_1 String) (_arg_2 Int)) Int 2)\r\n(define-fun var2797_isUpperCase/-1392178035 ((_arg_1 Int)) Bool true)\r\n(define-fun var2797_toLowerCase/1002571586 ((_arg_1 Int)) Int 0)\r\n(define-fun var2797_charCount/-1254868283 ((_arg_1 Int)) Int 1)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1703972987 ((BOUND_VARIABLE_768 String) (BOUND_VARIABLE_769 (Array Int Int)) (BOUND_VARIABLE_770 Int) (BOUND_VARIABLE_771 Int)) void (as @void_0 void))\r\n(define-fun null-String () String \"\")\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var3724 () String \"A\")\r\n(define-fun var3384!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1797!1 () String \"\")\r\n(define-fun var3384!2 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2281 () Int 0)\r\n(define-fun var16!2 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37478400,
            "run_time": 0.21642804145812988,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var188 () Int\n    0)\n  (define-fun var16!1 () Int\n    (+ 0 1))\n  (define-fun var3483 () Int\n    (var2797_charCount/-1254868283\n  (var2797_toLowerCase/1002571586 (codePointAt/-1532245030 var3724 0))))\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store ((as const (Array Int Int)) 4) 0 5))\n  (define-fun var2736 () Bool\n    (var2797_isUpperCase/-1392178035 (codePointAt/-1532245030 var3724 0)))\n  (define-fun var1749 () Bool\n    (var3491_isEmpty/1595667738 var3724))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3724 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3384!1 () (Array Int Int)\n    ((as const (Array Int Int)) 4))\n  (define-fun var16 () Int\n    0)\n  (define-fun var498 () Int\n    0)\n  (define-fun var3377 () Int\n    (codePointAt/-1532245030 var3724 0))\n  (define-fun var3384 () (Array Int Int)\n    arr-Int-init)\n  (define-fun var188!1 () Int\n    (+ 0\n   (var2797_charCount/-1254868283\n     (var2797_toLowerCase/1002571586 (codePointAt/-1532245030 var3724 0)))))\n  (define-fun var1797 () String\n    String-init)\n  (define-fun var3892 () Int\n    (str.len var3724))\n  (define-fun var1925 () Int\n    (var2797_toLowerCase/1002571586 (codePointAt/-1532245030 var3724 0)))\n  (define-fun var1797!1 () String\n    \"\")\n  (define-fun arr-Int-init () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3384!2 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var2281 () Int\n    0)\n  (define-fun var16!2 () Int\n    0)\n  (define-fun var2797_isUpperCase/-1392178035 ((x!0 Int)) Bool\n    true)\n  (define-fun codePointAt/-1532245030 ((x!0 String) (x!1 Int)) Int\n    3)\n  (define-fun var3491_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n  (define-fun var2797_toLowerCase/1002571586 ((x!0 Int)) Int\n    4)\n  (define-fun var2797_charCount/-1254868283 ((x!0 Int)) Int\n    2)\n  (define-fun <init>/1703972987 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 65 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 194428928,
            "run_time": 2.3479292392730713,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3384!1 () (Array Int Int) (store ((as const (Array Int Int)) 11) 0 10))\r\n  (define-fun var3724 () String \"\\u{0}\")\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var2797_charCount/-1254868283 ((x!0 Int)) Int (ite (= x!0 10) 0 0))\r\n  (define-fun var2797_toLowerCase/1002571586 ((x!0 Int)) Int (ite (= x!0 8) 10 0))\r\n  (define-fun var2797_isUpperCase/-1392178035 ((x!0 Int)) Bool (ite (= x!0 8) true true))\r\n  (define-fun codePointAt/-1532245030 ((x!0 String) (x!1 Int)) Int (ite (and (= x!0 \"\\u{0}\") (= x!1 0)) 8 0))\r\n  (define-fun var3491_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\\u{0}\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int codePointAt(int)>",
            "<java.lang.String: void <init>(int[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: int codePointAt(int)>": 1,
            "<java.lang.String: void <init>(int[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "r1 = newarray (int)[i0]",
            "i2 = 0",
            "i3 = 0",
            "if i3 >= i0 goto $r2 = new java.lang.String",
            "i1 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(i3)",
            "$z1 = staticinvoke <java.lang.Character: boolean isUpperCase(int)>(i1)",
            "if $z1 != 0 goto i4 = staticinvoke <java.lang.Character: int toLowerCase(int)>(i1)",
            "i4 = staticinvoke <java.lang.Character: int toLowerCase(int)>(i1)",
            "goto [?= $i5 = i2]",
            "$i5 = i2",
            "i2 = i2 + 1",
            "r1[$i5] = i4",
            "$i6 = staticinvoke <java.lang.Character: int charCount(int)>(i4)",
            "i3 = i3 + $i6",
            "goto [?= (branch)]",
            "if i3 >= i0 goto $r2 = new java.lang.String",
            "$r2 = new java.lang.String",
            "specialinvoke $r2.<java.lang.String: void <init>(int[],int,int)>(r1, 0, i2)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__unwrap__457520218\\6336.smt2",
        "z3": {
            "memory": 32092160,
            "run_time": 0.3005497455596924,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3024 () Bool\r\n    (var665_startsWith/-1523570395 var145 var2555))\r\n  (define-fun var145 () String\r\n    \"\")\r\n  (define-fun var1257 () Int\r\n    (str.len var145))\r\n  (define-fun var3553 () Int\r\n    (* 2 (str.len var2555)))\r\n  (define-fun var1692 () Bool\r\n    (var665_isEmpty/1595667738 var145))\r\n  (define-fun var2429 () Bool\r\n    (var665_isEmpty/1595667738 var2555))\r\n  (define-fun var2555 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2524 () Int\r\n    (str.len var2555))\r\n  (define-fun var665_startsWith/-1523570395 ((x!0 String) (x!1 String)) Bool\r\n    false)\r\n  (define-fun var665_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10264576,
            "run_time": 0.09327197074890137,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3262 is 1\r\n; rep: (as @var3262_0 var3262)\r\n; cardinality of var665 is 1\r\n; rep: (as @var665_0 var665)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var665_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun var665_startsWith/-1523570395 ((_arg_1 String) (_arg_2 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var145 () String \"\")\r\n(define-fun var2555 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37662720,
            "run_time": 0.21564340591430664,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2524 () Int\n    (str.len var2555))\n  (define-fun var3024 () Bool\n    (var665_startsWith/-1523570395 var145 var2555))\n  (define-fun var2429 () Bool\n    (var665_isEmpty/1595667738 var2555))\n  (define-fun var2555 () String\n    \"\\u{0}\")\n  (define-fun var1692 () Bool\n    (var665_isEmpty/1595667738 var145))\n  (define-fun var3553 () Int\n    (* 2 (str.len var2555)))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var145 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1257 () Int\n    (str.len var145))\n  (define-fun var665_startsWith/-1523570395 ((x!0 String) (x!1 String)) Bool\n    false)\n  (define-fun var665_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 174424064,
            "run_time": 1.8536958694458008,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2555 () String \"\")\r\n  (define-fun var145 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun var665_startsWith/-1523570395 ((x!0 String) (x!1 String)) Bool (ite (and (= x!0 \"\") (= x!1 \"\")) false true))\r\n  (define-fun var665_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 != 0 goto return r0",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i1 = 2 * $i0",
            "if $i2 >= $i1 goto $z2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence)>(r0, r1)",
            "$z2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence)>(r0, r1)",
            "if $z2 == 0 goto return r0",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__1201707019\\6465-deviant-0.smt2",
        "z3": {
            "memory": 32337920,
            "run_time": 0.2407677173614502,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var1620 () Int\r\n    1)\r\n  (define-fun var2138 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var127 () Bool\r\n    (var901_isEmpty/1595667738 var2138))\r\n  (define-fun var901_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10309632,
            "run_time": 0.06121420860290527,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2321 is 1\r\n; rep: (as @var2321_0 var2321)\r\n; cardinality of var901 is 1\r\n; rep: (as @var901_0 var901)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var901_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var2138 () String \"\")\r\n(define-fun var1620 () Int (- 1))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37863424,
            "run_time": 0.12201786041259766,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    2)\n  (define-fun var127 () Bool\n    (var901_isEmpty/1595667738 var2138))\n  (define-fun var1620 () Int\n    1)\n  (define-fun var2138 () String\n    \"\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var901_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173154304,
            "run_time": 1.8695933818817139,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1620 () Int 1)\r\n  (define-fun var2138 () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun var901_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 2,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if c0 != 0 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i7 = (int) $c1",
            "$i8 = (int) c0",
            "if $i7 == $i8 goto $z3 = 0",
            "$z3 = 1",
            "goto [?= z1 = $z3]",
            "z1 = $z3",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = $i2 - 1",
            "$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3)",
            "$i9 = (int) $c4",
            "$i10 = (int) c0",
            "if $i9 == $i10 goto $z6 = 0",
            "$z6 = 1",
            "$z5 = 1",
            "goto [?= z2 = $z6]",
            "z2 = $z6",
            "if z1 != 0 goto $r3 = new java.lang.StringBuilder",
            "if $z5 != 0 goto $r3 = new java.lang.StringBuilder",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__trimToEmpty__-754984432\\5891.smt2",
        "z3": {
            "memory": 31453184,
            "run_time": 0.47153782844543457,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var731 () String\r\n    \"A\")\r\n  (define-fun var3201 () String\r\n    (trim-right (trim-left var731)))\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 21364736,
            "run_time": 0.6178841590881348,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(\r\n; cardinality of var1732 is 1\r\n; rep: (as @var1732_0 var1732)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"!\")\r\n(define-fun var731 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37523456,
            "run_time": 0.2495555877685547,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var731 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3201 () String\n    (trim-right (trim-left var731)))\n  (define-fun null-String () String\n    \"\\u{0}\")\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 190947328,
            "run_time": 2.0349738597869873,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(model\r\n  (define-fun var731 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.stream.LangCollectors$append__248__apply__-152583343\\5518.smt2",
        "z3": {
            "memory": 32514048,
            "run_time": 0.1659529209136963,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2698:\r\n  ;;   var2698!val!0 var2698!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2698!val!0 () var2698)\r\n  (declare-fun var2698!val!1 () var2698)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2698)) (or (= x var2698!val!0) (= x var2698!val!1)))\r\n  ;; -----------\r\n  ;; universe for var517:\r\n  ;;   var517!val!1 var517!val!0 var517!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var517!val!1 () var517)\r\n  (declare-fun var517!val!0 () var517)\r\n  (declare-fun var517!val!2 () var517)\r\n  ;; cardinality constraint:\r\n  (forall ((x var517))\r\n          (or (= x var517!val!1) (= x var517!val!0) (= x var517!val!2)))\r\n  ;; -----------\r\n  (define-fun var3700 () String\r\n    (cast-from-var517-to-String var3194))\r\n  (define-fun var1534 () var2698\r\n    var2698!val!0)\r\n  (define-fun var3563 () var517\r\n    var517!val!0)\r\n  (define-fun var1423!1 () String\r\n    \"\")\r\n  (define-fun var3194 () var517\r\n    var517!val!2)\r\n  (define-fun var1423 () String\r\n    (cast-from-var517-to-String var3563))\r\n  (define-fun null-var2698 () var2698\r\n    var2698!val!1)\r\n  (define-fun null-var517 () var517\r\n    var517!val!1)\r\n  (define-fun var1888 () String\r\n    (str.++ (cast-from-var517-to-String var3563)\r\n        (cast-from-var517-to-String var3194)))\r\n  (define-fun cast-from-var517-to-String ((x!0 var517)) String\r\n    \"\")\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2285568,
            "run_time": 0.030238628387451172,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2698 is 2\r\n; rep: (as @var2698_0 var2698)\r\n; rep: (as @var2698_1 var2698)\r\n; cardinality of var517 is 3\r\n; rep: (as @var517_0 var517)\r\n; rep: (as @var517_1 var517)\r\n; rep: (as @var517_2 var517)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var517-to-String ((_arg_1 var517)) String \"\")\r\n(define-fun null-var2698 () var2698 (as @var2698_0 var2698))\r\n(define-fun null-var517 () var517 (as @var517_0 var517))\r\n(define-fun var1534 () var2698 (as @var2698_1 var2698))\r\n(define-fun var3563 () var517 (as @var517_1 var517))\r\n(define-fun var3194 () var517 (as @var517_2 var517))\r\n(define-fun var1423!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36552704,
            "run_time": 0.09194421768188477,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 28 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150986752,
            "run_time": 1.5036139488220215,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.stream.LangCollectors$append__248__apply__-152583343\\5518.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1423!1 =\r\n     concat(all_14_0, rhs)\r\n   ... sat\r\n\r\n1080ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>": 1
        },
        "jimple_statements": [
            "$r0 := @this: org.apache.commons.lang3.stream.LangCollectors$append__248",
            "$r1 := @parameter0: java.lang.Object",
            "$r2 := @parameter1: java.lang.Object",
            "$r3 = (java.lang.StringBuilder) $r1",
            "$r4 = (java.lang.StringBuilder) $r2",
            "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r4)",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__1201707019\\6742-deviant-1.smt2",
        "z3": {
            "memory": 32124928,
            "run_time": 0.268629789352417,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 39 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2334720,
            "run_time": 0.02933478355407715,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36786176,
            "run_time": 0.10769033432006836,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 39 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 160411648,
            "run_time": 1.5649964809417725,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 2,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if c0 != 0 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i7 = (int) $c1",
            "$i8 = (int) c0",
            "if $i7 == $i8 goto $z3 = 0",
            "$z3 = 0",
            "z1 = $z3",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = $i2 - 1",
            "$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3)",
            "$i9 = (int) $c4",
            "$i10 = (int) c0",
            "if $i9 == $i10 goto $z6 = 0",
            "$z6 = 1",
            "$z5 = 1",
            "goto [?= z2 = $z6]",
            "z2 = $z6",
            "if z1 != 0 goto $r3 = new java.lang.StringBuilder",
            "if $z5 != 0 goto $r3 = new java.lang.StringBuilder",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__toCodePoints__-13283535\\5842.smt2",
        "z3": {
            "memory": 32690176,
            "run_time": 0.08694911003112793,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var863 () String\r\n    \"!0!\")\r\n  (define-fun var2935 () (Array Int Int)\r\n    var1467-EMPTY_INT_ARRAY)\r\n  (define-fun var2722 () Int\r\n    (String_length/-667254855 var863))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1467-EMPTY_INT_ARRAY () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    0)\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6164480,
            "run_time": 0.030569076538085938,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1467 is 1\r\n; rep: (as @var1467_0 var1467)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_length/-667254855 ((_arg_1 String)) Int 0)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1467-EMPTY_INT_ARRAY () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var863 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38027264,
            "run_time": 0.10725021362304688,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2935 () (Array Int Int)\n    var1467-EMPTY_INT_ARRAY)\n  (define-fun var2722 () Int\n    (String_length/-667254855 var863))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var863 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1467-EMPTY_INT_ARRAY () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    0)\n)\n(error \"line 22 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 142352384,
            "run_time": 1.5828235149383545,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var863 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int (ite (= x!0 \"\\u{0}\") 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "if r0 != null goto $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "if $i0 != 0 goto r1 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>()",
            "$r3 = <org.apache.commons.lang3.ArrayUtils: int[] EMPTY_INT_ARRAY>",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substring__-2090793678\\5667.smt2",
        "z3": {
            "memory": 33062912,
            "run_time": 0.137315034866333,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3504 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3223 () Int\r\n    (str.len var3504))\r\n  (define-fun var2570 () String\r\n    (str.substr var3504 var1118 (- (str.len var3504) var1118)))\r\n  (define-fun var1118 () Int\r\n    0)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2310144,
            "run_time": 0.02933478355407715,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1739 is 1\r\n; rep: (as @var1739_0 var1739)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3504 () String \"\")\r\n(define-fun var1118 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37675008,
            "run_time": 0.10748672485351562,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-Int () Int\n    1)\n  (define-fun var1118 () Int\n    0)\n  (define-fun var3223 () Int\n    (str.len var3504))\n  (define-fun var2570 () String\n    (str.substr var3504 var1118 (- (str.len var3504) var1118)))\n  (define-fun var3504 () String\n    \"\\u{0}\\u{0}\")\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164081664,
            "run_time": 1.6912760734558105,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1118 () Int 0)\r\n  (define-fun var3504 () String \"\")\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i2 := @parameter1: int",
            "if r0 != null goto (branch)",
            "if i2 >= 0 goto (branch)",
            "if i2 >= 0 goto $i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i2 <= $i0 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i2)",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i2)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__1201707019\\6465-deviant-1.smt2",
        "z3": {
            "memory": 32129024,
            "run_time": 0.10573601722717285,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 40 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2338816,
            "run_time": 0.030415058135986328,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36950016,
            "run_time": 0.09140229225158691,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 40 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 161824768,
            "run_time": 1.5687618255615234,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 2,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if c0 != 0 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i7 = (int) $c1",
            "$i8 = (int) c0",
            "if $i7 == $i8 goto $z3 = 0",
            "$z3 = 1",
            "goto [?= z1 = $z3]",
            "z1 = $z3",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = $i2 - 1",
            "$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3)",
            "$i9 = (int) $c4",
            "$i10 = (int) c0",
            "if $i9 == $i10 goto $z6 = 0",
            "$z6 = 1",
            "$z5 = 1",
            "goto [?= z2 = $z6]",
            "z2 = $z6",
            "if z1 != 0 goto $r3 = new java.lang.StringBuilder",
            "if $z5 != 0 goto $r3 = new java.lang.StringBuilder",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__uncapitalize__1277667647\\6309.smt2",
        "z3": {
            "memory": 32628736,
            "run_time": 0.1839766502380371,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var104 () Int\r\n    (codePointAt/-1532245030 var994 0))\r\n  (define-fun var785 () Int\r\n    1)\r\n  (define-fun var1132 () Int\r\n    (var3124_charCount/-1254868283 (codePointAt/-1532245030 var994 0)))\r\n  (define-fun var994 () String\r\n    \"!0!\")\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 3) 0 4))\r\n  (define-fun var639 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var639!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 3))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var745 () String\r\n    String-init)\r\n  (define-fun var2824 () Int\r\n    (var3818_length/1752045268 var994))\r\n  (define-fun var3458 () Int\r\n    (var3124_toLowerCase/1002571586 (codePointAt/-1532245030 var994 0)))\r\n  (define-fun var785!1 () Int\r\n    0)\r\n  (define-fun var745!1 () String\r\n    \"\")\r\n  (define-fun var1047 () Int\r\n    0)\r\n  (define-fun var639!2 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun arr-Int-init () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3124_charCount/-1254868283 ((x!0 Int)) Int\r\n    1)\r\n  (define-fun codePointAt/-1532245030 ((x!0 String) (x!1 Int)) Int\r\n    2)\r\n  (define-fun var3124_toLowerCase/1002571586 ((x!0 Int)) Int\r\n    3)\r\n  (define-fun var3818_length/1752045268 ((x!0 String)) Int\r\n    1)\r\n  (define-fun <init>/1703972987 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.08931899070739746,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var415 is 1\r\n; rep: (as @var415_0 var415)\r\n; cardinality of var3818 is 1\r\n; rep: (as @var3818_0 var3818)\r\n; cardinality of var3124 is 1\r\n; rep: (as @var3124_0 var3124)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3818_length/1752045268 ((_arg_1 String)) Int (- 1))\r\n(define-fun codePointAt/-1532245030 ((_arg_1 String) (_arg_2 Int)) Int (- 1))\r\n(define-fun var3124_toLowerCase/1002571586 ((_arg_1 Int)) Int 0)\r\n(define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3124_charCount/-1254868283 ((_arg_1 Int)) Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1703972987 ((BOUND_VARIABLE_697 String) (BOUND_VARIABLE_698 (Array Int Int)) (BOUND_VARIABLE_699 Int) (BOUND_VARIABLE_700 Int)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var994 () String \"\")\r\n(define-fun var639!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var745!1 () String \"\")\r\n(define-fun var639!2 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1047 () Int 0)\r\n(define-fun var785!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37400576,
            "run_time": 0.10677886009216309,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1132 () Int\n    (var3124_charCount/-1254868283 (codePointAt/-1532245030 var994 0)))\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store ((as const (Array Int Int)) 4) 0 5))\n  (define-fun var785 () Int\n    1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3458 () Int\n    (var3124_toLowerCase/1002571586 (codePointAt/-1532245030 var994 0)))\n  (define-fun var994 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var745 () String\n    String-init)\n  (define-fun var639!1 () (Array Int Int)\n    ((as const (Array Int Int)) 4))\n  (define-fun var2824 () Int\n    (var3818_length/1752045268 var994))\n  (define-fun var104 () Int\n    (codePointAt/-1532245030 var994 0))\n  (define-fun var639 () (Array Int Int)\n    arr-Int-init)\n  (define-fun var785!1 () Int\n    0)\n  (define-fun var745!1 () String\n    \"\")\n  (define-fun var1047 () Int\n    0)\n  (define-fun var639!2 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun arr-Int-init () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun codePointAt/-1532245030 ((x!0 String) (x!1 Int)) Int\n    3)\n  (define-fun var3124_charCount/-1254868283 ((x!0 Int)) Int\n    1)\n  (define-fun var3818_length/1752045268 ((x!0 String)) Int\n    1)\n  (define-fun var3124_toLowerCase/1002571586 ((x!0 Int)) Int\n    4)\n  (define-fun <init>/1703972987 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 189763584,
            "run_time": 2.0364043712615967,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var639!1 () (Array Int Int) (store ((as const (Array Int Int)) 10) 0 8))\r\n  (define-fun var994 () String \"\\u{0}\")\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var3124_charCount/-1254868283 ((x!0 Int)) Int (ite (= x!0 9) (- 1) 0))\r\n  (define-fun var3124_toLowerCase/1002571586 ((x!0 Int)) Int (ite (= x!0 9) 8 0))\r\n  (define-fun codePointAt/-1532245030 ((x!0 String) (x!1 Int)) Int (ite (and (= x!0 \"\\u{0}\") (= x!1 0)) 9 0))\r\n  (define-fun var3818_length/1752045268 ((x!0 String)) Int (ite (= x!0 \"\\u{0}\") (- 1) 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: int codePointAt(int)>",
            "<java.lang.String: void <init>(int[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int codePointAt(int)>": 1,
            "<java.lang.String: void <init>(int[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 = staticinvoke <org.apache.commons.lang3.StringUtils: int length(java.lang.CharSequence)>(r0)",
            "if i0 != 0 goto i1 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(0)",
            "i1 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(0)",
            "i2 = staticinvoke <java.lang.Character: int toLowerCase(int)>(i1)",
            "if i1 != i2 goto r1 = newarray (int)[i0]",
            "r1 = newarray (int)[i0]",
            "i6 = 1",
            "r1[0] = i2",
            "i7 = staticinvoke <java.lang.Character: int charCount(int)>(i1)",
            "if i7 >= i0 goto $r2 = new java.lang.String",
            "$r2 = new java.lang.String",
            "specialinvoke $r2.<java.lang.String: void <init>(int[],int,int)>(r1, 0, i6)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__unwrap__457520218\\6339-deviant-0.smt2",
        "z3": {
            "memory": 32751616,
            "run_time": 0.1511516571044922,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2118 () Bool\r\n    (var1104_isEmpty/1595667738 var620))\r\n  (define-fun var1722 () Bool\r\n    (var1104_isEmpty/1595667738 var2))\r\n  (define-fun var105 () Int\r\n    (str.len var2))\r\n  (define-fun var1382 () Int\r\n    (* 2 (str.len var620)))\r\n  (define-fun var620 () String\r\n    \"\")\r\n  (define-fun var3805 () Int\r\n    (str.len var620))\r\n  (define-fun var2435 () Bool\r\n    (var1104_startsWith/-1523570395 var2 var620))\r\n  (define-fun var2 () String\r\n    \"\")\r\n  (define-fun var3587 () Int\r\n    (lastIndexOf/-618837785 var2 var620))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var891 () Bool\r\n    (var1104_endsWith/932405132 var2 var620))\r\n  (define-fun var2043 () Int\r\n    (str.len var620))\r\n  (define-fun var1104_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun var1104_endsWith/932405132 ((x!0 String) (x!1 String)) Bool\r\n    true)\r\n  (define-fun var1104_startsWith/-1523570395 ((x!0 String) (x!1 String)) Bool\r\n    true)\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int\r\n    (- 1))\r\n)\r\n(error \"line 47 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2289664,
            "run_time": 0.03039383888244629,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3388 is 1\r\n; rep: (as @var3388_0 var3388)\r\n; cardinality of var1104 is 1\r\n; rep: (as @var1104_0 var1104)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1104_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun var1104_startsWith/-1523570395 ((_arg_1 String) (_arg_2 String)) Bool true)\r\n(define-fun var1104_endsWith/932405132 ((_arg_1 String) (_arg_2 String)) Bool true)\r\n(define-fun lastIndexOf/-618837785 ((_arg_1 String) (_arg_2 String)) Int 1)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2 () String \"\")\r\n(define-fun var620 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37789696,
            "run_time": 0.13773870468139648,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var2043 () Int\n    (str.len var620))\n  (define-fun var2 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3587 () Int\n    (lastIndexOf/-618837785 var2 var620))\n  (define-fun var1722 () Bool\n    (var1104_isEmpty/1595667738 var2))\n  (define-fun var105 () Int\n    (str.len var2))\n  (define-fun var2435 () Bool\n    (var1104_startsWith/-1523570395 var2 var620))\n  (define-fun var891 () Bool\n    (var1104_endsWith/932405132 var2 var620))\n  (define-fun var1382 () Int\n    (* 2 (str.len var620)))\n  (define-fun var3805 () Int\n    (str.len var620))\n  (define-fun var2118 () Bool\n    (var1104_isEmpty/1595667738 var620))\n  (define-fun var620 () String\n    \"\\u{0}\")\n  (define-fun var1104_startsWith/-1523570395 ((x!0 String) (x!1 String)) Bool\n    true)\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int\n    3)\n  (define-fun var1104_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n  (define-fun var1104_endsWith/932405132 ((x!0 String) (x!1 String)) Bool\n    true)\n)\n(error \"line 47 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 185507840,
            "run_time": 2.0355026721954346,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var620 () String \"\")\r\n  (define-fun var2 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int (ite (and (= x!0 \"\") (= x!1 \"\")) 1 0))\r\n  (define-fun var1104_endsWith/932405132 ((x!0 String) (x!1 String)) Bool (ite (and (= x!0 \"\") (= x!1 \"\")) true true))\r\n  (define-fun var1104_startsWith/-1523570395 ((x!0 String) (x!1 String)) Bool (ite (and (= x!0 \"\") (= x!1 \"\")) true true))\r\n  (define-fun var1104_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int lastIndexOf(java.lang.String)>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 3,
            "<java.lang.String: int lastIndexOf(java.lang.String)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 != 0 goto return r0",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i1 = 2 * $i0",
            "if $i2 >= $i1 goto $z2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence)>(r0, r1)",
            "$z2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence)>(r0, r1)",
            "if $z2 == 0 goto return r0",
            "$z3 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean endsWith(java.lang.CharSequence,java.lang.CharSequence)>(r0, r1)",
            "if $z3 == 0 goto return r0",
            "$i4 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(r1)",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i4, $i3)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6748.smt2",
        "z3": {
            "memory": 32604160,
            "run_time": 0.14040708541870117,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 46 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9502720,
            "run_time": 0.03264141082763672,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35807232,
            "run_time": 0.10931205749511719,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 46 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141611008,
            "run_time": 1.4115581512451172,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 0",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 1",
            "$z8 = 1",
            "goto [?= z5 = $z8]",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "if $z9 != 0 goto $r2 = new java.lang.StringBuilder",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__trim__21875266\\5883.smt2",
        "z3": {
            "memory": 32673792,
            "run_time": 0.10632061958312988,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3908 () String\r\n    (trim-right (trim-left var2611)))\r\n  (define-fun var2611 () String\r\n    \"A\")\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 21884928,
            "run_time": 0.6471707820892334,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(\r\n; cardinality of var2595 is 1\r\n; rep: (as @var2595_0 var2595)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"!\")\r\n(define-fun var2611 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37445632,
            "run_time": 0.12513494491577148,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2611 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3908 () String\n    (trim-right (trim-left var2611)))\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 183902208,
            "run_time": 2.1603448390960693,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(model\r\n  (define-fun var2611 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__1201707019\\6742.smt2",
        "z3": {
            "memory": 32137216,
            "run_time": 0.09138679504394531,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 54 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2289664,
            "run_time": 0.0311739444732666,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36384768,
            "run_time": 0.13930249214172363,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 54 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153292800,
            "run_time": 1.5223636627197266,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 2,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if c0 != 0 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i7 = (int) $c1",
            "$i8 = (int) c0",
            "if $i7 == $i8 goto $z3 = 0",
            "$z3 = 0",
            "z1 = $z3",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = $i2 - 1",
            "$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3)",
            "$i9 = (int) $c4",
            "$i10 = (int) c0",
            "if $i9 == $i10 goto $z6 = 0",
            "$z6 = 1",
            "$z5 = 1",
            "goto [?= z2 = $z6]",
            "z2 = $z6",
            "if z1 != 0 goto $r3 = new java.lang.StringBuilder",
            "if $z5 != 0 goto $r3 = new java.lang.StringBuilder",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__1201707019\\6465.smt2",
        "z3": {
            "memory": 32542720,
            "run_time": 0.10683465003967285,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 55 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2269184,
            "run_time": 0.031248807907104492,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35799040,
            "run_time": 0.17139720916748047,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 55 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152084480,
            "run_time": 1.5512447357177734,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 2,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if c0 != 0 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i7 = (int) $c1",
            "$i8 = (int) c0",
            "if $i7 == $i8 goto $z3 = 0",
            "$z3 = 1",
            "goto [?= z1 = $z3]",
            "z1 = $z3",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = $i2 - 1",
            "$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3)",
            "$i9 = (int) $c4",
            "$i10 = (int) c0",
            "if $i9 == $i10 goto $z6 = 0",
            "$z6 = 1",
            "$z5 = 1",
            "goto [?= z2 = $z6]",
            "z2 = $z6",
            "if z1 != 0 goto $r3 = new java.lang.StringBuilder",
            "if $z5 != 0 goto $r3 = new java.lang.StringBuilder",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__toCodePoints__-13283535\\5847.smt2",
        "z3": {
            "memory": 32681984,
            "run_time": 0.08940362930297852,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var450 () Int\r\n    (str.len (String_toString/-1426662429 var1799)))\r\n  (define-fun var2479 () Int\r\n    (codePointCount/-741124477\r\n  (String_toString/-1426662429 var1799)\r\n  0\r\n  (str.len (String_toString/-1426662429 var1799))))\r\n  (define-fun var903 () Int\r\n    (getLength-Arr-Int-1 arr-Int-init))\r\n  (define-fun var777 () Int\r\n    0)\r\n  (define-fun arr-Int-init () (Array Int Int)\r\n    ((as const (Array Int Int)) (- 1)))\r\n  (define-fun var1140 () Int\r\n    0)\r\n  (define-fun var1585 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1799 () String\r\n    \"A\")\r\n  (define-fun var1214 () Int\r\n    (String_length/-667254855 var1799))\r\n  (define-fun var3315 () String\r\n    (String_toString/-1426662429 var1799))\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    2)\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\r\n    0)\r\n  (define-fun String_toString/-1426662429 ((x!0 String)) String\r\n    \"\")\r\n  (define-fun codePointCount/-741124477 ((x!0 String) (x!1 Int) (x!2 Int)) Int\r\n    0)\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.0309603214263916,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_length/-667254855 ((_arg_1 String)) Int (- 1))\r\n(define-fun String_toString/-1426662429 ((BOUND_VARIABLE_579 String)) String \"\")\r\n(define-fun codePointCount/-741124477 ((BOUND_VARIABLE_582 String) (BOUND_VARIABLE_583 Int) (BOUND_VARIABLE_584 Int)) Int 0)\r\n(define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 0)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1799 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37429248,
            "run_time": 0.12429523468017578,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1585 () (Array Int Int)\n    arr-Int-init)\n  (define-fun var450 () Int\n    (str.len (String_toString/-1426662429 var1799)))\n  (define-fun var2479 () Int\n    (codePointCount/-741124477\n  (String_toString/-1426662429 var1799)\n  0\n  (str.len (String_toString/-1426662429 var1799))))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1214 () Int\n    (String_length/-667254855 var1799))\n  (define-fun var1140 () Int\n    0)\n  (define-fun var3315 () String\n    (String_toString/-1426662429 var1799))\n  (define-fun var903 () Int\n    (getLength-Arr-Int-1 arr-Int-init))\n  (define-fun arr-Int-init () (Array Int Int)\n    ((as const (Array Int Int)) 8))\n  (define-fun var777 () Int\n    0)\n  (define-fun var1799 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\n    0)\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    3)\n  (define-fun String_toString/-1426662429 ((x!0 String)) String\n    \"\")\n  (define-fun codePointCount/-741124477 ((x!0 String) (x!1 Int) (x!2 Int)) Int\n    0)\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169398272,
            "run_time": 1.72365140914917,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1799 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int (ite (= x!0 ((as const (Array Int Int)) 0)) 0 0))\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int (ite (= x!0 \"\\u{0}\") 6 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: java.lang.String toString()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int codePointCount(int,int)>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 1,
            "<java.lang.CharSequence: java.lang.String toString()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: int codePointCount(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "if r0 != null goto $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "if $i0 != 0 goto r1 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>()",
            "r1 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>()",
            "$i1 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i2 = virtualinvoke r1.<java.lang.String: int codePointCount(int,int)>(0, $i1)",
            "r2 = newarray (int)[$i2]",
            "i7 = 0",
            "i8 = 0",
            "$i3 = lengthof r2",
            "if i8 >= $i3 goto return r2",
            "return r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substring__1002918453\\5673.smt2",
        "z3": {
            "memory": 32698368,
            "run_time": 0.1373002529144287,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1280 () Int\r\n    0)\r\n  (define-fun var1264 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1106 () Int\r\n    1)\r\n  (define-fun var3193 () Int\r\n    (str.len var1264))\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2306048,
            "run_time": 0.029905319213867188,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1726 is 1\r\n; rep: (as @var1726_0 var1726)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1264 () String \"\")\r\n(define-fun var1106 () Int 1)\r\n(define-fun var1280 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37449728,
            "run_time": 0.17252683639526367,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1264 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3193 () Int\n    (str.len var1264))\n  (define-fun var1280 () Int\n    0)\n  (define-fun var1106 () Int\n    1)\n  (define-fun null-Int () Int\n    3)\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164573184,
            "run_time": 1.7861359119415283,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1280 () Int 0)\r\n  (define-fun var1106 () Int 1)\r\n  (define-fun var1264 () String \"\")\r\n  (define-fun null-Int () Int 2)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i3 := @parameter1: int",
            "i4 := @parameter2: int",
            "if r0 != null goto (branch)",
            "if i4 >= 0 goto (branch)",
            "if i3 >= 0 goto $i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i4 <= $i0 goto (branch)",
            "if i3 <= i4 goto (branch)",
            "return \"\""
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringAfter__1213401602\\5708.smt2",
        "z3": {
            "memory": 33083392,
            "run_time": 0.11865401268005371,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2547 () Bool\r\n    (var617_isEmpty/1595667738 var2353))\r\n  (define-fun var3587 () Int\r\n    (str.indexof var2353 var740 0))\r\n  (define-fun null-String () String\r\n    \"B\")\r\n  (define-fun var2353 () String\r\n    \"\")\r\n  (define-fun var740 () String\r\n    \"A\")\r\n  (define-fun var2131 () Int\r\n    (- 1))\r\n  (define-fun var617_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13258752,
            "run_time": 0.06053328514099121,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2052 is 1\r\n; rep: (as @var2052_0 var2052)\r\n; cardinality of var617 is 1\r\n; rep: (as @var617_0 var617)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var617_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"B\")\r\n(define-fun var2353 () String \"\")\r\n(define-fun var740 () String \"A\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 75943936,
            "run_time": 14.515511512756348,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 30 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 148766720,
            "run_time": 1.6039159297943115,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_indexof(var2353, var740, 0, -1)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.StringUtils__substringAfter__1213401602\\5708.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n1070ms\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: int indexOf(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto (branch)",
            "if r1 != null goto i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1)",
            "i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1)",
            "$i4 = (int) -1",
            "if i0 != $i4 goto $i1 = virtualinvoke r1.<java.lang.String: int length()>()",
            "return \"\""
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__unwrap__457520218\\6339.smt2",
        "z3": {
            "memory": 32710656,
            "run_time": 0.11545467376708984,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2118 () Bool\r\n    (var1104_isEmpty/1595667738 var620))\r\n  (define-fun var1722 () Bool\r\n    (var1104_isEmpty/1595667738 var2))\r\n  (define-fun var105 () Int\r\n    (str.len var2))\r\n  (define-fun var1382 () Int\r\n    (* 2 (str.len var620)))\r\n  (define-fun var620 () String\r\n    \"\")\r\n  (define-fun var3805 () Int\r\n    (str.len var620))\r\n  (define-fun var2435 () Bool\r\n    (var1104_startsWith/-1523570395 var2 var620))\r\n  (define-fun var2 () String\r\n    \"\")\r\n  (define-fun var3587 () Int\r\n    (lastIndexOf/-618837785 var2 var620))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var668 () String\r\n    (str.substr var2\r\n            (str.len var620)\r\n            (- (lastIndexOf/-618837785 var2 var620) (str.len var620))))\r\n  (define-fun var891 () Bool\r\n    (var1104_endsWith/932405132 var2 var620))\r\n  (define-fun var2043 () Int\r\n    (str.len var620))\r\n  (define-fun var1104_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun var1104_endsWith/932405132 ((x!0 String) (x!1 String)) Bool\r\n    true)\r\n  (define-fun var1104_startsWith/-1523570395 ((x!0 String) (x!1 String)) Bool\r\n    true)\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int\r\n    0)\r\n)\r\n(error \"line 49 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.03039240837097168,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3388 is 1\r\n; rep: (as @var3388_0 var3388)\r\n; cardinality of var1104 is 1\r\n; rep: (as @var1104_0 var1104)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1104_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun var1104_startsWith/-1523570395 ((_arg_1 String) (_arg_2 String)) Bool true)\r\n(define-fun var1104_endsWith/932405132 ((_arg_1 String) (_arg_2 String)) Bool true)\r\n(define-fun lastIndexOf/-618837785 ((_arg_1 String) (_arg_2 String)) Int 0)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2 () String \"\")\r\n(define-fun var620 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38342656,
            "run_time": 0.18602609634399414,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2435 () Bool\n    (var1104_startsWith/-1523570395 var2 var620))\n  (define-fun var2118 () Bool\n    (var1104_isEmpty/1595667738 var620))\n  (define-fun var891 () Bool\n    (var1104_endsWith/932405132 var2 var620))\n  (define-fun var1722 () Bool\n    (var1104_isEmpty/1595667738 var2))\n  (define-fun var105 () Int\n    (str.len var2))\n  (define-fun var668 () String\n    (str.substr var2\n            (str.len var620)\n            (- (lastIndexOf/-618837785 var2 var620) (str.len var620))))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1382 () Int\n    (* 2 (str.len var620)))\n  (define-fun var3805 () Int\n    (str.len var620))\n  (define-fun var2043 () Int\n    (str.len var620))\n  (define-fun var620 () String\n    \"\\u{0}\")\n  (define-fun var3587 () Int\n    (lastIndexOf/-618837785 var2 var620))\n  (define-fun var2 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1104_startsWith/-1523570395 ((x!0 String) (x!1 String)) Bool\n    true)\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int\n    1)\n  (define-fun var1104_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n  (define-fun var1104_endsWith/932405132 ((x!0 String) (x!1 String)) Bool\n    true)\n)\n(error \"line 49 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 214089728,
            "run_time": 2.212400197982788,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var620 () String \"\")\r\n  (define-fun var2 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int (ite (and (= x!0 \"\") (= x!1 \"\")) 0 0))\r\n  (define-fun var1104_endsWith/932405132 ((x!0 String) (x!1 String)) Bool (ite (and (= x!0 \"\") (= x!1 \"\")) true true))\r\n  (define-fun var1104_startsWith/-1523570395 ((x!0 String) (x!1 String)) Bool (ite (and (= x!0 \"\") (= x!1 \"\")) true true))\r\n  (define-fun var1104_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int lastIndexOf(java.lang.String)>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 3,
            "<java.lang.String: int lastIndexOf(java.lang.String)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 != 0 goto return r0",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i1 = 2 * $i0",
            "if $i2 >= $i1 goto $z2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence)>(r0, r1)",
            "$z2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence)>(r0, r1)",
            "if $z2 == 0 goto return r0",
            "$z3 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean endsWith(java.lang.CharSequence,java.lang.CharSequence)>(r0, r1)",
            "if $z3 == 0 goto return r0",
            "$i4 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(r1)",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>($i4, $i3)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__uncapitalize__1277667647\\6312.smt2",
        "z3": {
            "memory": 32886784,
            "run_time": 0.10416769981384277,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var589!1 () Int\r\n    (let ((a!1 (var3558_charCount/-1254868283\r\n             (codePointAt/-1532245030\r\n               var1149\r\n               (var3558_charCount/-1254868283\r\n                 (codePointAt/-1532245030 var1149 0))))))\r\n  (+ (var3558_charCount/-1254868283 (codePointAt/-1532245030 var1149 0)) a!1)))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 10) 11 12))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1356!2 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 6) 11 13))\r\n  (define-fun var1356!1 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 9) 0 3))\r\n  (define-fun var2258 () String\r\n    String-init)\r\n  (define-fun var1356 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var2408 () Int\r\n    (var3558_charCount/-1254868283\r\n  (codePointAt/-1532245030\r\n    var1149\r\n    (var3558_charCount/-1254868283 (codePointAt/-1532245030 var1149 0)))))\r\n  (define-fun var2564!1 () Int\r\n    (+ 1 1))\r\n  (define-fun var2455 () Int\r\n    (var2938_length/1752045268 var1149))\r\n  (define-fun var1149 () String\r\n    \"!0!\")\r\n  (define-fun var2564 () Int\r\n    1)\r\n  (define-fun var758 () Int\r\n    (codePointAt/-1532245030 var1149 0))\r\n  (define-fun var589 () Int\r\n    (var3558_charCount/-1254868283 (codePointAt/-1532245030 var1149 0)))\r\n  (define-fun var2030 () Int\r\n    (codePointAt/-1532245030\r\n  var1149\r\n  (var3558_charCount/-1254868283 (codePointAt/-1532245030 var1149 0))))\r\n  (define-fun var729 () Int\r\n    1)\r\n  (define-fun var1047 () Int\r\n    (var3558_toLowerCase/1002571586 (codePointAt/-1532245030 var1149 0)))\r\n  (define-fun var3046 () Int\r\n    0)\r\n  (define-fun var1356!3 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var2564!2 () Int\r\n    0)\r\n  (define-fun arr-Int-init () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2258!1 () String\r\n    \"\")\r\n  (define-fun var3558_toLowerCase/1002571586 ((x!0 Int)) Int\r\n    3)\r\n  (define-fun k!1 ((x!0 Int)) Int\r\n    (ite (= x!0 11) 12\r\n      10))\r\n  (define-fun codePointAt/-1532245030 ((x!0 String) (x!1 Int)) Int\r\n    (ite (and (= x!0 \"!0!\") (= x!1 7719)) 6\r\n      2))\r\n  (define-fun k!2 ((x!0 Int)) Int\r\n    (ite (= x!0 11) 13\r\n      6))\r\n  (define-fun var2938_length/1752045268 ((x!0 String)) Int\r\n    7720)\r\n  (define-fun var3558_charCount/-1254868283 ((x!0 Int)) Int\r\n    (ite (= x!0 6) 1\r\n      7719))\r\n  (define-fun <init>/1703972987 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 63 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.04593038558959961,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2263 is 1\r\n; rep: (as @var2263_0 var2263)\r\n; cardinality of var2938 is 1\r\n; rep: (as @var2938_0 var2938)\r\n; cardinality of var3558 is 1\r\n; rep: (as @var3558_0 var3558)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2938_length/1752045268 ((_arg_1 String)) Int (- 1))\r\n(define-fun codePointAt/-1532245030 ((_arg_1 String) (_arg_2 Int)) Int (ite (= \"\" _arg_1) (ite (= _arg_2 (- 2)) 0 (- 1)) (- 1)))\r\n(define-fun var3558_toLowerCase/1002571586 ((_arg_1 Int)) Int 0)\r\n(define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3558_charCount/-1254868283 ((_arg_1 Int)) Int (ite (= _arg_1 (- 1)) (- 2) 1))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1703972987 ((BOUND_VARIABLE_840 String) (BOUND_VARIABLE_841 (Array Int Int)) (BOUND_VARIABLE_842 Int) (BOUND_VARIABLE_843 Int)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var1149 () String \"\")\r\n(define-fun var1356!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1356!2 () (Array Int Int) (store (store ((as const (Array Int Int)) (- 1)) 0 0) 1 0))\r\n(define-fun var2258!1 () String \"\")\r\n(define-fun var1356!3 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3046 () Int 0)\r\n(define-fun var2564!2 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38125568,
            "run_time": 0.09187006950378418,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1149 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1356!2 () (Array Int Int)\n    (store ((as const (Array Int Int)) 6) 11 13))\n  (define-fun var1356 () (Array Int Int)\n    arr-Int-init)\n  (define-fun var1356!1 () (Array Int Int)\n    (store ((as const (Array Int Int)) 9) 0 4))\n  (define-fun var589!1 () Int\n    (let ((a!1 (var3558_charCount/-1254868283\n             (codePointAt/-1532245030\n               var1149\n               (var3558_charCount/-1254868283\n                 (codePointAt/-1532245030 var1149 0))))))\n  (+ (var3558_charCount/-1254868283 (codePointAt/-1532245030 var1149 0)) a!1)))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2408 () Int\n    (var3558_charCount/-1254868283\n  (codePointAt/-1532245030\n    var1149\n    (var3558_charCount/-1254868283 (codePointAt/-1532245030 var1149 0)))))\n  (define-fun var2455 () Int\n    (var2938_length/1752045268 var1149))\n  (define-fun var2564 () Int\n    1)\n  (define-fun var758 () Int\n    (codePointAt/-1532245030 var1149 0))\n  (define-fun var589 () Int\n    (var3558_charCount/-1254868283 (codePointAt/-1532245030 var1149 0)))\n  (define-fun var2258 () String\n    String-init)\n  (define-fun var2030 () Int\n    (codePointAt/-1532245030\n  var1149\n  (var3558_charCount/-1254868283 (codePointAt/-1532245030 var1149 0))))\n  (define-fun var729 () Int\n    1)\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store ((as const (Array Int Int)) 10) 11 12))\n  (define-fun var1047 () Int\n    (var3558_toLowerCase/1002571586 (codePointAt/-1532245030 var1149 0)))\n  (define-fun var2564!1 () Int\n    (+ 1 1))\n  (define-fun var3046 () Int\n    0)\n  (define-fun var1356!3 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var2564!2 () Int\n    0)\n  (define-fun arr-Int-init () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2258!1 () String\n    \"\")\n  (define-fun k!55 ((x!0 Int)) Int\n    (ite (= x!0 11) 12\n      10))\n  (define-fun var3558_toLowerCase/1002571586 ((x!0 Int)) Int\n    4)\n  (define-fun k!56 ((x!0 Int)) Int\n    (ite (= x!0 11) 13\n      6))\n  (define-fun codePointAt/-1532245030 ((x!0 String) (x!1 Int)) Int\n    (ite (and (= x!0 \"\\u{0}\\u{0}\") (= x!1 11797)) 6\n      3))\n  (define-fun var3558_charCount/-1254868283 ((x!0 Int)) Int\n    (ite (= x!0 6) 1\n      11797))\n  (define-fun var2938_length/1752045268 ((x!0 String)) Int\n    11798)\n  (define-fun <init>/1703972987 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 63 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 223338496,
            "run_time": 2.450892448425293,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1356!2 () (Array Int Int) (store ((as const (Array Int Int)) 14) 1 12))\r\n  (define-fun var1356!1 () (Array Int Int) (store ((as const (Array Int Int)) 13) 0 11))\r\n  (define-fun var1149 () String \"\\u{0}\")\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var3558_charCount/-1254868283 ((x!0 Int)) Int (ite (= x!0 10) 1 (ite (= x!0 12) 1 0)))\r\n  (define-fun var3558_toLowerCase/1002571586 ((x!0 Int)) Int (ite (= x!0 10) 11 0))\r\n  (define-fun codePointAt/-1532245030 ((x!0 String) (x!1 Int)) Int (ite (and (= x!0 \"\\u{0}\") (= x!1 0)) 10 (ite (and (= x!0 \"\\u{0}\") (= x!1 1)) 12 0)))\r\n  (define-fun var2938_length/1752045268 ((x!0 String)) Int (ite (= x!0 \"\\u{0}\") 2 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.String: int codePointAt(int)>",
            "<java.lang.String: int codePointAt(int)>",
            "<java.lang.String: void <init>(int[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int codePointAt(int)>": 2,
            "<java.lang.String: void <init>(int[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 = staticinvoke <org.apache.commons.lang3.StringUtils: int length(java.lang.CharSequence)>(r0)",
            "if i0 != 0 goto i1 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(0)",
            "i1 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(0)",
            "i2 = staticinvoke <java.lang.Character: int toLowerCase(int)>(i1)",
            "if i1 != i2 goto r1 = newarray (int)[i0]",
            "r1 = newarray (int)[i0]",
            "i6 = 1",
            "r1[0] = i2",
            "i7 = staticinvoke <java.lang.Character: int charCount(int)>(i1)",
            "if i7 >= i0 goto $r2 = new java.lang.String",
            "i3 = virtualinvoke r0.<java.lang.String: int codePointAt(int)>(i7)",
            "$i4 = i6",
            "i6 = i6 + 1",
            "r1[$i4] = i3",
            "$i5 = staticinvoke <java.lang.Character: int charCount(int)>(i3)",
            "i7 = i7 + $i5",
            "goto [?= (branch)]",
            "if i7 >= i0 goto $r2 = new java.lang.String",
            "$r2 = new java.lang.String",
            "specialinvoke $r2.<java.lang.String: void <init>(int[],int,int)>(r1, 0, i6)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__truncate__-1628031484\\5908.smt2",
        "z3": {
            "memory": 32649216,
            "run_time": 0.10602235794067383,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var3089 () Int\r\n    (str.len var2364))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2364 () String\r\n    \"\")\r\n  (define-fun var3202 () Int\r\n    1)\r\n  (define-fun var2120 () Int\r\n    0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2334720,
            "run_time": 0.030488252639770508,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var815 is 1\r\n; rep: (as @var815_0 var815)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2364 () String \"\")\r\n(define-fun var3202 () Int 1)\r\n(define-fun var2120 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37896192,
            "run_time": 0.1247704029083252,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2364 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3202 () Int\n    3)\n  (define-fun var3089 () Int\n    (str.len var2364))\n  (define-fun null-Int () Int\n    4)\n  (define-fun var2120 () Int\n    0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163930112,
            "run_time": 1.8949716091156006,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2120 () Int 0)\r\n  (define-fun var3202 () Int 1)\r\n  (define-fun var2364 () String \"\")\r\n  (define-fun null-Int () Int 2)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "if i0 >= 0 goto (branch)",
            "if i1 >= 0 goto (branch)",
            "if r0 != null goto $i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i0 <= $i2 goto $i3 = virtualinvoke r0.<java.lang.String: int length()>()",
            "return \"\""
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__1201707019\\6743-deviant-0.smt2",
        "z3": {
            "memory": 32653312,
            "run_time": 0.12076234817504883,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var730 () String\r\n    \"\")\r\n  (define-fun var1213 () Int\r\n    1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1295 () Bool\r\n    (var217_isEmpty/1595667738 var730))\r\n  (define-fun var217_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.029799699783325195,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var323 is 1\r\n; rep: (as @var323_0 var323)\r\n; cardinality of var217 is 1\r\n; rep: (as @var217_0 var217)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var217_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var730 () String \"\")\r\n(define-fun var1213 () Int (- 1))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37322752,
            "run_time": 0.10868120193481445,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    2)\n  (define-fun var730 () String\n    \"\")\n  (define-fun var1213 () Int\n    1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1295 () Bool\n    (var217_isEmpty/1595667738 var730))\n  (define-fun var217_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 174456832,
            "run_time": 1.9298663139343262,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1213 () Int 1)\r\n  (define-fun var730 () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun var217_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 2,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if c0 != 0 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i7 = (int) $c1",
            "$i8 = (int) c0",
            "if $i7 == $i8 goto $z3 = 0",
            "$z3 = 0",
            "z1 = $z3",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = $i2 - 1",
            "$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3)",
            "$i9 = (int) $c4",
            "$i10 = (int) c0",
            "if $i9 == $i10 goto $z6 = 0",
            "$z6 = 0",
            "$z5 = 0",
            "z2 = $z6",
            "if z1 != 0 goto $r3 = new java.lang.StringBuilder",
            "if $z5 != 0 goto $r3 = new java.lang.StringBuilder",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__toEncodedString__-598786023\\5853.smt2",
        "z3": {
            "memory": 32481280,
            "run_time": 0.09138035774230957,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var630:\r\n  ;;   var630!val!0 var630!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var630!val!0 () var630)\r\n  (declare-fun var630!val!1 () var630)\r\n  ;; cardinality constraint:\r\n  (forall ((x var630)) (or (= x var630!val!0) (= x var630!val!1)))\r\n  ;; -----------\r\n  (define-fun var3871 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 0) 0 1))\r\n  (define-fun var1292 () var630\r\n    (var1304_toCharset/318113526 var3978))\r\n  (define-fun var192 () String\r\n    String-init)\r\n  (define-fun var3978 () var630\r\n    var630!val!0)\r\n  (define-fun null-var630 () var630\r\n    var630!val!1)\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var192!1 () String\r\n    \"\")\r\n  (define-fun var1292!1 () var630\r\n    var630!val!0)\r\n  (define-fun var3871!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var1304_toCharset/318113526 ((x!0 var630)) var630\r\n    var630!val!0)\r\n  (define-fun <init>/-2015205558 ((x!0 String) (x!1 (Array Int Int)) (x!2 var630)) void\r\n    void!val!0)\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.030966520309448242,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var630 is 2\r\n; rep: (as @var630_0 var630)\r\n; rep: (as @var630_1 var630)\r\n; cardinality of var1304 is 1\r\n; rep: (as @var1304_0 var1304)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var1304_toCharset/318113526 ((BOUND_VARIABLE_468 var630)) var630 (as @var630_0 var630))\r\n(define-fun <init>/-2015205558 ((BOUND_VARIABLE_471 String) (BOUND_VARIABLE_472 (Array Int Int)) (BOUND_VARIABLE_473 var630)) void (as @void_0 void))\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun null-var630 () var630 (as @var630_0 var630))\r\n(define-fun var3871 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3978 () var630 (as @var630_1 var630))\r\n(define-fun var192!1 () String \"\")\r\n(define-fun var3871!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1292!1 () var630 (as @var630_0 var630))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36503552,
            "run_time": 0.09387874603271484,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var630:\n  ;;   var630!val!0 var630!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var630!val!0 () var630)\n  (declare-fun var630!val!1 () var630)\n  ;; cardinality constraint:\n  (forall ((x var630)) (or (= x var630!val!0) (= x var630!val!1)))\n  ;; -----------\n  (define-fun var192 () String\n    String-init)\n  (define-fun var3871 () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 0 1))\n  (define-fun var3978 () var630\n    var630!val!0)\n  (define-fun var1292 () var630\n    (var1304_toCharset/318113526 var3978))\n  (define-fun null-var630 () var630\n    var630!val!1)\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var192!1 () String\n    \"\")\n  (define-fun var1292!1 () var630\n    var630!val!0)\n  (define-fun var3871!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var1304_toCharset/318113526 ((x!0 var630)) var630\n    var630!val!0)\n  (define-fun <init>/-2015205558 ((x!0 String) (x!1 (Array Int Int)) (x!2 var630)) void\n    void!val!0)\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152035328,
            "run_time": 1.787506341934204,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3978 () var630 var630!4)\r\n  (define-fun var3871 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun null-var630 () var630 var630!2)\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 0) 0 1))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: byte[]",
            "r2 := @parameter1: java.nio.charset.Charset",
            "$r0 = new java.lang.String",
            "$r3 = staticinvoke <org.apache.commons.lang3.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(r2)",
            "specialinvoke $r0.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r1, $r3)",
            "return $r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringBefore__-686746837\\5768.smt2",
        "z3": {
            "memory": 33075200,
            "run_time": 0.11908388137817383,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1588 () Bool\r\n    (= (str.len var3226) 0))\r\n  (define-fun var336 () Int\r\n    (- 1))\r\n  (define-fun var2941 () Bool\r\n    (var1014_isEmpty/1595667738 var3979))\r\n  (define-fun null-String () String\r\n    \"B\")\r\n  (define-fun var3979 () String\r\n    \"\")\r\n  (define-fun var3226 () String\r\n    \"A\")\r\n  (define-fun var1445 () Int\r\n    (str.indexof var3979 var3226 0))\r\n  (define-fun var1014_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13180928,
            "run_time": 0.046418190002441406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3086 is 1\r\n; rep: (as @var3086_0 var3086)\r\n; cardinality of var1014 is 1\r\n; rep: (as @var1014_0 var1014)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1014_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"B\")\r\n(define-fun var3979 () String \"\")\r\n(define-fun var3226 () String \"A\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 75345920,
            "run_time": 14.975350141525269,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 35 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154759168,
            "run_time": 1.72538423538208,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_indexof(var3979, var3226, 0, -1)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.StringUtils__substringBefore__-686746837\\5768.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n1269ms\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: boolean isEmpty()>",
            "<java.lang.String: int indexOf(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1,
            "<java.lang.String: int indexOf(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if r1 != null goto $z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "$z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "if $z1 == 0 goto i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1)",
            "i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1)",
            "$i2 = (int) -1",
            "if i0 != $i2 goto $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0)",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__1201707019\\6475-deviant-0.smt2",
        "z3": {
            "memory": 33132544,
            "run_time": 0.15387701988220215,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var730 () String\r\n    \"\")\r\n  (define-fun var385 () Int\r\n    1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var768 () Bool\r\n    (var1389_isEmpty/1595667738 var730))\r\n  (define-fun var1389_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2310144,
            "run_time": 0.09499287605285645,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3638 is 1\r\n; rep: (as @var3638_0 var3638)\r\n; cardinality of var1389 is 1\r\n; rep: (as @var1389_0 var1389)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1389_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var730 () String \"\")\r\n(define-fun var385 () Int (- 1))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37335040,
            "run_time": 0.09146738052368164,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    2)\n  (define-fun var730 () String\n    \"\")\n  (define-fun var385 () Int\n    1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var768 () Bool\n    (var1389_isEmpty/1595667738 var730))\n  (define-fun var1389_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168402944,
            "run_time": 1.8810319900512695,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var385 () Int 1)\r\n  (define-fun var730 () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun var1389_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 2,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if c0 != 0 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i7 = (int) $c1",
            "$i8 = (int) c0",
            "if $i7 == $i8 goto $z3 = 0",
            "$z3 = 1",
            "goto [?= z1 = $z3]",
            "z1 = $z3",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = $i2 - 1",
            "$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3)",
            "$i9 = (int) $c4",
            "$i10 = (int) c0",
            "if $i9 == $i10 goto $z6 = 0",
            "$z6 = 0",
            "$z5 = 0",
            "z2 = $z6",
            "if z1 != 0 goto $r3 = new java.lang.StringBuilder",
            "if $z5 != 0 goto $r3 = new java.lang.StringBuilder",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substring__1002918453\\5677.smt2",
        "z3": {
            "memory": 32133120,
            "run_time": 0.09041738510131836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1748 () String\r\n    \"\")\r\n  (define-fun var728 () Int\r\n    0)\r\n  (define-fun var2825 () Int\r\n    (str.len var1748))\r\n  (define-fun var2506 () Int\r\n    (str.len var1748))\r\n  (define-fun var2574!1 () Int\r\n    (+ (str.len var1748) var2574))\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2574 () Int\r\n    (- 1))\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.03150057792663574,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1396 is 1\r\n; rep: (as @var1396_0 var1396)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var1748 () String \"\")\r\n(define-fun var728 () Int 0)\r\n(define-fun var2574 () Int (- 1))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37486592,
            "run_time": 0.10851883888244629,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2574 () Int\n    (- 1))\n  (define-fun var2574!1 () Int\n    (+ (str.len var1748) var2574))\n  (define-fun null-Int () Int\n    3)\n  (define-fun var728 () Int\n    2)\n  (define-fun var1748 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2825 () Int\n    (str.len var1748))\n  (define-fun var2506 () Int\n    (str.len var1748))\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167723008,
            "run_time": 1.9424567222595215,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2574 () Int (- 1))\r\n  (define-fun var728 () Int 0)\r\n  (define-fun var1748 () String \"\")\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i3 := @parameter1: int",
            "i4 := @parameter2: int",
            "if r0 != null goto (branch)",
            "if i4 >= 0 goto (branch)",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "i4 = $i2 + i4",
            "if i3 >= 0 goto $i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i4 <= $i0 goto (branch)",
            "if i3 <= i4 goto (branch)",
            "return \"\""
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringAfter__1213401602\\5712-deviant-0.smt2",
        "z3": {
            "memory": 32751616,
            "run_time": 0.0872659683227539,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 35 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.06203198432922363,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37261312,
            "run_time": 0.17022490501403809,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 35 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 157540352,
            "run_time": 1.7718822956085205,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_indexof(var677, var3370, 0, all_18_1)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.StringUtils__substringAfter__1213401602\\5712-deviant-0.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n1214ms\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int indexOf(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto (branch)",
            "if r1 != null goto i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1)",
            "i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1)",
            "$i4 = (int) -1",
            "if i0 != $i4 goto $i1 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i1 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i2 = i0 + $i1",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__unwrap__1268717835\\6319.smt2",
        "z3": {
            "memory": 33046528,
            "run_time": 0.10995078086853027,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3635 () Int\r\n    (str.len var1990))\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var1990 () String\r\n    \"A\")\r\n  (define-fun var2055 () Int\r\n    1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2722 () Bool\r\n    (var1210_isEmpty/1595667738 var1990))\r\n  (define-fun var1210_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2228224,
            "run_time": 0.04566478729248047,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var223 is 1\r\n; rep: (as @var223_0 var223)\r\n; cardinality of var1210 is 1\r\n; rep: (as @var1210_0 var1210)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1210_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"\")\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var1990 () String \"A\")\r\n(define-fun var2055 () Int (- 1))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38137856,
            "run_time": 0.2629687786102295,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1990 () String\n    \"\\u{0}\")\n  (define-fun var3635 () Int\n    (str.len var1990))\n  (define-fun null-Int () Int\n    2)\n  (define-fun var2055 () Int\n    1)\n  (define-fun var2722 () Bool\n    (var1210_isEmpty/1595667738 var1990))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1210_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164270080,
            "run_time": 1.8010973930358887,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2055 () Int 1)\r\n  (define-fun var1990 () String \"\\u{0}\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var1210_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\\u{0}\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if c0 == 0 goto return r0",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if $i1 != 1 goto $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__unwrap__457520218\\6343.smt2",
        "z3": {
            "memory": 32686080,
            "run_time": 0.13599276542663574,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1560 () String\r\n    \"\")\r\n  (define-fun var1976 () Bool\r\n    (var2044_isEmpty/1595667738 var2206))\r\n  (define-fun var3588 () Int\r\n    (str.len var1560))\r\n  (define-fun var1945 () Bool\r\n    (var2044_isEmpty/1595667738 var1560))\r\n  (define-fun var761 () Int\r\n    (str.len var2206))\r\n  (define-fun var115 () Bool\r\n    (var2044_startsWith/-1523570395 var1560 var2206))\r\n  (define-fun var2206 () String\r\n    \"\")\r\n  (define-fun var3541 () Int\r\n    (* 2 (str.len var2206)))\r\n  (define-fun var1998 () Bool\r\n    (var2044_endsWith/932405132 var1560 var2206))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2044_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun var2044_endsWith/932405132 ((x!0 String) (x!1 String)) Bool\r\n    false)\r\n  (define-fun var2044_startsWith/-1523570395 ((x!0 String) (x!1 String)) Bool\r\n    true)\r\n)\r\n(error \"line 41 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.07699155807495117,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2381 is 1\r\n; rep: (as @var2381_0 var2381)\r\n; cardinality of var2044 is 1\r\n; rep: (as @var2044_0 var2044)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2044_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun var2044_startsWith/-1523570395 ((_arg_1 String) (_arg_2 String)) Bool true)\r\n(define-fun var2044_endsWith/932405132 ((_arg_1 String) (_arg_2 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1560 () String \"\")\r\n(define-fun var2206 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37752832,
            "run_time": 0.29405641555786133,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3541 () Int\n    (* 2 (str.len var2206)))\n  (define-fun var2206 () String\n    \"\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1998 () Bool\n    (var2044_endsWith/932405132 var1560 var2206))\n  (define-fun var761 () Int\n    (str.len var2206))\n  (define-fun var1560 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var3588 () Int\n    (str.len var1560))\n  (define-fun var115 () Bool\n    (var2044_startsWith/-1523570395 var1560 var2206))\n  (define-fun var1976 () Bool\n    (var2044_isEmpty/1595667738 var2206))\n  (define-fun var1945 () Bool\n    (var2044_isEmpty/1595667738 var1560))\n  (define-fun var2044_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n  (define-fun var2044_endsWith/932405132 ((x!0 String) (x!1 String)) Bool\n    false)\n  (define-fun var2044_startsWith/-1523570395 ((x!0 String) (x!1 String)) Bool\n    true)\n)\n(error \"line 41 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 174157824,
            "run_time": 1.9544332027435303,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2206 () String \"\")\r\n  (define-fun var1560 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun var2044_endsWith/932405132 ((x!0 String) (x!1 String)) Bool (ite (and (= x!0 \"\") (= x!1 \"\")) false true))\r\n  (define-fun var2044_startsWith/-1523570395 ((x!0 String) (x!1 String)) Bool (ite (and (= x!0 \"\") (= x!1 \"\")) true true))\r\n  (define-fun var2044_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 != 0 goto return r0",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i1 = 2 * $i0",
            "if $i2 >= $i1 goto $z2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence)>(r0, r1)",
            "$z2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence)>(r0, r1)",
            "if $z2 == 0 goto return r0",
            "$z3 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean endsWith(java.lang.CharSequence,java.lang.CharSequence)>(r0, r1)",
            "if $z3 == 0 goto return r0",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__toRootLowerCase__1421242700\\5861.smt2",
        "z3": {
            "memory": 33067008,
            "run_time": 0.09107208251953125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1355 () String\r\n    (toLowerCase/1946809429 var3341 var1357-ROOT))\r\n  (define-fun var3341 () String\r\n    \"!0!\")\r\n  (define-fun var159 () var1357\r\n    var1357-ROOT)\r\n  (define-fun var1357-ROOT () var1357\r\n    var1357!val!0)\r\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var1357)) String\r\n    \"\")\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.03014969825744629,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1466 is 1\r\n; rep: (as @var1466_0 var1466)\r\n; cardinality of var1357 is 1\r\n; rep: (as @var1357_0 var1357)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun toLowerCase/1946809429 ((BOUND_VARIABLE_482 String) (BOUND_VARIABLE_483 var1357)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1357-ROOT () var1357 (as @var1357_0 var1357))\r\n(define-fun var3341 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37445632,
            "run_time": 0.12368106842041016,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1355 () String\n    (toLowerCase/1946809429 var3341 var1357-ROOT))\n  (define-fun var3341 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var159 () var1357\n    var1357-ROOT)\n  (define-fun var1357-ROOT () var1357\n    var1357!val!0)\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var1357)) String\n    \"\")\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132169728,
            "run_time": 1.5457615852355957,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3341 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto $r1 = <java.util.Locale: java.util.Locale ROOT>",
            "$r1 = <java.util.Locale: java.util.Locale ROOT>",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r1)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__1201707019\\6743-deviant-1.smt2",
        "z3": {
            "memory": 32526336,
            "run_time": 0.08997082710266113,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 39 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2269184,
            "run_time": 0.030895233154296875,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36577280,
            "run_time": 0.09297633171081543,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 39 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 156770304,
            "run_time": 1.731302261352539,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 2,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if c0 != 0 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i7 = (int) $c1",
            "$i8 = (int) c0",
            "if $i7 == $i8 goto $z3 = 0",
            "$z3 = 0",
            "z1 = $z3",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = $i2 - 1",
            "$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3)",
            "$i9 = (int) $c4",
            "$i10 = (int) c0",
            "if $i9 == $i10 goto $z6 = 0",
            "$z6 = 0",
            "$z5 = 0",
            "z2 = $z6",
            "if z1 != 0 goto $r3 = new java.lang.StringBuilder",
            "if $z5 != 0 goto $r3 = new java.lang.StringBuilder",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringBefore__-686746837\\5774-deviant-0.smt2",
        "z3": {
            "memory": 32624640,
            "run_time": 0.10485506057739258,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 36 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 5324800,
            "run_time": 0.030269384384155273,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37261312,
            "run_time": 0.14008235931396484,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 36 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154443776,
            "run_time": 1.7628958225250244,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_indexof(var1621, var3532, 0, all_21_1)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.StringUtils__substringBefore__-686746837\\5774-deviant-0.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n1313ms\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: boolean isEmpty()>",
            "<java.lang.String: int indexOf(java.lang.String)>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1,
            "<java.lang.String: int indexOf(java.lang.String)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if r1 != null goto $z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "$z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "if $z1 == 0 goto i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1)",
            "i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1)",
            "$i2 = (int) -1",
            "if i0 != $i2 goto $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0)",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__1201707019\\6475-deviant-1.smt2",
        "z3": {
            "memory": 33009664,
            "run_time": 0.10652422904968262,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 40 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.03032231330871582,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36995072,
            "run_time": 0.09228944778442383,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 40 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 161218560,
            "run_time": 1.7032766342163086,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 2,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if c0 != 0 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i7 = (int) $c1",
            "$i8 = (int) c0",
            "if $i7 == $i8 goto $z3 = 0",
            "$z3 = 1",
            "goto [?= z1 = $z3]",
            "z1 = $z3",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = $i2 - 1",
            "$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3)",
            "$i9 = (int) $c4",
            "$i10 = (int) c0",
            "if $i9 == $i10 goto $z6 = 0",
            "$z6 = 0",
            "$z5 = 0",
            "z2 = $z6",
            "if z1 != 0 goto $r3 = new java.lang.StringBuilder",
            "if $z5 != 0 goto $r3 = new java.lang.StringBuilder",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__truncate__-1628031484\\5911-deviant-0.smt2",
        "z3": {
            "memory": 32931840,
            "run_time": 0.10810637474060059,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2602 () Int\r\n    0)\r\n  (define-fun var765 () Int\r\n    (str.len var3641))\r\n  (define-fun var2086 () Int\r\n    (str.len var3641))\r\n  (define-fun var2649 () Int\r\n    (+ var3524 var2602))\r\n  (define-fun var3687 () Int\r\n    (var1767_min/-1112089438 (+ var3524 var2602) (str.len var3641)))\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var3641 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"B\")\r\n  (define-fun var3524 () Int\r\n    1)\r\n  (define-fun var185 () Int\r\n    (str.len var3641))\r\n  (define-fun var1767_min/-1112089438 ((x!0 Int) (x!1 Int)) Int\r\n    0)\r\n)\r\n(error \"line 41 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.030168533325195312,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1306 is 1\r\n; rep: (as @var1306_0 var1306)\r\n; cardinality of var1767 is 1\r\n; rep: (as @var1767_0 var1767)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1767_min/-1112089438 ((_arg_1 Int) (_arg_2 Int)) Int 2)\r\n(define-fun null-String () String \"\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3641 () String \"A\")\r\n(define-fun var3524 () Int 0)\r\n(define-fun var2602 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38055936,
            "run_time": 0.18647098541259766,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var185 () Int\n    (str.len var3641))\n  (define-fun var2602 () Int\n    0)\n  (define-fun var3641 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-Int () Int\n    4)\n  (define-fun var2649 () Int\n    (+ var3524 var2602))\n  (define-fun var765 () Int\n    (str.len var3641))\n  (define-fun var3687 () Int\n    (var1767_min/-1112089438 (+ var3524 var2602) (str.len var3641)))\n  (define-fun var3524 () Int\n    0)\n  (define-fun var2086 () Int\n    (str.len var3641))\n  (define-fun var1767_min/-1112089438 ((x!0 Int) (x!1 Int)) Int\n    3)\n)\n(error \"line 41 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 159625216,
            "run_time": 2.121002674102783,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2602 () Int 0)\r\n  (define-fun var3524 () Int 1)\r\n  (define-fun var3641 () String \"\\u{0}\")\r\n  (define-fun null-Int () Int 2)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var1767_min/-1112089438 ((x!0 Int) (x!1 Int)) Int (ite (and (= x!0 1) (= x!1 0)) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 3,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "if i0 >= 0 goto (branch)",
            "if i1 >= 0 goto (branch)",
            "if r0 != null goto $i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i0 <= $i2 goto $i3 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if $i3 <= i1 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0)",
            "$i5 = i0 + i1",
            "$i4 = virtualinvoke r0.<java.lang.String: int length()>()",
            "i6 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4)",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i6)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringAfter__1213401602\\5712.smt2",
        "z3": {
            "memory": 34050048,
            "run_time": 0.10425519943237305,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2178 () Int\r\n    (str.indexof var677 var3370 0))\r\n  (define-fun var838 () Int\r\n    (- 1))\r\n  (define-fun var1875 () Bool\r\n    (var3485_isEmpty/1595667738 var677))\r\n  (define-fun var3016 () Int\r\n    (str.len var3370))\r\n  (define-fun var677 () String\r\n    \"A\")\r\n  (define-fun var1914 () String\r\n    (str.substr var677\r\n            (+ (str.indexof var677 var3370 0) (str.len var3370))\r\n            (- (str.len var677)\r\n               (+ (str.indexof var677 var3370 0) (str.len var3370)))))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1131 () Int\r\n    (+ (str.indexof var677 var3370 0) (str.len var3370)))\r\n  (define-fun var3370 () String\r\n    \"A\")\r\n  (define-fun var3485_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10760192,
            "run_time": 0.04677128791809082,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var880 is 1\r\n; rep: (as @var880_0 var880)\r\n; cardinality of var3485 is 1\r\n; rep: (as @var3485_0 var3485)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3485_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var677 () String \"\")\r\n(define-fun var3370 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37736448,
            "run_time": 0.11032533645629883,
            "is_sat": "",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 161554432,
            "run_time": 1.7012548446655273,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_indexof(var677, var3370, 0, all_18_1)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.StringUtils__substringAfter__1213401602\\5712.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n1203ms\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int indexOf(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto (branch)",
            "if r1 != null goto i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1)",
            "i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1)",
            "$i4 = (int) -1",
            "if i0 != $i4 goto $i1 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i1 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i2 = i0 + $i1",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>($i2)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substring__1002918453\\5680.smt2",
        "z3": {
            "memory": 33083392,
            "run_time": 0.09018063545227051,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2089 () Int\r\n    0)\r\n  (define-fun var1669!1 () Int\r\n    (+ (str.len var3315) var1669))\r\n  (define-fun var3326 () Int\r\n    (str.len var3315))\r\n  (define-fun var3315 () String\r\n    \"AB\")\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1669 () Int\r\n    (- 1))\r\n  (define-fun var190 () Int\r\n    (str.len var3315))\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.06140756607055664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var703 is 1\r\n; rep: (as @var703_0 var703)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"\")\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var3315 () String \"AA\")\r\n(define-fun var1669 () Int (- 1))\r\n(define-fun var2089 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38047744,
            "run_time": 0.10888266563415527,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1669!1 () Int\n    (+ (str.len var3315) var1669))\n  (define-fun var1669 () Int\n    (- 1))\n  (define-fun var190 () Int\n    (str.len var3315))\n  (define-fun var3326 () Int\n    (str.len var3315))\n  (define-fun null-Int () Int\n    3)\n  (define-fun var2089 () Int\n    0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3315 () String\n    \"\\u{0}\\u{0}\")\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175013888,
            "run_time": 1.858482837677002,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2089 () Int 0)\r\n  (define-fun var1669 () Int (- 1))\r\n  (define-fun var3315 () String \"\\u{0}\\u{0}\")\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i3 := @parameter1: int",
            "i4 := @parameter2: int",
            "if r0 != null goto (branch)",
            "if i4 >= 0 goto (branch)",
            "if i3 >= 0 goto $i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "i3 = $i1 + i3",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i4 <= $i0 goto (branch)",
            "if i3 <= i4 goto (branch)",
            "return \"\""
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__upperCase__-829857310\\6438.smt2",
        "z3": {
            "memory": 33026048,
            "run_time": 0.11881065368652344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3036:\r\n  ;;   var3036!val!1 var3036!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3036!val!1 () var3036)\r\n  (declare-fun var3036!val!0 () var3036)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3036)) (or (= x var3036!val!1) (= x var3036!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var3036 () var3036\r\n    var3036!val!1)\r\n  (define-fun var3414 () var3036\r\n    (var1560_toLocale/455255440 var1107))\r\n  (define-fun var2636 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1107 () var3036\r\n    var3036!val!0)\r\n  (define-fun var3106 () String\r\n    (toUpperCase/398655892 var2636 (var1560_toLocale/455255440 var1107)))\r\n  (define-fun toUpperCase/398655892 ((x!0 String) (x!1 var3036)) String\r\n    \"\")\r\n  (define-fun var1560_toLocale/455255440 ((x!0 var3036)) var3036\r\n    var3036!val!1)\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.029639244079589844,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2866 is 1\r\n; rep: (as @var2866_0 var2866)\r\n; cardinality of var3036 is 2\r\n; rep: (as @var3036_0 var3036)\r\n; rep: (as @var3036_1 var3036)\r\n; cardinality of var1560 is 1\r\n; rep: (as @var1560_0 var1560)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1560_toLocale/455255440 ((BOUND_VARIABLE_495 var3036)) var3036 (as @var3036_0 var3036))\r\n(define-fun toUpperCase/398655892 ((BOUND_VARIABLE_498 String) (BOUND_VARIABLE_499 var3036)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3036 () var3036 (as @var3036_0 var3036))\r\n(define-fun var2636 () String \"\")\r\n(define-fun var1107 () var3036 (as @var3036_1 var3036))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37498880,
            "run_time": 0.10693740844726562,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3036:\n  ;;   var3036!val!1 var3036!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3036!val!1 () var3036)\n  (declare-fun var3036!val!0 () var3036)\n  ;; cardinality constraint:\n  (forall ((x var3036)) (or (= x var3036!val!1) (= x var3036!val!0)))\n  ;; -----------\n  (define-fun var1107 () var3036\n    var3036!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2636 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3414 () var3036\n    (var1560_toLocale/455255440 var1107))\n  (define-fun null-var3036 () var3036\n    var3036!val!1)\n  (define-fun var3106 () String\n    (toUpperCase/398655892 var2636 (var1560_toLocale/455255440 var1107)))\n  (define-fun toUpperCase/398655892 ((x!0 String) (x!1 var3036)) String\n    \"\")\n  (define-fun var1560_toLocale/455255440 ((x!0 var3036)) var3036\n    var3036!val!1)\n)\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 133070848,
            "run_time": 1.4322471618652344,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1107 () var3036 var3036!4)\r\n  (define-fun var2636 () String \"\\u{0}\")\r\n  (define-fun null-var3036 () var3036 var3036!2)\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.util.Locale",
            "if r0 != null goto $r2 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.Locale toLocale(java.util.Locale)>(r1)",
            "$r2 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.Locale toLocale(java.util.Locale)>(r1)",
            "$r3 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__toRootUpperCase__-126910837\\5869.smt2",
        "z3": {
            "memory": 32595968,
            "run_time": 0.09061694145202637,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2330 () var1012\r\n    var1012-ROOT)\r\n  (define-fun var1509 () String\r\n    (toUpperCase/398655892 var1511 var1012-ROOT))\r\n  (define-fun var1511 () String\r\n    \"!0!\")\r\n  (define-fun var1012-ROOT () var1012\r\n    var1012!val!0)\r\n  (define-fun toUpperCase/398655892 ((x!0 String) (x!1 var1012)) String\r\n    \"\")\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.03121185302734375,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1832 is 1\r\n; rep: (as @var1832_0 var1832)\r\n; cardinality of var1012 is 1\r\n; rep: (as @var1012_0 var1012)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun toUpperCase/398655892 ((BOUND_VARIABLE_482 String) (BOUND_VARIABLE_483 var1012)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1012-ROOT () var1012 (as @var1012_0 var1012))\r\n(define-fun var1511 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38002688,
            "run_time": 0.13882207870483398,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2330 () var1012\n    var1012-ROOT)\n  (define-fun var1511 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1509 () String\n    (toUpperCase/398655892 var1511 var1012-ROOT))\n  (define-fun var1012-ROOT () var1012\n    var1012!val!0)\n  (define-fun toUpperCase/398655892 ((x!0 String) (x!1 var1012)) String\n    \"\")\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 133230592,
            "run_time": 1.4027135372161865,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1511 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto $r1 = <java.util.Locale: java.util.Locale ROOT>",
            "$r1 = <java.util.Locale: java.util.Locale ROOT>",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r1)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__unwrap__1268717835\\6324-deviant-0.smt2",
        "z3": {
            "memory": 33075200,
            "run_time": 0.12045550346374512,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var1981 () Int\r\n    1)\r\n  (define-fun var1789 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2719 () Int\r\n    (str.len var1789))\r\n  (define-fun var1708 () Bool\r\n    (var2686_isEmpty/1595667738 var1789))\r\n  (define-fun var2686_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2326528,
            "run_time": 0.07526326179504395,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1771 is 1\r\n; rep: (as @var1771_0 var1771)\r\n; cardinality of var2686 is 1\r\n; rep: (as @var2686_0 var2686)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2686_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var1789 () String \"\")\r\n(define-fun var1981 () Int (- 1))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37335040,
            "run_time": 0.1210181713104248,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2719 () Int\n    (str.len var1789))\n  (define-fun null-Int () Int\n    2)\n  (define-fun var1981 () Int\n    1)\n  (define-fun var1789 () String\n    \"\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1708 () Bool\n    (var2686_isEmpty/1595667738 var1789))\n  (define-fun var2686_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 172138496,
            "run_time": 1.6983695030212402,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1981 () Int 1)\r\n  (define-fun var1789 () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun var2686_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if c0 == 0 goto return r0",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if $i1 != 1 goto $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i8 = (int) $c2",
            "$i9 = (int) c0",
            "if $i8 != $i9 goto return r0",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__1201707019\\6475.smt2",
        "z3": {
            "memory": 32665600,
            "run_time": 0.07399177551269531,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 54 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2285568,
            "run_time": 0.031092166900634766,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35909632,
            "run_time": 0.09236717224121094,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 54 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151912448,
            "run_time": 1.5493698120117188,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 2,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if c0 != 0 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i7 = (int) $c1",
            "$i8 = (int) c0",
            "if $i7 == $i8 goto $z3 = 0",
            "$z3 = 1",
            "goto [?= z1 = $z3]",
            "z1 = $z3",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = $i2 - 1",
            "$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3)",
            "$i9 = (int) $c4",
            "$i10 = (int) c0",
            "if $i9 == $i10 goto $z6 = 0",
            "$z6 = 0",
            "$z5 = 0",
            "z2 = $z6",
            "if z1 != 0 goto $r3 = new java.lang.StringBuilder",
            "if $z5 != 0 goto $r3 = new java.lang.StringBuilder",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__1201707019\\6743.smt2",
        "z3": {
            "memory": 33521664,
            "run_time": 0.12286567687988281,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1008 () Int\r\n    (str.to_code (str.at var730 (- (str.len var730) 1))))\r\n  (define-fun var1428 () Int\r\n    (str.to_code (str.at var730 0)))\r\n  (define-fun var1012 () Int\r\n    var1213)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2368 () Int\r\n    (str.to_code (str.at var730 (- (str.len var730) 1))))\r\n  (define-fun var1295 () Bool\r\n    (var217_isEmpty/1595667738 var730))\r\n  (define-fun var1293 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var1759 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var730 () String\r\n    \"\\u{17bff}\")\r\n  (define-fun var1619 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var1445 () Int\r\n    (str.to_code (str.at var730 0)))\r\n  (define-fun var966 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var1845 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun null-Int () Int\r\n    97280)\r\n  (define-fun var2328 () Int\r\n    (str.len var730))\r\n  (define-fun var3239 () Int\r\n    var1213)\r\n  (define-fun var1920 () Int\r\n    (- (str.len var730) 1))\r\n  (define-fun var1213 () Int\r\n    97279)\r\n  (define-fun var217_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 54 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10084352,
            "run_time": 0.06165480613708496,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var323 is 1\r\n; rep: (as @var323_0 var323)\r\n; cardinality of var217 is 1\r\n; rep: (as @var217_0 var217)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var217_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"\")\r\n(define-fun null-Int () Int 0)\r\n(define-fun var730 () String \"\\u{1}\")\r\n(define-fun var1213 () Int 1)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38473728,
            "run_time": 0.23316216468811035,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1213 () Int\n    1)\n  (define-fun var1012 () Int\n    var1213)\n  (define-fun var3239 () Int\n    var1213)\n  (define-fun var1008 () Int\n    (str.to_code (str.at var730 (- (str.len var730) 1))))\n  (define-fun var2368 () Int\n    (str.to_code (str.at var730 (- (str.len var730) 1))))\n  (define-fun var966 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var1428 () Int\n    (str.to_code (str.at var730 0)))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var730 () String\n    \"\\u{1}\\u{1}\")\n  (define-fun var1295 () Bool\n    (var217_isEmpty/1595667738 var730))\n  (define-fun var1619 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var1759 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var1445 () Int\n    (str.to_code (str.at var730 0)))\n  (define-fun var1845 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var2328 () Int\n    (str.len var730))\n  (define-fun var1920 () Int\n    (- (str.len var730) 1))\n  (define-fun var1293 () Bool\n    (ite (= 1 0) true false))\n  (define-fun null-Int () Int\n    2)\n  (define-fun var217_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 54 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163762176,
            "run_time": 1.6558241844177246,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_19_0, var1213)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__1201707019\\6743.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n1201ms\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 2,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if c0 != 0 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i7 = (int) $c1",
            "$i8 = (int) c0",
            "if $i7 == $i8 goto $z3 = 0",
            "$z3 = 0",
            "z1 = $z3",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = $i2 - 1",
            "$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3)",
            "$i9 = (int) $c4",
            "$i10 = (int) c0",
            "if $i9 == $i10 goto $z6 = 0",
            "$z6 = 0",
            "$z5 = 0",
            "z2 = $z6",
            "if z1 != 0 goto $r3 = new java.lang.StringBuilder",
            "if $z5 != 0 goto $r3 = new java.lang.StringBuilder",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__truncate__-1628031484\\5911.smt2",
        "z3": {
            "memory": 33116160,
            "run_time": 0.08885025978088379,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2602 () Int\r\n    0)\r\n  (define-fun var765 () Int\r\n    (str.len var3641))\r\n  (define-fun var2086 () Int\r\n    (str.len var3641))\r\n  (define-fun var2649 () Int\r\n    (+ var3524 var2602))\r\n  (define-fun var3687 () Int\r\n    (var1767_min/-1112089438 (+ var3524 var2602) (str.len var3641)))\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var3641 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"B\")\r\n  (define-fun var3524 () Int\r\n    0)\r\n  (define-fun var185 () Int\r\n    (str.len var3641))\r\n  (define-fun var1404 () String\r\n    (str.substr var3641\r\n            var3524\r\n            (- (var1767_min/-1112089438 (+ var3524 var2602) (str.len var3641))\r\n               var3524)))\r\n  (define-fun var1767_min/-1112089438 ((x!0 Int) (x!1 Int)) Int\r\n    0)\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.03133535385131836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1306 is 1\r\n; rep: (as @var1306_0 var1306)\r\n; cardinality of var1767 is 1\r\n; rep: (as @var1767_0 var1767)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1767_min/-1112089438 ((_arg_1 Int) (_arg_2 Int)) Int 0)\r\n(define-fun null-String () String \"\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3641 () String \"A\")\r\n(define-fun var3524 () Int 0)\r\n(define-fun var2602 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37576704,
            "run_time": 0.13963580131530762,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var185 () Int\n    (str.len var3641))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3641 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1404 () String\n    (str.substr var3641\n            var3524\n            (- (var1767_min/-1112089438 (+ var3524 var2602) (str.len var3641))\n               var3524)))\n  (define-fun null-Int () Int\n    3)\n  (define-fun var2649 () Int\n    (+ var3524 var2602))\n  (define-fun var765 () Int\n    (str.len var3641))\n  (define-fun var3687 () Int\n    (var1767_min/-1112089438 (+ var3524 var2602) (str.len var3641)))\n  (define-fun var3524 () Int\n    0)\n  (define-fun var2086 () Int\n    (str.len var3641))\n  (define-fun var2602 () Int\n    0)\n  (define-fun var1767_min/-1112089438 ((x!0 Int) (x!1 Int)) Int\n    0)\n)\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168116224,
            "run_time": 1.899493932723999,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2602 () Int 0)\r\n  (define-fun var3524 () Int 0)\r\n  (define-fun var3641 () String \"\\u{0}\")\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var1767_min/-1112089438 ((x!0 Int) (x!1 Int)) Int (ite (and (= x!0 0) (= x!1 0)) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 3,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "if i0 >= 0 goto (branch)",
            "if i1 >= 0 goto (branch)",
            "if r0 != null goto $i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i0 <= $i2 goto $i3 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if $i3 <= i1 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0)",
            "$i5 = i0 + i1",
            "$i4 = virtualinvoke r0.<java.lang.String: int length()>()",
            "i6 = staticinvoke <java.lang.Math: int min(int,int)>($i5, $i4)",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(i0, i6)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringBeforeLast__-1368097311\\5783.smt2",
        "z3": {
            "memory": 32845824,
            "run_time": 0.08927059173583984,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var151 () String\r\n    \"!0!\")\r\n  (define-fun var150 () String\r\n    \"!2!\")\r\n  (define-fun var3384 () Bool\r\n    (var1007_isEmpty/1595667738 var151))\r\n  (define-fun var1955 () Bool\r\n    (var1007_isEmpty/1595667738 var150))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var184 () Int\r\n    (- 1))\r\n  (define-fun var3713 () Int\r\n    (lastIndexOf/-618837785 var151 var150))\r\n  (define-fun var1007_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int\r\n    (- 1))\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2322432,
            "run_time": 0.030852556228637695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2333 is 1\r\n; rep: (as @var2333_0 var2333)\r\n; cardinality of var1007 is 1\r\n; rep: (as @var1007_0 var1007)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1007_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun lastIndexOf/-618837785 ((_arg_1 String) (_arg_2 String)) Int (- 1))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var151 () String \"\")\r\n(define-fun var150 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37855232,
            "run_time": 0.1871652603149414,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var151 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3713 () Int\n    (lastIndexOf/-618837785 var151 var150))\n  (define-fun var184 () Int\n    (- 1))\n  (define-fun var1955 () Bool\n    (var1007_isEmpty/1595667738 var150))\n  (define-fun var150 () String\n    \"\\u{0}\")\n  (define-fun var3384 () Bool\n    (var1007_isEmpty/1595667738 var151))\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int\n    (- 1))\n  (define-fun var1007_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164364288,
            "run_time": 1.5876226425170898,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var150 () String \"\\u{0}\")\r\n  (define-fun var151 () String \"\\u{1}\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int (ite (and (= x!0 \"\\u{1}\") (= x!1 \"\\u{0}\")) (- 1) 0))\r\n  (define-fun var1007_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\\u{1}\") false (ite (= x!0 \"\\u{0}\") false true)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: int lastIndexOf(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: int lastIndexOf(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(r1)",
            "i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(r1)",
            "$i2 = (int) -1",
            "if i0 != $i2 goto $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0)",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substring__1002918453\\5684.smt2",
        "z3": {
            "memory": 33083392,
            "run_time": 0.09085679054260254,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2655 () Int\r\n    1)\r\n  (define-fun var1811 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var638 () Int\r\n    1)\r\n  (define-fun var1655 () Int\r\n    (str.len var1811))\r\n  (define-fun var638!1 () Int\r\n    (str.len var1811))\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.03143000602722168,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2948 is 1\r\n; rep: (as @var2948_0 var2948)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int 0)\r\n(define-fun var1811 () String \"\")\r\n(define-fun var2655 () Int 1)\r\n(define-fun var638 () Int 1)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37511168,
            "run_time": 0.10951948165893555,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var638!1 () Int\n    (str.len var1811))\n  (define-fun var1655 () Int\n    (str.len var1811))\n  (define-fun var1811 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var638 () Int\n    3)\n  (define-fun var2655 () Int\n    3)\n  (define-fun null-Int () Int\n    4)\n  (define-fun null-String () String\n    \"\\u{0}\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164712448,
            "run_time": 1.7718346118927002,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var638 () Int 1)\r\n  (define-fun var2655 () Int 1)\r\n  (define-fun var1811 () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i3 := @parameter1: int",
            "i4 := @parameter2: int",
            "if r0 != null goto (branch)",
            "if i4 >= 0 goto (branch)",
            "if i3 >= 0 goto $i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i4 <= $i0 goto (branch)",
            "i4 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i3 <= i4 goto (branch)",
            "return \"\""
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__upperCase__433444974\\6433.smt2",
        "z3": {
            "memory": 32321536,
            "run_time": 0.09097075462341309,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var251 () String\r\n    (let ((a!1 (str.replace_all (str.replace_all (str.replace_all (str.replace_all var1099\r\n                                                                               \"a\"\r\n                                                                               \"A\")\r\n                                                              \"b\"\r\n                                                              \"B\")\r\n                                             \"c\"\r\n                                             \"C\")\r\n                            \"d\"\r\n                            \"D\")))\r\n(let ((a!2 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!1\r\n                                                                               \"e\"\r\n                                                                               \"E\")\r\n                                                              \"f\"\r\n                                                              \"F\")\r\n                                             \"g\"\r\n                                             \"G\")\r\n                            \"h\"\r\n                            \"H\")))\r\n(let ((a!3 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!2\r\n                                                                               \"i\"\r\n                                                                               \"I\")\r\n                                                              \"j\"\r\n                                                              \"J\")\r\n                                             \"k\"\r\n                                             \"K\")\r\n                            \"l\"\r\n                            \"L\")))\r\n(let ((a!4 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!3\r\n                                                                               \"m\"\r\n                                                                               \"M\")\r\n                                                              \"n\"\r\n                                                              \"N\")\r\n                                             \"o\"\r\n                                             \"O\")\r\n                            \"p\"\r\n                            \"P\")))\r\n(let ((a!5 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!4\r\n                                                                               \"q\"\r\n                                                                               \"Q\")\r\n                                                              \"r\"\r\n                                                              \"R\")\r\n                                             \"s\"\r\n                                             \"S\")\r\n                            \"t\"\r\n                            \"T\")))\r\n(let ((a!6 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!5\r\n                                                                               \"u\"\r\n                                                                               \"U\")\r\n                                                              \"v\"\r\n                                                              \"V\")\r\n                                             \"w\"\r\n                                             \"W\")\r\n                            \"x\"\r\n                            \"X\")))\r\n  (str.replace_all (str.replace_all a!6 \"y\" \"Y\") \"z\" \"Z\"))))))))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1099 () String\r\n    \"A\")\r\n)\r\n(error \"line 19 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.031310319900512695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1585 is 1\r\n; rep: (as @var1585_0 var1585)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1099 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38215680,
            "run_time": 0.14038896560668945,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1099 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var251 () String\n    (let ((a!1 (str.replace_all (str.replace_all (str.replace_all (str.replace_all var1099\n                                                                               \"a\"\n                                                                               \"A\")\n                                                              \"b\"\n                                                              \"B\")\n                                             \"c\"\n                                             \"C\")\n                            \"d\"\n                            \"D\")))\n(let ((a!2 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!1\n                                                                               \"e\"\n                                                                               \"E\")\n                                                              \"f\"\n                                                              \"F\")\n                                             \"g\"\n                                             \"G\")\n                            \"h\"\n                            \"H\")))\n(let ((a!3 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!2\n                                                                               \"i\"\n                                                                               \"I\")\n                                                              \"j\"\n                                                              \"J\")\n                                             \"k\"\n                                             \"K\")\n                            \"l\"\n                            \"L\")))\n(let ((a!4 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!3\n                                                                               \"m\"\n                                                                               \"M\")\n                                                              \"n\"\n                                                              \"N\")\n                                             \"o\"\n                                             \"O\")\n                            \"p\"\n                            \"P\")))\n(let ((a!5 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!4\n                                                                               \"q\"\n                                                                               \"Q\")\n                                                              \"r\"\n                                                              \"R\")\n                                             \"s\"\n                                             \"S\")\n                            \"t\"\n                            \"T\")))\n(let ((a!6 (str.replace_all (str.replace_all (str.replace_all (str.replace_all a!5\n                                                                               \"u\"\n                                                                               \"U\")\n                                                              \"v\"\n                                                              \"V\")\n                                             \"w\"\n                                             \"W\")\n                            \"x\"\n                            \"X\")))\n  (str.replace_all (str.replace_all a!6 \"y\" \"Y\") \"z\" \"Z\"))))))))\n  (define-fun null-String () String\n    \"\\u{0}\")\n)\n(error \"line 19 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155508736,
            "run_time": 1.5823423862457275,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1099 () String \"a\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String toUpperCase()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toUpperCase()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>()",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String toUpperCase()>()",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__toString__-1870222658\\5874.smt2",
        "z3": {
            "memory": 33005568,
            "run_time": 0.0904700756072998,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1809 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 0) 0 1))\r\n  (define-fun var2933 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2182 () String\r\n    String-init)\r\n  (define-fun var1055 () var2322\r\n    (var82_toCharset/-2067200713 var2933))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var2182!1 () String\r\n    \"\")\r\n  (define-fun var1809!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var1055!1 () var2322\r\n    var2322!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun <init>/-2015205558 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 var2322)) void\r\n    void!val!0)\r\n  (define-fun var82_toCharset/-2067200713 ((x!0 String)) var2322\r\n    var2322!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9998336,
            "run_time": 0.0767815113067627,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var164 is 1\r\n; rep: (as @var164_0 var164)\r\n; cardinality of var2322 is 1\r\n; rep: (as @var2322_0 var2322)\r\n; cardinality of var82 is 1\r\n; rep: (as @var82_0 var82)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var82_toCharset/-2067200713 ((BOUND_VARIABLE_534 String)) var2322 (as @var2322_0 var2322))\r\n(define-fun <init>/-2015205558 ((BOUND_VARIABLE_537 String) (BOUND_VARIABLE_538 (Array Int Int)) (BOUND_VARIABLE_539 var2322)) void (as @void_0 void))\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1809 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2933 () String \"\")\r\n(define-fun var2182!1 () String \"\")\r\n(define-fun var1809!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1055!1 () var2322 (as @var2322_0 var2322))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37531648,
            "run_time": 0.11504364013671875,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var2182 () String\n    String-init)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1055 () var2322\n    (var82_toCharset/-2067200713 var2933))\n  (define-fun var2933 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1809 () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 0 1))\n  (define-fun var2182!1 () String\n    \"\")\n  (define-fun var1809!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var1055!1 () var2322\n    var2322!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun <init>/-2015205558 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 var2322)) void\n    void!val!0)\n  (define-fun var82_toCharset/-2067200713 ((x!0 String)) var2322\n    var2322!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152129536,
            "run_time": 1.5138192176818848,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2933 () String \"\\u{0}\")\r\n  (define-fun var1809 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 0) 0 1))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: byte[]",
            "r2 := @parameter1: java.lang.String",
            "$r0 = new java.lang.String",
            "$r3 = staticinvoke <org.apache.commons.lang3.Charsets: java.nio.charset.Charset toCharset(java.lang.String)>(r2)",
            "specialinvoke $r0.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(r1, $r3)",
            "return $r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__unwrap__1268717835\\6324.smt2",
        "z3": {
            "memory": 32120832,
            "run_time": 0.12178397178649902,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1981 () Int\r\n    5)\r\n  (define-fun var1789 () String\r\n    \"\\u{1fdff}A\")\r\n  (define-fun var1399 () Int\r\n    var1981)\r\n  (define-fun var1708 () Bool\r\n    (var2686_isEmpty/1595667738 var1789))\r\n  (define-fun var1469 () Int\r\n    (str.to_code (str.at var1789 0)))\r\n  (define-fun null-Int () Int\r\n    6)\r\n  (define-fun var2939 () Int\r\n    (str.to_code (str.at var1789 0)))\r\n  (define-fun null-String () String\r\n    \"BCD\")\r\n  (define-fun var2719 () Int\r\n    (str.len var1789))\r\n  (define-fun var2686_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2281472,
            "run_time": 0.10072612762451172,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1771 is 1\r\n; rep: (as @var1771_0 var1771)\r\n; cardinality of var2686 is 1\r\n; rep: (as @var2686_0 var2686)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2686_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"\")\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var1789 () String \"\\u{0}A\")\r\n(define-fun var1981 () Int (- 1))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37920768,
            "run_time": 0.13687396049499512,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2939 () Int\n    (str.to_code (str.at var1789 0)))\n  (define-fun var1789 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1981 () Int\n    3)\n  (define-fun var1399 () Int\n    var1981)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2719 () Int\n    (str.len var1789))\n  (define-fun null-Int () Int\n    4)\n  (define-fun var1708 () Bool\n    (var2686_isEmpty/1595667738 var1789))\n  (define-fun var1469 () Int\n    (str.to_code (str.at var1789 0)))\n  (define-fun var2686_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 160858112,
            "run_time": 1.5791969299316406,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_22_1, all_22_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.StringUtils__unwrap__1268717835\\6324.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n1145ms\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if c0 == 0 goto return r0",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if $i1 != 1 goto $c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c2 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i8 = (int) $c2",
            "$i9 = (int) c0",
            "if $i8 != $i9 goto return r0",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6746.smt2",
        "z3": {
            "memory": 32161792,
            "run_time": 0.08573174476623535,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 47 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.044243574142456055,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36962304,
            "run_time": 0.12217283248901367,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 47 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152326144,
            "run_time": 1.3434076309204102,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 1",
            "goto [?= z3 = $z6]",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 1",
            "$z8 = 1",
            "goto [?= z5 = $z8]",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "if $z9 != 0 goto $r2 = new java.lang.StringBuilder",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__1201707019\\6742-deviant-0.smt2",
        "z3": {
            "memory": 32690176,
            "run_time": 0.10138082504272461,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var3662 () Bool\r\n    (var3132_isEmpty/1595667738 var3559))\r\n  (define-fun var1850 () Int\r\n    1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3559 () String\r\n    \"\")\r\n  (define-fun var3132_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2273280,
            "run_time": 0.030618667602539062,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2926 is 1\r\n; rep: (as @var2926_0 var2926)\r\n; cardinality of var3132 is 1\r\n; rep: (as @var3132_0 var3132)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3132_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var3559 () String \"\")\r\n(define-fun var1850 () Int (- 1))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37318656,
            "run_time": 0.13571524620056152,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Int () Int\n    2)\n  (define-fun var1850 () Int\n    1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3662 () Bool\n    (var3132_isEmpty/1595667738 var3559))\n  (define-fun var3559 () String\n    \"\")\n  (define-fun var3132_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 172744704,
            "run_time": 1.6208610534667969,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1850 () Int 1)\r\n  (define-fun var3559 () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun var3132_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: char charAt(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: char charAt(int)>": 2,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if c0 != 0 goto $c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$c1 = virtualinvoke r0.<java.lang.String: char charAt(int)>(0)",
            "$i7 = (int) $c1",
            "$i8 = (int) c0",
            "if $i7 == $i8 goto $z3 = 0",
            "$z3 = 0",
            "z1 = $z3",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = $i2 - 1",
            "$c4 = virtualinvoke r0.<java.lang.String: char charAt(int)>($i3)",
            "$i9 = (int) $c4",
            "$i10 = (int) c0",
            "if $i9 == $i10 goto $z6 = 0",
            "$z6 = 1",
            "$z5 = 1",
            "goto [?= z2 = $z6]",
            "z2 = $z6",
            "if z1 != 0 goto $r3 = new java.lang.StringBuilder",
            "if $z5 != 0 goto $r3 = new java.lang.StringBuilder",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__swapCase__-1466471327\\5831.smt2",
        "z3": {
            "memory": 32567296,
            "run_time": 0.08959126472473145,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3189 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var3847 () Int\r\n    (str.len var458))\r\n  (define-fun var695 () String\r\n    String-init)\r\n  (define-fun var8 () Int\r\n    0)\r\n  (define-fun var458 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2984 () Int\r\n    0)\r\n  (define-fun var3709 () Bool\r\n    (var3923_isEmpty/1595667738 var458))\r\n  (define-fun var8!1 () Int\r\n    0)\r\n  (define-fun arr-Int-init () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var695!1 () String\r\n    \"\")\r\n  (define-fun var2686 () Int\r\n    0)\r\n  (define-fun var3189!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var3923_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun <init>/1703972987 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 40 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11243520,
            "run_time": 0.03164410591125488,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1274 is 1\r\n; rep: (as @var1274_0 var1274)\r\n; cardinality of var3923 is 1\r\n; rep: (as @var3923_0 var3923)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3923_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1703972987 ((BOUND_VARIABLE_581 String) (BOUND_VARIABLE_582 (Array Int Int)) (BOUND_VARIABLE_583 Int) (BOUND_VARIABLE_584 Int)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var458 () String \"\")\r\n(define-fun var695!1 () String \"\")\r\n(define-fun var3189!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2686 () Int 0)\r\n(define-fun var8!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37986304,
            "run_time": 0.1553361415863037,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var695 () String\n    String-init)\n  (define-fun var2984 () Int\n    0)\n  (define-fun var3709 () Bool\n    (var3923_isEmpty/1595667738 var458))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3847 () Int\n    (str.len var458))\n  (define-fun var3189 () (Array Int Int)\n    arr-Int-init)\n  (define-fun var8 () Int\n    0)\n  (define-fun var458 () String\n    \"\")\n  (define-fun var8!1 () Int\n    0)\n  (define-fun arr-Int-init () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var695!1 () String\n    \"\")\n  (define-fun var2686 () Int\n    0)\n  (define-fun var3189!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var3923_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n  (define-fun <init>/1703972987 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 40 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175763456,
            "run_time": 1.916717290878296,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var458 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun var3923_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\") false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: void <init>(int[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: void <init>(int[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "r1 = newarray (int)[i0]",
            "i2 = 0",
            "i3 = 0",
            "if i3 >= i0 goto $r2 = new java.lang.String",
            "$r2 = new java.lang.String",
            "specialinvoke $r2.<java.lang.String: void <init>(int[],int,int)>(r1, 0, i2)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__truncate__-1628031484\\5915-deviant-0.smt2",
        "z3": {
            "memory": 32858112,
            "run_time": 0.08817601203918457,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 34 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2334720,
            "run_time": 0.03049468994140625,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36429824,
            "run_time": 0.140228271484375,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 34 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163340288,
            "run_time": 2.1171300411224365,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var86 () Int 0)\r\n  (define-fun var1415 () Int 1)\r\n  (define-fun var3433 () String \"\")\r\n  (define-fun null-Int () Int 2)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2,
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "if i0 >= 0 goto (branch)",
            "if i1 >= 0 goto (branch)",
            "if r0 != null goto $i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i0 <= $i2 goto $i3 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if $i3 <= i1 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0)",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringBeforeLast__-1368097311\\5787-deviant-0.smt2",
        "z3": {
            "memory": 33071104,
            "run_time": 0.10494017601013184,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1577 () String\r\n    \"A\")\r\n  (define-fun var3600 () Bool\r\n    (var1346_isEmpty/1595667738 var1577))\r\n  (define-fun var3283 () Bool\r\n    (var1346_isEmpty/1595667738 var169))\r\n  (define-fun var1192 () Int\r\n    (lastIndexOf/-618837785 var1577 var169))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1595 () Int\r\n    (- 1))\r\n  (define-fun var169 () String\r\n    \"A\")\r\n  (define-fun var1346_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int\r\n    (- 2))\r\n)\r\n(error \"line 33 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2248704,
            "run_time": 0.030824899673461914,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var354 is 1\r\n; rep: (as @var354_0 var354)\r\n; cardinality of var1346 is 1\r\n; rep: (as @var1346_0 var1346)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1346_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun lastIndexOf/-618837785 ((_arg_1 String) (_arg_2 String)) Int 1)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1577 () String \"\")\r\n(define-fun var169 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38154240,
            "run_time": 0.1717832088470459,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3283 () Bool\n    (var1346_isEmpty/1595667738 var169))\n  (define-fun var169 () String\n    \"\\u{0}\")\n  (define-fun var1577 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1595 () Int\n    (- 1))\n  (define-fun var1192 () Int\n    (lastIndexOf/-618837785 var1577 var169))\n  (define-fun var3600 () Bool\n    (var1346_isEmpty/1595667738 var1577))\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int\n    4)\n  (define-fun var1346_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 33 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 170680320,
            "run_time": 1.9774956703186035,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var169 () String \"\\u{1}\")\r\n  (define-fun var1577 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun lastIndexOf/-618837785 ((x!0 String) (x!1 String)) Int (ite (and (= x!0 \"\\u{0}\") (= x!1 \"\\u{1}\")) (- 2) 0))\r\n  (define-fun var1346_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\\u{0}\") false (ite (= x!0 \"\\u{1}\") false true)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: int lastIndexOf(java.lang.String)>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int lastIndexOf(java.lang.String)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(r1)",
            "i0 = virtualinvoke r0.<java.lang.String: int lastIndexOf(java.lang.String)>(r1)",
            "$i2 = (int) -1",
            "if i0 != $i2 goto $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0)",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__valueOf__-855084149\\6441.smt2",
        "z3": {
            "memory": 32620544,
            "run_time": 0.07466626167297363,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var385 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 0) 0 1))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var2557 () String\r\n    (String_valueOf/-911079903 var385))\r\n  (define-fun String_valueOf/-911079903 ((x!0 (Array Int Int))) String\r\n    \"\")\r\n)\r\n(error \"line 18 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2285568,
            "run_time": 0.03186964988708496,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-911079903 ((BOUND_VARIABLE_444 (Array Int Int))) String \"\")\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var385 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35733504,
            "run_time": 0.07844686508178711,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var385 () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 0 1))\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var2557 () String\n    (String_valueOf/-911079903 var385))\n  (define-fun String_valueOf/-911079903 ((x!0 (Array Int Int))) String\n    \"\")\n)\n(error \"line 18 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141623296,
            "run_time": 1.5238721370697021,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var385 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 0) 0 1))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(char[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(char[])>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: char[]",
            "if r0 != null goto $r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>(r0)",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char[])>(r0)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6755.smt2",
        "z3": {
            "memory": 32129024,
            "run_time": 0.11408877372741699,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 79 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.030785322189331055,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35938304,
            "run_time": 0.12749910354614258,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 79 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 146464768,
            "run_time": 1.5329854488372803,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 23,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 3,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 1",
            "goto [?= z3 = $z6]",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 1",
            "$z8 = 1",
            "goto [?= z5 = $z8]",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = $i1 + $i0",
            "$i2 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i4 = $i3 + $i2",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4)",
            "if z3 == 0 goto virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "if z5 == 0 goto $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6747.smt2",
        "z3": {
            "memory": 32112640,
            "run_time": 0.08894896507263184,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 46 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2211840,
            "run_time": 0.031600236892700195,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35893248,
            "run_time": 0.09268856048583984,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 46 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152858624,
            "run_time": 1.4069867134094238,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 1",
            "goto [?= z3 = $z6]",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 0",
            "$z8 = 0",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "if $z9 != 0 goto $r2 = new java.lang.StringBuilder",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6762.smt2",
        "z3": {
            "memory": 32620544,
            "run_time": 0.10789704322814941,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 78 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2273280,
            "run_time": 0.030550479888916016,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35930112,
            "run_time": 0.10907196998596191,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 78 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151060480,
            "run_time": 1.4709820747375488,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 23,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 3,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 0",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 1",
            "$z8 = 1",
            "goto [?= z5 = $z8]",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = $i1 + $i0",
            "$i2 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i4 = $i3 + $i2",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4)",
            "if z3 == 0 goto virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "if z5 == 0 goto $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__unwrap__457520218\\6332.smt2",
        "z3": {
            "memory": 32710656,
            "run_time": 0.09218358993530273,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1261 () Bool\r\n    (var3611_isEmpty/1595667738 var2831))\r\n  (define-fun var2736 () Int\r\n    (str.len var242))\r\n  (define-fun var942 () Int\r\n    (* 2 (str.len var242)))\r\n  (define-fun var3138 () Bool\r\n    (var3611_isEmpty/1595667738 var242))\r\n  (define-fun var3658 () Int\r\n    (str.len var2831))\r\n  (define-fun var2831 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"B\")\r\n  (define-fun var242 () String\r\n    \"A\")\r\n  (define-fun var3611_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 33 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8093696,
            "run_time": 0.032282114028930664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var686 is 1\r\n; rep: (as @var686_0 var686)\r\n; cardinality of var3611 is 1\r\n; rep: (as @var3611_0 var3611)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3611_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"B\")\r\n(define-fun var2831 () String \"\")\r\n(define-fun var242 () String \"A\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37900288,
            "run_time": 0.21663761138916016,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3658 () Int\n    (str.len var2831))\n  (define-fun var2831 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var3138 () Bool\n    (var3611_isEmpty/1595667738 var242))\n  (define-fun var2736 () Int\n    (str.len var242))\n  (define-fun var242 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var942 () Int\n    (* 2 (str.len var242)))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1261 () Bool\n    (var3611_isEmpty/1595667738 var2831))\n  (define-fun var3611_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 33 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177057792,
            "run_time": 1.7955050468444824,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var242 () String \"\\u{0}\")\r\n  (define-fun var2831 () String \"\")\r\n  (define-fun null-String () String \"\\u{1}\")\r\n  (define-fun var3611_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\") false (ite (= x!0 \"\\u{0}\") false true)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 != 0 goto return r0",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i1 = 2 * $i0",
            "if $i2 >= $i1 goto $z2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean startsWith(java.lang.CharSequence,java.lang.CharSequence)>(r0, r1)",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.SystemUtils__isJavaVersionMatch__-1139296919\\823.smt2",
        "z3": {
            "memory": 32968704,
            "run_time": 0.12177109718322754,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2214 () String\r\n    \"A\")\r\n  (define-fun var3003 () String\r\n    \"B\")\r\n  (define-fun var459 () Bool\r\n    (str.prefixof var3003 var2214))\r\n  (define-fun null-String () String\r\n    \"\")\r\n)\r\n(error \"line 21 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.029978036880493164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var645 is 1\r\n; rep: (as @var645_0 var645)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2214 () String \"\")\r\n(define-fun var3003 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37830656,
            "run_time": 0.14031600952148438,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3003 () String\n    \"\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var2214 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var459 () Bool\n    (str.prefixof var3003 var2214))\n)\n(error \"line 21 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132567040,
            "run_time": 1.3495640754699707,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3003 () String \"\\u{0}\")\r\n  (define-fun var2214 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "if r0 != null goto $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "return $z0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__append__-359132318\\3456.smt2",
        "z3": {
            "memory": 32595968,
            "run_time": 0.09041953086853027,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3962:\r\n  ;;   var3962!val!0 var3962!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3962!val!0 () var3962)\r\n  (declare-fun var3962!val!1 () var3962)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3962)) (or (= x var3962!val!0) (= x var3962!val!1)))\r\n  ;; -----------\r\n  (define-fun var2122 () String\r\n    \"!0!\")\r\n  (define-fun var2549 () Int\r\n    1)\r\n  (define-fun var977 () var3962\r\n    (append/-359508548 var2486 (String_toString/-1426662429 var2122) var2549 var602))\r\n  (define-fun var2486 () var3962\r\n    var3962!val!0)\r\n  (define-fun var602 () Int\r\n    1)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2219 () String\r\n    (String_toString/-1426662429 var2122))\r\n  (define-fun null-var3962 () var3962\r\n    var3962!val!1)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun String_toString/-1426662429 ((x!0 String)) String\r\n    \"\")\r\n  (define-fun append/-359508548 ((x!0 var3962) (x!1 String) (x!2 Int) (x!3 Int)) var3962\r\n    var3962!val!0)\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 5304320,
            "run_time": 0.029801607131958008,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3962 is 2\r\n; rep: (as @var3962_0 var3962)\r\n; rep: (as @var3962_1 var3962)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_toString/-1426662429 ((BOUND_VARIABLE_542 String)) String \"\")\r\n(define-fun append/-359508548 ((BOUND_VARIABLE_545 var3962) (BOUND_VARIABLE_546 String) (BOUND_VARIABLE_547 Int) (BOUND_VARIABLE_548 Int)) var3962 (as @var3962_0 var3962))\r\n(define-fun null-var3962 () var3962 (as @var3962_0 var3962))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int 0)\r\n(define-fun var2486 () var3962 (as @var3962_1 var3962))\r\n(define-fun var2122 () String \"\")\r\n(define-fun var2549 () Int 1)\r\n(define-fun var602 () Int 1)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38137856,
            "run_time": 0.18192028999328613,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3962:\n  ;;   var3962!val!0 var3962!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3962!val!0 () var3962)\n  (declare-fun var3962!val!1 () var3962)\n  ;; cardinality constraint:\n  (forall ((x var3962)) (or (= x var3962!val!0) (= x var3962!val!1)))\n  ;; -----------\n  (define-fun null-Int () Int\n    0)\n  (define-fun var2486 () var3962\n    var3962!val!0)\n  (define-fun var2549 () Int\n    1)\n  (define-fun var2122 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-var3962 () var3962\n    var3962!val!1)\n  (define-fun var977 () var3962\n    (append/-359508548 var2486 (String_toString/-1426662429 var2122) var2549 var602))\n  (define-fun var2219 () String\n    (String_toString/-1426662429 var2122))\n  (define-fun var602 () Int\n    1)\n  (define-fun String_toString/-1426662429 ((x!0 String)) String\n    \"\")\n  (define-fun append/-359508548 ((x!0 var3962) (x!1 String) (x!2 Int) (x!3 Int)) var3962\n    var3962!val!0)\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141090816,
            "run_time": 1.4632952213287354,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var602 () Int 1)\r\n  (define-fun var2549 () Int 1)\r\n  (define-fun var2122 () String \"\\u{0}\")\r\n  (define-fun var2486 () var3962 var3962!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3962 () var3962 var3962!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.CharSequence: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.CharSequence: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrBuilder",
            "r0 := @parameter0: java.lang.CharSequence",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "if r0 != null goto $r2 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>()",
            "$r2 = interfaceinvoke r0.<java.lang.CharSequence: java.lang.String toString()>()",
            "$r3 = virtualinvoke r1.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder append(java.lang.String,int,int)>($r2, i0, i1)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__truncate__-1628031484\\5915.smt2",
        "z3": {
            "memory": 32956416,
            "run_time": 0.10465550422668457,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3433 () String\r\n    \"\")\r\n  (define-fun var86 () Int\r\n    0)\r\n  (define-fun var1402 () Int\r\n    (str.len var3433))\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var1415 () Int\r\n    0)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1472 () Int\r\n    (str.len var3433))\r\n  (define-fun var3535 () String\r\n    (str.substr var3433 var1415 (- (str.len var3433) var1415)))\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.029978036880493164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3466 is 1\r\n; rep: (as @var3466_0 var3466)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3433 () String \"\")\r\n(define-fun var1415 () Int 0)\r\n(define-fun var86 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37552128,
            "run_time": 0.10968661308288574,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1402 () Int\n    (str.len var3433))\n  (define-fun var3535 () String\n    (str.substr var3433 var1415 (- (str.len var3433) var1415)))\n  (define-fun var1472 () Int\n    (str.len var3433))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1415 () Int\n    0)\n  (define-fun null-Int () Int\n    3)\n  (define-fun var3433 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var86 () Int\n    2)\n)\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165543936,
            "run_time": 1.707411766052246,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var86 () Int 0)\r\n  (define-fun var1415 () Int 0)\r\n  (define-fun var3433 () String \"\")\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2,
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "if i0 >= 0 goto (branch)",
            "if i1 >= 0 goto (branch)",
            "if r0 != null goto $i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i0 <= $i2 goto $i3 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i3 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if $i3 <= i1 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0)",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i0)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.ExtendedMessageFormat__seekNonWs__-1252018043\\3514.smt2",
        "z3": {
            "memory": 33054720,
            "run_time": 0.1726076602935791,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var963:\r\n  ;;   var963!val!1 var963!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var963!val!1 () var963)\r\n  (declare-fun var963!val!0 () var963)\r\n  ;; cardinality constraint:\r\n  (forall ((x var963)) (or (= x var963!val!1) (= x var963!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2477:\r\n  ;;   var2477!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2477!val!0 () var2477)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2477)) (= x var2477!val!0))\r\n  ;; -----------\r\n  ;; universe for var2279:\r\n  ;;   var2279!val!0 var2279!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2279!val!0 () var2279)\r\n  (declare-fun var2279!val!1 () var2279)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2279)) (or (= x var2279!val!0) (= x var2279!val!1)))\r\n  ;; -----------\r\n  (define-fun var3257 () (Array Int Int)\r\n    (toCharArray/415275702 var3200))\r\n  (define-fun var3900 () Int\r\n    (getIndex/-2136393185 var1112))\r\n  (define-fun var2477_splitMatcher/-2008615519 () var2477\r\n    var2477!val!0)\r\n  (define-fun null-var2279 () var2279\r\n    var2279!val!1)\r\n  (define-fun var528 () Int\r\n    (isMatch/-942142227\r\n  var2477_splitMatcher/-2008615519\r\n  (toCharArray/415275702 var3200)\r\n  (getIndex/-2136393185 var1112)))\r\n  (define-fun var2723 () var2477\r\n    var2477_splitMatcher/-2008615519)\r\n  (define-fun var1208 () Int\r\n    (getIndex/-2136393185 var1112))\r\n  (define-fun var3200 () String\r\n    \"!0!\")\r\n  (define-fun var3198 () Int\r\n    (+ (getIndex/-2136393185 var1112)\r\n   (isMatch/-942142227\r\n     var2477_splitMatcher/-2008615519\r\n     (toCharArray/415275702 var3200)\r\n     (getIndex/-2136393185 var1112))))\r\n  (define-fun var2199 () var2279\r\n    var2279!val!0)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-var963 () var963\r\n    var963!val!1)\r\n  (define-fun var1112 () var963\r\n    var963!val!0)\r\n  (define-fun var1112!1 () var963\r\n    var963!val!1)\r\n  (define-fun var3198!1 () Int\r\n    0)\r\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun getIndex/-2136393185 ((x!0 var963)) Int\r\n    2)\r\n  (define-fun isMatch/-942142227 ((x!0 var2477) (x!1 (Array Int Int)) (x!2 Int)) Int\r\n    0)\r\n  (define-fun setIndex/-453939609 ((x!0 var963) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 46 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.03131675720214844,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2279 is 2\r\n; rep: (as @var2279_0 var2279)\r\n; rep: (as @var2279_1 var2279)\r\n; cardinality of var3290 is 1\r\n; rep: (as @var3290_0 var3290)\r\n; cardinality of var963 is 2\r\n; rep: (as @var963_0 var963)\r\n; rep: (as @var963_1 var963)\r\n; cardinality of var2477 is 1\r\n; rep: (as @var2477_0 var2477)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun toCharArray/415275702 ((_arg_1 String)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2477_splitMatcher/-2008615519 () var2477 (as @var2477_0 var2477))\r\n(define-fun getIndex/-2136393185 ((_arg_1 var963)) Int (- 1))\r\n(define-fun isMatch/-942142227 ((_arg_1 var2477) (_arg_2 (Array Int Int)) (_arg_3 Int)) Int 0)\r\n(define-fun setIndex/-453939609 ((BOUND_VARIABLE_560 var963) (BOUND_VARIABLE_561 Int)) void (as @void_0 void))\r\n(define-fun null-var2279 () var2279 (as @var2279_0 var2279))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var963 () var963 (as @var963_0 var963))\r\n(define-fun var2199 () var2279 (as @var2279_1 var2279))\r\n(define-fun var3200 () String \"\")\r\n(define-fun var1112 () var963 (as @var963_1 var963))\r\n(define-fun var1112!1 () var963 (as @var963_0 var963))\r\n(define-fun var3198!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38158336,
            "run_time": 0.10627889633178711,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var963:\n  ;;   var963!val!1 var963!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var963!val!1 () var963)\n  (declare-fun var963!val!0 () var963)\n  ;; cardinality constraint:\n  (forall ((x var963)) (or (= x var963!val!1) (= x var963!val!0)))\n  ;; -----------\n  ;; universe for var2477:\n  ;;   var2477!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2477!val!0 () var2477)\n  ;; cardinality constraint:\n  (forall ((x var2477)) (= x var2477!val!0))\n  ;; -----------\n  ;; universe for var2279:\n  ;;   var2279!val!0 var2279!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2279!val!0 () var2279)\n  (declare-fun var2279!val!1 () var2279)\n  ;; cardinality constraint:\n  (forall ((x var2279)) (or (= x var2279!val!0) (= x var2279!val!1)))\n  ;; -----------\n  (define-fun var528 () Int\n    (isMatch/-942142227\n  var2477_splitMatcher/-2008615519\n  (toCharArray/415275702 var3200)\n  (getIndex/-2136393185 var1112)))\n  (define-fun null-var963 () var963\n    var963!val!1)\n  (define-fun var2199 () var2279\n    var2279!val!0)\n  (define-fun var3257 () (Array Int Int)\n    (toCharArray/415275702 var3200))\n  (define-fun var3198 () Int\n    (+ (getIndex/-2136393185 var1112)\n   (isMatch/-942142227\n     var2477_splitMatcher/-2008615519\n     (toCharArray/415275702 var3200)\n     (getIndex/-2136393185 var1112))))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1112 () var963\n    var963!val!0)\n  (define-fun var3900 () Int\n    (getIndex/-2136393185 var1112))\n  (define-fun var1208 () Int\n    (getIndex/-2136393185 var1112))\n  (define-fun var2723 () var2477\n    var2477_splitMatcher/-2008615519)\n  (define-fun null-var2279 () var2279\n    var2279!val!1)\n  (define-fun var2477_splitMatcher/-2008615519 () var2477\n    var2477!val!0)\n  (define-fun var3200 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1112!1 () var963\n    var963!val!1)\n  (define-fun var3198!1 () Int\n    0)\n  (define-fun getIndex/-2136393185 ((x!0 var963)) Int\n    3)\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\n    ((as const (Array Int Int)) 8))\n  (define-fun isMatch/-942142227 ((x!0 var2477) (x!1 (Array Int Int)) (x!2 Int)) Int\n    0)\n  (define-fun setIndex/-453939609 ((x!0 var963) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 46 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 172888064,
            "run_time": 1.6777667999267578,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1112 () var963 var963!12)\r\n  (define-fun var3200 () String \"\\u{0}\")\r\n  (define-fun var2199 () var2279 var2279!8)\r\n  (define-fun null-var963 () var963 var963!6)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2279 () var2279 var2279!4)\r\n  (define-fun var2477_splitMatcher/-2008615519 () var2477 var2477!2)\r\n  (define-fun isMatch/-942142227 ((x!0 var2477) (x!1 (Array Int Int)) (x!2 Int)) Int (ite (and (and (= x!0 var2477!2) (= x!1 ((as const (Array Int Int)) 0))) (= x!2 15)) 0 0))\r\n  (define-fun getIndex/-2136393185 ((x!0 var963)) Int (ite (= x!0 var963!12) 15 0))\r\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int) (ite (= x!0 \"\\u{0}\") ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.String: char[] toCharArray()>"
        ],
        "api_count": {
            "<java.lang.String: char[] toCharArray()>": 1
        },
        "jimple_statements": [
            "r4 := @this: org.apache.commons.lang3.text.ExtendedMessageFormat",
            "r0 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.text.ParsePosition",
            "r1 = virtualinvoke r0.<java.lang.String: char[] toCharArray()>()",
            "$r3 = staticinvoke <org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher splitMatcher()>()",
            "$i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()",
            "$i5 = virtualinvoke $r3.<org.apache.commons.lang3.text.StrMatcher: int isMatch(char[],int)>(r1, $i0)",
            "$i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()",
            "$i2 = $i1 + $i5",
            "virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i2)",
            "if $i5 <= 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6756.smt2",
        "z3": {
            "memory": 32583680,
            "run_time": 0.1050729751586914,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 79 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10121216,
            "run_time": 0.031615495681762695,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35926016,
            "run_time": 0.1082296371459961,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 79 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 149704704,
            "run_time": 1.5537326335906982,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 23,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 3,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 1",
            "goto [?= z3 = $z6]",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 1",
            "$z8 = 1",
            "goto [?= z5 = $z8]",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = $i1 + $i0",
            "$i2 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i4 = $i3 + $i2",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4)",
            "if z3 == 0 goto virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "if z5 == 0 goto $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__getChars__-953998137\\5183.smt2",
        "z3": {
            "memory": 32952320,
            "run_time": 0.11318755149841309,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3343:\r\n  ;;   var3343!val!1 var3343!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3343!val!1 () var3343)\r\n  (declare-fun var3343!val!0 () var3343)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3343)) (or (= x var3343!val!1) (= x var3343!val!0)))\r\n  ;; -----------\r\n  (define-fun var992 () Int\r\n    (- 1))\r\n  (define-fun var2891 () var3343\r\n    var3343!val!0)\r\n  (define-fun null-var3343 () var3343\r\n    var3343!val!1)\r\n  (define-fun var3455 () Int\r\n    1)\r\n  (define-fun var2643 () Int\r\n    1)\r\n  (define-fun var1607 () var961\r\n    var961-init)\r\n  (define-fun var1593 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 0) 0 1))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var961-init () var961\r\n    var961!val!0)\r\n  (define-fun var1607!1 () var961\r\n    var961!val!0)\r\n  (define-fun var992!1 () Int\r\n    0)\r\n  (define-fun <init>/-25822930 ((x!0 var961) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2285568,
            "run_time": 0.031302452087402344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3343 is 2\r\n; rep: (as @var3343_0 var3343)\r\n; rep: (as @var3343_1 var3343)\r\n; cardinality of var961 is 1\r\n; rep: (as @var961_0 var961)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var961-init () var961 (as @var961_0 var961))\r\n(define-fun <init>/-25822930 ((BOUND_VARIABLE_537 var961) (BOUND_VARIABLE_538 Int)) void (as @void_0 void))\r\n(define-fun null-var3343 () var3343 (as @var3343_0 var3343))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var2891 () var3343 (as @var3343_1 var3343))\r\n(define-fun var992 () Int (- 1))\r\n(define-fun var3455 () Int 0)\r\n(define-fun var1593 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2643 () Int 0)\r\n(define-fun var1607!1 () var961 (as @var961_0 var961))\r\n(define-fun var992!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36675584,
            "run_time": 0.09229159355163574,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3343:\n  ;;   var3343!val!1 var3343!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3343!val!1 () var3343)\n  (declare-fun var3343!val!0 () var3343)\n  ;; cardinality constraint:\n  (forall ((x var3343)) (or (= x var3343!val!1) (= x var3343!val!0)))\n  ;; -----------\n  (define-fun var992 () Int\n    (- 1))\n  (define-fun var2891 () var3343\n    var3343!val!0)\n  (define-fun null-var3343 () var3343\n    var3343!val!1)\n  (define-fun var3455 () Int\n    1)\n  (define-fun var2643 () Int\n    1)\n  (define-fun var1607 () var961\n    var961-init)\n  (define-fun var1593 () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 0 1))\n  (define-fun null-Int () Int\n    0)\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var961-init () var961\n    var961!val!0)\n  (define-fun var1607!1 () var961\n    var961!val!0)\n  (define-fun var992!1 () Int\n    0)\n  (define-fun <init>/-25822930 ((x!0 var961) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140386304,
            "run_time": 1.5215060710906982,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2643 () Int 1)\r\n  (define-fun var1593 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun var3455 () Int 1)\r\n  (define-fun var992 () Int (- 1))\r\n  (define-fun var2891 () var3343 var3343!4)\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 0) 0 1))\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3343 () var3343 var3343!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>"
        ],
        "api_count": {
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "i1 := @parameter1: int",
            "r2 := @parameter2: char[]",
            "i3 := @parameter3: int",
            "if i0 >= 0 goto (branch)",
            "$r5 = new java.lang.StringIndexOutOfBoundsException",
            "specialinvoke $r5.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0)",
            "throw $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6763.smt2",
        "z3": {
            "memory": 32567296,
            "run_time": 0.10580301284790039,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 74 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2293760,
            "run_time": 0.030378103256225586,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36470784,
            "run_time": 0.09317183494567871,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 74 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 143265792,
            "run_time": 1.4254395961761475,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 3,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 0",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 0",
            "$z8 = 0",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "if $z9 != 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = $i1 + $i0",
            "$i2 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i4 = $i3 + $i2",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4)",
            "if z3 == 0 goto virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "if z5 == 0 goto $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__insert__854298602\\5543.smt2",
        "z3": {
            "memory": 32456704,
            "run_time": 0.09168767929077148,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3159:\r\n  ;;   var3159!val!1 var3159!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3159!val!1 () var3159)\r\n  (declare-fun var3159!val!0 () var3159)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3159)) (or (= x var3159!val!1) (= x var3159!val!0)))\r\n  ;; -----------\r\n  (define-fun var1617 () var3159\r\n    var3159!val!0)\r\n  (define-fun var899 () Int\r\n    1)\r\n  (define-fun var1442 () Int\r\n    1)\r\n  (define-fun var2274 () var3159\r\n    (insert/1427295636 var1617 var899 (String_valueOf/1240665136 var1442)))\r\n  (define-fun null-var3159 () var3159\r\n    var3159!val!1)\r\n  (define-fun var2558 () String\r\n    (String_valueOf/1240665136 var1442))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun insert/1427295636 ((x!0 var3159) (x!1 Int) (x!2 String)) var3159\r\n    var3159!val!1)\r\n  (define-fun String_valueOf/1240665136 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2310144,
            "run_time": 0.03113722801208496,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3159 is 2\r\n; rep: (as @var3159_0 var3159)\r\n; rep: (as @var3159_1 var3159)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/1240665136 ((BOUND_VARIABLE_468 Int)) String \"\")\r\n(define-fun insert/1427295636 ((BOUND_VARIABLE_471 var3159) (BOUND_VARIABLE_472 Int) (BOUND_VARIABLE_473 String)) var3159 (as @var3159_0 var3159))\r\n(define-fun null-var3159 () var3159 (as @var3159_0 var3159))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var1617 () var3159 (as @var3159_1 var3159))\r\n(define-fun var899 () Int 1)\r\n(define-fun var1442 () Int 1)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37187584,
            "run_time": 0.12222671508789062,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3159:\n  ;;   var3159!val!1 var3159!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3159!val!1 () var3159)\n  (declare-fun var3159!val!0 () var3159)\n  ;; cardinality constraint:\n  (forall ((x var3159)) (or (= x var3159!val!1) (= x var3159!val!0)))\n  ;; -----------\n  (define-fun var1617 () var3159\n    var3159!val!0)\n  (define-fun var2274 () var3159\n    (insert/1427295636 var1617 var899 (String_valueOf/1240665136 var1442)))\n  (define-fun var899 () Int\n    1)\n  (define-fun var1442 () Int\n    1)\n  (define-fun var2558 () String\n    (String_valueOf/1240665136 var1442))\n  (define-fun null-var3159 () var3159\n    var3159!val!1)\n  (define-fun null-Int () Int\n    0)\n  (define-fun insert/1427295636 ((x!0 var3159) (x!1 Int) (x!2 String)) var3159\n    var3159!val!1)\n  (define-fun String_valueOf/1240665136 ((x!0 Int)) String\n    \"\")\n)\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 133492736,
            "run_time": 1.3187007904052734,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1442 () Int 1)\r\n  (define-fun var899 () Int 1)\r\n  (define-fun var1617 () var3159 var3159!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3159 () var3159 var3159!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "i1 := @parameter1: int",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i1)",
            "$r2 = virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder insert(int,java.lang.String)>(i0, $r1)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__append__1781167778\\3481.smt2",
        "z3": {
            "memory": 32776192,
            "run_time": 0.17043256759643555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3669:\r\n  ;;   var3669!val!1 var3669!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3669!val!1 () var3669)\r\n  (declare-fun var3669!val!0 () var3669)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3669)) (or (= x var3669!val!1) (= x var3669!val!0)))\r\n  ;; -----------\r\n  (define-fun var2930 () var3669\r\n    var3669!val!0)\r\n  (define-fun null-var3669 () var3669\r\n    var3669!val!1)\r\n  (define-fun var786 () var3669\r\n    (append/1659648310 var2930 (String_valueOf/-987357574 var693)))\r\n  (define-fun var693 () Float64\r\n    (fp #b0 #b00000000000 #x0000000000001))\r\n  (define-fun null-Float64 () Float64\r\n    (_ +zero 11 53))\r\n  (define-fun var1961 () String\r\n    (String_valueOf/-987357574 var693))\r\n  (define-fun append/1659648310 ((x!0 var3669) (x!1 String)) var3669\r\n    var3669!val!1)\r\n  (define-fun String_valueOf/-987357574 ((x!0 Float64)) String\r\n    \"\")\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13795328,
            "run_time": 0.09176206588745117,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3669 is 2\r\n; rep: (as @var3669_0 var3669)\r\n; rep: (as @var3669_1 var3669)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-987357574 ((BOUND_VARIABLE_6837 (_ FloatingPoint 11 53))) String \"\")\r\n(define-fun append/1659648310 ((BOUND_VARIABLE_6840 var3669) (BOUND_VARIABLE_6841 String)) var3669 (as @var3669_0 var3669))\r\n(define-fun null-var3669 () var3669 (as @var3669_0 var3669))\r\n(define-fun null-Float64 () (_ FloatingPoint 11 53) (fp #b1 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun var2930 () var3669 (as @var3669_1 var3669))\r\n(define-fun var693 () (_ FloatingPoint 11 53) (fp #b0 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37163008,
            "run_time": 0.07560586929321289,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3669:\n  ;;   var3669!val!1 var3669!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3669!val!1 () var3669)\n  (declare-fun var3669!val!0 () var3669)\n  ;; cardinality constraint:\n  (forall ((x var3669)) (or (= x var3669!val!1) (= x var3669!val!0)))\n  ;; -----------\n  (define-fun var2930 () var3669\n    var3669!val!0)\n  (define-fun null-var3669 () var3669\n    var3669!val!1)\n  (define-fun var1961 () String\n    (String_valueOf/-987357574 var693))\n  (define-fun var693 () Float64\n    (fp #b0 #b00000000000 #x0000000000001))\n  (define-fun null-Float64 () Float64\n    (_ +zero 11 53))\n  (define-fun var786 () var3669\n    (append/1659648310 var2930 (String_valueOf/-987357574 var693)))\n  (define-fun append/1659648310 ((x!0 var3669) (x!1 String)) var3669\n    var3669!val!1)\n  (define-fun String_valueOf/-987357574 ((x!0 Float64)) String\n    \"\")\n)\n(error \"line 22 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 119119872,
            "run_time": 0.5433449745178223,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.text.StrBuilder__append__1781167778\\3481.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n256ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(double)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(double)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "d0 := @parameter0: double",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0)",
            "$r2 = virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder append(java.lang.String)>($r1)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__insert__-2080462441\\5518.smt2",
        "z3": {
            "memory": 32772096,
            "run_time": 0.6784689426422119,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1753:\r\n  ;;   var1753!val!0 var1753!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1753!val!0 () var1753)\r\n  (declare-fun var1753!val!1 () var1753)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1753)) (or (= x var1753!val!0) (= x var1753!val!1)))\r\n  ;; -----------\r\n  (define-fun null-Float32 () Float32\r\n    (_ +zero 8 24))\r\n  (define-fun var3582 () Int\r\n    1)\r\n  (define-fun null-var1753 () var1753\r\n    var1753!val!1)\r\n  (define-fun var1767 () String\r\n    (String_valueOf/-149410723 var3977))\r\n  (define-fun var1878 () var1753\r\n    (insert/1427295636 var1209 var3582 (String_valueOf/-149410723 var3977)))\r\n  (define-fun var1209 () var1753\r\n    var1753!val!0)\r\n  (define-fun var3977 () Float32\r\n    (fp #b0 #x00 #b00000000000000000000001))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun insert/1427295636 ((x!0 var1753) (x!1 Int) (x!2 String)) var1753\r\n    var1753!val!0)\r\n  (define-fun String_valueOf/-149410723 ((x!0 Float32)) String\r\n    \"\")\r\n)\r\n(error \"line 25 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9760768,
            "run_time": 0.07534527778625488,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1753 is 2\r\n; rep: (as @var1753_0 var1753)\r\n; rep: (as @var1753_1 var1753)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-149410723 ((BOUND_VARIABLE_4242 (_ FloatingPoint 8 24))) String \"\")\r\n(define-fun insert/1427295636 ((BOUND_VARIABLE_4245 var1753) (BOUND_VARIABLE_4246 Int) (BOUND_VARIABLE_4247 String)) var1753 (as @var1753_0 var1753))\r\n(define-fun null-var1753 () var1753 (as @var1753_0 var1753))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-Float32 () (_ FloatingPoint 8 24) (fp #b1 #b11111111 #b00000000000000000000000))\r\n(define-fun var1209 () var1753 (as @var1753_1 var1753))\r\n(define-fun var3582 () Int 0)\r\n(define-fun var3977 () (_ FloatingPoint 8 24) (fp #b0 #b11111111 #b00000000000000000000000))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36884480,
            "run_time": 0.0764923095703125,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1753:\n  ;;   var1753!val!0 var1753!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1753!val!0 () var1753)\n  (declare-fun var1753!val!1 () var1753)\n  ;; cardinality constraint:\n  (forall ((x var1753)) (or (= x var1753!val!0) (= x var1753!val!1)))\n  ;; -----------\n  (define-fun null-Float32 () Float32\n    (_ +zero 8 24))\n  (define-fun var3582 () Int\n    1)\n  (define-fun null-var1753 () var1753\n    var1753!val!1)\n  (define-fun var1878 () var1753\n    (insert/1427295636 var1209 var3582 (String_valueOf/-149410723 var3977)))\n  (define-fun var1209 () var1753\n    var1753!val!0)\n  (define-fun var1767 () String\n    (String_valueOf/-149410723 var3977))\n  (define-fun var3977 () Float32\n    (fp #b0 #x00 #b00000000000000000000001))\n  (define-fun null-Int () Int\n    0)\n  (define-fun insert/1427295636 ((x!0 var1753) (x!1 Int) (x!2 String)) var1753\n    var1753!val!0)\n  (define-fun String_valueOf/-149410723 ((x!0 Float32)) String\n    \"\")\n)\n(error \"line 25 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 120889344,
            "run_time": 1.1190376281738281,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.text.StrBuilder__insert__-2080462441\\5518.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n500ms\r\nSort Float32 not declared\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(float)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(float)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "f0 := @parameter1: float",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0)",
            "$r2 = virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder insert(int,java.lang.String)>(i0, $r1)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.SystemUtils__isOSNameMatch__1185647310\\891.smt2",
        "z3": {
            "memory": 32657408,
            "run_time": 0.24589037895202637,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2267 () Bool\r\n    (str.prefixof var1703 var2410))\r\n  (define-fun var2410 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1703 () String\r\n    \"B\")\r\n)\r\n(error \"line 21 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7622656,
            "run_time": 0.12375187873840332,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1305 is 1\r\n; rep: (as @var1305_0 var1305)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2410 () String \"\")\r\n(define-fun var1703 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38223872,
            "run_time": 1.0352306365966797,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2410 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1703 () String\n    \"\\u{0}\")\n  (define-fun var2267 () Bool\n    (str.prefixof var1703 var2410))\n)\n(error \"line 21 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132169728,
            "run_time": 1.410506248474121,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1703 () String \"\\u{0}\")\r\n  (define-fun var2410 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "if r0 != null goto $z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "return $z0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6757.smt2",
        "z3": {
            "memory": 31764480,
            "run_time": 0.7243587970733643,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 75 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9785344,
            "run_time": 0.07612729072570801,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35803136,
            "run_time": 0.0764923095703125,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 75 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150761472,
            "run_time": 1.5668561458587646,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 3,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 1",
            "goto [?= z3 = $z6]",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 0",
            "$z8 = 0",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "if $z9 != 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = $i1 + $i0",
            "$i2 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i4 = $i3 + $i2",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4)",
            "if z3 == 0 goto virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "if z5 == 0 goto $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6764.smt2",
        "z3": {
            "memory": 32595968,
            "run_time": 0.4804348945617676,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 77 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9756672,
            "run_time": 0.07534527778625488,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35893248,
            "run_time": 0.0764923095703125,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 77 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150396928,
            "run_time": 1.5668561458587646,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 23,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 3,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 0",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 0",
            "$z8 = 0",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = $i1 + $i0",
            "$i2 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i4 = $i3 + $i2",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4)",
            "if z3 == 0 goto virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "if z5 == 0 goto $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__append__1824646408\\3532.smt2",
        "z3": {
            "memory": 28758016,
            "run_time": 0.14819574356079102,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3708:\r\n  ;;   var3708!val!0 var3708!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3708!val!0 () var3708)\r\n  (declare-fun var3708!val!1 () var3708)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3708)) (or (= x var3708!val!0) (= x var3708!val!1)))\r\n  ;; -----------\r\n  (define-fun var3186 () Int\r\n    1)\r\n  (define-fun var820 () var3708\r\n    var3708!val!0)\r\n  (define-fun null-var3708 () var3708\r\n    var3708!val!1)\r\n  (define-fun var3906 () String\r\n    (String_valueOf/1240665136 var3186))\r\n  (define-fun var966 () var3708\r\n    (append/1659648310 var820 (String_valueOf/1240665136 var3186)))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun append/1659648310 ((x!0 var3708) (x!1 String)) var3708\r\n    var3708!val!0)\r\n  (define-fun String_valueOf/1240665136 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2285568,
            "run_time": 0.030300140380859375,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3708 is 2\r\n; rep: (as @var3708_0 var3708)\r\n; rep: (as @var3708_1 var3708)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/1240665136 ((BOUND_VARIABLE_444 Int)) String \"\")\r\n(define-fun append/1659648310 ((BOUND_VARIABLE_447 var3708) (BOUND_VARIABLE_448 String)) var3708 (as @var3708_0 var3708))\r\n(define-fun null-var3708 () var3708 (as @var3708_0 var3708))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var820 () var3708 (as @var3708_1 var3708))\r\n(define-fun var3186 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37675008,
            "run_time": 0.06019926071166992,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3708:\n  ;;   var3708!val!0 var3708!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3708!val!0 () var3708)\n  (declare-fun var3708!val!1 () var3708)\n  ;; cardinality constraint:\n  (forall ((x var3708)) (or (= x var3708!val!0) (= x var3708!val!1)))\n  ;; -----------\n  (define-fun var3906 () String\n    (String_valueOf/1240665136 var3186))\n  (define-fun var3186 () Int\n    1)\n  (define-fun var966 () var3708\n    (append/1659648310 var820 (String_valueOf/1240665136 var3186)))\n  (define-fun var820 () var3708\n    var3708!val!0)\n  (define-fun null-var3708 () var3708\n    var3708!val!1)\n  (define-fun null-Int () Int\n    0)\n  (define-fun append/1659648310 ((x!0 var3708) (x!1 String)) var3708\n    var3708!val!0)\n  (define-fun String_valueOf/1240665136 ((x!0 Int)) String\n    \"\")\n)\n(error \"line 22 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 131518464,
            "run_time": 1.5823447704315186,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3186 () Int 1)\r\n  (define-fun var820 () var3708 var3708!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3708 () var3708 var3708!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0)",
            "$r2 = virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder append(java.lang.String)>($r1)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__leftString__1906536263\\5672.smt2",
        "z3": {
            "memory": 32382976,
            "run_time": 0.417924165725708,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var245:\r\n  ;;   var245!val!1 var245!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var245!val!1 () var245)\r\n  (declare-fun var245!val!0 () var245)\r\n  ;; cardinality constraint:\r\n  (forall ((x var245)) (or (= x var245!val!1) (= x var245!val!0)))\r\n  ;; -----------\r\n  (define-fun var2991 () var245\r\n    var245!val!0)\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var1133 () String\r\n    String-init)\r\n  (define-fun var1766 () Int\r\n    (size/1389889126 var2991))\r\n  (define-fun var1965 () (Array Int Int)\r\n    (buffer/1389889126 var2991))\r\n  (define-fun null-var245 () var245\r\n    var245!val!1)\r\n  (define-fun var2714 () Int\r\n    (size/1389889126 var2991))\r\n  (define-fun var1622 () Int\r\n    1)\r\n  (define-fun var1965!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var2714!1 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1133!1 () String\r\n    \"\")\r\n  (define-fun var971 () Int\r\n    0)\r\n  (define-fun size/1389889126 ((x!0 var245)) Int\r\n    0)\r\n  (define-fun buffer/1389889126 ((x!0 var245)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9793536,
            "run_time": 0.07534527778625488,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var245 is 2\r\n; rep: (as @var245_0 var245)\r\n; rep: (as @var245_1 var245)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var245)) Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun buffer/1389889126 ((BOUND_VARIABLE_487 var245)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_492 String) (BOUND_VARIABLE_493 (Array Int Int)) (BOUND_VARIABLE_494 Int) (BOUND_VARIABLE_495 Int)) void (as @void_0 void))\r\n(define-fun null-var245 () var245 (as @var245_0 var245))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var2991 () var245 (as @var245_1 var245))\r\n(define-fun var1622 () Int 1)\r\n(define-fun var1133!1 () String \"\")\r\n(define-fun var1965!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var971 () Int 0)\r\n(define-fun var2714!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36835328,
            "run_time": 0.0764923095703125,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var245:\n  ;;   var245!val!1 var245!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var245!val!1 () var245)\n  (declare-fun var245!val!0 () var245)\n  ;; cardinality constraint:\n  (forall ((x var245)) (or (= x var245!val!1) (= x var245!val!0)))\n  ;; -----------\n  (define-fun var1965 () (Array Int Int)\n    (buffer/1389889126 var2991))\n  (define-fun var2714 () Int\n    (size/1389889126 var2991))\n  (define-fun var1133 () String\n    String-init)\n  (define-fun var2991 () var245\n    var245!val!0)\n  (define-fun null-Int () Int\n    2)\n  (define-fun null-var245 () var245\n    var245!val!1)\n  (define-fun var1766 () Int\n    (size/1389889126 var2991))\n  (define-fun var1622 () Int\n    1)\n  (define-fun var1965!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var2714!1 () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1133!1 () String\n    \"\")\n  (define-fun var971 () Int\n    0)\n  (define-fun size/1389889126 ((x!0 var245)) Int\n    0)\n  (define-fun buffer/1389889126 ((x!0 var245)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169218048,
            "run_time": 2.514540672302246,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1622 () Int 7)\r\n  (define-fun var2991 () var245 var245!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var245 () var245 var245!2)\r\n  (define-fun size/1389889126 ((x!0 var245)) Int (ite (= x!0 var245!4) 7 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: void <init>(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "if i0 > 0 goto $i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i0 < $i1 goto $r1 = new java.lang.String",
            "$r3 = new java.lang.String",
            "$r4 = r0.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "$i2 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>($r4, 0, $i2)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__rightString__-114914282\\5826.smt2",
        "z3": {
            "memory": 32768000,
            "run_time": 0.8941714763641357,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3037:\r\n  ;;   var3037!val!0 var3037!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3037!val!0 () var3037)\r\n  (declare-fun var3037!val!1 () var3037)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3037)) (or (= x var3037!val!0) (= x var3037!val!1)))\r\n  ;; -----------\r\n  (define-fun var3125 () Int\r\n    1)\r\n  (define-fun var1575 () var3037\r\n    var3037!val!0)\r\n  (define-fun var3686 () (Array Int Int)\r\n    (buffer/1389889126 var1575))\r\n  (define-fun var501 () Int\r\n    (- (size/1389889126 var1575) var3125))\r\n  (define-fun null-var3037 () var3037\r\n    var3037!val!1)\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var3142 () String\r\n    String-init)\r\n  (define-fun var2088 () Int\r\n    (size/1389889126 var1575))\r\n  (define-fun var1693 () Int\r\n    (size/1389889126 var1575))\r\n  (define-fun var3125!1 () Int\r\n    0)\r\n  (define-fun var3142!1 () String\r\n    \"\")\r\n  (define-fun var3686!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var501!1 () Int\r\n    0)\r\n  (define-fun size/1389889126 ((x!0 var3037)) Int\r\n    2)\r\n  (define-fun buffer/1389889126 ((x!0 var3037)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12660736,
            "run_time": 0.09079194068908691,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3037 is 2\r\n; rep: (as @var3037_0 var3037)\r\n; rep: (as @var3037_1 var3037)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var3037)) Int 2)\r\n(define-fun String-init () String \"\")\r\n(define-fun buffer/1389889126 ((BOUND_VARIABLE_492 var3037)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_497 String) (BOUND_VARIABLE_498 (Array Int Int)) (BOUND_VARIABLE_499 Int) (BOUND_VARIABLE_500 Int)) void (as @void_0 void))\r\n(define-fun null-var3037 () var3037 (as @var3037_0 var3037))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var1575 () var3037 (as @var3037_1 var3037))\r\n(define-fun var3125 () Int 1)\r\n(define-fun var3142!1 () String \"\")\r\n(define-fun var3686!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var501!1 () Int 0)\r\n(define-fun var3125!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35770368,
            "run_time": 0.0764923095703125,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3037:\n  ;;   var3037!val!0 var3037!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3037!val!0 () var3037)\n  (declare-fun var3037!val!1 () var3037)\n  ;; cardinality constraint:\n  (forall ((x var3037)) (or (= x var3037!val!0) (= x var3037!val!1)))\n  ;; -----------\n  (define-fun var3125 () Int\n    1)\n  (define-fun var1575 () var3037\n    var3037!val!0)\n  (define-fun var1693 () Int\n    (size/1389889126 var1575))\n  (define-fun var3142 () String\n    String-init)\n  (define-fun null-var3037 () var3037\n    var3037!val!1)\n  (define-fun null-Int () Int\n    2)\n  (define-fun var501 () Int\n    (- (size/1389889126 var1575) var3125))\n  (define-fun var3686 () (Array Int Int)\n    (buffer/1389889126 var1575))\n  (define-fun var2088 () Int\n    (size/1389889126 var1575))\n  (define-fun var3125!1 () Int\n    0)\n  (define-fun var3142!1 () String\n    \"\")\n  (define-fun var3686!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var501!1 () Int\n    0)\n  (define-fun size/1389889126 ((x!0 var3037)) Int\n    2)\n  (define-fun buffer/1389889126 ((x!0 var3037)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176713728,
            "run_time": 2.561830997467041,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3125 () Int 1)\r\n  (define-fun var1575 () var3037 var3037!8)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3037 () var3037 var3037!6)\r\n  (define-fun size/1389889126 ((x!0 var3037)) Int (ite (= x!0 var3037!8) 2 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: void <init>(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "if i0 > 0 goto $i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i0 < $i1 goto $r1 = new java.lang.String",
            "$r1 = new java.lang.String",
            "$r2 = r0.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "$i2 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i3 = $i2 - i0",
            "specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>($r2, $i3, i0)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.FormattableUtils__append__-1774956036\\3200.smt2",
        "z3": {
            "memory": 32612352,
            "run_time": 0.8467214107513428,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 87 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11538432,
            "run_time": 0.09079194068908691,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36020224,
            "run_time": 0.061975717544555664,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 87 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152109056,
            "run_time": 2.684967041015625,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 22,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>",
            "<java.lang.StringBuilder: int length()>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>": 1,
            "<java.lang.StringBuilder: int length()>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r4 := @parameter0: java.lang.CharSequence",
            "r5 := @parameter1: java.util.Formatter",
            "i1 := @parameter2: int",
            "i2 := @parameter3: int",
            "i0 := @parameter4: int",
            "c3 := @parameter5: char",
            "r0 := @parameter6: java.lang.CharSequence",
            "if r0 == null goto $z0 = 1",
            "$z0 = 1",
            "goto [?= $r1 = newarray (java.lang.Object)[2]]",
            "$r1 = newarray (java.lang.Object)[2]",
            "$r1[0] = r0",
            "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)",
            "$r1[1] = $r2",
            "staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, \"Specified ellipsis \\'%1$s\\' exceeds precision of %2$s\", $r1)",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>(r4)",
            "if i0 < 0 goto $i9 = i1 & 1",
            "$i9 = i1 & 1",
            "if $i9 != 1 goto $z1 = 0",
            "$z1 = 1",
            "goto [?= z2 = $z1]",
            "z2 = $z1",
            "i10 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>()",
            "if i10 >= i2 goto $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r6 = newarray (java.lang.Object)[0]",
            "virtualinvoke r5.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r7, $r6)",
            "return r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6765.smt2",
        "z3": {
            "memory": 10829824,
            "run_time": 0.2141728401184082,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 77 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2269184,
            "run_time": 0.014544963836669922,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35799040,
            "run_time": 0.07816457748413086,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 77 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 119017472,
            "run_time": 16.868210554122925,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 23,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 3,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 0",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 0",
            "$z8 = 0",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = $i1 + $i0",
            "$i2 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i4 = $i3 + $i2",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4)",
            "if z3 == 0 goto virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "if z5 == 0 goto $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.ExtendedMessageFormat__appendQuotedString__-224010761\\3237.smt2",
        "z3": {
            "memory": 33091584,
            "run_time": 0.47852611541748047,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1273:\r\n  ;;   var1273!val!0 var1273!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1273!val!0 () var1273)\r\n  (declare-fun var1273!val!1 () var1273)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1273)) (or (= x var1273!val!0) (= x var1273!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3028:\r\n  ;;   var3028!val!1 var3028!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3028!val!1 () var3028)\r\n  (declare-fun var3028!val!0 () var3028)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3028)) (or (= x var3028!val!1) (= x var3028!val!0)))\r\n  ;; -----------\r\n  (define-fun var3750 () Int\r\n    (select (toCharArray/415275702 var148) (getIndex/-2136393185 var1202)))\r\n  (define-fun null-var1273 () var1273\r\n    var1273!val!1)\r\n  (define-fun var3406 () var3953\r\n    var3953-init)\r\n  (define-fun null-var3028 () var3028\r\n    var3028!val!1)\r\n  (define-fun var3369 () (Array Int Int)\r\n    (toCharArray/415275702 var148))\r\n  (define-fun var3174 () Int\r\n    (getIndex/-2136393185 var1202))\r\n  (define-fun var852 () Int\r\n    (select (toCharArray/415275702 var148) (getIndex/-2136393185 var1202)))\r\n  (define-fun var2276 () String\r\n    \"!2!\")\r\n  (define-fun var3494 () Bool\r\n    var1273-$assertionsDisabled)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var3384 () var1273\r\n    var1273!val!0)\r\n  (define-fun var1202 () var3028\r\n    var3028!val!0)\r\n  (define-fun var148 () String\r\n    \"!0!\")\r\n  (define-fun var1273-$assertionsDisabled () Bool\r\n    false)\r\n  (define-fun var3953-init () var3953\r\n    var3953!val!0)\r\n  (define-fun var857 () String\r\n    \"\")\r\n  (define-fun var3406!1 () var3953\r\n    var3953!val!0)\r\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\r\n    ((as const (Array Int Int)) 3))\r\n  (define-fun getIndex/-2136393185 ((x!0 var3028)) Int\r\n    2)\r\n  (define-fun <init>/582965326 ((x!0 var3953) (x!1 var1976)) void\r\n    void!val!0)\r\n  (define-fun cast-from-String-to-var1976 ((x!0 String)) var1976\r\n    var1976!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2244608,
            "run_time": 0.014544963836669922,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1273 is 2\r\n; rep: (as @var1273_0 var1273)\r\n; rep: (as @var1273_1 var1273)\r\n; cardinality of var3021 is 1\r\n; rep: (as @var3021_0 var3021)\r\n; cardinality of var3028 is 2\r\n; rep: (as @var3028_0 var3028)\r\n; rep: (as @var3028_1 var3028)\r\n; cardinality of var3953 is 1\r\n; rep: (as @var3953_0 var3953)\r\n; cardinality of var1976 is 1\r\n; rep: (as @var1976_0 var1976)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun toCharArray/415275702 ((_arg_1 String)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun getIndex/-2136393185 ((_arg_1 var3028)) Int 0)\r\n(define-fun var3953-init () var3953 (as @var3953_0 var3953))\r\n(define-fun <init>/582965326 ((BOUND_VARIABLE_646 var3953) (BOUND_VARIABLE_647 var1976)) void (as @void_0 void))\r\n(define-fun cast-from-String-to-var1976 ((BOUND_VARIABLE_650 String)) var1976 (as @var1976_0 var1976))\r\n(define-fun null-var1273 () var1273 (as @var1273_0 var1273))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3028 () var3028 (as @var3028_0 var3028))\r\n(define-fun var1273-$assertionsDisabled () Bool false)\r\n(define-fun var3384 () var1273 (as @var1273_1 var1273))\r\n(define-fun var148 () String \"\")\r\n(define-fun var1202 () var3028 (as @var3028_1 var3028))\r\n(define-fun var2276 () String \"\")\r\n(define-fun var3406!1 () var3953 (as @var3953_0 var3953))\r\n(define-fun var857 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38191104,
            "run_time": 0.7622082233428955,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1273:\n  ;;   var1273!val!0 var1273!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1273!val!0 () var1273)\n  (declare-fun var1273!val!1 () var1273)\n  ;; cardinality constraint:\n  (forall ((x var1273)) (or (= x var1273!val!0) (= x var1273!val!1)))\n  ;; -----------\n  ;; universe for var3028:\n  ;;   var3028!val!1 var3028!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3028!val!1 () var3028)\n  (declare-fun var3028!val!0 () var3028)\n  ;; cardinality constraint:\n  (forall ((x var3028)) (or (= x var3028!val!1) (= x var3028!val!0)))\n  ;; -----------\n  (define-fun var1273-$assertionsDisabled () Bool\n    false)\n  (define-fun null-var1273 () var1273\n    var1273!val!1)\n  (define-fun var1202 () var3028\n    var3028!val!0)\n  (define-fun var3174 () Int\n    (getIndex/-2136393185 var1202))\n  (define-fun var2276 () String\n    \"\\u{0}\")\n  (define-fun var3406 () var3953\n    var3953-init)\n  (define-fun var148 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var3384 () var1273\n    var1273!val!0)\n  (define-fun var3494 () Bool\n    var1273-$assertionsDisabled)\n  (define-fun var3750 () Int\n    (select (toCharArray/415275702 var148) (getIndex/-2136393185 var1202)))\n  (define-fun var852 () Int\n    (select (toCharArray/415275702 var148) (getIndex/-2136393185 var1202)))\n  (define-fun null-var3028 () var3028\n    var3028!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3369 () (Array Int Int)\n    (toCharArray/415275702 var148))\n  (define-fun var3953-init () var3953\n    var3953!val!0)\n  (define-fun var857 () String\n    \"\")\n  (define-fun var3406!1 () var3953\n    var3953!val!0)\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\n    ((as const (Array Int Int)) 5))\n  (define-fun getIndex/-2136393185 ((x!0 var3028)) Int\n    4)\n  (define-fun <init>/582965326 ((x!0 var3953) (x!1 var1976)) void\n    void!val!0)\n  (define-fun cast-from-String-to-var1976 ((x!0 String)) var1976\n    var1976!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 128905216,
            "run_time": 16.89615488052368,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2276 () String \"\\u{0}\")\r\n  (define-fun var1202 () var3028 var3028!88)\r\n  (define-fun var148 () String \"\\u{1}\")\r\n  (define-fun var3384 () var1273 var1273!84)\r\n  (define-fun null-var3028 () var3028 var3028!82)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var1273 () var1273 var1273!80)\r\n  (define-fun var1273-$assertionsDisabled () Bool false)\r\n  (define-fun getIndex/-2136393185 ((x!0 var3028)) Int (ite (= x!0 var3028!88) 53 0))\r\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int) (ite (= x!0 \"\\u{1}\") (store ((as const (Array Int Int)) 55) 53 54) ((as const (Array Int Int)) 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: char[] toCharArray()>"
        ],
        "api_count": {
            "<java.lang.String: char[] toCharArray()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.ExtendedMessageFormat",
            "r3 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.text.ParsePosition",
            "r0 := @parameter2: java.lang.StringBuilder",
            "$z0 = <org.apache.commons.lang3.text.ExtendedMessageFormat: boolean $assertionsDisabled>",
            "if $z0 != 0 goto (branch)",
            "$r10 = virtualinvoke r3.<java.lang.String: char[] toCharArray()>()",
            "$i5 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()",
            "$c6 = $r10[$i5]",
            "$i9 = (int) $c6",
            "if $i9 == 39 goto (branch)",
            "$r13 = new java.lang.AssertionError",
            "specialinvoke $r13.<java.lang.AssertionError: void <init>(java.lang.Object)>(\"Quoted string must start with quote character\")",
            "throw $r13"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__append__55741621\\3684.smt2",
        "z3": {
            "memory": 32788480,
            "run_time": 1.0107362270355225,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3059:\r\n  ;;   var3059!val!0 var3059!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3059!val!0 () var3059)\r\n  (declare-fun var3059!val!1 () var3059)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3059)) (or (= x var3059!val!0) (= x var3059!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3578:\r\n  ;;   var3578!val!1 var3578!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3578!val!1 () var3578)\r\n  (declare-fun var3578!val!0 () var3578)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3578)) (or (= x var3578!val!1) (= x var3578!val!0)))\r\n  ;; -----------\r\n  (define-fun var172 () var3059\r\n    var3059!val!0)\r\n  (define-fun var1466 () String\r\n    (String_format/1339386452 var332 var707))\r\n  (define-fun null-__Array__Int__var3578__ () (Array Int var3578)\r\n    ((as const (Array Int var3578)) var3578!val!1))\r\n  (define-fun var683 () var3059\r\n    (append/1659648310 var172 (String_format/1339386452 var332 var707)))\r\n  (define-fun var332 () String\r\n    \"!0!\")\r\n  (define-fun null-var3059 () var3059\r\n    var3059!val!1)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var707 () (Array Int var3578)\r\n    ((as const (Array Int var3578)) var3578!val!0))\r\n  (define-fun append/1659648310 ((x!0 var3059) (x!1 String)) var3059\r\n    var3059!val!0)\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var3578))) String\r\n    \"\")\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9117696,
            "run_time": 0.09218072891235352,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3059 is 2\r\n; rep: (as @var3059_0 var3059)\r\n; rep: (as @var3059_1 var3059)\r\n; cardinality of var305 is 1\r\n; rep: (as @var305_0 var305)\r\n; cardinality of var3578 is 2\r\n; rep: (as @var3578_0 var3578)\r\n; rep: (as @var3578_1 var3578)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_526 String) (BOUND_VARIABLE_527 (Array Int var3578))) String \"\")\r\n(define-fun append/1659648310 ((BOUND_VARIABLE_530 var3059) (BOUND_VARIABLE_531 String)) var3059 (as @var3059_0 var3059))\r\n(define-fun null-var3059 () var3059 (as @var3059_0 var3059))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var3578__ () (Array Int var3578) (store ((as const (Array Int var3578)) (as @var3578_1 var3578)) 0 (as @var3578_0 var3578)))\r\n(define-fun var172 () var3059 (as @var3059_1 var3059))\r\n(define-fun var332 () String \"\")\r\n(define-fun var707 () (Array Int var3578) (store ((as const (Array Int var3578)) (as @var3578_0 var3578)) 0 (as @var3578_1 var3578)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37502976,
            "run_time": 0.1692500114440918,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3059:\n  ;;   var3059!val!0 var3059!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3059!val!0 () var3059)\n  (declare-fun var3059!val!1 () var3059)\n  ;; cardinality constraint:\n  (forall ((x var3059)) (or (= x var3059!val!0) (= x var3059!val!1)))\n  ;; -----------\n  ;; universe for var3578:\n  ;;   var3578!val!1 var3578!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3578!val!1 () var3578)\n  (declare-fun var3578!val!0 () var3578)\n  ;; cardinality constraint:\n  (forall ((x var3578)) (or (= x var3578!val!1) (= x var3578!val!0)))\n  ;; -----------\n  (define-fun null-__Array__Int__var3578__ () (Array Int var3578)\n    ((as const (Array Int var3578)) var3578!val!1))\n  (define-fun var332 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var683 () var3059\n    (append/1659648310 var172 (String_format/1339386452 var332 var707)))\n  (define-fun null-var3059 () var3059\n    var3059!val!1)\n  (define-fun var1466 () String\n    (String_format/1339386452 var332 var707))\n  (define-fun var707 () (Array Int var3578)\n    ((as const (Array Int var3578)) var3578!val!0))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var172 () var3059\n    var3059!val!0)\n  (define-fun append/1659648310 ((x!0 var3059) (x!1 String)) var3059\n    var3059!val!0)\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var3578))) String\n    \"\")\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150675456,
            "run_time": 20.701090574264526,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var707 () (Array Int var3578) ((as const (Array Int var3578)) var3578!0))\r\n  (define-fun var332 () String \"\\u{0}\")\r\n  (define-fun var172 () var3059 var3059!4)\r\n  (define-fun null-__Array__Int__var3578__ () (Array Int var3578) (store ((as const (Array Int var3578)) var3578!0) 0 var3578!1))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3059 () var3059 var3059!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "r1 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.Object[]",
            "$r3 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r2)",
            "$r4 = virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder append(java.lang.String)>($r3)",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__insert__-720418688\\5494.smt2",
        "z3": {
            "memory": 32829440,
            "run_time": 0.15497660636901855,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1592:\r\n  ;;   var1592!val!0 var1592!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1592!val!0 () var1592)\r\n  (declare-fun var1592!val!1 () var1592)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1592)) (or (= x var1592!val!0) (= x var1592!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var1592 () var1592\r\n    var1592!val!1)\r\n  (define-fun var3278 () Int\r\n    1)\r\n  (define-fun var1976 () String\r\n    (String_valueOf/-987357574 var1366))\r\n  (define-fun var1366 () Float64\r\n    (fp #b0 #b00000000000 #x0000000000001))\r\n  (define-fun null-Float64 () Float64\r\n    (_ +zero 11 53))\r\n  (define-fun var2068 () var1592\r\n    (insert/1427295636 var3062 var3278 (String_valueOf/-987357574 var1366)))\r\n  (define-fun var3062 () var1592\r\n    var1592!val!0)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun insert/1427295636 ((x!0 var1592) (x!1 Int) (x!2 String)) var1592\r\n    var1592!val!0)\r\n  (define-fun String_valueOf/-987357574 ((x!0 Float64)) String\r\n    \"\")\r\n)\r\n(error \"line 25 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12095488,
            "run_time": 0.4803485870361328,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1592 is 2\r\n; rep: (as @var1592_0 var1592)\r\n; rep: (as @var1592_1 var1592)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-987357574 ((BOUND_VARIABLE_6864 (_ FloatingPoint 11 53))) String \"\")\r\n(define-fun insert/1427295636 ((BOUND_VARIABLE_6867 var1592) (BOUND_VARIABLE_6868 Int) (BOUND_VARIABLE_6869 String)) var1592 (as @var1592_0 var1592))\r\n(define-fun null-var1592 () var1592 (as @var1592_0 var1592))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-Float64 () (_ FloatingPoint 11 53) (fp #b1 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun var3062 () var1592 (as @var1592_1 var1592))\r\n(define-fun var3278 () Int 0)\r\n(define-fun var1366 () (_ FloatingPoint 11 53) (fp #b0 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36319232,
            "run_time": 22.270095109939575,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1592:\n  ;;   var1592!val!0 var1592!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1592!val!0 () var1592)\n  (declare-fun var1592!val!1 () var1592)\n  ;; cardinality constraint:\n  (forall ((x var1592)) (or (= x var1592!val!0) (= x var1592!val!1)))\n  ;; -----------\n  (define-fun null-var1592 () var1592\n    var1592!val!1)\n  (define-fun var3278 () Int\n    1)\n  (define-fun var2068 () var1592\n    (insert/1427295636 var3062 var3278 (String_valueOf/-987357574 var1366)))\n  (define-fun var1366 () Float64\n    (fp #b0 #b00000000000 #x0000000000001))\n  (define-fun null-Float64 () Float64\n    (_ +zero 11 53))\n  (define-fun var1976 () String\n    (String_valueOf/-987357574 var1366))\n  (define-fun var3062 () var1592\n    var1592!val!0)\n  (define-fun null-Int () Int\n    0)\n  (define-fun insert/1427295636 ((x!0 var1592) (x!1 Int) (x!2 String)) var1592\n    var1592!val!0)\n  (define-fun String_valueOf/-987357574 ((x!0 Float64)) String\n    \"\")\n)\n(error \"line 25 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 119369728,
            "run_time": 3.065887451171875,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.text.StrBuilder__insert__-720418688\\5494.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n269ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(double)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(double)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "d0 := @parameter1: double",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(d0)",
            "$r2 = virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder insert(int,java.lang.String)>(i0, $r1)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrap__1615643201\\6457.smt2",
        "z3": {
            "memory": 32555008,
            "run_time": 2.8390331268310547,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2176 () Bool\r\n    (var2857_isEmpty/1595667738 var3689))\r\n  (define-fun var761 () String\r\n    (str.++ var3689 var2973 var3689))\r\n  (define-fun var2973 () String\r\n    \"A\")\r\n  (define-fun var3689 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1296 () String\r\n    (str.++ var3689 var2973))\r\n  (define-fun var1979 () Bool\r\n    (var2857_isEmpty/1595667738 var2973))\r\n  (define-fun var2857_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8933376,
            "run_time": 1.2110037803649902,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var187 is 1\r\n; rep: (as @var187_0 var187)\r\n; cardinality of var2857 is 1\r\n; rep: (as @var2857_0 var2857)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2857_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2973 () String \"\")\r\n(define-fun var3689 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37859328,
            "run_time": 2.7590084075927734,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2973 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1979 () Bool\n    (var2857_isEmpty/1595667738 var2973))\n  (define-fun var3689 () String\n    \"\\u{0}\")\n  (define-fun var1296 () String\n    (str.++ var3689 var2973))\n  (define-fun var2176 () Bool\n    (var2857_isEmpty/1595667738 var3689))\n  (define-fun var761 () String\n    (str.++ var3689 var2973 var3689))\n  (define-fun var2857_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164265984,
            "run_time": 0.926995038986206,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3689 () String \"\\u{0}\")\r\n  (define-fun var2973 () String \"\\u{1}\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var2857_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\\u{1}\") false (ite (= x!0 \"\\u{0}\") false true)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: java.lang.String concat(java.lang.String)>",
            "<java.lang.String: java.lang.String concat(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String concat(java.lang.String)>": 2
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $r2 = virtualinvoke r1.<java.lang.String: java.lang.String concat(java.lang.String)>(r0)",
            "$r2 = virtualinvoke r1.<java.lang.String: java.lang.String concat(java.lang.String)>(r0)",
            "$r3 = virtualinvoke $r2.<java.lang.String: java.lang.String concat(java.lang.String)>(r1)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__setCharAt__612671671\\5829.smt2",
        "z3": {
            "memory": 32948224,
            "run_time": 0.20312714576721191,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var460:\r\n  ;;   var460!val!1 var460!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var460!val!1 () var460)\r\n  (declare-fun var460!val!0 () var460)\r\n  ;; cardinality constraint:\r\n  (forall ((x var460)) (or (= x var460!val!1) (= x var460!val!0)))\r\n  ;; -----------\r\n  (define-fun var20 () Int\r\n    1)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var1387 () var2778\r\n    var2778-init)\r\n  (define-fun var3423 () Int\r\n    (- 1))\r\n  (define-fun null-var460 () var460\r\n    var460!val!1)\r\n  (define-fun var2694 () var460\r\n    var460!val!0)\r\n  (define-fun var1387!1 () var2778\r\n    var2778!val!0)\r\n  (define-fun var2778-init () var2778\r\n    var2778!val!0)\r\n  (define-fun var3423!1 () Int\r\n    0)\r\n  (define-fun <init>/-25822930 ((x!0 var2778) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12976128,
            "run_time": 1.871528148651123,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var460 is 2\r\n; rep: (as @var460_0 var460)\r\n; rep: (as @var460_1 var460)\r\n; cardinality of var2778 is 1\r\n; rep: (as @var2778_0 var2778)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2778-init () var2778 (as @var2778_0 var2778))\r\n(define-fun <init>/-25822930 ((BOUND_VARIABLE_469 var2778) (BOUND_VARIABLE_470 Int)) void (as @void_0 void))\r\n(define-fun null-var460 () var460 (as @var460_0 var460))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var2694 () var460 (as @var460_1 var460))\r\n(define-fun var3423 () Int (- 1))\r\n(define-fun var20 () Int 0)\r\n(define-fun var1387!1 () var2778 (as @var2778_0 var2778))\r\n(define-fun var3423!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33234944,
            "run_time": 19.30995273590088,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var460:\n  ;;   var460!val!1 var460!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var460!val!1 () var460)\n  (declare-fun var460!val!0 () var460)\n  ;; cardinality constraint:\n  (forall ((x var460)) (or (= x var460!val!1) (= x var460!val!0)))\n  ;; -----------\n  (define-fun var1387 () var2778\n    var2778-init)\n  (define-fun var20 () Int\n    1)\n  (define-fun null-Int () Int\n    0)\n  (define-fun var3423 () Int\n    (- 1))\n  (define-fun null-var460 () var460\n    var460!val!1)\n  (define-fun var2694 () var460\n    var460!val!0)\n  (define-fun var1387!1 () var2778\n    var2778!val!0)\n  (define-fun var2778-init () var2778\n    var2778!val!0)\n  (define-fun var3423!1 () Int\n    0)\n  (define-fun <init>/-25822930 ((x!0 var2778) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 127623168,
            "run_time": 3.8095359802246094,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var20 () Int 1)\r\n  (define-fun var3423 () Int (- 1))\r\n  (define-fun var2694 () var460 var460!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var460 () var460 var460!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>"
        ],
        "api_count": {
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "c2 := @parameter1: char",
            "if i0 < 0 goto $r0 = new java.lang.StringIndexOutOfBoundsException",
            "$r0 = new java.lang.StringIndexOutOfBoundsException",
            "specialinvoke $r0.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.DiffResult__toString__-305695673\\1212.smt2",
        "z3": {
            "memory": 32505856,
            "run_time": 60.00496697425842,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13144064,
            "run_time": 4.329617977142334,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3003 is 2\r\n; rep: (as @var3003_0 var3003)\r\n; rep: (as @var3003_1 var3003)\r\n; cardinality of var2094 is 2\r\n; rep: (as @var2094_0 var2094)\r\n; rep: (as @var2094_1 var2094)\r\n; cardinality of var3987 is 1\r\n; rep: (as @var3987_0 var3987)\r\n; cardinality of var1365 is 2\r\n; rep: (as @var1365_0 var1365)\r\n; rep: (as @var1365_1 var1365)\r\n; cardinality of var296 is 6\r\n; rep: (as @var296_0 var296)\r\n; rep: (as @var296_1 var296)\r\n; rep: (as @var296_2 var296)\r\n; rep: (as @var296_3 var296)\r\n; rep: (as @var296_4 var296)\r\n; rep: (as @var296_5 var296)\r\n; cardinality of var975 is 1\r\n; rep: (as @var975_0 var975)\r\n; cardinality of var1560 is 1\r\n; rep: (as @var1560_0 var1560)\r\n; cardinality of var3954 is 1\r\n; rep: (as @var3954_0 var3954)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun diffList/42022970 ((_arg_1 var3003)) var3987 (as @var3987_0 var3987))\r\n(define-fun var3987_isEmpty/-153543822 ((_arg_1 var3987)) Bool false)\r\n(define-fun var1365-init () var1365 (as @var1365_0 var1365))\r\n(define-fun lhs/42022970 ((BOUND_VARIABLE_786 var3003)) var296 (as @var296_0 var296))\r\n(define-fun <init>/-508054568 ((BOUND_VARIABLE_789 var1365) (BOUND_VARIABLE_790 var296) (BOUND_VARIABLE_791 var2094)) void (as @void_0 void))\r\n(define-fun rhs/42022970 ((BOUND_VARIABLE_794 var3003)) var296 (as @var296_0 var296))\r\n(define-fun var1560_bootstrap$/-799492777 ((BOUND_VARIABLE_797 var1365) (BOUND_VARIABLE_798 var1365)) var975 (as @var975_0 var975))\r\n(define-fun var3954_forEach/-1836413473 ((BOUND_VARIABLE_801 var3954) (BOUND_VARIABLE_802 var975)) void (as @void_0 void))\r\n(define-fun cast-from-var3987-to-var3954 ((BOUND_VARIABLE_805 var3987)) var3954 (as @var3954_0 var3954))\r\n(define-fun arr-var296-init () (Array Int var296) ((as const (Array Int var296)) (as @var296_0 var296)))\r\n(define-fun build/109755953 ((_arg_1 var1365)) String (ite (= (as @var1365_0 var1365) _arg_1) \"A\" \"B\"))\r\n(define-fun cast-from-String-to-var296 ((_arg_1 String)) var296 (ite (= \"differs from\" _arg_1) (as @var296_0 var296) (ite (= \"A\" _arg_1) (as @var296_2 var296) (as @var296_1 var296))))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_809 String) (BOUND_VARIABLE_810 (Array Int var296))) String \"\")\r\n(define-fun null-var3003 () var3003 (as @var3003_0 var3003))\r\n(define-fun null-var2094 () var2094 (as @var2094_0 var2094))\r\n(define-fun null-__Array__Int__var296__ () (Array Int var296) (store ((as const (Array Int var296)) (as @var296_1 var296)) 0 (as @var296_4 var296)))\r\n(define-fun var3069 () var3003 (as @var3003_1 var3003))\r\n(define-fun var1721 () var2094 (as @var2094_1 var2094))\r\n(define-fun var895!1 () var1365 (as @var1365_0 var1365))\r\n(define-fun var3382!1 () var296 (as @var296_0 var296))\r\n(define-fun var1721!1 () var2094 (as @var2094_0 var2094))\r\n(define-fun var3555!1 () var1365 (as @var1365_1 var1365))\r\n(define-fun var3288!1 () var296 (as @var296_0 var296))\r\n(define-fun var1721!2 () var2094 (as @var2094_0 var2094))\r\n(define-fun var1631!1 () var3987 (as @var3987_0 var3987))\r\n(define-fun var3224!1 () var975 (as @var975_0 var975))\r\n(define-fun var3491!1 () (Array Int var296) (store ((as const (Array Int var296)) (as @var296_0 var296)) 0 (as @var296_2 var296)))\r\n(define-fun var3491!2 () (Array Int var296) (store (store ((as const (Array Int var296)) (as @var296_2 var296)) 0 (as @var296_3 var296)) 1 (as @var296_0 var296)))\r\n(define-fun var3491!3 () (Array Int var296) (store (store ((as const (Array Int var296)) (as @var296_3 var296)) 0 (as @var296_5 var296)) 2 (as @var296_1 var296)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32100352,
            "run_time": 9.811292886734009,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 78 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 79 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173039616,
            "run_time": 1.8075213432312012,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3491!3 () (Array Int var296) (store ((as const (Array Int var296)) var296!76) 2 var296!62))\r\n  (define-fun var3491!2 () (Array Int var296) (store ((as const (Array Int var296)) var296!74) 1 var296!60))\r\n  (define-fun var3491!1 () (Array Int var296) (store ((as const (Array Int var296)) var296!78) 0 var296!66))\r\n  (define-fun var3555!1 () var1365 var1365!36)\r\n  (define-fun var895!1 () var1365 var1365!34)\r\n  (define-fun var1721 () var2094 var2094!32)\r\n  (define-fun var3069 () var3003 var3003!30)\r\n  (define-fun null-__Array__Int__var296__ () (Array Int var296) ((as const (Array Int var296)) var296!0))\r\n  (define-fun null-var2094 () var2094 var2094!28)\r\n  (define-fun null-var3003 () var3003 var3003!26)\r\n  (define-fun var296!66 () var296 (cast-from-String-to-var296 \"\\u{0}\"))\r\n  (define-fun var296!62 () var296 (cast-from-String-to-var296 \"\\u{1}\"))\r\n  (define-fun var296!60 () var296 (cast-from-String-to-var296 \"differs from\"))\r\n  (define-fun var3987!70 () var3987 (diffList/42022970 var3003!30))\r\n  (define-fun build/109755953 ((x!0 var1365)) String (ite (= x!0 var1365!34) \"\\u{0}\" (ite (= x!0 var1365!36) \"\\u{1}\" \"\")))\r\n  (define-fun var3987_isEmpty/-153543822 ((x!0 var3987)) Bool (ite (= x!0 var3987!70) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 13,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.builder.DiffResult",
            "r3 := @parameter0: org.apache.commons.lang3.builder.ToStringStyle",
            "$r1 = r0.<org.apache.commons.lang3.builder.DiffResult: java.util.List diffList>",
            "$z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>()",
            "if $z0 == 0 goto $r2 = new org.apache.commons.lang3.builder.ToStringBuilder",
            "$r2 = new org.apache.commons.lang3.builder.ToStringBuilder",
            "$r4 = r0.<org.apache.commons.lang3.builder.DiffResult: java.lang.Object lhs>",
            "specialinvoke $r2.<org.apache.commons.lang3.builder.ToStringBuilder: void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle)>($r4, r3)",
            "$r5 = new org.apache.commons.lang3.builder.ToStringBuilder",
            "$r6 = r0.<org.apache.commons.lang3.builder.DiffResult: java.lang.Object rhs>",
            "specialinvoke $r5.<org.apache.commons.lang3.builder.ToStringBuilder: void <init>(java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle)>($r6, r3)",
            "$r7 = r0.<org.apache.commons.lang3.builder.DiffResult: java.util.List diffList>",
            "$r8 = staticinvoke <org.apache.commons.lang3.builder.DiffResult$lambda_toString_0__87: java.util.function.Consumer bootstrap$(org.apache.commons.lang3.builder.ToStringBuilder,org.apache.commons.lang3.builder.ToStringBuilder)>($r2, $r5)",
            "interfaceinvoke $r7.<java.util.List: void forEach(java.util.function.Consumer)>($r8)",
            "$r9 = newarray (java.lang.Object)[3]",
            "$r10 = virtualinvoke $r2.<org.apache.commons.lang3.builder.ToStringBuilder: java.lang.String build()>()",
            "$r9[0] = $r10",
            "$r9[1] = \"differs from\"",
            "$r11 = virtualinvoke $r5.<org.apache.commons.lang3.builder.ToStringBuilder: java.lang.String build()>()",
            "$r9[2] = $r11",
            "$r12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"%s %s %s\", $r9)",
            "return $r12"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.FormattableUtils__append__-1774956036\\3225.smt2",
        "z3": {
            "memory": 32190464,
            "run_time": 0.15154194831848145,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 86 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12652544,
            "run_time": 2.486943244934082,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 31748096,
            "run_time": 23.43419122695923,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 86 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152313856,
            "run_time": 1.0234565734863281,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 22,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>",
            "<java.lang.StringBuilder: int length()>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>": 1,
            "<java.lang.StringBuilder: int length()>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r4 := @parameter0: java.lang.CharSequence",
            "r5 := @parameter1: java.util.Formatter",
            "i1 := @parameter2: int",
            "i2 := @parameter3: int",
            "i0 := @parameter4: int",
            "c3 := @parameter5: char",
            "r0 := @parameter6: java.lang.CharSequence",
            "if r0 == null goto $z0 = 1",
            "$z0 = 1",
            "goto [?= $r1 = newarray (java.lang.Object)[2]]",
            "$r1 = newarray (java.lang.Object)[2]",
            "$r1[0] = r0",
            "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(i0)",
            "$r1[1] = $r2",
            "staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, \"Specified ellipsis \\'%1$s\\' exceeds precision of %2$s\", $r1)",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>(r4)",
            "if i0 < 0 goto $i9 = i1 & 1",
            "$i9 = i1 & 1",
            "if $i9 != 1 goto $z1 = 0",
            "$z1 = 0",
            "z2 = $z1",
            "i10 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>()",
            "if i10 >= i2 goto $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r6 = newarray (java.lang.Object)[0]",
            "virtualinvoke r5.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>($r7, $r6)",
            "return r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.ExtendedMessageFormat__parseFormatDescription__-1500229437\\3439.smt2",
        "z3": {
            "memory": 33038336,
            "run_time": 2.7797560691833496,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1986:\r\n  ;;   var1986!val!1 var1986!val!2 var1986!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1986!val!1 () var1986)\r\n  (declare-fun var1986!val!2 () var1986)\r\n  (declare-fun var1986!val!0 () var1986)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1986))\r\n          (or (= x var1986!val!1) (= x var1986!val!2) (= x var1986!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2643:\r\n  ;;   var2643!val!0 var2643!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2643!val!0 () var2643)\r\n  (declare-fun var2643!val!1 () var2643)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2643)) (or (= x var2643!val!0) (= x var2643!val!1)))\r\n  ;; -----------\r\n  (define-fun var1148!1 () String\r\n    \"Unterminated format element at position \")\r\n  (define-fun var1385 () String\r\n    (str.++ var807!1\r\n        \"Unterminated format element at position \"\r\n        (str.from_int (getIndex/-2136393185 var1239))))\r\n  (define-fun var1294 () var2643\r\n    var2643!val!0)\r\n  (define-fun var2154 () Int\r\n    (str.len var970!1))\r\n  (define-fun var807 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var970 () String\r\n    \"\")\r\n  (define-fun var1239!1 () var1986\r\n    var1986!val!2)\r\n  (define-fun var530 () Int\r\n    (getIndex/-2136393185 var1239))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var298 () var73\r\n    var73-init)\r\n  (define-fun var1996 () String\r\n    (str.++ var807!1\r\n        \"Unterminated format element at position \"\r\n        (str.from_int (getIndex/-2136393185 var1239))))\r\n  (define-fun var970!1 () String\r\n    \"\")\r\n  (define-fun var1148 () String\r\n    (str.++ var807!1 \"Unterminated format element at position \"))\r\n  (define-fun null-var2643 () var2643\r\n    var2643!val!1)\r\n  (define-fun null-var1986 () var1986\r\n    var1986!val!1)\r\n  (define-fun var1140 () Int\r\n    1)\r\n  (define-fun var719 () Int\r\n    (getIndex/-2136393185 var1239!1))\r\n  (define-fun var884 () Int\r\n    (getIndex/-2136393185 var1239!1))\r\n  (define-fun var1239 () var1986\r\n    var1986!val!0)\r\n  (define-fun var807!2 () String\r\n    \"Unterminated format element at position \")\r\n  (define-fun var807!1 () String\r\n    \"\")\r\n  (define-fun var1294!1 () var2643\r\n    var2643!val!0)\r\n  (define-fun var73-init () var73\r\n    var73!val!0)\r\n  (define-fun var1996!1 () String\r\n    \"\")\r\n  (define-fun var298!1 () var73\r\n    var73!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getIndex/-2136393185 ((x!0 var1986)) Int\r\n    0)\r\n  (define-fun seekNonWs/-1252018043 ((x!0 var2643) (x!1 String) (x!2 var1986)) void\r\n    void!val!0)\r\n  (define-fun <init>/875830710 ((x!0 var73) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 72 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13824000,
            "run_time": 0.18532133102416992,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2643 is 2\r\n; rep: (as @var2643_0 var2643)\r\n; rep: (as @var2643_1 var2643)\r\n; cardinality of var3464 is 1\r\n; rep: (as @var3464_0 var3464)\r\n; cardinality of var1986 is 3\r\n; rep: (as @var1986_0 var1986)\r\n; rep: (as @var1986_1 var1986)\r\n; rep: (as @var1986_2 var1986)\r\n; cardinality of var73 is 1\r\n; rep: (as @var73_0 var73)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getIndex/-2136393185 ((_arg_1 var1986)) Int 0)\r\n(define-fun seekNonWs/-1252018043 ((BOUND_VARIABLE_1076 var2643) (BOUND_VARIABLE_1077 String) (BOUND_VARIABLE_1078 var1986)) void (as @void_0 void))\r\n(define-fun var73-init () var73 (as @var73_0 var73))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_1081 var73) (BOUND_VARIABLE_1082 String)) void (as @void_0 void))\r\n(define-fun null-var2643 () var2643 (as @var2643_0 var2643))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1986 () var1986 (as @var1986_0 var1986))\r\n(define-fun var1294 () var2643 (as @var2643_1 var2643))\r\n(define-fun var970 () String \"\")\r\n(define-fun var1239 () var1986 (as @var1986_1 var1986))\r\n(define-fun var1294!1 () var2643 (as @var2643_0 var2643))\r\n(define-fun var970!1 () String \"\")\r\n(define-fun var1239!1 () var1986 (as @var1986_2 var1986))\r\n(define-fun var807!1 () String \"\")\r\n(define-fun var807!2 () String \"Unterminated format element at position \")\r\n(define-fun var1148!1 () String \"Unterminated format element at position \")\r\n(define-fun var298!1 () var73 (as @var73_0 var73))\r\n(define-fun var1996!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38428672,
            "run_time": 5.85732889175415,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1986:\n  ;;   var1986!val!1 var1986!val!2 var1986!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1986!val!1 () var1986)\n  (declare-fun var1986!val!2 () var1986)\n  (declare-fun var1986!val!0 () var1986)\n  ;; cardinality constraint:\n  (forall ((x var1986))\n          (or (= x var1986!val!1) (= x var1986!val!2) (= x var1986!val!0)))\n  ;; -----------\n  ;; universe for var2643:\n  ;;   var2643!val!0 var2643!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2643!val!0 () var2643)\n  (declare-fun var2643!val!1 () var2643)\n  ;; cardinality constraint:\n  (forall ((x var2643)) (or (= x var2643!val!0) (= x var2643!val!1)))\n  ;; -----------\n  (define-fun var807!1 () String\n    \"\")\n  (define-fun var807!2 () String\n    \"Unterminated format element at position \")\n  (define-fun var1239 () var1986\n    var1986!val!0)\n  (define-fun var1140 () Int\n    1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1294 () var2643\n    var2643!val!0)\n  (define-fun var1385 () String\n    (str.++ var807!1\n        \"Unterminated format element at position \"\n        (str.from_int (getIndex/-2136393185 var1239))))\n  (define-fun var1148!1 () String\n    \"Unterminated format element at position \")\n  (define-fun var2154 () Int\n    (str.len var970!1))\n  (define-fun var530 () Int\n    (getIndex/-2136393185 var1239))\n  (define-fun var1996 () String\n    (str.++ var807!1\n        \"Unterminated format element at position \"\n        (str.from_int (getIndex/-2136393185 var1239))))\n  (define-fun var1148 () String\n    (str.++ var807!1 \"Unterminated format element at position \"))\n  (define-fun var298 () var73\n    var73-init)\n  (define-fun null-String () String\n    \"\")\n  (define-fun null-var2643 () var2643\n    var2643!val!1)\n  (define-fun var970 () String\n    \"\\u{0}\")\n  (define-fun null-var1986 () var1986\n    var1986!val!1)\n  (define-fun var884 () Int\n    (getIndex/-2136393185 var1239!1))\n  (define-fun var719 () Int\n    (getIndex/-2136393185 var1239!1))\n  (define-fun var970!1 () String\n    \"\")\n  (define-fun var1239!1 () var1986\n    var1986!val!2)\n  (define-fun var807 () String\n    String-init)\n  (define-fun var1294!1 () var2643\n    var2643!val!0)\n  (define-fun var73-init () var73\n    var73!val!0)\n  (define-fun var1996!1 () String\n    \"\")\n  (define-fun var298!1 () var73\n    var73!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun getIndex/-2136393185 ((x!0 var1986)) Int\n    0)\n  (define-fun seekNonWs/-1252018043 ((x!0 var2643) (x!1 String) (x!2 var1986)) void\n    void!val!0)\n  (define-fun <init>/875830710 ((x!0 var73) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 72 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 184000512,
            "run_time": 38.04667019844055,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2643/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.text.ExtendedMessageFormat__parseFormatDescription__-1500229437\\3439.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n\r\n34322ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.ExtendedMessageFormat",
            "r2 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.text.ParsePosition",
            "i0 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "specialinvoke r1.<org.apache.commons.lang3.text.ExtendedMessageFormat: void seekNonWs(java.lang.String,java.text.ParsePosition)>(r2, r0)",
            "i1 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "i7 = 1",
            "$i3 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "$i2 = virtualinvoke r2.<java.lang.String: int length()>()",
            "if $i3 >= $i2 goto $r10 = new java.lang.IllegalArgumentException",
            "$r10 = new java.lang.IllegalArgumentException",
            "$r9 = new java.lang.StringBuilder",
            "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unterminated format element at position \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r7)",
            "throw $r10"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__leftString__1906536263\\5676.smt2",
        "z3": {
            "memory": 33169408,
            "run_time": 0.3235495090484619,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3170:\r\n  ;;   var3170!val!1 var3170!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3170!val!1 () var3170)\r\n  (declare-fun var3170!val!0 () var3170)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3170)) (or (= x var3170!val!1) (= x var3170!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var3170 () var3170\r\n    var3170!val!1)\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var2289 () Int\r\n    1)\r\n  (define-fun var924 () String\r\n    String-init)\r\n  (define-fun var3712 () (Array Int Int)\r\n    (buffer/1389889126 var3763))\r\n  (define-fun var95 () Int\r\n    (size/1389889126 var3763))\r\n  (define-fun var3763 () var3170\r\n    var3170!val!0)\r\n  (define-fun var924!1 () String\r\n    \"\")\r\n  (define-fun var2289!1 () Int\r\n    0)\r\n  (define-fun var3712!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2560 () Int\r\n    0)\r\n  (define-fun size/1389889126 ((x!0 var3170)) Int\r\n    2)\r\n  (define-fun buffer/1389889126 ((x!0 var3170)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11280384,
            "run_time": 6.526492118835449,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3170 is 2\r\n; rep: (as @var3170_0 var3170)\r\n; rep: (as @var3170_1 var3170)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var3170)) Int 2)\r\n(define-fun String-init () String \"\")\r\n(define-fun buffer/1389889126 ((BOUND_VARIABLE_481 var3170)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_486 String) (BOUND_VARIABLE_487 (Array Int Int)) (BOUND_VARIABLE_488 Int) (BOUND_VARIABLE_489 Int)) void (as @void_0 void))\r\n(define-fun null-var3170 () var3170 (as @var3170_0 var3170))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var3763 () var3170 (as @var3170_1 var3170))\r\n(define-fun var2289 () Int 1)\r\n(define-fun var924!1 () String \"\")\r\n(define-fun var3712!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2560 () Int 0)\r\n(define-fun var2289!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32440320,
            "run_time": 60.6307954788208,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 28151808,
            "run_time": 64.88044381141663,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: void <init>(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "if i0 > 0 goto $i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i0 < $i1 goto $r1 = new java.lang.String",
            "$r1 = new java.lang.String",
            "$r2 = r0.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>($r2, 0, i0)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringBetween__-410933523\\5799.smt2",
        "z3": {
            "memory": 33165312,
            "run_time": 0.10649681091308594,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2522:\r\n  ;;   var2522!val!7 var2522!val!4 var2522!val!3 var2522!val!5 var2522!val!2 var2522!val!6 var2522!val!1 var2522!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2522!val!7 () var2522)\r\n  (declare-fun var2522!val!4 () var2522)\r\n  (declare-fun var2522!val!3 () var2522)\r\n  (declare-fun var2522!val!5 () var2522)\r\n  (declare-fun var2522!val!2 () var2522)\r\n  (declare-fun var2522!val!6 () var2522)\r\n  (declare-fun var2522!val!1 () var2522)\r\n  (declare-fun var2522!val!0 () var2522)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2522))\r\n          (or (= x var2522!val!7)\r\n              (= x var2522!val!4)\r\n              (= x var2522!val!3)\r\n              (= x var2522!val!5)\r\n              (= x var2522!val!2)\r\n              (= x var2522!val!6)\r\n              (= x var2522!val!1)\r\n              (= x var2522!val!0)))\r\n  ;; -----------\r\n  (define-fun var3138 () Int\r\n    (str.indexof var753 var668 0))\r\n  (define-fun null-__Array__Int__var2522__ () (Array Int var2522)\r\n    (store (store ((as const (Array Int var2522)) var2522!val!4) 5 var2522!val!6)\r\n       3\r\n       var2522!val!3))\r\n  (define-fun var982!3 () (Array Int var2522)\r\n    (store ((as const (Array Int var2522)) var2522!val!7) 2 var2522!val!0))\r\n  (define-fun var982!1 () (Array Int var2522)\r\n    (store ((as const (Array Int var2522)) var2522!val!0) 3 var2522!val!2))\r\n  (define-fun var668 () String\r\n    \"A\")\r\n  (define-fun var982 () (Array Int var2522)\r\n    arr-var2522-init)\r\n  (define-fun var982!2 () (Array Int var2522)\r\n    (store ((as const (Array Int var2522)) var2522!val!1) 4 var2522!val!5))\r\n  (define-fun var973 () Int\r\n    (- 1))\r\n  (define-fun null-String () String\r\n    \"B\")\r\n  (define-fun var3594 () Bool\r\n    (var529_allNotNull/1601190162 var982!3))\r\n  (define-fun var753 () String\r\n    \"\")\r\n  (define-fun var999 () String\r\n    \"\")\r\n  (define-fun arr-var2522-init () (Array Int var2522)\r\n    ((as const (Array Int var2522)) var2522!val!0))\r\n  (define-fun var529_allNotNull/1601190162 ((x!0 (Array Int var2522))) Bool\r\n    true)\r\n  (define-fun k!1 ((x!0 Int)) var2522\r\n    (ite (= x!0 5) var2522!val!6\r\n    (ite (= x!0 3) var2522!val!3\r\n      var2522!val!4)))\r\n  (define-fun cast-from-String-to-var2522 ((x!0 String)) var2522\r\n    (ite (= x!0 \"A\") var2522!val!1\r\n      var2522!val!0))\r\n  (define-fun k!2 ((x!0 Int)) var2522\r\n    (ite (= x!0 4) var2522!val!5\r\n      var2522!val!1))\r\n  (define-fun k!3 ((x!0 Int)) var2522\r\n    (ite (= x!0 2) var2522!val!0\r\n      var2522!val!7))\r\n)\r\n(error \"line 44 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13463552,
            "run_time": 0.07931017875671387,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1416 is 1\r\n; rep: (as @var1416_0 var1416)\r\n; cardinality of var2522 is 5\r\n; rep: (as @var2522_0 var2522)\r\n; rep: (as @var2522_1 var2522)\r\n; rep: (as @var2522_2 var2522)\r\n; rep: (as @var2522_3 var2522)\r\n; rep: (as @var2522_4 var2522)\r\n; cardinality of var529 is 1\r\n; rep: (as @var529_0 var529)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var2522-init () (Array Int var2522) ((as const (Array Int var2522)) (as @var2522_0 var2522)))\r\n(define-fun cast-from-String-to-var2522 ((_arg_1 String)) var2522 (ite (= \"A\" _arg_1) (as @var2522_0 var2522) (as @var2522_1 var2522)))\r\n(define-fun var529_allNotNull/1601190162 ((_arg_1 (Array Int var2522))) Bool true)\r\n(define-fun null-String () String \"B\")\r\n(define-fun null-__Array__Int__var2522__ () (Array Int var2522) (store ((as const (Array Int var2522)) (as @var2522_1 var2522)) 0 (as @var2522_3 var2522)))\r\n(define-fun var753 () String \"\")\r\n(define-fun var668 () String \"A\")\r\n(define-fun var999 () String \"\")\r\n(define-fun var982!1 () (Array Int var2522) (store ((as const (Array Int var2522)) (as @var2522_0 var2522)) 0 (as @var2522_1 var2522)))\r\n(define-fun var982!2 () (Array Int var2522) (store ((as const (Array Int var2522)) (as @var2522_2 var2522)) 1 (as @var2522_0 var2522)))\r\n(define-fun var982!3 () (Array Int var2522) (store (store ((as const (Array Int var2522)) (as @var2522_3 var2522)) 0 (as @var2522_4 var2522)) 2 (as @var2522_1 var2522)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 586919936,
            "run_time": 63.87691354751587,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 27320320,
            "run_time": 74.43508291244507,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: int indexOf(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.String",
            "r3 := @parameter2: java.lang.String",
            "$r0 = newarray (java.lang.Object)[3]",
            "$r0[0] = r1",
            "$r0[1] = r2",
            "$r0[2] = r3",
            "$z0 = staticinvoke <org.apache.commons.lang3.ObjectUtils: boolean allNotNull(java.lang.Object[])>($r0)",
            "if $z0 != 0 goto i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(r2)",
            "i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(r2)",
            "$i7 = (int) -1",
            "if i0 == $i7 goto return null",
            "return null"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6758.smt2",
        "z3": {
            "memory": 33144832,
            "run_time": 1.0863640308380127,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var39 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var983 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var1387 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var3735 () Bool\r\n    (ite (= 1 1) true false))\r\n  (define-fun var2011 () Int\r\n    (str.len var2505))\r\n  (define-fun var2420 () Bool\r\n    (var654_isEmpty/1595667738 var1346))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2598 () Bool\r\n    (str.prefixof var2505 var1346))\r\n  (define-fun var1484 () String\r\n    String-init)\r\n  (define-fun var3190 () Bool\r\n    (ite (= 1 1) true false))\r\n  (define-fun var2505 () String\r\n    \"A\")\r\n  (define-fun var3534 () Bool\r\n    (str.suffixof var2505 var1346))\r\n  (define-fun var1550 () Int\r\n    (+ (str.len var1346) (str.len var2505) (str.len var2505)))\r\n  (define-fun var184 () String\r\n    var1484!3)\r\n  (define-fun var1346 () String\r\n    \"BA\")\r\n  (define-fun var389 () Int\r\n    (str.len var2505))\r\n  (define-fun var2379 () Int\r\n    (+ (str.len var1346) (str.len var2505)))\r\n  (define-fun var730 () Int\r\n    (str.len var1346))\r\n  (define-fun var3990 () Bool\r\n    (var654_isEmpty/1595667738 var2505))\r\n  (define-fun var1484!1 () String\r\n    \"\")\r\n  (define-fun var1484!3 () String\r\n    \"ABA\")\r\n  (define-fun var1484!2 () String\r\n    \"A\")\r\n  (define-fun var1550!1 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var654_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun <init>/543593434 ((x!0 String) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 79 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14450688,
            "run_time": 2.0571069717407227,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1381 is 1\r\n; rep: (as @var1381_0 var1381)\r\n; cardinality of var654 is 1\r\n; rep: (as @var654_0 var654)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var654_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/543593434 ((BOUND_VARIABLE_1574 String) (BOUND_VARIABLE_1575 Int)) void (as @void_0 void))\r\n(define-fun null-String () String \"\")\r\n(define-fun var1346 () String \"AB\")\r\n(define-fun var2505 () String \"B\")\r\n(define-fun var1484!1 () String \"\")\r\n(define-fun var1550!1 () Int 0)\r\n(define-fun var1484!2 () String \"B\")\r\n(define-fun var1484!3 () String \"BAB\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 962789376,
            "run_time": 61.06049609184265,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 27439104,
            "run_time": 69.10823726654053,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 23,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 3,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 1",
            "goto [?= z3 = $z6]",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 0",
            "$z8 = 0",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = $i1 + $i0",
            "$i2 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i4 = $i3 + $i2",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4)",
            "if z3 == 0 goto virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "if z5 == 0 goto $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6749.smt2",
        "z3": {
            "memory": 33153024,
            "run_time": 0.10559296607971191,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2453 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var1388 () String\r\n    \"A\")\r\n  (define-fun var3820 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var1708 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var2571 () Bool\r\n    (var217_isEmpty/1595667738 var1295))\r\n  (define-fun var1295 () String\r\n    \"A\")\r\n  (define-fun var807 () Bool\r\n    (var217_isEmpty/1595667738 var1388))\r\n  (define-fun var3636 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun null-String () String\r\n    \"B\")\r\n  (define-fun var3116 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var1393 () Bool\r\n    (str.suffixof var1388 var1295))\r\n  (define-fun var519 () Bool\r\n    (str.prefixof var1388 var1295))\r\n  (define-fun var217_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 46 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12292096,
            "run_time": 0.045856475830078125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var365 is 1\r\n; rep: (as @var365_0 var365)\r\n; cardinality of var217 is 1\r\n; rep: (as @var217_0 var217)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var217_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1295 () String \"\")\r\n(define-fun var1388 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 1591451648,
            "run_time": 61.59301161766052,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 27697152,
            "run_time": 74.43508291244507,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 0",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 0",
            "$z8 = 0",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "if $z9 != 0 goto $r2 = new java.lang.StringBuilder",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringBefore__-686746837\\5774.smt2",
        "z3": {
            "memory": 33804288,
            "run_time": 0.1661083698272705,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3532 () String\r\n    \"A\")\r\n  (define-fun var3700 () Bool\r\n    (= (str.len var3532) 0))\r\n  (define-fun var3040 () Bool\r\n    (var3660_isEmpty/1595667738 var1621))\r\n  (define-fun var982 () String\r\n    (str.substr var1621 0 (- (str.indexof var1621 var3532 0) 0)))\r\n  (define-fun var3059 () Int\r\n    (str.indexof var1621 var3532 0))\r\n  (define-fun var1621 () String\r\n    \"A\")\r\n  (define-fun var3032 () Int\r\n    (- 1))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3660_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 39 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13238272,
            "run_time": 0.04636192321777344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3862 is 1\r\n; rep: (as @var3862_0 var3862)\r\n; cardinality of var3660 is 1\r\n; rep: (as @var3660_0 var3660)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3660_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"\")\r\n(define-fun var1621 () String \"A\")\r\n(define-fun var3532 () String \"A\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 1367826432,
            "run_time": 60.248855113983154,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 26583040,
            "run_time": 74.43408679962158,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: boolean isEmpty()>",
            "<java.lang.String: int indexOf(java.lang.String)>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1,
            "<java.lang.String: int indexOf(java.lang.String)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if r1 != null goto $z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "$z1 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "if $z1 == 0 goto i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1)",
            "i0 = virtualinvoke r0.<java.lang.String: int indexOf(java.lang.String)>(r1)",
            "$i2 = (int) -1",
            "if i0 != $i2 goto $r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0)",
            "$r2 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i0)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.event.EventUtils__addEventListener__1097310080\\2065.smt2",
        "z3": {
            "memory": 32845824,
            "run_time": 60.01495337486267,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 4100096,
            "run_time": 7.1963958740234375,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var636 is 3\r\n; rep: (as @var636_0 var636)\r\n; rep: (as @var636_1 var636)\r\n; rep: (as @var636_2 var636)\r\n; cardinality of var1114 is 2\r\n; rep: (as @var1114_0 var1114)\r\n; rep: (as @var1114_1 var1114)\r\n; cardinality of var273 is 1\r\n; rep: (as @var273_0 var273)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var273-init () var273 (as @var273_0 var273))\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_698 var636)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_701 ClassObject)) String \"\")\r\n(define-fun getSimpleName/-390194377 ((BOUND_VARIABLE_704 ClassObject)) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_707 var273) (BOUND_VARIABLE_708 String)) void (as @void_0 void))\r\n(define-fun null-var636 () var636 (as @var636_0 var636))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-var1114 () var1114 (as @var1114_0 var1114))\r\n(define-fun var493 () var636 (as @var636_1 var636))\r\n(define-fun var1865 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var2570 () var636 (as @var636_2 var636))\r\n(define-fun var3320 () var1114 (as @var1114_1 var1114))\r\n(define-fun var921!1 () String \"\")\r\n(define-fun var921!2 () String \"Class \")\r\n(define-fun var1636!1 () String \"Class \")\r\n(define-fun var42!1 () String \"Class  does not have a public add\")\r\n(define-fun var41!1 () String \"Class  does not have a public add\")\r\n(define-fun var3423!1 () String \"Class  does not have a public add method which takes a parameter of type \")\r\n(define-fun var2622!1 () String \"Class  does not have a public add method which takes a parameter of type \")\r\n(define-fun var2306!1 () String \"Class  does not have a public add method which takes a parameter of type .\")\r\n(define-fun var2929!1 () var273 (as @var273_0 var273))\r\n(define-fun var373!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35020800,
            "run_time": 60.19370913505554,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169402368,
            "run_time": 60.005104780197144,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 27,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "r2 := @parameter1: java.lang.Class",
            "r7 := @parameter2: java.lang.Object",
            "$r1 = new java.lang.StringBuilder",
            "$r27 := @caughtexception",
            "$r28 = new java.lang.IllegalArgumentException",
            "$r29 = new java.lang.StringBuilder",
            "specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()",
            "$r32 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Class \")",
            "$r30 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r31 = virtualinvoke $r30.<java.lang.Class: java.lang.String getName()>()",
            "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r31)",
            "$r35 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" does not have a public add\")",
            "$r34 = virtualinvoke r2.<java.lang.Class: java.lang.String getSimpleName()>()",
            "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r34)",
            "$r38 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" method which takes a parameter of type \")",
            "$r37 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>()",
            "$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37)",
            "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r28.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r41)",
            "throw $r28"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ArrayUtils__removeAll__1824646270\\5604.smt2",
        "z3": {
            "memory": 33050624,
            "run_time": 60.00446844100952,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13942784,
            "run_time": 7.701574802398682,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1710 is 2\r\n; rep: (as @var1710_0 var1710)\r\n; rep: (as @var1710_1 var1710)\r\n; cardinality of var3684 is 1\r\n; rep: (as @var3684_0 var3684)\r\n; cardinality of var227 is 1\r\n; rep: (as @var227_0 var227)\r\n; cardinality of var3097 is 1\r\n; rep: (as @var3097_0 var3097)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3684_getLength/1005357804 ((BOUND_VARIABLE_1922 var1710)) Int 0)\r\n(define-fun var3684_clone/1678787205 ((_arg_1 (Array Int Int))) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var227_sort/-179590612 ((_arg_1 (Array Int Int))) (Array Int Int) (store ((as const (Array Int Int)) 0) 0 (- 1)))\r\n(define-fun var3684_isNotEmpty/-1513181023 ((_arg_1 (Array Int Int))) Bool true)\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 1)\r\n(define-fun var3097-init () var3097 (as @var3097_0 var3097))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1107025377 ((BOUND_VARIABLE_1925 var3097) (BOUND_VARIABLE_1926 String)) void (as @void_0 void))\r\n(define-fun null-var1710 () var1710 (as @var1710_0 var1710))\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 2)))\r\n(define-fun var2784 () var1710 (as @var1710_1 var1710))\r\n(define-fun var1173 () (Array Int Int) (store ((as const (Array Int Int)) 0) 0 (- 1)))\r\n(define-fun var893!1 () String \"\")\r\n(define-fun var893!2 () String \"Index: \")\r\n(define-fun var1420!1 () String \"Index: \")\r\n(define-fun var1071!1 () String \"Index: , Length: \")\r\n(define-fun var507!1 () String \"Index: , Length: \")\r\n(define-fun var668!1 () var3097 (as @var3097_0 var3097))\r\n(define-fun var232!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35762176,
            "run_time": 60.000463247299194,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 189943808,
            "run_time": 60.02247476577759,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "r1 := @parameter1: int[]",
            "i0 = staticinvoke <org.apache.commons.lang3.ArrayUtils: int getLength(java.lang.Object)>(r0)",
            "i8 = 0",
            "$r2 = staticinvoke <org.apache.commons.lang3.ArrayUtils: int[] clone(int[])>(r1)",
            "r3 = staticinvoke <org.apache.commons.lang3.ArraySorter: int[] sort(int[])>($r2)",
            "$z0 = staticinvoke <org.apache.commons.lang3.ArrayUtils: boolean isNotEmpty(int[])>(r3)",
            "if $z0 == 0 goto $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "i9 = lengthof r3",
            "i10 = i0",
            "$i16 = (int) -1",
            "i9 = i9 + $i16",
            "if i9 < 0 goto $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "i11 = r3[i9]",
            "if i11 < 0 goto $r15 = new java.lang.IndexOutOfBoundsException",
            "$r15 = new java.lang.IndexOutOfBoundsException",
            "$r14 = new java.lang.StringBuilder",
            "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()",
            "$r9 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Index: \")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i11)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", Length: \")",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r15.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r13)",
            "throw $r15"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__append__816155021\\3557.smt2",
        "z3": {
            "memory": 26951680,
            "run_time": 0.47892284393310547,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1058:\r\n  ;;   var1058!val!1 var1058!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1058!val!1 () var1058)\r\n  (declare-fun var1058!val!0 () var1058)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1058)) (or (= x var1058!val!1) (= x var1058!val!0)))\r\n  ;; -----------\r\n  (define-fun var3125 () Int\r\n    1)\r\n  (define-fun var952 () var1058\r\n    var1058!val!0)\r\n  (define-fun var251 () String\r\n    (String_valueOf/-107395227 var3125))\r\n  (define-fun null-var1058 () var1058\r\n    var1058!val!1)\r\n  (define-fun var2114 () var1058\r\n    (append/1659648310 var952 (String_valueOf/-107395227 var3125)))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun append/1659648310 ((x!0 var1058) (x!1 String)) var1058\r\n    var1058!val!1)\r\n  (define-fun String_valueOf/-107395227 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10297344,
            "run_time": 1.632544755935669,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1058 is 2\r\n; rep: (as @var1058_0 var1058)\r\n; rep: (as @var1058_1 var1058)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-107395227 ((BOUND_VARIABLE_444 Int)) String \"\")\r\n(define-fun append/1659648310 ((BOUND_VARIABLE_447 var1058) (BOUND_VARIABLE_448 String)) var1058 (as @var1058_0 var1058))\r\n(define-fun null-var1058 () var1058 (as @var1058_0 var1058))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var952 () var1058 (as @var1058_1 var1058))\r\n(define-fun var3125 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 8249344,
            "run_time": 60.01286268234253,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 131702784,
            "run_time": 60.01796913146973,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(long)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(long)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "l0 := @parameter0: long",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l0)",
            "$r2 = virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder append(java.lang.String)>($r1)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.EnumUtils__lambda$getFirstEnumIgnoreCase$1__1385869481\\609.smt2",
        "z3": {
            "memory": 33157120,
            "run_time": 60.000232219696045,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13520896,
            "run_time": 0.5692994594573975,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2299 is 1\r\n; rep: (as @var2299_0 var2299)\r\n; cardinality of var202 is 2\r\n; rep: (as @var202_0 var202)\r\n; rep: (as @var202_1 var202)\r\n; cardinality of var2535 is 2\r\n; rep: (as @var2535_0 var2535)\r\n; rep: (as @var2535_1 var2535)\r\n; cardinality of var2405 is 1\r\n; rep: (as @var2405_0 var2405)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var202_apply/533941847 ((BOUND_VARIABLE_641 var202) (BOUND_VARIABLE_642 var2405)) var2405 (as @var2405_0 var2405))\r\n(define-fun cast-from-var2535-to-var2405 ((BOUND_VARIABLE_645 var2535)) var2405 (as @var2405_0 var2405))\r\n(define-fun cast-from-var2405-to-String ((BOUND_VARIABLE_648 var2405)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var202 () var202 (as @var202_0 var202))\r\n(define-fun null-var2535 () var2535 (as @var2535_0 var2535))\r\n(define-fun var2708 () String \"\")\r\n(define-fun var1732 () var202 (as @var202_1 var202))\r\n(define-fun var830 () var2535 (as @var2535_1 var2535))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 7348224,
            "run_time": 60.002301931381226,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 189460480,
            "run_time": 60.00239562988281,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.util.function.Function",
            "r2 := @parameter2: java.lang.Enum",
            "$r3 = interfaceinvoke r1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(r2)",
            "$r4 = (java.lang.String) $r3",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>($r4)",
            "return $z0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__insert__1427295636\\5608.smt2",
        "z3": {
            "memory": 32124928,
            "run_time": 0.11983180046081543,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1555:\r\n  ;;   var1555!val!1 var1555!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1555!val!1 () var1555)\r\n  (declare-fun var1555!val!0 () var1555)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1555)) (or (= x var1555!val!1) (= x var1555!val!0)))\r\n  ;; -----------\r\n  (define-fun var2944 () Int\r\n    1)\r\n  (define-fun var705 () var1555\r\n    var1555!val!0)\r\n  (define-fun null-var1555 () var1555\r\n    var1555!val!1)\r\n  (define-fun var94 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var569 () Int\r\n    (str.len var94))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var2944!1 () Int\r\n    0)\r\n  (define-fun var705!1 () var1555\r\n    var1555!val!1)\r\n  (define-fun validateIndex/-1908911276 ((x!0 var1555) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10432512,
            "run_time": 0.015551090240478516,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1555 is 2\r\n; rep: (as @var1555_0 var1555)\r\n; rep: (as @var1555_1 var1555)\r\n; cardinality of var3763 is 1\r\n; rep: (as @var3763_0 var3763)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun validateIndex/-1908911276 ((BOUND_VARIABLE_539 var1555) (BOUND_VARIABLE_540 Int)) void (as @void_0 void))\r\n(define-fun null-var1555 () var1555 (as @var1555_0 var1555))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var705 () var1555 (as @var1555_1 var1555))\r\n(define-fun var2944 () Int 0)\r\n(define-fun var94 () String \"\")\r\n(define-fun var705!1 () var1555 (as @var1555_0 var1555))\r\n(define-fun var2944!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 7147520,
            "run_time": 60.00313973426819,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165228544,
            "run_time": 60.02898645401001,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "r4 := @parameter1: java.lang.String",
            "virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: void validateIndex(int)>(i0)",
            "if r4 != null goto (branch)",
            "if r4 == null goto return r0",
            "i1 = virtualinvoke r4.<java.lang.String: int length()>()",
            "if i1 <= 0 goto return r0",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.MethodUtils__invokeMethod__538237164\\3323.smt2",
        "z3": {
            "memory": 33210368,
            "run_time": 60.007229804992676,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13684736,
            "run_time": 0.6348929405212402,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3818 is 4\r\n; rep: (as @var3818_0 var3818)\r\n; rep: (as @var3818_1 var3818)\r\n; rep: (as @var3818_2 var3818)\r\n; rep: (as @var3818_3 var3818)\r\n; cardinality of var3491 is 1\r\n; rep: (as @var3491_0 var3491)\r\n; cardinality of var2803 is 1\r\n; rep: (as @var2803_0 var2803)\r\n; cardinality of var2545 is 1\r\n; rep: (as @var2545_0 var2545)\r\n; cardinality of var2475 is 1\r\n; rep: (as @var2475_0 var2475)\r\n; cardinality of var3710 is 1\r\n; rep: (as @var3710_0 var3710)\r\n; cardinality of var3098 is 1\r\n; rep: (as @var3098_0 var3098)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var2803_requireNonNull/1378936425 ((BOUND_VARIABLE_809 var3818) (BOUND_VARIABLE_810 String)) var3818 (as @var3818_0 var3818))\r\n(define-fun var2545_nullToEmpty/1403447389 ((BOUND_VARIABLE_813 (Array Int ClassObject))) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun var2545_nullToEmpty/627354827 ((BOUND_VARIABLE_817 (Array Int var3818))) (Array Int var3818) ((as const (Array Int var3818)) (as @var3818_0 var3818)))\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_821 var3818)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var3710_getMatchingAccessibleMethod/856695000 ((BOUND_VARIABLE_824 ClassObject) (BOUND_VARIABLE_825 String) (BOUND_VARIABLE_826 (Array Int ClassObject))) var2475 (as @var2475_0 var2475))\r\n(define-fun var3098-init () var3098 (as @var3098_0 var3098))\r\n(define-fun String-init () String \"\")\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_829 ClassObject)) String \"\")\r\n(define-fun <init>/-966825728 ((BOUND_VARIABLE_832 var3098) (BOUND_VARIABLE_833 String)) void (as @void_0 void))\r\n(define-fun null-var3818 () var3818 (as @var3818_0 var3818))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var3818__ () (Array Int var3818) (store ((as const (Array Int var3818)) (as @var3818_1 var3818)) 0 (as @var3818_2 var3818)))\r\n(define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_1 ClassObject)) 0 (as @ClassObject_0 ClassObject)))\r\n(define-fun null-var2475 () var2475 (as @var2475_0 var2475))\r\n(define-fun var1811 () var3818 (as @var3818_1 var3818))\r\n(define-fun var2502 () Bool false)\r\n(define-fun var1665 () String \"\")\r\n(define-fun var2040 () (Array Int var3818) (store ((as const (Array Int var3818)) (as @var3818_0 var3818)) 0 (as @var3818_3 var3818)))\r\n(define-fun var408 () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)) 0 (as @ClassObject_1 ClassObject)))\r\n(define-fun var1811!1 () var3818 (as @var3818_0 var3818))\r\n(define-fun var2136 () String \"\")\r\n(define-fun var3977!1 () String \"\")\r\n(define-fun var3977!2 () String \"No such accessible method: \")\r\n(define-fun var3863!1 () String \"No such accessible method: \")\r\n(define-fun var577!1 () String \"No such accessible method: () on object: \")\r\n(define-fun var2857!1 () String \"No such accessible method: () on object: \")\r\n(define-fun var3043!1 () var3098 (as @var3098_0 var3098))\r\n(define-fun var718!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 7139328,
            "run_time": 60.01482844352722,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 187379712,
            "run_time": 60.01309537887573,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 22,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "z0 := @parameter1: boolean",
            "r2 := @parameter2: java.lang.String",
            "r12 := @parameter3: java.lang.Object[]",
            "r13 := @parameter4: java.lang.Class[]",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"object\")",
            "r14 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Class[] nullToEmpty(java.lang.Class[])>(r13)",
            "r15 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(r12)",
            "r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "if z0 == 0 goto r16 = \"No such accessible method: \"",
            "r16 = \"No such accessible method: \"",
            "r17 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.reflect.Method getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(r1, r2, r14)",
            "if r17 != null goto r18 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.Object[] toVarArgs(java.lang.reflect.Method,java.lang.Object[])>(r17, r15)",
            "$r4 = new java.lang.NoSuchMethodException",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"() on object: \")",
            "$r8 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>()",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r4.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r11)",
            "throw $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrap__509020530\\6449.smt2",
        "z3": {
            "memory": 30670848,
            "run_time": 0.5063512325286865,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var747 () String\r\n    String-init)\r\n  (define-fun var676 () Int\r\n    2)\r\n  (define-fun var2749 () Bool\r\n    (var3759_isEmpty/1595667738 var3234))\r\n  (define-fun var2136!1 () String\r\n    \"\")\r\n  (define-fun var3234 () String\r\n    \"\")\r\n  (define-fun var2136 () String\r\n    (str.++ (append/-1166366385 var747!1 var676) var3234))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var2043 () String\r\n    (append/-1166366385\r\n  (str.++ (append/-1166366385 var747!1 var676) var3234)\r\n  var676))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var638 () String\r\n    (append/-1166366385\r\n  (str.++ (append/-1166366385 var747!1 var676) var3234)\r\n  var676))\r\n  (define-fun var1414 () String\r\n    (append/-1166366385 var747!1 var676))\r\n  (define-fun var747!1 () String\r\n    \"\")\r\n  (define-fun var1414!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var747!2 () String\r\n    \"\")\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun var3759_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 49 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14356480,
            "run_time": 0.07625365257263184,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var650 is 1\r\n; rep: (as @var650_0 var650)\r\n; cardinality of var3759 is 1\r\n; rep: (as @var3759_0 var3759)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3759_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((_arg_1 String) (_arg_2 Int)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var3234 () String \"\")\r\n(define-fun var676 () Int (- 1))\r\n(define-fun var747!1 () String \"\")\r\n(define-fun var747!2 () String \"\")\r\n(define-fun var1414!1 () String \"\")\r\n(define-fun var2136!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 7352320,
            "run_time": 60.01299548149109,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 197115904,
            "run_time": 60.01082730293274,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "c0 := @parameter1: char",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "if c0 != 0 goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.Diff__toString__-1711683171\\775.smt2",
        "z3": {
            "memory": 25464832,
            "run_time": 0.41474437713623047,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3284:\r\n  ;;   var3284!val!1 var3284!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3284!val!1 () var3284)\r\n  (declare-fun var3284!val!0 () var3284)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3284)) (or (= x var3284!val!1) (= x var3284!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1141:\r\n  ;;   var1141!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1141!val!0 () var1141)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1141)) (= x var1141!val!0))\r\n  ;; -----------\r\n  ;; universe for var1144:\r\n  ;;   var1144!val!0 var1144!val!1 var1144!val!5 var1144!val!8 var1144!val!6 var1144!val!3 var1144!val!4 var1144!val!2 var1144!val!7 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1144!val!0 () var1144)\r\n  (declare-fun var1144!val!1 () var1144)\r\n  (declare-fun var1144!val!5 () var1144)\r\n  (declare-fun var1144!val!8 () var1144)\r\n  (declare-fun var1144!val!6 () var1144)\r\n  (declare-fun var1144!val!3 () var1144)\r\n  (declare-fun var1144!val!4 () var1144)\r\n  (declare-fun var1144!val!2 () var1144)\r\n  (declare-fun var1144!val!7 () var1144)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1144))\r\n          (or (= x var1144!val!0)\r\n              (= x var1144!val!1)\r\n              (= x var1144!val!5)\r\n              (= x var1144!val!8)\r\n              (= x var1144!val!6)\r\n              (= x var1144!val!3)\r\n              (= x var1144!val!4)\r\n              (= x var1144!val!2)\r\n              (= x var1144!val!7)))\r\n  ;; -----------\r\n  (define-fun null-__Array__Int__var1144__ () (Array Int var1144)\r\n    (store (store ((as const (Array Int var1144)) var1144!val!7) 4 var1144!val!5)\r\n       3\r\n       var1144!val!4))\r\n  (define-fun var1122 () String\r\n    (String_format/1339386452 \"[%s: %s, %s]\" var2310!3))\r\n  (define-fun null-var3284 () var3284\r\n    var3284!val!1)\r\n  (define-fun var2310!2 () (Array Int var1144)\r\n    (store ((as const (Array Int var1144)) var1144!val!1) 4 var1144!val!6))\r\n  (define-fun var2310!1 () (Array Int var1144)\r\n    (store ((as const (Array Int var1144)) var1144!val!0) 3 var1144!val!3))\r\n  (define-fun var2512 () String\r\n    (fieldName/1057785277 var3344))\r\n  (define-fun var3344 () var3284\r\n    var3284!val!0)\r\n  (define-fun var1060 () var1144\r\n    (getRight/-570391911 (cast-from-var3284-to-var1141 var3344)))\r\n  (define-fun var2539 () var1144\r\n    (getLeft/1053147166 (cast-from-var3284-to-var1141 var3344)))\r\n  (define-fun var2310 () (Array Int var1144)\r\n    arr-var1144-init)\r\n  (define-fun var2310!3 () (Array Int var1144)\r\n    (store ((as const (Array Int var1144)) var1144!val!8) 2 var1144!val!2))\r\n  (define-fun arr-var1144-init () (Array Int var1144)\r\n    ((as const (Array Int var1144)) var1144!val!0))\r\n  (define-fun getLeft/1053147166 ((x!0 var1141)) var1144\r\n    var1144!val!1)\r\n  (define-fun k!1 ((x!0 Int)) var1144\r\n    (ite (= x!0 4) var1144!val!5\r\n    (ite (= x!0 3) var1144!val!4\r\n      var1144!val!7)))\r\n  (define-fun cast-from-var3284-to-var1141 ((x!0 var3284)) var1141\r\n    var1141!val!0)\r\n  (define-fun k!2 ((x!0 Int)) var1144\r\n    (ite (= x!0 4) var1144!val!6\r\n      var1144!val!1))\r\n  (define-fun k!3 ((x!0 Int)) var1144\r\n    (ite (= x!0 2) var1144!val!2\r\n      var1144!val!8))\r\n  (define-fun fieldName/1057785277 ((x!0 var3284)) String\r\n    \"!0!\")\r\n  (define-fun getRight/-570391911 ((x!0 var1141)) var1144\r\n    var1144!val!2)\r\n  (define-fun cast-from-String-to-var1144 ((x!0 String)) var1144\r\n    var1144!val!0)\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var1144))) String\r\n    \"\")\r\n)\r\n(error \"line 40 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10665984,
            "run_time": 0.046564340591430664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3284 is 2\r\n; rep: (as @var3284_0 var3284)\r\n; rep: (as @var3284_1 var3284)\r\n; cardinality of var1144 is 6\r\n; rep: (as @var1144_0 var1144)\r\n; rep: (as @var1144_1 var1144)\r\n; rep: (as @var1144_2 var1144)\r\n; rep: (as @var1144_3 var1144)\r\n; rep: (as @var1144_4 var1144)\r\n; rep: (as @var1144_5 var1144)\r\n; cardinality of var1141 is 1\r\n; rep: (as @var1141_0 var1141)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var1144-init () (Array Int var1144) ((as const (Array Int var1144)) (as @var1144_0 var1144)))\r\n(define-fun fieldName/1057785277 ((_arg_1 var3284)) String \"\")\r\n(define-fun cast-from-String-to-var1144 ((_arg_1 String)) var1144 (as @var1144_2 var1144))\r\n(define-fun getLeft/1053147166 ((_arg_1 var1141)) var1144 (as @var1144_0 var1144))\r\n(define-fun cast-from-var3284-to-var1141 ((_arg_1 var3284)) var1141 (as @var1141_0 var1141))\r\n(define-fun getRight/-570391911 ((_arg_1 var1141)) var1144 (as @var1144_1 var1144))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_651 String) (BOUND_VARIABLE_652 (Array Int var1144))) String \"\")\r\n(define-fun null-var3284 () var3284 (as @var3284_0 var3284))\r\n(define-fun null-__Array__Int__var1144__ () (Array Int var1144) (store ((as const (Array Int var1144)) (as @var1144_1 var1144)) 0 (as @var1144_4 var1144)))\r\n(define-fun var3344 () var3284 (as @var3284_1 var3284))\r\n(define-fun var2310!1 () (Array Int var1144) (store ((as const (Array Int var1144)) (as @var1144_0 var1144)) 0 (as @var1144_2 var1144)))\r\n(define-fun var2310!2 () (Array Int var1144) (store (store ((as const (Array Int var1144)) (as @var1144_2 var1144)) 0 (as @var1144_3 var1144)) 1 (as @var1144_0 var1144)))\r\n(define-fun var2310!3 () (Array Int var1144) (store (store ((as const (Array Int var1144)) (as @var1144_3 var1144)) 0 (as @var1144_5 var1144)) 2 (as @var1144_1 var1144)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 7839744,
            "run_time": 60.013267040252686,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176922624,
            "run_time": 60.02642273902893,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.Diff",
            "$r0 = newarray (java.lang.Object)[3]",
            "$r2 = r1.<org.apache.commons.lang3.builder.Diff: java.lang.String fieldName>",
            "$r0[0] = $r2",
            "$r3 = virtualinvoke r1.<org.apache.commons.lang3.builder.Diff: java.lang.Object getLeft()>()",
            "$r0[1] = $r3",
            "$r4 = virtualinvoke r1.<org.apache.commons.lang3.builder.Diff: java.lang.Object getRight()>()",
            "$r0[2] = $r4",
            "$r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"[%s: %s, %s]\", $r0)",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.MethodUtils__invokeExactMethod__-214879133\\3147.smt2",
        "z3": {
            "memory": 32878592,
            "run_time": 60.00774621963501,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13787136,
            "run_time": 0.07667899131774902,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3191 is 4\r\n; rep: (as @var3191_0 var3191)\r\n; rep: (as @var3191_1 var3191)\r\n; rep: (as @var3191_2 var3191)\r\n; rep: (as @var3191_3 var3191)\r\n; cardinality of var1693 is 1\r\n; rep: (as @var1693_0 var1693)\r\n; cardinality of var2182 is 1\r\n; rep: (as @var2182_0 var2182)\r\n; cardinality of var1227 is 1\r\n; rep: (as @var1227_0 var1227)\r\n; cardinality of var2435 is 1\r\n; rep: (as @var2435_0 var2435)\r\n; cardinality of var218 is 1\r\n; rep: (as @var218_0 var218)\r\n; cardinality of var450 is 1\r\n; rep: (as @var450_0 var450)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var2182_requireNonNull/1378936425 ((BOUND_VARIABLE_768 var3191) (BOUND_VARIABLE_769 String)) var3191 (as @var3191_0 var3191))\r\n(define-fun var1227_nullToEmpty/627354827 ((BOUND_VARIABLE_772 (Array Int var3191))) (Array Int var3191) ((as const (Array Int var3191)) (as @var3191_0 var3191)))\r\n(define-fun var1227_nullToEmpty/1403447389 ((BOUND_VARIABLE_776 (Array Int ClassObject))) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_780 var3191)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var218_getAccessibleMethod/841246421 ((BOUND_VARIABLE_783 ClassObject) (BOUND_VARIABLE_784 String) (BOUND_VARIABLE_785 (Array Int ClassObject))) var2435 (as @var2435_0 var2435))\r\n(define-fun var450-init () var450 (as @var450_0 var450))\r\n(define-fun String-init () String \"\")\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_788 ClassObject)) String \"\")\r\n(define-fun <init>/-966825728 ((BOUND_VARIABLE_791 var450) (BOUND_VARIABLE_792 String)) void (as @void_0 void))\r\n(define-fun null-var3191 () var3191 (as @var3191_0 var3191))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var3191__ () (Array Int var3191) (store ((as const (Array Int var3191)) (as @var3191_1 var3191)) 0 (as @var3191_2 var3191)))\r\n(define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_1 ClassObject)) 0 (as @ClassObject_0 ClassObject)))\r\n(define-fun null-var2435 () var2435 (as @var2435_0 var2435))\r\n(define-fun var2183 () var3191 (as @var3191_1 var3191))\r\n(define-fun var2814 () String \"\")\r\n(define-fun var2915 () (Array Int var3191) (store ((as const (Array Int var3191)) (as @var3191_0 var3191)) 0 (as @var3191_3 var3191)))\r\n(define-fun var3869 () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)) 0 (as @ClassObject_1 ClassObject)))\r\n(define-fun var2183!1 () var3191 (as @var3191_0 var3191))\r\n(define-fun var1588 () String \"\")\r\n(define-fun var374!1 () String \"\")\r\n(define-fun var374!2 () String \"No such accessible method: \")\r\n(define-fun var740!1 () String \"No such accessible method: \")\r\n(define-fun var1056!1 () String \"No such accessible method: () on object: \")\r\n(define-fun var1271!1 () String \"No such accessible method: () on object: \")\r\n(define-fun var1545!1 () var450 (as @var450_0 var450))\r\n(define-fun var2352!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 7839744,
            "run_time": 60.01424956321716,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 183808000,
            "run_time": 60.02814817428589,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 19,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "r2 := @parameter1: java.lang.String",
            "r13 := @parameter2: java.lang.Object[]",
            "r14 := @parameter3: java.lang.Class[]",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"object\")",
            "r15 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(r13)",
            "r16 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Class[] nullToEmpty(java.lang.Class[])>(r14)",
            "r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "r3 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.reflect.Method getAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(r1, r2, r16)",
            "if r3 != null goto $r4 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, r15)",
            "$r5 = new java.lang.NoSuchMethodException",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No such accessible method: \")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"() on object: \")",
            "$r9 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>()",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r5.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r12)",
            "throw $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.FormattableUtils__toString__-1651190093\\3258.smt2",
        "z3": {
            "memory": 27635712,
            "run_time": 36.139225244522095,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var955:\r\n  ;;   var955!val!2 var955!val!0 var955!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var955!val!2 () var955)\r\n  (declare-fun var955!val!0 () var955)\r\n  (declare-fun var955!val!1 () var955)\r\n  ;; cardinality constraint:\r\n  (forall ((x var955))\r\n          (or (= x var955!val!2) (= x var955!val!0) (= x var955!val!1)))\r\n  ;; -----------\r\n  ;; universe for var664:\r\n  ;;   var664!val!1 var664!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var664!val!1 () var664)\r\n  (declare-fun var664!val!0 () var664)\r\n  ;; cardinality constraint:\r\n  (forall ((x var664)) (or (= x var664!val!1) (= x var664!val!0)))\r\n  ;; -----------\r\n  (define-fun var2167 () var664\r\n    var664!val!0)\r\n  (define-fun null-__Array__Int__var955__ () (Array Int var955)\r\n    ((as const (Array Int var955)) var955!val!2))\r\n  (define-fun var2182 () (Array Int var955)\r\n    arr-var955-init)\r\n  (define-fun var2476 () String\r\n    (String_format/1339386452 \"%s\" var2182!1))\r\n  (define-fun var2182!1 () (Array Int var955)\r\n    (store ((as const (Array Int var955)) var955!val!1) 0 var955!val!0))\r\n  (define-fun null-var664 () var664\r\n    var664!val!1)\r\n  (define-fun arr-var955-init () (Array Int var955)\r\n    ((as const (Array Int var955)) var955!val!0))\r\n  (define-fun cast-from-var664-to-var955 ((x!0 var664)) var955\r\n    var955!val!0)\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var955))) String\r\n    \"\")\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11984896,
            "run_time": 60.01488661766052,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34779136,
            "run_time": 43.51539373397827,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var955:\n  ;;   var955!val!2 var955!val!0 var955!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var955!val!2 () var955)\n  (declare-fun var955!val!0 () var955)\n  (declare-fun var955!val!1 () var955)\n  ;; cardinality constraint:\n  (forall ((x var955))\n          (or (= x var955!val!2) (= x var955!val!0) (= x var955!val!1)))\n  ;; -----------\n  ;; universe for var664:\n  ;;   var664!val!1 var664!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var664!val!1 () var664)\n  (declare-fun var664!val!0 () var664)\n  ;; cardinality constraint:\n  (forall ((x var664)) (or (= x var664!val!1) (= x var664!val!0)))\n  ;; -----------\n  (define-fun var2167 () var664\n    var664!val!0)\n  (define-fun var2182!1 () (Array Int var955)\n    (store ((as const (Array Int var955)) var955!val!0) 2 var955!val!1))\n  (define-fun var2182 () (Array Int var955)\n    arr-var955-init)\n  (define-fun null-__Array__Int__var955__ () (Array Int var955)\n    ((as const (Array Int var955)) var955!val!2))\n  (define-fun null-var664 () var664\n    var664!val!1)\n  (define-fun var2476 () String\n    (String_format/1339386452 \"%s\" var2182!1))\n  (define-fun arr-var955-init () (Array Int var955)\n    ((as const (Array Int var955)) var955!val!0))\n  (define-fun cast-from-var664-to-var955 ((x!0 var664)) var955\n    var955!val!0)\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var955))) String\n    \"\")\n)\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154791936,
            "run_time": 6.669414758682251,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2182!1 () (Array Int var955) (store ((as const (Array Int var955)) var955!18) 0 var955!16))\r\n  (define-fun var2167 () var664 var664!4)\r\n  (define-fun null-__Array__Int__var955__ () (Array Int var955) ((as const (Array Int var955)) var955!0))\r\n  (define-fun null-var664 () var664 var664!2)\r\n  (define-fun var955!16 () var955 (cast-from-var664-to-var955 var664!4))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.util.Formattable",
            "$r0 = newarray (java.lang.Object)[1]",
            "$r0[0] = r1",
            "$r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"%s\", $r0)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.TypeLiteral__\u300ainit\u300b__2023056512\\2814.smt2",
        "z3": {
            "memory": 33140736,
            "run_time": 60.002888679504395,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14430208,
            "run_time": 60.002716302871704,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36925440,
            "run_time": 60.022063970565796,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 171593728,
            "run_time": 28.413668155670166,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var735!3 () var3237 var3237!98)\r\n  (define-fun var649!2 () (Array Int var2205) (store ((as const (Array Int var2205)) var2205!158) 1 var2205!132))\r\n  (define-fun var649!1 () (Array Int var2205) (store ((as const (Array Int var2205)) var2205!156) 0 var2205!120))\r\n  (define-fun var735!2 () var3237 var3237!96)\r\n  (define-fun var2411!2 () (Array Int var2205) (store ((as const (Array Int var2205)) var2205!154) 1 var2205!124))\r\n  (define-fun var2411!1 () (Array Int var2205) (store ((as const (Array Int var2205)) var2205!152) 0 var2205!136))\r\n  (define-fun var735!1 () var3237 var3237!94)\r\n  (define-fun var735 () var3237 var3237!92)\r\n  (define-fun null-__Array__Int__var2205__ () (Array Int var2205) ((as const (Array Int var2205)) var2205!0))\r\n  (define-fun var3237-T () var86 var86!90)\r\n  (define-fun null-var3237 () var3237 var3237!88)\r\n  (define-fun var3237!class () ClassObject ClassObject!86)\r\n  (define-fun var2205!130 () var2205 (abbrev_32 0))\r\n  (define-fun ClassObject!128 () ClassObject (value/527982463 var3237!96))\r\n  (define-fun var2205!130 () var2205 (var1532_notNull/-1935316562 var2205!150 \"%s does not assign type parameter %s\" (store ((as const (Array Int var2205)) var2205!154) 1 var2205!124)))\r\n  (define-fun var2205!132 () var2205 (cast-from-String-to-var2205 \"\\u{1}\"))\r\n  (define-fun var2205!124 () var2205 (cast-from-String-to-var2205 \"\\u{3}\"))\r\n  (define-fun var2205!120 () var2205 (cast-from-String-to-var2205 \"\\u{2}\"))\r\n  (define-fun var2205!150 () var2205 (cast-from-ClassObject-to-var2205 ClassObject!148))\r\n  (define-fun var2205!136 () var2205 (cast-from-ClassObject-to-var2205 ClassObject!140))\r\n  (define-fun ClassObject!148 () ClassObject (cast-from-var2205-to-ClassObject var2205!146))\r\n  (define-fun ClassObject!128 () ClassObject (cast-from-var2205-to-ClassObject var2205!130))\r\n  (define-fun var2205!144 () var2205 (cast-from-var86-to-var2205 var86!90))\r\n  (define-fun var2205!146 () var2205 (var3263_get/1088891777 var3263!142 var2205!144))\r\n  (define-fun var3263!142 () var3263 (var155_getTypeArguments/-124415641 ClassObject!140 ClassObject!86))\r\n  (define-fun ClassObject!140 () ClassObject (getClass/1258963082 var2205!138))\r\n  (define-fun var2205!138 () var2205 (cast-from-var3237-to-var2205 var3237!94))\r\n  (define-fun toString/527982463 ((x!0 var3237)) String (ite (= x!0 var3237!98) \"\\u{0}\" \"\"))\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var2205))) String (ite (and (= x!0 \"%s<%s>\") (= x!1 (store ((as const (Array Int var2205)) var2205!158) 1 var2205!132))) \"\\u{0}\" \"\"))\r\n  (define-fun var155_toString/367894200 ((x!0 ClassObject)) String (ite (= x!0 ClassObject!128) \"\\u{1}\" \"\"))\r\n  (define-fun getSimpleName/-390194377 ((x!0 ClassObject)) String (ite (= x!0 ClassObject!86) \"\\u{2}\" \"\"))\r\n  (define-fun var155_toLongString/1204546232 ((x!0 var86)) String (ite (= x!0 var86!90) \"\\u{3}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 17,
        "assertion_count": 17,
        "api_sequence": [
            "<org.apache.commons.lang3.reflect.TypeUtils: java.lang.String toString(java.lang.reflect.Type)>",
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.reflect.TypeLiteral",
            "specialinvoke r0.<java.lang.Object: void <init>()>()",
            "$r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r3 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.util.Map getTypeArguments(java.lang.reflect.Type,java.lang.Class)>($r1, class \"Lorg/apache/commons/lang3/reflect/TypeLiteral;\")",
            "$r2 = <org.apache.commons.lang3.reflect.TypeLiteral: java.lang.reflect.TypeVariable T>",
            "$r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2)",
            "$r9 = (java.lang.reflect.Type) $r4",
            "$r5 = newarray (java.lang.Object)[2]",
            "$r6 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r5[0] = $r6",
            "$r7 = <org.apache.commons.lang3.reflect.TypeLiteral: java.lang.reflect.TypeVariable T>",
            "$r8 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.String toLongString(java.lang.reflect.TypeVariable)>($r7)",
            "$r5[1] = $r8",
            "$r10 = staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>($r9, \"%s does not assign type parameter %s\", $r5)",
            "$r11 = (java.lang.reflect.Type) $r10",
            "r0.<org.apache.commons.lang3.reflect.TypeLiteral: java.lang.reflect.Type value> = $r11",
            "$r12 = newarray (java.lang.Object)[2]",
            "$r13 = class \"Lorg/apache/commons/lang3/reflect/TypeLiteral;\"",
            "$r14 = virtualinvoke $r13.<java.lang.Class: java.lang.String getSimpleName()>()",
            "$r12[0] = $r14",
            "$r15 = r0.<org.apache.commons.lang3.reflect.TypeLiteral: java.lang.reflect.Type value>",
            "$r16 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.String toString(java.lang.reflect.Type)>($r15)",
            "$r12[1] = $r16",
            "$r17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"%s<%s>\", $r12)",
            "r0.<org.apache.commons.lang3.reflect.TypeLiteral: java.lang.String toString> = $r17",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.CharUtils__unicodeEscaped__-2009382838\\596.smt2",
        "z3": {
            "memory": 52469760,
            "run_time": 60.006160497665405,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 29495296,
            "run_time": 60.03060865402222,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 31866880,
            "run_time": 60.00887632369995,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 139427840,
            "run_time": 32.06968665122986,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.CharUtils__unicodeEscaped__-2009382838\\596.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n696ms\r\nSymbol ^ not declared\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "c0 := @parameter0: char",
            "$r11 = new java.lang.StringBuilder",
            "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\\u\")",
            "$r1 = <org.apache.commons.lang3.CharUtils: char[] HEX_DIGITS>",
            "$i12 = (int) c0",
            "$i1 = $i12 >> 12",
            "$i2 = $i1 & 15",
            "$c3 = $r1[$i2]",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3)",
            "$r3 = <org.apache.commons.lang3.CharUtils: char[] HEX_DIGITS>",
            "$i13 = (int) c0",
            "$i4 = $i13 >> 8",
            "$i5 = $i4 & 15",
            "$c6 = $r3[$i5]",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6)",
            "$r5 = <org.apache.commons.lang3.CharUtils: char[] HEX_DIGITS>",
            "$i14 = (int) c0",
            "$i7 = $i14 >> 4",
            "$i8 = $i7 & 15",
            "$c9 = $r5[$i8]",
            "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c9)",
            "$r7 = <org.apache.commons.lang3.CharUtils: char[] HEX_DIGITS>",
            "$c10 = c0 & 15",
            "$i15 = (int) $c10",
            "$c11 = $r7[$i15]",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c11)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r10"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ClassUtils__\u300aclinit\u300b__467637008\\1798.smt2",
        "z3": {
            "memory": 32321536,
            "run_time": 60.0655472278595,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12242944,
            "run_time": 60.0056517124176,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 6742016,
            "run_time": 61.28881049156189,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 311955456,
            "run_time": 42.83115744590759,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 19,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(char)>",
            "<java.lang.String: java.lang.String valueOf(char)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(char)>": 2
        },
        "jimple_statements": [
            "$r0 = staticinvoke <org.apache.commons.lang3.ClassUtils$lambda_static_0__26: java.util.Comparator bootstrap$()>()",
            "<org.apache.commons.lang3.ClassUtils: java.util.Comparator COMPARATOR> = $r0",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(46)",
            "<org.apache.commons.lang3.ClassUtils: java.lang.String PACKAGE_SEPARATOR> = $r1",
            "$r2 = staticinvoke <java.lang.String: java.lang.String valueOf(char)>(36)",
            "<org.apache.commons.lang3.ClassUtils: java.lang.String INNER_CLASS_SEPARATOR> = $r2",
            "$r3 = new java.util.HashMap",
            "specialinvoke $r3.<java.util.HashMap: void <init>()>()",
            "<org.apache.commons.lang3.ClassUtils: java.util.Map namePrimitiveMap> = $r3",
            "$r5 = <org.apache.commons.lang3.ClassUtils: java.util.Map namePrimitiveMap>",
            "$r4 = <java.lang.Boolean: java.lang.Class TYPE>",
            "interfaceinvoke $r5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"boolean\", $r4)",
            "$r7 = <org.apache.commons.lang3.ClassUtils: java.util.Map namePrimitiveMap>",
            "$r6 = <java.lang.Byte: java.lang.Class TYPE>",
            "interfaceinvoke $r7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"byte\", $r6)",
            "$r9 = <org.apache.commons.lang3.ClassUtils: java.util.Map namePrimitiveMap>",
            "$r8 = <java.lang.Character: java.lang.Class TYPE>",
            "interfaceinvoke $r9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"char\", $r8)",
            "$r11 = <org.apache.commons.lang3.ClassUtils: java.util.Map namePrimitiveMap>",
            "$r10 = <java.lang.Short: java.lang.Class TYPE>",
            "interfaceinvoke $r11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"short\", $r10)",
            "$r13 = <org.apache.commons.lang3.ClassUtils: java.util.Map namePrimitiveMap>",
            "$r12 = <java.lang.Integer: java.lang.Class TYPE>",
            "interfaceinvoke $r13.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"int\", $r12)",
            "$r15 = <org.apache.commons.lang3.ClassUtils: java.util.Map namePrimitiveMap>",
            "$r14 = <java.lang.Long: java.lang.Class TYPE>",
            "interfaceinvoke $r15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"long\", $r14)",
            "$r17 = <org.apache.commons.lang3.ClassUtils: java.util.Map namePrimitiveMap>",
            "$r16 = <java.lang.Double: java.lang.Class TYPE>",
            "interfaceinvoke $r17.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"double\", $r16)",
            "$r19 = <org.apache.commons.lang3.ClassUtils: java.util.Map namePrimitiveMap>",
            "$r18 = <java.lang.Float: java.lang.Class TYPE>",
            "interfaceinvoke $r19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"float\", $r18)",
            "$r21 = <org.apache.commons.lang3.ClassUtils: java.util.Map namePrimitiveMap>",
            "$r20 = <java.lang.Void: java.lang.Class TYPE>",
            "interfaceinvoke $r21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"void\", $r20)",
            "$r22 = new java.util.HashMap",
            "specialinvoke $r22.<java.util.HashMap: void <init>()>()",
            "<org.apache.commons.lang3.ClassUtils: java.util.Map primitiveWrapperMap> = $r22",
            "$r24 = <org.apache.commons.lang3.ClassUtils: java.util.Map primitiveWrapperMap>",
            "$r23 = <java.lang.Boolean: java.lang.Class TYPE>",
            "interfaceinvoke $r24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r23, class \"Ljava/lang/Boolean;\")",
            "$r26 = <org.apache.commons.lang3.ClassUtils: java.util.Map primitiveWrapperMap>",
            "$r25 = <java.lang.Byte: java.lang.Class TYPE>",
            "interfaceinvoke $r26.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r25, class \"Ljava/lang/Byte;\")",
            "$r28 = <org.apache.commons.lang3.ClassUtils: java.util.Map primitiveWrapperMap>",
            "$r27 = <java.lang.Character: java.lang.Class TYPE>",
            "interfaceinvoke $r28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r27, class \"Ljava/lang/Character;\")",
            "$r30 = <org.apache.commons.lang3.ClassUtils: java.util.Map primitiveWrapperMap>",
            "$r29 = <java.lang.Short: java.lang.Class TYPE>",
            "interfaceinvoke $r30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r29, class \"Ljava/lang/Short;\")",
            "$r32 = <org.apache.commons.lang3.ClassUtils: java.util.Map primitiveWrapperMap>",
            "$r31 = <java.lang.Integer: java.lang.Class TYPE>",
            "interfaceinvoke $r32.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r31, class \"Ljava/lang/Integer;\")",
            "$r34 = <org.apache.commons.lang3.ClassUtils: java.util.Map primitiveWrapperMap>",
            "$r33 = <java.lang.Long: java.lang.Class TYPE>",
            "interfaceinvoke $r34.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r33, class \"Ljava/lang/Long;\")",
            "$r36 = <org.apache.commons.lang3.ClassUtils: java.util.Map primitiveWrapperMap>",
            "$r35 = <java.lang.Double: java.lang.Class TYPE>",
            "interfaceinvoke $r36.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r35, class \"Ljava/lang/Double;\")",
            "$r38 = <org.apache.commons.lang3.ClassUtils: java.util.Map primitiveWrapperMap>",
            "$r37 = <java.lang.Float: java.lang.Class TYPE>",
            "interfaceinvoke $r38.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r37, class \"Ljava/lang/Float;\")",
            "$r41 = <org.apache.commons.lang3.ClassUtils: java.util.Map primitiveWrapperMap>",
            "$r40 = <java.lang.Void: java.lang.Class TYPE>",
            "$r39 = <java.lang.Void: java.lang.Class TYPE>",
            "interfaceinvoke $r41.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>($r40, $r39)",
            "$r42 = new java.util.HashMap",
            "specialinvoke $r42.<java.util.HashMap: void <init>()>()",
            "<org.apache.commons.lang3.ClassUtils: java.util.Map wrapperPrimitiveMap> = $r42",
            "$r43 = <org.apache.commons.lang3.ClassUtils: java.util.Map primitiveWrapperMap>",
            "$r44 = staticinvoke <org.apache.commons.lang3.ClassUtils$lambda_static_1__27: java.util.function.BiConsumer bootstrap$()>()",
            "interfaceinvoke $r43.<java.util.Map: void forEach(java.util.function.BiConsumer)>($r44)",
            "$r45 = new java.util.HashMap",
            "specialinvoke $r45.<java.util.HashMap: void <init>()>()",
            "interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"int\", \"I\")",
            "interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"boolean\", \"Z\")",
            "interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"float\", \"F\")",
            "interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"long\", \"J\")",
            "interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"short\", \"S\")",
            "interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"byte\", \"B\")",
            "interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"double\", \"D\")",
            "interfaceinvoke $r45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(\"char\", \"C\")",
            "$r46 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r45)",
            "<org.apache.commons.lang3.ClassUtils: java.util.Map abbreviationMap> = $r46",
            "$r47 = interfaceinvoke $r45.<java.util.Map: java.util.Set entrySet()>()",
            "$r51 = interfaceinvoke $r47.<java.util.Set: java.util.stream.Stream stream()>()",
            "$r49 = staticinvoke <org.apache.commons.lang3.ClassUtils$getValue__33: java.util.function.Function bootstrap$()>()",
            "$r48 = staticinvoke <org.apache.commons.lang3.ClassUtils$getKey__55: java.util.function.Function bootstrap$()>()",
            "$r50 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toMap(java.util.function.Function,java.util.function.Function)>($r49, $r48)",
            "$r52 = interfaceinvoke $r51.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>($r50)",
            "$r53 = (java.util.Map) $r52",
            "$r54 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>($r53)",
            "<org.apache.commons.lang3.ClassUtils: java.util.Map reverseAbbreviationMap> = $r54",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__setCharAt__612671671\\5834.smt2",
        "z3": {
            "memory": 32280576,
            "run_time": 38.041935443878174,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var65:\r\n  ;;   var65!val!1 var65!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var65!val!1 () var65)\r\n  (declare-fun var65!val!0 () var65)\r\n  ;; cardinality constraint:\r\n  (forall ((x var65)) (or (= x var65!val!1) (= x var65!val!0)))\r\n  ;; -----------\r\n  (define-fun var2751 () Int\r\n    0)\r\n  (define-fun var2288 () var65\r\n    var65!val!0)\r\n  (define-fun var3615 () Int\r\n    2)\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun var546 () Int\r\n    (length/-360784002 var2288))\r\n  (define-fun var987 () var1388\r\n    var1388-init)\r\n  (define-fun null-var65 () var65\r\n    var65!val!1)\r\n  (define-fun var1388-init () var1388\r\n    var1388!val!0)\r\n  (define-fun var987!1 () var1388\r\n    var1388!val!0)\r\n  (define-fun var2751!1 () Int\r\n    0)\r\n  (define-fun length/-360784002 ((x!0 var65)) Int\r\n    0)\r\n  (define-fun <init>/-25822930 ((x!0 var1388) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11935744,
            "run_time": 60.01488661766052,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34783232,
            "run_time": 43.51539373397827,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var65:\n  ;;   var65!val!1 var65!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var65!val!1 () var65)\n  (declare-fun var65!val!0 () var65)\n  ;; cardinality constraint:\n  (forall ((x var65)) (or (= x var65!val!1) (= x var65!val!0)))\n  ;; -----------\n  (define-fun var2751 () Int\n    0)\n  (define-fun var2288 () var65\n    var65!val!0)\n  (define-fun var3615 () Int\n    2)\n  (define-fun null-Int () Int\n    1)\n  (define-fun var546 () Int\n    (length/-360784002 var2288))\n  (define-fun var987 () var1388\n    var1388-init)\n  (define-fun null-var65 () var65\n    var65!val!1)\n  (define-fun var1388-init () var1388\n    var1388!val!0)\n  (define-fun var987!1 () var1388\n    var1388!val!0)\n  (define-fun var2751!1 () Int\n    0)\n  (define-fun length/-360784002 ((x!0 var65)) Int\n    0)\n  (define-fun <init>/-25822930 ((x!0 var1388) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 142151680,
            "run_time": 6.669414758682251,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3615 () Int 1)\r\n  (define-fun var2751 () Int 8)\r\n  (define-fun var2288 () var65 var65!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var65 () var65 var65!2)\r\n  (define-fun length/-360784002 ((x!0 var65)) Int (ite (= x!0 var65!4) 8 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>"
        ],
        "api_count": {
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "c2 := @parameter1: char",
            "if i0 < 0 goto $r0 = new java.lang.StringIndexOutOfBoundsException",
            "$i1 = virtualinvoke r1.<org.apache.commons.lang3.text.StrBuilder: int length()>()",
            "if i0 < $i1 goto $r2 = r1.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "$r0 = new java.lang.StringIndexOutOfBoundsException",
            "specialinvoke $r0.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.ExtendedMessageFormat__readArgumentIndex__1043770850\\3474-deviant-0.smt2",
        "z3": {
            "memory": 9486336,
            "run_time": 60.02299666404724,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1708032,
            "run_time": 13.89456582069397,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33058816,
            "run_time": 6.595850467681885,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 71 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165744640,
            "run_time": 1.5458388328552246,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: java.lang.String substring(int,int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.ExtendedMessageFormat",
            "r2 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.text.ParsePosition",
            "i0 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "specialinvoke r1.<org.apache.commons.lang3.text.ExtendedMessageFormat: void seekNonWs(java.lang.String,java.text.ParsePosition)>(r2, r0)",
            "$r19 = new java.lang.StringBuilder",
            "specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()",
            "z1 = 0",
            "if z1 != 0 goto (branch)",
            "if z1 == 0 goto $r23 = new java.lang.IllegalArgumentException",
            "$r21 = new java.lang.IllegalArgumentException",
            "$r20 = new java.lang.StringBuilder",
            "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()",
            "$r11 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid format argument index at position \")",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")",
            "$i1 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "$r13 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i0, $i1)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16)",
            "throw $r21"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringBefore__1356398835\\5750.smt2",
        "z3": {
            "memory": 31895552,
            "run_time": 40.99099063873291,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1170 () Bool\r\n    (var1078_isEmpty/1595667738 var1862))\r\n  (define-fun null-Int () Int\r\n    126976)\r\n  (define-fun var219 () Int\r\n    (str.indexof var1862 (str.from_code var1027) 0))\r\n  (define-fun var1862 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3716 () Int\r\n    (- 1))\r\n  (define-fun var1027 () Int\r\n    126975)\r\n  (define-fun var1078_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1712128,
            "run_time": 0.18434500694274902,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2058 is 1\r\n; rep: (as @var2058_0 var2058)\r\n; cardinality of var1078 is 1\r\n; rep: (as @var1078_0 var1078)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1078_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1862 () String \"\")\r\n(define-fun var1027 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 41623552,
            "run_time": 0.8211114406585693,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 29 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 137093120,
            "run_time": 2.0773396492004395,
            "is_sat": "error",
            "stdout": "(error \"str_cons(var1027, 0) (of class ap.parser.IFunApp)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.StringUtils__substringBefore__1356398835\\5750.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n1211ms\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int indexOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(i0)",
            "i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(i0)",
            "$i3 = (int) -1",
            "if i1 != $i3 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1)",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.SystemUtils__isJavaAwtHeadless__-1622535063\\735.smt2",
        "z3": {
            "memory": 29880320,
            "run_time": 27.606999397277832,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3697-JAVA_AWT_HEADLESS () String\r\n    \"\")\r\n  (define-fun var1890-TRUE () var1890\r\n    var1890!val!0)\r\n  (define-fun var1712 () var1890\r\n    var1890-TRUE)\r\n  (define-fun var537 () String\r\n    var3697-JAVA_AWT_HEADLESS)\r\n  (define-fun var2858 () String\r\n    (toString/1090915316 var1890-TRUE))\r\n  (define-fun var669 () Bool\r\n    (= (toString/1090915316 var1890-TRUE) var3697-JAVA_AWT_HEADLESS))\r\n  (define-fun toString/1090915316 ((x!0 var1890)) String\r\n    \"\")\r\n)\r\n(error \"line 21 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.05908083915710449,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1890 is 1\r\n; rep: (as @var1890_0 var1890)\r\n; cardinality of var3697 is 1\r\n; rep: (as @var3697_0 var3697)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun toString/1090915316 ((BOUND_VARIABLE_421 var1890)) String \"\")\r\n(define-fun var1890-TRUE () var1890 (as @var1890_0 var1890))\r\n(define-fun var3697-JAVA_AWT_HEADLESS () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32890880,
            "run_time": 0.6524097919464111,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3697-JAVA_AWT_HEADLESS () String\n    \"\")\n  (define-fun var1890-TRUE () var1890\n    var1890!val!0)\n  (define-fun var2858 () String\n    (toString/1090915316 var1890-TRUE))\n  (define-fun var669 () Bool\n    (= (toString/1090915316 var1890-TRUE) var3697-JAVA_AWT_HEADLESS))\n  (define-fun var1712 () var1890\n    var1890-TRUE)\n  (define-fun var537 () String\n    var3697-JAVA_AWT_HEADLESS)\n  (define-fun toString/1090915316 ((x!0 var1890)) String\n    \"\")\n)\n(error \"line 21 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 129867776,
            "run_time": 2.5066168308258057,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.Boolean: java.lang.String toString()>",
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "$r0 = <java.lang.Boolean: java.lang.Boolean TRUE>",
            "$r2 = virtualinvoke $r0.<java.lang.Boolean: java.lang.String toString()>()",
            "$r1 = <org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_AWT_HEADLESS>",
            "$z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>($r1)",
            "return $z0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__appendFixedWidthPadLeft__-18465231\\3833.smt2",
        "z3": {
            "memory": 31817728,
            "run_time": 0.5399112701416016,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var284:\r\n  ;;   var284!val!1 var284!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var284!val!1 () var284)\r\n  (declare-fun var284!val!0 () var284)\r\n  ;; cardinality constraint:\r\n  (forall ((x var284)) (or (= x var284!val!1) (= x var284!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var284 () var284\r\n    var284!val!1)\r\n  (define-fun var1017 () String\r\n    (String_valueOf/1240665136 var1726))\r\n  (define-fun var1726 () Int\r\n    1)\r\n  (define-fun var3945 () Int\r\n    1)\r\n  (define-fun var283 () Int\r\n    1)\r\n  (define-fun var20 () var284\r\n    var284!val!0)\r\n  (define-fun var315 () var284\r\n    (appendFixedWidthPadLeft/58772405\r\n  var20\r\n  (cast-from-String-to-var3384 (String_valueOf/1240665136 var1726))\r\n  var3945\r\n  var283))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun cast-from-String-to-var3384 ((x!0 String)) var3384\r\n    var3384!val!0)\r\n  (define-fun appendFixedWidthPadLeft/58772405 ((x!0 var284)\r\n   (x!1 var3384)\r\n   (x!2 Int)\r\n   (x!3 Int)) var284\r\n    var284!val!1)\r\n  (define-fun String_valueOf/1240665136 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2158592,
            "run_time": 0.07745146751403809,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var284 is 2\r\n; rep: (as @var284_0 var284)\r\n; rep: (as @var284_1 var284)\r\n; cardinality of var3384 is 1\r\n; rep: (as @var3384_0 var3384)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/1240665136 ((BOUND_VARIABLE_498 Int)) String \"\")\r\n(define-fun appendFixedWidthPadLeft/58772405 ((BOUND_VARIABLE_501 var284) (BOUND_VARIABLE_502 var3384) (BOUND_VARIABLE_503 Int) (BOUND_VARIABLE_504 Int)) var284 (as @var284_0 var284))\r\n(define-fun cast-from-String-to-var3384 ((BOUND_VARIABLE_507 String)) var3384 (as @var3384_0 var3384))\r\n(define-fun null-var284 () var284 (as @var284_0 var284))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var20 () var284 (as @var284_1 var284))\r\n(define-fun var1726 () Int 1)\r\n(define-fun var3945 () Int 1)\r\n(define-fun var283 () Int 1)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36786176,
            "run_time": 0.10837745666503906,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var284:\n  ;;   var284!val!1 var284!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var284!val!1 () var284)\n  (declare-fun var284!val!0 () var284)\n  ;; cardinality constraint:\n  (forall ((x var284)) (or (= x var284!val!1) (= x var284!val!0)))\n  ;; -----------\n  (define-fun var315 () var284\n    (appendFixedWidthPadLeft/58772405\n  var20\n  (cast-from-String-to-var3384 (String_valueOf/1240665136 var1726))\n  var3945\n  var283))\n  (define-fun null-var284 () var284\n    var284!val!1)\n  (define-fun var1726 () Int\n    1)\n  (define-fun var3945 () Int\n    1)\n  (define-fun var283 () Int\n    1)\n  (define-fun var20 () var284\n    var284!val!0)\n  (define-fun var1017 () String\n    (String_valueOf/1240665136 var1726))\n  (define-fun null-Int () Int\n    0)\n  (define-fun cast-from-String-to-var3384 ((x!0 String)) var3384\n    var3384!val!0)\n  (define-fun appendFixedWidthPadLeft/58772405 ((x!0 var284)\n   (x!1 var3384)\n   (x!2 Int)\n   (x!3 Int)) var284\n    var284!val!1)\n  (define-fun String_valueOf/1240665136 ((x!0 Int)) String\n    \"\")\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140156928,
            "run_time": 2.478961706161499,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var283 () Int 1)\r\n  (define-fun var3945 () Int 1)\r\n  (define-fun var1726 () Int 1)\r\n  (define-fun var20 () var284 var284!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var284 () var284 var284!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "i1 := @parameter1: int",
            "c2 := @parameter2: char",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0)",
            "$r2 = virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadLeft(java.lang.Object,int,char)>($r1, i1, c2)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6750.smt2",
        "z3": {
            "memory": 29466624,
            "run_time": 41.024672746658325,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 74 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1806336,
            "run_time": 0.05962681770324707,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33161216,
            "run_time": 0.6353292465209961,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 74 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 144691200,
            "run_time": 2.61008620262146,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 3,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 1",
            "goto [?= z3 = $z6]",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 1",
            "$z8 = 1",
            "goto [?= z5 = $z8]",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = $i1 + $i0",
            "$i2 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i4 = $i3 + $i2",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4)",
            "if z3 == 0 goto virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "if z5 == 0 goto $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__charAt__-314318361\\4706.smt2",
        "z3": {
            "memory": 30330880,
            "run_time": 29.93341374397278,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var945:\r\n  ;;   var945!val!1 var945!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var945!val!1 () var945)\r\n  (declare-fun var945!val!0 () var945)\r\n  ;; cardinality constraint:\r\n  (forall ((x var945)) (or (= x var945!val!1) (= x var945!val!0)))\r\n  ;; -----------\r\n  (define-fun var2393 () var945\r\n    var945!val!0)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var1531 () var3347\r\n    var3347-init)\r\n  (define-fun var2962 () Int\r\n    (- 1))\r\n  (define-fun null-var945 () var945\r\n    var945!val!1)\r\n  (define-fun var2962!1 () Int\r\n    0)\r\n  (define-fun var1531!1 () var3347\r\n    var3347!val!0)\r\n  (define-fun var3347-init () var3347\r\n    var3347!val!0)\r\n  (define-fun <init>/-25822930 ((x!0 var3347) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.05962681770324707,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var945 is 2\r\n; rep: (as @var945_0 var945)\r\n; rep: (as @var945_1 var945)\r\n; cardinality of var3347 is 1\r\n; rep: (as @var3347_0 var3347)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3347-init () var3347 (as @var3347_0 var3347))\r\n(define-fun <init>/-25822930 ((BOUND_VARIABLE_445 var3347) (BOUND_VARIABLE_446 Int)) void (as @void_0 void))\r\n(define-fun null-var945 () var945 (as @var945_0 var945))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var2393 () var945 (as @var945_1 var945))\r\n(define-fun var2962 () Int (- 1))\r\n(define-fun var1531!1 () var3347 (as @var3347_0 var3347))\r\n(define-fun var2962!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34369536,
            "run_time": 0.6368367671966553,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var945:\n  ;;   var945!val!1 var945!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var945!val!1 () var945)\n  (declare-fun var945!val!0 () var945)\n  ;; cardinality constraint:\n  (forall ((x var945)) (or (= x var945!val!1) (= x var945!val!0)))\n  ;; -----------\n  (define-fun var2393 () var945\n    var945!val!0)\n  (define-fun null-Int () Int\n    0)\n  (define-fun var2962 () Int\n    (- 1))\n  (define-fun null-var945 () var945\n    var945!val!1)\n  (define-fun var1531 () var3347\n    var3347-init)\n  (define-fun var2962!1 () Int\n    0)\n  (define-fun var1531!1 () var3347\n    var3347!val!0)\n  (define-fun var3347-init () var3347\n    var3347!val!0)\n  (define-fun <init>/-25822930 ((x!0 var3347) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 126377984,
            "run_time": 2.6394057273864746,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2962 () Int (- 1))\r\n  (define-fun var2393 () var945 var945!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var945 () var945 var945!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>"
        ],
        "api_count": {
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "if i0 < 0 goto $r0 = new java.lang.StringIndexOutOfBoundsException",
            "$r0 = new java.lang.StringIndexOutOfBoundsException",
            "specialinvoke $r0.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__startsWith__-2030455765\\5865.smt2",
        "z3": {
            "memory": 31133696,
            "run_time": 25.76608681678772,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var557:\r\n  ;;   var557!val!0 var557!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var557!val!0 () var557)\r\n  (declare-fun var557!val!1 () var557)\r\n  ;; cardinality constraint:\r\n  (forall ((x var557)) (or (= x var557!val!0) (= x var557!val!1)))\r\n  ;; -----------\r\n  (define-fun var436 () Int\r\n    (str.len var3273))\r\n  (define-fun null-var557 () var557\r\n    var557!val!1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2806 () var557\r\n    var557!val!0)\r\n  (define-fun var3273 () String\r\n    \"\")\r\n)\r\n(error \"line 25 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1634304,
            "run_time": 0.06013298034667969,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var557 is 2\r\n; rep: (as @var557_0 var557)\r\n; rep: (as @var557_1 var557)\r\n; cardinality of var1375 is 1\r\n; rep: (as @var1375_0 var1375)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var557 () var557 (as @var557_0 var557))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2806 () var557 (as @var557_1 var557))\r\n(define-fun var3273 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36106240,
            "run_time": 0.6353292465209961,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var557:\n  ;;   var557!val!0 var557!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var557!val!0 () var557)\n  (declare-fun var557!val!1 () var557)\n  ;; cardinality constraint:\n  (forall ((x var557)) (or (= x var557!val!0) (= x var557!val!1)))\n  ;; -----------\n  (define-fun var436 () Int\n    (str.len var3273))\n  (define-fun null-var557 () var557\n    var557!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2806 () var557\n    var557!val!0)\n  (define-fun var3273 () String\n    \"\")\n)\n(error \"line 25 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 159862784,
            "run_time": 2.6707215309143066,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3273 () String \"\")\r\n  (define-fun var2806 () var557 var557!4)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var557 () var557 var557!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrBuilder",
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i0 != 0 goto $i1 = r1.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "return 1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__insert__1427295636\\5613.smt2",
        "z3": {
            "memory": 29904896,
            "run_time": 28.74530339241028,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 38 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.05962681770324707,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32120832,
            "run_time": 0.6368367671966553,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 38 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152633344,
            "run_time": 2.6394057273864746,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "r4 := @parameter1: java.lang.String",
            "virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: void validateIndex(int)>(i0)",
            "if r4 != null goto (branch)",
            "r4 = r0.<org.apache.commons.lang3.text.StrBuilder: java.lang.String nullText>",
            "if r4 == null goto return r0",
            "i1 = virtualinvoke r4.<java.lang.String: int length()>()",
            "if i1 <= 0 goto return r0",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ArrayUtils__removeAll__1824646270\\5609.smt2",
        "z3": {
            "memory": 31322112,
            "run_time": 35.74525237083435,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3386:\r\n  ;;   var3386!val!1 var3386!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3386!val!1 () var3386)\r\n  (declare-fun var3386!val!0 () var3386)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3386)) (or (= x var3386!val!1) (= x var3386!val!0)))\r\n  ;; -----------\r\n  (define-fun var87 () (Array Int Int)\r\n    (var229_sort/-179590612 (var3616_clone/1678787205 var983)))\r\n  (define-fun var2271 () ClassObject\r\n    (getComponentType/1960034130 (getClass/1258963082 var3632)))\r\n  (define-fun null-var3386 () var3386\r\n    var3386!val!1)\r\n  (define-fun var3918 () ClassObject\r\n    (getClass/1258963082 var3632))\r\n  (define-fun var2382 () Int\r\n    (getLength-Arr-Int-1 (var229_sort/-179590612 (var3616_clone/1678787205 var983))))\r\n  (define-fun var1454 () (Array Int Int)\r\n    (var3616_clone/1678787205 var983))\r\n  (define-fun var3632 () var3386\r\n    var3386!val!0)\r\n  (define-fun var3353 () var3386\r\n    (var3594_newInstance/1168168314\r\n  (getComponentType/1960034130 (getClass/1258963082 var3632))\r\n  (- (var3616_getLength/1005357804 var3632) 0)))\r\n  (define-fun var3967 () Bool\r\n    (var3616_isNotEmpty/-1513181023\r\n  (var229_sort/-179590612 (var3616_clone/1678787205 var983))))\r\n  (define-fun var241 () Int\r\n    0)\r\n  (define-fun var983 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 6) 8 9))\r\n  (define-fun var2440 () Int\r\n    (- (var3616_getLength/1005357804 var3632) 0))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store (store ((as const (Array Int Int)) 6) 8 9) 0 7))\r\n  (define-fun var3069 () Int\r\n    (var3616_getLength/1005357804 var3632))\r\n  (define-fun var2633 () Int\r\n    (- 1))\r\n  (define-fun var3822 () Int\r\n    (var3616_getLength/1005357804 var3632))\r\n  (define-fun var2382!1 () Int\r\n    (+ (getLength-Arr-Int-1\r\n     (var229_sort/-179590612 (var3616_clone/1678787205 var983)))\r\n   (- 1)))\r\n  (define-fun var3616_isNotEmpty/-1513181023 ((x!0 (Array Int Int))) Bool\r\n    true)\r\n  (define-fun var229_sort/-179590612 ((x!0 (Array Int Int))) (Array Int Int)\r\n    (store ((as const (Array Int Int)) 7) 2 4))\r\n  (define-fun k!2 ((x!0 Int)) Int\r\n    (ite (= x!0 8) 9\r\n      6))\r\n  (define-fun k!3 ((x!0 Int)) Int\r\n    (ite (= x!0 2) 3\r\n      10))\r\n  (define-fun k!4 ((x!0 Int)) Int\r\n    (ite (= x!0 2) 4\r\n      7))\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\r\n    0)\r\n  (define-fun var3616_getLength/1005357804 ((x!0 var3386)) Int\r\n    0)\r\n  (define-fun var3616_clone/1678787205 ((x!0 (Array Int Int))) (Array Int Int)\r\n    (store ((as const (Array Int Int)) 10) 2 3))\r\n  (define-fun getComponentType/1960034130 ((x!0 ClassObject)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var3594_newInstance/1168168314 ((x!0 ClassObject) (x!1 Int)) var3386\r\n    var3386!val!1)\r\n  (define-fun getClass/1258963082 ((x!0 var3386)) ClassObject\r\n    ClassObject!val!0)\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1712128,
            "run_time": 0.07601523399353027,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3386 is 2\r\n; rep: (as @var3386_0 var3386)\r\n; rep: (as @var3386_1 var3386)\r\n; cardinality of var3616 is 1\r\n; rep: (as @var3616_0 var3616)\r\n; cardinality of var229 is 1\r\n; rep: (as @var229_0 var229)\r\n; cardinality of var3594 is 1\r\n; rep: (as @var3594_0 var3594)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3616_getLength/1005357804 ((_arg_1 var3386)) Int 0)\r\n(define-fun var3616_clone/1678787205 ((_arg_1 (Array Int Int))) (Array Int Int) (store ((as const (Array Int Int)) 0) 0 1))\r\n(define-fun var229_sort/-179590612 ((_arg_1 (Array Int Int))) (Array Int Int) (store ((as const (Array Int Int)) 0) 0 (- 1)))\r\n(define-fun var3616_isNotEmpty/-1513181023 ((_arg_1 (Array Int Int))) Bool true)\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 0)\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_640 var3386)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getComponentType/1960034130 ((BOUND_VARIABLE_643 ClassObject)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var3594_newInstance/1168168314 ((BOUND_VARIABLE_646 ClassObject) (BOUND_VARIABLE_647 Int)) var3386 (as @var3386_0 var3386))\r\n(define-fun null-var3386 () var3386 (as @var3386_0 var3386))\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var3632 () var3386 (as @var3386_1 var3386))\r\n(define-fun var983 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34844672,
            "run_time": 0.6209545135498047,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3386:\n  ;;   var3386!val!1 var3386!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3386!val!1 () var3386)\n  (declare-fun var3386!val!0 () var3386)\n  ;; cardinality constraint:\n  (forall ((x var3386)) (or (= x var3386!val!1) (= x var3386!val!0)))\n  ;; -----------\n  (define-fun var3353 () var3386\n    (var3594_newInstance/1168168314\n  (getComponentType/1960034130 (getClass/1258963082 var3632))\n  (- (var3616_getLength/1005357804 var3632) 0)))\n  (define-fun var3967 () Bool\n    (var3616_isNotEmpty/-1513181023\n  (var229_sort/-179590612 (var3616_clone/1678787205 var983))))\n  (define-fun var241 () Int\n    0)\n  (define-fun null-var3386 () var3386\n    var3386!val!1)\n  (define-fun var983 () (Array Int Int)\n    (store ((as const (Array Int Int)) 3) 8 9))\n  (define-fun var87 () (Array Int Int)\n    (var229_sort/-179590612 (var3616_clone/1678787205 var983)))\n  (define-fun var2440 () Int\n    (- (var3616_getLength/1005357804 var3632) 0))\n  (define-fun var2633 () Int\n    (- 1))\n  (define-fun var3822 () Int\n    (var3616_getLength/1005357804 var3632))\n  (define-fun var3632 () var3386\n    var3386!val!0)\n  (define-fun var2382!1 () Int\n    (+ (getLength-Arr-Int-1\n     (var229_sort/-179590612 (var3616_clone/1678787205 var983)))\n   (- 1)))\n  (define-fun var3069 () Int\n    (var3616_getLength/1005357804 var3632))\n  (define-fun var1454 () (Array Int Int)\n    (var3616_clone/1678787205 var983))\n  (define-fun var2271 () ClassObject\n    (getComponentType/1960034130 (getClass/1258963082 var3632)))\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store (store ((as const (Array Int Int)) 3) 8 9) 0 4))\n  (define-fun var3918 () ClassObject\n    (getClass/1258963082 var3632))\n  (define-fun var2382 () Int\n    (getLength-Arr-Int-1 (var229_sort/-179590612 (var3616_clone/1678787205 var983))))\n  (define-fun var3616_clone/1678787205 ((x!0 (Array Int Int))) (Array Int Int)\n    (store ((as const (Array Int Int)) 4) 5 6))\n  (define-fun var229_sort/-179590612 ((x!0 (Array Int Int))) (Array Int Int)\n    (store ((as const (Array Int Int)) 10) 5 7))\n  (define-fun k!2 ((x!0 Int)) Int\n    (ite (= x!0 8) 9\n      3))\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\n    0)\n  (define-fun k!3 ((x!0 Int)) Int\n    (ite (= x!0 5) 6\n      4))\n  (define-fun k!4 ((x!0 Int)) Int\n    (ite (= x!0 5) 7\n      10))\n  (define-fun var3616_isNotEmpty/-1513181023 ((x!0 (Array Int Int))) Bool\n    true)\n  (define-fun var3616_getLength/1005357804 ((x!0 var3386)) Int\n    0)\n  (define-fun getComponentType/1960034130 ((x!0 ClassObject)) ClassObject\n    ClassObject!val!0)\n  (define-fun var3594_newInstance/1168168314 ((x!0 ClassObject) (x!1 Int)) var3386\n    var3386!val!1)\n  (define-fun getClass/1258963082 ((x!0 var3386)) ClassObject\n    ClassObject!val!0)\n)\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 156430336,
            "run_time": 2.7296321392059326,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var983 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun var3632 () var3386 var3386!4)\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 0) 0 1))\r\n  (define-fun null-var3386 () var3386 var3386!2)\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int (ite (= x!0 (store ((as const (Array Int Int)) 0) 1 1)) 0 0))\r\n  (define-fun var3616_isNotEmpty/-1513181023 ((x!0 (Array Int Int))) Bool (ite (= x!0 (store ((as const (Array Int Int)) 0) 1 1)) true true))\r\n  (define-fun var229_sort/-179590612 ((x!0 (Array Int Int))) (Array Int Int) (ite (= x!0 (store ((as const (Array Int Int)) 0) (- 1) 1)) (store ((as const (Array Int Int)) 0) 1 1) ((as const (Array Int Int)) 0)))\r\n  (define-fun var3616_clone/1678787205 ((x!0 (Array Int Int))) (Array Int Int) (ite (= x!0 ((as const (Array Int Int)) 0)) (store ((as const (Array Int Int)) 0) (- 1) 1) ((as const (Array Int Int)) 0)))\r\n  (define-fun var3616_getLength/1005357804 ((x!0 var3386)) Int (ite (= x!0 var3386!4) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 8,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "r1 := @parameter1: int[]",
            "i0 = staticinvoke <org.apache.commons.lang3.ArrayUtils: int getLength(java.lang.Object)>(r0)",
            "i8 = 0",
            "$r2 = staticinvoke <org.apache.commons.lang3.ArrayUtils: int[] clone(int[])>(r1)",
            "r3 = staticinvoke <org.apache.commons.lang3.ArraySorter: int[] sort(int[])>($r2)",
            "$z0 = staticinvoke <org.apache.commons.lang3.ArrayUtils: boolean isNotEmpty(int[])>(r3)",
            "if $z0 == 0 goto $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "i9 = lengthof r3",
            "i10 = i0",
            "$i16 = (int) -1",
            "i9 = i9 + $i16",
            "if i9 < 0 goto $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r5 = virtualinvoke $r4.<java.lang.Class: java.lang.Class getComponentType()>()",
            "$i1 = i0 - i8",
            "$r6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>($r5, $i1)",
            "if i8 >= i0 goto return $r6",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6759.smt2",
        "z3": {
            "memory": 29949952,
            "run_time": 41.04950404167175,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 78 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.05855584144592285,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33165312,
            "run_time": 0.6368367671966553,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 78 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 149348352,
            "run_time": 2.732978343963623,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 23,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 3,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 1",
            "goto [?= z3 = $z6]",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 0",
            "$z8 = 0",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = $i1 + $i0",
            "$i2 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i4 = $i3 + $i2",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4)",
            "if z3 == 0 goto virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "if z5 == 0 goto $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__midString__1021665925\\5694.smt2",
        "z3": {
            "memory": 30679040,
            "run_time": 41.08736205101013,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1330:\r\n  ;;   var1330!val!1 var1330!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1330!val!1 () var1330)\r\n  (declare-fun var1330!val!0 () var1330)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1330)) (or (= x var1330!val!1) (= x var1330!val!0)))\r\n  ;; -----------\r\n  (define-fun var2401 () Int\r\n    (size/1389889126 var3749))\r\n  (define-fun var3749 () var1330\r\n    var1330!val!0)\r\n  (define-fun null-var1330 () var1330\r\n    var1330!val!1)\r\n  (define-fun var756 () Int\r\n    (- (size/1389889126 var3749) var2959))\r\n  (define-fun var3477 () Int\r\n    (size/1389889126 var3749))\r\n  (define-fun var1509 () Int\r\n    (size/1389889126 var3749))\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var2329 () String\r\n    String-init)\r\n  (define-fun var3392 () Int\r\n    (+ var2959 var860))\r\n  (define-fun var2959 () Int\r\n    0)\r\n  (define-fun var860 () Int\r\n    1)\r\n  (define-fun var1316 () (Array Int Int)\r\n    (buffer/1389889126 var3749))\r\n  (define-fun var2959!1 () Int\r\n    0)\r\n  (define-fun var1316!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var756!1 () Int\r\n    0)\r\n  (define-fun var2329!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun size/1389889126 ((x!0 var1330)) Int\r\n    1)\r\n  (define-fun buffer/1389889126 ((x!0 var1330)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 45 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.07496309280395508,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1330 is 2\r\n; rep: (as @var1330_0 var1330)\r\n; rep: (as @var1330_1 var1330)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var1330)) Int 1)\r\n(define-fun String-init () String \"\")\r\n(define-fun buffer/1389889126 ((BOUND_VARIABLE_540 var1330)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_545 String) (BOUND_VARIABLE_546 (Array Int Int)) (BOUND_VARIABLE_547 Int) (BOUND_VARIABLE_548 Int)) void (as @void_0 void))\r\n(define-fun null-var1330 () var1330 (as @var1330_0 var1330))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3749 () var1330 (as @var1330_1 var1330))\r\n(define-fun var2959 () Int 0)\r\n(define-fun var860 () Int 1)\r\n(define-fun var2329!1 () String \"\")\r\n(define-fun var1316!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2959!1 () Int 0)\r\n(define-fun var756!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34910208,
            "run_time": 0.6209545135498047,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1330:\n  ;;   var1330!val!1 var1330!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1330!val!1 () var1330)\n  (declare-fun var1330!val!0 () var1330)\n  ;; cardinality constraint:\n  (forall ((x var1330)) (or (= x var1330!val!1) (= x var1330!val!0)))\n  ;; -----------\n  (define-fun var3392 () Int\n    (+ var2959 var860))\n  (define-fun var3749 () var1330\n    var1330!val!0)\n  (define-fun null-var1330 () var1330\n    var1330!val!1)\n  (define-fun var756 () Int\n    (- (size/1389889126 var3749) var2959))\n  (define-fun var2401 () Int\n    (size/1389889126 var3749))\n  (define-fun var1316 () (Array Int Int)\n    (buffer/1389889126 var3749))\n  (define-fun var2329 () String\n    String-init)\n  (define-fun var3477 () Int\n    (size/1389889126 var3749))\n  (define-fun null-Int () Int\n    2)\n  (define-fun var2959 () Int\n    0)\n  (define-fun var860 () Int\n    1)\n  (define-fun var1509 () Int\n    (size/1389889126 var3749))\n  (define-fun var2959!1 () Int\n    0)\n  (define-fun var1316!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var756!1 () Int\n    0)\n  (define-fun var2329!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun size/1389889126 ((x!0 var1330)) Int\n    1)\n  (define-fun buffer/1389889126 ((x!0 var1330)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 45 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169582592,
            "run_time": 2.931663751602173,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var860 () Int 1)\r\n  (define-fun var2959 () Int 0)\r\n  (define-fun var3749 () var1330 var1330!6)\r\n  (define-fun null-Int () Int 2)\r\n  (define-fun null-var1330 () var1330 var1330!4)\r\n  (define-fun size/1389889126 ((x!0 var1330)) Int (ite (= x!0 var1330!6) 1 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: void <init>(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i6 := @parameter0: int",
            "i0 := @parameter1: int",
            "if i6 >= 0 goto (branch)",
            "if i0 <= 0 goto return \"\"",
            "$i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i6 < $i1 goto $i3 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i3 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i2 = i6 + i0",
            "if $i3 > $i2 goto $r1 = new java.lang.String",
            "$r3 = new java.lang.String",
            "$r4 = r0.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "$i4 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i5 = $i4 - i6",
            "specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>($r4, i6, $i5)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__setCharAt__612671671\\5838.smt2",
        "z3": {
            "memory": 31031296,
            "run_time": 0.1643505096435547,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1950:\r\n  ;;   var1950!val!1 var1950!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1950!val!1 () var1950)\r\n  (declare-fun var1950!val!0 () var1950)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1950)) (or (= x var1950!val!1) (= x var1950!val!0)))\r\n  ;; -----------\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 2) 0 3))\r\n  (define-fun var1711 () var1950\r\n    var1950!val!0)\r\n  (define-fun var3866 () Int\r\n    (length/-360784002 var1711))\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun var3540 () Int\r\n    0)\r\n  (define-fun null-var1950 () var1950\r\n    var1950!val!1)\r\n  (define-fun var1462 () (Array Int Int)\r\n    (buffer/1389889126 var1711))\r\n  (define-fun var1462!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 2))\r\n  (define-fun var1931 () Int\r\n    2)\r\n  (define-fun length/-360784002 ((x!0 var1950)) Int\r\n    1)\r\n  (define-fun buffer/1389889126 ((x!0 var1950)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.04480266571044922,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1950 is 2\r\n; rep: (as @var1950_0 var1950)\r\n; rep: (as @var1950_1 var1950)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun length/-360784002 ((_arg_1 var1950)) Int 1)\r\n(define-fun buffer/1389889126 ((BOUND_VARIABLE_564 var1950)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun null-var1950 () var1950 (as @var1950_0 var1950))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var1711 () var1950 (as @var1950_1 var1950))\r\n(define-fun var3540 () Int 0)\r\n(define-fun var1931 () Int 0)\r\n(define-fun var1462!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37105664,
            "run_time": 0.33936095237731934,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1950:\n  ;;   var1950!val!1 var1950!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1950!val!1 () var1950)\n  (declare-fun var1950!val!0 () var1950)\n  ;; cardinality constraint:\n  (forall ((x var1950)) (or (= x var1950!val!1) (= x var1950!val!0)))\n  ;; -----------\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store ((as const (Array Int Int)) 2) 0 3))\n  (define-fun var1711 () var1950\n    var1950!val!0)\n  (define-fun null-Int () Int\n    1)\n  (define-fun var3540 () Int\n    0)\n  (define-fun null-var1950 () var1950\n    var1950!val!1)\n  (define-fun var3866 () Int\n    (length/-360784002 var1711))\n  (define-fun var1462!1 () (Array Int Int)\n    ((as const (Array Int Int)) 2))\n  (define-fun var1462 () (Array Int Int)\n    (buffer/1389889126 var1711))\n  (define-fun var1931 () Int\n    2)\n  (define-fun length/-360784002 ((x!0 var1950)) Int\n    1)\n  (define-fun buffer/1389889126 ((x!0 var1950)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163168256,
            "run_time": 2.6778032779693604,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1462!1 () (Array Int Int) (store ((as const (Array Int Int)) 9) 0 4))\r\n  (define-fun var1931 () Int 4)\r\n  (define-fun var3540 () Int 0)\r\n  (define-fun var1711 () var1950 var1950!6)\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-var1950 () var1950 var1950!4)\r\n  (define-fun length/-360784002 ((x!0 var1950)) Int (ite (= x!0 var1950!6) 1 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 8,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "c2 := @parameter1: char",
            "if i0 < 0 goto $r0 = new java.lang.StringIndexOutOfBoundsException",
            "$i1 = virtualinvoke r1.<org.apache.commons.lang3.text.StrBuilder: int length()>()",
            "if i0 < $i1 goto $r2 = r1.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "$r2 = r1.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "$r2[i0] = c2",
            "return r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.TypeUtils__classToString__-722773603\\3006.smt2",
        "z3": {
            "memory": 31125504,
            "run_time": 0.29292893409729004,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var578 () String\r\n    String-init)\r\n  (define-fun var3522 () String\r\n    (var1011_toString/367894200 (getComponentType/1960034130 var2461)))\r\n  (define-fun var1217 () Bool\r\n    (isArray/1369458484 var2461))\r\n  (define-fun var2461 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3411 () String\r\n    (str.++ var578!1\r\n        (var1011_toString/367894200 (getComponentType/1960034130 var2461))))\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var661 () String\r\n    (str.++ var578!1\r\n        (var1011_toString/367894200 (getComponentType/1960034130 var2461))\r\n        \"[]\"))\r\n  (define-fun var244 () ClassObject\r\n    (getComponentType/1960034130 var2461))\r\n  (define-fun var1160 () String\r\n    (str.++ var578!1\r\n        (var1011_toString/367894200 (getComponentType/1960034130 var2461))\r\n        \"[]\"))\r\n  (define-fun var3411!1 () String\r\n    \"[]\")\r\n  (define-fun var578!1 () String\r\n    \"\")\r\n  (define-fun var578!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun isArray/1369458484 ((x!0 ClassObject)) Bool\r\n    true)\r\n  (define-fun getComponentType/1960034130 ((x!0 ClassObject)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var1011_toString/367894200 ((x!0 ClassObject)) String\r\n    \"\")\r\n)\r\n(error \"line 44 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11460608,
            "run_time": 0.16991543769836426,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1011 is 1\r\n; rep: (as @var1011_0 var1011)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun isArray/1369458484 ((_arg_1 ClassObject)) Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun getComponentType/1960034130 ((BOUND_VARIABLE_573 ClassObject)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var1011_toString/367894200 ((BOUND_VARIABLE_576 ClassObject)) String \"\")\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var2461 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var578!1 () String \"\")\r\n(define-fun var578!2 () String \"\")\r\n(define-fun var3411!1 () String \"[]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33914880,
            "run_time": 0.19954824447631836,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  (define-fun var244 () ClassObject\n    (getComponentType/1960034130 var2461))\n  (define-fun var661 () String\n    (str.++ var578!1\n        (var1011_toString/367894200 (getComponentType/1960034130 var2461))\n        \"[]\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3411 () String\n    (str.++ var578!1\n        (var1011_toString/367894200 (getComponentType/1960034130 var2461))))\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var2461 () ClassObject\n    ClassObject!val!0)\n  (define-fun var1160 () String\n    (str.++ var578!1\n        (var1011_toString/367894200 (getComponentType/1960034130 var2461))\n        \"[]\"))\n  (define-fun var1217 () Bool\n    (isArray/1369458484 var2461))\n  (define-fun var578 () String\n    String-init)\n  (define-fun var3522 () String\n    (var1011_toString/367894200 (getComponentType/1960034130 var2461)))\n  (define-fun var3411!1 () String\n    \"[]\")\n  (define-fun var578!1 () String\n    \"\")\n  (define-fun var578!2 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun isArray/1369458484 ((x!0 ClassObject)) Bool\n    true)\n  (define-fun getComponentType/1960034130 ((x!0 ClassObject)) ClassObject\n    ClassObject!val!0)\n  (define-fun var1011_toString/367894200 ((x!0 ClassObject)) String\n    \"\")\n)\n(error \"line 44 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 161382400,
            "run_time": 3.0706942081451416,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: ClassObject/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.reflect.TypeUtils__classToString__-722773603\\3006.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3411!1 =\r\n     concat(var578!2, \"[]\")\r\n\r\n1974ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<org.apache.commons.lang3.reflect.TypeUtils: java.lang.String toString(java.lang.reflect.Type)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Class",
            "$z0 = virtualinvoke r0.<java.lang.Class: boolean isArray()>()",
            "if $z0 == 0 goto $r1 = new java.lang.StringBuilder",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke r0.<java.lang.Class: java.lang.Class getComponentType()>()",
            "$r14 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.String toString(java.lang.reflect.Type)>($r13)",
            "$r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[]\")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r17"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ClassLoaderUtils__toString__623674392\\127.smt2",
        "z3": {
            "memory": 31457280,
            "run_time": 0.29091882705688477,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3266:\r\n  ;;   var3266!val!1 var3266!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3266!val!1 () var3266)\r\n  (declare-fun var3266!val!0 () var3266)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3266)) (or (= x var3266!val!1) (= x var3266!val!0)))\r\n  ;; -----------\r\n  (define-fun var454 () String\r\n    String-init)\r\n  (define-fun var3503 () String\r\n    (append/-1031950772 var454!1 (cast-from-var3266-to-var1460 var825)))\r\n  (define-fun var825 () var3266\r\n    var3266!val!0)\r\n  (define-fun var2212 () String\r\n    (str.++ (append/-1031950772 var454!1 (cast-from-var3266-to-var1460 var825))\r\n        (var1356_toString/-575966009\r\n          (cast-from-__Array__Int__var163__-to-__Array__Int__var1460__\r\n            (getURLs/-1564369556 var825)))))\r\n  (define-fun var1677 () (Array Int var163)\r\n    (getURLs/-1564369556 var825))\r\n  (define-fun var3633 () String\r\n    (str.++ (append/-1031950772 var454!1 (cast-from-var3266-to-var1460 var825))\r\n        (var1356_toString/-575966009\r\n          (cast-from-__Array__Int__var163__-to-__Array__Int__var1460__\r\n            (getURLs/-1564369556 var825)))))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var233 () String\r\n    (var1356_toString/-575966009\r\n  (cast-from-__Array__Int__var163__-to-__Array__Int__var1460__\r\n    (getURLs/-1564369556 var825))))\r\n  (define-fun null-var3266 () var3266\r\n    var3266!val!1)\r\n  (define-fun var3503!1 () String\r\n    \"\")\r\n  (define-fun var454!1 () String\r\n    \"\")\r\n  (define-fun var454!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var3266-to-var1460 ((x!0 var3266)) var1460\r\n    var1460!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1460)) String\r\n    \"\")\r\n  (define-fun getURLs/-1564369556 ((x!0 var3266)) (Array Int var163)\r\n    ((as const (Array Int var163)) var163!val!0))\r\n  (define-fun cast-from-__Array__Int__var163__-to-__Array__Int__var1460__ ((x!0\r\n    (Array Int var163))) (Array Int var1460)\r\n    ((as const (Array Int var1460)) var1460!val!0))\r\n  (define-fun var1356_toString/-575966009 ((x!0 (Array Int var1460))) String\r\n    \"\")\r\n)\r\n(error \"line 48 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11522048,
            "run_time": 0.16991543769836426,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3266 is 2\r\n; rep: (as @var3266_0 var3266)\r\n; rep: (as @var3266_1 var3266)\r\n; cardinality of var1460 is 1\r\n; rep: (as @var1460_0 var1460)\r\n; cardinality of var163 is 1\r\n; rep: (as @var163_0 var163)\r\n; cardinality of var1356 is 1\r\n; rep: (as @var1356_0 var1356)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_564 String) (BOUND_VARIABLE_565 var1460)) String \"\")\r\n(define-fun cast-from-var3266-to-var1460 ((BOUND_VARIABLE_568 var3266)) var1460 (as @var1460_0 var1460))\r\n(define-fun getURLs/-1564369556 ((BOUND_VARIABLE_571 var3266)) (Array Int var163) ((as const (Array Int var163)) (as @var163_0 var163)))\r\n(define-fun var1356_toString/-575966009 ((BOUND_VARIABLE_576 (Array Int var1460))) String \"\")\r\n(define-fun cast-from-__Array__Int__var163__-to-__Array__Int__var1460__ ((BOUND_VARIABLE_579 (Array Int var163))) (Array Int var1460) ((as const (Array Int var1460)) (as @var1460_0 var1460)))\r\n(define-fun null-var3266 () var3266 (as @var3266_0 var3266))\r\n(define-fun var825 () var3266 (as @var3266_1 var3266))\r\n(define-fun var454!1 () String \"\")\r\n(define-fun var454!2 () String \"\")\r\n(define-fun var3503!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33755136,
            "run_time": 0.19954824447631836,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3266:\n  ;;   var3266!val!1 var3266!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3266!val!1 () var3266)\n  (declare-fun var3266!val!0 () var3266)\n  ;; cardinality constraint:\n  (forall ((x var3266)) (or (= x var3266!val!1) (= x var3266!val!0)))\n  ;; -----------\n  (define-fun var2212 () String\n    (str.++ (append/-1031950772 var454!1 (cast-from-var3266-to-var1460 var825))\n        (var1356_toString/-575966009\n          (cast-from-__Array__Int__var163__-to-__Array__Int__var1460__\n            (getURLs/-1564369556 var825)))))\n  (define-fun var3633 () String\n    (str.++ (append/-1031950772 var454!1 (cast-from-var3266-to-var1460 var825))\n        (var1356_toString/-575966009\n          (cast-from-__Array__Int__var163__-to-__Array__Int__var1460__\n            (getURLs/-1564369556 var825)))))\n  (define-fun var825 () var3266\n    var3266!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var233 () String\n    (var1356_toString/-575966009\n  (cast-from-__Array__Int__var163__-to-__Array__Int__var1460__\n    (getURLs/-1564369556 var825))))\n  (define-fun var1677 () (Array Int var163)\n    (getURLs/-1564369556 var825))\n  (define-fun var454 () String\n    String-init)\n  (define-fun null-var3266 () var3266\n    var3266!val!1)\n  (define-fun var3503 () String\n    (append/-1031950772 var454!1 (cast-from-var3266-to-var1460 var825)))\n  (define-fun var3503!1 () String\n    \"\")\n  (define-fun var454!1 () String\n    \"\")\n  (define-fun var454!2 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun cast-from-var3266-to-var1460 ((x!0 var3266)) var1460\n    var1460!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1460)) String\n    \"\")\n  (define-fun getURLs/-1564369556 ((x!0 var3266)) (Array Int var163)\n    ((as const (Array Int var163)) var163!val!0))\n  (define-fun cast-from-__Array__Int__var163__-to-__Array__Int__var1460__ ((x!0\n    (Array Int var163))) (Array Int var1460)\n    ((as const (Array Int var1460)) var1460!val!0))\n  (define-fun var1356_toString/-575966009 ((x!0 (Array Int var1460))) String\n    \"\")\n)\n(error \"line 48 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167755776,
            "run_time": 3.236741304397583,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3266/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.ClassLoaderUtils__toString__623674392\\127.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3503!1 =\r\n     concat(all_18_5, all_18_2)\r\n\r\n2123ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.util.Arrays: java.lang.String toString(java.lang.Object[])>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.net.URLClassLoader",
            "if r0 == null goto $r6 = \"null\"",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)",
            "$r2 = virtualinvoke r0.<java.net.URLClassLoader: java.net.URL[] getURLs()>()",
            "$r3 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "goto [?= return $r6]",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringBetween__-410933523\\5805-deviant-0.smt2",
        "z3": {
            "memory": 31694848,
            "run_time": 41.082833766937256,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 57 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.05908083915710449,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35344384,
            "run_time": 0.6368367671966553,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 57 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 162512896,
            "run_time": 3.326507568359375,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_indexof(var3617, var3603, all_25_1 + all_25_2, all_25_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.StringUtils__substringBetween__-410933523\\5805-deviant-0.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n2140ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.String: int indexOf(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int indexOf(java.lang.String,int)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 2,
            "<java.lang.String: int indexOf(java.lang.String,int)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.String",
            "r3 := @parameter2: java.lang.String",
            "$r0 = newarray (java.lang.Object)[3]",
            "$r0[0] = r1",
            "$r0[1] = r2",
            "$r0[2] = r3",
            "$z0 = staticinvoke <org.apache.commons.lang3.ObjectUtils: boolean allNotNull(java.lang.Object[])>($r0)",
            "if $z0 != 0 goto i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(r2)",
            "i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(r2)",
            "$i7 = (int) -1",
            "if i0 == $i7 goto return null",
            "$i1 = virtualinvoke r2.<java.lang.String: int length()>()",
            "$i2 = i0 + $i1",
            "i3 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>(r3, $i2)",
            "$i9 = (int) -1",
            "if i3 == $i9 goto return null",
            "$i4 = virtualinvoke r2.<java.lang.String: int length()>()",
            "$i5 = i0 + $i4",
            "$r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i5, i3)",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.concurrent.ConcurrentUtils__checkedException__1293445447\\1760.smt2",
        "z3": {
            "memory": 31039488,
            "run_time": 0.10275530815124512,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3913:\r\n  ;;   var3913!val!1 var3913!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3913!val!1 () var3913)\r\n  (declare-fun var3913!val!0 () var3913)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3913)) (or (= x var3913!val!1) (= x var3913!val!0)))\r\n  ;; -----------\r\n  (define-fun var1941 () String\r\n    String-init)\r\n  (define-fun var3294 () String\r\n    (append/-1031950772\r\n  (str.++ var1941!1 \"Not a checked exception: \")\r\n  (cast-from-var3913-to-var2330 var2927)))\r\n  (define-fun null-var3913 () var3913\r\n    var3913!val!1)\r\n  (define-fun var2446 () String\r\n    (str.++ var1941!1 \"Not a checked exception: \"))\r\n  (define-fun var2446!1 () String\r\n    \"Not a checked exception: \")\r\n  (define-fun var1565 () (Array Int var2330)\r\n    arr-var2330-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3579 () String\r\n    (append/-1031950772\r\n  (str.++ var1941!1 \"Not a checked exception: \")\r\n  (cast-from-var3913-to-var2330 var2927)))\r\n  (define-fun var3351 () Bool\r\n    (var38_isChecked/-1173194226 var2927))\r\n  (define-fun var2927 () var3913\r\n    var3913!val!0)\r\n  (define-fun var1941!1 () String\r\n    \"\")\r\n  (define-fun var1941!2 () String\r\n    \"Not a checked exception: \")\r\n  (define-fun var3351!1 () Bool\r\n    false)\r\n  (define-fun var3579!1 () String\r\n    \"\")\r\n  (define-fun var1565!1 () (Array Int var2330)\r\n    ((as const (Array Int var2330)) var2330!val!0))\r\n  (define-fun arr-var2330-init () (Array Int var2330)\r\n    ((as const (Array Int var2330)) var2330!val!0))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2330)) String\r\n    \"\")\r\n  (define-fun var38_isChecked/-1173194226 ((x!0 var3913)) Bool\r\n    false)\r\n  (define-fun cast-from-var3913-to-var2330 ((x!0 var3913)) var2330\r\n    var2330!val!0)\r\n  (define-fun var2953_isTrue/-214704028 ((x!0 Bool)\r\n   (x!1 String)\r\n   (x!2 (Array Int var2330))) void\r\n    void!val!0)\r\n)\r\n(error \"line 48 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10133504,
            "run_time": 0.04547429084777832,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3913 is 2\r\n; rep: (as @var3913_0 var3913)\r\n; rep: (as @var3913_1 var3913)\r\n; cardinality of var38 is 1\r\n; rep: (as @var38_0 var38)\r\n; cardinality of var2330 is 1\r\n; rep: (as @var2330_0 var2330)\r\n; cardinality of var2953 is 1\r\n; rep: (as @var2953_0 var2953)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var38_isChecked/-1173194226 ((BOUND_VARIABLE_909 var3913)) Bool false)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_912 String) (BOUND_VARIABLE_913 var2330)) String \"\")\r\n(define-fun cast-from-var3913-to-var2330 ((BOUND_VARIABLE_916 var3913)) var2330 (as @var2330_0 var2330))\r\n(define-fun arr-var2330-init () (Array Int var2330) ((as const (Array Int var2330)) (as @var2330_0 var2330)))\r\n(define-fun var2953_isTrue/-214704028 ((BOUND_VARIABLE_921 Bool) (BOUND_VARIABLE_922 String) (BOUND_VARIABLE_923 (Array Int var2330))) void (as @void_0 void))\r\n(define-fun null-var3913 () var3913 (as @var3913_0 var3913))\r\n(define-fun var2927 () var3913 (as @var3913_1 var3913))\r\n(define-fun var1941!1 () String \"\")\r\n(define-fun var1941!2 () String \"Not a checked exception: \")\r\n(define-fun var2446!1 () String \"Not a checked exception: \")\r\n(define-fun var3351!1 () Bool false)\r\n(define-fun var3579!1 () String \"\")\r\n(define-fun var1565!1 () (Array Int var2330) ((as const (Array Int var2330)) (as @var2330_0 var2330)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36843520,
            "run_time": 0.4016842842102051,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3913:\n  ;;   var3913!val!1 var3913!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3913!val!1 () var3913)\n  (declare-fun var3913!val!0 () var3913)\n  ;; cardinality constraint:\n  (forall ((x var3913)) (or (= x var3913!val!1) (= x var3913!val!0)))\n  ;; -----------\n  (define-fun var3351 () Bool\n    (var38_isChecked/-1173194226 var2927))\n  (define-fun null-var3913 () var3913\n    var3913!val!1)\n  (define-fun var1941!2 () String\n    \"Not a checked exception: \")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3579 () String\n    (append/-1031950772\n  (str.++ var1941!1 \"Not a checked exception: \")\n  (cast-from-var3913-to-var2330 var2927)))\n  (define-fun var2446!1 () String\n    \"Not a checked exception: \")\n  (define-fun var1565 () (Array Int var2330)\n    arr-var2330-init)\n  (define-fun var3294 () String\n    (append/-1031950772\n  (str.++ var1941!1 \"Not a checked exception: \")\n  (cast-from-var3913-to-var2330 var2927)))\n  (define-fun var1941 () String\n    String-init)\n  (define-fun var2446 () String\n    (str.++ var1941!1 \"Not a checked exception: \"))\n  (define-fun var2927 () var3913\n    var3913!val!0)\n  (define-fun var1941!1 () String\n    \"\")\n  (define-fun var3351!1 () Bool\n    false)\n  (define-fun var3579!1 () String\n    \"\")\n  (define-fun var1565!1 () (Array Int var2330)\n    ((as const (Array Int var2330)) var2330!val!0))\n  (define-fun arr-var2330-init () (Array Int var2330)\n    ((as const (Array Int var2330)) var2330!val!0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2330)) String\n    \"\")\n  (define-fun var38_isChecked/-1173194226 ((x!0 var3913)) Bool\n    false)\n  (define-fun cast-from-var3913-to-var2330 ((x!0 var3913)) var2330\n    var2330!val!0)\n  (define-fun var2953_isTrue/-214704028 ((x!0 Bool)\n   (x!1 String)\n   (x!2 (Array Int var2330))) void\n    void!val!0)\n)\n(error \"line 48 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 178974720,
            "run_time": 3.3002407550811768,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2446!1 () String \"Not a checked exception: \")\r\n  (define-fun var1941!2 () String \"Not a checked exception: \")\r\n  (define-fun var1941!1 () String \"\")\r\n  (define-fun var2927 () var3913 var3913!54)\r\n  (define-fun null-var3913 () var3913 var3913!52)\r\n  (define-fun abbrev_111 ((x!0 Int)) String (ite (= x!0 0) \"Not a checked exception: \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Throwable",
            "$z0 = staticinvoke <org.apache.commons.lang3.exception.ExceptionUtils: boolean isChecked(java.lang.Throwable)>(r0)",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Not a checked exception: \")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)",
            "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r4 = newarray (java.lang.Object)[0]",
            "staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>($z0, $r5, $r4)",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.ExtendedMessageFormat__readArgumentIndex__1043770850\\3474.smt2",
        "z3": {
            "memory": 31510528,
            "run_time": 0.23833036422729492,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 84 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1601536,
            "run_time": 0.029953479766845703,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34017280,
            "run_time": 0.2005469799041748,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 84 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 170483712,
            "run_time": 3.2899508476257324,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 24,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.String: java.lang.String substring(int,int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.ExtendedMessageFormat",
            "r2 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.text.ParsePosition",
            "i0 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "specialinvoke r1.<org.apache.commons.lang3.text.ExtendedMessageFormat: void seekNonWs(java.lang.String,java.text.ParsePosition)>(r2, r0)",
            "$r19 = new java.lang.StringBuilder",
            "specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()",
            "z1 = 0",
            "if z1 != 0 goto (branch)",
            "if z1 == 0 goto $r23 = new java.lang.IllegalArgumentException",
            "$r21 = new java.lang.IllegalArgumentException",
            "$r20 = new java.lang.StringBuilder",
            "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()",
            "$r11 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid format argument index at position \")",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")",
            "$i1 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "$r13 = virtualinvoke r2.<java.lang.String: java.lang.String substring(int,int)>(i0, $i1)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r21.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r16)",
            "throw $r21"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringBefore__1356398835\\5754-deviant-0.smt2",
        "z3": {
            "memory": 32047104,
            "run_time": 0.19672298431396484,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 30 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10407936,
            "run_time": 0.06175708770751953,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35897344,
            "run_time": 0.27670741081237793,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 30 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 138772480,
            "run_time": 2.4045145511627197,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.StringUtils__substringBefore__1356398835\\5754-deviant-0.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n1790ms\r\nstr_cons(var2362, 0) (of class ap.parser.IFunApp)\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: int indexOf(int)>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 == 0 goto i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(i0)",
            "i1 = virtualinvoke r0.<java.lang.String: int indexOf(int)>(i0)",
            "$i3 = (int) -1",
            "if i1 != $i3 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1)",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int,int)>(0, i1)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__deleteCharAt__378106018\\4940.smt2",
        "z3": {
            "memory": 31924224,
            "run_time": 0.1952533721923828,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2087:\r\n  ;;   var2087!val!0 var2087!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2087!val!0 () var2087)\r\n  (declare-fun var2087!val!1 () var2087)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2087)) (or (= x var2087!val!0) (= x var2087!val!1)))\r\n  ;; -----------\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var3131 () Int\r\n    (- 1))\r\n  (define-fun var625 () var2087\r\n    var2087!val!0)\r\n  (define-fun var2097 () var3941\r\n    var3941-init)\r\n  (define-fun null-var2087 () var2087\r\n    var2087!val!1)\r\n  (define-fun var2097!1 () var3941\r\n    var3941!val!0)\r\n  (define-fun var3941-init () var3941\r\n    var3941!val!0)\r\n  (define-fun var3131!1 () Int\r\n    0)\r\n  (define-fun <init>/-25822930 ((x!0 var3941) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8704000,
            "run_time": 0.14668679237365723,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2087 is 2\r\n; rep: (as @var2087_0 var2087)\r\n; rep: (as @var2087_1 var2087)\r\n; cardinality of var3941 is 1\r\n; rep: (as @var3941_0 var3941)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3941-init () var3941 (as @var3941_0 var3941))\r\n(define-fun <init>/-25822930 ((BOUND_VARIABLE_445 var3941) (BOUND_VARIABLE_446 Int)) void (as @void_0 void))\r\n(define-fun null-var2087 () var2087 (as @var2087_0 var2087))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var625 () var2087 (as @var2087_1 var2087))\r\n(define-fun var3131 () Int (- 1))\r\n(define-fun var2097!1 () var3941 (as @var3941_0 var3941))\r\n(define-fun var3131!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35532800,
            "run_time": 0.10933566093444824,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2087:\n  ;;   var2087!val!0 var2087!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2087!val!0 () var2087)\n  (declare-fun var2087!val!1 () var2087)\n  ;; cardinality constraint:\n  (forall ((x var2087)) (or (= x var2087!val!0) (= x var2087!val!1)))\n  ;; -----------\n  (define-fun null-Int () Int\n    0)\n  (define-fun var2097 () var3941\n    var3941-init)\n  (define-fun var3131 () Int\n    (- 1))\n  (define-fun var625 () var2087\n    var2087!val!0)\n  (define-fun null-var2087 () var2087\n    var2087!val!1)\n  (define-fun var2097!1 () var3941\n    var3941!val!0)\n  (define-fun var3941-init () var3941\n    var3941!val!0)\n  (define-fun var3131!1 () Int\n    0)\n  (define-fun <init>/-25822930 ((x!0 var3941) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 125206528,
            "run_time": 2.621154308319092,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3131 () Int (- 1))\r\n  (define-fun var625 () var2087 var2087!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var2087 () var2087 var2087!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>"
        ],
        "api_count": {
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "if i0 < 0 goto $r0 = new java.lang.StringIndexOutOfBoundsException",
            "$r0 = new java.lang.StringIndexOutOfBoundsException",
            "specialinvoke $r0.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__appendFixedWidthPadRight__-415098490\\3880.smt2",
        "z3": {
            "memory": 31473664,
            "run_time": 0.2119004726409912,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var956:\r\n  ;;   var956!val!1 var956!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var956!val!1 () var956)\r\n  (declare-fun var956!val!0 () var956)\r\n  ;; cardinality constraint:\r\n  (forall ((x var956)) (or (= x var956!val!1) (= x var956!val!0)))\r\n  ;; -----------\r\n  (define-fun var1662 () var956\r\n    (appendFixedWidthPadRight/-2128297344\r\n  var2067\r\n  (cast-from-String-to-var2364 (String_valueOf/1240665136 var3701))\r\n  var3939\r\n  var3933))\r\n  (define-fun null-var956 () var956\r\n    var956!val!1)\r\n  (define-fun var3701 () Int\r\n    1)\r\n  (define-fun var3939 () Int\r\n    1)\r\n  (define-fun var3933 () Int\r\n    1)\r\n  (define-fun var2067 () var956\r\n    var956!val!0)\r\n  (define-fun var2611 () String\r\n    (String_valueOf/1240665136 var3701))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun appendFixedWidthPadRight/-2128297344 ((x!0 var956)\r\n   (x!1 var2364)\r\n   (x!2 Int)\r\n   (x!3 Int)) var956\r\n    var956!val!1)\r\n  (define-fun cast-from-String-to-var2364 ((x!0 String)) var2364\r\n    var2364!val!0)\r\n  (define-fun String_valueOf/1240665136 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11304960,
            "run_time": 0.09203338623046875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var956 is 2\r\n; rep: (as @var956_0 var956)\r\n; rep: (as @var956_1 var956)\r\n; cardinality of var2364 is 1\r\n; rep: (as @var2364_0 var2364)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/1240665136 ((BOUND_VARIABLE_498 Int)) String \"\")\r\n(define-fun appendFixedWidthPadRight/-2128297344 ((BOUND_VARIABLE_501 var956) (BOUND_VARIABLE_502 var2364) (BOUND_VARIABLE_503 Int) (BOUND_VARIABLE_504 Int)) var956 (as @var956_0 var956))\r\n(define-fun cast-from-String-to-var2364 ((BOUND_VARIABLE_507 String)) var2364 (as @var2364_0 var2364))\r\n(define-fun null-var956 () var956 (as @var956_0 var956))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var2067 () var956 (as @var956_1 var956))\r\n(define-fun var3701 () Int 1)\r\n(define-fun var3939 () Int 1)\r\n(define-fun var3933 () Int 1)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35540992,
            "run_time": 0.1813356876373291,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var956:\n  ;;   var956!val!1 var956!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var956!val!1 () var956)\n  (declare-fun var956!val!0 () var956)\n  ;; cardinality constraint:\n  (forall ((x var956)) (or (= x var956!val!1) (= x var956!val!0)))\n  ;; -----------\n  (define-fun var2611 () String\n    (String_valueOf/1240665136 var3701))\n  (define-fun null-var956 () var956\n    var956!val!1)\n  (define-fun var3701 () Int\n    1)\n  (define-fun var3939 () Int\n    1)\n  (define-fun var3933 () Int\n    1)\n  (define-fun var2067 () var956\n    var956!val!0)\n  (define-fun var1662 () var956\n    (appendFixedWidthPadRight/-2128297344\n  var2067\n  (cast-from-String-to-var2364 (String_valueOf/1240665136 var3701))\n  var3939\n  var3933))\n  (define-fun null-Int () Int\n    0)\n  (define-fun appendFixedWidthPadRight/-2128297344 ((x!0 var956)\n   (x!1 var2364)\n   (x!2 Int)\n   (x!3 Int)) var956\n    var956!val!1)\n  (define-fun cast-from-String-to-var2364 ((x!0 String)) var2364\n    var2364!val!0)\n  (define-fun String_valueOf/1240665136 ((x!0 Int)) String\n    \"\")\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140533760,
            "run_time": 2.6831607818603516,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3933 () Int 1)\r\n  (define-fun var3939 () Int 1)\r\n  (define-fun var3701 () Int 1)\r\n  (define-fun var2067 () var956 var956!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var956 () var956 var956!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "i1 := @parameter1: int",
            "c2 := @parameter2: char",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(i0)",
            "$r2 = virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder appendFixedWidthPadRight(java.lang.Object,int,char)>($r1, i1, c2)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6751.smt2",
        "z3": {
            "memory": 31518720,
            "run_time": 0.2415313720703125,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 73 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8667136,
            "run_time": 0.07397794723510742,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34856960,
            "run_time": 0.19683575630187988,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 73 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 149471232,
            "run_time": 2.7774481773376465,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 3,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 1",
            "goto [?= z3 = $z6]",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 0",
            "$z8 = 0",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = $i1 + $i0",
            "$i2 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i4 = $i3 + $i2",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4)",
            "if z3 == 0 goto virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "if z5 == 0 goto $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__substring__-694008227\\5894.smt2",
        "z3": {
            "memory": 31911936,
            "run_time": 0.18988752365112305,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1993:\r\n  ;;   var1993!val!1 var1993!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1993!val!1 () var1993)\r\n  (declare-fun var1993!val!0 () var1993)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1993)) (or (= x var1993!val!1) (= x var1993!val!0)))\r\n  ;; -----------\r\n  (define-fun var272 () Int\r\n    1)\r\n  (define-fun null-var1993 () var1993\r\n    var1993!val!1)\r\n  (define-fun var3907 () (Array Int Int)\r\n    (buffer/1389889126 var2852))\r\n  (define-fun var2705 () Int\r\n    (validateRange/-28387379 var2852 var272 var2931))\r\n  (define-fun var2931 () Int\r\n    1)\r\n  (define-fun var3885 () Int\r\n    (- (validateRange/-28387379 var2852 var272 var2931) var272))\r\n  (define-fun var1003 () String\r\n    String-init)\r\n  (define-fun var2852 () var1993\r\n    var1993!val!0)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var3885!1 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3907!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var272!1 () Int\r\n    0)\r\n  (define-fun var1003!1 () String\r\n    \"\")\r\n  (define-fun validateRange/-28387379 ((x!0 var1993) (x!1 Int) (x!2 Int)) Int\r\n    0)\r\n  (define-fun buffer/1389889126 ((x!0 var1993)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 5169152,
            "run_time": 0.06021690368652344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1993 is 2\r\n; rep: (as @var1993_0 var1993)\r\n; rep: (as @var1993_1 var1993)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun validateRange/-28387379 ((BOUND_VARIABLE_487 var1993) (BOUND_VARIABLE_488 Int) (BOUND_VARIABLE_489 Int)) Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun buffer/1389889126 ((BOUND_VARIABLE_492 var1993)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_497 String) (BOUND_VARIABLE_498 (Array Int Int)) (BOUND_VARIABLE_499 Int) (BOUND_VARIABLE_500 Int)) void (as @void_0 void))\r\n(define-fun null-var1993 () var1993 (as @var1993_0 var1993))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var2852 () var1993 (as @var1993_1 var1993))\r\n(define-fun var272 () Int 1)\r\n(define-fun var2931 () Int 1)\r\n(define-fun var1003!1 () String \"\")\r\n(define-fun var3907!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var272!1 () Int 0)\r\n(define-fun var3885!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36044800,
            "run_time": 0.18034148216247559,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1993:\n  ;;   var1993!val!1 var1993!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1993!val!1 () var1993)\n  (declare-fun var1993!val!0 () var1993)\n  ;; cardinality constraint:\n  (forall ((x var1993)) (or (= x var1993!val!1) (= x var1993!val!0)))\n  ;; -----------\n  (define-fun var3907 () (Array Int Int)\n    (buffer/1389889126 var2852))\n  (define-fun var3885 () Int\n    (- (validateRange/-28387379 var2852 var272 var2931) var272))\n  (define-fun var272 () Int\n    1)\n  (define-fun null-var1993 () var1993\n    var1993!val!1)\n  (define-fun var1003 () String\n    String-init)\n  (define-fun var2931 () Int\n    1)\n  (define-fun var2705 () Int\n    (validateRange/-28387379 var2852 var272 var2931))\n  (define-fun var2852 () var1993\n    var1993!val!0)\n  (define-fun null-Int () Int\n    0)\n  (define-fun var3885!1 () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3907!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var272!1 () Int\n    0)\n  (define-fun var1003!1 () String\n    \"\")\n  (define-fun validateRange/-28387379 ((x!0 var1993) (x!1 Int) (x!2 Int)) Int\n    0)\n  (define-fun buffer/1389889126 ((x!0 var1993)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166174720,
            "run_time": 2.9225010871887207,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2931 () Int 1)\r\n  (define-fun var272 () Int 1)\r\n  (define-fun var2852 () var1993 var1993!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var1993 () var1993 var1993!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: void <init>(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "i2 := @parameter1: int",
            "i3 = virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: int validateRange(int,int)>(i0, i2)",
            "$r1 = new java.lang.String",
            "$r2 = r0.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "$i1 = i3 - i0",
            "specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>($r2, i0, $i1)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__setLength__1429502386\\5840.smt2",
        "z3": {
            "memory": 31612928,
            "run_time": 0.1238243579864502,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3468:\r\n  ;;   var3468!val!0 var3468!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3468!val!0 () var3468)\r\n  (declare-fun var3468!val!1 () var3468)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3468)) (or (= x var3468!val!0) (= x var3468!val!1)))\r\n  ;; -----------\r\n  (define-fun var1317 () var2637\r\n    var2637-init)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var3768 () Int\r\n    (- 1))\r\n  (define-fun null-var3468 () var3468\r\n    var3468!val!1)\r\n  (define-fun var2433 () var3468\r\n    var3468!val!0)\r\n  (define-fun var2637-init () var2637\r\n    var2637!val!0)\r\n  (define-fun var3768!1 () Int\r\n    0)\r\n  (define-fun var1317!1 () var2637\r\n    var2637!val!0)\r\n  (define-fun <init>/-25822930 ((x!0 var2637) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1626112,
            "run_time": 0.10522818565368652,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3468 is 2\r\n; rep: (as @var3468_0 var3468)\r\n; rep: (as @var3468_1 var3468)\r\n; cardinality of var2637 is 1\r\n; rep: (as @var2637_0 var2637)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2637-init () var2637 (as @var2637_0 var2637))\r\n(define-fun <init>/-25822930 ((BOUND_VARIABLE_443 var2637) (BOUND_VARIABLE_444 Int)) void (as @void_0 void))\r\n(define-fun null-var3468 () var3468 (as @var3468_0 var3468))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var2433 () var3468 (as @var3468_1 var3468))\r\n(define-fun var3768 () Int (- 1))\r\n(define-fun var1317!1 () var2637 (as @var2637_0 var2637))\r\n(define-fun var3768!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33775616,
            "run_time": 0.2039198875427246,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3468:\n  ;;   var3468!val!0 var3468!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3468!val!0 () var3468)\n  (declare-fun var3468!val!1 () var3468)\n  ;; cardinality constraint:\n  (forall ((x var3468)) (or (= x var3468!val!0) (= x var3468!val!1)))\n  ;; -----------\n  (define-fun null-Int () Int\n    0)\n  (define-fun var3768 () Int\n    (- 1))\n  (define-fun null-var3468 () var3468\n    var3468!val!1)\n  (define-fun var1317 () var2637\n    var2637-init)\n  (define-fun var2433 () var3468\n    var3468!val!0)\n  (define-fun var2637-init () var2637\n    var2637!val!0)\n  (define-fun var3768!1 () Int\n    0)\n  (define-fun var1317!1 () var2637\n    var2637!val!0)\n  (define-fun <init>/-25822930 ((x!0 var2637) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 126111744,
            "run_time": 2.585277557373047,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3768 () Int (- 1))\r\n  (define-fun var2433 () var3468 var3468!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3468 () var3468 var3468!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>"
        ],
        "api_count": {
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "if i0 >= 0 goto $i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$r2 = new java.lang.StringIndexOutOfBoundsException",
            "specialinvoke $r2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0)",
            "throw $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__startsWith__-2030455765\\5870.smt2",
        "z3": {
            "memory": 31756288,
            "run_time": 0.21052765846252441,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1971:\r\n  ;;   var1971!val!0 var1971!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1971!val!0 () var1971)\r\n  (declare-fun var1971!val!1 () var1971)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1971)) (or (= x var1971!val!0) (= x var1971!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var1971 () var1971\r\n    var1971!val!1)\r\n  (define-fun var2319 () Int\r\n    (str.len var1237))\r\n  (define-fun var1237 () String\r\n    \"A\")\r\n  (define-fun var3442 () var1971\r\n    var1971!val!0)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var823 () Int\r\n    (size/1389889126 var3442))\r\n  (define-fun size/1389889126 ((x!0 var1971)) Int\r\n    0)\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12283904,
            "run_time": 0.08581781387329102,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1971 is 2\r\n; rep: (as @var1971_0 var1971)\r\n; rep: (as @var1971_1 var1971)\r\n; cardinality of var3695 is 1\r\n; rep: (as @var3695_0 var3695)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var1971)) Int 0)\r\n(define-fun null-var1971 () var1971 (as @var1971_0 var1971))\r\n(define-fun null-String () String \"\")\r\n(define-fun var3442 () var1971 (as @var1971_1 var1971))\r\n(define-fun var1237 () String \"A\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37445632,
            "run_time": 0.15713930130004883,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1971:\n  ;;   var1971!val!0 var1971!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1971!val!0 () var1971)\n  (declare-fun var1971!val!1 () var1971)\n  ;; cardinality constraint:\n  (forall ((x var1971)) (or (= x var1971!val!0) (= x var1971!val!1)))\n  ;; -----------\n  (define-fun var3442 () var1971\n    var1971!val!0)\n  (define-fun null-var1971 () var1971\n    var1971!val!1)\n  (define-fun var2319 () Int\n    (str.len var1237))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var823 () Int\n    (size/1389889126 var3442))\n  (define-fun var1237 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun size/1389889126 ((x!0 var1971)) Int\n    1)\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150089728,
            "run_time": 2.95867919921875,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1971/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.text.StrBuilder__startsWith__-2030455765\\5870.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n\r\n1667ms\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrBuilder",
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i0 != 0 goto $i1 = r1.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i1 = r1.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i0 <= $i1 goto i4 = 0",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__validateRange__-28387379\\6426.smt2",
        "z3": {
            "memory": 31883264,
            "run_time": 0.14122796058654785,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var66:\r\n  ;;   var66!val!1 var66!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var66!val!1 () var66)\r\n  (declare-fun var66!val!0 () var66)\r\n  ;; cardinality constraint:\r\n  (forall ((x var66)) (or (= x var66!val!1) (= x var66!val!0)))\r\n  ;; -----------\r\n  (define-fun var3519 () var66\r\n    var66!val!0)\r\n  (define-fun var1153 () Int\r\n    1)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var245 () var3410\r\n    var3410-init)\r\n  (define-fun var2829 () Int\r\n    (- 1))\r\n  (define-fun null-var66 () var66\r\n    var66!val!1)\r\n  (define-fun var2829!1 () Int\r\n    0)\r\n  (define-fun var245!1 () var3410\r\n    var3410!val!0)\r\n  (define-fun var3410-init () var3410\r\n    var3410!val!0)\r\n  (define-fun <init>/-25822930 ((x!0 var3410) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1650688,
            "run_time": 0.033553123474121094,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var66 is 2\r\n; rep: (as @var66_0 var66)\r\n; rep: (as @var66_1 var66)\r\n; cardinality of var3410 is 1\r\n; rep: (as @var3410_0 var3410)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3410-init () var3410 (as @var3410_0 var3410))\r\n(define-fun <init>/-25822930 ((BOUND_VARIABLE_467 var3410) (BOUND_VARIABLE_468 Int)) void (as @void_0 void))\r\n(define-fun null-var66 () var66 (as @var66_0 var66))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var3519 () var66 (as @var66_1 var66))\r\n(define-fun var2829 () Int (- 1))\r\n(define-fun var1153 () Int 0)\r\n(define-fun var245!1 () var3410 (as @var3410_0 var3410))\r\n(define-fun var2829!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36589568,
            "run_time": 0.18493342399597168,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var66:\n  ;;   var66!val!1 var66!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var66!val!1 () var66)\n  (declare-fun var66!val!0 () var66)\n  ;; cardinality constraint:\n  (forall ((x var66)) (or (= x var66!val!1) (= x var66!val!0)))\n  ;; -----------\n  (define-fun var3519 () var66\n    var66!val!0)\n  (define-fun var1153 () Int\n    1)\n  (define-fun null-Int () Int\n    0)\n  (define-fun var2829 () Int\n    (- 1))\n  (define-fun null-var66 () var66\n    var66!val!1)\n  (define-fun var245 () var3410\n    var3410-init)\n  (define-fun var2829!1 () Int\n    0)\n  (define-fun var245!1 () var3410\n    var3410!val!0)\n  (define-fun var3410-init () var3410\n    var3410!val!0)\n  (define-fun <init>/-25822930 ((x!0 var3410) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 126537728,
            "run_time": 2.508629322052002,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1153 () Int 1)\r\n  (define-fun var2829 () Int (- 1))\r\n  (define-fun var3519 () var66 var66!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var66 () var66 var66!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>"
        ],
        "api_count": {
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "i2 := @parameter1: int",
            "if i0 >= 0 goto $i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$r2 = new java.lang.StringIndexOutOfBoundsException",
            "specialinvoke $r2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0)",
            "throw $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6760.smt2",
        "z3": {
            "memory": 31617024,
            "run_time": 0.4110105037689209,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 75 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9744384,
            "run_time": 0.04025435447692871,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33312768,
            "run_time": 0.1527576446533203,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 75 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141742080,
            "run_time": 2.8716518878936768,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 3,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 0",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 1",
            "$z8 = 1",
            "goto [?= z5 = $z8]",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "if $z9 != 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = $i1 + $i0",
            "$i2 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i4 = $i3 + $i2",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4)",
            "if z3 == 0 goto virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "if z5 == 0 goto $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__insert__1427295636\\5614.smt2",
        "z3": {
            "memory": 31879168,
            "run_time": 0.18390655517578125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var431:\r\n  ;;   var431!val!0 var431!val!2 var431!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var431!val!0 () var431)\r\n  (declare-fun var431!val!2 () var431)\r\n  (declare-fun var431!val!1 () var431)\r\n  ;; cardinality constraint:\r\n  (forall ((x var431))\r\n          (or (= x var431!val!0) (= x var431!val!2) (= x var431!val!1)))\r\n  ;; -----------\r\n  (define-fun var2572 () Int\r\n    (size/1389889126 var2027!2))\r\n  (define-fun var2027!3 () var431\r\n    var431!val!2)\r\n  (define-fun var2019 () String\r\n    \"A\")\r\n  (define-fun var1946 () (Array Int Int)\r\n    (buffer/1389889126 var2027!3))\r\n  (define-fun null-String () String\r\n    \"B\")\r\n  (define-fun var1350 () Int\r\n    (- (size/1389889126 var2027!2) var1473!1))\r\n  (define-fun var2330 () Int\r\n    (+ (size/1389889126 var2027!1) (str.len var2019)))\r\n  (define-fun var1828 () (Array Int Int)\r\n    (buffer/1389889126 var2027!2))\r\n  (define-fun var1473 () Int\r\n    1)\r\n  (define-fun var103 () Int\r\n    (str.len var2019))\r\n  (define-fun var269 () Int\r\n    (size/1389889126 var2027!1))\r\n  (define-fun var2027 () var431\r\n    var431!val!0)\r\n  (define-fun var1478 () (Array Int Int)\r\n    (buffer/1389889126 var2027!2))\r\n  (define-fun null-var431 () var431\r\n    var431!val!1)\r\n  (define-fun var557 () Int\r\n    (+ var1473!1 (str.len var2019)))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var2330!1 () Int\r\n    0)\r\n  (define-fun var103!1 () Int\r\n    0)\r\n  (define-fun var1828!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var1350!1 () Int\r\n    0)\r\n  (define-fun var2027!1 () var431\r\n    var431!val!0)\r\n  (define-fun var1946!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var2027!2 () var431\r\n    var431!val!0)\r\n  (define-fun var1473!1 () Int\r\n    0)\r\n  (define-fun var1478!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var2019!1 () String\r\n    \"\")\r\n  (define-fun var1473!2 () Int\r\n    0)\r\n  (define-fun var3864 () Int\r\n    0)\r\n  (define-fun var557!1 () Int\r\n    0)\r\n  (define-fun var1473!3 () Int\r\n    0)\r\n  (define-fun size/1389889126 ((x!0 var431)) Int\r\n    0)\r\n  (define-fun ensureCapacity/784942214 ((x!0 var431) (x!1 Int)) var431\r\n    var431!val!0)\r\n  (define-fun validateIndex/-1908911276 ((x!0 var431) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun buffer/1389889126 ((x!0 var431)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var1970_arraycopy/-325913181 ((x!0 var3420)\r\n   (x!1 Int)\r\n   (x!2 var3420)\r\n   (x!3 Int)\r\n   (x!4 Int)) void\r\n    void!val!0)\r\n  (define-fun cast-from-__Array__Int__Int__-to-var3420 ((x!0 (Array Int Int))) var3420\r\n    var3420!val!0)\r\n  (define-fun getChars/1306883398 ((x!0 String)\r\n   (x!1 Int)\r\n   (x!2 Int)\r\n   (x!3 (Array Int Int))\r\n   (x!4 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 76 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8658944,
            "run_time": 0.08228349685668945,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var431 is 3\r\n; rep: (as @var431_0 var431)\r\n; rep: (as @var431_1 var431)\r\n; rep: (as @var431_2 var431)\r\n; cardinality of var3781 is 1\r\n; rep: (as @var3781_0 var3781)\r\n; cardinality of var1970 is 1\r\n; rep: (as @var1970_0 var1970)\r\n; cardinality of var3420 is 1\r\n; rep: (as @var3420_0 var3420)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun validateIndex/-1908911276 ((BOUND_VARIABLE_625 var431) (BOUND_VARIABLE_626 Int)) void (as @void_0 void))\r\n(define-fun size/1389889126 ((BOUND_VARIABLE_629 var431)) Int 0)\r\n(define-fun ensureCapacity/784942214 ((BOUND_VARIABLE_632 var431) (BOUND_VARIABLE_633 Int)) var431 (as @var431_0 var431))\r\n(define-fun buffer/1389889126 ((BOUND_VARIABLE_636 var431)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1970_arraycopy/-325913181 ((BOUND_VARIABLE_641 var3420) (BOUND_VARIABLE_642 Int) (BOUND_VARIABLE_643 var3420) (BOUND_VARIABLE_644 Int) (BOUND_VARIABLE_645 Int)) void (as @void_0 void))\r\n(define-fun cast-from-__Array__Int__Int__-to-var3420 ((BOUND_VARIABLE_648 (Array Int Int))) var3420 (as @var3420_0 var3420))\r\n(define-fun getChars/1306883398 ((BOUND_VARIABLE_651 String) (BOUND_VARIABLE_652 Int) (BOUND_VARIABLE_653 Int) (BOUND_VARIABLE_654 (Array Int Int)) (BOUND_VARIABLE_655 Int)) void (as @void_0 void))\r\n(define-fun null-var431 () var431 (as @var431_0 var431))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-String () String \"\")\r\n(define-fun var2027 () var431 (as @var431_1 var431))\r\n(define-fun var1473 () Int 0)\r\n(define-fun var2019 () String \"A\")\r\n(define-fun var2027!1 () var431 (as @var431_0 var431))\r\n(define-fun var1473!1 () Int 0)\r\n(define-fun var2027!2 () var431 (as @var431_0 var431))\r\n(define-fun var2330!1 () Int 0)\r\n(define-fun var1828!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1473!2 () Int 0)\r\n(define-fun var1478!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var557!1 () Int 0)\r\n(define-fun var1350!1 () Int 0)\r\n(define-fun var2027!3 () var431 (as @var431_2 var431))\r\n(define-fun var2019!1 () String \"\")\r\n(define-fun var3864 () Int 0)\r\n(define-fun var103!1 () Int 0)\r\n(define-fun var1946!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1473!3 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37457920,
            "run_time": 0.2030344009399414,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var431:\n  ;;   var431!val!0 var431!val!2 var431!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var431!val!0 () var431)\n  (declare-fun var431!val!2 () var431)\n  (declare-fun var431!val!1 () var431)\n  ;; cardinality constraint:\n  (forall ((x var431))\n          (or (= x var431!val!0) (= x var431!val!2) (= x var431!val!1)))\n  ;; -----------\n  (define-fun var2330!1 () Int\n    0)\n  (define-fun null-Int () Int\n    0)\n  (define-fun var1478 () (Array Int Int)\n    (buffer/1389889126 var2027!2))\n  (define-fun var1350 () Int\n    (- (size/1389889126 var2027!2) var1473!1))\n  (define-fun var1473 () Int\n    1)\n  (define-fun var1828 () (Array Int Int)\n    (buffer/1389889126 var2027!2))\n  (define-fun var2019 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var269 () Int\n    (size/1389889126 var2027!1))\n  (define-fun var2572 () Int\n    (size/1389889126 var2027!2))\n  (define-fun var103 () Int\n    (str.len var2019))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var557 () Int\n    (+ var1473!1 (str.len var2019)))\n  (define-fun var1946 () (Array Int Int)\n    (buffer/1389889126 var2027!3))\n  (define-fun var2027 () var431\n    var431!val!0)\n  (define-fun var2330 () Int\n    (+ (size/1389889126 var2027!1) (str.len var2019)))\n  (define-fun var2027!3 () var431\n    var431!val!2)\n  (define-fun null-var431 () var431\n    var431!val!1)\n  (define-fun var103!1 () Int\n    0)\n  (define-fun var1828!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var1350!1 () Int\n    0)\n  (define-fun var2027!1 () var431\n    var431!val!0)\n  (define-fun var1946!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var2027!2 () var431\n    var431!val!0)\n  (define-fun var1473!1 () Int\n    0)\n  (define-fun var1478!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var2019!1 () String\n    \"\")\n  (define-fun var1473!2 () Int\n    0)\n  (define-fun var3864 () Int\n    0)\n  (define-fun var557!1 () Int\n    0)\n  (define-fun var1473!3 () Int\n    0)\n  (define-fun size/1389889126 ((x!0 var431)) Int\n    0)\n  (define-fun ensureCapacity/784942214 ((x!0 var431) (x!1 Int)) var431\n    var431!val!0)\n  (define-fun validateIndex/-1908911276 ((x!0 var431) (x!1 Int)) void\n    void!val!0)\n  (define-fun buffer/1389889126 ((x!0 var431)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var1970_arraycopy/-325913181 ((x!0 var3420)\n   (x!1 Int)\n   (x!2 var3420)\n   (x!3 Int)\n   (x!4 Int)) void\n    void!val!0)\n  (define-fun cast-from-__Array__Int__Int__-to-var3420 ((x!0 (Array Int Int))) var3420\n    var3420!val!0)\n  (define-fun getChars/1306883398 ((x!0 String)\n   (x!1 Int)\n   (x!2 Int)\n   (x!3 (Array Int Int))\n   (x!4 Int)) void\n    void!val!0)\n)\n(error \"line 76 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 160317440,
            "run_time": 3.1910834312438965,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2027!3 () var431 var431!8)\r\n  (define-fun var2330!1 () Int 3)\r\n  (define-fun var2019 () String \"\\u{0}\")\r\n  (define-fun var1473 () Int 1)\r\n  (define-fun var2027 () var431 var431!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var431 () var431 var431!2)\r\n  (define-fun size/1389889126 ((x!0 var431)) Int (ite (= x!0 var431!8) 3 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: void getChars(int,int,char[],int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: void getChars(int,int,char[],int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "r4 := @parameter1: java.lang.String",
            "virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: void validateIndex(int)>(i0)",
            "if r4 != null goto (branch)",
            "if r4 == null goto return r0",
            "i1 = virtualinvoke r4.<java.lang.String: int length()>()",
            "if i1 <= 0 goto return r0",
            "$i2 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "i3 = $i2 + i1",
            "virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder ensureCapacity(int)>(i3)",
            "$r2 = r0.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "$r1 = r0.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "$i6 = i0 + i1",
            "$i4 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i5 = $i4 - i0",
            "staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>($r2, i0, $r1, $i6, $i5)",
            "r0.<org.apache.commons.lang3.text.StrBuilder: int size> = i3",
            "$r3 = r0.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "virtualinvoke r4.<java.lang.String: void getChars(int,int,char[],int)>(0, i1, $r3, i0)",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__midString__1021665925\\5698.smt2",
        "z3": {
            "memory": 31498240,
            "run_time": 0.23934626579284668,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1896:\r\n  ;;   var1896!val!1 var1896!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1896!val!1 () var1896)\r\n  (declare-fun var1896!val!0 () var1896)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1896)) (or (= x var1896!val!1) (= x var1896!val!0)))\r\n  ;; -----------\r\n  (define-fun var1459 () Int\r\n    (size/1389889126 var1087))\r\n  (define-fun var3570 () Int\r\n    (+ var1366 var847))\r\n  (define-fun var847 () Int\r\n    1)\r\n  (define-fun var645 () Int\r\n    (size/1389889126 var1087))\r\n  (define-fun var3047 () (Array Int Int)\r\n    (buffer/1389889126 var1087))\r\n  (define-fun null-var1896 () var1896\r\n    var1896!val!1)\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var1819 () String\r\n    String-init)\r\n  (define-fun var1087 () var1896\r\n    var1896!val!0)\r\n  (define-fun var1366 () Int\r\n    0)\r\n  (define-fun var1366!1 () Int\r\n    0)\r\n  (define-fun var847!1 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3047!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var1819!1 () String\r\n    \"\")\r\n  (define-fun size/1389889126 ((x!0 var1896)) Int\r\n    2)\r\n  (define-fun buffer/1389889126 ((x!0 var1896)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7442432,
            "run_time": 0.13650798797607422,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1896 is 2\r\n; rep: (as @var1896_0 var1896)\r\n; rep: (as @var1896_1 var1896)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var1896)) Int 2)\r\n(define-fun String-init () String \"\")\r\n(define-fun buffer/1389889126 ((BOUND_VARIABLE_526 var1896)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_531 String) (BOUND_VARIABLE_532 (Array Int Int)) (BOUND_VARIABLE_533 Int) (BOUND_VARIABLE_534 Int)) void (as @void_0 void))\r\n(define-fun null-var1896 () var1896 (as @var1896_0 var1896))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1087 () var1896 (as @var1896_1 var1896))\r\n(define-fun var1366 () Int 0)\r\n(define-fun var847 () Int 1)\r\n(define-fun var1819!1 () String \"\")\r\n(define-fun var3047!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1366!1 () Int 0)\r\n(define-fun var847!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36044800,
            "run_time": 0.12635564804077148,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1896:\n  ;;   var1896!val!1 var1896!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1896!val!1 () var1896)\n  (declare-fun var1896!val!0 () var1896)\n  ;; cardinality constraint:\n  (forall ((x var1896)) (or (= x var1896!val!1) (= x var1896!val!0)))\n  ;; -----------\n  (define-fun var3047 () (Array Int Int)\n    (buffer/1389889126 var1087))\n  (define-fun var1459 () Int\n    (size/1389889126 var1087))\n  (define-fun var847 () Int\n    1)\n  (define-fun var3570 () Int\n    (+ var1366 var847))\n  (define-fun var1819 () String\n    String-init)\n  (define-fun null-var1896 () var1896\n    var1896!val!1)\n  (define-fun null-Int () Int\n    3)\n  (define-fun var645 () Int\n    (size/1389889126 var1087))\n  (define-fun var1087 () var1896\n    var1896!val!0)\n  (define-fun var1366 () Int\n    0)\n  (define-fun var1366!1 () Int\n    0)\n  (define-fun var847!1 () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3047!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var1819!1 () String\n    \"\")\n  (define-fun size/1389889126 ((x!0 var1896)) Int\n    2)\n  (define-fun buffer/1389889126 ((x!0 var1896)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167464960,
            "run_time": 3.0606935024261475,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var847 () Int 1)\r\n  (define-fun var1366 () Int 0)\r\n  (define-fun var1087 () var1896 var1896!8)\r\n  (define-fun null-Int () Int 2)\r\n  (define-fun null-var1896 () var1896 var1896!6)\r\n  (define-fun size/1389889126 ((x!0 var1896)) Int (ite (= x!0 var1896!8) 2 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: void <init>(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i6 := @parameter0: int",
            "i0 := @parameter1: int",
            "if i6 >= 0 goto (branch)",
            "if i0 <= 0 goto return \"\"",
            "$i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i6 < $i1 goto $i3 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i3 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i2 = i6 + i0",
            "if $i3 > $i2 goto $r1 = new java.lang.String",
            "$r1 = new java.lang.String",
            "$r2 = r0.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "specialinvoke $r1.<java.lang.String: void <init>(char[],int,int)>($r2, i6, i0)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.TypeUtils__genericArrayTypeToString__-1630980386\\3267.smt2",
        "z3": {
            "memory": 31703040,
            "run_time": 0.2497851848602295,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var335:\r\n  ;;   var335!val!2 var335!val!0 var335!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var335!val!2 () var335)\r\n  (declare-fun var335!val!0 () var335)\r\n  (declare-fun var335!val!1 () var335)\r\n  ;; cardinality constraint:\r\n  (forall ((x var335))\r\n          (or (= x var335!val!2) (= x var335!val!0) (= x var335!val!1)))\r\n  ;; -----------\r\n  ;; universe for var716:\r\n  ;;   var716!val!0 var716!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var716!val!0 () var716)\r\n  (declare-fun var716!val!1 () var716)\r\n  ;; cardinality constraint:\r\n  (forall ((x var716)) (or (= x var716!val!0) (= x var716!val!1)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  (define-fun var3514 () String\r\n    (String_format/1339386452 \"%s[]\" var790!1))\r\n  (define-fun var790!1 () (Array Int var335)\r\n    (store ((as const (Array Int var335)) var335!val!0) 2 var335!val!1))\r\n  (define-fun var2919 () var716\r\n    var716!val!0)\r\n  (define-fun var1493 () String\r\n    (var2736_toString/367894200 (var716_getGenericComponentType/-709770427 var2919)))\r\n  (define-fun null-__Array__Int__var335__ () (Array Int var335)\r\n    ((as const (Array Int var335)) var335!val!2))\r\n  (define-fun var790 () (Array Int var335)\r\n    arr-var335-init)\r\n  (define-fun var1342 () ClassObject\r\n    (var716_getGenericComponentType/-709770427 var2919))\r\n  (define-fun null-var716 () var716\r\n    var716!val!1)\r\n  (define-fun arr-var335-init () (Array Int var335)\r\n    ((as const (Array Int var335)) var335!val!0))\r\n  (define-fun var2736_toString/367894200 ((x!0 ClassObject)) String\r\n    \"!0!\")\r\n  (define-fun var716_getGenericComponentType/-709770427 ((x!0 var716)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun cast-from-String-to-var335 ((x!0 String)) var335\r\n    var335!val!0)\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var335))) String\r\n    \"\")\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11325440,
            "run_time": 0.04526090621948242,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var716 is 2\r\n; rep: (as @var716_0 var716)\r\n; rep: (as @var716_1 var716)\r\n; cardinality of var335 is 2\r\n; rep: (as @var335_0 var335)\r\n; rep: (as @var335_1 var335)\r\n; cardinality of var2736 is 1\r\n; rep: (as @var2736_0 var2736)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var335-init () (Array Int var335) ((as const (Array Int var335)) (as @var335_0 var335)))\r\n(define-fun var716_getGenericComponentType/-709770427 ((_arg_1 var716)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var2736_toString/367894200 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun cast-from-String-to-var335 ((_arg_1 String)) var335 (as @var335_1 var335))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_512 String) (BOUND_VARIABLE_513 (Array Int var335))) String \"\")\r\n(define-fun null-var716 () var716 (as @var716_0 var716))\r\n(define-fun null-__Array__Int__var335__ () (Array Int var335) (store ((as const (Array Int var335)) (as @var335_1 var335)) 0 (as @var335_0 var335)))\r\n(define-fun var2919 () var716 (as @var716_1 var716))\r\n(define-fun var790!1 () (Array Int var335) (store ((as const (Array Int var335)) (as @var335_0 var335)) 0 (as @var335_1 var335)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36511744,
            "run_time": 0.15848374366760254,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 28 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 160882688,
            "run_time": 3.031810760498047,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var790!1 () (Array Int var335) (store ((as const (Array Int var335)) var335!24) 0 var335!18))\r\n  (define-fun var2919 () var716 var716!4)\r\n  (define-fun null-__Array__Int__var335__ () (Array Int var335) ((as const (Array Int var335)) var335!0))\r\n  (define-fun null-var716 () var716 var716!2)\r\n  (define-fun var335!18 () var335 (cast-from-String-to-var335 \"\\u{0}\"))\r\n  (define-fun ClassObject!20 () ClassObject (var716_getGenericComponentType/-709770427 var716!4))\r\n  (define-fun var2736_toString/367894200 ((x!0 ClassObject)) String (ite (= x!0 ClassObject!20) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 3,
        "api_sequence": [
            "<org.apache.commons.lang3.reflect.TypeUtils: java.lang.String toString(java.lang.reflect.Type)>",
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.reflect.GenericArrayType",
            "$r0 = newarray (java.lang.Object)[1]",
            "$r2 = interfaceinvoke r1.<java.lang.reflect.GenericArrayType: java.lang.reflect.Type getGenericComponentType()>()",
            "$r3 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.String toString(java.lang.reflect.Type)>($r2)",
            "$r0[0] = $r3",
            "$r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"%s[]\", $r0)",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.concurrent.ConstantInitializer__toString__-1668501428\\1879.smt2",
        "z3": {
            "memory": 31645696,
            "run_time": 0.21402311325073242,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1319:\r\n  ;;   var1319!val!2 var1319!val!4 var1319!val!3 var1319!val!5 var1319!val!7 var1319!val!6 var1319!val!0 var1319!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1319!val!2 () var1319)\r\n  (declare-fun var1319!val!4 () var1319)\r\n  (declare-fun var1319!val!3 () var1319)\r\n  (declare-fun var1319!val!5 () var1319)\r\n  (declare-fun var1319!val!7 () var1319)\r\n  (declare-fun var1319!val!6 () var1319)\r\n  (declare-fun var1319!val!0 () var1319)\r\n  (declare-fun var1319!val!1 () var1319)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1319))\r\n          (or (= x var1319!val!2)\r\n              (= x var1319!val!4)\r\n              (= x var1319!val!3)\r\n              (= x var1319!val!5)\r\n              (= x var1319!val!7)\r\n              (= x var1319!val!6)\r\n              (= x var1319!val!0)\r\n              (= x var1319!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3473:\r\n  ;;   var3473!val!0 var3473!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3473!val!0 () var3473)\r\n  (declare-fun var3473!val!1 () var3473)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3473)) (or (= x var3473!val!0) (= x var3473!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var3473 () var3473\r\n    var3473!val!1)\r\n  (define-fun var2601 () String\r\n    (String_format/1339386452 \"ConstantInitializer@%d [ object = %s ]\" var1340!2))\r\n  (define-fun null-__Array__Int__var1319__ () (Array Int var1319)\r\n    (store ((as const (Array Int var1319)) var1319!val!5) 5 var1319!val!6))\r\n  (define-fun var1011 () var1319\r\n    (getObject/-27373281 var2233))\r\n  (define-fun var1340!2 () (Array Int var1319)\r\n    (store ((as const (Array Int var1319)) var1319!val!3) 5 var1319!val!7))\r\n  (define-fun var1340 () (Array Int var1319)\r\n    arr-var1319-init)\r\n  (define-fun var1563 () Int\r\n    (Int_valueOf/-1371140006\r\n  (var358_identityHashCode/1096208673 (cast-from-var3473-to-var1319 var2233))))\r\n  (define-fun var2233 () var3473\r\n    var3473!val!0)\r\n  (define-fun var1340!1 () (Array Int var1319)\r\n    (store ((as const (Array Int var1319)) var1319!val!4) 0 var1319!val!1))\r\n  (define-fun var2062 () String\r\n    (String_valueOf/-333372740 (getObject/-27373281 var2233)))\r\n  (define-fun var1618 () Int\r\n    (var358_identityHashCode/1096208673 (cast-from-var3473-to-var1319 var2233)))\r\n  (define-fun arr-var1319-init () (Array Int var1319)\r\n    ((as const (Array Int var1319)) var1319!val!0))\r\n  (define-fun k!1 ((x!0 Int)) var1319\r\n    (ite (= x!0 5) var1319!val!6\r\n      var1319!val!5))\r\n  (define-fun k!2 ((x!0 Int)) var1319\r\n    (ite (= x!0 5) var1319!val!7\r\n      var1319!val!3))\r\n  (define-fun cast-from-var3473-to-var1319 ((x!0 var3473)) var1319\r\n    var1319!val!0)\r\n  (define-fun var358_identityHashCode/1096208673 ((x!0 var1319)) Int\r\n    2)\r\n  (define-fun cast-from-Int-to-var1319 ((x!0 Int)) var1319\r\n    var1319!val!1)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var1319)) String\r\n    \"!0!\")\r\n  (define-fun Int_valueOf/-1371140006 ((x!0 Int)) Int\r\n    3)\r\n  (define-fun cast-from-String-to-var1319 ((x!0 String)) var1319\r\n    var1319!val!3)\r\n  (define-fun getObject/-27373281 ((x!0 var3473)) var1319\r\n    var1319!val!2)\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var1319))) String\r\n    \"\")\r\n)\r\n(error \"line 39 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1634304,
            "run_time": 0.015541553497314453,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3473 is 2\r\n; rep: (as @var3473_0 var3473)\r\n; rep: (as @var3473_1 var3473)\r\n; cardinality of var1319 is 6\r\n; rep: (as @var1319_0 var1319)\r\n; rep: (as @var1319_1 var1319)\r\n; rep: (as @var1319_2 var1319)\r\n; rep: (as @var1319_3 var1319)\r\n; rep: (as @var1319_4 var1319)\r\n; rep: (as @var1319_5 var1319)\r\n; cardinality of var358 is 1\r\n; rep: (as @var358_0 var358)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var1319-init () (Array Int var1319) ((as const (Array Int var1319)) (as @var1319_0 var1319)))\r\n(define-fun var358_identityHashCode/1096208673 ((_arg_1 var1319)) Int (- 1))\r\n(define-fun cast-from-var3473-to-var1319 ((_arg_1 var3473)) var1319 (as @var1319_0 var1319))\r\n(define-fun Int_valueOf/-1371140006 ((_arg_1 Int)) Int 2)\r\n(define-fun cast-from-Int-to-var1319 ((_arg_1 Int)) var1319 (as @var1319_3 var1319))\r\n(define-fun getObject/-27373281 ((_arg_1 var3473)) var1319 (as @var1319_1 var1319))\r\n(define-fun String_valueOf/-333372740 ((_arg_1 var1319)) String \"\")\r\n(define-fun cast-from-String-to-var1319 ((_arg_1 String)) var1319 (as @var1319_2 var1319))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_610 String) (BOUND_VARIABLE_611 (Array Int var1319))) String \"\")\r\n(define-fun null-var3473 () var3473 (as @var3473_0 var3473))\r\n(define-fun null-__Array__Int__var1319__ () (Array Int var1319) (store ((as const (Array Int var1319)) (as @var1319_1 var1319)) 0 (as @var1319_4 var1319)))\r\n(define-fun var2233 () var3473 (as @var3473_1 var3473))\r\n(define-fun var1340!1 () (Array Int var1319) (store ((as const (Array Int var1319)) (as @var1319_0 var1319)) 0 (as @var1319_3 var1319)))\r\n(define-fun var1340!2 () (Array Int var1319) (store ((as const (Array Int var1319)) (as @var1319_2 var1319)) 0 (as @var1319_5 var1319)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35672064,
            "run_time": 0.04573512077331543,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 38 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 39 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175636480,
            "run_time": 2.8817691802978516,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1340!2 () (Array Int var1319) (store ((as const (Array Int var1319)) var1319!112) 1 var1319!96))\r\n  (define-fun var1340!1 () (Array Int var1319) (store ((as const (Array Int var1319)) var1319!110) 0 var1319!102))\r\n  (define-fun var2233 () var3473 var3473!80)\r\n  (define-fun null-__Array__Int__var1319__ () (Array Int var1319) ((as const (Array Int var1319)) var1319!0))\r\n  (define-fun null-var3473 () var3473 var3473!78)\r\n  (define-fun var1319!96 () var1319 (cast-from-String-to-var1319 \"\\u{1}\"))\r\n  (define-fun var1319!98 () var1319 (getObject/-27373281 var3473!80))\r\n  (define-fun var1319!102 () var1319 (cast-from-Int-to-var1319 54))\r\n  (define-fun var1319!104 () var1319 (cast-from-var3473-to-var1319 var3473!80))\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var1319))) String (ite (and (= x!0 \"ConstantInitializer@%d [ object = %s ]\") (= x!1 (store ((as const (Array Int var1319)) var1319!112) 1 var1319!96))) \"\\u{0}\" \"\"))\r\n  (define-fun String_valueOf/-333372740 ((x!0 var1319)) String (ite (= x!0 var1319!98) \"\\u{1}\" \"\"))\r\n  (define-fun Int_valueOf/-1371140006 ((x!0 Int)) Int (ite (= x!0 53) 54 0))\r\n  (define-fun var358_identityHashCode/1096208673 ((x!0 var1319)) Int (ite (= x!0 var1319!104) 53 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>",
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1,
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.concurrent.ConstantInitializer",
            "$r0 = newarray (java.lang.Object)[2]",
            "$i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r1)",
            "$r2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>($i0)",
            "$r0[0] = $r2",
            "$r3 = virtualinvoke r1.<org.apache.commons.lang3.concurrent.ConstantInitializer: java.lang.Object getObject()>()",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r3)",
            "$r0[1] = $r4",
            "$r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"ConstantInitializer@%d [ object = %s ]\", $r0)",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ArrayUtils__remove__266043049\\5379.smt2",
        "z3": {
            "memory": 32190464,
            "run_time": 0.41152334213256836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2204:\r\n  ;;   var2204!val!0 var2204!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2204!val!0 () var2204)\r\n  (declare-fun var2204!val!1 () var2204)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2204)) (or (= x var2204!val!0) (= x var2204!val!1)))\r\n  ;; -----------\r\n  (define-fun var1070!1 () String\r\n    \"Index: , Length: \")\r\n  (define-fun var3182 () String\r\n    (str.++ var2668!1 \"Index: \" (str.from_int var3863)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1070 () String\r\n    (str.++ var2668!1 \"Index: \" (str.from_int var3863) \", Length: \"))\r\n  (define-fun var3516 () String\r\n    (str.++ var2668!1\r\n        \"Index: \"\r\n        (str.from_int var3863)\r\n        \", Length: \"\r\n        (str.from_int (var1864_getLength/1005357804 var1102))))\r\n  (define-fun var3863 () Int\r\n    (- 1))\r\n  (define-fun var1264 () String\r\n    (str.++ var2668!1 \"Index: \"))\r\n  (define-fun var1102 () var2204\r\n    var2204!val!0)\r\n  (define-fun var2668 () String\r\n    String-init)\r\n  (define-fun var1264!1 () String\r\n    \"Index: \")\r\n  (define-fun var3847 () var3819\r\n    var3819-init)\r\n  (define-fun var3895 () String\r\n    (str.++ var2668!1\r\n        \"Index: \"\r\n        (str.from_int var3863)\r\n        \", Length: \"\r\n        (str.from_int (var1864_getLength/1005357804 var1102))))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun null-var2204 () var2204\r\n    var2204!val!1)\r\n  (define-fun var1902 () Int\r\n    (var1864_getLength/1005357804 var1102))\r\n  (define-fun var2668!1 () String\r\n    \"\")\r\n  (define-fun var2668!2 () String\r\n    \"Index: \")\r\n  (define-fun var3182!1 () String\r\n    \"Index: , Length: \")\r\n  (define-fun var3847!1 () var3819\r\n    var3819!val!0)\r\n  (define-fun var3516!1 () String\r\n    \"\")\r\n  (define-fun var3819-init () var3819\r\n    var3819!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun <init>/1107025377 ((x!0 var3819) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun var1864_getLength/1005357804 ((x!0 var2204)) Int\r\n    0)\r\n)\r\n(error \"line 59 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12570624,
            "run_time": 0.05590558052062988,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2204 is 2\r\n; rep: (as @var2204_0 var2204)\r\n; rep: (as @var2204_1 var2204)\r\n; cardinality of var1864 is 1\r\n; rep: (as @var1864_0 var1864)\r\n; cardinality of var3819 is 1\r\n; rep: (as @var3819_0 var3819)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1864_getLength/1005357804 ((BOUND_VARIABLE_1717 var2204)) Int 0)\r\n(define-fun var3819-init () var3819 (as @var3819_0 var3819))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1107025377 ((BOUND_VARIABLE_1720 var3819) (BOUND_VARIABLE_1721 String)) void (as @void_0 void))\r\n(define-fun null-var2204 () var2204 (as @var2204_0 var2204))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var1102 () var2204 (as @var2204_1 var2204))\r\n(define-fun var3863 () Int (- 1))\r\n(define-fun var2668!1 () String \"\")\r\n(define-fun var2668!2 () String \"Index: \")\r\n(define-fun var1264!1 () String \"Index: \")\r\n(define-fun var3182!1 () String \"Index: , Length: \")\r\n(define-fun var1070!1 () String \"Index: , Length: \")\r\n(define-fun var3847!1 () var3819 (as @var3819_0 var3819))\r\n(define-fun var3516!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37560320,
            "run_time": 0.1838390827178955,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 58 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 59 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180908032,
            "run_time": 3.4098527431488037,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1070!1 () String \"Index: , Length: \")\r\n  (define-fun var3182!1 () String \"Index: , Length: \")\r\n  (define-fun var1264!1 () String \"Index: \")\r\n  (define-fun var2668!2 () String \"Index: \")\r\n  (define-fun var2668!1 () String \"\")\r\n  (define-fun var3863 () Int (- 6))\r\n  (define-fun var1102 () var2204 var2204!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var2204 () var2204 var2204!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "i1 := @parameter1: int",
            "i0 = staticinvoke <org.apache.commons.lang3.ArrayUtils: int getLength(java.lang.Object)>(r0)",
            "if i1 < 0 goto $r1 = new java.lang.IndexOutOfBoundsException",
            "$r1 = new java.lang.IndexOutOfBoundsException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Index: \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", Length: \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r7)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.ExtendedMessageFormat__readArgumentIndex__1043770850\\3505.smt2",
        "z3": {
            "memory": 31477760,
            "run_time": 0.16652631759643555,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 71 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6811648,
            "run_time": 0.0748133659362793,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35041280,
            "run_time": 0.21975326538085938,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 71 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150388736,
            "run_time": 2.193251609802246,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.ExtendedMessageFormat",
            "r2 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.text.ParsePosition",
            "i0 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "specialinvoke r1.<org.apache.commons.lang3.text.ExtendedMessageFormat: void seekNonWs(java.lang.String,java.text.ParsePosition)>(r2, r0)",
            "$r19 = new java.lang.StringBuilder",
            "specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()",
            "z1 = 0",
            "if z1 != 0 goto (branch)",
            "if z1 == 0 goto $r23 = new java.lang.IllegalArgumentException",
            "$r23 = new java.lang.IllegalArgumentException",
            "$r22 = new java.lang.StringBuilder",
            "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unterminated format element at position \")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8)",
            "throw $r23"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__append__-1584124107\\3511.smt2",
        "z3": {
            "memory": 31870976,
            "run_time": 0.15302491188049316,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var415:\r\n  ;;   var415!val!0 var415!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var415!val!0 () var415)\r\n  (declare-fun var415!val!1 () var415)\r\n  ;; cardinality constraint:\r\n  (forall ((x var415)) (or (= x var415!val!0) (= x var415!val!1)))\r\n  ;; -----------\r\n  (define-fun null-Float32 () Float32\r\n    (_ +zero 8 24))\r\n  (define-fun null-var415 () var415\r\n    var415!val!1)\r\n  (define-fun var311 () var415\r\n    var415!val!0)\r\n  (define-fun var75 () String\r\n    (String_valueOf/-149410723 var468))\r\n  (define-fun var738 () var415\r\n    (append/1659648310 var311 (String_valueOf/-149410723 var468)))\r\n  (define-fun var468 () Float32\r\n    (fp #b0 #x00 #b00000000000000000000001))\r\n  (define-fun append/1659648310 ((x!0 var415) (x!1 String)) var415\r\n    var415!val!0)\r\n  (define-fun String_valueOf/-149410723 ((x!0 Float32)) String\r\n    \"\")\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12197888,
            "run_time": 0.1768195629119873,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var415 is 2\r\n; rep: (as @var415_0 var415)\r\n; rep: (as @var415_1 var415)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-149410723 ((BOUND_VARIABLE_4215 (_ FloatingPoint 8 24))) String \"\")\r\n(define-fun append/1659648310 ((BOUND_VARIABLE_4218 var415) (BOUND_VARIABLE_4219 String)) var415 (as @var415_0 var415))\r\n(define-fun null-var415 () var415 (as @var415_0 var415))\r\n(define-fun null-Float32 () (_ FloatingPoint 8 24) (fp #b1 #b11111111 #b00000000000000000000000))\r\n(define-fun var311 () var415 (as @var415_1 var415))\r\n(define-fun var468 () (_ FloatingPoint 8 24) (fp #b0 #b11111111 #b00000000000000000000000))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36126720,
            "run_time": 0.1525862216949463,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var415:\n  ;;   var415!val!0 var415!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var415!val!0 () var415)\n  (declare-fun var415!val!1 () var415)\n  ;; cardinality constraint:\n  (forall ((x var415)) (or (= x var415!val!0) (= x var415!val!1)))\n  ;; -----------\n  (define-fun null-Float32 () Float32\n    (_ +zero 8 24))\n  (define-fun null-var415 () var415\n    var415!val!1)\n  (define-fun var311 () var415\n    var415!val!0)\n  (define-fun var75 () String\n    (String_valueOf/-149410723 var468))\n  (define-fun var738 () var415\n    (append/1659648310 var311 (String_valueOf/-149410723 var468)))\n  (define-fun var468 () Float32\n    (fp #b0 #x00 #b00000000000000000000001))\n  (define-fun append/1659648310 ((x!0 var415) (x!1 String)) var415\n    var415!val!0)\n  (define-fun String_valueOf/-149410723 ((x!0 Float32)) String\n    \"\")\n)\n(error \"line 22 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 118317056,
            "run_time": 1.198218822479248,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.text.StrBuilder__append__-1584124107\\3511.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n652ms\r\nSort Float32 not declared\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(float)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(float)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "f0 := @parameter0: float",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(f0)",
            "$r2 = virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder append(java.lang.String)>($r1)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrMatcher$StringMatcher__\u300ainit\u300b__-1312612224\\3286.smt2",
        "z3": {
            "memory": 31981568,
            "run_time": 0.18825888633728027,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1345:\r\n  ;;   var1345!val!1 var1345!val!2 var1345!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1345!val!1 () var1345)\r\n  (declare-fun var1345!val!2 () var1345)\r\n  (declare-fun var1345!val!0 () var1345)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1345))\r\n          (or (= x var1345!val!1) (= x var1345!val!2) (= x var1345!val!0)))\r\n  ;; -----------\r\n  (define-fun var2608 () var1345\r\n    var1345!val!0)\r\n  (define-fun var1364 () String\r\n    \"!0!\")\r\n  (define-fun var74 () (Array Int Int)\r\n    (toCharArray/415275702 var1364))\r\n  (define-fun null-var1345 () var1345\r\n    var1345!val!1)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2608!2 () var1345\r\n    var1345!val!2)\r\n  (define-fun var2608!1 () var1345\r\n    var1345!val!1)\r\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun chars/922855258 ((x!0 var1345)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/1653303038 ((x!0 var3051)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var1345-to-var3051 ((x!0 var1345)) var3051\r\n    var3051!val!0)\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.09222531318664551,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1345 is 3\r\n; rep: (as @var1345_0 var1345)\r\n; rep: (as @var1345_1 var1345)\r\n; rep: (as @var1345_2 var1345)\r\n; cardinality of var3199 is 1\r\n; rep: (as @var3199_0 var3199)\r\n; cardinality of var3051 is 1\r\n; rep: (as @var3051_0 var3051)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun <init>/1653303038 ((BOUND_VARIABLE_520 var3051)) void (as @void_0 void))\r\n(define-fun cast-from-var1345-to-var3051 ((BOUND_VARIABLE_523 var1345)) var3051 (as @var3051_0 var3051))\r\n(define-fun toCharArray/415275702 ((_arg_1 String)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun chars/922855258 ((_arg_1 var1345)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun null-var1345 () var1345 (as @var1345_0 var1345))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2608 () var1345 (as @var1345_1 var1345))\r\n(define-fun var1364 () String \"\")\r\n(define-fun var2608!1 () var1345 (as @var1345_0 var1345))\r\n(define-fun var2608!2 () var1345 (as @var1345_2 var1345))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37384192,
            "run_time": 0.18701791763305664,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1345:\n  ;;   var1345!val!1 var1345!val!2 var1345!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1345!val!1 () var1345)\n  (declare-fun var1345!val!2 () var1345)\n  (declare-fun var1345!val!0 () var1345)\n  ;; cardinality constraint:\n  (forall ((x var1345))\n          (or (= x var1345!val!1) (= x var1345!val!2) (= x var1345!val!0)))\n  ;; -----------\n  (define-fun var1364 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var1345 () var1345\n    var1345!val!1)\n  (define-fun var74 () (Array Int Int)\n    (toCharArray/415275702 var1364))\n  (define-fun var2608 () var1345\n    var1345!val!0)\n  (define-fun var2608!2 () var1345\n    var1345!val!2)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2608!1 () var1345\n    var1345!val!1)\n  (define-fun chars/922855258 ((x!0 var1345)) (Array Int Int)\n    ((as const (Array Int Int)) 8))\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\n    ((as const (Array Int Int)) 8))\n  (define-fun <init>/1653303038 ((x!0 var3051)) void\n    void!val!0)\n  (define-fun cast-from-var1345-to-var3051 ((x!0 var1345)) var3051\n    var3051!val!0)\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152891392,
            "run_time": 1.9813785552978516,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2608!2 () var1345 var1345!8)\r\n  (define-fun var1364 () String \"\\u{0}\")\r\n  (define-fun var2608 () var1345 var1345!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var1345 () var1345 var1345!2)\r\n  (define-fun chars/922855258 ((x!0 var1345)) (Array Int Int) (ite (= x!0 var1345!8) ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int) (ite (= x!0 \"\\u{0}\") ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: char[] toCharArray()>"
        ],
        "api_count": {
            "<java.lang.String: char[] toCharArray()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrMatcher$StringMatcher",
            "r1 := @parameter0: java.lang.String",
            "specialinvoke r0.<org.apache.commons.lang3.text.StrMatcher: void <init>()>()",
            "$r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()",
            "r0.<org.apache.commons.lang3.text.StrMatcher$StringMatcher: char[] chars> = $r2",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6752.smt2",
        "z3": {
            "memory": 31277056,
            "run_time": 0.15345120429992676,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 73 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9478144,
            "run_time": 0.09380841255187988,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35704832,
            "run_time": 0.12407207489013672,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 73 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 148914176,
            "run_time": 2.072359323501587,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 3,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 0",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 1",
            "$z8 = 1",
            "goto [?= z5 = $z8]",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = $i1 + $i0",
            "$i2 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i4 = $i3 + $i2",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4)",
            "if z3 == 0 goto virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "if z5 == 0 goto $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__toStringBuffer__-381254914\\6395.smt2",
        "z3": {
            "memory": 31502336,
            "run_time": 0.17038869857788086,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1322:\r\n  ;;   var1322!val!0 var1322!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1322!val!0 () var1322)\r\n  (declare-fun var1322!val!1 () var1322)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1322)) (or (= x var1322!val!0) (= x var1322!val!1)))\r\n  ;; -----------\r\n  (define-fun var366 () String\r\n    (append/-420189427\r\n  var3573!1\r\n  (buffer/1389889126 var2075)\r\n  0\r\n  (size/1389889126 var2075)))\r\n  (define-fun var2075 () var1322\r\n    var1322!val!0)\r\n  (define-fun null-var1322 () var1322\r\n    var1322!val!1)\r\n  (define-fun var3573 () String\r\n    String-init)\r\n  (define-fun var177 () (Array Int Int)\r\n    (buffer/1389889126 var2075))\r\n  (define-fun var2368 () Int\r\n    (size/1389889126 var2075))\r\n  (define-fun var304 () Int\r\n    (size/1389889126 var2075))\r\n  (define-fun var3573!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2368!1 () Int\r\n    0)\r\n  (define-fun <init>/1906106355 ((x!0 String) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun buffer/1389889126 ((x!0 var1322)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun append/-420189427 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) String\r\n    \"\")\r\n  (define-fun size/1389889126 ((x!0 var1322)) Int\r\n    0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1605632,
            "run_time": 0.1228487491607666,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1322 is 2\r\n; rep: (as @var1322_0 var1322)\r\n; rep: (as @var1322_1 var1322)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun size/1389889126 ((BOUND_VARIABLE_440 var1322)) Int 0)\r\n(define-fun <init>/1906106355 ((BOUND_VARIABLE_443 String) (BOUND_VARIABLE_444 Int)) void (as @void_0 void))\r\n(define-fun buffer/1389889126 ((BOUND_VARIABLE_447 var1322)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun append/-420189427 ((BOUND_VARIABLE_452 String) (BOUND_VARIABLE_453 (Array Int Int)) (BOUND_VARIABLE_454 Int) (BOUND_VARIABLE_455 Int)) String \"\")\r\n(define-fun null-var1322 () var1322 (as @var1322_0 var1322))\r\n(define-fun var2075 () var1322 (as @var1322_1 var1322))\r\n(define-fun var3573!1 () String \"\")\r\n(define-fun var2368!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36626432,
            "run_time": 0.18167376518249512,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1322:\n  ;;   var1322!val!0 var1322!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1322!val!0 () var1322)\n  (declare-fun var1322!val!1 () var1322)\n  ;; cardinality constraint:\n  (forall ((x var1322)) (or (= x var1322!val!0) (= x var1322!val!1)))\n  ;; -----------\n  (define-fun var2368 () Int\n    (size/1389889126 var2075))\n  (define-fun var2075 () var1322\n    var1322!val!0)\n  (define-fun null-var1322 () var1322\n    var1322!val!1)\n  (define-fun var304 () Int\n    (size/1389889126 var2075))\n  (define-fun var177 () (Array Int Int)\n    (buffer/1389889126 var2075))\n  (define-fun var366 () String\n    (append/-420189427\n  var3573!1\n  (buffer/1389889126 var2075)\n  0\n  (size/1389889126 var2075)))\n  (define-fun var3573 () String\n    String-init)\n  (define-fun var3573!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2368!1 () Int\n    0)\n  (define-fun <init>/1906106355 ((x!0 String) (x!1 Int)) void\n    void!val!0)\n  (define-fun buffer/1389889126 ((x!0 var1322)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun append/-420189427 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) String\n    \"\")\n  (define-fun size/1389889126 ((x!0 var1322)) Int\n    0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150724608,
            "run_time": 1.9476690292358398,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2075 () var1322 var1322!4)\r\n  (define-fun null-var1322 () var1322 var1322!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>(int)>",
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>(int)>": 1,
            "<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrBuilder",
            "$r0 = new java.lang.StringBuffer",
            "$i0 = r1.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "specialinvoke $r0.<java.lang.StringBuffer: void <init>(int)>($i0)",
            "$r2 = r1.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "$i1 = r1.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuffer: java.lang.StringBuffer append(char[],int,int)>($r2, 0, $i1)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrTokenizer__reset__676239245\\4431.smt2",
        "z3": {
            "memory": 31514624,
            "run_time": 0.15975165367126465,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var417:\r\n  ;;   var417!val!2 var417!val!1 var417!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var417!val!2 () var417)\r\n  (declare-fun var417!val!1 () var417)\r\n  (declare-fun var417!val!0 () var417)\r\n  ;; cardinality constraint:\r\n  (forall ((x var417))\r\n          (or (= x var417!val!2) (= x var417!val!1) (= x var417!val!0)))\r\n  ;; -----------\r\n  (define-fun var384 () (Array Int Int)\r\n    (toCharArray/415275702 var80))\r\n  (define-fun var812!2 () var417\r\n    var417!val!2)\r\n  (define-fun var80 () String\r\n    \"!0!\")\r\n  (define-fun var812 () var417\r\n    var417!val!0)\r\n  (define-fun null-var417 () var417\r\n    var417!val!1)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var812!1 () var417\r\n    var417!val!2)\r\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun chars/1491220258 ((x!0 var417)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun reset/1528507496 ((x!0 var417)) var417\r\n    var417!val!2)\r\n)\r\n(error \"line 34 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11603968,
            "run_time": 0.11155080795288086,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var417 is 3\r\n; rep: (as @var417_0 var417)\r\n; rep: (as @var417_1 var417)\r\n; rep: (as @var417_2 var417)\r\n; cardinality of var1190 is 1\r\n; rep: (as @var1190_0 var1190)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun reset/1528507496 ((BOUND_VARIABLE_516 var417)) var417 (as @var417_0 var417))\r\n(define-fun toCharArray/415275702 ((_arg_1 String)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun chars/1491220258 ((_arg_1 var417)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun null-var417 () var417 (as @var417_0 var417))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var812 () var417 (as @var417_1 var417))\r\n(define-fun var80 () String \"\")\r\n(define-fun var812!1 () var417 (as @var417_0 var417))\r\n(define-fun var812!2 () var417 (as @var417_2 var417))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37396480,
            "run_time": 0.21958255767822266,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var417:\n  ;;   var417!val!2 var417!val!1 var417!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var417!val!2 () var417)\n  (declare-fun var417!val!1 () var417)\n  (declare-fun var417!val!0 () var417)\n  ;; cardinality constraint:\n  (forall ((x var417))\n          (or (= x var417!val!2) (= x var417!val!1) (= x var417!val!0)))\n  ;; -----------\n  (define-fun var812!2 () var417\n    var417!val!2)\n  (define-fun null-var417 () var417\n    var417!val!1)\n  (define-fun var80 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var384 () (Array Int Int)\n    (toCharArray/415275702 var80))\n  (define-fun var812 () var417\n    var417!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var812!1 () var417\n    var417!val!2)\n  (define-fun chars/1491220258 ((x!0 var417)) (Array Int Int)\n    ((as const (Array Int Int)) 8))\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\n    ((as const (Array Int Int)) 8))\n  (define-fun reset/1528507496 ((x!0 var417)) var417\n    var417!val!2)\n)\n(error \"line 34 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152137728,
            "run_time": 2.14544939994812,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var812!2 () var417 var417!8)\r\n  (define-fun var80 () String \"\\u{0}\")\r\n  (define-fun var812 () var417 var417!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var417 () var417 var417!2)\r\n  (define-fun chars/1491220258 ((x!0 var417)) (Array Int Int) (ite (= x!0 var417!8) ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int) (ite (= x!0 \"\\u{0}\") ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: char[] toCharArray()>"
        ],
        "api_count": {
            "<java.lang.String: char[] toCharArray()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrTokenizer",
            "r1 := @parameter0: java.lang.String",
            "virtualinvoke r0.<org.apache.commons.lang3.text.StrTokenizer: org.apache.commons.lang3.text.StrTokenizer reset()>()",
            "if r1 == null goto r0.<org.apache.commons.lang3.text.StrTokenizer: char[] chars> = null",
            "$r2 = virtualinvoke r1.<java.lang.String: char[] toCharArray()>()",
            "r0.<org.apache.commons.lang3.text.StrTokenizer: char[] chars> = $r2",
            "goto [?= return r0]",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6761.smt2",
        "z3": {
            "memory": 32063488,
            "run_time": 0.1166694164276123,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 78 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 3751936,
            "run_time": 0.04200243949890137,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36089856,
            "run_time": 0.10823750495910645,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 78 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 143073280,
            "run_time": 1.9518563747406006,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 23,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 3,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 0",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 1",
            "$z8 = 1",
            "goto [?= z5 = $z8]",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = $i1 + $i0",
            "$i2 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i4 = $i3 + $i2",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4)",
            "if z3 == 0 goto virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "if z5 == 0 goto $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__setLength__1429502386\\5845.smt2",
        "z3": {
            "memory": 31952896,
            "run_time": 0.21204304695129395,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1662:\r\n  ;;   var1662!val!1 var1662!val!2 var1662!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1662!val!1 () var1662)\r\n  (declare-fun var1662!val!2 () var1662)\r\n  (declare-fun var1662!val!0 () var1662)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1662))\r\n          (or (= x var1662!val!1) (= x var1662!val!2) (= x var1662!val!0)))\r\n  ;; -----------\r\n  (define-fun var1280 () var1662\r\n    var1662!val!0)\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun null-var1662 () var1662\r\n    var1662!val!1)\r\n  (define-fun var1481 () Int\r\n    (size/1389889126 var1280))\r\n  (define-fun var1280!1 () var1662\r\n    var1662!val!2)\r\n  (define-fun var3592 () Int\r\n    0)\r\n  (define-fun size/1389889126 ((x!0 var1662)) Int\r\n    (ite (= x!0 var1662!val!0) 1\r\n      0))\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1605632,
            "run_time": 0.04700326919555664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1662 is 3\r\n; rep: (as @var1662_0 var1662)\r\n; rep: (as @var1662_1 var1662)\r\n; rep: (as @var1662_2 var1662)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var1662)) Int (ite (= (as @var1662_1 var1662) _arg_1) 1 0))\r\n(define-fun null-var1662 () var1662 (as @var1662_0 var1662))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1280 () var1662 (as @var1662_1 var1662))\r\n(define-fun var3592 () Int 0)\r\n(define-fun var1280!1 () var1662 (as @var1662_2 var1662))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36937728,
            "run_time": 0.16595816612243652,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1662:\n  ;;   var1662!val!1 var1662!val!2 var1662!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1662!val!1 () var1662)\n  (declare-fun var1662!val!2 () var1662)\n  (declare-fun var1662!val!0 () var1662)\n  ;; cardinality constraint:\n  (forall ((x var1662))\n          (or (= x var1662!val!1) (= x var1662!val!2) (= x var1662!val!0)))\n  ;; -----------\n  (define-fun var1280 () var1662\n    var1662!val!0)\n  (define-fun null-Int () Int\n    1)\n  (define-fun var1481 () Int\n    (size/1389889126 var1280))\n  (define-fun null-var1662 () var1662\n    var1662!val!1)\n  (define-fun var1280!1 () var1662\n    var1662!val!2)\n  (define-fun var3592 () Int\n    0)\n  (define-fun size/1389889126 ((x!0 var1662)) Int\n    (ite (= x!0 var1662!val!0) 1\n      0))\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141656064,
            "run_time": 1.9826042652130127,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1280!1 () var1662 var1662!8)\r\n  (define-fun var3592 () Int 0)\r\n  (define-fun var1280 () var1662 var1662!6)\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-var1662 () var1662 var1662!4)\r\n  (define-fun size/1389889126 ((x!0 var1662)) Int (ite (= x!0 var1662!6) 1 (ite (= x!0 var1662!8) 0 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "if i0 >= 0 goto $i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i0 >= $i1 goto $i2 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "r0.<org.apache.commons.lang3.text.StrBuilder: int size> = i0",
            "goto [?= return r0]",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__startsWith__-2030455765\\5872.smt2",
        "z3": {
            "memory": 31686656,
            "run_time": 0.16488099098205566,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 32 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10641408,
            "run_time": 0.07737612724304199,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36622336,
            "run_time": 0.1194920539855957,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 32 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140271616,
            "run_time": 2.0769941806793213,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrBuilder",
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i0 != 0 goto $i1 = r1.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i1 = r1.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i0 <= $i1 goto i4 = 0",
            "i4 = 0",
            "if i4 >= i0 goto return 1",
            "return 1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__validateRange__-28387379\\6428.smt2",
        "z3": {
            "memory": 31887360,
            "run_time": 0.1356651782989502,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1042:\r\n  ;;   var1042!val!0 var1042!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1042!val!0 () var1042)\r\n  (declare-fun var1042!val!1 () var1042)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1042)) (or (= x var1042!val!0) (= x var1042!val!1)))\r\n  ;; -----------\r\n  (define-fun var1169 () var172\r\n    var172-init)\r\n  (define-fun var1305 () Int\r\n    (size/1389889126 var1260))\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun null-var1042 () var1042\r\n    var1042!val!1)\r\n  (define-fun var1260 () var1042\r\n    var1042!val!0)\r\n  (define-fun var331 () Int\r\n    1)\r\n  (define-fun var398 () Int\r\n    0)\r\n  (define-fun var1169!1 () var172\r\n    var172!val!0)\r\n  (define-fun var172-init () var172\r\n    var172!val!0)\r\n  (define-fun var3112 () String\r\n    \"\")\r\n  (define-fun size/1389889126 ((x!0 var1042)) Int\r\n    0)\r\n  (define-fun <init>/275026640 ((x!0 var172) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 3674112,
            "run_time": 0.13967227935791016,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1042 is 2\r\n; rep: (as @var1042_0 var1042)\r\n; rep: (as @var1042_1 var1042)\r\n; cardinality of var172 is 1\r\n; rep: (as @var172_0 var172)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var1042)) Int 0)\r\n(define-fun var172-init () var172 (as @var172_0 var172))\r\n(define-fun <init>/275026640 ((BOUND_VARIABLE_499 var172) (BOUND_VARIABLE_500 String)) void (as @void_0 void))\r\n(define-fun null-var1042 () var1042 (as @var1042_0 var1042))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var1260 () var1042 (as @var1042_1 var1042))\r\n(define-fun var331 () Int 0)\r\n(define-fun var398 () Int (- 1))\r\n(define-fun var1169!1 () var172 (as @var172_0 var172))\r\n(define-fun var3112 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36950016,
            "run_time": 0.1336987018585205,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1042:\n  ;;   var1042!val!0 var1042!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1042!val!0 () var1042)\n  (declare-fun var1042!val!1 () var1042)\n  ;; cardinality constraint:\n  (forall ((x var1042)) (or (= x var1042!val!0) (= x var1042!val!1)))\n  ;; -----------\n  (define-fun var1305 () Int\n    (size/1389889126 var1260))\n  (define-fun null-Int () Int\n    2)\n  (define-fun var1169 () var172\n    var172-init)\n  (define-fun null-var1042 () var1042\n    var1042!val!1)\n  (define-fun var1260 () var1042\n    var1042!val!0)\n  (define-fun var331 () Int\n    1)\n  (define-fun var398 () Int\n    0)\n  (define-fun var1169!1 () var172\n    var172!val!0)\n  (define-fun var172-init () var172\n    var172!val!0)\n  (define-fun var3112 () String\n    \"\")\n  (define-fun size/1389889126 ((x!0 var1042)) Int\n    0)\n  (define-fun <init>/275026640 ((x!0 var172) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150446080,
            "run_time": 2.045469284057617,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var398 () Int 8)\r\n  (define-fun var331 () Int 9)\r\n  (define-fun var1260 () var1042 var1042!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var1042 () var1042 var1042!2)\r\n  (define-fun size/1389889126 ((x!0 var1042)) Int (ite (= x!0 var1042!4) 8 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "i2 := @parameter1: int",
            "if i0 >= 0 goto $i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i2 <= $i1 goto (branch)",
            "if i0 <= i2 goto return i2",
            "$r1 = new java.lang.StringIndexOutOfBoundsException",
            "specialinvoke $r1.<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>(\"end < start\")",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__insert__800144107\\5568.smt2",
        "z3": {
            "memory": 31797248,
            "run_time": 0.1158137321472168,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3009:\r\n  ;;   var3009!val!0 var3009!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3009!val!0 () var3009)\r\n  (declare-fun var3009!val!1 () var3009)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3009)) (or (= x var3009!val!0) (= x var3009!val!1)))\r\n  ;; -----------\r\n  (define-fun var387 () Int\r\n    1)\r\n  (define-fun var433 () Int\r\n    1)\r\n  (define-fun var3324 () var3009\r\n    var3009!val!0)\r\n  (define-fun null-var3009 () var3009\r\n    var3009!val!1)\r\n  (define-fun var139 () var3009\r\n    (insert/1427295636 var3324 var387 (String_valueOf/-107395227 var433)))\r\n  (define-fun var3448 () String\r\n    (String_valueOf/-107395227 var433))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun insert/1427295636 ((x!0 var3009) (x!1 Int) (x!2 String)) var3009\r\n    var3009!val!0)\r\n  (define-fun String_valueOf/-107395227 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1650688,
            "run_time": 0.046511173248291016,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3009 is 2\r\n; rep: (as @var3009_0 var3009)\r\n; rep: (as @var3009_1 var3009)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-107395227 ((BOUND_VARIABLE_468 Int)) String \"\")\r\n(define-fun insert/1427295636 ((BOUND_VARIABLE_471 var3009) (BOUND_VARIABLE_472 Int) (BOUND_VARIABLE_473 String)) var3009 (as @var3009_0 var3009))\r\n(define-fun null-var3009 () var3009 (as @var3009_0 var3009))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var3324 () var3009 (as @var3009_1 var3009))\r\n(define-fun var387 () Int 1)\r\n(define-fun var433 () Int 1)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36904960,
            "run_time": 0.14158010482788086,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3009:\n  ;;   var3009!val!0 var3009!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3009!val!0 () var3009)\n  (declare-fun var3009!val!1 () var3009)\n  ;; cardinality constraint:\n  (forall ((x var3009)) (or (= x var3009!val!0) (= x var3009!val!1)))\n  ;; -----------\n  (define-fun var139 () var3009\n    (insert/1427295636 var3324 var387 (String_valueOf/-107395227 var433)))\n  (define-fun var387 () Int\n    1)\n  (define-fun var433 () Int\n    1)\n  (define-fun var3324 () var3009\n    var3009!val!0)\n  (define-fun null-var3009 () var3009\n    var3009!val!1)\n  (define-fun var3448 () String\n    (String_valueOf/-107395227 var433))\n  (define-fun null-Int () Int\n    0)\n  (define-fun insert/1427295636 ((x!0 var3009) (x!1 Int) (x!2 String)) var3009\n    var3009!val!0)\n  (define-fun String_valueOf/-107395227 ((x!0 Int)) String\n    \"\")\n)\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 133238784,
            "run_time": 1.951204776763916,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var433 () Int 1)\r\n  (define-fun var387 () Int 1)\r\n  (define-fun var3324 () var3009 var3009!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3009 () var3009 var3009!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(long)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(long)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "l1 := @parameter1: long",
            "$r1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(l1)",
            "$r2 = virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder insert(int,java.lang.String)>(i0, $r1)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ArrayUtils__toMap__1909153180\\6431.smt2",
        "z3": {
            "memory": 31977472,
            "run_time": 0.21392369270324707,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1497:\r\n  ;;   var1497!val!0 var1497!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1497!val!0 () var1497)\r\n  (declare-fun var1497!val!1 () var1497)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1497)) (or (= x var1497!val!0) (= x var1497!val!1)))\r\n  ;; -----------\r\n  (define-fun var543 () String\r\n    String-init)\r\n  (define-fun var168!1 () String\r\n    \"Array element \")\r\n  (define-fun var3502 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var543!1 \"Array element \" (str.from_int 0) \", '\")\r\n          (select var1621 0))\r\n        \"', is neither of type Map.Entry nor an Array\"))\r\n  (define-fun null-__Array__Int__var1497__ () (Array Int var1497)\r\n    ((as const (Array Int var1497)) var1497!val!1))\r\n  (define-fun var753 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var543!1 \"Array element \" (str.from_int 0) \", '\")\r\n          (select var1621 0))\r\n        \"', is neither of type Map.Entry nor an Array\"))\r\n  (define-fun var871 () Bool\r\n    false)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1135 () Int\r\n    (cast-from-Float64-to-Int\r\n  (fp.mul roundNearestTiesToEven\r\n          (cast-from-Int-to-Float64 (getLength-Arr-var1497-1 var1621))\r\n          ((_ to_fp 11 53) #x3ff8000000000000))))\r\n  (define-fun var250 () String\r\n    (str.++ var543!1 \"Array element \" (str.from_int 0) \", '\"))\r\n  (define-fun var3054 () String\r\n    (append/-1031950772\r\n  (str.++ var543!1 \"Array element \" (str.from_int 0) \", '\")\r\n  (select var1621 0)))\r\n  (define-fun var168 () String\r\n    (str.++ var543!1 \"Array element \"))\r\n  (define-fun var1858 () var2313\r\n    var2313-init)\r\n  (define-fun var3712 () Float64\r\n    (fp.mul roundNearestTiesToEven\r\n        (cast-from-Int-to-Float64 (getLength-Arr-var1497-1 var1621))\r\n        ((_ to_fp 11 53) #x3ff8000000000000)))\r\n  (define-fun var250!1 () String\r\n    \"Array element 0, '\")\r\n  (define-fun var3525 () var997\r\n    var997-init)\r\n  (define-fun var2484 () Int\r\n    (getLength-Arr-var1497-1 var1621))\r\n  (define-fun var3538 () String\r\n    (str.++ var543!1 \"Array element \" (str.from_int 0)))\r\n  (define-fun var1025 () Int\r\n    (getLength-Arr-var1497-1 var1621))\r\n  (define-fun var1256 () var1497\r\n    (select var1621 0))\r\n  (define-fun var894 () Float64\r\n    (cast-from-Int-to-Float64 (getLength-Arr-var1497-1 var1621)))\r\n  (define-fun var166 () Bool\r\n    false)\r\n  (define-fun var1621 () (Array Int var1497)\r\n    ((as const (Array Int var1497)) var1497!val!0))\r\n  (define-fun var75 () Int\r\n    0)\r\n  (define-fun var543!1 () String\r\n    \"\")\r\n  (define-fun var3054!1 () String\r\n    \"', is neither of type Map.Entry nor an Array\")\r\n  (define-fun var3538!1 () String\r\n    \"Array element 0, '\")\r\n  (define-fun var543!2 () String\r\n    \"Array element \")\r\n  (define-fun var3525!1 () var997\r\n    var997!val!0)\r\n  (define-fun var1135!1 () Int\r\n    0)\r\n  (define-fun var2313-init () var2313\r\n    var2313!val!0)\r\n  (define-fun var3502!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1858!1 () var2313\r\n    var2313!val!0)\r\n  (define-fun var997-init () var997\r\n    var997!val!0)\r\n  (define-fun getLength-Arr-var1497-1 ((x!0 (Array Int var1497))) Int\r\n    1)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1497)) String\r\n    \"\")\r\n  (define-fun <init>/613807010 ((x!0 var2313) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun cast-from-Float64-to-Int ((x!0 Float64)) Int\r\n    0)\r\n  (define-fun cast-from-Int-to-Float64 ((x!0 Int)) Float64\r\n    (_ NaN 11 53))\r\n  (define-fun <init>/875830710 ((x!0 var997) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 86 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12566528,
            "run_time": 0.04673194885253906,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1497 is 2\r\n; rep: (as @var1497_0 var1497)\r\n; rep: (as @var1497_1 var1497)\r\n; cardinality of var2313 is 1\r\n; rep: (as @var2313_0 var2313)\r\n; cardinality of var997 is 1\r\n; rep: (as @var997_0 var997)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2313-init () var2313 (as @var2313_0 var2313))\r\n(define-fun getLength-Arr-var1497-1 ((_arg_1 (Array Int var1497))) Int 1)\r\n(define-fun cast-from-Int-to-Float64 ((BOUND_VARIABLE_1455 Int)) (_ FloatingPoint 11 53) (fp #b0 #b00000000000 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun cast-from-Float64-to-Int ((BOUND_VARIABLE_1459 (_ FloatingPoint 11 53))) Int 0)\r\n(define-fun <init>/613807010 ((BOUND_VARIABLE_1462 var2313) (BOUND_VARIABLE_1463 Int)) void (as @void_0 void))\r\n(define-fun var997-init () var997 (as @var997_0 var997))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1466 String) (BOUND_VARIABLE_1467 var1497)) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_1470 var997) (BOUND_VARIABLE_1471 String)) void (as @void_0 void))\r\n(define-fun null-__Array__Int__var1497__ () (Array Int var1497) (store ((as const (Array Int var1497)) (as @var1497_1 var1497)) 0 (as @var1497_0 var1497)))\r\n(define-fun var1621 () (Array Int var1497) (store ((as const (Array Int var1497)) (as @var1497_0 var1497)) 0 (as @var1497_1 var1497)))\r\n(define-fun var1858!1 () var2313 (as @var2313_0 var2313))\r\n(define-fun var1135!1 () Int 0)\r\n(define-fun var543!1 () String \"\")\r\n(define-fun var543!2 () String \"Array element \")\r\n(define-fun var168!1 () String \"Array element \")\r\n(define-fun var3538!1 () String \"Array element 0, '\")\r\n(define-fun var250!1 () String \"Array element 0, '\")\r\n(define-fun var3054!1 () String \"', is neither of type Map.Entry nor an Array\")\r\n(define-fun var3525!1 () var997 (as @var997_0 var997))\r\n(define-fun var3502!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37220352,
            "run_time": 0.21672701835632324,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1497:\n  ;;   var1497!val!0 var1497!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1497!val!0 () var1497)\n  (declare-fun var1497!val!1 () var1497)\n  ;; cardinality constraint:\n  (forall ((x var1497)) (or (= x var1497!val!0) (= x var1497!val!1)))\n  ;; -----------\n  (define-fun var753 () String\n    (str.++ (append/-1031950772\n          (str.++ var543!1 \"Array element \" (str.from_int 0) \", '\")\n          (select var1621 0))\n        \"', is neither of type Map.Entry nor an Array\"))\n  (define-fun var3502 () String\n    (str.++ (append/-1031950772\n          (str.++ var543!1 \"Array element \" (str.from_int 0) \", '\")\n          (select var1621 0))\n        \"', is neither of type Map.Entry nor an Array\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1858 () var2313\n    var2313-init)\n  (define-fun var3525 () var997\n    var997-init)\n  (define-fun var2484 () Int\n    (getLength-Arr-var1497-1 var1621))\n  (define-fun var250 () String\n    (str.++ var543!1 \"Array element \" (str.from_int 0) \", '\"))\n  (define-fun var168!1 () String\n    \"Array element \")\n  (define-fun var1025 () Int\n    (getLength-Arr-var1497-1 var1621))\n  (define-fun var168 () String\n    (str.++ var543!1 \"Array element \"))\n  (define-fun var1256 () var1497\n    (select var1621 0))\n  (define-fun var3538!1 () String\n    \"Array element 0, '\")\n  (define-fun var3054 () String\n    (append/-1031950772\n  (str.++ var543!1 \"Array element \" (str.from_int 0) \", '\")\n  (select var1621 0)))\n  (define-fun var166 () Bool\n    false)\n  (define-fun var3538 () String\n    (str.++ var543!1 \"Array element \" (str.from_int 0)))\n  (define-fun var75 () Int\n    0)\n  (define-fun var543!2 () String\n    \"Array element \")\n  (define-fun var1621 () (Array Int var1497)\n    ((as const (Array Int var1497)) var1497!val!1))\n  (define-fun var3712 () Float64\n    (fp.mul roundNearestTiesToEven\n        (cast-from-Int-to-Float64 (getLength-Arr-var1497-1 var1621))\n        ((_ to_fp 11 53) #x3ff8000000000000)))\n  (define-fun var871 () Bool\n    false)\n  (define-fun var250!1 () String\n    \"Array element 0, '\")\n  (define-fun null-__Array__Int__var1497__ () (Array Int var1497)\n    ((as const (Array Int var1497)) var1497!val!0))\n  (define-fun var543 () String\n    String-init)\n  (define-fun var894 () Float64\n    (cast-from-Int-to-Float64 (getLength-Arr-var1497-1 var1621)))\n  (define-fun var1135 () Int\n    (cast-from-Float64-to-Int\n  (fp.mul roundNearestTiesToEven\n          (cast-from-Int-to-Float64 (getLength-Arr-var1497-1 var1621))\n          ((_ to_fp 11 53) #x3ff8000000000000))))\n  (define-fun var543!1 () String\n    \"\")\n  (define-fun var3054!1 () String\n    \"', is neither of type Map.Entry nor an Array\")\n  (define-fun var3525!1 () var997\n    var997!val!0)\n  (define-fun var1135!1 () Int\n    0)\n  (define-fun var2313-init () var2313\n    var2313!val!0)\n  (define-fun var3502!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1858!1 () var2313\n    var2313!val!0)\n  (define-fun var997-init () var997\n    var997!val!0)\n  (define-fun getLength-Arr-var1497-1 ((x!0 (Array Int var1497))) Int\n    1)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1497)) String\n    \"\")\n  (define-fun <init>/613807010 ((x!0 var2313) (x!1 Int)) void\n    void!val!0)\n  (define-fun cast-from-Float64-to-Int ((x!0 Float64)) Int\n    0)\n  (define-fun cast-from-Int-to-Float64 ((x!0 Int)) Float64\n    (_ NaN 11 53))\n  (define-fun <init>/875830710 ((x!0 var997) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 86 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 124403712,
            "run_time": 1.5283629894256592,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.ArrayUtils__toMap__1909153180\\6431.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n881ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object[]",
            "if r0 != null goto $r1 = new java.util.HashMap",
            "$r1 = new java.util.HashMap",
            "$i0 = lengthof r0",
            "$d0 = (double) $i0",
            "$d1 = $d0 * 1.5",
            "$i1 = (int) $d1",
            "specialinvoke $r1.<java.util.HashMap: void <init>(int)>($i1)",
            "i4 = 0",
            "$i2 = lengthof r0",
            "if i4 >= $i2 goto return $r1",
            "r2 = r0[i4]",
            "$z0 = r2 instanceof java.util.Map$Entry",
            "if $z0 == 0 goto $z1 = r2 instanceof java.lang.Object[]",
            "$z1 = r2 instanceof java.lang.Object[]",
            "if $z1 == 0 goto $r3 = new java.lang.IllegalArgumentException",
            "$r3 = new java.lang.IllegalArgumentException",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Array element \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \\'\")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\', is neither of type Map.Entry nor an Array\")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r10)",
            "throw $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.TypeUtils__getRawType__1760786758\\3476.smt2",
        "z3": {
            "memory": 31473664,
            "run_time": 0.2315809726715088,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 49 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9576448,
            "run_time": 0.06282353401184082,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35999744,
            "run_time": 0.1244039535522461,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 49 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 160849920,
            "run_time": 2.0119335651397705,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.reflect.ParameterizedType",
            "r1 = interfaceinvoke r0.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>()",
            "$z0 = r1 instanceof java.lang.Class",
            "if $z0 != 0 goto $r2 = (java.lang.Class) r1",
            "$r3 = new java.lang.IllegalStateException",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Wait... What!? Type of rawType: \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r7)",
            "throw $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__replaceImpl__-387323028\\5784.smt2",
        "z3": {
            "memory": 31891456,
            "run_time": 0.15244770050048828,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var174:\r\n  ;;   var174!val!0 var174!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var174!val!0 () var174)\r\n  (declare-fun var174!val!1 () var174)\r\n  ;; cardinality constraint:\r\n  (forall ((x var174)) (or (= x var174!val!0) (= x var174!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var174 () var174\r\n    var174!val!1)\r\n  (define-fun var2859 () Int\r\n    (size/1389889126 var922))\r\n  (define-fun var2484 () Int\r\n    3)\r\n  (define-fun var922 () var174\r\n    var174!val!0)\r\n  (define-fun var3166 () String\r\n    \"!0!\")\r\n  (define-fun var2992 () Int\r\n    (+ (- (size/1389889126 var922) var3015) var1669))\r\n  (define-fun var1272 () (Array Int Int)\r\n    (buffer/1389889126 var922))\r\n  (define-fun var100 () Int\r\n    (- (size/1389889126 var922) var3015))\r\n  (define-fun var2270 () Int\r\n    3)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var3015 () Int\r\n    1)\r\n  (define-fun var1669 () Int\r\n    1)\r\n  (define-fun var3166!1 () String\r\n    \"\")\r\n  (define-fun var1272!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var2484!1 () Int\r\n    0)\r\n  (define-fun var1669!1 () Int\r\n    0)\r\n  (define-fun var1684 () Int\r\n    0)\r\n  (define-fun getChars/1306883398 ((x!0 String)\r\n   (x!1 Int)\r\n   (x!2 Int)\r\n   (x!3 (Array Int Int))\r\n   (x!4 Int)) void\r\n    void!val!0)\r\n  (define-fun buffer/1389889126 ((x!0 var174)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun size/1389889126 ((x!0 var174)) Int\r\n    0)\r\n)\r\n(error \"line 47 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1667072,
            "run_time": 0.04714345932006836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var174 is 2\r\n; rep: (as @var174_0 var174)\r\n; rep: (as @var174_1 var174)\r\n; cardinality of var321 is 1\r\n; rep: (as @var321_0 var321)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((BOUND_VARIABLE_608 var174)) Int 0)\r\n(define-fun buffer/1389889126 ((BOUND_VARIABLE_611 var174)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun getChars/1306883398 ((BOUND_VARIABLE_616 String) (BOUND_VARIABLE_617 Int) (BOUND_VARIABLE_618 Int) (BOUND_VARIABLE_619 (Array Int Int)) (BOUND_VARIABLE_620 Int)) void (as @void_0 void))\r\n(define-fun null-var174 () var174 (as @var174_0 var174))\r\n(define-fun null-Int () Int 0)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var922 () var174 (as @var174_1 var174))\r\n(define-fun var2484 () Int 1)\r\n(define-fun var2270 () Int 1)\r\n(define-fun var3015 () Int 1)\r\n(define-fun var3166 () String \"\")\r\n(define-fun var1669 () Int 1)\r\n(define-fun var3166!1 () String \"\")\r\n(define-fun var1684 () Int 0)\r\n(define-fun var1669!1 () Int 0)\r\n(define-fun var1272!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2484!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37445632,
            "run_time": 0.20223116874694824,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var174:\n  ;;   var174!val!0 var174!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var174!val!0 () var174)\n  (declare-fun var174!val!1 () var174)\n  ;; cardinality constraint:\n  (forall ((x var174)) (or (= x var174!val!0) (= x var174!val!1)))\n  ;; -----------\n  (define-fun var1669 () Int\n    1)\n  (define-fun var922 () var174\n    var174!val!0)\n  (define-fun var2484 () Int\n    3)\n  (define-fun null-var174 () var174\n    var174!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3015 () Int\n    1)\n  (define-fun var3166 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2859 () Int\n    (size/1389889126 var922))\n  (define-fun var2270 () Int\n    3)\n  (define-fun var100 () Int\n    (- (size/1389889126 var922) var3015))\n  (define-fun null-Int () Int\n    2)\n  (define-fun var1272 () (Array Int Int)\n    (buffer/1389889126 var922))\n  (define-fun var2992 () Int\n    (+ (- (size/1389889126 var922) var3015) var1669))\n  (define-fun var3166!1 () String\n    \"\")\n  (define-fun var1272!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var2484!1 () Int\n    0)\n  (define-fun var1669!1 () Int\n    0)\n  (define-fun var1684 () Int\n    0)\n  (define-fun getChars/1306883398 ((x!0 String)\n   (x!1 Int)\n   (x!2 Int)\n   (x!3 (Array Int Int))\n   (x!4 Int)) void\n    void!val!0)\n  (define-fun buffer/1389889126 ((x!0 var174)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun size/1389889126 ((x!0 var174)) Int\n    0)\n)\n(error \"line 47 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167247872,
            "run_time": 2.1375584602355957,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1669 () Int 1)\r\n  (define-fun var3166 () String \"\\u{0}\")\r\n  (define-fun var3015 () Int 1)\r\n  (define-fun var2270 () Int 1)\r\n  (define-fun var2484 () Int 1)\r\n  (define-fun var922 () var174 var174!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var174 () var174 var174!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.String: void getChars(int,int,char[],int)>"
        ],
        "api_count": {
            "<java.lang.String: void getChars(int,int,char[],int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i5 := @parameter0: int",
            "i6 := @parameter1: int",
            "i0 := @parameter2: int",
            "r1 := @parameter3: java.lang.String",
            "i2 := @parameter4: int",
            "$i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i3 = $i1 - i0",
            "i4 = $i3 + i2",
            "if i2 == i0 goto (branch)",
            "if i2 <= 0 goto return",
            "$r2 = r0.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "virtualinvoke r1.<java.lang.String: void getChars(int,int,char[],int)>(0, i2, $r2, i5)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults__checkName__1043747187\\1933.smt2",
        "z3": {
            "memory": 31961088,
            "run_time": 0.13473153114318848,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3613:\r\n  ;;   var3613!val!0 var3613!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3613!val!0 () var3613)\r\n  (declare-fun var3613!val!1 () var3613)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3613)) (or (= x var3613!val!0) (= x var3613!val!1)))\r\n  ;; -----------\r\n  (define-fun var1635 () var1540\r\n    (var459_get/1088891777\r\n  (initializers/-1177927772 var193)\r\n  (cast-from-String-to-var1540 var804)))\r\n  (define-fun var2567 () String\r\n    (str.++ var56!1 \"No child initializer with name \" var804))\r\n  (define-fun var2813 () String\r\n    (str.++ var56!1 \"No child initializer with name \"))\r\n  (define-fun var56 () String\r\n    String-init)\r\n  (define-fun var2054 () var3624\r\n    (cast-from-var1540-to-var3624\r\n  (var459_get/1088891777\r\n    (initializers/-1177927772 var193)\r\n    (cast-from-String-to-var1540 var804))))\r\n  (define-fun var1345 () var3900\r\n    var3900-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3233 () var459\r\n    (initializers/-1177927772 var193))\r\n  (define-fun null-var3613 () var3613\r\n    var3613!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var193 () var3613\r\n    var3613!val!0)\r\n  (define-fun var990 () String\r\n    (str.++ var56!1 \"No child initializer with name \" var804))\r\n  (define-fun var804 () String\r\n    \"A\")\r\n  (define-fun null-var3624 () var3624\r\n    var3624!val!0)\r\n  (define-fun var2813!1 () String\r\n    \"No child initializer with name A\")\r\n  (define-fun var56!2 () String\r\n    \"No child initializer with name \")\r\n  (define-fun var56!1 () String\r\n    \"\")\r\n  (define-fun var990!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3900-init () var3900\r\n    var3900!val!0)\r\n  (define-fun var1345!1 () var3900\r\n    var3900!val!0)\r\n  (define-fun initializers/-1177927772 ((x!0 var3613)) var459\r\n    var459!val!0)\r\n  (define-fun cast-from-String-to-var1540 ((x!0 String)) var1540\r\n    var1540!val!0)\r\n  (define-fun var459_get/1088891777 ((x!0 var459) (x!1 var1540)) var1540\r\n    var1540!val!0)\r\n  (define-fun cast-from-var1540-to-var3624 ((x!0 var1540)) var3624\r\n    var3624!val!0)\r\n  (define-fun <init>/-1658509215 ((x!0 var3900) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 59 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1622016,
            "run_time": 0.030614137649536133,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3613 is 2\r\n; rep: (as @var3613_0 var3613)\r\n; rep: (as @var3613_1 var3613)\r\n; cardinality of var1852 is 1\r\n; rep: (as @var1852_0 var1852)\r\n; cardinality of var459 is 1\r\n; rep: (as @var459_0 var459)\r\n; cardinality of var1540 is 1\r\n; rep: (as @var1540_0 var1540)\r\n; cardinality of var3624 is 1\r\n; rep: (as @var3624_0 var3624)\r\n; cardinality of var3900 is 1\r\n; rep: (as @var3900_0 var3900)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun initializers/-1177927772 ((BOUND_VARIABLE_635 var3613)) var459 (as @var459_0 var459))\r\n(define-fun var459_get/1088891777 ((BOUND_VARIABLE_638 var459) (BOUND_VARIABLE_639 var1540)) var1540 (as @var1540_0 var1540))\r\n(define-fun cast-from-String-to-var1540 ((BOUND_VARIABLE_642 String)) var1540 (as @var1540_0 var1540))\r\n(define-fun cast-from-var1540-to-var3624 ((BOUND_VARIABLE_645 var1540)) var3624 (as @var3624_0 var3624))\r\n(define-fun var3900-init () var3900 (as @var3900_0 var3900))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1658509215 ((BOUND_VARIABLE_648 var3900) (BOUND_VARIABLE_649 String)) void (as @void_0 void))\r\n(define-fun null-var3613 () var3613 (as @var3613_0 var3613))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3624 () var3624 (as @var3624_0 var3624))\r\n(define-fun var193 () var3613 (as @var3613_1 var3613))\r\n(define-fun var804 () String \"\")\r\n(define-fun var56!1 () String \"\")\r\n(define-fun var56!2 () String \"No child initializer with name \")\r\n(define-fun var2813!1 () String \"No child initializer with name \")\r\n(define-fun var1345!1 () var3900 (as @var3900_0 var3900))\r\n(define-fun var990!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37396480,
            "run_time": 0.14046287536621094,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3613:\n  ;;   var3613!val!0 var3613!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3613!val!0 () var3613)\n  (declare-fun var3613!val!1 () var3613)\n  ;; cardinality constraint:\n  (forall ((x var3613)) (or (= x var3613!val!0) (= x var3613!val!1)))\n  ;; -----------\n  ;; universe for var3624:\n  ;;   var3624!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3624!val!0 () var3624)\n  ;; cardinality constraint:\n  (forall ((x var3624)) (= x var3624!val!0))\n  ;; -----------\n  (define-fun var56!1 () String\n    \"\")\n  (define-fun var56!2 () String\n    \"No child initializer with name \")\n  (define-fun var2813!1 () String\n    \"No child initializer with name \\u{0}\\u{0}\")\n  (define-fun null-var3624 () var3624\n    var3624!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2813 () String\n    (str.++ var56!1 \"No child initializer with name \"))\n  (define-fun var990 () String\n    (str.++ var56!1 \"No child initializer with name \" var804))\n  (define-fun var2054 () var3624\n    (cast-from-var1540-to-var3624\n  (var459_get/1088891777\n    (initializers/-1177927772 var193)\n    (cast-from-String-to-var1540 var804))))\n  (define-fun null-var3613 () var3613\n    var3613!val!1)\n  (define-fun var56 () String\n    String-init)\n  (define-fun var193 () var3613\n    var3613!val!0)\n  (define-fun var3233 () var459\n    (initializers/-1177927772 var193))\n  (define-fun var2567 () String\n    (str.++ var56!1 \"No child initializer with name \" var804))\n  (define-fun var1635 () var1540\n    (var459_get/1088891777\n  (initializers/-1177927772 var193)\n  (cast-from-String-to-var1540 var804)))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1345 () var3900\n    var3900-init)\n  (define-fun var804 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var990!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3900-init () var3900\n    var3900!val!0)\n  (define-fun var1345!1 () var3900\n    var3900!val!0)\n  (define-fun initializers/-1177927772 ((x!0 var3613)) var459\n    var459!val!0)\n  (define-fun cast-from-String-to-var1540 ((x!0 String)) var1540\n    var1540!val!0)\n  (define-fun var459_get/1088891777 ((x!0 var459) (x!1 var1540)) var1540\n    var1540!val!0)\n  (define-fun cast-from-var1540-to-var3624 ((x!0 var1540)) var3624\n    var3624!val!0)\n  (define-fun <init>/-1658509215 ((x!0 var3900) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 59 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163164160,
            "run_time": 2.337874412536621,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3613/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults__checkName__1043747187\\1933.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2813!1 =\r\n     concat(\"No child initializer with name \", var804)\r\n\r\n1721ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults",
            "r1 := @parameter0: java.lang.String",
            "$r2 = r0.<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults: java.util.Map initializers>",
            "$r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)",
            "r4 = (org.apache.commons.lang3.concurrent.BackgroundInitializer) $r3",
            "if r4 != null goto return r4",
            "$r5 = new java.util.NoSuchElementException",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No child initializer with name \")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r5.<java.util.NoSuchElementException: void <init>(java.lang.String)>($r9)",
            "throw $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.translate.LookupTranslator__translate__849500453\\3418.smt2",
        "z3": {
            "memory": 31813632,
            "run_time": 0.1538698673248291,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3124:\r\n  ;;   var3124!val!0 var3124!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3124!val!0 () var3124)\r\n  (declare-fun var3124!val!1 () var3124)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3124)) (or (= x var3124!val!0) (= x var3124!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1807:\r\n  ;;   var1807!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1807!val!0 () var1807)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1807)) (= x var1807!val!0))\r\n  ;; -----------\r\n  ;; universe for var2405:\r\n  ;;   var2405!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2405!val!0 () var2405)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2405)) (= x var2405!val!0))\r\n  ;; -----------\r\n  ;; universe for var3505:\r\n  ;;   var3505!val!1 var3505!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3505!val!1 () var3505)\r\n  (declare-fun var3505!val!0 () var3505)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3505)) (or (= x var3505!val!1) (= x var3505!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2248:\r\n  ;;   var2248!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2248!val!0 () var2248)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2248)) (= x var2248!val!0))\r\n  ;; -----------\r\n  (define-fun var74 () var2405\r\n    (prefixSet/-756498928 var404))\r\n  (define-fun var3530 () Int\r\n    (String_charAt/1466887330 var3597 var2540))\r\n  (define-fun null-var3124 () var3124\r\n    var3124!val!1)\r\n  (define-fun null-var3505 () var3505\r\n    var3505!val!1)\r\n  (define-fun var1095 () var2248\r\n    (var2248_valueOf/-1186540555 (String_charAt/1466887330 var3597 var2540)))\r\n  (define-fun var404 () var3124\r\n    var3124!val!0)\r\n  (define-fun var3597 () String\r\n    \"!0!\")\r\n  (define-fun var2540 () Int\r\n    2)\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var444 () Bool\r\n    (contains/1104939995\r\n  (prefixSet/-756498928 var404)\r\n  (cast-from-var2248-to-var1807\r\n    (var2248_valueOf/-1186540555 (String_charAt/1466887330 var3597 var2540)))))\r\n  (define-fun var160 () var3505\r\n    var3505!val!0)\r\n  (define-fun String_charAt/1466887330 ((x!0 String) (x!1 Int)) Int\r\n    3)\r\n  (define-fun var2248_valueOf/-1186540555 ((x!0 Int)) var2248\r\n    var2248!val!0)\r\n  (define-fun cast-from-var2248-to-var1807 ((x!0 var2248)) var1807\r\n    var1807!val!0)\r\n  (define-fun prefixSet/-756498928 ((x!0 var3124)) var2405\r\n    var2405!val!0)\r\n  (define-fun contains/1104939995 ((x!0 var2405) (x!1 var1807)) Bool\r\n    false)\r\n)\r\n(error \"line 39 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1650688,
            "run_time": 0.20202851295471191,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3124 is 2\r\n; rep: (as @var3124_0 var3124)\r\n; rep: (as @var3124_1 var3124)\r\n; cardinality of var3505 is 2\r\n; rep: (as @var3505_0 var3505)\r\n; rep: (as @var3505_1 var3505)\r\n; cardinality of var2405 is 1\r\n; rep: (as @var2405_0 var2405)\r\n; cardinality of var2248 is 1\r\n; rep: (as @var2248_0 var2248)\r\n; cardinality of var1807 is 1\r\n; rep: (as @var1807_0 var1807)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun prefixSet/-756498928 ((_arg_1 var3124)) var2405 (as @var2405_0 var2405))\r\n(define-fun String_charAt/1466887330 ((_arg_1 String) (_arg_2 Int)) Int 2)\r\n(define-fun var2248_valueOf/-1186540555 ((_arg_1 Int)) var2248 (as @var2248_0 var2248))\r\n(define-fun contains/1104939995 ((_arg_1 var2405) (_arg_2 var1807)) Bool false)\r\n(define-fun cast-from-var2248-to-var1807 ((_arg_1 var2248)) var1807 (as @var1807_0 var1807))\r\n(define-fun null-var3124 () var3124 (as @var3124_0 var3124))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var3505 () var3505 (as @var3505_0 var3505))\r\n(define-fun var404 () var3124 (as @var3124_1 var3124))\r\n(define-fun var3597 () String \"\")\r\n(define-fun var2540 () Int 0)\r\n(define-fun var160 () var3505 (as @var3505_1 var3505))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36765696,
            "run_time": 0.25971007347106934,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3124:\n  ;;   var3124!val!0 var3124!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3124!val!0 () var3124)\n  (declare-fun var3124!val!1 () var3124)\n  ;; cardinality constraint:\n  (forall ((x var3124)) (or (= x var3124!val!0) (= x var3124!val!1)))\n  ;; -----------\n  ;; universe for var1807:\n  ;;   var1807!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1807!val!0 () var1807)\n  ;; cardinality constraint:\n  (forall ((x var1807)) (= x var1807!val!0))\n  ;; -----------\n  ;; universe for var2405:\n  ;;   var2405!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2405!val!0 () var2405)\n  ;; cardinality constraint:\n  (forall ((x var2405)) (= x var2405!val!0))\n  ;; -----------\n  ;; universe for var3505:\n  ;;   var3505!val!1 var3505!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3505!val!1 () var3505)\n  (declare-fun var3505!val!0 () var3505)\n  ;; cardinality constraint:\n  (forall ((x var3505)) (or (= x var3505!val!1) (= x var3505!val!0)))\n  ;; -----------\n  ;; universe for var2248:\n  ;;   var2248!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2248!val!0 () var2248)\n  ;; cardinality constraint:\n  (forall ((x var2248)) (= x var2248!val!0))\n  ;; -----------\n  (define-fun var404 () var3124\n    var3124!val!0)\n  (define-fun null-Int () Int\n    4)\n  (define-fun var2540 () Int\n    3)\n  (define-fun var74 () var2405\n    (prefixSet/-756498928 var404))\n  (define-fun null-var3505 () var3505\n    var3505!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1095 () var2248\n    (var2248_valueOf/-1186540555 (String_charAt/1466887330 var3597 var2540)))\n  (define-fun var444 () Bool\n    (contains/1104939995\n  (prefixSet/-756498928 var404)\n  (cast-from-var2248-to-var1807\n    (var2248_valueOf/-1186540555 (String_charAt/1466887330 var3597 var2540)))))\n  (define-fun null-var3124 () var3124\n    var3124!val!1)\n  (define-fun var160 () var3505\n    var3505!val!0)\n  (define-fun var3597 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3530 () Int\n    (String_charAt/1466887330 var3597 var2540))\n  (define-fun var2248_valueOf/-1186540555 ((x!0 Int)) var2248\n    var2248!val!0)\n  (define-fun cast-from-var2248-to-var1807 ((x!0 var2248)) var1807\n    var1807!val!0)\n  (define-fun prefixSet/-756498928 ((x!0 var3124)) var2405\n    var2405!val!0)\n  (define-fun String_charAt/1466887330 ((x!0 String) (x!1 Int)) Int\n    4)\n  (define-fun contains/1104939995 ((x!0 var2405) (x!1 var1807)) Bool\n    false)\n)\n(error \"line 39 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166166528,
            "run_time": 1.9525532722473145,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var160 () var3505 var3505!12)\r\n  (define-fun var2540 () Int 5)\r\n  (define-fun var3597 () String \"\\u{0}\")\r\n  (define-fun var404 () var3124 var3124!6)\r\n  (define-fun null-var3505 () var3505 var3505!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3124 () var3124 var3124!2)\r\n  (define-fun var1807!36 () var1807 (cast-from-var2248-to-var1807 var2248!34))\r\n  (define-fun var2248!34 () var2248 (var2248_valueOf/-1186540555 16))\r\n  (define-fun var2405!30 () var2405 (prefixSet/-756498928 var3124!6))\r\n  (define-fun contains/1104939995 ((x!0 var2405) (x!1 var1807)) Bool (ite (and (= x!0 var2405!30) (= x!1 var1807!36)) false true))\r\n  (define-fun String_charAt/1466887330 ((x!0 String) (x!1 Int)) Int (ite (and (= x!0 \"\\u{0}\") (= x!1 5)) 16 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.CharSequence: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.CharSequence: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.translate.LookupTranslator",
            "r1 := @parameter0: java.lang.CharSequence",
            "i0 := @parameter1: int",
            "r9 := @parameter2: java.io.Writer",
            "$r2 = r0.<org.apache.commons.lang3.text.translate.LookupTranslator: java.util.HashSet prefixSet>",
            "$c1 = interfaceinvoke r1.<java.lang.CharSequence: char charAt(int)>(i0)",
            "$r3 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>($c1)",
            "$z0 = virtualinvoke $r2.<java.util.HashSet: boolean contains(java.lang.Object)>($r3)",
            "if $z0 == 0 goto return 0",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrMatcher__\u300aclinit\u300b__457134759\\3612.smt2",
        "z3": {
            "memory": 31522816,
            "run_time": 0.20694947242736816,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2293 () Int\r\n    0)\r\n  (define-fun var1944-init () var1944\r\n    var1944!val!0)\r\n  (define-fun var2578!1 () var303\r\n    var303!val!0)\r\n  (define-fun var1590!1 () var3979\r\n    var3979!val!0)\r\n  (define-fun var3528 () Int\r\n    0)\r\n  (define-fun var1751 () Int\r\n    0)\r\n  (define-fun var2164-init () var2164\r\n    var2164!val!0)\r\n  (define-fun var1129!1 () var3979\r\n    var3979!val!0)\r\n  (define-fun var3508!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var783!1 () var3979\r\n    var3979!val!0)\r\n  (define-fun var831 () Int\r\n    0)\r\n  (define-fun var121!1 () var1944\r\n    var1944!val!0)\r\n  (define-fun var2027!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var303-init () var303\r\n    var303!val!0)\r\n  (define-fun var778!1 () var3979\r\n    var3979!val!0)\r\n  (define-fun var2526!1 () var3979\r\n    var3979!val!0)\r\n  (define-fun var527!1 () var303\r\n    var303!val!0)\r\n  (define-fun var3979-init () var3979\r\n    var3979!val!0)\r\n  (define-fun var3952!1 () var2164\r\n    var2164!val!0)\r\n  (define-fun var3385 () Int\r\n    0)\r\n  (define-fun var778 () var3979\r\n    var3979-init)\r\n  (define-fun var2526 () var3979\r\n    var3979-init)\r\n  (define-fun var1814 () var3946\r\n    (cast-from-var1944-to-var3946 var121!1))\r\n  (define-fun var1590 () var3979\r\n    var3979-init)\r\n  (define-fun var1770 () var3946\r\n    (cast-from-var303-to-var3946 var527!1))\r\n  (define-fun var2578 () var303\r\n    var303-init)\r\n  (define-fun var2027 () (Array Int Int)\r\n    (toCharArray/415275702 \" \\t\\n\\r\\f\"))\r\n  (define-fun var1129 () var3979\r\n    var3979-init)\r\n  (define-fun var783 () var3979\r\n    var3979-init)\r\n  (define-fun var1621 () String\r\n    \" \\t\\n\\r\\f\")\r\n  (define-fun var3952 () var2164\r\n    var2164-init)\r\n  (define-fun var1263 () var3946\r\n    (cast-from-var3979-to-var3946 var778!1))\r\n  (define-fun var2200 () var3946\r\n    (cast-from-var3979-to-var3946 var1590!1))\r\n  (define-fun var3642 () var3946\r\n    (cast-from-var3979-to-var3946 var783!1))\r\n  (define-fun var527 () var303\r\n    var303-init)\r\n  (define-fun var41 () var3946\r\n    (cast-from-var3979-to-var3946 var1129!1))\r\n  (define-fun var121 () var1944\r\n    var1944-init)\r\n  (define-fun var757 () var3946\r\n    (cast-from-var3979-to-var3946 var2526!1))\r\n  (define-fun var2978 () String\r\n    \"'\"\"\")\r\n  (define-fun var3508 () (Array Int Int)\r\n    (toCharArray/415275702 \"'\"\"\"))\r\n  (define-fun var2456 () var3946\r\n    (cast-from-var2164-to-var3946 var3952!1))\r\n  (define-fun var1919 () var3946\r\n    (cast-from-var303-to-var3946 var2578!1))\r\n  (define-fun cast-from-var3979-to-var3946 ((x!0 var3979)) var3946\r\n    var3946!val!0)\r\n  (define-fun cast-from-var2164-to-var3946 ((x!0 var2164)) var3946\r\n    var3946!val!0)\r\n  (define-fun <init>/1800374827 ((x!0 var2164)) void\r\n    void!val!0)\r\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/1054507276 ((x!0 var3979) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var1944-to-var3946 ((x!0 var1944)) var3946\r\n    var3946!val!0)\r\n  (define-fun <init>/-1103458966 ((x!0 var1944)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var303-to-var3946 ((x!0 var303)) var3946\r\n    var3946!val!0)\r\n  (define-fun <init>/238274446 ((x!0 var303) (x!1 (Array Int Int))) void\r\n    void!val!0)\r\n)\r\n(error \"line 95 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.07972478866577148,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3979 is 1\r\n; rep: (as @var3979_0 var3979)\r\n; cardinality of var3946 is 1\r\n; rep: (as @var3946_0 var3946)\r\n; cardinality of var303 is 1\r\n; rep: (as @var303_0 var303)\r\n; cardinality of var1944 is 1\r\n; rep: (as @var1944_0 var1944)\r\n; cardinality of var2164 is 1\r\n; rep: (as @var2164_0 var2164)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3979-init () var3979 (as @var3979_0 var3979))\r\n(define-fun <init>/1054507276 ((BOUND_VARIABLE_558 var3979) (BOUND_VARIABLE_559 Int)) void (as @void_0 void))\r\n(define-fun cast-from-var3979-to-var3946 ((BOUND_VARIABLE_562 var3979)) var3946 (as @var3946_0 var3946))\r\n(define-fun var303-init () var303 (as @var303_0 var303))\r\n(define-fun toCharArray/415275702 ((BOUND_VARIABLE_565 String)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun <init>/238274446 ((BOUND_VARIABLE_570 var303) (BOUND_VARIABLE_571 (Array Int Int))) void (as @void_0 void))\r\n(define-fun cast-from-var303-to-var3946 ((BOUND_VARIABLE_574 var303)) var3946 (as @var3946_0 var3946))\r\n(define-fun var1944-init () var1944 (as @var1944_0 var1944))\r\n(define-fun <init>/-1103458966 ((BOUND_VARIABLE_577 var1944)) void (as @void_0 void))\r\n(define-fun cast-from-var1944-to-var3946 ((BOUND_VARIABLE_580 var1944)) var3946 (as @var3946_0 var3946))\r\n(define-fun var2164-init () var2164 (as @var2164_0 var2164))\r\n(define-fun <init>/1800374827 ((BOUND_VARIABLE_583 var2164)) void (as @void_0 void))\r\n(define-fun cast-from-var2164-to-var3946 ((BOUND_VARIABLE_586 var2164)) var3946 (as @var3946_0 var3946))\r\n(define-fun var1590!1 () var3979 (as @var3979_0 var3979))\r\n(define-fun var2293 () Int 0)\r\n(define-fun var1129!1 () var3979 (as @var3979_0 var3979))\r\n(define-fun var831 () Int 0)\r\n(define-fun var778!1 () var3979 (as @var3979_0 var3979))\r\n(define-fun var1751 () Int 0)\r\n(define-fun var2578!1 () var303 (as @var303_0 var303))\r\n(define-fun var2027!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var121!1 () var1944 (as @var1944_0 var1944))\r\n(define-fun var2526!1 () var3979 (as @var3979_0 var3979))\r\n(define-fun var3385 () Int 0)\r\n(define-fun var783!1 () var3979 (as @var3979_0 var3979))\r\n(define-fun var3528 () Int 0)\r\n(define-fun var527!1 () var303 (as @var303_0 var303))\r\n(define-fun var3508!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3952!1 () var2164 (as @var2164_0 var2164))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35381248,
            "run_time": 0.12324857711791992,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2293 () Int\n    0)\n  (define-fun var1944-init () var1944\n    var1944!val!0)\n  (define-fun var2578!1 () var303\n    var303!val!0)\n  (define-fun var1590!1 () var3979\n    var3979!val!0)\n  (define-fun var3528 () Int\n    0)\n  (define-fun var1751 () Int\n    0)\n  (define-fun var2164-init () var2164\n    var2164!val!0)\n  (define-fun var1129!1 () var3979\n    var3979!val!0)\n  (define-fun var3508!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var783!1 () var3979\n    var3979!val!0)\n  (define-fun var831 () Int\n    0)\n  (define-fun var121!1 () var1944\n    var1944!val!0)\n  (define-fun var2027!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var303-init () var303\n    var303!val!0)\n  (define-fun var778!1 () var3979\n    var3979!val!0)\n  (define-fun var2526!1 () var3979\n    var3979!val!0)\n  (define-fun var527!1 () var303\n    var303!val!0)\n  (define-fun var3979-init () var3979\n    var3979!val!0)\n  (define-fun var3952!1 () var2164\n    var2164!val!0)\n  (define-fun var3385 () Int\n    0)\n  (define-fun var3952 () var2164\n    var2164-init)\n  (define-fun var1263 () var3946\n    (cast-from-var3979-to-var3946 var778!1))\n  (define-fun var2200 () var3946\n    (cast-from-var3979-to-var3946 var1590!1))\n  (define-fun var3642 () var3946\n    (cast-from-var3979-to-var3946 var783!1))\n  (define-fun var1621 () String\n    \" \\t\\n\\r\\f\")\n  (define-fun var41 () var3946\n    (cast-from-var3979-to-var3946 var1129!1))\n  (define-fun var121 () var1944\n    var1944-init)\n  (define-fun var757 () var3946\n    (cast-from-var3979-to-var3946 var2526!1))\n  (define-fun var527 () var303\n    var303-init)\n  (define-fun var2456 () var3946\n    (cast-from-var2164-to-var3946 var3952!1))\n  (define-fun var2027 () (Array Int Int)\n    (toCharArray/415275702 \" \\t\\n\\r\\f\"))\n  (define-fun var778 () var3979\n    var3979-init)\n  (define-fun var1919 () var3946\n    (cast-from-var303-to-var3946 var2578!1))\n  (define-fun var2526 () var3979\n    var3979-init)\n  (define-fun var1814 () var3946\n    (cast-from-var1944-to-var3946 var121!1))\n  (define-fun var1590 () var3979\n    var3979-init)\n  (define-fun var2978 () String\n    \"'\"\"\")\n  (define-fun var1770 () var3946\n    (cast-from-var303-to-var3946 var527!1))\n  (define-fun var2578 () var303\n    var303-init)\n  (define-fun var1129 () var3979\n    var3979-init)\n  (define-fun var783 () var3979\n    var3979-init)\n  (define-fun var3508 () (Array Int Int)\n    (toCharArray/415275702 \"'\"\"\"))\n  (define-fun cast-from-var3979-to-var3946 ((x!0 var3979)) var3946\n    var3946!val!0)\n  (define-fun cast-from-var2164-to-var3946 ((x!0 var2164)) var3946\n    var3946!val!0)\n  (define-fun <init>/1800374827 ((x!0 var2164)) void\n    void!val!0)\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun <init>/1054507276 ((x!0 var3979) (x!1 Int)) void\n    void!val!0)\n  (define-fun cast-from-var1944-to-var3946 ((x!0 var1944)) var3946\n    var3946!val!0)\n  (define-fun <init>/-1103458966 ((x!0 var1944)) void\n    void!val!0)\n  (define-fun cast-from-var303-to-var3946 ((x!0 var303)) var3946\n    var3946!val!0)\n  (define-fun <init>/238274446 ((x!0 var303) (x!1 (Array Int Int))) void\n    void!val!0)\n)\n(error \"line 95 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150695936,
            "run_time": 1.921757459640503,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 13,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: char[] toCharArray()>",
            "<java.lang.String: char[] toCharArray()>"
        ],
        "api_count": {
            "<java.lang.String: char[] toCharArray()>": 2
        },
        "jimple_statements": [
            "$r0 = new org.apache.commons.lang3.text.StrMatcher$CharMatcher",
            "specialinvoke $r0.<org.apache.commons.lang3.text.StrMatcher$CharMatcher: void <init>(char)>(44)",
            "<org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher COMMA_MATCHER> = $r0",
            "$r1 = new org.apache.commons.lang3.text.StrMatcher$CharMatcher",
            "specialinvoke $r1.<org.apache.commons.lang3.text.StrMatcher$CharMatcher: void <init>(char)>(9)",
            "<org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher TAB_MATCHER> = $r1",
            "$r2 = new org.apache.commons.lang3.text.StrMatcher$CharMatcher",
            "specialinvoke $r2.<org.apache.commons.lang3.text.StrMatcher$CharMatcher: void <init>(char)>(32)",
            "<org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher SPACE_MATCHER> = $r2",
            "$r3 = new org.apache.commons.lang3.text.StrMatcher$CharSetMatcher",
            "$r4 = \" \\t\\n\\r\\f\"",
            "$r5 = virtualinvoke $r4.<java.lang.String: char[] toCharArray()>()",
            "specialinvoke $r3.<org.apache.commons.lang3.text.StrMatcher$CharSetMatcher: void <init>(char[])>($r5)",
            "<org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher SPLIT_MATCHER> = $r3",
            "$r6 = new org.apache.commons.lang3.text.StrMatcher$TrimMatcher",
            "specialinvoke $r6.<org.apache.commons.lang3.text.StrMatcher$TrimMatcher: void <init>()>()",
            "<org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher TRIM_MATCHER> = $r6",
            "$r7 = new org.apache.commons.lang3.text.StrMatcher$CharMatcher",
            "specialinvoke $r7.<org.apache.commons.lang3.text.StrMatcher$CharMatcher: void <init>(char)>(39)",
            "<org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher SINGLE_QUOTE_MATCHER> = $r7",
            "$r8 = new org.apache.commons.lang3.text.StrMatcher$CharMatcher",
            "specialinvoke $r8.<org.apache.commons.lang3.text.StrMatcher$CharMatcher: void <init>(char)>(34)",
            "<org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher DOUBLE_QUOTE_MATCHER> = $r8",
            "$r9 = new org.apache.commons.lang3.text.StrMatcher$CharSetMatcher",
            "$r10 = \"\\'\\\"\"",
            "$r11 = virtualinvoke $r10.<java.lang.String: char[] toCharArray()>()",
            "specialinvoke $r9.<org.apache.commons.lang3.text.StrMatcher$CharSetMatcher: void <init>(char[])>($r11)",
            "<org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher QUOTE_MATCHER> = $r9",
            "$r12 = new org.apache.commons.lang3.text.StrMatcher$NoMatcher",
            "specialinvoke $r12.<org.apache.commons.lang3.text.StrMatcher$NoMatcher: void <init>()>()",
            "<org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher NONE_MATCHER> = $r12",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrTokenizer__reset__676239245\\4455.smt2",
        "z3": {
            "memory": 31481856,
            "run_time": 0.1393420696258545,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 30 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1662976,
            "run_time": 0.1085958480834961,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35074048,
            "run_time": 0.15481925010681152,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 30 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140783616,
            "run_time": 1.793358325958252,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 7,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrTokenizer",
            "r1 := @parameter0: java.lang.String",
            "virtualinvoke r0.<org.apache.commons.lang3.text.StrTokenizer: org.apache.commons.lang3.text.StrTokenizer reset()>()",
            "if r1 == null goto r0.<org.apache.commons.lang3.text.StrTokenizer: char[] chars> = null",
            "r0.<org.apache.commons.lang3.text.StrTokenizer: char[] chars> = null",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.DateUtils__getFragment__420912903\\3849.smt2",
        "z3": {
            "memory": 32161792,
            "run_time": 0.1927649974822998,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3409:\r\n  ;;   var3409!val!0 var3409!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3409!val!0 () var3409)\r\n  (declare-fun var3409!val!1 () var3409)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3409)) (or (= x var3409!val!0) (= x var3409!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1978:\r\n  ;;   var1978!val!2 var1978!val!0 var1978!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1978!val!2 () var1978)\r\n  (declare-fun var1978!val!0 () var1978)\r\n  (declare-fun var1978!val!1 () var1978)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1978))\r\n          (or (= x var1978!val!2) (= x var1978!val!0) (= x var1978!val!1)))\r\n  ;; -----------\r\n  (define-fun var2552 () String\r\n    (str.++ var765!1 \"The fragment \" (str.from_int var1828) \" is not supported\"))\r\n  (define-fun var2015 () var3409\r\n    var3409!val!0)\r\n  (define-fun var688 () Bool\r\n    (ite (= 1 1) true false))\r\n  (define-fun null-var1978 () var1978\r\n    var1978!val!1)\r\n  (define-fun var1828 () Int\r\n    3)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var177 () Bool\r\n    (ite (= 1 1) true false))\r\n  (define-fun var765 () String\r\n    String-init)\r\n  (define-fun var602 () var2599\r\n    var2599-init)\r\n  (define-fun var2076 () Int\r\n    0)\r\n  (define-fun var1978-DAYS () var1978\r\n    var1978!val!2)\r\n  (define-fun var2424 () String\r\n    (str.++ var765!1 \"The fragment \" (str.from_int var1828) \" is not supported\"))\r\n  (define-fun var1770 () var1978\r\n    var1978-DAYS)\r\n  (define-fun var563 () var1978\r\n    var1978!val!0)\r\n  (define-fun var752 () String\r\n    (str.++ var765!1 \"The fragment \"))\r\n  (define-fun null-Int () Int\r\n    4)\r\n  (define-fun null-var3409 () var3409\r\n    var3409!val!1)\r\n  (define-fun var752!1 () String\r\n    \"The fragment \")\r\n  (define-fun var3958 () String\r\n    (str.++ var765!1 \"The fragment \" (str.from_int var1828)))\r\n  (define-fun var765!1 () String\r\n    \"\")\r\n  (define-fun var3958!1 () String\r\n    \"The fragment 3 is not supported\")\r\n  (define-fun var765!2 () String\r\n    \"The fragment \")\r\n  (define-fun var2599-init () var2599\r\n    var2599!val!0)\r\n  (define-fun var2015!1 () var3409\r\n    var3409!val!0)\r\n  (define-fun var602!1 () var2599\r\n    var2599!val!0)\r\n  (define-fun var2552!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3865 () String\r\n    \"\")\r\n  (define-fun var554_requireNonNull/1378936425 ((x!0 var655) (x!1 String)) var655\r\n    var655!val!0)\r\n  (define-fun cast-from-var3409-to-var655 ((x!0 var3409)) var655\r\n    var655!val!0)\r\n  (define-fun <init>/875830710 ((x!0 var2599) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 74 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6946816,
            "run_time": 0.1711881160736084,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3409 is 2\r\n; rep: (as @var3409_0 var3409)\r\n; rep: (as @var3409_1 var3409)\r\n; cardinality of var1978 is 3\r\n; rep: (as @var1978_0 var1978)\r\n; rep: (as @var1978_1 var1978)\r\n; rep: (as @var1978_2 var1978)\r\n; cardinality of var554 is 1\r\n; rep: (as @var554_0 var554)\r\n; cardinality of var655 is 1\r\n; rep: (as @var655_0 var655)\r\n; cardinality of var2599 is 1\r\n; rep: (as @var2599_0 var2599)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var554_requireNonNull/1378936425 ((BOUND_VARIABLE_1019 var655) (BOUND_VARIABLE_1020 String)) var655 (as @var655_0 var655))\r\n(define-fun cast-from-var3409-to-var655 ((BOUND_VARIABLE_1023 var3409)) var655 (as @var655_0 var655))\r\n(define-fun var2599-init () var2599 (as @var2599_0 var2599))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_1026 var2599) (BOUND_VARIABLE_1027 String)) void (as @void_0 void))\r\n(define-fun null-var3409 () var3409 (as @var3409_0 var3409))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var1978 () var1978 (as @var1978_0 var1978))\r\n(define-fun var1978-DAYS () var1978 (as @var1978_1 var1978))\r\n(define-fun var2015 () var3409 (as @var3409_1 var3409))\r\n(define-fun var1828 () Int 0)\r\n(define-fun var563 () var1978 (as @var1978_2 var1978))\r\n(define-fun var2015!1 () var3409 (as @var3409_0 var3409))\r\n(define-fun var3865 () String \"\")\r\n(define-fun var765!1 () String \"\")\r\n(define-fun var765!2 () String \"The fragment \")\r\n(define-fun var752!1 () String \"The fragment \")\r\n(define-fun var3958!1 () String \"The fragment 0 is not supported\")\r\n(define-fun var602!1 () var2599 (as @var2599_0 var2599))\r\n(define-fun var2552!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36950016,
            "run_time": 0.23350214958190918,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3409:\n  ;;   var3409!val!0 var3409!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3409!val!0 () var3409)\n  (declare-fun var3409!val!1 () var3409)\n  ;; cardinality constraint:\n  (forall ((x var3409)) (or (= x var3409!val!0) (= x var3409!val!1)))\n  ;; -----------\n  ;; universe for var1978:\n  ;;   var1978!val!2 var1978!val!0 var1978!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1978!val!2 () var1978)\n  (declare-fun var1978!val!0 () var1978)\n  (declare-fun var1978!val!1 () var1978)\n  ;; cardinality constraint:\n  (forall ((x var1978))\n          (or (= x var1978!val!2) (= x var1978!val!0) (= x var1978!val!1)))\n  ;; -----------\n  (define-fun var602 () var2599\n    var2599-init)\n  (define-fun var2076 () Int\n    0)\n  (define-fun var752!1 () String\n    \"The fragment \")\n  (define-fun var2015 () var3409\n    var3409!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var1978 () var1978\n    var1978!val!1)\n  (define-fun var1770 () var1978\n    var1978-DAYS)\n  (define-fun var1828 () Int\n    3)\n  (define-fun var765 () String\n    String-init)\n  (define-fun var2424 () String\n    (str.++ var765!1 \"The fragment \" (str.from_int var1828) \" is not supported\"))\n  (define-fun var1978-DAYS () var1978\n    var1978!val!2)\n  (define-fun var752 () String\n    (str.++ var765!1 \"The fragment \"))\n  (define-fun var563 () var1978\n    var1978!val!0)\n  (define-fun var3958 () String\n    (str.++ var765!1 \"The fragment \" (str.from_int var1828)))\n  (define-fun var688 () Bool\n    (ite (= 1 1) true false))\n  (define-fun null-Int () Int\n    4)\n  (define-fun null-var3409 () var3409\n    var3409!val!1)\n  (define-fun var765!2 () String\n    \"The fragment \")\n  (define-fun var177 () Bool\n    (ite (= 1 1) true false))\n  (define-fun var2552 () String\n    (str.++ var765!1 \"The fragment \" (str.from_int var1828) \" is not supported\"))\n  (define-fun var765!1 () String\n    \"\")\n  (define-fun var3958!1 () String\n    \"The fragment 3 is not supported\")\n  (define-fun var2599-init () var2599\n    var2599!val!0)\n  (define-fun var2015!1 () var3409\n    var3409!val!0)\n  (define-fun var602!1 () var2599\n    var2599!val!0)\n  (define-fun var2552!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3865 () String\n    \"\")\n  (define-fun var554_requireNonNull/1378936425 ((x!0 var655) (x!1 String)) var655\n    var655!val!0)\n  (define-fun cast-from-var3409-to-var655 ((x!0 var3409)) var655\n    var655!val!0)\n  (define-fun <init>/875830710 ((x!0 var2599) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 74 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179806208,
            "run_time": 2.5945322513580322,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3958!1 () String \"The fragment  is not supported\")\r\n  (define-fun var752!1 () String \"The fragment \")\r\n  (define-fun var765!2 () String \"The fragment \")\r\n  (define-fun var765!1 () String \"\")\r\n  (define-fun var563 () var1978 var1978!10)\r\n  (define-fun var1828 () Int (- 6))\r\n  (define-fun var2015 () var3409 var3409!8)\r\n  (define-fun var1978-DAYS () var1978 var1978!6)\r\n  (define-fun null-var1978 () var1978 var1978!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3409 () var3409 var3409!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.util.Calendar",
            "i0 := @parameter1: int",
            "r1 := @parameter2: java.util.concurrent.TimeUnit",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"calendar\")",
            "l15 = 0L",
            "$r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>",
            "if r1 != $r2 goto $z2 = 1",
            "$z2 = 1",
            "$z1 = 1",
            "lookupswitch(i0) {     case 1: goto $i11 = virtualinvoke r0.<java.util.Calendar: int get(int)>(6);     case 2: goto $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(5);     default: goto tableswitch(i0) {     case 1: goto $i8 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);     case 2: goto $i8 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);     case 3: goto $r6 = new java.lang.IllegalArgumentException;     case 4: goto $r6 = new java.lang.IllegalArgumentException;     case 5: goto $i8 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);     case 6: goto $i8 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);     case 7: goto $r6 = new java.lang.IllegalArgumentException;     case 8: goto $r6 = new java.lang.IllegalArgumentException;     case 9: goto $r6 = new java.lang.IllegalArgumentException;     case 10: goto $r6 = new java.lang.IllegalArgumentException;     case 11: goto $i5 = virtualinvoke r0.<java.util.Calendar: int get(int)>(12);     case 12: goto $i16 = virtualinvoke r0.<java.util.Calendar: int get(int)>(13);     case 13: goto $i19 = virtualinvoke r0.<java.util.Calendar: int get(int)>(14);     case 14: goto goto [?= return l15];     default: goto $r6 = new java.lang.IllegalArgumentException; }; }",
            "tableswitch(i0) {     case 1: goto $i8 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);     case 2: goto $i8 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);     case 3: goto $r6 = new java.lang.IllegalArgumentException;     case 4: goto $r6 = new java.lang.IllegalArgumentException;     case 5: goto $i8 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);     case 6: goto $i8 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);     case 7: goto $r6 = new java.lang.IllegalArgumentException;     case 8: goto $r6 = new java.lang.IllegalArgumentException;     case 9: goto $r6 = new java.lang.IllegalArgumentException;     case 10: goto $r6 = new java.lang.IllegalArgumentException;     case 11: goto $i5 = virtualinvoke r0.<java.util.Calendar: int get(int)>(12);     case 12: goto $i16 = virtualinvoke r0.<java.util.Calendar: int get(int)>(13);     case 13: goto $i19 = virtualinvoke r0.<java.util.Calendar: int get(int)>(14);     case 14: goto goto [?= return l15];     default: goto $r6 = new java.lang.IllegalArgumentException; }",
            "$r6 = new java.lang.IllegalArgumentException",
            "$r7 = new java.lang.StringBuilder",
            "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The fragment \")",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is not supported\")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11)",
            "throw $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.ArrayUtils__toMap__1909153180\\6437.smt2",
        "z3": {
            "memory": 31105024,
            "run_time": 0.12216448783874512,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 90 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1609728,
            "run_time": 0.1088712215423584,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35127296,
            "run_time": 0.12428903579711914,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 90 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 124829696,
            "run_time": 1.5590548515319824,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.ArrayUtils__toMap__1909153180\\6437.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n973ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 10,
        "assertion_count": 22,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object[]",
            "if r0 != null goto $r1 = new java.util.HashMap",
            "$r1 = new java.util.HashMap",
            "$i0 = lengthof r0",
            "$d0 = (double) $i0",
            "$d1 = $d0 * 1.5",
            "$i1 = (int) $d1",
            "specialinvoke $r1.<java.util.HashMap: void <init>(int)>($i1)",
            "i4 = 0",
            "$i2 = lengthof r0",
            "if i4 >= $i2 goto return $r1",
            "r2 = r0[i4]",
            "$z0 = r2 instanceof java.util.Map$Entry",
            "if $z0 == 0 goto $z1 = r2 instanceof java.lang.Object[]",
            "$z1 = r2 instanceof java.lang.Object[]",
            "if $z1 == 0 goto $r3 = new java.lang.IllegalArgumentException",
            "r24 = (java.lang.Object[]) r2",
            "$i3 = lengthof r24",
            "if $i3 >= 2 goto $r12 = r24[0]",
            "$r13 = new java.lang.IllegalArgumentException",
            "$r14 = new java.lang.StringBuilder",
            "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Array element \")",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i4)",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \\'\")",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\', has a length less than 2\")",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r20)",
            "throw $r13"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__subSequence__423694995\\5876.smt2",
        "z3": {
            "memory": 31453184,
            "run_time": 0.21459579467773438,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var859:\r\n  ;;   var859!val!0 var859!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var859!val!0 () var859)\r\n  (declare-fun var859!val!1 () var859)\r\n  ;; cardinality constraint:\r\n  (forall ((x var859)) (or (= x var859!val!0) (= x var859!val!1)))\r\n  ;; -----------\r\n  (define-fun var1296 () var859\r\n    var859!val!0)\r\n  (define-fun var1887 () Int\r\n    1)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun null-var859 () var859\r\n    var859!val!1)\r\n  (define-fun var3242 () Int\r\n    (- 1))\r\n  (define-fun var2012 () var2801\r\n    var2801-init)\r\n  (define-fun var3242!1 () Int\r\n    0)\r\n  (define-fun var2801-init () var2801\r\n    var2801!val!0)\r\n  (define-fun var2012!1 () var2801\r\n    var2801!val!0)\r\n  (define-fun <init>/-25822930 ((x!0 var2801) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1622016,
            "run_time": 0.04681658744812012,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var859 is 2\r\n; rep: (as @var859_0 var859)\r\n; rep: (as @var859_1 var859)\r\n; cardinality of var2801 is 1\r\n; rep: (as @var2801_0 var2801)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2801-init () var2801 (as @var2801_0 var2801))\r\n(define-fun <init>/-25822930 ((BOUND_VARIABLE_467 var2801) (BOUND_VARIABLE_468 Int)) void (as @void_0 void))\r\n(define-fun null-var859 () var859 (as @var859_0 var859))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var1296 () var859 (as @var859_1 var859))\r\n(define-fun var3242 () Int (- 1))\r\n(define-fun var1887 () Int 0)\r\n(define-fun var2012!1 () var2801 (as @var2801_0 var2801))\r\n(define-fun var3242!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35786752,
            "run_time": 0.1402130126953125,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var859:\n  ;;   var859!val!0 var859!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var859!val!0 () var859)\n  (declare-fun var859!val!1 () var859)\n  ;; cardinality constraint:\n  (forall ((x var859)) (or (= x var859!val!0) (= x var859!val!1)))\n  ;; -----------\n  (define-fun var2012 () var2801\n    var2801-init)\n  (define-fun var1296 () var859\n    var859!val!0)\n  (define-fun var1887 () Int\n    1)\n  (define-fun null-Int () Int\n    0)\n  (define-fun null-var859 () var859\n    var859!val!1)\n  (define-fun var3242 () Int\n    (- 1))\n  (define-fun var3242!1 () Int\n    0)\n  (define-fun var2801-init () var2801\n    var2801!val!0)\n  (define-fun var2012!1 () var2801\n    var2801!val!0)\n  (define-fun <init>/-25822930 ((x!0 var2801) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 126545920,
            "run_time": 1.8078532218933105,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1887 () Int 1)\r\n  (define-fun var3242 () Int (- 1))\r\n  (define-fun var1296 () var859 var859!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var859 () var859 var859!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>"
        ],
        "api_count": {
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "i1 := @parameter1: int",
            "if i0 >= 0 goto $i2 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$r4 = new java.lang.StringIndexOutOfBoundsException",
            "specialinvoke $r4.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0)",
            "throw $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__setLength__1429502386\\5848.smt2",
        "z3": {
            "memory": 31711232,
            "run_time": 0.15057659149169922,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2338:\r\n  ;;   var2338!val!0 var2338!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2338!val!0 () var2338)\r\n  (declare-fun var2338!val!1 () var2338)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2338)) (or (= x var2338!val!0) (= x var2338!val!1)))\r\n  ;; -----------\r\n  (define-fun var3371 () Int\r\n    0)\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun null-var2338 () var2338\r\n    var2338!val!1)\r\n  (define-fun var2920 () Int\r\n    (size/1389889126 var87))\r\n  (define-fun var87 () var2338\r\n    var2338!val!0)\r\n  (define-fun var1399 () Int\r\n    (size/1389889126 var87))\r\n  (define-fun size/1389889126 ((x!0 var2338)) Int\r\n    0)\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10076160,
            "run_time": 0.0777127742767334,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2338 is 2\r\n; rep: (as @var2338_0 var2338)\r\n; rep: (as @var2338_1 var2338)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var2338)) Int 0)\r\n(define-fun null-var2338 () var2338 (as @var2338_0 var2338))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var87 () var2338 (as @var2338_1 var2338))\r\n(define-fun var3371 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36126720,
            "run_time": 0.1223897933959961,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2338:\n  ;;   var2338!val!0 var2338!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2338!val!0 () var2338)\n  (declare-fun var2338!val!1 () var2338)\n  ;; cardinality constraint:\n  (forall ((x var2338)) (or (= x var2338!val!0) (= x var2338!val!1)))\n  ;; -----------\n  (define-fun var3371 () Int\n    0)\n  (define-fun null-Int () Int\n    1)\n  (define-fun null-var2338 () var2338\n    var2338!val!1)\n  (define-fun var1399 () Int\n    (size/1389889126 var87))\n  (define-fun var2920 () Int\n    (size/1389889126 var87))\n  (define-fun var87 () var2338\n    var2338!val!0)\n  (define-fun size/1389889126 ((x!0 var2338)) Int\n    0)\n)\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132255744,
            "run_time": 1.9347660541534424,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3371 () Int 0)\r\n  (define-fun var87 () var2338 var2338!4)\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-var2338 () var2338 var2338!2)\r\n  (define-fun size/1389889126 ((x!0 var2338)) Int (ite (= x!0 var2338!4) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "if i0 >= 0 goto $i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i0 >= $i1 goto $i2 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i2 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i0 <= $i2 goto return r0",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6753.smt2",
        "z3": {
            "memory": 31526912,
            "run_time": 0.1807096004486084,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 72 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10395648,
            "run_time": 0.12445783615112305,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35688448,
            "run_time": 0.13792943954467773,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 72 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 145862656,
            "run_time": 1.994096279144287,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 3,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 0",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 0",
            "$z8 = 0",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = $i1 + $i0",
            "$i2 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i4 = $i3 + $i2",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4)",
            "if z3 == 0 goto virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "if z5 == 0 goto $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__validateRange__-28387379\\6432.smt2",
        "z3": {
            "memory": 32055296,
            "run_time": 0.16682004928588867,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3600:\r\n  ;;   var3600!val!1 var3600!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3600!val!1 () var3600)\r\n  (declare-fun var3600!val!0 () var3600)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3600)) (or (= x var3600!val!1) (= x var3600!val!0)))\r\n  ;; -----------\r\n  (define-fun var2825 () Int\r\n    0)\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun var60 () Int\r\n    (size/1389889126 var1550))\r\n  (define-fun var1550 () var3600\r\n    var3600!val!0)\r\n  (define-fun null-var3600 () var3600\r\n    var3600!val!1)\r\n  (define-fun var94 () Int\r\n    0)\r\n  (define-fun size/1389889126 ((x!0 var3600)) Int\r\n    0)\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1691648,
            "run_time": 0.03127169609069824,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3600 is 2\r\n; rep: (as @var3600_0 var3600)\r\n; rep: (as @var3600_1 var3600)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var3600)) Int 0)\r\n(define-fun null-var3600 () var3600 (as @var3600_0 var3600))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1550 () var3600 (as @var3600_1 var3600))\r\n(define-fun var94 () Int 0)\r\n(define-fun var2825 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36052992,
            "run_time": 0.12429189682006836,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3600:\n  ;;   var3600!val!1 var3600!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3600!val!1 () var3600)\n  (declare-fun var3600!val!0 () var3600)\n  ;; cardinality constraint:\n  (forall ((x var3600)) (or (= x var3600!val!1) (= x var3600!val!0)))\n  ;; -----------\n  (define-fun var60 () Int\n    (size/1389889126 var1550))\n  (define-fun var2825 () Int\n    0)\n  (define-fun null-Int () Int\n    1)\n  (define-fun var1550 () var3600\n    var3600!val!0)\n  (define-fun null-var3600 () var3600\n    var3600!val!1)\n  (define-fun var94 () Int\n    0)\n  (define-fun size/1389889126 ((x!0 var3600)) Int\n    0)\n)\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 128233472,
            "run_time": 1.9775550365447998,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2825 () Int 0)\r\n  (define-fun var94 () Int 0)\r\n  (define-fun var1550 () var3600 var3600!4)\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-var3600 () var3600 var3600!2)\r\n  (define-fun size/1389889126 ((x!0 var3600)) Int (ite (= x!0 var3600!4) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "i2 := @parameter1: int",
            "if i0 >= 0 goto $i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i2 <= $i1 goto (branch)",
            "if i0 <= i2 goto return i2",
            "return i2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__toStringBuilder__-706059360\\6399.smt2",
        "z3": {
            "memory": 31576064,
            "run_time": 0.18659591674804688,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2908:\r\n  ;;   var2908!val!1 var2908!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2908!val!1 () var2908)\r\n  (declare-fun var2908!val!0 () var2908)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2908)) (or (= x var2908!val!1) (= x var2908!val!0)))\r\n  ;; -----------\r\n  (define-fun var6 () var2908\r\n    var2908!val!0)\r\n  (define-fun var2684 () Int\r\n    (size/1389889126 var6))\r\n  (define-fun var179!2 () String\r\n    \"\")\r\n  (define-fun var124 () (Array Int Int)\r\n    (buffer/1389889126 var6))\r\n  (define-fun var179 () String\r\n    String-init)\r\n  (define-fun var2148 () String\r\n    (append/-1748486345 var179!1 (buffer/1389889126 var6) 0 (size/1389889126 var6)))\r\n  (define-fun var2798 () Int\r\n    (size/1389889126 var6))\r\n  (define-fun null-var2908 () var2908\r\n    var2908!val!1)\r\n  (define-fun var179!1 () String\r\n    \"\")\r\n  (define-fun var2684!1 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun <init>/543593434 ((x!0 String) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun buffer/1389889126 ((x!0 var2908)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun append/-1748486345 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) String\r\n    \"\")\r\n  (define-fun size/1389889126 ((x!0 var2908)) Int\r\n    0)\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8986624,
            "run_time": 0.09426474571228027,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2908 is 2\r\n; rep: (as @var2908_0 var2908)\r\n; rep: (as @var2908_1 var2908)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun size/1389889126 ((BOUND_VARIABLE_582 var2908)) Int 0)\r\n(define-fun <init>/543593434 ((BOUND_VARIABLE_585 String) (BOUND_VARIABLE_586 Int)) void (as @void_0 void))\r\n(define-fun buffer/1389889126 ((BOUND_VARIABLE_589 var2908)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun append/-1748486345 ((BOUND_VARIABLE_594 String) (BOUND_VARIABLE_595 (Array Int Int)) (BOUND_VARIABLE_596 Int) (BOUND_VARIABLE_597 Int)) String \"\")\r\n(define-fun null-var2908 () var2908 (as @var2908_0 var2908))\r\n(define-fun var6 () var2908 (as @var2908_1 var2908))\r\n(define-fun var179!1 () String \"\")\r\n(define-fun var2684!1 () Int 0)\r\n(define-fun var179!2 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36761600,
            "run_time": 0.1223897933959961,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 31 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151506944,
            "run_time": 2.103200674057007,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.text.StrBuilder__toStringBuilder__-706059360\\6399.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var179!2 =\r\n     concat(var179!1, rhs)\r\n   ... sat\r\n\r\n1596ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrBuilder",
            "$r0 = new java.lang.StringBuilder",
            "$i0 = r1.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>($i0)",
            "$r2 = r1.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "$i1 = r1.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r2, 0, $i1)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.TypeUtils__getRawType__1760786758\\3506.smt2",
        "z3": {
            "memory": 31813632,
            "run_time": 0.10608673095703125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3273:\r\n  ;;   var3273!val!1 var3273!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3273!val!1 () var3273)\r\n  (declare-fun var3273!val!0 () var3273)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3273)) (or (= x var3273!val!1) (= x var3273!val!0)))\r\n  ;; -----------\r\n  (define-fun var3181 () var3273\r\n    var3273!val!0)\r\n  (define-fun var1511 () Bool\r\n    true)\r\n  (define-fun null-var3273 () var3273\r\n    var3273!val!1)\r\n  (define-fun var974 () ClassObject\r\n    (var3273_getRawType/305663496 var3181))\r\n  (define-fun var1713 () ClassObject\r\n    (var3273_getRawType/305663496 var3181))\r\n  (define-fun var3273_getRawType/305663496 ((x!0 var3273)) ClassObject\r\n    ClassObject!val!0)\r\n)\r\n(error \"line 21 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.12390756607055664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3273 is 2\r\n; rep: (as @var3273_0 var3273)\r\n; rep: (as @var3273_1 var3273)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3273_getRawType/305663496 ((BOUND_VARIABLE_437 var3273)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-var3273 () var3273 (as @var3273_0 var3273))\r\n(define-fun var3181 () var3273 (as @var3273_1 var3273))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35741696,
            "run_time": 0.15344738960266113,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3273:\n  ;;   var3273!val!1 var3273!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3273!val!1 () var3273)\n  (declare-fun var3273!val!0 () var3273)\n  ;; cardinality constraint:\n  (forall ((x var3273)) (or (= x var3273!val!1) (= x var3273!val!0)))\n  ;; -----------\n  (define-fun var3181 () var3273\n    var3273!val!0)\n  (define-fun var974 () ClassObject\n    (var3273_getRawType/305663496 var3181))\n  (define-fun var1511 () Bool\n    true)\n  (define-fun null-var3273 () var3273\n    var3273!val!1)\n  (define-fun var1713 () ClassObject\n    (var3273_getRawType/305663496 var3181))\n  (define-fun var3273_getRawType/305663496 ((x!0 var3273)) ClassObject\n    ClassObject!val!0)\n)\n(error \"line 21 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 126554112,
            "run_time": 1.7144436836242676,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3181 () var3273 var3273!4)\r\n  (define-fun null-var3273 () var3273 var3273!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 2,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.reflect.ParameterizedType",
            "r1 = interfaceinvoke r0.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>()",
            "$z0 = r1 instanceof java.lang.Class",
            "if $z0 != 0 goto $r2 = (java.lang.Class) r1",
            "$r2 = (java.lang.Class) r1",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$NumberStrategy__parse__683403985\\3849.smt2",
        "z3": {
            "memory": 32063488,
            "run_time": 0.1481633186340332,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3904:\r\n  ;;   var3904!val!0 var3904!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3904!val!0 () var3904)\r\n  (declare-fun var3904!val!1 () var3904)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3904)) (or (= x var3904!val!0) (= x var3904!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1806:\r\n  ;;   var1806!val!1 var1806!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1806!val!1 () var1806)\r\n  (declare-fun var1806!val!0 () var1806)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1806)) (or (= x var1806!val!1) (= x var1806!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2900:\r\n  ;;   var2900!val!1 var2900!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2900!val!1 () var2900)\r\n  (declare-fun var2900!val!0 () var2900)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2900)) (or (= x var2900!val!1) (= x var2900!val!0)))\r\n  ;; -----------\r\n  ;; universe for var315:\r\n  ;;   var315!val!0 var315!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var315!val!0 () var315)\r\n  (declare-fun var315!val!1 () var315)\r\n  ;; cardinality constraint:\r\n  (forall ((x var315)) (or (= x var315!val!0) (= x var315!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var315 () var315\r\n    var315!val!1)\r\n  (define-fun var383 () var315\r\n    var315!val!0)\r\n  (define-fun var838 () var1806\r\n    var1806!val!0)\r\n  (define-fun var763 () var3904\r\n    var3904!val!0)\r\n  (define-fun var2224 () var2900\r\n    var2900!val!0)\r\n  (define-fun var1139 () Int\r\n    (getIndex/-2136393185 var2224))\r\n  (define-fun null-var3904 () var3904\r\n    var3904!val!1)\r\n  (define-fun null-var1806 () var1806\r\n    var1806!val!1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2294 () Int\r\n    (getIndex/-2136393185 var2224))\r\n  (define-fun var1048 () String\r\n    \"\")\r\n  (define-fun var1779 () Int\r\n    (- 1))\r\n  (define-fun var3858 () Int\r\n    (str.len var1048))\r\n  (define-fun var2747 () Int\r\n    (+ (getIndex/-2136393185 var2224) var1779))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun null-var2900 () var2900\r\n    var2900!val!1)\r\n  (define-fun var2224!1 () var2900\r\n    var2900!val!1)\r\n  (define-fun var2294!1 () Int\r\n    0)\r\n  (define-fun getIndex/-2136393185 ((x!0 var2900)) Int\r\n    1)\r\n  (define-fun setErrorIndex/-1773443795 ((x!0 var2900) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 56 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9814016,
            "run_time": 0.09481382369995117,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var315 is 2\r\n; rep: (as @var315_0 var315)\r\n; rep: (as @var315_1 var315)\r\n; cardinality of var1806 is 2\r\n; rep: (as @var1806_0 var1806)\r\n; rep: (as @var1806_1 var1806)\r\n; cardinality of var3904 is 2\r\n; rep: (as @var3904_0 var3904)\r\n; rep: (as @var3904_1 var3904)\r\n; cardinality of var690 is 1\r\n; rep: (as @var690_0 var690)\r\n; cardinality of var2900 is 2\r\n; rep: (as @var2900_0 var2900)\r\n; rep: (as @var2900_1 var2900)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getIndex/-2136393185 ((_arg_1 var2900)) Int 1)\r\n(define-fun setErrorIndex/-1773443795 ((BOUND_VARIABLE_633 var2900) (BOUND_VARIABLE_634 Int)) void (as @void_0 void))\r\n(define-fun null-var315 () var315 (as @var315_0 var315))\r\n(define-fun null-var1806 () var1806 (as @var1806_0 var1806))\r\n(define-fun null-var3904 () var3904 (as @var3904_0 var3904))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var2900 () var2900 (as @var2900_0 var2900))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var383 () var315 (as @var315_1 var315))\r\n(define-fun var838 () var1806 (as @var1806_1 var1806))\r\n(define-fun var763 () var3904 (as @var3904_1 var3904))\r\n(define-fun var1048 () String \"\")\r\n(define-fun var2224 () var2900 (as @var2900_1 var2900))\r\n(define-fun var1779 () Int (- 1))\r\n(define-fun var2224!1 () var2900 (as @var2900_0 var2900))\r\n(define-fun var2294!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37785600,
            "run_time": 0.12415075302124023,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3904:\n  ;;   var3904!val!0 var3904!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3904!val!0 () var3904)\n  (declare-fun var3904!val!1 () var3904)\n  ;; cardinality constraint:\n  (forall ((x var3904)) (or (= x var3904!val!0) (= x var3904!val!1)))\n  ;; -----------\n  ;; universe for var1806:\n  ;;   var1806!val!1 var1806!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1806!val!1 () var1806)\n  (declare-fun var1806!val!0 () var1806)\n  ;; cardinality constraint:\n  (forall ((x var1806)) (or (= x var1806!val!1) (= x var1806!val!0)))\n  ;; -----------\n  ;; universe for var2900:\n  ;;   var2900!val!1 var2900!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2900!val!1 () var2900)\n  (declare-fun var2900!val!0 () var2900)\n  ;; cardinality constraint:\n  (forall ((x var2900)) (or (= x var2900!val!1) (= x var2900!val!0)))\n  ;; -----------\n  ;; universe for var315:\n  ;;   var315!val!0 var315!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var315!val!0 () var315)\n  (declare-fun var315!val!1 () var315)\n  ;; cardinality constraint:\n  (forall ((x var315)) (or (= x var315!val!0) (= x var315!val!1)))\n  ;; -----------\n  (define-fun var838 () var1806\n    var1806!val!0)\n  (define-fun var383 () var315\n    var315!val!0)\n  (define-fun null-var315 () var315\n    var315!val!1)\n  (define-fun var763 () var3904\n    var3904!val!0)\n  (define-fun null-Int () Int\n    2)\n  (define-fun var1139 () Int\n    (getIndex/-2136393185 var2224))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2224 () var2900\n    var2900!val!0)\n  (define-fun null-var1806 () var1806\n    var1806!val!1)\n  (define-fun null-var3904 () var3904\n    var3904!val!1)\n  (define-fun var2747 () Int\n    (+ (getIndex/-2136393185 var2224) var1779))\n  (define-fun var1779 () Int\n    1)\n  (define-fun var3858 () Int\n    (str.len var1048))\n  (define-fun var1048 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2294 () Int\n    (getIndex/-2136393185 var2224))\n  (define-fun null-var2900 () var2900\n    var2900!val!1)\n  (define-fun var2224!1 () var2900\n    var2900!val!1)\n  (define-fun var2294!1 () Int\n    0)\n  (define-fun getIndex/-2136393185 ((x!0 var2900)) Int\n    2)\n  (define-fun setErrorIndex/-1773443795 ((x!0 var2900) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 56 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164544512,
            "run_time": 2.1646175384521484,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3904/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser$NumberStrategy__parse__683403985\\3849.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n\r\n1539ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r4 := @this: org.apache.commons.lang3.time.FastDateParser$NumberStrategy",
            "r5 := @parameter0: org.apache.commons.lang3.time.FastDateParser",
            "r3 := @parameter1: java.util.Calendar",
            "r1 := @parameter2: java.lang.String",
            "r0 := @parameter3: java.text.ParsePosition",
            "i0 := @parameter4: int",
            "i5 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "i6 = virtualinvoke r1.<java.lang.String: int length()>()",
            "if i0 != 0 goto i8 = i5 + i0",
            "i8 = i5 + i0",
            "if i6 <= i8 goto (branch)",
            "if i5 >= i6 goto $i1 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "$i1 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "if $i1 != i5 goto $i2 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "virtualinvoke r0.<java.text.ParsePosition: void setErrorIndex(int)>(i5)",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__rightString__-114914282\\5823.smt2",
        "z3": {
            "memory": 31703040,
            "run_time": 0.12128043174743652,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1013:\r\n  ;;   var1013!val!0 var1013!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1013!val!0 () var1013)\r\n  (declare-fun var1013!val!1 () var1013)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1013)) (or (= x var1013!val!0) (= x var1013!val!1)))\r\n  ;; -----------\r\n  (define-fun var11 () Int\r\n    (size/1389889126 var1083))\r\n  (define-fun var3648 () String\r\n    String-init)\r\n  (define-fun var800 () Int\r\n    1)\r\n  (define-fun null-var1013 () var1013\r\n    var1013!val!1)\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var50 () Int\r\n    (size/1389889126 var1083))\r\n  (define-fun var1083 () var1013\r\n    var1013!val!0)\r\n  (define-fun var858 () (Array Int Int)\r\n    (buffer/1389889126 var1083))\r\n  (define-fun var2444 () Int\r\n    0)\r\n  (define-fun var858!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var50!1 () Int\r\n    0)\r\n  (define-fun var3648!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun size/1389889126 ((x!0 var1013)) Int\r\n    0)\r\n  (define-fun buffer/1389889126 ((x!0 var1013)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 3715072,
            "run_time": 0.04731273651123047,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1013 is 2\r\n; rep: (as @var1013_0 var1013)\r\n; rep: (as @var1013_1 var1013)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var1013)) Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun buffer/1389889126 ((BOUND_VARIABLE_487 var1013)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_492 String) (BOUND_VARIABLE_493 (Array Int Int)) (BOUND_VARIABLE_494 Int) (BOUND_VARIABLE_495 Int)) void (as @void_0 void))\r\n(define-fun null-var1013 () var1013 (as @var1013_0 var1013))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var1083 () var1013 (as @var1013_1 var1013))\r\n(define-fun var800 () Int 1)\r\n(define-fun var3648!1 () String \"\")\r\n(define-fun var858!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2444 () Int 0)\r\n(define-fun var50!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36118528,
            "run_time": 0.15400314331054688,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1013:\n  ;;   var1013!val!0 var1013!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1013!val!0 () var1013)\n  (declare-fun var1013!val!1 () var1013)\n  ;; cardinality constraint:\n  (forall ((x var1013)) (or (= x var1013!val!0) (= x var1013!val!1)))\n  ;; -----------\n  (define-fun var800 () Int\n    1)\n  (define-fun var11 () Int\n    (size/1389889126 var1083))\n  (define-fun null-var1013 () var1013\n    var1013!val!1)\n  (define-fun var858 () (Array Int Int)\n    (buffer/1389889126 var1083))\n  (define-fun null-Int () Int\n    2)\n  (define-fun var1083 () var1013\n    var1013!val!0)\n  (define-fun var3648 () String\n    String-init)\n  (define-fun var50 () Int\n    (size/1389889126 var1083))\n  (define-fun var2444 () Int\n    0)\n  (define-fun var858!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var50!1 () Int\n    0)\n  (define-fun var3648!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun size/1389889126 ((x!0 var1013)) Int\n    0)\n  (define-fun buffer/1389889126 ((x!0 var1013)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169537536,
            "run_time": 2.0318894386291504,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var800 () Int 7)\r\n  (define-fun var1083 () var1013 var1013!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var1013 () var1013 var1013!2)\r\n  (define-fun size/1389889126 ((x!0 var1013)) Int (ite (= x!0 var1013!4) 7 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: void <init>(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "if i0 > 0 goto $i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i0 < $i1 goto $r1 = new java.lang.String",
            "$r3 = new java.lang.String",
            "$r4 = r0.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "$i4 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "specialinvoke $r3.<java.lang.String: void <init>(char[],int,int)>($r4, 0, $i4)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults__checkName__1043747187\\1964.smt2",
        "z3": {
            "memory": 31518720,
            "run_time": 0.149566650390625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var930:\r\n  ;;   var930!val!0 var930!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var930!val!0 () var930)\r\n  (declare-fun var930!val!1 () var930)\r\n  ;; cardinality constraint:\r\n  (forall ((x var930)) (or (= x var930!val!0) (= x var930!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1207:\r\n  ;;   var1207!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1207!val!0 () var1207)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1207)) (= x var1207!val!0))\r\n  ;; -----------\r\n  ;; universe for var2678:\r\n  ;;   var2678!val!1 var2678!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2678!val!1 () var2678)\r\n  (declare-fun var2678!val!0 () var2678)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2678)) (or (= x var2678!val!1) (= x var2678!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2568:\r\n  ;;   var2568!val!0 var2568!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2568!val!0 () var2568)\r\n  (declare-fun var2568!val!1 () var2568)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2568)) (or (= x var2568!val!0) (= x var2568!val!1)))\r\n  ;; -----------\r\n  (define-fun var829 () var930\r\n    (cast-from-var2568-to-var930\r\n  (var1207_get/1088891777\r\n    (initializers/-1177927772 var2276)\r\n    (cast-from-String-to-var2568 var1579))))\r\n  (define-fun var1579 () String\r\n    \"!0!\")\r\n  (define-fun var2276 () var2678\r\n    var2678!val!0)\r\n  (define-fun var2500 () var2568\r\n    (var1207_get/1088891777\r\n  (initializers/-1177927772 var2276)\r\n  (cast-from-String-to-var2568 var1579)))\r\n  (define-fun var817 () var1207\r\n    (initializers/-1177927772 var2276))\r\n  (define-fun null-var930 () var930\r\n    var930!val!1)\r\n  (define-fun null-var2678 () var2678\r\n    var2678!val!1)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun initializers/-1177927772 ((x!0 var2678)) var1207\r\n    var1207!val!0)\r\n  (define-fun var1207_get/1088891777 ((x!0 var1207) (x!1 var2568)) var2568\r\n    var2568!val!1)\r\n  (define-fun cast-from-String-to-var2568 ((x!0 String)) var2568\r\n    var2568!val!0)\r\n  (define-fun cast-from-var2568-to-var930 ((x!0 var2568)) var930\r\n    var930!val!0)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.031330108642578125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2678 is 2\r\n; rep: (as @var2678_0 var2678)\r\n; rep: (as @var2678_1 var2678)\r\n; cardinality of var1546 is 1\r\n; rep: (as @var1546_0 var1546)\r\n; cardinality of var1207 is 1\r\n; rep: (as @var1207_0 var1207)\r\n; cardinality of var2568 is 2\r\n; rep: (as @var2568_0 var2568)\r\n; rep: (as @var2568_1 var2568)\r\n; cardinality of var930 is 2\r\n; rep: (as @var930_0 var930)\r\n; rep: (as @var930_1 var930)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun initializers/-1177927772 ((_arg_1 var2678)) var1207 (as @var1207_0 var1207))\r\n(define-fun var1207_get/1088891777 ((_arg_1 var1207) (_arg_2 var2568)) var2568 (as @var2568_1 var2568))\r\n(define-fun cast-from-String-to-var2568 ((_arg_1 String)) var2568 (as @var2568_0 var2568))\r\n(define-fun cast-from-var2568-to-var930 ((_arg_1 var2568)) var930 (as @var930_1 var930))\r\n(define-fun null-var2678 () var2678 (as @var2678_0 var2678))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var930 () var930 (as @var930_0 var930))\r\n(define-fun var2276 () var2678 (as @var2678_1 var2678))\r\n(define-fun var1579 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36814848,
            "run_time": 0.14110898971557617,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var930:\n  ;;   var930!val!0 var930!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var930!val!0 () var930)\n  (declare-fun var930!val!1 () var930)\n  ;; cardinality constraint:\n  (forall ((x var930)) (or (= x var930!val!0) (= x var930!val!1)))\n  ;; -----------\n  ;; universe for var1207:\n  ;;   var1207!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1207!val!0 () var1207)\n  ;; cardinality constraint:\n  (forall ((x var1207)) (= x var1207!val!0))\n  ;; -----------\n  ;; universe for var2678:\n  ;;   var2678!val!1 var2678!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2678!val!1 () var2678)\n  (declare-fun var2678!val!0 () var2678)\n  ;; cardinality constraint:\n  (forall ((x var2678)) (or (= x var2678!val!1) (= x var2678!val!0)))\n  ;; -----------\n  ;; universe for var2568:\n  ;;   var2568!val!0 var2568!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2568!val!0 () var2568)\n  (declare-fun var2568!val!1 () var2568)\n  ;; cardinality constraint:\n  (forall ((x var2568)) (or (= x var2568!val!0) (= x var2568!val!1)))\n  ;; -----------\n  (define-fun var2500 () var2568\n    (var1207_get/1088891777\n  (initializers/-1177927772 var2276)\n  (cast-from-String-to-var2568 var1579)))\n  (define-fun var1579 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var829 () var930\n    (cast-from-var2568-to-var930\n  (var1207_get/1088891777\n    (initializers/-1177927772 var2276)\n    (cast-from-String-to-var2568 var1579))))\n  (define-fun var2276 () var2678\n    var2678!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-var2678 () var2678\n    var2678!val!1)\n  (define-fun null-var930 () var930\n    var930!val!1)\n  (define-fun var817 () var1207\n    (initializers/-1177927772 var2276))\n  (define-fun initializers/-1177927772 ((x!0 var2678)) var1207\n    var1207!val!0)\n  (define-fun cast-from-String-to-var2568 ((x!0 String)) var2568\n    var2568!val!0)\n  (define-fun var1207_get/1088891777 ((x!0 var1207) (x!1 var2568)) var2568\n    var2568!val!1)\n  (define-fun cast-from-var2568-to-var930 ((x!0 var2568)) var930\n    var930!val!0)\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 149192704,
            "run_time": 1.8557751178741455,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1579 () String \"\\u{0}\")\r\n  (define-fun var2276 () var2678 var2678!6)\r\n  (define-fun null-var930 () var930 var930!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2678 () var2678 var2678!2)\r\n  (define-fun var930!32 () var930 (cast-from-var2568-to-var930 var2568!30))\r\n  (define-fun var2568!28 () var2568 (cast-from-String-to-var2568 \"\\u{0}\"))\r\n  (define-fun var2568!30 () var2568 (var1207_get/1088891777 var1207!26 var2568!28))\r\n  (define-fun var1207!26 () var1207 (initializers/-1177927772 var2678!6))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults",
            "r1 := @parameter0: java.lang.String",
            "$r2 = r0.<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults: java.util.Map initializers>",
            "$r3 = interfaceinvoke $r2.<java.util.Map: java.lang.Object get(java.lang.Object)>(r1)",
            "r4 = (org.apache.commons.lang3.concurrent.BackgroundInitializer) $r3",
            "if r4 != null goto return r4",
            "return r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.translate.NumericEntityUnescaper__translate__144046577\\3511.smt2",
        "z3": {
            "memory": 31694848,
            "run_time": 0.15177488327026367,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var478:\r\n  ;;   var478!val!0 var478!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var478!val!0 () var478)\r\n  (declare-fun var478!val!1 () var478)\r\n  ;; cardinality constraint:\r\n  (forall ((x var478)) (or (= x var478!val!0) (= x var478!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3929:\r\n  ;;   var3929!val!0 var3929!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3929!val!0 () var3929)\r\n  (declare-fun var3929!val!1 () var3929)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3929)) (or (= x var3929!val!0) (= x var3929!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var3929 () var3929\r\n    var3929!val!1)\r\n  (define-fun var801 () var3929\r\n    var3929!val!0)\r\n  (define-fun var996 () Int\r\n    (String_charAt/1466887330 var1112 var3763))\r\n  (define-fun var3763 () Int\r\n    2)\r\n  (define-fun var1112 () String\r\n    \"!0!\")\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var3093 () var478\r\n    var478!val!0)\r\n  (define-fun null-var478 () var478\r\n    var478!val!1)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1825 () Int\r\n    (String_charAt/1466887330 var1112 var3763))\r\n  (define-fun var2962 () Int\r\n    (String_length/-667254855 var1112))\r\n  (define-fun String_charAt/1466887330 ((x!0 String) (x!1 Int)) Int\r\n    3)\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    0)\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11124736,
            "run_time": 0.06359219551086426,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var478 is 2\r\n; rep: (as @var478_0 var478)\r\n; rep: (as @var478_1 var478)\r\n; cardinality of var3929 is 2\r\n; rep: (as @var3929_0 var3929)\r\n; rep: (as @var3929_1 var3929)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_length/-667254855 ((BOUND_VARIABLE_570 String)) Int 0)\r\n(define-fun String_charAt/1466887330 ((_arg_1 String) (_arg_2 Int)) Int 0)\r\n(define-fun null-var478 () var478 (as @var478_0 var478))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var3929 () var3929 (as @var3929_0 var3929))\r\n(define-fun var3093 () var478 (as @var478_1 var478))\r\n(define-fun var1112 () String \"\")\r\n(define-fun var3763 () Int 0)\r\n(define-fun var801 () var3929 (as @var3929_1 var3929))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36843520,
            "run_time": 0.32955002784729004,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var478:\n  ;;   var478!val!0 var478!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var478!val!0 () var478)\n  (declare-fun var478!val!1 () var478)\n  ;; cardinality constraint:\n  (forall ((x var478)) (or (= x var478!val!0) (= x var478!val!1)))\n  ;; -----------\n  ;; universe for var3929:\n  ;;   var3929!val!0 var3929!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3929!val!0 () var3929)\n  (declare-fun var3929!val!1 () var3929)\n  ;; cardinality constraint:\n  (forall ((x var3929)) (or (= x var3929!val!0) (= x var3929!val!1)))\n  ;; -----------\n  (define-fun var3093 () var478\n    var478!val!0)\n  (define-fun var1825 () Int\n    (String_charAt/1466887330 var1112 var3763))\n  (define-fun null-Int () Int\n    4)\n  (define-fun var3763 () Int\n    3)\n  (define-fun null-var3929 () var3929\n    var3929!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2962 () Int\n    (String_length/-667254855 var1112))\n  (define-fun var1112 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var996 () Int\n    (String_charAt/1466887330 var1112 var3763))\n  (define-fun null-var478 () var478\n    var478!val!1)\n  (define-fun var801 () var3929\n    var3929!val!0)\n  (define-fun String_charAt/1466887330 ((x!0 String) (x!1 Int)) Int\n    4)\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    0)\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141803520,
            "run_time": 1.6092331409454346,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var801 () var3929 var3929!88)\r\n  (define-fun var3763 () Int 43)\r\n  (define-fun var1112 () String \"\\u{0}\")\r\n  (define-fun var3093 () var478 var478!82)\r\n  (define-fun null-var3929 () var3929 var3929!80)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var478 () var478 var478!78)\r\n  (define-fun String_charAt/1466887330 ((x!0 String) (x!1 Int)) Int (ite (and (= x!0 \"\\u{0}\") (= x!1 43)) 50 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>",
            "<java.lang.CharSequence: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 1,
            "<java.lang.CharSequence: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r6 := @this: org.apache.commons.lang3.text.translate.NumericEntityUnescaper",
            "r0 := @parameter0: java.lang.CharSequence",
            "i1 := @parameter1: int",
            "r3 := @parameter2: java.io.Writer",
            "i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$c2 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i1)",
            "$i23 = (int) $c2",
            "if $i23 != 38 goto return 0",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrSubstitutor__replaceIn__-1037098199\\4297.smt2",
        "z3": {
            "memory": 31936512,
            "run_time": 0.15160751342773438,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3136:\r\n  ;;   var3136!val!1 var3136!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3136!val!1 () var3136)\r\n  (declare-fun var3136!val!0 () var3136)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3136)) (or (= x var3136!val!1) (= x var3136!val!0)))\r\n  ;; -----------\r\n  (define-fun var2399 () Bool\r\n    (replaceIn/-305029969 var3665 var2570 0 (length/-171891354 var2570)))\r\n  (define-fun var1807 () Int\r\n    (length/-171891354 var2570))\r\n  (define-fun var3665 () var3136\r\n    var3136!val!0)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-var3136 () var3136\r\n    var3136!val!1)\r\n  (define-fun var2570 () String\r\n    \"!0!\")\r\n  (define-fun replaceIn/-305029969 ((x!0 var3136)\r\n   (x!1 String)\r\n   (x!2 Int)\r\n   (x!3 Int)) Bool\r\n    false)\r\n  (define-fun length/-171891354 ((x!0 String)) Int\r\n    0)\r\n)\r\n(error \"line 25 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.14147448539733887,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3136 is 2\r\n; rep: (as @var3136_0 var3136)\r\n; rep: (as @var3136_1 var3136)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun length/-171891354 ((BOUND_VARIABLE_492 String)) Int 0)\r\n(define-fun replaceIn/-305029969 ((BOUND_VARIABLE_495 var3136) (BOUND_VARIABLE_496 String) (BOUND_VARIABLE_497 Int) (BOUND_VARIABLE_498 Int)) Bool false)\r\n(define-fun null-var3136 () var3136 (as @var3136_0 var3136))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3665 () var3136 (as @var3136_1 var3136))\r\n(define-fun var2570 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37396480,
            "run_time": 0.19773197174072266,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3136:\n  ;;   var3136!val!1 var3136!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3136!val!1 () var3136)\n  (declare-fun var3136!val!0 () var3136)\n  ;; cardinality constraint:\n  (forall ((x var3136)) (or (= x var3136!val!1) (= x var3136!val!0)))\n  ;; -----------\n  (define-fun var2399 () Bool\n    (replaceIn/-305029969 var3665 var2570 0 (length/-171891354 var2570)))\n  (define-fun null-var3136 () var3136\n    var3136!val!1)\n  (define-fun var1807 () Int\n    (length/-171891354 var2570))\n  (define-fun var2570 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3665 () var3136\n    var3136!val!0)\n  (define-fun replaceIn/-305029969 ((x!0 var3136)\n   (x!1 String)\n   (x!2 Int)\n   (x!3 Int)) Bool\n    false)\n  (define-fun length/-171891354 ((x!0 String)) Int\n    0)\n)\n(error \"line 25 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 130387968,
            "run_time": 1.6568398475646973,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2570 () String \"\\u{0}\")\r\n  (define-fun var3665 () var3136 var3136!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3136 () var3136 var3136!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuilder: int length()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrSubstitutor",
            "r0 := @parameter0: java.lang.StringBuilder",
            "if r0 != null goto $i0 = virtualinvoke r0.<java.lang.StringBuilder: int length()>()",
            "$i0 = virtualinvoke r0.<java.lang.StringBuilder: int length()>()",
            "$z0 = virtualinvoke r1.<org.apache.commons.lang3.text.StrSubstitutor: boolean replaceIn(java.lang.StringBuilder,int,int)>(r0, 0, $i0)",
            "return $z0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__subSequence__423694995\\5882.smt2",
        "z3": {
            "memory": 31780864,
            "run_time": 0.15587806701660156,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var686:\r\n  ;;   var686!val!1 var686!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var686!val!1 () var686)\r\n  (declare-fun var686!val!0 () var686)\r\n  ;; cardinality constraint:\r\n  (forall ((x var686)) (or (= x var686!val!1) (= x var686!val!0)))\r\n  ;; -----------\r\n  (define-fun var105 () var686\r\n    var686!val!0)\r\n  (define-fun var1046 () var115\r\n    var115-init)\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var2981 () Int\r\n    (size/1389889126 var105))\r\n  (define-fun null-var686 () var686\r\n    var686!val!1)\r\n  (define-fun var1866 () Int\r\n    0)\r\n  (define-fun var379 () Int\r\n    0)\r\n  (define-fun var115-init () var115\r\n    var115!val!0)\r\n  (define-fun var1046!1 () var115\r\n    var115!val!0)\r\n  (define-fun var1866!1 () Int\r\n    0)\r\n  (define-fun size/1389889126 ((x!0 var686)) Int\r\n    (- 1))\r\n  (define-fun <init>/-25822930 ((x!0 var115) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 34 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8830976,
            "run_time": 0.031145334243774414,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var686 is 2\r\n; rep: (as @var686_0 var686)\r\n; rep: (as @var686_1 var686)\r\n; cardinality of var115 is 1\r\n; rep: (as @var115_0 var115)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var686)) Int (- 1))\r\n(define-fun var115-init () var115 (as @var115_0 var115))\r\n(define-fun <init>/-25822930 ((BOUND_VARIABLE_492 var115) (BOUND_VARIABLE_493 Int)) void (as @void_0 void))\r\n(define-fun null-var686 () var686 (as @var686_0 var686))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var105 () var686 (as @var686_1 var686))\r\n(define-fun var379 () Int 0)\r\n(define-fun var1866 () Int 0)\r\n(define-fun var1046!1 () var115 (as @var115_0 var115))\r\n(define-fun var1866!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36683776,
            "run_time": 0.156355619430542,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var686:\n  ;;   var686!val!1 var686!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var686!val!1 () var686)\n  (declare-fun var686!val!0 () var686)\n  ;; cardinality constraint:\n  (forall ((x var686)) (or (= x var686!val!1) (= x var686!val!0)))\n  ;; -----------\n  (define-fun var105 () var686\n    var686!val!0)\n  (define-fun null-Int () Int\n    2)\n  (define-fun var1046 () var115\n    var115-init)\n  (define-fun null-var686 () var686\n    var686!val!1)\n  (define-fun var2981 () Int\n    (size/1389889126 var105))\n  (define-fun var1866 () Int\n    0)\n  (define-fun var379 () Int\n    0)\n  (define-fun var115-init () var115\n    var115!val!0)\n  (define-fun var1046!1 () var115\n    var115!val!0)\n  (define-fun var1866!1 () Int\n    0)\n  (define-fun size/1389889126 ((x!0 var686)) Int\n    (- 1))\n  (define-fun <init>/-25822930 ((x!0 var115) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 34 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140480512,
            "run_time": 1.801004409790039,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1866 () Int 9)\r\n  (define-fun var379 () Int 0)\r\n  (define-fun var105 () var686 var686!4)\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-var686 () var686 var686!2)\r\n  (define-fun size/1389889126 ((x!0 var686)) Int (ite (= x!0 var686!4) 8 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>"
        ],
        "api_count": {
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "i1 := @parameter1: int",
            "if i0 >= 0 goto $i2 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i2 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i1 <= $i2 goto (branch)",
            "$r3 = new java.lang.StringIndexOutOfBoundsException",
            "specialinvoke $r3.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i1)",
            "throw $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__wrapIfMissing__503329626\\6754.smt2",
        "z3": {
            "memory": 31555584,
            "run_time": 0.1558060646057129,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 76 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.03131580352783203,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36630528,
            "run_time": 0.09241247177124023,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 76 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 148594688,
            "run_time": 2.0005898475646973,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>",
            "<java.lang.String: boolean endsWith(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1,
            "<java.lang.String: boolean endsWith(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 3,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r0)",
            "if $z0 != 0 goto return r0",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z1 == 0 goto $z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "$z2 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(r1)",
            "if $z2 != 0 goto $z6 = 0",
            "$z6 = 1",
            "goto [?= z3 = $z6]",
            "z3 = $z6",
            "$z4 = virtualinvoke r0.<java.lang.String: boolean endsWith(java.lang.String)>(r1)",
            "if $z4 != 0 goto $z9 = 0",
            "$z9 = 1",
            "$z8 = 1",
            "goto [?= z5 = $z8]",
            "z5 = $z8",
            "if z3 != 0 goto $r2 = new java.lang.StringBuilder",
            "if $z9 != 0 goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i3 = $i1 + $i0",
            "$i2 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i4 = $i3 + $i2",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i4)",
            "if z3 == 0 goto virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "if z5 == 0 goto $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__toString__-20424322\\6391.smt2",
        "z3": {
            "memory": 31694848,
            "run_time": 0.0904996395111084,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3763:\r\n  ;;   var3763!val!1 var3763!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3763!val!1 () var3763)\r\n  (declare-fun var3763!val!0 () var3763)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3763)) (or (= x var3763!val!1) (= x var3763!val!0)))\r\n  ;; -----------\r\n  (define-fun var3959 () Int\r\n    (size/1389889126 var711))\r\n  (define-fun null-var3763 () var3763\r\n    var3763!val!1)\r\n  (define-fun var627 () String\r\n    String-init)\r\n  (define-fun var711 () var3763\r\n    var3763!val!0)\r\n  (define-fun var3030 () (Array Int Int)\r\n    (buffer/1389889126 var711))\r\n  (define-fun var3328 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var627!1 () String\r\n    \"\")\r\n  (define-fun var3030!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var3959!1 () Int\r\n    0)\r\n  (define-fun buffer/1389889126 ((x!0 var3763)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n  (define-fun size/1389889126 ((x!0 var3763)) Int\r\n    0)\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1589248,
            "run_time": 0.030317068099975586,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3763 is 2\r\n; rep: (as @var3763_0 var3763)\r\n; rep: (as @var3763_1 var3763)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun buffer/1389889126 ((BOUND_VARIABLE_429 var3763)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun size/1389889126 ((BOUND_VARIABLE_434 var3763)) Int 0)\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_437 String) (BOUND_VARIABLE_438 (Array Int Int)) (BOUND_VARIABLE_439 Int) (BOUND_VARIABLE_440 Int)) void (as @void_0 void))\r\n(define-fun null-var3763 () var3763 (as @var3763_0 var3763))\r\n(define-fun var711 () var3763 (as @var3763_1 var3763))\r\n(define-fun var627!1 () String \"\")\r\n(define-fun var3030!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3328 () Int 0)\r\n(define-fun var3959!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36458496,
            "run_time": 0.10742664337158203,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3763:\n  ;;   var3763!val!1 var3763!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3763!val!1 () var3763)\n  (declare-fun var3763!val!0 () var3763)\n  ;; cardinality constraint:\n  (forall ((x var3763)) (or (= x var3763!val!1) (= x var3763!val!0)))\n  ;; -----------\n  (define-fun var627 () String\n    String-init)\n  (define-fun var3959 () Int\n    (size/1389889126 var711))\n  (define-fun null-var3763 () var3763\n    var3763!val!1)\n  (define-fun var3030 () (Array Int Int)\n    (buffer/1389889126 var711))\n  (define-fun var711 () var3763\n    var3763!val!0)\n  (define-fun var3328 () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var627!1 () String\n    \"\")\n  (define-fun var3030!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var3959!1 () Int\n    0)\n  (define-fun buffer/1389889126 ((x!0 var3763)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n  (define-fun size/1389889126 ((x!0 var3763)) Int\n    0)\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 149348352,
            "run_time": 2.016098737716675,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var711 () var3763 var3763!4)\r\n  (define-fun null-var3763 () var3763 var3763!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: void <init>(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrBuilder",
            "$r0 = new java.lang.String",
            "$r2 = r1.<org.apache.commons.lang3.text.StrBuilder: char[] buffer>",
            "$i0 = r1.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r2, 0, $i0)",
            "return $r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__validateRange__-28387379\\6434.smt2",
        "z3": {
            "memory": 31707136,
            "run_time": 0.10690689086914062,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1923:\r\n  ;;   var1923!val!1 var1923!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1923!val!1 () var1923)\r\n  (declare-fun var1923!val!0 () var1923)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1923)) (or (= x var1923!val!1) (= x var1923!val!0)))\r\n  ;; -----------\r\n  (define-fun var2151 () Int\r\n    0)\r\n  (define-fun var3100!1 () Int\r\n    (size/1389889126 var1993))\r\n  (define-fun var2214 () Int\r\n    (size/1389889126 var1993))\r\n  (define-fun var3100 () Int\r\n    0)\r\n  (define-fun var1993 () var1923\r\n    var1923!val!0)\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var1729 () var2736\r\n    var2736-init)\r\n  (define-fun null-var1923 () var1923\r\n    var1923!val!1)\r\n  (define-fun var2619 () String\r\n    \"\")\r\n  (define-fun var1729!1 () var2736\r\n    var2736!val!0)\r\n  (define-fun var2736-init () var2736\r\n    var2736!val!0)\r\n  (define-fun size/1389889126 ((x!0 var1923)) Int\r\n    (- 1))\r\n  (define-fun <init>/275026640 ((x!0 var2736) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2187264,
            "run_time": 0.0774388313293457,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1923 is 2\r\n; rep: (as @var1923_0 var1923)\r\n; rep: (as @var1923_1 var1923)\r\n; cardinality of var2736 is 1\r\n; rep: (as @var2736_0 var2736)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var1923)) Int (- 1))\r\n(define-fun var2736-init () var2736 (as @var2736_0 var2736))\r\n(define-fun <init>/275026640 ((BOUND_VARIABLE_508 var2736) (BOUND_VARIABLE_509 String)) void (as @void_0 void))\r\n(define-fun null-var1923 () var1923 (as @var1923_0 var1923))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1993 () var1923 (as @var1923_1 var1923))\r\n(define-fun var2151 () Int 0)\r\n(define-fun var3100 () Int 0)\r\n(define-fun var1729!1 () var2736 (as @var2736_0 var2736))\r\n(define-fun var2619 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36954112,
            "run_time": 0.09202075004577637,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1923:\n  ;;   var1923!val!1 var1923!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1923!val!1 () var1923)\n  (declare-fun var1923!val!0 () var1923)\n  ;; cardinality constraint:\n  (forall ((x var1923)) (or (= x var1923!val!1) (= x var1923!val!0)))\n  ;; -----------\n  (define-fun var2151 () Int\n    0)\n  (define-fun var1729 () var2736\n    var2736-init)\n  (define-fun var3100 () Int\n    0)\n  (define-fun var3100!1 () Int\n    (size/1389889126 var1993))\n  (define-fun var1993 () var1923\n    var1923!val!0)\n  (define-fun null-Int () Int\n    2)\n  (define-fun var2214 () Int\n    (size/1389889126 var1993))\n  (define-fun null-var1923 () var1923\n    var1923!val!1)\n  (define-fun var2619 () String\n    \"\")\n  (define-fun var1729!1 () var2736\n    var2736!val!0)\n  (define-fun var2736-init () var2736\n    var2736!val!0)\n  (define-fun size/1389889126 ((x!0 var1923)) Int\n    (- 1))\n  (define-fun <init>/275026640 ((x!0 var2736) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 159789056,
            "run_time": 1.985182523727417,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3100 () Int 9)\r\n  (define-fun var2151 () Int 9)\r\n  (define-fun var1993 () var1923 var1923!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var1923 () var1923 var1923!2)\r\n  (define-fun size/1389889126 ((x!0 var1923)) Int (ite (= x!0 var1923!4) 8 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "i2 := @parameter1: int",
            "if i0 >= 0 goto $i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i2 <= $i1 goto (branch)",
            "i2 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i0 <= i2 goto return i2",
            "$r1 = new java.lang.StringIndexOutOfBoundsException",
            "specialinvoke $r1.<java.lang.StringIndexOutOfBoundsException: void <init>(java.lang.String)>(\"end < start\")",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$PatternStrategy__parse__-74140174\\3918-deviant-0.smt2",
        "z3": {
            "memory": 31768576,
            "run_time": 0.13582992553710938,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3834:\r\n  ;;   var3834!val!1 var3834!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3834!val!1 () var3834)\r\n  (declare-fun var3834!val!0 () var3834)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3834)) (or (= x var3834!val!1) (= x var3834!val!0)))\r\n  ;; -----------\r\n  ;; universe for var285:\r\n  ;;   var285!val!0 var285!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var285!val!0 () var285)\r\n  (declare-fun var285!val!1 () var285)\r\n  ;; cardinality constraint:\r\n  (forall ((x var285)) (or (= x var285!val!0) (= x var285!val!1)))\r\n  ;; -----------\r\n  ;; universe for var207:\r\n  ;;   var207!val!0 var207!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var207!val!0 () var207)\r\n  (declare-fun var207!val!1 () var207)\r\n  ;; cardinality constraint:\r\n  (forall ((x var207)) (or (= x var207!val!0) (= x var207!val!1)))\r\n  ;; -----------\r\n  ;; universe for var803:\r\n  ;;   var803!val!0 var803!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var803!val!0 () var803)\r\n  (declare-fun var803!val!1 () var803)\r\n  ;; cardinality constraint:\r\n  (forall ((x var803)) (or (= x var803!val!0) (= x var803!val!1)))\r\n  ;; -----------\r\n  (define-fun var1484 () var3834\r\n    var3834!val!0)\r\n  (define-fun var2209 () var285\r\n    var285!val!0)\r\n  (define-fun null-var207 () var207\r\n    var207!val!1)\r\n  (define-fun null-var3834 () var3834\r\n    var3834!val!1)\r\n  (define-fun var439 () var2491\r\n    (pattern/443652580 var2505))\r\n  (define-fun var2505 () var207\r\n    var207!val!0)\r\n  (define-fun var2974 () Int\r\n    (getIndex/-2136393185 var968))\r\n  (define-fun null-var285 () var285\r\n    var285!val!1)\r\n  (define-fun var1967 () Int\r\n    1)\r\n  (define-fun var3299 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var968 () var803\r\n    var803!val!0)\r\n  (define-fun null-var803 () var803\r\n    var803!val!1)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun getIndex/-2136393185 ((x!0 var803)) Int\r\n    1)\r\n  (define-fun matcher/468719934 ((x!0 var2491) (x!1 String)) var1922\r\n    var1922!val!0)\r\n  (define-fun group/-653887691 ((x!0 var1922) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun pattern/443652580 ((x!0 var207)) var2491\r\n    var2491!val!0)\r\n  (define-fun lookingAt/-1645860844 ((x!0 var1922)) Bool\r\n    false)\r\n  (define-fun setCalendar/1778664015 ((x!0 var207)\r\n   (x!1 var285)\r\n   (x!2 var3834)\r\n   (x!3 String)) void\r\n    void!val!0)\r\n  (define-fun end/-952472175 ((x!0 var1922) (x!1 Int)) Int\r\n    0)\r\n  (define-fun setIndex/-453939609 ((x!0 var803) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 48 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11169792,
            "run_time": 0.04657244682312012,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var207 is 2\r\n; rep: (as @var207_0 var207)\r\n; rep: (as @var207_1 var207)\r\n; cardinality of var285 is 2\r\n; rep: (as @var285_0 var285)\r\n; rep: (as @var285_1 var285)\r\n; cardinality of var3834 is 2\r\n; rep: (as @var3834_0 var3834)\r\n; rep: (as @var3834_1 var3834)\r\n; cardinality of var2420 is 1\r\n; rep: (as @var2420_0 var2420)\r\n; cardinality of var803 is 2\r\n; rep: (as @var803_0 var803)\r\n; rep: (as @var803_1 var803)\r\n; cardinality of var2491 is 1\r\n; rep: (as @var2491_0 var2491)\r\n; cardinality of var1922 is 1\r\n; rep: (as @var1922_0 var1922)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun pattern/443652580 ((BOUND_VARIABLE_630 var207)) var2491 (as @var2491_0 var2491))\r\n(define-fun getIndex/-2136393185 ((_arg_1 var803)) Int (- 1))\r\n(define-fun matcher/468719934 ((BOUND_VARIABLE_633 var2491) (BOUND_VARIABLE_634 String)) var1922 (as @var1922_0 var1922))\r\n(define-fun lookingAt/-1645860844 ((BOUND_VARIABLE_637 var1922)) Bool false)\r\n(define-fun end/-952472175 ((BOUND_VARIABLE_640 var1922) (BOUND_VARIABLE_641 Int)) Int 0)\r\n(define-fun setIndex/-453939609 ((BOUND_VARIABLE_644 var803) (BOUND_VARIABLE_645 Int)) void (as @void_0 void))\r\n(define-fun group/-653887691 ((BOUND_VARIABLE_648 var1922) (BOUND_VARIABLE_649 Int)) String \"\")\r\n(define-fun setCalendar/1778664015 ((BOUND_VARIABLE_652 var207) (BOUND_VARIABLE_653 var285) (BOUND_VARIABLE_654 var3834) (BOUND_VARIABLE_655 String)) void (as @void_0 void))\r\n(define-fun null-var207 () var207 (as @var207_0 var207))\r\n(define-fun null-var285 () var285 (as @var285_0 var285))\r\n(define-fun null-var3834 () var3834 (as @var3834_0 var3834))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var803 () var803 (as @var803_0 var803))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2505 () var207 (as @var207_1 var207))\r\n(define-fun var2209 () var285 (as @var285_1 var285))\r\n(define-fun var1484 () var3834 (as @var3834_1 var3834))\r\n(define-fun var3299 () String \"\")\r\n(define-fun var968 () var803 (as @var803_1 var803))\r\n(define-fun var1967 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37519360,
            "run_time": 0.10749602317810059,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3834:\n  ;;   var3834!val!1 var3834!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3834!val!1 () var3834)\n  (declare-fun var3834!val!0 () var3834)\n  ;; cardinality constraint:\n  (forall ((x var3834)) (or (= x var3834!val!1) (= x var3834!val!0)))\n  ;; -----------\n  ;; universe for var285:\n  ;;   var285!val!0 var285!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var285!val!0 () var285)\n  (declare-fun var285!val!1 () var285)\n  ;; cardinality constraint:\n  (forall ((x var285)) (or (= x var285!val!0) (= x var285!val!1)))\n  ;; -----------\n  ;; universe for var207:\n  ;;   var207!val!0 var207!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var207!val!0 () var207)\n  (declare-fun var207!val!1 () var207)\n  ;; cardinality constraint:\n  (forall ((x var207)) (or (= x var207!val!0) (= x var207!val!1)))\n  ;; -----------\n  ;; universe for var803:\n  ;;   var803!val!0 var803!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var803!val!0 () var803)\n  (declare-fun var803!val!1 () var803)\n  ;; cardinality constraint:\n  (forall ((x var803)) (or (= x var803!val!0) (= x var803!val!1)))\n  ;; -----------\n  (define-fun null-Int () Int\n    0)\n  (define-fun null-var803 () var803\n    var803!val!1)\n  (define-fun var968 () var803\n    var803!val!0)\n  (define-fun var3299 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2974 () Int\n    (getIndex/-2136393185 var968))\n  (define-fun var1967 () Int\n    1)\n  (define-fun null-var285 () var285\n    var285!val!1)\n  (define-fun null-var3834 () var3834\n    var3834!val!1)\n  (define-fun var1484 () var3834\n    var3834!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-var207 () var207\n    var207!val!1)\n  (define-fun var2209 () var285\n    var285!val!0)\n  (define-fun var2505 () var207\n    var207!val!0)\n  (define-fun var439 () var2491\n    (pattern/443652580 var2505))\n  (define-fun getIndex/-2136393185 ((x!0 var803)) Int\n    (- 1))\n  (define-fun matcher/468719934 ((x!0 var2491) (x!1 String)) var1922\n    var1922!val!0)\n  (define-fun group/-653887691 ((x!0 var1922) (x!1 Int)) String\n    \"\")\n  (define-fun pattern/443652580 ((x!0 var207)) var2491\n    var2491!val!0)\n  (define-fun lookingAt/-1645860844 ((x!0 var1922)) Bool\n    false)\n  (define-fun setCalendar/1778664015 ((x!0 var207)\n   (x!1 var285)\n   (x!2 var3834)\n   (x!3 String)) void\n    void!val!0)\n  (define-fun end/-952472175 ((x!0 var1922) (x!1 Int)) Int\n    0)\n  (define-fun setIndex/-453939609 ((x!0 var803) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 48 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181092352,
            "run_time": 2.154601573944092,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1967 () Int 1)\r\n  (define-fun var968 () var803 var803!16)\r\n  (define-fun var3299 () String \"\")\r\n  (define-fun var1484 () var3834 var3834!14)\r\n  (define-fun var2209 () var285 var285!12)\r\n  (define-fun var2505 () var207 var207!10)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var803 () var803 var803!8)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var3834 () var3834 var3834!6)\r\n  (define-fun null-var285 () var285 var285!4)\r\n  (define-fun null-var207 () var207 var207!2)\r\n  (define-fun getIndex/-2136393185 ((x!0 var803)) Int (ite (= x!0 var803!16) (- 1) 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser$PatternStrategy",
            "r6 := @parameter0: org.apache.commons.lang3.time.FastDateParser",
            "r7 := @parameter1: java.util.Calendar",
            "r1 := @parameter2: java.lang.String",
            "r2 := @parameter3: java.text.ParsePosition",
            "i5 := @parameter4: int",
            "$r3 = r0.<org.apache.commons.lang3.time.FastDateParser$PatternStrategy: java.util.regex.Pattern pattern>",
            "$i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()",
            "$r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0)",
            "r5 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4)",
            "$z0 = virtualinvoke r5.<java.util.regex.Matcher: boolean lookingAt()>()",
            "if $z0 != 0 goto $i2 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()",
            "$i2 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()",
            "$i1 = virtualinvoke r5.<java.util.regex.Matcher: int end(int)>(1)",
            "$i3 = $i2 + $i1",
            "virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i3)",
            "$r8 = virtualinvoke r5.<java.util.regex.Matcher: java.lang.String group(int)>(1)",
            "virtualinvoke r0.<org.apache.commons.lang3.time.FastDateParser$PatternStrategy: void setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)>(r6, r7, $r8)",
            "return 1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$NumberStrategy__parse__683403985\\3877-deviant-0.smt2",
        "z3": {
            "memory": 31621120,
            "run_time": 0.16172528266906738,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 57 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1650688,
            "run_time": 0.02261066436767578,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35504128,
            "run_time": 0.09305405616760254,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 57 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 143192064,
            "run_time": 1.9894840717315674,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r4 := @this: org.apache.commons.lang3.time.FastDateParser$NumberStrategy",
            "r5 := @parameter0: org.apache.commons.lang3.time.FastDateParser",
            "r3 := @parameter1: java.util.Calendar",
            "r1 := @parameter2: java.lang.String",
            "r0 := @parameter3: java.text.ParsePosition",
            "i0 := @parameter4: int",
            "i5 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "i6 = virtualinvoke r1.<java.lang.String: int length()>()",
            "if i0 != 0 goto i8 = i5 + i0",
            "i8 = i5 + i0",
            "if i6 <= i8 goto (branch)",
            "if i5 >= i6 goto $i1 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "$i1 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "if $i1 != i5 goto $i2 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "$i2 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "$r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i2, i5)",
            "i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2)",
            "virtualinvoke r0.<java.text.ParsePosition: void setIndex(int)>(i5)",
            "$i3 = r4.<org.apache.commons.lang3.time.FastDateParser$NumberStrategy: int field>",
            "$i4 = virtualinvoke r4.<org.apache.commons.lang3.time.FastDateParser$NumberStrategy: int modify(org.apache.commons.lang3.time.FastDateParser,int)>(r5, i10)",
            "virtualinvoke r3.<java.util.Calendar: void set(int,int)>($i3, $i4)",
            "return 1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrTokenizer__toString__-1067599302\\4744.smt2",
        "z3": {
            "memory": 31690752,
            "run_time": 0.1970665454864502,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2229:\r\n  ;;   var2229!val!1 var2229!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2229!val!1 () var2229)\r\n  (declare-fun var2229!val!0 () var2229)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2229)) (or (= x var2229!val!1) (= x var2229!val!0)))\r\n  ;; -----------\r\n  (define-fun var1926!1 () String\r\n    \"StrTokenizer\")\r\n  (define-fun null-__Array__Int__String__ () (Array Int String)\r\n    ((as const (Array Int String)) \"t\"))\r\n  (define-fun null-var2229 () var2229\r\n    var2229!val!1)\r\n  (define-fun var3527 () var3775\r\n    (getTokenList/1098449790 var1053))\r\n  (define-fun var1617 () String\r\n    (append/-1031950772\r\n  (str.++ var2818!1 \"StrTokenizer\")\r\n  (cast-from-var3775-to-var1253 (getTokenList/1098449790 var1053))))\r\n  (define-fun var1053 () var2229\r\n    var2229!val!0)\r\n  (define-fun var1926 () String\r\n    (str.++ var2818!1 \"StrTokenizer\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3605 () (Array Int String)\r\n    (tokens/1491220258 var1053))\r\n  (define-fun var1370 () String\r\n    (append/-1031950772\r\n  (str.++ var2818!1 \"StrTokenizer\")\r\n  (cast-from-var3775-to-var1253 (getTokenList/1098449790 var1053))))\r\n  (define-fun var2818 () String\r\n    String-init)\r\n  (define-fun var2818!2 () String\r\n    \"StrTokenizer\")\r\n  (define-fun var2818!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun tokens/1491220258 ((x!0 var2229)) (Array Int String)\r\n    ((as const (Array Int String)) \"S\"))\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1253)) String\r\n    \"\")\r\n  (define-fun getTokenList/1098449790 ((x!0 var2229)) var3775\r\n    var3775!val!0)\r\n  (define-fun cast-from-var3775-to-var1253 ((x!0 var3775)) var1253\r\n    var1253!val!0)\r\n)\r\n(error \"line 45 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10575872,
            "run_time": 0.12467622756958008,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2229 is 2\r\n; rep: (as @var2229_0 var2229)\r\n; rep: (as @var2229_1 var2229)\r\n; cardinality of var3775 is 1\r\n; rep: (as @var3775_0 var3775)\r\n; cardinality of var1253 is 1\r\n; rep: (as @var1253_0 var1253)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun tokens/1491220258 ((_arg_1 var2229)) (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun String-init () String \"\")\r\n(define-fun getTokenList/1098449790 ((BOUND_VARIABLE_998 var2229)) var3775 (as @var3775_0 var3775))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1001 String) (BOUND_VARIABLE_1002 var1253)) String \"\")\r\n(define-fun cast-from-var3775-to-var1253 ((BOUND_VARIABLE_1005 var3775)) var1253 (as @var1253_0 var1253))\r\n(define-fun null-var2229 () var2229 (as @var2229_0 var2229))\r\n(define-fun null-__Array__Int__String__ () (Array Int String) (store ((as const (Array Int String)) \"A\") 0 \"StrTokenizer\"))\r\n(define-fun var1053 () var2229 (as @var2229_1 var2229))\r\n(define-fun var2818!1 () String \"\")\r\n(define-fun var2818!2 () String \"StrTokenizer\")\r\n(define-fun var1926!1 () String \"StrTokenizer\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36630528,
            "run_time": 0.14028692245483398,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 44 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 45 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 187207680,
            "run_time": 2.4602560997009277,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1926!1 () String \"StrTokenizer\")\r\n  (define-fun var2818!2 () String \"StrTokenizer\")\r\n  (define-fun var2818!1 () String \"\")\r\n  (define-fun var1053 () var2229 var2229!4)\r\n  (define-fun null-__Array__Int__String__ () (Array Int String) ((as const (Array Int String)) \"\"))\r\n  (define-fun null-var2229 () var2229 var2229!2)\r\n  (define-fun tokens/1491220258 ((x!0 var2229)) (Array Int String) (ite (= x!0 var2229!4) (store ((as const (Array Int String)) \"\") 0 \"\\u{0}\") ((as const (Array Int String)) \"\")))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrTokenizer",
            "$r1 = r0.<org.apache.commons.lang3.text.StrTokenizer: java.lang.String[] tokens>",
            "if $r1 != null goto $r2 = new java.lang.StringBuilder",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"StrTokenizer\")",
            "$r3 = virtualinvoke r0.<org.apache.commons.lang3.text.StrTokenizer: java.util.List getTokenList()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.DateUtils__iterator__-1820685073\\4198.smt2",
        "z3": {
            "memory": 31936512,
            "run_time": 0.14611244201660156,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2136:\r\n  ;;   var2136!val!0 var2136!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2136!val!0 () var2136)\r\n  (declare-fun var2136!val!1 () var2136)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2136)) (or (= x var2136!val!0) (= x var2136!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2136 () var2136\r\n    var2136!val!1)\r\n  (define-fun var1356 () Int\r\n    7)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var165 () String\r\n    String-init)\r\n  (define-fun var2675 () String\r\n    (str.++ var165!1 \"The range style \" (str.from_int var1356) \" is not valid.\"))\r\n  (define-fun var2823 () var2136\r\n    var2136!val!0)\r\n  (define-fun var1019 () var3644\r\n    var3644-init)\r\n  (define-fun var2081!1 () String\r\n    \"The range style \")\r\n  (define-fun var2081 () String\r\n    (str.++ var165!1 \"The range style \"))\r\n  (define-fun var661 () String\r\n    (str.++ var165!1 \"The range style \" (str.from_int var1356)))\r\n  (define-fun null-Int () Int\r\n    8)\r\n  (define-fun var427 () String\r\n    (str.++ var165!1 \"The range style \" (str.from_int var1356) \" is not valid.\"))\r\n  (define-fun var547 () Int\r\n    7)\r\n  (define-fun var3075 () Int\r\n    1)\r\n  (define-fun var165!1 () String\r\n    \"\")\r\n  (define-fun var661!1 () String\r\n    \"The range style 7 is not valid.\")\r\n  (define-fun var165!2 () String\r\n    \"The range style \")\r\n  (define-fun var1019!1 () var3644\r\n    var3644!val!0)\r\n  (define-fun var3190 () String\r\n    \"\")\r\n  (define-fun var3644-init () var3644\r\n    var3644!val!0)\r\n  (define-fun var2823!1 () var2136\r\n    var2136!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var427!1 () String\r\n    \"\")\r\n  (define-fun cast-from-var2136-to-var2855 ((x!0 var2136)) var2855\r\n    var2855!val!0)\r\n  (define-fun var2354_requireNonNull/1378936425 ((x!0 var2855) (x!1 String)) var2855\r\n    var2855!val!0)\r\n  (define-fun <init>/875830710 ((x!0 var3644) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 62 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12226560,
            "run_time": 0.06178927421569824,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2136 is 2\r\n; rep: (as @var2136_0 var2136)\r\n; rep: (as @var2136_1 var2136)\r\n; cardinality of var2354 is 1\r\n; rep: (as @var2354_0 var2354)\r\n; cardinality of var2855 is 1\r\n; rep: (as @var2855_0 var2855)\r\n; cardinality of var3644 is 1\r\n; rep: (as @var3644_0 var3644)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2354_requireNonNull/1378936425 ((BOUND_VARIABLE_1044 var2855) (BOUND_VARIABLE_1045 String)) var2855 (as @var2855_0 var2855))\r\n(define-fun cast-from-var2136-to-var2855 ((BOUND_VARIABLE_1048 var2136)) var2855 (as @var2855_0 var2855))\r\n(define-fun var3644-init () var3644 (as @var3644_0 var3644))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_1051 var3644) (BOUND_VARIABLE_1052 String)) void (as @void_0 void))\r\n(define-fun null-var2136 () var2136 (as @var2136_0 var2136))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2823 () var2136 (as @var2136_1 var2136))\r\n(define-fun var1356 () Int 0)\r\n(define-fun var2823!1 () var2136 (as @var2136_0 var2136))\r\n(define-fun var3190 () String \"\")\r\n(define-fun var165!1 () String \"\")\r\n(define-fun var165!2 () String \"The range style \")\r\n(define-fun var2081!1 () String \"The range style \")\r\n(define-fun var661!1 () String \"The range style 0 is not valid.\")\r\n(define-fun var1019!1 () var3644 (as @var3644_0 var3644))\r\n(define-fun var427!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37044224,
            "run_time": 0.1875009536743164,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2136:\n  ;;   var2136!val!0 var2136!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2136!val!0 () var2136)\n  (declare-fun var2136!val!1 () var2136)\n  ;; cardinality constraint:\n  (forall ((x var2136)) (or (= x var2136!val!0) (= x var2136!val!1)))\n  ;; -----------\n  (define-fun null-var2136 () var2136\n    var2136!val!1)\n  (define-fun var1356 () Int\n    7)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1019 () var3644\n    var3644-init)\n  (define-fun var165 () String\n    String-init)\n  (define-fun var2675 () String\n    (str.++ var165!1 \"The range style \" (str.from_int var1356) \" is not valid.\"))\n  (define-fun var2823 () var2136\n    var2136!val!0)\n  (define-fun var547 () Int\n    7)\n  (define-fun var2081 () String\n    (str.++ var165!1 \"The range style \"))\n  (define-fun var3075 () Int\n    1)\n  (define-fun var661 () String\n    (str.++ var165!1 \"The range style \" (str.from_int var1356)))\n  (define-fun var427 () String\n    (str.++ var165!1 \"The range style \" (str.from_int var1356) \" is not valid.\"))\n  (define-fun null-Int () Int\n    8)\n  (define-fun var165!2 () String\n    \"The range style \")\n  (define-fun var2081!1 () String\n    \"The range style \")\n  (define-fun var165!1 () String\n    \"\")\n  (define-fun var661!1 () String\n    \"The range style 7 is not valid.\")\n  (define-fun var1019!1 () var3644\n    var3644!val!0)\n  (define-fun var3190 () String\n    \"\")\n  (define-fun var3644-init () var3644\n    var3644!val!0)\n  (define-fun var2823!1 () var2136\n    var2136!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var427!1 () String\n    \"\")\n  (define-fun cast-from-var2136-to-var2855 ((x!0 var2136)) var2855\n    var2855!val!0)\n  (define-fun var2354_requireNonNull/1378936425 ((x!0 var2855) (x!1 String)) var2855\n    var2855!val!0)\n  (define-fun <init>/875830710 ((x!0 var3644) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 62 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 170844160,
            "run_time": 2.4596920013427734,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var661!1 () String \"The range style  is not valid.\")\r\n  (define-fun var2081!1 () String \"The range style \")\r\n  (define-fun var165!2 () String \"The range style \")\r\n  (define-fun var165!1 () String \"\")\r\n  (define-fun var1356 () Int (- 6))\r\n  (define-fun var2823 () var2136 var2136!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var2136 () var2136 var2136!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.util.Calendar",
            "i0 := @parameter1: int",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"calendar\")",
            "i4 = 1",
            "i5 = 7",
            "tableswitch(i0) {     case 1: goto r9 = staticinvoke <org.apache.commons.lang3.time.DateUtils: java.util.Calendar truncate(java.util.Calendar,int)>(r0, 5);     case 2: goto r9 = staticinvoke <org.apache.commons.lang3.time.DateUtils: java.util.Calendar truncate(java.util.Calendar,int)>(r0, 5);     case 3: goto r9 = staticinvoke <org.apache.commons.lang3.time.DateUtils: java.util.Calendar truncate(java.util.Calendar,int)>(r0, 5);     case 4: goto r9 = staticinvoke <org.apache.commons.lang3.time.DateUtils: java.util.Calendar truncate(java.util.Calendar,int)>(r0, 5);     case 5: goto r9 = staticinvoke <org.apache.commons.lang3.time.DateUtils: java.util.Calendar truncate(java.util.Calendar,int)>(r0, 2);     case 6: goto r9 = staticinvoke <org.apache.commons.lang3.time.DateUtils: java.util.Calendar truncate(java.util.Calendar,int)>(r0, 2);     default: goto $r12 = new java.lang.IllegalArgumentException; }",
            "$r12 = new java.lang.IllegalArgumentException",
            "$r11 = new java.lang.StringBuilder",
            "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The range style \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is not valid.\")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8)",
            "throw $r12"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.TypeUtils__parameterizedTypeToString__246123298\\3883.smt2",
        "z3": {
            "memory": 31059968,
            "run_time": 0.13545441627502441,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2903:\r\n  ;;   var2903!val!1 var2903!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2903!val!1 () var2903)\r\n  (declare-fun var2903!val!0 () var2903)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2903)) (or (= x var2903!val!1) (= x var2903!val!0)))\r\n  ;; -----------\r\n  (define-fun var2401 () Int\r\n    (getLength-Arr-Int-1 (var3696_findRecursiveTypes/-200394003 var1029)))\r\n  (define-fun var1029 () var2903\r\n    var2903!val!0)\r\n  (define-fun null-var2903 () var2903\r\n    var2903!val!1)\r\n  (define-fun var1766 () (Array Int Int)\r\n    (var3696_findRecursiveTypes/-200394003 var1029))\r\n  (define-fun var1048 () ClassObject\r\n    (var2903_getOwnerType/-523154979 var1029))\r\n  (define-fun var1846 () (Array Int ClassObject)\r\n    (var2903_getActualTypeArguments/-973063842 var1029))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var919 () String\r\n    String-init)\r\n  (define-fun var958 () ClassObject\r\n    (var2903_getRawType/305663496 var1029))\r\n  (define-fun var3546 () String\r\n    (getName/-1958580599 (var2903_getRawType/305663496 var1029)))\r\n  (define-fun var3194 () String\r\n    var919!3)\r\n  (define-fun var11 () ClassObject\r\n    (var2903_getRawType/305663496 var1029))\r\n  (define-fun var919!2 () String\r\n    \"\")\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var919!1 () String\r\n    \"\")\r\n  (define-fun var1766!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var919!3 () String\r\n    \"\")\r\n  (define-fun var1846!1 () (Array Int ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3696_findRecursiveTypes/-200394003 ((x!0 var2903)) (Array Int\r\n         Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\r\n    1)\r\n  (define-fun var2903_getRawType/305663496 ((x!0 var2903)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun var2903_getOwnerType/-523154979 ((x!0 var2903)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var2903_getActualTypeArguments/-973063842 ((x!0 var2903)) (Array Int\r\n         ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\r\n  (define-fun var3696_appendRecursiveTypes/-1300774235 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 (Array Int ClassObject))) void\r\n    void!val!0)\r\n)\r\n(error \"line 60 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.07680654525756836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2903 is 2\r\n; rep: (as @var2903_0 var2903)\r\n; rep: (as @var2903_1 var2903)\r\n; cardinality of var3696 is 1\r\n; rep: (as @var3696_0 var3696)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2903_getOwnerType/-523154979 ((BOUND_VARIABLE_565 var2903)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var2903_getRawType/305663496 ((BOUND_VARIABLE_568 var2903)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_571 ClassObject)) String \"\")\r\n(define-fun var3696_findRecursiveTypes/-200394003 ((_arg_1 var2903)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 1)\r\n(define-fun var2903_getActualTypeArguments/-973063842 ((BOUND_VARIABLE_574 var2903)) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun var3696_appendRecursiveTypes/-1300774235 ((BOUND_VARIABLE_579 String) (BOUND_VARIABLE_580 (Array Int Int)) (BOUND_VARIABLE_581 (Array Int ClassObject))) void (as @void_0 void))\r\n(define-fun null-var2903 () var2903 (as @var2903_0 var2903))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var1029 () var2903 (as @var2903_1 var2903))\r\n(define-fun var919!1 () String \"\")\r\n(define-fun var919!2 () String \"\")\r\n(define-fun var919!3 () String \"\")\r\n(define-fun var1766!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1846!1 () (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36192256,
            "run_time": 0.11607909202575684,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2903:\n  ;;   var2903!val!1 var2903!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2903!val!1 () var2903)\n  (declare-fun var2903!val!0 () var2903)\n  ;; cardinality constraint:\n  (forall ((x var2903)) (or (= x var2903!val!1) (= x var2903!val!0)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\n  ;; -----------\n  (define-fun var1029 () var2903\n    var2903!val!0)\n  (define-fun null-var2903 () var2903\n    var2903!val!1)\n  (define-fun var11 () ClassObject\n    (var2903_getRawType/305663496 var1029))\n  (define-fun var1048 () ClassObject\n    (var2903_getOwnerType/-523154979 var1029))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var919 () String\n    String-init)\n  (define-fun var3546 () String\n    (getName/-1958580599 (var2903_getRawType/305663496 var1029)))\n  (define-fun var2401 () Int\n    (getLength-Arr-Int-1 (var3696_findRecursiveTypes/-200394003 var1029)))\n  (define-fun var1846 () (Array Int ClassObject)\n    (var2903_getActualTypeArguments/-973063842 var1029))\n  (define-fun var1766 () (Array Int Int)\n    (var3696_findRecursiveTypes/-200394003 var1029))\n  (define-fun var3194 () String\n    var919!3)\n  (define-fun var958 () ClassObject\n    (var2903_getRawType/305663496 var1029))\n  (define-fun var919!2 () String\n    \"\")\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!0)\n  (define-fun var919!1 () String\n    \"\")\n  (define-fun var1766!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var919!3 () String\n    \"\")\n  (define-fun var1846!1 () (Array Int ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3696_findRecursiveTypes/-200394003 ((x!0 var2903)) (Array Int\n         Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\n    1)\n  (define-fun var2903_getRawType/305663496 ((x!0 var2903)) ClassObject\n    ClassObject!val!0)\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n  (define-fun var2903_getOwnerType/-523154979 ((x!0 var2903)) ClassObject\n    ClassObject!val!0)\n  (define-fun var2903_getActualTypeArguments/-973063842 ((x!0 var2903)) (Array Int\n         ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\n  (define-fun var3696_appendRecursiveTypes/-1300774235 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 (Array Int ClassObject))) void\n    void!val!0)\n)\n(error \"line 60 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 162410496,
            "run_time": 2.486844778060913,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var919!2 () String \"\")\r\n  (define-fun var919!1 () String \"\")\r\n  (define-fun var1029 () var2903 var2903!8)\r\n  (define-fun null-ClassObject () ClassObject ClassObject!6)\r\n  (define-fun null-var2903 () var2903 var2903!4)\r\n  (define-fun ClassObject!22 () ClassObject (var2903_getRawType/305663496 var2903!8))\r\n  (define-fun ClassObject!6 () ClassObject (var2903_getOwnerType/-523154979 var2903!8))\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int (ite (= x!0 ((as const (Array Int Int)) 0)) 1 0))\r\n  (define-fun var3696_findRecursiveTypes/-200394003 ((x!0 var2903)) (Array Int Int) (ite (= x!0 var2903!8) ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String (ite (= x!0 ClassObject!22) \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.reflect.ParameterizedType",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "r2 = interfaceinvoke r1.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>()",
            "$r3 = interfaceinvoke r1.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>()",
            "r4 = (java.lang.Class) $r3",
            "if r2 != null goto $z0 = r2 instanceof java.lang.Class",
            "$r15 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>()",
            "virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)",
            "goto [?= $r16 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: int[] findRecursiveTypes(java.lang.reflect.ParameterizedType)>(r1)]",
            "$r16 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: int[] findRecursiveTypes(java.lang.reflect.ParameterizedType)>(r1)",
            "$i0 = lengthof $r16",
            "if $i0 <= 0 goto $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60)",
            "$r12 = interfaceinvoke r1.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()",
            "staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: void appendRecursiveTypes(java.lang.StringBuilder,int[],java.lang.reflect.Type[])>($r0, $r16, $r12)",
            "goto [?= $r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()]",
            "$r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$StrategyParser__literal__2045574504\\3973.smt2",
        "z3": {
            "memory": 31768576,
            "run_time": 0.11603021621704102,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1332:\r\n  ;;   var1332!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1332!val!0 () var1332)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1332)) (= x var1332!val!0))\r\n  ;; -----------\r\n  ;; universe for var1388:\r\n  ;;   var1388!val!0 var1388!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1388!val!0 () var1388)\r\n  (declare-fun var1388!val!1 () var1388)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1388)) (or (= x var1388!val!0) (= x var1388!val!1)))\r\n  ;; -----------\r\n  (define-fun var541 () String\r\n    (var1332_access$300/-739635973 (this$0/-1576495471 var1079)))\r\n  (define-fun var2622 () String\r\n    String-init)\r\n  (define-fun var3537 () Int\r\n    (currentIdx/-1576495471 var1079))\r\n  (define-fun var2122 () String\r\n    var2622!1)\r\n  (define-fun var3707 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var1079 () var1388\r\n    var1388!val!0)\r\n  (define-fun var731 () var432\r\n    var432-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var1388 () var1388\r\n    var1388!val!1)\r\n  (define-fun var2689 () Int\r\n    (str.len var2122!1))\r\n  (define-fun var992 () Int\r\n    (str.len (var1332_access$300/-739635973 (this$0/-1576495471 var1079))))\r\n  (define-fun var185 () var1025\r\n    var1025-init)\r\n  (define-fun var830 () var1332\r\n    (this$0/-1576495471 var1079))\r\n  (define-fun var2622!1 () String\r\n    \"\")\r\n  (define-fun var2122!1 () String\r\n    \"\")\r\n  (define-fun var185!1 () var1025\r\n    var1025!val!0)\r\n  (define-fun var432-init () var432\r\n    var432!val!0)\r\n  (define-fun var2689!1 () Int\r\n    0)\r\n  (define-fun var731!2 () var432\r\n    var432!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1025-init () var1025\r\n    var1025!val!0)\r\n  (define-fun var731!1 () var432\r\n    var432!val!0)\r\n  (define-fun currentIdx/-1576495471 ((x!0 var1388)) Int\r\n    0)\r\n  (define-fun this$0/-1576495471 ((x!0 var1388)) var1332\r\n    var1332!val!0)\r\n  (define-fun var1332_access$300/-739635973 ((x!0 var1332)) String\r\n    \"\")\r\n  (define-fun <init>/150270877 ((x!0 var432) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun <init>/-762572363 ((x!0 var1025) (x!1 var2759) (x!2 Int)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var432-to-var2759 ((x!0 var432)) var2759\r\n    var2759!val!0)\r\n)\r\n(error \"line 63 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1650688,
            "run_time": 0.031278371810913086,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1388 is 2\r\n; rep: (as @var1388_0 var1388)\r\n; rep: (as @var1388_1 var1388)\r\n; cardinality of var1332 is 1\r\n; rep: (as @var1332_0 var1332)\r\n; cardinality of var1025 is 1\r\n; rep: (as @var1025_0 var1025)\r\n; cardinality of var432 is 1\r\n; rep: (as @var432_0 var432)\r\n; cardinality of var2759 is 1\r\n; rep: (as @var2759_0 var2759)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun currentIdx/-1576495471 ((_arg_1 var1388)) Int 0)\r\n(define-fun this$0/-1576495471 ((_arg_1 var1388)) var1332 (as @var1332_0 var1332))\r\n(define-fun var1332_access$300/-739635973 ((_arg_1 var1332)) String \"\")\r\n(define-fun var1025-init () var1025 (as @var1025_0 var1025))\r\n(define-fun var432-init () var432 (as @var432_0 var432))\r\n(define-fun <init>/150270877 ((BOUND_VARIABLE_589 var432) (BOUND_VARIABLE_590 String)) void (as @void_0 void))\r\n(define-fun <init>/-762572363 ((BOUND_VARIABLE_593 var1025) (BOUND_VARIABLE_594 var2759) (BOUND_VARIABLE_595 Int)) void (as @void_0 void))\r\n(define-fun cast-from-var432-to-var2759 ((BOUND_VARIABLE_598 var432)) var2759 (as @var2759_0 var2759))\r\n(define-fun null-var1388 () var1388 (as @var1388_0 var1388))\r\n(define-fun var1079 () var1388 (as @var1388_1 var1388))\r\n(define-fun var2622!1 () String \"\")\r\n(define-fun var731!1 () var432 (as @var432_0 var432))\r\n(define-fun var2122!1 () String \"\")\r\n(define-fun var185!1 () var1025 (as @var1025_0 var1025))\r\n(define-fun var731!2 () var432 (as @var432_0 var432))\r\n(define-fun var2689!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36044800,
            "run_time": 0.10493683815002441,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 62 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 63 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152748032,
            "run_time": 2.243635416030884,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1388/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser$StrategyParser__literal__2045574504\\3973.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n\r\n1601ms\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.String: int length()>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDateParser$StrategyParser",
            "z1 = 0",
            "$r14 = new java.lang.StringBuilder",
            "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()",
            "$i9 = r1.<org.apache.commons.lang3.time.FastDateParser$StrategyParser: int currentIdx>",
            "$r11 = r1.<org.apache.commons.lang3.time.FastDateParser$StrategyParser: org.apache.commons.lang3.time.FastDateParser this$0>",
            "$r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser: java.lang.String access$300(org.apache.commons.lang3.time.FastDateParser)>($r11)",
            "$i10 = virtualinvoke $r12.<java.lang.String: int length()>()",
            "if $i9 >= $i10 goto (branch)",
            "if z1 == 0 goto r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r17 = new org.apache.commons.lang3.time.FastDateParser$StrategyAndWidth",
            "$r16 = new org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy",
            "specialinvoke $r16.<org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy: void <init>(java.lang.String)>(r13)",
            "$i0 = virtualinvoke r13.<java.lang.String: int length()>()",
            "specialinvoke $r17.<org.apache.commons.lang3.time.FastDateParser$StrategyAndWidth: void <init>(org.apache.commons.lang3.time.FastDateParser$Strategy,int)>($r16, $i0)",
            "return $r17"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.BooleanUtils__toBooleanObject__-1855426975\\746.smt2",
        "z3": {
            "memory": 31989760,
            "run_time": 0.14181756973266602,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var81 () String\r\n    \"!2!\")\r\n  (define-fun var2420 () Bool\r\n    (= var791 var2532))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2532 () String\r\n    \"!0!\")\r\n  (define-fun var700 () String\r\n    \"!3!\")\r\n  (define-fun var2298 () var681\r\n    var681-TRUE)\r\n  (define-fun var791 () String\r\n    \"!0!\")\r\n  (define-fun var681-TRUE () var681\r\n    var681!val!0)\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8810496,
            "run_time": 0.02975606918334961,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1827 is 1\r\n; rep: (as @var1827_0 var1827)\r\n; cardinality of var681 is 1\r\n; rep: (as @var681_0 var681)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var681-TRUE () var681 (as @var681_0 var681))\r\n(define-fun var791 () String \"\")\r\n(define-fun var2532 () String \"\")\r\n(define-fun var81 () String \"\")\r\n(define-fun var700 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37998592,
            "run_time": 1.240365743637085,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var791 () String\n    \"\\u{0}\")\n  (define-fun var2298 () var681\n    var681-TRUE)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\\u{0}\")\n  (define-fun var81 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var2532 () String\n    \"\\u{0}\")\n  (define-fun var700 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2420 () Bool\n    (= var791 var2532))\n  (define-fun var681-TRUE () var681\n    var681!val!0)\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 139628544,
            "run_time": 1.9539799690246582,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var700 () String \"\")\r\n  (define-fun var81 () String \"\")\r\n  (define-fun var2532 () String \"\")\r\n  (define-fun var791 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "r2 := @parameter2: java.lang.String",
            "r3 := @parameter3: java.lang.String",
            "if r0 != null goto $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1)",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1)",
            "if $z0 == 0 goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r2)",
            "$r6 = <java.lang.Boolean: java.lang.Boolean TRUE>",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.translate.OctalUnescaper__translate__-1241917332\\3507.smt2",
        "z3": {
            "memory": 32083968,
            "run_time": 0.1529543399810791,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3805:\r\n  ;;   var3805!val!0 var3805!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3805!val!0 () var3805)\r\n  (declare-fun var3805!val!1 () var3805)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3805)) (or (= x var3805!val!0) (= x var3805!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2569:\r\n  ;;   var2569!val!0 var2569!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2569!val!0 () var2569)\r\n  (declare-fun var2569!val!1 () var2569)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2569)) (or (= x var2569!val!0) (= x var2569!val!1)))\r\n  ;; -----------\r\n  (define-fun var1713 () Int\r\n    (String_charAt/1466887330 var3363 var3747))\r\n  (define-fun var27 () Int\r\n    (String_charAt/1466887330 var3363 var3747))\r\n  (define-fun var2382 () var3805\r\n    var3805!val!0)\r\n  (define-fun null-var2569 () var2569\r\n    var2569!val!1)\r\n  (define-fun var3747 () Int\r\n    2)\r\n  (define-fun var1866 () Int\r\n    (- (String_length/-667254855 var3363) var3747))\r\n  (define-fun null-var3805 () var3805\r\n    var3805!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3324 () Int\r\n    (String_length/-667254855 var3363))\r\n  (define-fun var903 () String\r\n    String-init)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3756 () var2569\r\n    var2569!val!0)\r\n  (define-fun var1302 () Int\r\n    (- (- (String_length/-667254855 var3363) var3747) 1))\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var3363 () String\r\n    \"A\")\r\n  (define-fun var903!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun String_charAt/1466887330 ((x!0 String) (x!1 Int)) Int\r\n    3)\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    0)\r\n)\r\n(error \"line 41 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.0922081470489502,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2569 is 2\r\n; rep: (as @var2569_0 var2569)\r\n; rep: (as @var2569_1 var2569)\r\n; cardinality of var3805 is 2\r\n; rep: (as @var3805_0 var3805)\r\n; rep: (as @var3805_1 var3805)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_length/-667254855 ((BOUND_VARIABLE_600 String)) Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun String_charAt/1466887330 ((_arg_1 String) (_arg_2 Int)) Int 0)\r\n(define-fun null-var2569 () var2569 (as @var2569_0 var2569))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var3805 () var3805 (as @var3805_0 var3805))\r\n(define-fun var3756 () var2569 (as @var2569_1 var2569))\r\n(define-fun var3363 () String \"\")\r\n(define-fun var3747 () Int 0)\r\n(define-fun var2382 () var3805 (as @var3805_1 var3805))\r\n(define-fun var903!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36892672,
            "run_time": 0.23254704475402832,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3805:\n  ;;   var3805!val!0 var3805!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3805!val!0 () var3805)\n  (declare-fun var3805!val!1 () var3805)\n  ;; cardinality constraint:\n  (forall ((x var3805)) (or (= x var3805!val!0) (= x var3805!val!1)))\n  ;; -----------\n  ;; universe for var2569:\n  ;;   var2569!val!0 var2569!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2569!val!0 () var2569)\n  (declare-fun var2569!val!1 () var2569)\n  ;; cardinality constraint:\n  (forall ((x var2569)) (or (= x var2569!val!0) (= x var2569!val!1)))\n  ;; -----------\n  (define-fun var903!1 () String\n    \"\")\n  (define-fun var1866 () Int\n    (- (String_length/-667254855 var3363) var3747))\n  (define-fun null-Int () Int\n    4)\n  (define-fun var27 () Int\n    (String_charAt/1466887330 var3363 var3747))\n  (define-fun var3747 () Int\n    3)\n  (define-fun null-var2569 () var2569\n    var2569!val!1)\n  (define-fun var3363 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3324 () Int\n    (String_length/-667254855 var3363))\n  (define-fun var3756 () var2569\n    var2569!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var903 () String\n    String-init)\n  (define-fun var1302 () Int\n    (- (- (String_length/-667254855 var3363) var3747) 1))\n  (define-fun var1713 () Int\n    (String_charAt/1466887330 var3363 var3747))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2382 () var3805\n    var3805!val!0)\n  (define-fun null-var3805 () var3805\n    var3805!val!1)\n  (define-fun String-init () String\n    \"\")\n  (define-fun String_charAt/1466887330 ((x!0 String) (x!1 Int)) Int\n    4)\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    0)\n)\n(error \"line 41 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169881600,
            "run_time": 2.050900459289551,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var903!1 () String \"\")\r\n  (define-fun var2382 () var3805 var3805!196)\r\n  (define-fun var3747 () Int 97)\r\n  (define-fun var3363 () String \"\\u{0}\")\r\n  (define-fun var3756 () var2569 var2569!190)\r\n  (define-fun null-var3805 () var3805 var3805!188)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2569 () var2569 var2569!186)\r\n  (define-fun String_charAt/1466887330 ((x!0 String) (x!1 Int)) Int (ite (and (= x!0 \"\\u{0}\") (= x!1 97)) 104 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.CharSequence: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.CharSequence: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.apache.commons.lang3.text.translate.OctalUnescaper",
            "r0 := @parameter0: java.lang.CharSequence",
            "i0 := @parameter1: int",
            "r3 := @parameter2: java.io.Writer",
            "$i1 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$i2 = $i1 - i0",
            "i3 = $i2 - 1",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$c4 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i0)",
            "$i19 = (int) $c4",
            "if $i19 != 92 goto return 0",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrSubstitutor__replaceIn__-540485316\\4234.smt2",
        "z3": {
            "memory": 32002048,
            "run_time": 0.25872063636779785,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2531:\r\n  ;;   var2531!val!0 var2531!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2531!val!0 () var2531)\r\n  (declare-fun var2531!val!1 () var2531)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2531)) (or (= x var2531!val!0) (= x var2531!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2531 () var2531\r\n    var2531!val!1)\r\n  (define-fun var1595 () String\r\n    \"!0!\")\r\n  (define-fun var1124 () Bool\r\n    (replaceIn/174690242 var3896 var1595 0 (length/-1112840705 var1595)))\r\n  (define-fun var3896 () var2531\r\n    var2531!val!0)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2171 () Int\r\n    (length/-1112840705 var1595))\r\n  (define-fun replaceIn/174690242 ((x!0 var2531) (x!1 String) (x!2 Int) (x!3 Int)) Bool\r\n    false)\r\n  (define-fun length/-1112840705 ((x!0 String)) Int\r\n    0)\r\n)\r\n(error \"line 25 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.06105923652648926,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2531 is 2\r\n; rep: (as @var2531_0 var2531)\r\n; rep: (as @var2531_1 var2531)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun length/-1112840705 ((BOUND_VARIABLE_492 String)) Int 0)\r\n(define-fun replaceIn/174690242 ((BOUND_VARIABLE_495 var2531) (BOUND_VARIABLE_496 String) (BOUND_VARIABLE_497 Int) (BOUND_VARIABLE_498 Int)) Bool false)\r\n(define-fun null-var2531 () var2531 (as @var2531_0 var2531))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3896 () var2531 (as @var2531_1 var2531))\r\n(define-fun var1595 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37347328,
            "run_time": 0.13721871376037598,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2531:\n  ;;   var2531!val!0 var2531!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2531!val!0 () var2531)\n  (declare-fun var2531!val!1 () var2531)\n  ;; cardinality constraint:\n  (forall ((x var2531)) (or (= x var2531!val!0) (= x var2531!val!1)))\n  ;; -----------\n  (define-fun null-var2531 () var2531\n    var2531!val!1)\n  (define-fun var1595 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2171 () Int\n    (length/-1112840705 var1595))\n  (define-fun var3896 () var2531\n    var2531!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1124 () Bool\n    (replaceIn/174690242 var3896 var1595 0 (length/-1112840705 var1595)))\n  (define-fun replaceIn/174690242 ((x!0 var2531) (x!1 String) (x!2 Int) (x!3 Int)) Bool\n    false)\n  (define-fun length/-1112840705 ((x!0 String)) Int\n    0)\n)\n(error \"line 25 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132182016,
            "run_time": 1.8591394424438477,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1595 () String \"\\u{0}\")\r\n  (define-fun var3896 () var2531 var2531!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2531 () var2531 var2531!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuffer: int length()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrSubstitutor",
            "r0 := @parameter0: java.lang.StringBuffer",
            "if r0 != null goto $i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>()",
            "$i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>()",
            "$z0 = virtualinvoke r1.<org.apache.commons.lang3.text.StrSubstitutor: boolean replaceIn(java.lang.StringBuffer,int,int)>(r0, 0, $i0)",
            "return $z0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Conversion__binaryBeMsb0ToHexDigit__-421502396\\167.smt2",
        "z3": {
            "memory": 32342016,
            "run_time": 0.11291623115539551,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3944 () Int\r\n    (- 2))\r\n  (define-fun var2520 () Int\r\n    (getLength-Arr-Bool-1 var1639))\r\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool)\r\n    (store ((as const (Array Int Bool)) true) 0 false))\r\n  (define-fun var412 () var571\r\n    var571-init)\r\n  (define-fun var805 () Int\r\n    (getLength-Arr-Bool-1 var1639))\r\n  (define-fun var466 () Int\r\n    (getLength-Arr-Bool-1 var1639))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    (- 1))\r\n  (define-fun var654 () String\r\n    (str.++ var3930!1 (str.from_int var3944) \" is not within array length \"))\r\n  (define-fun var1093 () String\r\n    (str.++ var3930!1\r\n        (str.from_int var3944)\r\n        \" is not within array length \"\r\n        (str.from_int (getLength-Arr-Bool-1 var1639))))\r\n  (define-fun var654!1 () String\r\n    \" is not within array length \")\r\n  (define-fun var3930 () String\r\n    String-init)\r\n  (define-fun var1639 () (Array Int Bool)\r\n    ((as const (Array Int Bool)) true))\r\n  (define-fun var537 () Int\r\n    (Int_compareUnsigned/-842762252 var3944 (getLength-Arr-Bool-1 var1639)))\r\n  (define-fun var3261 () String\r\n    (str.++ var3930!1\r\n        (str.from_int var3944)\r\n        \" is not within array length \"\r\n        (str.from_int (getLength-Arr-Bool-1 var1639))))\r\n  (define-fun var1345 () String\r\n    (str.++ var3930!1 (str.from_int var3944)))\r\n  (define-fun var1345!1 () String\r\n    \" is not within array length \")\r\n  (define-fun var3930!1 () String\r\n    \"\")\r\n  (define-fun var3930!2 () String\r\n    \"\")\r\n  (define-fun var571-init () var571\r\n    var571!val!0)\r\n  (define-fun var412!1 () var571\r\n    var571!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1093!1 () String\r\n    \"\")\r\n  (define-fun getLength-Arr-Bool-1 ((x!0 (Array Int Bool))) Int\r\n    10)\r\n  (define-fun Int_compareUnsigned/-842762252 ((x!0 Int) (x!1 Int)) Int\r\n    0)\r\n  (define-fun <init>/1107025377 ((x!0 var571) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 59 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11825152,
            "run_time": 0.06812834739685059,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var571 is 1\r\n; rep: (as @var571_0 var571)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getLength-Arr-Bool-1 ((_arg_1 (Array Int Bool))) Int (- 1))\r\n(define-fun Int_compareUnsigned/-842762252 ((_arg_1 Int) (_arg_2 Int)) Int 0)\r\n(define-fun var571-init () var571 (as @var571_0 var571))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1107025377 ((BOUND_VARIABLE_1424 var571) (BOUND_VARIABLE_1425 String)) void (as @void_0 void))\r\n(define-fun null-__Array__Int__Bool__ () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var1639 () (Array Int Bool) ((as const (Array Int Bool)) false))\r\n(define-fun var3944 () Int (- 1))\r\n(define-fun var3930!1 () String \"\")\r\n(define-fun var3930!2 () String \"\")\r\n(define-fun var1345!1 () String \" is not within array length \")\r\n(define-fun var654!1 () String \" is not within array length \")\r\n(define-fun var412!1 () var571 (as @var571_0 var571))\r\n(define-fun var1093!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38039552,
            "run_time": 0.20449209213256836,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 58 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 59 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 199831552,
            "run_time": 2.8050827980041504,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var654!1 () String \" is not within array length \")\r\n  (define-fun var1345!1 () String \" is not within array length \")\r\n  (define-fun var3930!2 () String \"\")\r\n  (define-fun var3930!1 () String \"\")\r\n  (define-fun var3944 () Int (- 6))\r\n  (define-fun var1639 () (Array Int Bool) ((as const (Array Int Bool)) true))\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-__Array__Int__Bool__ () (Array Int Bool) (store ((as const (Array Int Bool)) true) 0 false))\r\n  (define-fun abbrev_107 ((x!0 Int)) String (ite (= x!0 0) \" is not within array length \" \"\"))\r\n  (define-fun Int_compareUnsigned/-842762252 ((x!0 Int) (x!1 Int)) Int (ite (and (= x!0 (- 6)) (= x!1 34)) 0 0))\r\n  (define-fun getLength-Arr-Bool-1 ((x!0 (Array Int Bool))) Int (ite (= x!0 ((as const (Array Int Bool)) true)) 34 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: boolean[]",
            "i0 := @parameter1: int",
            "$i1 = lengthof r0",
            "$i2 = staticinvoke <java.lang.Integer: int compareUnsigned(int,int)>(i0, $i1)",
            "if $i2 < 0 goto $i3 = lengthof r0",
            "$i13 = lengthof r0",
            "if $i13 != 0 goto $r1 = new java.lang.IndexOutOfBoundsException",
            "$r1 = new java.lang.IndexOutOfBoundsException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is not within array length \")",
            "$i14 = lengthof r0",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i14)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>($r6)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__getStrategy__1867214738\\4288.smt2",
        "z3": {
            "memory": 31551488,
            "run_time": 0.28465747833251953,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2230:\r\n  ;;   var2230!val!1 var2230!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2230!val!1 () var2230)\r\n  (declare-fun var2230!val!0 () var2230)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2230)) (or (= x var2230!val!1) (= x var2230!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1192:\r\n  ;;   var1192!val!0 var1192!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1192!val!0 () var1192)\r\n  (declare-fun var1192!val!1 () var1192)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1192)) (or (= x var1192!val!0) (= x var1192!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2230 () var2230\r\n    var2230!val!1)\r\n  (define-fun var1879 () var2230\r\n    var2230!val!0)\r\n  (define-fun var750 () Int\r\n    85)\r\n  (define-fun var792 () var1192\r\n    var1192!val!0)\r\n  (define-fun null-var1192 () var1192\r\n    var1192!val!1)\r\n  (define-fun var101 () Int\r\n    var448)\r\n  (define-fun var1529 () var3570\r\n    var1192-MILLISECOND_STRATEGY)\r\n  (define-fun null-Int () Int\r\n    84)\r\n  (define-fun var448 () Int\r\n    83)\r\n  (define-fun var1192-MILLISECOND_STRATEGY () var3570\r\n    var3570!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8048640,
            "run_time": 0.04580092430114746,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1192 is 2\r\n; rep: (as @var1192_0 var1192)\r\n; rep: (as @var1192_1 var1192)\r\n; cardinality of var2230 is 2\r\n; rep: (as @var2230_0 var2230)\r\n; rep: (as @var2230_1 var2230)\r\n; cardinality of var3570 is 1\r\n; rep: (as @var3570_0 var3570)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var1192 () var1192 (as @var1192_0 var1192))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var2230 () var2230 (as @var2230_0 var2230))\r\n(define-fun var1192-MILLISECOND_STRATEGY () var3570 (as @var3570_0 var3570))\r\n(define-fun var792 () var1192 (as @var1192_1 var1192))\r\n(define-fun var448 () Int 83)\r\n(define-fun var750 () Int 0)\r\n(define-fun var1879 () var2230 (as @var2230_1 var2230))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35868672,
            "run_time": 0.10690689086914062,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2230:\n  ;;   var2230!val!1 var2230!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2230!val!1 () var2230)\n  (declare-fun var2230!val!0 () var2230)\n  ;; cardinality constraint:\n  (forall ((x var2230)) (or (= x var2230!val!1) (= x var2230!val!0)))\n  ;; -----------\n  ;; universe for var1192:\n  ;;   var1192!val!0 var1192!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1192!val!0 () var1192)\n  (declare-fun var1192!val!1 () var1192)\n  ;; cardinality constraint:\n  (forall ((x var1192)) (or (= x var1192!val!0) (= x var1192!val!1)))\n  ;; -----------\n  (define-fun null-var2230 () var2230\n    var2230!val!1)\n  (define-fun var1879 () var2230\n    var2230!val!0)\n  (define-fun var750 () Int\n    85)\n  (define-fun var792 () var1192\n    var1192!val!0)\n  (define-fun null-var1192 () var1192\n    var1192!val!1)\n  (define-fun var101 () Int\n    var448)\n  (define-fun var1529 () var3570\n    var1192-MILLISECOND_STRATEGY)\n  (define-fun null-Int () Int\n    84)\n  (define-fun var448 () Int\n    83)\n  (define-fun var1192-MILLISECOND_STRATEGY () var3570\n    var3570!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152760320,
            "run_time": 1.6176495552062988,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1879 () var2230 var2230!8)\r\n  (define-fun var750 () Int 1)\r\n  (define-fun var448 () Int 83)\r\n  (define-fun var792 () var1192 var1192!6)\r\n  (define-fun null-var2230 () var2230 var2230!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var1192 () var1192 var1192!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser",
            "c0 := @parameter0: char",
            "i1 := @parameter1: int",
            "r1 := @parameter2: java.util.Calendar",
            "$i2 = (int) c0",
            "tableswitch($i2) {     case 68: goto $r20 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY>;     case 69: goto $r19 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(7, r1);     case 70: goto $r18 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY>;     case 71: goto $r17 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(0, r1);     case 72: goto $r16 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY>;     case 73: goto $r30 = new java.lang.IllegalArgumentException;     case 74: goto $r30 = new java.lang.IllegalArgumentException;     case 75: goto $r15 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY>;     case 76: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 77: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 78: goto $r30 = new java.lang.IllegalArgumentException;     case 79: goto $r30 = new java.lang.IllegalArgumentException;     case 80: goto $r30 = new java.lang.IllegalArgumentException;     case 81: goto $r30 = new java.lang.IllegalArgumentException;     case 82: goto $r30 = new java.lang.IllegalArgumentException;     case 83: goto $r14 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY>;     case 84: goto $r30 = new java.lang.IllegalArgumentException;     case 85: goto $r30 = new java.lang.IllegalArgumentException;     case 86: goto $r30 = new java.lang.IllegalArgumentException;     case 87: goto $r13 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY>;     case 88: goto $r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int)>(i1);     case 89: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 90: goto if i1 != 2 goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     case 91: goto $r30 = new java.lang.IllegalArgumentException;     case 92: goto $r30 = new java.lang.IllegalArgumentException;     case 93: goto $r30 = new java.lang.IllegalArgumentException;     case 94: goto $r30 = new java.lang.IllegalArgumentException;     case 95: goto $r30 = new java.lang.IllegalArgumentException;     case 96: goto $r30 = new java.lang.IllegalArgumentException;     case 97: goto $r10 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(9, r1);     case 98: goto $r30 = new java.lang.IllegalArgumentException;     case 99: goto $r30 = new java.lang.IllegalArgumentException;     case 100: goto $r9 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY>;     case 101: goto $r30 = new java.lang.IllegalArgumentException;     case 102: goto $r30 = new java.lang.IllegalArgumentException;     case 103: goto $r30 = new java.lang.IllegalArgumentException;     case 104: goto $r8 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR12_STRATEGY>;     case 105: goto $r30 = new java.lang.IllegalArgumentException;     case 106: goto $r30 = new java.lang.IllegalArgumentException;     case 107: goto $r7 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR24_OF_DAY_STRATEGY>;     case 108: goto $r30 = new java.lang.IllegalArgumentException;     case 109: goto $r6 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY>;     case 110: goto $r30 = new java.lang.IllegalArgumentException;     case 111: goto $r30 = new java.lang.IllegalArgumentException;     case 112: goto $r30 = new java.lang.IllegalArgumentException;     case 113: goto $r30 = new java.lang.IllegalArgumentException;     case 114: goto $r30 = new java.lang.IllegalArgumentException;     case 115: goto $r5 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY>;     case 116: goto $r30 = new java.lang.IllegalArgumentException;     case 117: goto $r4 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_STRATEGY>;     case 118: goto $r30 = new java.lang.IllegalArgumentException;     case 119: goto $r3 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY>;     case 120: goto $r30 = new java.lang.IllegalArgumentException;     case 121: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 122: goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     default: goto $r30 = new java.lang.IllegalArgumentException; }",
            "$r14 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY>",
            "return $r14"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__validateIndex__-1908911276\\6415.smt2",
        "z3": {
            "memory": 31559680,
            "run_time": 0.2254793643951416,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1568:\r\n  ;;   var1568!val!0 var1568!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1568!val!0 () var1568)\r\n  (declare-fun var1568!val!1 () var1568)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1568)) (or (= x var1568!val!0) (= x var1568!val!1)))\r\n  ;; -----------\r\n  (define-fun var3654 () var3990\r\n    var3990-init)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var3332 () Int\r\n    (- 1))\r\n  (define-fun var3053 () var1568\r\n    var1568!val!0)\r\n  (define-fun null-var1568 () var1568\r\n    var1568!val!1)\r\n  (define-fun var3654!1 () var3990\r\n    var3990!val!0)\r\n  (define-fun var3332!1 () Int\r\n    0)\r\n  (define-fun var3990-init () var3990\r\n    var3990!val!0)\r\n  (define-fun <init>/-25822930 ((x!0 var3990) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.09275317192077637,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1568 is 2\r\n; rep: (as @var1568_0 var1568)\r\n; rep: (as @var1568_1 var1568)\r\n; cardinality of var3990 is 1\r\n; rep: (as @var3990_0 var3990)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3990-init () var3990 (as @var3990_0 var3990))\r\n(define-fun <init>/-25822930 ((BOUND_VARIABLE_445 var3990) (BOUND_VARIABLE_446 Int)) void (as @void_0 void))\r\n(define-fun null-var1568 () var1568 (as @var1568_0 var1568))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var3053 () var1568 (as @var1568_1 var1568))\r\n(define-fun var3332 () Int (- 1))\r\n(define-fun var3654!1 () var3990 (as @var3990_0 var3990))\r\n(define-fun var3332!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35856384,
            "run_time": 0.10660910606384277,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1568:\n  ;;   var1568!val!0 var1568!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1568!val!0 () var1568)\n  (declare-fun var1568!val!1 () var1568)\n  ;; cardinality constraint:\n  (forall ((x var1568)) (or (= x var1568!val!0) (= x var1568!val!1)))\n  ;; -----------\n  (define-fun null-Int () Int\n    0)\n  (define-fun var3332 () Int\n    (- 1))\n  (define-fun var3053 () var1568\n    var1568!val!0)\n  (define-fun null-var1568 () var1568\n    var1568!val!1)\n  (define-fun var3654 () var3990\n    var3990-init)\n  (define-fun var3654!1 () var3990\n    var3990!val!0)\n  (define-fun var3332!1 () Int\n    0)\n  (define-fun var3990-init () var3990\n    var3990!val!0)\n  (define-fun <init>/-25822930 ((x!0 var3990) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 138461184,
            "run_time": 1.6647567749023438,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3332 () Int (- 1))\r\n  (define-fun var3053 () var1568 var1568!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var1568 () var1568 var1568!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>"
        ],
        "api_count": {
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "if i0 < 0 goto $r0 = new java.lang.StringIndexOutOfBoundsException",
            "$r0 = new java.lang.StringIndexOutOfBoundsException",
            "specialinvoke $r0.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__subSequence__423694995\\5885.smt2",
        "z3": {
            "memory": 31707136,
            "run_time": 0.18166041374206543,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3734:\r\n  ;;   var3734!val!0 var3734!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3734!val!0 () var3734)\r\n  (declare-fun var3734!val!1 () var3734)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3734)) (or (= x var3734!val!0) (= x var3734!val!1)))\r\n  ;; -----------\r\n  (define-fun var1980 () Int\r\n    (size/1389889126 var994))\r\n  (define-fun var173 () Int\r\n    (- var278 var3958))\r\n  (define-fun var3544 () var3732\r\n    var3732-init)\r\n  (define-fun null-var3734 () var3734\r\n    var3734!val!1)\r\n  (define-fun var278 () Int\r\n    0)\r\n  (define-fun var994 () var3734\r\n    var3734!val!0)\r\n  (define-fun var3958 () Int\r\n    1)\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var173!1 () Int\r\n    0)\r\n  (define-fun var3732-init () var3732\r\n    var3732!val!0)\r\n  (define-fun var3544!1 () var3732\r\n    var3732!val!0)\r\n  (define-fun size/1389889126 ((x!0 var3734)) Int\r\n    0)\r\n  (define-fun <init>/-25822930 ((x!0 var3732) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10821632,
            "run_time": 0.18094587326049805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3734 is 2\r\n; rep: (as @var3734_0 var3734)\r\n; rep: (as @var3734_1 var3734)\r\n; cardinality of var3732 is 1\r\n; rep: (as @var3732_0 var3732)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var3734)) Int 0)\r\n(define-fun var3732-init () var3732 (as @var3732_0 var3732))\r\n(define-fun <init>/-25822930 ((BOUND_VARIABLE_505 var3732) (BOUND_VARIABLE_506 Int)) void (as @void_0 void))\r\n(define-fun null-var3734 () var3734 (as @var3734_0 var3734))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var994 () var3734 (as @var3734_1 var3734))\r\n(define-fun var3958 () Int 0)\r\n(define-fun var278 () Int (- 1))\r\n(define-fun var3544!1 () var3732 (as @var3732_0 var3732))\r\n(define-fun var173!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36229120,
            "run_time": 0.2757692337036133,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3734:\n  ;;   var3734!val!0 var3734!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3734!val!0 () var3734)\n  (declare-fun var3734!val!1 () var3734)\n  ;; cardinality constraint:\n  (forall ((x var3734)) (or (= x var3734!val!0) (= x var3734!val!1)))\n  ;; -----------\n  (define-fun var1980 () Int\n    (size/1389889126 var994))\n  (define-fun null-var3734 () var3734\n    var3734!val!1)\n  (define-fun var278 () Int\n    0)\n  (define-fun var173 () Int\n    (- var278 var3958))\n  (define-fun var3544 () var3732\n    var3732-init)\n  (define-fun var994 () var3734\n    var3734!val!0)\n  (define-fun var3958 () Int\n    1)\n  (define-fun null-Int () Int\n    2)\n  (define-fun var173!1 () Int\n    0)\n  (define-fun var3732-init () var3732\n    var3732!val!0)\n  (define-fun var3544!1 () var3732\n    var3732!val!0)\n  (define-fun size/1389889126 ((x!0 var3734)) Int\n    0)\n  (define-fun <init>/-25822930 ((x!0 var3732) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153620480,
            "run_time": 1.7265982627868652,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var278 () Int 8)\r\n  (define-fun var3958 () Int 9)\r\n  (define-fun var994 () var3734 var3734!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3734 () var3734 var3734!2)\r\n  (define-fun size/1389889126 ((x!0 var3734)) Int (ite (= x!0 var3734!4) 8 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>"
        ],
        "api_count": {
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "i1 := @parameter1: int",
            "if i0 >= 0 goto $i2 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i2 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i1 <= $i2 goto (branch)",
            "if i0 <= i1 goto $r1 = virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: java.lang.String substring(int,int)>(i0, i1)",
            "$r2 = new java.lang.StringIndexOutOfBoundsException",
            "$i3 = i1 - i0",
            "specialinvoke $r2.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>($i3)",
            "throw $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__validateRange__-28387379\\6435.smt2",
        "z3": {
            "memory": 32092160,
            "run_time": 0.2553262710571289,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1941:\r\n  ;;   var1941!val!0 var1941!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1941!val!0 () var1941)\r\n  (declare-fun var1941!val!1 () var1941)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1941)) (or (= x var1941!val!0) (= x var1941!val!1)))\r\n  ;; -----------\r\n  (define-fun var1615 () Int\r\n    0)\r\n  (define-fun var1481!1 () Int\r\n    (size/1389889126 var1374))\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var3405 () Int\r\n    (size/1389889126 var1374))\r\n  (define-fun null-var1941 () var1941\r\n    var1941!val!1)\r\n  (define-fun var1374 () var1941\r\n    var1941!val!0)\r\n  (define-fun var1481 () Int\r\n    1)\r\n  (define-fun size/1389889126 ((x!0 var1941)) Int\r\n    0)\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8130560,
            "run_time": 0.06208610534667969,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1941 is 2\r\n; rep: (as @var1941_0 var1941)\r\n; rep: (as @var1941_1 var1941)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var1941)) Int 0)\r\n(define-fun null-var1941 () var1941 (as @var1941_0 var1941))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1374 () var1941 (as @var1941_1 var1941))\r\n(define-fun var1615 () Int 0)\r\n(define-fun var1481 () Int 1)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36073472,
            "run_time": 0.10690689086914062,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1941:\n  ;;   var1941!val!0 var1941!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1941!val!0 () var1941)\n  (declare-fun var1941!val!1 () var1941)\n  ;; cardinality constraint:\n  (forall ((x var1941)) (or (= x var1941!val!0) (= x var1941!val!1)))\n  ;; -----------\n  (define-fun var1615 () Int\n    0)\n  (define-fun var3405 () Int\n    (size/1389889126 var1374))\n  (define-fun null-Int () Int\n    2)\n  (define-fun var1481!1 () Int\n    (size/1389889126 var1374))\n  (define-fun null-var1941 () var1941\n    var1941!val!1)\n  (define-fun var1374 () var1941\n    var1941!val!0)\n  (define-fun var1481 () Int\n    1)\n  (define-fun size/1389889126 ((x!0 var1941)) Int\n    0)\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 143286272,
            "run_time": 1.8839914798736572,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1481 () Int 1)\r\n  (define-fun var1615 () Int 0)\r\n  (define-fun var1374 () var1941 var1941!4)\r\n  (define-fun null-Int () Int 2)\r\n  (define-fun null-var1941 () var1941 var1941!2)\r\n  (define-fun size/1389889126 ((x!0 var1941)) Int (ite (= x!0 var1941!4) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "i2 := @parameter1: int",
            "if i0 >= 0 goto $i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i1 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i2 <= $i1 goto (branch)",
            "i2 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i0 <= i2 goto return i2",
            "return i2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$NumberStrategy__parse__683403985\\3877.smt2",
        "z3": {
            "memory": 31641600,
            "run_time": 0.18299484252929688,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 74 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2617344,
            "run_time": 0.031102418899536133,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35663872,
            "run_time": 0.14213824272155762,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 74 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 143441920,
            "run_time": 1.7096693515777588,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r4 := @this: org.apache.commons.lang3.time.FastDateParser$NumberStrategy",
            "r5 := @parameter0: org.apache.commons.lang3.time.FastDateParser",
            "r3 := @parameter1: java.util.Calendar",
            "r1 := @parameter2: java.lang.String",
            "r0 := @parameter3: java.text.ParsePosition",
            "i0 := @parameter4: int",
            "i5 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "i6 = virtualinvoke r1.<java.lang.String: int length()>()",
            "if i0 != 0 goto i8 = i5 + i0",
            "i8 = i5 + i0",
            "if i6 <= i8 goto (branch)",
            "if i5 >= i6 goto $i1 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "$i1 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "if $i1 != i5 goto $i2 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "$i2 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "$r2 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i2, i5)",
            "i10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>($r2)",
            "virtualinvoke r0.<java.text.ParsePosition: void setIndex(int)>(i5)",
            "$i3 = r4.<org.apache.commons.lang3.time.FastDateParser$NumberStrategy: int field>",
            "$i4 = virtualinvoke r4.<org.apache.commons.lang3.time.FastDateParser$NumberStrategy: int modify(org.apache.commons.lang3.time.FastDateParser,int)>(r5, i10)",
            "virtualinvoke r3.<java.util.Calendar: void set(int,int)>($i3, $i4)",
            "return 1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrTokenizer__\u300ainit\u300b__1532791368\\3618.smt2",
        "z3": {
            "memory": 31719424,
            "run_time": 0.13568568229675293,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2617:\r\n  ;;   var2617!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2617!val!0 () var2617)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2617)) (= x var2617!val!0))\r\n  ;; -----------\r\n  ;; universe for var1618:\r\n  ;;   var1618!val!2 var1618!val!5 var1618!val!0 var1618!val!3 var1618!val!4 var1618!val!7 var1618!val!1 var1618!val!6 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1618!val!2 () var1618)\r\n  (declare-fun var1618!val!5 () var1618)\r\n  (declare-fun var1618!val!0 () var1618)\r\n  (declare-fun var1618!val!3 () var1618)\r\n  (declare-fun var1618!val!4 () var1618)\r\n  (declare-fun var1618!val!7 () var1618)\r\n  (declare-fun var1618!val!1 () var1618)\r\n  (declare-fun var1618!val!6 () var1618)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1618))\r\n          (or (= x var1618!val!2)\r\n              (= x var1618!val!5)\r\n              (= x var1618!val!0)\r\n              (= x var1618!val!3)\r\n              (= x var1618!val!4)\r\n              (= x var1618!val!7)\r\n              (= x var1618!val!1)\r\n              (= x var1618!val!6)))\r\n  ;; -----------\r\n  (define-fun var2556!3 () var1618\r\n    var1618!val!3)\r\n  (define-fun var2556!5 () var1618\r\n    var1618!val!5)\r\n  (define-fun var2556!6 () var1618\r\n    var1618!val!6)\r\n  (define-fun null-var1618 () var1618\r\n    var1618!val!1)\r\n  (define-fun var2556!2 () var1618\r\n    var1618!val!2)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var832 () var2617\r\n    var2617_splitMatcher/-2008615519)\r\n  (define-fun var1238 () var2617\r\n    var2617_noneMatcher/-116164409)\r\n  (define-fun var2556 () var1618\r\n    var1618!val!0)\r\n  (define-fun var1470 () (Array Int Int)\r\n    (toCharArray/415275702 var1879))\r\n  (define-fun var3053 () var2617\r\n    var2617_noneMatcher/-116164409)\r\n  (define-fun var2556!7 () var1618\r\n    var1618!val!7)\r\n  (define-fun var2556!4 () var1618\r\n    var1618!val!4)\r\n  (define-fun var1576 () var2617\r\n    var2617_noneMatcher/-116164409)\r\n  (define-fun var1879 () String\r\n    \"!0!\")\r\n  (define-fun var2617_splitMatcher/-2008615519 () var2617\r\n    var2617!val!0)\r\n  (define-fun var2617_noneMatcher/-116164409 () var2617\r\n    var2617!val!0)\r\n  (define-fun var2556!1 () var1618\r\n    var1618!val!2)\r\n  (define-fun quoteMatcher/1491220258 ((x!0 var1618)) var2617\r\n    var2617!val!0)\r\n  (define-fun trimmerMatcher/1491220258 ((x!0 var1618)) var2617\r\n    var2617!val!0)\r\n  (define-fun ignoreEmptyTokens/1491220258 ((x!0 var1618)) Bool\r\n    true)\r\n  (define-fun ignoredMatcher/1491220258 ((x!0 var1618)) var2617\r\n    var2617!val!0)\r\n  (define-fun chars/1491220258 ((x!0 var1618)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun delimMatcher/1491220258 ((x!0 var1618)) var2617\r\n    var2617!val!0)\r\n  (define-fun cast-from-var1618-to-var931 ((x!0 var1618)) var931\r\n    var931!val!0)\r\n  (define-fun <init>/-279557996 ((x!0 var931)) void\r\n    void!val!0)\r\n)\r\n(error \"line 63 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.02986741065979004,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1618 is 8\r\n; rep: (as @var1618_0 var1618)\r\n; rep: (as @var1618_1 var1618)\r\n; rep: (as @var1618_2 var1618)\r\n; rep: (as @var1618_3 var1618)\r\n; rep: (as @var1618_4 var1618)\r\n; rep: (as @var1618_5 var1618)\r\n; rep: (as @var1618_6 var1618)\r\n; rep: (as @var1618_7 var1618)\r\n; cardinality of var3461 is 1\r\n; rep: (as @var3461_0 var3461)\r\n; cardinality of var931 is 1\r\n; rep: (as @var931_0 var931)\r\n; cardinality of var2617 is 1\r\n; rep: (as @var2617_0 var2617)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun <init>/-279557996 ((BOUND_VARIABLE_647 var931)) void (as @void_0 void))\r\n(define-fun cast-from-var1618-to-var931 ((BOUND_VARIABLE_650 var1618)) var931 (as @var931_0 var931))\r\n(define-fun var2617_splitMatcher/-2008615519 () var2617 (as @var2617_0 var2617))\r\n(define-fun delimMatcher/1491220258 ((BOUND_VARIABLE_653 var1618)) var2617 (as @var2617_0 var2617))\r\n(define-fun var2617_noneMatcher/-116164409 () var2617 (as @var2617_0 var2617))\r\n(define-fun quoteMatcher/1491220258 ((_arg_1 var1618)) var2617 (as @var2617_0 var2617))\r\n(define-fun ignoredMatcher/1491220258 ((_arg_1 var1618)) var2617 (as @var2617_0 var2617))\r\n(define-fun trimmerMatcher/1491220258 ((_arg_1 var1618)) var2617 (as @var2617_0 var2617))\r\n(define-fun ignoreEmptyTokens/1491220258 ((_arg_1 var1618)) Bool true)\r\n(define-fun toCharArray/415275702 ((_arg_1 String)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun chars/1491220258 ((_arg_1 var1618)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun null-var1618 () var1618 (as @var1618_0 var1618))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2556 () var1618 (as @var1618_1 var1618))\r\n(define-fun var1879 () String \"\")\r\n(define-fun var2556!1 () var1618 (as @var1618_0 var1618))\r\n(define-fun var2556!2 () var1618 (as @var1618_2 var1618))\r\n(define-fun var2556!3 () var1618 (as @var1618_3 var1618))\r\n(define-fun var2556!4 () var1618 (as @var1618_4 var1618))\r\n(define-fun var2556!5 () var1618 (as @var1618_5 var1618))\r\n(define-fun var2556!6 () var1618 (as @var1618_6 var1618))\r\n(define-fun var2556!7 () var1618 (as @var1618_7 var1618))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36896768,
            "run_time": 0.1576523780822754,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2617:\n  ;;   var2617!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2617!val!0 () var2617)\n  ;; cardinality constraint:\n  (forall ((x var2617)) (= x var2617!val!0))\n  ;; -----------\n  ;; universe for var1618:\n  ;;   var1618!val!2 var1618!val!5 var1618!val!0 var1618!val!3 var1618!val!4 var1618!val!7 var1618!val!1 var1618!val!6 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1618!val!2 () var1618)\n  (declare-fun var1618!val!5 () var1618)\n  (declare-fun var1618!val!0 () var1618)\n  (declare-fun var1618!val!3 () var1618)\n  (declare-fun var1618!val!4 () var1618)\n  (declare-fun var1618!val!7 () var1618)\n  (declare-fun var1618!val!1 () var1618)\n  (declare-fun var1618!val!6 () var1618)\n  ;; cardinality constraint:\n  (forall ((x var1618))\n          (or (= x var1618!val!2)\n              (= x var1618!val!5)\n              (= x var1618!val!0)\n              (= x var1618!val!3)\n              (= x var1618!val!4)\n              (= x var1618!val!7)\n              (= x var1618!val!1)\n              (= x var1618!val!6)))\n  ;; -----------\n  (define-fun var2556!3 () var1618\n    var1618!val!3)\n  (define-fun var2617_noneMatcher/-116164409 () var2617\n    var2617!val!0)\n  (define-fun var2617_splitMatcher/-2008615519 () var2617\n    var2617!val!0)\n  (define-fun var2556!5 () var1618\n    var1618!val!5)\n  (define-fun var1879 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2556!4 () var1618\n    var1618!val!4)\n  (define-fun null-var1618 () var1618\n    var1618!val!1)\n  (define-fun var2556!7 () var1618\n    var1618!val!7)\n  (define-fun var1238 () var2617\n    var2617_noneMatcher/-116164409)\n  (define-fun var832 () var2617\n    var2617_splitMatcher/-2008615519)\n  (define-fun var2556 () var1618\n    var1618!val!0)\n  (define-fun var3053 () var2617\n    var2617_noneMatcher/-116164409)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1576 () var2617\n    var2617_noneMatcher/-116164409)\n  (define-fun var2556!2 () var1618\n    var1618!val!2)\n  (define-fun var2556!6 () var1618\n    var1618!val!6)\n  (define-fun var1470 () (Array Int Int)\n    (toCharArray/415275702 var1879))\n  (define-fun var2556!1 () var1618\n    var1618!val!2)\n  (define-fun quoteMatcher/1491220258 ((x!0 var1618)) var2617\n    var2617!val!0)\n  (define-fun trimmerMatcher/1491220258 ((x!0 var1618)) var2617\n    var2617!val!0)\n  (define-fun ignoreEmptyTokens/1491220258 ((x!0 var1618)) Bool\n    true)\n  (define-fun ignoredMatcher/1491220258 ((x!0 var1618)) var2617\n    var2617!val!0)\n  (define-fun chars/1491220258 ((x!0 var1618)) (Array Int Int)\n    ((as const (Array Int Int)) 8))\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int)\n    ((as const (Array Int Int)) 8))\n  (define-fun delimMatcher/1491220258 ((x!0 var1618)) var2617\n    var2617!val!0)\n  (define-fun cast-from-var1618-to-var931 ((x!0 var1618)) var931\n    var931!val!0)\n  (define-fun <init>/-279557996 ((x!0 var931)) void\n    void!val!0)\n)\n(error \"line 63 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169824256,
            "run_time": 2.145535469055176,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2556!7 () var1618 var1618!22)\r\n  (define-fun var2556!6 () var1618 var1618!20)\r\n  (define-fun var2556!5 () var1618 var1618!18)\r\n  (define-fun var2556!4 () var1618 var1618!16)\r\n  (define-fun var2556!3 () var1618 var1618!14)\r\n  (define-fun var2556!2 () var1618 var1618!12)\r\n  (define-fun var1879 () String \"\\u{0}\")\r\n  (define-fun var2556 () var1618 var1618!8)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var1618 () var1618 var1618!6)\r\n  (define-fun var2617_noneMatcher/-116164409 () var2617 var2617!4)\r\n  (define-fun var2617_splitMatcher/-2008615519 () var2617 var2617!2)\r\n  (define-fun var2617!4 () var2617 (trimmerMatcher/1491220258 var1618!18))\r\n  (define-fun var2617!4 () var2617 (ignoredMatcher/1491220258 var1618!16))\r\n  (define-fun var2617!4 () var2617 (quoteMatcher/1491220258 var1618!14))\r\n  (define-fun var2617!2 () var2617 (delimMatcher/1491220258 var1618!12))\r\n  (define-fun chars/1491220258 ((x!0 var1618)) (Array Int Int) (ite (= x!0 var1618!22) ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n  (define-fun toCharArray/415275702 ((x!0 String)) (Array Int Int) (ite (= x!0 \"\\u{0}\") ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n  (define-fun ignoreEmptyTokens/1491220258 ((x!0 var1618)) Bool (ite (= x!0 var1618!20) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 11,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.String: char[] toCharArray()>"
        ],
        "api_count": {
            "<java.lang.String: char[] toCharArray()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrTokenizer",
            "r5 := @parameter0: java.lang.String",
            "specialinvoke r0.<java.lang.Object: void <init>()>()",
            "$r1 = staticinvoke <org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher splitMatcher()>()",
            "r0.<org.apache.commons.lang3.text.StrTokenizer: org.apache.commons.lang3.text.StrMatcher delimMatcher> = $r1",
            "$r2 = staticinvoke <org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher noneMatcher()>()",
            "r0.<org.apache.commons.lang3.text.StrTokenizer: org.apache.commons.lang3.text.StrMatcher quoteMatcher> = $r2",
            "$r3 = staticinvoke <org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher noneMatcher()>()",
            "r0.<org.apache.commons.lang3.text.StrTokenizer: org.apache.commons.lang3.text.StrMatcher ignoredMatcher> = $r3",
            "$r4 = staticinvoke <org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher noneMatcher()>()",
            "r0.<org.apache.commons.lang3.text.StrTokenizer: org.apache.commons.lang3.text.StrMatcher trimmerMatcher> = $r4",
            "r0.<org.apache.commons.lang3.text.StrTokenizer: boolean ignoreEmptyTokens> = 1",
            "if r5 == null goto r0.<org.apache.commons.lang3.text.StrTokenizer: char[] chars> = null",
            "$r6 = virtualinvoke r5.<java.lang.String: char[] toCharArray()>()",
            "r0.<org.apache.commons.lang3.text.StrTokenizer: char[] chars> = $r6",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.DateUtils__parseDateWithLeniency__1199161330\\4384.smt2",
        "z3": {
            "memory": 32186368,
            "run_time": 0.13631343841552734,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2372:\r\n  ;;   var2372!val!0 var2372!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2372!val!0 () var2372)\r\n  (declare-fun var2372!val!1 () var2372)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2372)) (or (= x var2372!val!0) (= x var2372!val!1)))\r\n  ;; -----------\r\n  (define-fun var2001 () String\r\n    (str.++ var60!1 \"Unable to parse the date: \" var17!1))\r\n  (define-fun var870 () var2372\r\n    (var3799_toLocale/455255440 var503))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2570 () Int\r\n    (- 1))\r\n  (define-fun var939 () String\r\n    (str.++ var60!1 \"Unable to parse the date: \"))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3748 () (Array Int String)\r\n    ((as const (Array Int String)) \"A\"))\r\n  (define-fun null-__Array__Int__String__ () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun var2545 () var3077\r\n    (var3077_getInstance/1343923299\r\n  var1227_getDefault/2145430630\r\n  (var3799_toLocale/455255440 var503)))\r\n  (define-fun var17 () String\r\n    \"A\")\r\n  (define-fun var3493 () var1607\r\n    var1607-init)\r\n  (define-fun var503 () var2372\r\n    var2372!val!0)\r\n  (define-fun var2663 () var2593\r\n    var2593-init)\r\n  (define-fun var137 () Int\r\n    (getLength-Arr-String-1 var3748!1))\r\n  (define-fun var1480 () Bool\r\n    true)\r\n  (define-fun var60 () String\r\n    String-init)\r\n  (define-fun null-var2372 () var2372\r\n    var2372!val!1)\r\n  (define-fun var3748!1 () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun var741 () String\r\n    (str.++ var60!1 \"Unable to parse the date: \" var17!1))\r\n  (define-fun var711 () var1227\r\n    var1227_getDefault/2145430630)\r\n  (define-fun var3088 () Int\r\n    0)\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var60!2 () String\r\n    \"Unable to parse the date: \")\r\n  (define-fun var17!1 () String\r\n    \"\")\r\n  (define-fun var939!1 () String\r\n    \"Unable to parse the date: \")\r\n  (define-fun var60!1 () String\r\n    \"\")\r\n  (define-fun var2570!1 () Int\r\n    0)\r\n  (define-fun var1480!1 () Bool\r\n    false)\r\n  (define-fun var3493!1 () var1607\r\n    var1607!val!0)\r\n  (define-fun var2593-init () var2593\r\n    var2593!val!0)\r\n  (define-fun var1227_getDefault/2145430630 () var1227\r\n    var1227!val!0)\r\n  (define-fun var1607-init () var1607\r\n    var1607!val!0)\r\n  (define-fun var1174 () Int\r\n    0)\r\n  (define-fun var2663!1 () var2593\r\n    var2593!val!0)\r\n  (define-fun var741!1 () String\r\n    \"\")\r\n  (define-fun var636 () String\r\n    \"\")\r\n  (define-fun var810 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2545!1 () var3077\r\n    var3077!val!0)\r\n  (define-fun getLength-Arr-String-1 ((x!0 (Array Int String))) Int\r\n    0)\r\n  (define-fun var3799_toLocale/455255440 ((x!0 var2372)) var2372\r\n    var2372!val!0)\r\n  (define-fun <init>/-1546993527 ((x!0 var2593) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun cast-from-__Array__Int__String__-to-var211 ((x!0 (Array Int String))) var211\r\n    var211!val!0)\r\n  (define-fun setLenient/327205590 ((x!0 var3077) (x!1 Bool)) void\r\n    void!val!0)\r\n  (define-fun var3077_getInstance/1343923299 ((x!0 var1227) (x!1 var2372)) var3077\r\n    var3077!val!0)\r\n  (define-fun var2939_requireNonNull/1378936425 ((x!0 var211) (x!1 String)) var211\r\n    var211!val!0)\r\n  (define-fun <init>/1495607482 ((x!0 var1607) (x!1 String) (x!2 Int)) void\r\n    void!val!0)\r\n  (define-fun cast-from-String-to-var211 ((x!0 String)) var211\r\n    var211!val!0)\r\n)\r\n(error \"line 98 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11063296,
            "run_time": 0.047057151794433594,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2859 is 1\r\n; rep: (as @var2859_0 var2859)\r\n; cardinality of var2372 is 2\r\n; rep: (as @var2372_0 var2372)\r\n; rep: (as @var2372_1 var2372)\r\n; cardinality of var2939 is 1\r\n; rep: (as @var2939_0 var2939)\r\n; cardinality of var211 is 1\r\n; rep: (as @var211_0 var211)\r\n; cardinality of var1227 is 1\r\n; rep: (as @var1227_0 var1227)\r\n; cardinality of var3799 is 1\r\n; rep: (as @var3799_0 var3799)\r\n; cardinality of var2593 is 1\r\n; rep: (as @var2593_0 var2593)\r\n; cardinality of var3077 is 1\r\n; rep: (as @var3077_0 var3077)\r\n; cardinality of var1607 is 1\r\n; rep: (as @var1607_0 var1607)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2939_requireNonNull/1378936425 ((BOUND_VARIABLE_793 var211) (BOUND_VARIABLE_794 String)) var211 (as @var211_0 var211))\r\n(define-fun cast-from-String-to-var211 ((BOUND_VARIABLE_797 String)) var211 (as @var211_0 var211))\r\n(define-fun cast-from-__Array__Int__String__-to-var211 ((BOUND_VARIABLE_800 (Array Int String))) var211 (as @var211_0 var211))\r\n(define-fun var1227_getDefault/2145430630 () var1227 (as @var1227_0 var1227))\r\n(define-fun var3799_toLocale/455255440 ((BOUND_VARIABLE_803 var2372)) var2372 (as @var2372_0 var2372))\r\n(define-fun var2593-init () var2593 (as @var2593_0 var2593))\r\n(define-fun <init>/-1546993527 ((BOUND_VARIABLE_806 var2593) (BOUND_VARIABLE_807 Int)) void (as @void_0 void))\r\n(define-fun var3077_getInstance/1343923299 ((BOUND_VARIABLE_810 var1227) (BOUND_VARIABLE_811 var2372)) var3077 (as @var3077_0 var3077))\r\n(define-fun setLenient/327205590 ((BOUND_VARIABLE_814 var3077) (BOUND_VARIABLE_815 Bool)) void (as @void_0 void))\r\n(define-fun getLength-Arr-String-1 ((_arg_1 (Array Int String))) Int 0)\r\n(define-fun var1607-init () var1607 (as @var1607_0 var1607))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/1495607482 ((BOUND_VARIABLE_818 var1607) (BOUND_VARIABLE_819 String) (BOUND_VARIABLE_820 Int)) void (as @void_0 void))\r\n(define-fun null-String () String \"B\")\r\n(define-fun null-var2372 () var2372 (as @var2372_0 var2372))\r\n(define-fun null-__Array__Int__String__ () (Array Int String) ((as const (Array Int String)) \"A\"))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var17 () String \"\")\r\n(define-fun var503 () var2372 (as @var2372_1 var2372))\r\n(define-fun var3748 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var1480 () Bool false)\r\n(define-fun var17!1 () String \"\")\r\n(define-fun var810 () String \"\")\r\n(define-fun var3748!1 () (Array Int String) ((as const (Array Int String)) \"B\"))\r\n(define-fun var636 () String \"\")\r\n(define-fun var2663!1 () var2593 (as @var2593_0 var2593))\r\n(define-fun var1174 () Int 0)\r\n(define-fun var2545!1 () var3077 (as @var3077_0 var3077))\r\n(define-fun var1480!1 () Bool false)\r\n(define-fun var60!1 () String \"\")\r\n(define-fun var60!2 () String \"Unable to parse the date: \")\r\n(define-fun var939!1 () String \"Unable to parse the date: \")\r\n(define-fun var3493!1 () var1607 (as @var1607_0 var1607))\r\n(define-fun var741!1 () String \"\")\r\n(define-fun var2570!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35024896,
            "run_time": 0.11060237884521484,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 97 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 98 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177115136,
            "run_time": 2.3301968574523926,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2372/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.DateUtils__parseDateWithLeniency__1199161330\\4384.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var939!1 =\r\n     concat(\"Unable to parse the date: \", var17!1)\r\n\r\n1824ms\r\n"
        },
        "undefined_function_count": 13,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r3 := @parameter1: java.util.Locale",
            "r1 := @parameter2: java.lang.String[]",
            "z0 := @parameter3: boolean",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"str\")",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r1, \"parsePatterns\")",
            "r2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>()",
            "r4 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.Locale toLocale(java.util.Locale)>(r3)",
            "$r16 = new java.text.ParsePosition",
            "specialinvoke $r16.<java.text.ParsePosition: void <init>(int)>(0)",
            "r6 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone,java.util.Locale)>(r2, r4)",
            "virtualinvoke r6.<java.util.Calendar: void setLenient(boolean)>(z0)",
            "i0 = lengthof r1",
            "i3 = 0",
            "if i3 >= i0 goto $r19 = new java.text.ParseException",
            "$r19 = new java.text.ParseException",
            "$r18 = new java.lang.StringBuilder",
            "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()",
            "$r9 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unable to parse the date: \")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i5 = (int) -1",
            "specialinvoke $r19.<java.text.ParseException: void <init>(java.lang.String,int)>($r11, $i5)",
            "throw $r19"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__getStrategy__1867214738\\4349.smt2",
        "z3": {
            "memory": 32145408,
            "run_time": 0.3853278160095215,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var530:\r\n  ;;   var530!val!1 var530!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var530!val!1 () var530)\r\n  (declare-fun var530!val!0 () var530)\r\n  ;; cardinality constraint:\r\n  (forall ((x var530)) (or (= x var530!val!1) (= x var530!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1051:\r\n  ;;   var1051!val!1 var1051!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1051!val!1 () var1051)\r\n  (declare-fun var1051!val!0 () var1051)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1051)) (or (= x var1051!val!1) (= x var1051!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var530 () var530\r\n    var530!val!1)\r\n  (define-fun var922 () Int\r\n    111)\r\n  (define-fun var21 () var530\r\n    var530!val!0)\r\n  (define-fun null-var1051 () var1051\r\n    var1051!val!1)\r\n  (define-fun var2477 () var2737\r\n    var530-MINUTE_STRATEGY)\r\n  (define-fun var2000 () Int\r\n    var1327)\r\n  (define-fun null-Int () Int\r\n    110)\r\n  (define-fun var2865 () var1051\r\n    var1051!val!0)\r\n  (define-fun var1327 () Int\r\n    109)\r\n  (define-fun var530-MINUTE_STRATEGY () var2737\r\n    var2737!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1626112,
            "run_time": 0.1504974365234375,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var530 is 2\r\n; rep: (as @var530_0 var530)\r\n; rep: (as @var530_1 var530)\r\n; cardinality of var1051 is 2\r\n; rep: (as @var1051_0 var1051)\r\n; rep: (as @var1051_1 var1051)\r\n; cardinality of var2737 is 1\r\n; rep: (as @var2737_0 var2737)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var530 () var530 (as @var530_0 var530))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var1051 () var1051 (as @var1051_0 var1051))\r\n(define-fun var530-MINUTE_STRATEGY () var2737 (as @var2737_0 var2737))\r\n(define-fun var21 () var530 (as @var530_1 var530))\r\n(define-fun var1327 () Int 109)\r\n(define-fun var922 () Int 0)\r\n(define-fun var2865 () var1051 (as @var1051_1 var1051))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36487168,
            "run_time": 0.21580767631530762,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var530:\n  ;;   var530!val!1 var530!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var530!val!1 () var530)\n  (declare-fun var530!val!0 () var530)\n  ;; cardinality constraint:\n  (forall ((x var530)) (or (= x var530!val!1) (= x var530!val!0)))\n  ;; -----------\n  ;; universe for var1051:\n  ;;   var1051!val!1 var1051!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1051!val!1 () var1051)\n  (declare-fun var1051!val!0 () var1051)\n  ;; cardinality constraint:\n  (forall ((x var1051)) (or (= x var1051!val!1) (= x var1051!val!0)))\n  ;; -----------\n  (define-fun null-var530 () var530\n    var530!val!1)\n  (define-fun var922 () Int\n    111)\n  (define-fun var21 () var530\n    var530!val!0)\n  (define-fun null-var1051 () var1051\n    var1051!val!1)\n  (define-fun var2477 () var2737\n    var530-MINUTE_STRATEGY)\n  (define-fun null-Int () Int\n    110)\n  (define-fun var2865 () var1051\n    var1051!val!0)\n  (define-fun var2000 () Int\n    var1327)\n  (define-fun var1327 () Int\n    109)\n  (define-fun var530-MINUTE_STRATEGY () var2737\n    var2737!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152825856,
            "run_time": 1.7276201248168945,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2865 () var1051 var1051!8)\r\n  (define-fun var922 () Int 1)\r\n  (define-fun var1327 () Int 109)\r\n  (define-fun var21 () var530 var530!6)\r\n  (define-fun null-var1051 () var1051 var1051!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var530 () var530 var530!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser",
            "c0 := @parameter0: char",
            "i1 := @parameter1: int",
            "r1 := @parameter2: java.util.Calendar",
            "$i2 = (int) c0",
            "tableswitch($i2) {     case 68: goto $r20 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY>;     case 69: goto $r19 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(7, r1);     case 70: goto $r18 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY>;     case 71: goto $r17 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(0, r1);     case 72: goto $r16 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY>;     case 73: goto $r30 = new java.lang.IllegalArgumentException;     case 74: goto $r30 = new java.lang.IllegalArgumentException;     case 75: goto $r15 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY>;     case 76: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 77: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 78: goto $r30 = new java.lang.IllegalArgumentException;     case 79: goto $r30 = new java.lang.IllegalArgumentException;     case 80: goto $r30 = new java.lang.IllegalArgumentException;     case 81: goto $r30 = new java.lang.IllegalArgumentException;     case 82: goto $r30 = new java.lang.IllegalArgumentException;     case 83: goto $r14 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY>;     case 84: goto $r30 = new java.lang.IllegalArgumentException;     case 85: goto $r30 = new java.lang.IllegalArgumentException;     case 86: goto $r30 = new java.lang.IllegalArgumentException;     case 87: goto $r13 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY>;     case 88: goto $r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int)>(i1);     case 89: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 90: goto if i1 != 2 goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     case 91: goto $r30 = new java.lang.IllegalArgumentException;     case 92: goto $r30 = new java.lang.IllegalArgumentException;     case 93: goto $r30 = new java.lang.IllegalArgumentException;     case 94: goto $r30 = new java.lang.IllegalArgumentException;     case 95: goto $r30 = new java.lang.IllegalArgumentException;     case 96: goto $r30 = new java.lang.IllegalArgumentException;     case 97: goto $r10 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(9, r1);     case 98: goto $r30 = new java.lang.IllegalArgumentException;     case 99: goto $r30 = new java.lang.IllegalArgumentException;     case 100: goto $r9 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY>;     case 101: goto $r30 = new java.lang.IllegalArgumentException;     case 102: goto $r30 = new java.lang.IllegalArgumentException;     case 103: goto $r30 = new java.lang.IllegalArgumentException;     case 104: goto $r8 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR12_STRATEGY>;     case 105: goto $r30 = new java.lang.IllegalArgumentException;     case 106: goto $r30 = new java.lang.IllegalArgumentException;     case 107: goto $r7 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR24_OF_DAY_STRATEGY>;     case 108: goto $r30 = new java.lang.IllegalArgumentException;     case 109: goto $r6 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY>;     case 110: goto $r30 = new java.lang.IllegalArgumentException;     case 111: goto $r30 = new java.lang.IllegalArgumentException;     case 112: goto $r30 = new java.lang.IllegalArgumentException;     case 113: goto $r30 = new java.lang.IllegalArgumentException;     case 114: goto $r30 = new java.lang.IllegalArgumentException;     case 115: goto $r5 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY>;     case 116: goto $r30 = new java.lang.IllegalArgumentException;     case 117: goto $r4 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_STRATEGY>;     case 118: goto $r30 = new java.lang.IllegalArgumentException;     case 119: goto $r3 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY>;     case 120: goto $r30 = new java.lang.IllegalArgumentException;     case 121: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 122: goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     default: goto $r30 = new java.lang.IllegalArgumentException; }",
            "$r6 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY>",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.TypeUtils__parameterizedTypeToString__246123298\\3908.smt2",
        "z3": {
            "memory": 31772672,
            "run_time": 0.1522994041442871,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3985:\r\n  ;;   var3985!val!1 var3985!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3985!val!1 () var3985)\r\n  (declare-fun var3985!val!0 () var3985)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3985)) (or (= x var3985!val!1) (= x var3985!val!0)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  ;; universe for var3002:\r\n  ;;   var3002!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3002!val!0 () var3002)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3002)) (= x var3002!val!0))\r\n  ;; -----------\r\n  (define-fun var1301 () ClassObject\r\n    (var3985_getOwnerType/-523154979 var641))\r\n  (define-fun var3780 () (Array Int Int)\r\n    (var763_findRecursiveTypes/-200394003 var641))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var31 () String\r\n    (getName/-1958580599 (var3985_getRawType/305663496 var641)))\r\n  (define-fun var2194 () String\r\n    (append/-1166366385 var770!2 60))\r\n  (define-fun var1702 () (Array Int ClassObject)\r\n    (var3985_getActualTypeArguments/-973063842 var641))\r\n  (define-fun var3765 () ClassObject\r\n    (var3985_getRawType/305663496 var641))\r\n  (define-fun var3687 () String\r\n    var770!3)\r\n  (define-fun var770!3 () String\r\n    \"\")\r\n  (define-fun var2725 () Int\r\n    (getLength-Arr-Int-1 (var763_findRecursiveTypes/-200394003 var641)))\r\n  (define-fun null-var3985 () var3985\r\n    var3985!val!1)\r\n  (define-fun var2762 () String\r\n    (var763_appendAllTo/-1343076024\r\n  (append/-1166366385 var770!2 60)\r\n  \", \"\r\n  (cast-from-__Array__Int__ClassObject__-to-__Array__Int__var3002__\r\n    (var3985_getActualTypeArguments/-973063842 var641))))\r\n  (define-fun var641 () var3985\r\n    var3985!val!0)\r\n  (define-fun var1658 () ClassObject\r\n    (var3985_getRawType/305663496 var641))\r\n  (define-fun var770 () String\r\n    String-init)\r\n  (define-fun var2762!1 () String\r\n    \"\")\r\n  (define-fun var770!1 () String\r\n    \"\")\r\n  (define-fun var770!2 () String\r\n    \"\")\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun var763_appendAllTo/-1343076024 ((x!0 String)\r\n   (x!1 String)\r\n   (x!2 (Array Int var3002))) String\r\n    \"\")\r\n  (define-fun var3985_getRawType/305663496 ((x!0 var3985)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\r\n    0)\r\n  (define-fun var763_findRecursiveTypes/-200394003 ((x!0 var3985)) (Array Int Int)\r\n    ((as const (Array Int Int)) 8))\r\n  (define-fun var3985_getActualTypeArguments/-973063842 ((x!0 var3985)) (Array Int\r\n         ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\r\n  (define-fun cast-from-__Array__Int__ClassObject__-to-__Array__Int__var3002__ ((x!0\r\n    (Array Int ClassObject))) (Array Int var3002)\r\n    ((as const (Array Int var3002)) var3002!val!0))\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \", \")\r\n  (define-fun var3985_getOwnerType/-523154979 ((x!0 var3985)) ClassObject\r\n    ClassObject!val!0)\r\n)\r\n(error \"line 66 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1626112,
            "run_time": 0.030425071716308594,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3985 is 2\r\n; rep: (as @var3985_0 var3985)\r\n; rep: (as @var3985_1 var3985)\r\n; cardinality of var763 is 1\r\n; rep: (as @var763_0 var763)\r\n; cardinality of var3002 is 1\r\n; rep: (as @var3002_0 var3002)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var3985_getOwnerType/-523154979 ((BOUND_VARIABLE_988 var3985)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var3985_getRawType/305663496 ((_arg_1 var3985)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun var763_findRecursiveTypes/-200394003 ((_arg_1 var3985)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 0)\r\n(define-fun append/-1166366385 ((_arg_1 String) (_arg_2 Int)) String \"A\")\r\n(define-fun var3985_getActualTypeArguments/-973063842 ((_arg_1 var3985)) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun var763_appendAllTo/-1343076024 ((_arg_1 String) (_arg_2 String) (_arg_3 (Array Int var3002))) String \"\")\r\n(define-fun cast-from-__Array__Int__ClassObject__-to-__Array__Int__var3002__ ((_arg_1 (Array Int ClassObject))) (Array Int var3002) ((as const (Array Int var3002)) (as @var3002_0 var3002)))\r\n(define-fun null-var3985 () var3985 (as @var3985_0 var3985))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var641 () var3985 (as @var3985_1 var3985))\r\n(define-fun var770!1 () String \"\")\r\n(define-fun var770!2 () String \"\")\r\n(define-fun var770!3 () String \"\")\r\n(define-fun var2762!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36421632,
            "run_time": 0.14033961296081543,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 65 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 66 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 170778624,
            "run_time": 2.5008046627044678,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.reflect.TypeUtils__parameterizedTypeToString__246123298\\3908.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2762!1 =\r\n     concat(all_19_0, rhs)\r\n   var770!3 =\r\n     concat(var770!2, rhs)\r\n   ... sat\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2762!1 =\r\n     concat(var770!2, rhs)\r\n   var770!3 =\r\n     concat(var770!2, rhs)\r\n   ... sat\r\n\r\n1830ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 10,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.reflect.ParameterizedType",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "r2 = interfaceinvoke r1.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getOwnerType()>()",
            "$r3 = interfaceinvoke r1.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>()",
            "r4 = (java.lang.Class) $r3",
            "if r2 != null goto $z0 = r2 instanceof java.lang.Class",
            "$r15 = virtualinvoke r4.<java.lang.Class: java.lang.String getName()>()",
            "virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)",
            "goto [?= $r16 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: int[] findRecursiveTypes(java.lang.reflect.ParameterizedType)>(r1)]",
            "$r16 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: int[] findRecursiveTypes(java.lang.reflect.ParameterizedType)>(r1)",
            "$i0 = lengthof $r16",
            "if $i0 <= 0 goto $r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60)",
            "$r9 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60)",
            "$r8 = interfaceinvoke r1.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>()",
            "$r10 = staticinvoke <org.apache.commons.lang3.reflect.TypeUtils: java.lang.StringBuilder appendAllTo(java.lang.StringBuilder,java.lang.String,java.lang.Object[])>($r9, \", \", $r8)",
            "virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62)",
            "$r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy$TzInfo__toString__770486789\\3903.smt2",
        "z3": {
            "memory": 32186368,
            "run_time": 0.15128850936889648,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var77:\r\n  ;;   var77!val!0 var77!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var77!val!0 () var77)\r\n  (declare-fun var77!val!1 () var77)\r\n  ;; cardinality constraint:\r\n  (forall ((x var77)) (or (= x var77!val!0) (= x var77!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1124:\r\n  ;;   var1124!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1124!val!0 () var1124)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1124)) (= x var1124!val!0))\r\n  ;; -----------\r\n  ;; universe for var3230:\r\n  ;;   var3230!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3230!val!0 () var3230)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3230)) (= x var3230!val!0))\r\n  ;; -----------\r\n  (define-fun var999 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var1935!1 \"TzInfo [zone=\")\r\n          (cast-from-var1124-to-var3230 (zone/775530285 var3100)))\r\n        \", dstOffset=\"\r\n        (str.from_int (dstOffset/775530285 var3100))))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1588 () var1124\r\n    (zone/775530285 var3100))\r\n  (define-fun var3325 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var1935!1 \"TzInfo [zone=\")\r\n          (cast-from-var1124-to-var3230 (zone/775530285 var3100)))\r\n        \", dstOffset=\"\r\n        (str.from_int (dstOffset/775530285 var3100))\r\n        \"]\"))\r\n  (define-fun var3976 () String\r\n    (str.++ var1935!1 \"TzInfo [zone=\"))\r\n  (define-fun var2037 () Int\r\n    (dstOffset/775530285 var3100))\r\n  (define-fun var1935 () String\r\n    String-init)\r\n  (define-fun var824 () String\r\n    (append/-1031950772\r\n  (str.++ var1935!1 \"TzInfo [zone=\")\r\n  (cast-from-var1124-to-var3230 (zone/775530285 var3100))))\r\n  (define-fun var3810 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var1935!1 \"TzInfo [zone=\")\r\n          (cast-from-var1124-to-var3230 (zone/775530285 var3100)))\r\n        \", dstOffset=\"))\r\n  (define-fun var649 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var1935!1 \"TzInfo [zone=\")\r\n          (cast-from-var1124-to-var3230 (zone/775530285 var3100)))\r\n        \", dstOffset=\"\r\n        (str.from_int (dstOffset/775530285 var3100))\r\n        \"]\"))\r\n  (define-fun var3810!1 () String\r\n    \", dstOffset=\")\r\n  (define-fun var3100 () var77\r\n    var77!val!0)\r\n  (define-fun null-var77 () var77\r\n    var77!val!1)\r\n  (define-fun var3976!1 () String\r\n    \"TzInfo [zone=\")\r\n  (define-fun var999!1 () String\r\n    \", dstOffset=0]\")\r\n  (define-fun var824!1 () String\r\n    \", dstOffset=\")\r\n  (define-fun var1935!2 () String\r\n    \"TzInfo [zone=\")\r\n  (define-fun var1935!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var1124-to-var3230 ((x!0 var1124)) var3230\r\n    var3230!val!0)\r\n  (define-fun zone/775530285 ((x!0 var77)) var1124\r\n    var1124!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3230)) String\r\n    \"\")\r\n  (define-fun dstOffset/775530285 ((x!0 var77)) Int\r\n    0)\r\n)\r\n(error \"line 54 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12713984,
            "run_time": 0.044698238372802734,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var77 is 2\r\n; rep: (as @var77_0 var77)\r\n; rep: (as @var77_1 var77)\r\n; cardinality of var1124 is 1\r\n; rep: (as @var1124_0 var1124)\r\n; cardinality of var3230 is 1\r\n; rep: (as @var3230_0 var3230)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun zone/775530285 ((_arg_1 var77)) var1124 (as @var1124_0 var1124))\r\n(define-fun append/-1031950772 ((_arg_1 String) (_arg_2 var3230)) String \"\")\r\n(define-fun cast-from-var1124-to-var3230 ((_arg_1 var1124)) var3230 (as @var3230_0 var3230))\r\n(define-fun dstOffset/775530285 ((BOUND_VARIABLE_1490 var77)) Int 0)\r\n(define-fun null-var77 () var77 (as @var77_0 var77))\r\n(define-fun var3100 () var77 (as @var77_1 var77))\r\n(define-fun var1935!1 () String \"\")\r\n(define-fun var1935!2 () String \"TzInfo [zone=\")\r\n(define-fun var3976!1 () String \"TzInfo [zone=\")\r\n(define-fun var824!1 () String \", dstOffset=\")\r\n(define-fun var3810!1 () String \", dstOffset=\")\r\n(define-fun var999!1 () String \", dstOffset=0]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36556800,
            "run_time": 0.15619516372680664,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 53 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 54 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166477824,
            "run_time": 2.5301411151885986,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var77/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy$TzInfo__toString__770486789\\3903.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var824!1 =\r\n     concat(all_27_4, \", dstOffset=\")\r\n   var999!1 =\r\n     concat(all_16_0, \"]\")\r\n   var3810!1 =\r\n     concat(all_16_0, rhs)\r\n   all_16_0 =\r\n     concat(all_27_4, \", dstOffset=\")\r\n\r\n1995ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy$TzInfo",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"TzInfo [zone=\")",
            "$r2 = r1.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy$TzInfo: java.util.TimeZone zone>",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", dstOffset=\")",
            "$i0 = r1.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy$TzInfo: int dstOffset>",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrSubstitutor__replace__-168774418\\4071.smt2",
        "z3": {
            "memory": 32112640,
            "run_time": 0.2251591682434082,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2703:\r\n  ;;   var2703!val!1 var2703!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2703!val!1 () var2703)\r\n  (declare-fun var2703!val!0 () var2703)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2703)) (or (= x var2703!val!1) (= x var2703!val!0)))\r\n  ;; -----------\r\n  (define-fun var3287 () Int\r\n    (length/-360784002 (append/603806934 var1947!1 var1715)))\r\n  (define-fun var1715 () String\r\n    \"!0!\")\r\n  (define-fun var1947 () var1615\r\n    var1615-init)\r\n  (define-fun var2607 () String\r\n    (toString/-20424322 var2552!1))\r\n  (define-fun var965 () Int\r\n    (length/-1112840705 var1715))\r\n  (define-fun var1841 () var2703\r\n    var2703!val!0)\r\n  (define-fun null-var2703 () var2703\r\n    var2703!val!1)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2552 () var1615\r\n    (append/603806934 var1947!1 var1715))\r\n  (define-fun var1841!1 () var2703\r\n    var2703!val!1)\r\n  (define-fun var1947!1 () var1615\r\n    var1615!val!0)\r\n  (define-fun var2552!1 () var1615\r\n    var1615!val!0)\r\n  (define-fun var3555 () Int\r\n    0)\r\n  (define-fun var965!1 () Int\r\n    0)\r\n  (define-fun var1615-init () var1615\r\n    var1615!val!0)\r\n  (define-fun var3287!1 () Int\r\n    0)\r\n  (define-fun substitute/885254684 ((x!0 var2703)\r\n   (x!1 var1615)\r\n   (x!2 Int)\r\n   (x!3 Int)) Bool\r\n    false)\r\n  (define-fun length/-360784002 ((x!0 var1615)) Int\r\n    0)\r\n  (define-fun <init>/-1391885838 ((x!0 var1615) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun length/-1112840705 ((x!0 String)) Int\r\n    0)\r\n  (define-fun toString/-20424322 ((x!0 var1615)) String\r\n    \"\")\r\n  (define-fun append/603806934 ((x!0 var1615) (x!1 String)) var1615\r\n    var1615!val!0)\r\n)\r\n(error \"line 48 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1650688,
            "run_time": 0.028946399688720703,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2703 is 2\r\n; rep: (as @var2703_0 var2703)\r\n; rep: (as @var2703_1 var2703)\r\n; cardinality of var1615 is 1\r\n; rep: (as @var1615_0 var1615)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1615-init () var1615 (as @var1615_0 var1615))\r\n(define-fun length/-1112840705 ((BOUND_VARIABLE_526 String)) Int 0)\r\n(define-fun <init>/-1391885838 ((BOUND_VARIABLE_529 var1615) (BOUND_VARIABLE_530 Int)) void (as @void_0 void))\r\n(define-fun append/603806934 ((BOUND_VARIABLE_533 var1615) (BOUND_VARIABLE_534 String)) var1615 (as @var1615_0 var1615))\r\n(define-fun length/-360784002 ((BOUND_VARIABLE_537 var1615)) Int 0)\r\n(define-fun substitute/885254684 ((BOUND_VARIABLE_540 var2703) (BOUND_VARIABLE_541 var1615) (BOUND_VARIABLE_542 Int) (BOUND_VARIABLE_543 Int)) Bool false)\r\n(define-fun toString/-20424322 ((BOUND_VARIABLE_546 var1615)) String \"\")\r\n(define-fun null-var2703 () var2703 (as @var2703_0 var2703))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1841 () var2703 (as @var2703_1 var2703))\r\n(define-fun var1715 () String \"\")\r\n(define-fun var1947!1 () var1615 (as @var1615_0 var1615))\r\n(define-fun var965!1 () Int 0)\r\n(define-fun var1841!1 () var2703 (as @var2703_0 var2703))\r\n(define-fun var2552!1 () var1615 (as @var1615_0 var1615))\r\n(define-fun var3555 () Int 0)\r\n(define-fun var3287!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37380096,
            "run_time": 0.20561552047729492,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2703:\n  ;;   var2703!val!1 var2703!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2703!val!1 () var2703)\n  (declare-fun var2703!val!0 () var2703)\n  ;; cardinality constraint:\n  (forall ((x var2703)) (or (= x var2703!val!1) (= x var2703!val!0)))\n  ;; -----------\n  (define-fun var965 () Int\n    (length/-1112840705 var1715))\n  (define-fun null-var2703 () var2703\n    var2703!val!1)\n  (define-fun var1715 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2607 () String\n    (toString/-20424322 var2552!1))\n  (define-fun var2552 () var1615\n    (append/603806934 var1947!1 var1715))\n  (define-fun var3287 () Int\n    (length/-360784002 (append/603806934 var1947!1 var1715)))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1947 () var1615\n    var1615-init)\n  (define-fun var1841 () var2703\n    var2703!val!0)\n  (define-fun var1841!1 () var2703\n    var2703!val!1)\n  (define-fun var1947!1 () var1615\n    var1615!val!0)\n  (define-fun var2552!1 () var1615\n    var1615!val!0)\n  (define-fun var3555 () Int\n    0)\n  (define-fun var965!1 () Int\n    0)\n  (define-fun var1615-init () var1615\n    var1615!val!0)\n  (define-fun var3287!1 () Int\n    0)\n  (define-fun substitute/885254684 ((x!0 var2703)\n   (x!1 var1615)\n   (x!2 Int)\n   (x!3 Int)) Bool\n    false)\n  (define-fun length/-360784002 ((x!0 var1615)) Int\n    0)\n  (define-fun <init>/-1391885838 ((x!0 var1615) (x!1 Int)) void\n    void!val!0)\n  (define-fun length/-1112840705 ((x!0 String)) Int\n    0)\n  (define-fun toString/-20424322 ((x!0 var1615)) String\n    \"\")\n  (define-fun append/603806934 ((x!0 var1615) (x!1 String)) var1615\n    var1615!val!0)\n)\n(error \"line 48 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 157351936,
            "run_time": 1.9265272617340088,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1715 () String \"\\u{0}\")\r\n  (define-fun var1841 () var2703 var2703!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2703 () var2703 var2703!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuffer: int length()>",
            "<org.apache.commons.lang3.text.StrBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: int length()>": 1
        },
        "jimple_statements": [
            "r3 := @this: org.apache.commons.lang3.text.StrSubstitutor",
            "r0 := @parameter0: java.lang.StringBuffer",
            "if r0 != null goto $r1 = new org.apache.commons.lang3.text.StrBuilder",
            "$r1 = new org.apache.commons.lang3.text.StrBuilder",
            "$i0 = virtualinvoke r0.<java.lang.StringBuffer: int length()>()",
            "specialinvoke $r1.<org.apache.commons.lang3.text.StrBuilder: void <init>(int)>($i0)",
            "r2 = virtualinvoke $r1.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder append(java.lang.StringBuffer)>(r0)",
            "$i1 = virtualinvoke r2.<org.apache.commons.lang3.text.StrBuilder: int length()>()",
            "virtualinvoke r3.<org.apache.commons.lang3.text.StrSubstitutor: boolean substitute(org.apache.commons.lang3.text.StrBuilder,int,int)>(r2, 0, $i1)",
            "$r4 = virtualinvoke r2.<org.apache.commons.lang3.text.StrBuilder: java.lang.String toString()>()",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__lambda$appendDisplayNames$1__-1496404973\\4702.smt2",
        "z3": {
            "memory": 32133120,
            "run_time": 0.13380646705627441,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var379 () String\r\n    \"\")\r\n  (define-fun var2510!1 () String\r\n    \"\")\r\n  (define-fun var2510 () String\r\n    (var3035_simpleQuote/35489439 var379 var2787))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2787 () String\r\n    \"\")\r\n  (define-fun var3035_simpleQuote/35489439 ((x!0 String) (x!1 String)) String\r\n    \"\")\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1671168,
            "run_time": 0.09567618370056152,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3912 is 1\r\n; rep: (as @var3912_0 var3912)\r\n; cardinality of var3035 is 1\r\n; rep: (as @var3035_0 var3035)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3035_simpleQuote/35489439 ((_arg_1 String) (_arg_2 String)) String \"\")\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_643 String) (BOUND_VARIABLE_644 Int)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun var379 () String \"\")\r\n(define-fun var2787 () String \"\")\r\n(define-fun var2510!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34918400,
            "run_time": 0.18819808959960938,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 23 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140410880,
            "run_time": 1.8934605121612549,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser__lambda$appendDisplayNames$1__-1496404973\\4702.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2510!1 =\r\n     concat(all_14_0, rhs)\r\n   ... sat\r\n\r\n1338ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.StringBuilder",
            "r1 := @parameter1: java.lang.String",
            "$r2 = staticinvoke <org.apache.commons.lang3.time.FastDateParser: java.lang.StringBuilder simpleQuote(java.lang.StringBuilder,java.lang.String)>(r0, r1)",
            "virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.translate.UnicodeEscaper__toUtf16Escape__1576060261\\3605.smt2",
        "z3": {
            "memory": 31760384,
            "run_time": 0.11229062080383301,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1055:\r\n  ;;   var1055!val!0 var1055!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1055!val!0 () var1055)\r\n  (declare-fun var1055!val!1 () var1055)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1055)) (or (= x var1055!val!0) (= x var1055!val!1)))\r\n  ;; -----------\r\n  (define-fun var2557 () var1055\r\n    var1055!val!0)\r\n  (define-fun var3885 () String\r\n    String-init)\r\n  (define-fun var752 () String\r\n    (str.++ var3885!1 \"\\u{5c}u\" (var3139_hex/-1308539637 var3559)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3559 () Int\r\n    1)\r\n  (define-fun var358 () String\r\n    (str.++ var3885!1 \"\\u{5c}u\"))\r\n  (define-fun var1110 () String\r\n    (str.++ var3885!1 \"\\u{5c}u\" (var3139_hex/-1308539637 var3559)))\r\n  (define-fun null-var1055 () var1055\r\n    var1055!val!1)\r\n  (define-fun var2202 () String\r\n    (var3139_hex/-1308539637 var3559))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var3885!1 () String\r\n    \"\")\r\n  (define-fun var358!1 () String\r\n    \"\\u{5c}u\")\r\n  (define-fun var3885!2 () String\r\n    \"\\u{5c}u\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3139_hex/-1308539637 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 39 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10919936,
            "run_time": 0.10739850997924805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1055 is 2\r\n; rep: (as @var1055_0 var1055)\r\n; rep: (as @var1055_1 var1055)\r\n; cardinality of var3139 is 1\r\n; rep: (as @var3139_0 var3139)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var3139_hex/-1308539637 ((BOUND_VARIABLE_528 Int)) String \"\")\r\n(define-fun null-var1055 () var1055 (as @var1055_0 var1055))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2557 () var1055 (as @var1055_1 var1055))\r\n(define-fun var3559 () Int 0)\r\n(define-fun var3885!1 () String \"\")\r\n(define-fun var3885!2 () String \"\\u{5c}u\")\r\n(define-fun var358!1 () String \"\\u{5c}u\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36462592,
            "run_time": 0.12378931045532227,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1055:\n  ;;   var1055!val!0 var1055!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1055!val!0 () var1055)\n  (declare-fun var1055!val!1 () var1055)\n  ;; cardinality constraint:\n  (forall ((x var1055)) (or (= x var1055!val!0) (= x var1055!val!1)))\n  ;; -----------\n  (define-fun var2557 () var1055\n    var1055!val!0)\n  (define-fun var3885 () String\n    String-init)\n  (define-fun var752 () String\n    (str.++ var3885!1 \"\\u{5c}u\" (var3139_hex/-1308539637 var3559)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var358 () String\n    (str.++ var3885!1 \"\\u{5c}u\"))\n  (define-fun var1110 () String\n    (str.++ var3885!1 \"\\u{5c}u\" (var3139_hex/-1308539637 var3559)))\n  (define-fun var3559 () Int\n    1)\n  (define-fun var2202 () String\n    (var3139_hex/-1308539637 var3559))\n  (define-fun null-var1055 () var1055\n    var1055!val!1)\n  (define-fun null-Int () Int\n    0)\n  (define-fun var3885!1 () String\n    \"\")\n  (define-fun var358!1 () String\n    \"\\u{5c}u\")\n  (define-fun var3885!2 () String\n    \"\\u{5c}u\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3139_hex/-1308539637 ((x!0 Int)) String\n    \"\")\n)\n(error \"line 39 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 160792576,
            "run_time": 2.256408214569092,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1055/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.text.translate.UnicodeEscaper__toUtf16Escape__1576060261\\3605.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var358!1 =\r\n     concat(\"\\u{0}5cu\", all_17_3)\r\n\r\n1661ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r5 := @this: org.apache.commons.lang3.text.translate.UnicodeEscaper",
            "i0 := @parameter0: int",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\\u\")",
            "$r1 = staticinvoke <org.apache.commons.lang3.text.translate.UnicodeEscaper: java.lang.String hex(int)>(i0)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__getStrategy__1867214738\\4296.smt2",
        "z3": {
            "memory": 32141312,
            "run_time": 0.1202542781829834,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3581:\r\n  ;;   var3581!val!0 var3581!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3581!val!0 () var3581)\r\n  (declare-fun var3581!val!1 () var3581)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3581)) (or (= x var3581!val!0) (= x var3581!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1201:\r\n  ;;   var1201!val!1 var1201!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1201!val!1 () var1201)\r\n  (declare-fun var1201!val!0 () var1201)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1201)) (or (= x var1201!val!1) (= x var1201!val!0)))\r\n  ;; -----------\r\n  (define-fun var3086 () var3581\r\n    var3581!val!0)\r\n  (define-fun var1016 () Int\r\n    89)\r\n  (define-fun var2465 () Int\r\n    var1757)\r\n  (define-fun null-Int () Int\r\n    88)\r\n  (define-fun var1088 () var1699\r\n    var3581-WEEK_OF_MONTH_STRATEGY)\r\n  (define-fun var1940 () var1201\r\n    var1201!val!0)\r\n  (define-fun null-var3581 () var3581\r\n    var3581!val!1)\r\n  (define-fun null-var1201 () var1201\r\n    var1201!val!1)\r\n  (define-fun var1757 () Int\r\n    87)\r\n  (define-fun var3581-WEEK_OF_MONTH_STRATEGY () var1699\r\n    var1699!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.08115744590759277,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3581 is 2\r\n; rep: (as @var3581_0 var3581)\r\n; rep: (as @var3581_1 var3581)\r\n; cardinality of var1201 is 2\r\n; rep: (as @var1201_0 var1201)\r\n; rep: (as @var1201_1 var1201)\r\n; cardinality of var1699 is 1\r\n; rep: (as @var1699_0 var1699)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var3581 () var3581 (as @var3581_0 var3581))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var1201 () var1201 (as @var1201_0 var1201))\r\n(define-fun var3581-WEEK_OF_MONTH_STRATEGY () var1699 (as @var1699_0 var1699))\r\n(define-fun var3086 () var3581 (as @var3581_1 var3581))\r\n(define-fun var1757 () Int 87)\r\n(define-fun var1016 () Int 0)\r\n(define-fun var1940 () var1201 (as @var1201_1 var1201))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35856384,
            "run_time": 0.10386395454406738,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3581:\n  ;;   var3581!val!0 var3581!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3581!val!0 () var3581)\n  (declare-fun var3581!val!1 () var3581)\n  ;; cardinality constraint:\n  (forall ((x var3581)) (or (= x var3581!val!0) (= x var3581!val!1)))\n  ;; -----------\n  ;; universe for var1201:\n  ;;   var1201!val!1 var1201!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1201!val!1 () var1201)\n  (declare-fun var1201!val!0 () var1201)\n  ;; cardinality constraint:\n  (forall ((x var1201)) (or (= x var1201!val!1) (= x var1201!val!0)))\n  ;; -----------\n  (define-fun null-var1201 () var1201\n    var1201!val!1)\n  (define-fun var3086 () var3581\n    var3581!val!0)\n  (define-fun var1016 () Int\n    89)\n  (define-fun var2465 () Int\n    var1757)\n  (define-fun null-Int () Int\n    88)\n  (define-fun var1940 () var1201\n    var1201!val!0)\n  (define-fun null-var3581 () var3581\n    var3581!val!1)\n  (define-fun var1088 () var1699\n    var3581-WEEK_OF_MONTH_STRATEGY)\n  (define-fun var1757 () Int\n    87)\n  (define-fun var3581-WEEK_OF_MONTH_STRATEGY () var1699\n    var1699!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152473600,
            "run_time": 1.693953037261963,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1940 () var1201 var1201!8)\r\n  (define-fun var1016 () Int 1)\r\n  (define-fun var1757 () Int 87)\r\n  (define-fun var3086 () var3581 var3581!6)\r\n  (define-fun null-var1201 () var1201 var1201!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3581 () var3581 var3581!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser",
            "c0 := @parameter0: char",
            "i1 := @parameter1: int",
            "r1 := @parameter2: java.util.Calendar",
            "$i2 = (int) c0",
            "tableswitch($i2) {     case 68: goto $r20 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY>;     case 69: goto $r19 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(7, r1);     case 70: goto $r18 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY>;     case 71: goto $r17 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(0, r1);     case 72: goto $r16 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY>;     case 73: goto $r30 = new java.lang.IllegalArgumentException;     case 74: goto $r30 = new java.lang.IllegalArgumentException;     case 75: goto $r15 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY>;     case 76: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 77: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 78: goto $r30 = new java.lang.IllegalArgumentException;     case 79: goto $r30 = new java.lang.IllegalArgumentException;     case 80: goto $r30 = new java.lang.IllegalArgumentException;     case 81: goto $r30 = new java.lang.IllegalArgumentException;     case 82: goto $r30 = new java.lang.IllegalArgumentException;     case 83: goto $r14 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY>;     case 84: goto $r30 = new java.lang.IllegalArgumentException;     case 85: goto $r30 = new java.lang.IllegalArgumentException;     case 86: goto $r30 = new java.lang.IllegalArgumentException;     case 87: goto $r13 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY>;     case 88: goto $r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int)>(i1);     case 89: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 90: goto if i1 != 2 goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     case 91: goto $r30 = new java.lang.IllegalArgumentException;     case 92: goto $r30 = new java.lang.IllegalArgumentException;     case 93: goto $r30 = new java.lang.IllegalArgumentException;     case 94: goto $r30 = new java.lang.IllegalArgumentException;     case 95: goto $r30 = new java.lang.IllegalArgumentException;     case 96: goto $r30 = new java.lang.IllegalArgumentException;     case 97: goto $r10 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(9, r1);     case 98: goto $r30 = new java.lang.IllegalArgumentException;     case 99: goto $r30 = new java.lang.IllegalArgumentException;     case 100: goto $r9 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY>;     case 101: goto $r30 = new java.lang.IllegalArgumentException;     case 102: goto $r30 = new java.lang.IllegalArgumentException;     case 103: goto $r30 = new java.lang.IllegalArgumentException;     case 104: goto $r8 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR12_STRATEGY>;     case 105: goto $r30 = new java.lang.IllegalArgumentException;     case 106: goto $r30 = new java.lang.IllegalArgumentException;     case 107: goto $r7 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR24_OF_DAY_STRATEGY>;     case 108: goto $r30 = new java.lang.IllegalArgumentException;     case 109: goto $r6 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY>;     case 110: goto $r30 = new java.lang.IllegalArgumentException;     case 111: goto $r30 = new java.lang.IllegalArgumentException;     case 112: goto $r30 = new java.lang.IllegalArgumentException;     case 113: goto $r30 = new java.lang.IllegalArgumentException;     case 114: goto $r30 = new java.lang.IllegalArgumentException;     case 115: goto $r5 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY>;     case 116: goto $r30 = new java.lang.IllegalArgumentException;     case 117: goto $r4 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_STRATEGY>;     case 118: goto $r30 = new java.lang.IllegalArgumentException;     case 119: goto $r3 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY>;     case 120: goto $r30 = new java.lang.IllegalArgumentException;     case 121: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 122: goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     default: goto $r30 = new java.lang.IllegalArgumentException; }",
            "$r13 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY>",
            "return $r13"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__validateIndex__-1908911276\\6419.smt2",
        "z3": {
            "memory": 32268288,
            "run_time": 0.12224483489990234,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2287:\r\n  ;;   var2287!val!0 var2287!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2287!val!0 () var2287)\r\n  (declare-fun var2287!val!1 () var2287)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2287)) (or (= x var2287!val!0) (= x var2287!val!1)))\r\n  ;; -----------\r\n  (define-fun var1144 () var2287\r\n    var2287!val!0)\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun var2574 () var3191\r\n    var3191-init)\r\n  (define-fun var156 () Int\r\n    0)\r\n  (define-fun var1092 () Int\r\n    (size/1389889126 var1144))\r\n  (define-fun null-var2287 () var2287\r\n    var2287!val!1)\r\n  (define-fun var3191-init () var3191\r\n    var3191!val!0)\r\n  (define-fun var2574!1 () var3191\r\n    var3191!val!0)\r\n  (define-fun var156!1 () Int\r\n    0)\r\n  (define-fun size/1389889126 ((x!0 var2287)) Int\r\n    (- 1))\r\n  (define-fun <init>/-25822930 ((x!0 var3191) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7372800,
            "run_time": 0.07676029205322266,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2287 is 2\r\n; rep: (as @var2287_0 var2287)\r\n; rep: (as @var2287_1 var2287)\r\n; cardinality of var3191 is 1\r\n; rep: (as @var3191_0 var3191)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var2287)) Int (- 1))\r\n(define-fun var3191-init () var3191 (as @var3191_0 var3191))\r\n(define-fun <init>/-25822930 ((BOUND_VARIABLE_472 var3191) (BOUND_VARIABLE_473 Int)) void (as @void_0 void))\r\n(define-fun null-var2287 () var2287 (as @var2287_0 var2287))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1144 () var2287 (as @var2287_1 var2287))\r\n(define-fun var156 () Int 0)\r\n(define-fun var2574!1 () var3191 (as @var3191_0 var3191))\r\n(define-fun var156!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36110336,
            "run_time": 0.1244955062866211,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2287:\n  ;;   var2287!val!0 var2287!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2287!val!0 () var2287)\n  (declare-fun var2287!val!1 () var2287)\n  ;; cardinality constraint:\n  (forall ((x var2287)) (or (= x var2287!val!0) (= x var2287!val!1)))\n  ;; -----------\n  (define-fun var1144 () var2287\n    var2287!val!0)\n  (define-fun null-Int () Int\n    1)\n  (define-fun var1092 () Int\n    (size/1389889126 var1144))\n  (define-fun var156 () Int\n    0)\n  (define-fun null-var2287 () var2287\n    var2287!val!1)\n  (define-fun var2574 () var3191\n    var3191-init)\n  (define-fun var3191-init () var3191\n    var3191!val!0)\n  (define-fun var2574!1 () var3191\n    var3191!val!0)\n  (define-fun var156!1 () Int\n    0)\n  (define-fun size/1389889126 ((x!0 var2287)) Int\n    (- 1))\n  (define-fun <init>/-25822930 ((x!0 var3191) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140832768,
            "run_time": 1.9116365909576416,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var156 () Int 9)\r\n  (define-fun var1144 () var2287 var2287!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var2287 () var2287 var2287!2)\r\n  (define-fun size/1389889126 ((x!0 var2287)) Int (ite (= x!0 var2287!4) 8 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>"
        ],
        "api_count": {
            "<java.lang.StringIndexOutOfBoundsException: void <init>(int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "if i0 < 0 goto $r0 = new java.lang.StringIndexOutOfBoundsException",
            "$i1 = r1.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i0 <= $i1 goto return",
            "$r0 = new java.lang.StringIndexOutOfBoundsException",
            "specialinvoke $r0.<java.lang.StringIndexOutOfBoundsException: void <init>(int)>(i0)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__subSequence__423694995\\5887.smt2",
        "z3": {
            "memory": 31846400,
            "run_time": 0.19902610778808594,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1503:\r\n  ;;   var1503!val!1 var1503!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1503!val!1 () var1503)\r\n  (declare-fun var1503!val!0 () var1503)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1503)) (or (= x var1503!val!1) (= x var1503!val!0)))\r\n  ;; -----------\r\n  (define-fun var2416 () Int\r\n    0)\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun null-var1503 () var1503\r\n    var1503!val!1)\r\n  (define-fun var1294 () Int\r\n    0)\r\n  (define-fun var467 () Int\r\n    (size/1389889126 var3253))\r\n  (define-fun var2269 () String\r\n    (substring/-694008227 var3253 var2416 var1294))\r\n  (define-fun var3253 () var1503\r\n    var1503!val!0)\r\n  (define-fun size/1389889126 ((x!0 var1503)) Int\r\n    0)\r\n  (define-fun substring/-694008227 ((x!0 var1503) (x!1 Int) (x!2 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11055104,
            "run_time": 0.04497790336608887,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1503 is 2\r\n; rep: (as @var1503_0 var1503)\r\n; rep: (as @var1503_1 var1503)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var1503)) Int 0)\r\n(define-fun substring/-694008227 ((BOUND_VARIABLE_491 var1503) (BOUND_VARIABLE_492 Int) (BOUND_VARIABLE_493 Int)) String \"\")\r\n(define-fun null-var1503 () var1503 (as @var1503_0 var1503))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3253 () var1503 (as @var1503_1 var1503))\r\n(define-fun var2416 () Int 0)\r\n(define-fun var1294 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36753408,
            "run_time": 0.11244988441467285,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1503:\n  ;;   var1503!val!1 var1503!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1503!val!1 () var1503)\n  (declare-fun var1503!val!0 () var1503)\n  ;; cardinality constraint:\n  (forall ((x var1503)) (or (= x var1503!val!1) (= x var1503!val!0)))\n  ;; -----------\n  (define-fun var2416 () Int\n    0)\n  (define-fun null-Int () Int\n    1)\n  (define-fun null-var1503 () var1503\n    var1503!val!1)\n  (define-fun var1294 () Int\n    0)\n  (define-fun var2269 () String\n    (substring/-694008227 var3253 var2416 var1294))\n  (define-fun var467 () Int\n    (size/1389889126 var3253))\n  (define-fun var3253 () var1503\n    var1503!val!0)\n  (define-fun size/1389889126 ((x!0 var1503)) Int\n    0)\n  (define-fun substring/-694008227 ((x!0 var1503) (x!1 Int) (x!2 Int)) String\n    \"\")\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151425024,
            "run_time": 1.9849472045898438,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1294 () Int 0)\r\n  (define-fun var2416 () Int 0)\r\n  (define-fun var3253 () var1503 var1503!4)\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-var1503 () var1503 var1503!2)\r\n  (define-fun size/1389889126 ((x!0 var1503)) Int (ite (= x!0 var1503!4) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 7,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "i1 := @parameter1: int",
            "if i0 >= 0 goto $i2 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "$i2 = r0.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i1 <= $i2 goto (branch)",
            "if i0 <= i1 goto $r1 = virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: java.lang.String substring(int,int)>(i0, i1)",
            "$r1 = virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: java.lang.String substring(int,int)>(i0, i1)",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__\u300ainit\u300b__-1449367412\\3250.smt2",
        "z3": {
            "memory": 31752192,
            "run_time": 0.12238669395446777,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2303:\r\n  ;;   var2303!val!0 var2303!val!2 var2303!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2303!val!0 () var2303)\r\n  (declare-fun var2303!val!2 () var2303)\r\n  (declare-fun var2303!val!1 () var2303)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2303))\r\n          (or (= x var2303!val!0) (= x var2303!val!2) (= x var2303!val!1)))\r\n  ;; -----------\r\n  (define-fun var2669 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var3992 () Int\r\n    (+ (str.len var3652) 32))\r\n  (define-fun var1514!2 () var2303\r\n    var2303!val!2)\r\n  (define-fun var3652 () String\r\n    \"A\")\r\n  (define-fun var2499 () Int\r\n    (str.len var3652))\r\n  (define-fun var1514 () var2303\r\n    var2303!val!0)\r\n  (define-fun null-var2303 () var2303\r\n    var2303!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun arr-Int-init () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var1514!1 () var2303\r\n    var2303!val!0)\r\n  (define-fun var3652!1 () String\r\n    \"\")\r\n  (define-fun var1514!3 () var2303\r\n    var2303!val!0)\r\n  (define-fun buffer/1389889126 ((x!0 var2303)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun append/1659648310 ((x!0 var2303) (x!1 String)) var2303\r\n    var2303!val!0)\r\n  (define-fun cast-from-var2303-to-var1645 ((x!0 var2303)) var1645\r\n    var1645!val!0)\r\n  (define-fun <init>/-279557996 ((x!0 var1645)) void\r\n    void!val!0)\r\n)\r\n(error \"line 44 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.23018217086791992,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2303 is 3\r\n; rep: (as @var2303_0 var2303)\r\n; rep: (as @var2303_1 var2303)\r\n; rep: (as @var2303_2 var2303)\r\n; cardinality of var2175 is 1\r\n; rep: (as @var2175_0 var2175)\r\n; cardinality of var1645 is 1\r\n; rep: (as @var1645_0 var1645)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun <init>/-279557996 ((BOUND_VARIABLE_548 var1645)) void (as @void_0 void))\r\n(define-fun cast-from-var2303-to-var1645 ((BOUND_VARIABLE_551 var2303)) var1645 (as @var1645_0 var1645))\r\n(define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun buffer/1389889126 ((BOUND_VARIABLE_554 var2303)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun append/1659648310 ((BOUND_VARIABLE_560 var2303) (BOUND_VARIABLE_561 String)) var2303 (as @var2303_0 var2303))\r\n(define-fun null-var2303 () var2303 (as @var2303_0 var2303))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1514 () var2303 (as @var2303_1 var2303))\r\n(define-fun var3652 () String \"\")\r\n(define-fun var1514!1 () var2303 (as @var2303_0 var2303))\r\n(define-fun var1514!2 () var2303 (as @var2303_2 var2303))\r\n(define-fun var1514!3 () var2303 (as @var2303_0 var2303))\r\n(define-fun var3652!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36864000,
            "run_time": 0.18347740173339844,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2303:\n  ;;   var2303!val!0 var2303!val!2 var2303!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2303!val!0 () var2303)\n  (declare-fun var2303!val!2 () var2303)\n  (declare-fun var2303!val!1 () var2303)\n  ;; cardinality constraint:\n  (forall ((x var2303))\n          (or (= x var2303!val!0) (= x var2303!val!2) (= x var2303!val!1)))\n  ;; -----------\n  (define-fun arr-Int-init () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var3992 () Int\n    (+ (str.len var3652) 32))\n  (define-fun var3652 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2669 () (Array Int Int)\n    arr-Int-init)\n  (define-fun var1514!2 () var2303\n    var2303!val!2)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-var2303 () var2303\n    var2303!val!1)\n  (define-fun var1514 () var2303\n    var2303!val!0)\n  (define-fun var2499 () Int\n    (str.len var3652))\n  (define-fun var1514!1 () var2303\n    var2303!val!0)\n  (define-fun var3652!1 () String\n    \"\")\n  (define-fun var1514!3 () var2303\n    var2303!val!0)\n  (define-fun buffer/1389889126 ((x!0 var2303)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun append/1659648310 ((x!0 var2303) (x!1 String)) var2303\n    var2303!val!0)\n  (define-fun cast-from-var2303-to-var1645 ((x!0 var2303)) var1645\n    var1645!val!0)\n  (define-fun <init>/-279557996 ((x!0 var1645)) void\n    void!val!0)\n)\n(error \"line 44 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168824832,
            "run_time": 2.178293228149414,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1514!2 () var2303 var2303!8)\r\n  (define-fun var3652 () String \"\\u{0}\")\r\n  (define-fun var1514 () var2303 var2303!6)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2303 () var2303 var2303!4)\r\n  (define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun buffer/1389889126 ((x!0 var2303)) (Array Int Int) (ite (= x!0 var2303!8) ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrBuilder",
            "r1 := @parameter0: java.lang.String",
            "specialinvoke r0.<java.lang.Object: void <init>()>()",
            "if r1 != null goto $i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "$i1 = $i0 + 32",
            "$r2 = newarray (char)[$i1]",
            "r0.<org.apache.commons.lang3.text.StrBuilder: char[] buffer> = $r2",
            "virtualinvoke r0.<org.apache.commons.lang3.text.StrBuilder: org.apache.commons.lang3.text.StrBuilder append(java.lang.String)>(r1)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrTokenizer__\u300ainit\u300b__1532791368\\3643.smt2",
        "z3": {
            "memory": 31293440,
            "run_time": 0.14876794815063477,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 59 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.03147697448730469,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35065856,
            "run_time": 0.11151480674743652,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 59 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165208064,
            "run_time": 2.0828640460968018,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 10,
        "assertion_count": 17,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrTokenizer",
            "r5 := @parameter0: java.lang.String",
            "specialinvoke r0.<java.lang.Object: void <init>()>()",
            "$r1 = staticinvoke <org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher splitMatcher()>()",
            "r0.<org.apache.commons.lang3.text.StrTokenizer: org.apache.commons.lang3.text.StrMatcher delimMatcher> = $r1",
            "$r2 = staticinvoke <org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher noneMatcher()>()",
            "r0.<org.apache.commons.lang3.text.StrTokenizer: org.apache.commons.lang3.text.StrMatcher quoteMatcher> = $r2",
            "$r3 = staticinvoke <org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher noneMatcher()>()",
            "r0.<org.apache.commons.lang3.text.StrTokenizer: org.apache.commons.lang3.text.StrMatcher ignoredMatcher> = $r3",
            "$r4 = staticinvoke <org.apache.commons.lang3.text.StrMatcher: org.apache.commons.lang3.text.StrMatcher noneMatcher()>()",
            "r0.<org.apache.commons.lang3.text.StrTokenizer: org.apache.commons.lang3.text.StrMatcher trimmerMatcher> = $r4",
            "r0.<org.apache.commons.lang3.text.StrTokenizer: boolean ignoreEmptyTokens> = 1",
            "if r5 == null goto r0.<org.apache.commons.lang3.text.StrTokenizer: char[] chars> = null",
            "r0.<org.apache.commons.lang3.text.StrTokenizer: char[] chars> = null",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__getStrategy__1867214738\\4358.smt2",
        "z3": {
            "memory": 32161792,
            "run_time": 0.13528203964233398,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2650:\r\n  ;;   var2650!val!1 var2650!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2650!val!1 () var2650)\r\n  (declare-fun var2650!val!0 () var2650)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2650)) (or (= x var2650!val!1) (= x var2650!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3315:\r\n  ;;   var3315!val!1 var3315!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3315!val!1 () var3315)\r\n  (declare-fun var3315!val!0 () var3315)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3315)) (or (= x var3315!val!1) (= x var3315!val!0)))\r\n  ;; -----------\r\n  (define-fun var2214 () Int\r\n    117)\r\n  (define-fun var1036 () var2650\r\n    var2650!val!0)\r\n  (define-fun null-var3315 () var3315\r\n    var3315!val!1)\r\n  (define-fun var85 () var2291\r\n    var3315-SECOND_STRATEGY)\r\n  (define-fun null-Int () Int\r\n    116)\r\n  (define-fun var1090 () Int\r\n    var2180)\r\n  (define-fun var3274 () var3315\r\n    var3315!val!0)\r\n  (define-fun null-var2650 () var2650\r\n    var2650!val!1)\r\n  (define-fun var2180 () Int\r\n    115)\r\n  (define-fun var3315-SECOND_STRATEGY () var2291\r\n    var2291!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11571200,
            "run_time": 0.046195268630981445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3315 is 2\r\n; rep: (as @var3315_0 var3315)\r\n; rep: (as @var3315_1 var3315)\r\n; cardinality of var2650 is 2\r\n; rep: (as @var2650_0 var2650)\r\n; rep: (as @var2650_1 var2650)\r\n; cardinality of var2291 is 1\r\n; rep: (as @var2291_0 var2291)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var3315 () var3315 (as @var3315_0 var3315))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var2650 () var2650 (as @var2650_0 var2650))\r\n(define-fun var3315-SECOND_STRATEGY () var2291 (as @var2291_0 var2291))\r\n(define-fun var3274 () var3315 (as @var3315_1 var3315))\r\n(define-fun var2180 () Int 115)\r\n(define-fun var2214 () Int 0)\r\n(define-fun var1036 () var2650 (as @var2650_1 var2650))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35958784,
            "run_time": 0.1247718334197998,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2650:\n  ;;   var2650!val!1 var2650!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2650!val!1 () var2650)\n  (declare-fun var2650!val!0 () var2650)\n  ;; cardinality constraint:\n  (forall ((x var2650)) (or (= x var2650!val!1) (= x var2650!val!0)))\n  ;; -----------\n  ;; universe for var3315:\n  ;;   var3315!val!1 var3315!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3315!val!1 () var3315)\n  (declare-fun var3315!val!0 () var3315)\n  ;; cardinality constraint:\n  (forall ((x var3315)) (or (= x var3315!val!1) (= x var3315!val!0)))\n  ;; -----------\n  (define-fun var1090 () Int\n    var2180)\n  (define-fun var2214 () Int\n    117)\n  (define-fun var1036 () var2650\n    var2650!val!0)\n  (define-fun null-var3315 () var3315\n    var3315!val!1)\n  (define-fun null-Int () Int\n    116)\n  (define-fun var85 () var2291\n    var3315-SECOND_STRATEGY)\n  (define-fun var3274 () var3315\n    var3315!val!0)\n  (define-fun null-var2650 () var2650\n    var2650!val!1)\n  (define-fun var2180 () Int\n    115)\n  (define-fun var3315-SECOND_STRATEGY () var2291\n    var2291!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154013696,
            "run_time": 1.8847661018371582,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1036 () var2650 var2650!8)\r\n  (define-fun var2214 () Int 1)\r\n  (define-fun var2180 () Int 115)\r\n  (define-fun var3274 () var3315 var3315!6)\r\n  (define-fun null-var2650 () var2650 var2650!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3315 () var3315 var3315!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser",
            "c0 := @parameter0: char",
            "i1 := @parameter1: int",
            "r1 := @parameter2: java.util.Calendar",
            "$i2 = (int) c0",
            "tableswitch($i2) {     case 68: goto $r20 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY>;     case 69: goto $r19 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(7, r1);     case 70: goto $r18 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY>;     case 71: goto $r17 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(0, r1);     case 72: goto $r16 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY>;     case 73: goto $r30 = new java.lang.IllegalArgumentException;     case 74: goto $r30 = new java.lang.IllegalArgumentException;     case 75: goto $r15 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY>;     case 76: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 77: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 78: goto $r30 = new java.lang.IllegalArgumentException;     case 79: goto $r30 = new java.lang.IllegalArgumentException;     case 80: goto $r30 = new java.lang.IllegalArgumentException;     case 81: goto $r30 = new java.lang.IllegalArgumentException;     case 82: goto $r30 = new java.lang.IllegalArgumentException;     case 83: goto $r14 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY>;     case 84: goto $r30 = new java.lang.IllegalArgumentException;     case 85: goto $r30 = new java.lang.IllegalArgumentException;     case 86: goto $r30 = new java.lang.IllegalArgumentException;     case 87: goto $r13 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY>;     case 88: goto $r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int)>(i1);     case 89: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 90: goto if i1 != 2 goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     case 91: goto $r30 = new java.lang.IllegalArgumentException;     case 92: goto $r30 = new java.lang.IllegalArgumentException;     case 93: goto $r30 = new java.lang.IllegalArgumentException;     case 94: goto $r30 = new java.lang.IllegalArgumentException;     case 95: goto $r30 = new java.lang.IllegalArgumentException;     case 96: goto $r30 = new java.lang.IllegalArgumentException;     case 97: goto $r10 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(9, r1);     case 98: goto $r30 = new java.lang.IllegalArgumentException;     case 99: goto $r30 = new java.lang.IllegalArgumentException;     case 100: goto $r9 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY>;     case 101: goto $r30 = new java.lang.IllegalArgumentException;     case 102: goto $r30 = new java.lang.IllegalArgumentException;     case 103: goto $r30 = new java.lang.IllegalArgumentException;     case 104: goto $r8 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR12_STRATEGY>;     case 105: goto $r30 = new java.lang.IllegalArgumentException;     case 106: goto $r30 = new java.lang.IllegalArgumentException;     case 107: goto $r7 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR24_OF_DAY_STRATEGY>;     case 108: goto $r30 = new java.lang.IllegalArgumentException;     case 109: goto $r6 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY>;     case 110: goto $r30 = new java.lang.IllegalArgumentException;     case 111: goto $r30 = new java.lang.IllegalArgumentException;     case 112: goto $r30 = new java.lang.IllegalArgumentException;     case 113: goto $r30 = new java.lang.IllegalArgumentException;     case 114: goto $r30 = new java.lang.IllegalArgumentException;     case 115: goto $r5 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY>;     case 116: goto $r30 = new java.lang.IllegalArgumentException;     case 117: goto $r4 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_STRATEGY>;     case 118: goto $r30 = new java.lang.IllegalArgumentException;     case 119: goto $r3 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY>;     case 120: goto $r30 = new java.lang.IllegalArgumentException;     case 121: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 122: goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     default: goto $r30 = new java.lang.IllegalArgumentException; }",
            "$r5 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY>",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$NumberStrategy__toString__861679451\\3891.smt2",
        "z3": {
            "memory": 31981568,
            "run_time": 0.10532045364379883,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2437:\r\n  ;;   var2437!val!1 var2437!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2437!val!1 () var2437)\r\n  (declare-fun var2437!val!0 () var2437)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2437)) (or (= x var2437!val!1) (= x var2437!val!0)))\r\n  ;; -----------\r\n  (define-fun var806 () String\r\n    (str.++ var2885!1\r\n        \"NumberStrategy [field=\"\r\n        (str.from_int (field/-524421381 var848))\r\n        \"]\"))\r\n  (define-fun var589 () String\r\n    (str.++ var2885!1\r\n        \"NumberStrategy [field=\"\r\n        (str.from_int (field/-524421381 var848))))\r\n  (define-fun var2449!1 () String\r\n    \"NumberStrategy [field=\")\r\n  (define-fun null-var2437 () var2437\r\n    var2437!val!1)\r\n  (define-fun var850 () String\r\n    (str.++ var2885!1\r\n        \"NumberStrategy [field=\"\r\n        (str.from_int (field/-524421381 var848))\r\n        \"]\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2885 () String\r\n    String-init)\r\n  (define-fun var2495 () Int\r\n    (field/-524421381 var848))\r\n  (define-fun var848 () var2437\r\n    var2437!val!0)\r\n  (define-fun var2449 () String\r\n    (str.++ var2885!1 \"NumberStrategy [field=\"))\r\n  (define-fun var2885!1 () String\r\n    \"\")\r\n  (define-fun var589!1 () String\r\n    \"NumberStrategy [field=0]\")\r\n  (define-fun var2885!2 () String\r\n    \"NumberStrategy [field=\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun field/-524421381 ((x!0 var2437)) Int\r\n    0)\r\n)\r\n(error \"line 40 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1654784,
            "run_time": 0.1721954345703125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2437 is 2\r\n; rep: (as @var2437_0 var2437)\r\n; rep: (as @var2437_1 var2437)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun field/-524421381 ((BOUND_VARIABLE_931 var2437)) Int 0)\r\n(define-fun null-var2437 () var2437 (as @var2437_0 var2437))\r\n(define-fun var848 () var2437 (as @var2437_1 var2437))\r\n(define-fun var2885!1 () String \"\")\r\n(define-fun var2885!2 () String \"NumberStrategy [field=\")\r\n(define-fun var2449!1 () String \"NumberStrategy [field=\")\r\n(define-fun var589!1 () String \"NumberStrategy [field=0]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36978688,
            "run_time": 0.1835463047027588,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2437:\n  ;;   var2437!val!1 var2437!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2437!val!1 () var2437)\n  (declare-fun var2437!val!0 () var2437)\n  ;; cardinality constraint:\n  (forall ((x var2437)) (or (= x var2437!val!1) (= x var2437!val!0)))\n  ;; -----------\n  (define-fun var850 () String\n    (str.++ var2885!1\n        \"NumberStrategy [field=\"\n        (str.from_int (field/-524421381 var848))\n        \"]\"))\n  (define-fun var2885!2 () String\n    \"NumberStrategy [field=\")\n  (define-fun var2885 () String\n    String-init)\n  (define-fun null-var2437 () var2437\n    var2437!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2449 () String\n    (str.++ var2885!1 \"NumberStrategy [field=\"))\n  (define-fun var848 () var2437\n    var2437!val!0)\n  (define-fun var2449!1 () String\n    \"NumberStrategy [field=\")\n  (define-fun var2495 () Int\n    (field/-524421381 var848))\n  (define-fun var806 () String\n    (str.++ var2885!1\n        \"NumberStrategy [field=\"\n        (str.from_int (field/-524421381 var848))\n        \"]\"))\n  (define-fun var589 () String\n    (str.++ var2885!1\n        \"NumberStrategy [field=\"\n        (str.from_int (field/-524421381 var848))))\n  (define-fun var2885!1 () String\n    \"\")\n  (define-fun var589!1 () String\n    \"NumberStrategy [field=0]\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun field/-524421381 ((x!0 var2437)) Int\n    0)\n)\n(error \"line 40 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 215191552,
            "run_time": 2.8655362129211426,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var589!1 () String \"NumberStrategy [field=]\")\r\n  (define-fun var2449!1 () String \"NumberStrategy [field=\")\r\n  (define-fun var2885!2 () String \"NumberStrategy [field=\")\r\n  (define-fun var2885!1 () String \"\")\r\n  (define-fun var848 () var2437 var2437!48)\r\n  (define-fun null-var2437 () var2437 var2437!46)\r\n  (define-fun abbrev_105 ((x!0 Int)) String (ite (= x!0 0) \"NumberStrategy [field=\" \"\"))\r\n  (define-fun field/-524421381 ((x!0 var2437)) Int (ite (= x!0 var2437!48) (- 6) 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDateParser$NumberStrategy",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"NumberStrategy [field=\")",
            "$i0 = r1.<org.apache.commons.lang3.time.FastDateParser$NumberStrategy: int field>",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDatePrinter__format__-244780825\\4252.smt2",
        "z3": {
            "memory": 32022528,
            "run_time": 0.15741324424743652,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var925:\r\n  ;;   var925!val!0 var925!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var925!val!0 () var925)\r\n  (declare-fun var925!val!1 () var925)\r\n  ;; cardinality constraint:\r\n  (forall ((x var925)) (or (= x var925!val!0) (= x var925!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1017:\r\n  ;;   var1017!val!0 var1017!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1017!val!0 () var1017)\r\n  (declare-fun var1017!val!1 () var1017)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1017)) (or (= x var1017!val!0) (= x var1017!val!1)))\r\n  ;; -----------\r\n  (define-fun var3096 () var925\r\n    var925!val!0)\r\n  (define-fun var3221 () var2237\r\n    (format/2070255028 var3096 var1558 (cast-from-String-to-var2237 var1832!1)))\r\n  (define-fun var1341 () String\r\n    (cast-from-var2237-to-String\r\n  (format/2070255028 var3096 var1558 (cast-from-String-to-var2237 var1832!1))))\r\n  (define-fun null-var1017 () var1017\r\n    var1017!val!1)\r\n  (define-fun var1558 () var1017\r\n    var1017!val!0)\r\n  (define-fun null-var925 () var925\r\n    var925!val!1)\r\n  (define-fun var2542 () String\r\n    (cast-from-var2237-to-String\r\n  (format/2070255028 var3096 var1558 (cast-from-String-to-var2237 var1832!1))))\r\n  (define-fun var2565 () Int\r\n    (maxLengthEstimate/1549876084 var3096))\r\n  (define-fun var1832 () String\r\n    String-init)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2565!1 () Int\r\n    0)\r\n  (define-fun var1832!1 () String\r\n    \"\")\r\n  (define-fun maxLengthEstimate/1549876084 ((x!0 var925)) Int\r\n    0)\r\n  (define-fun <init>/543593434 ((x!0 String) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var2237-to-String ((x!0 var2237)) String\r\n    \"\")\r\n  (define-fun cast-from-String-to-var2237 ((x!0 String)) var2237\r\n    var2237!val!0)\r\n  (define-fun format/2070255028 ((x!0 var925) (x!1 var1017) (x!2 var2237)) var2237\r\n    var2237!val!0)\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.03069925308227539,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var925 is 2\r\n; rep: (as @var925_0 var925)\r\n; rep: (as @var925_1 var925)\r\n; cardinality of var1017 is 2\r\n; rep: (as @var1017_0 var1017)\r\n; rep: (as @var1017_1 var1017)\r\n; cardinality of var2237 is 1\r\n; rep: (as @var2237_0 var2237)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun maxLengthEstimate/1549876084 ((BOUND_VARIABLE_468 var925)) Int 0)\r\n(define-fun <init>/543593434 ((BOUND_VARIABLE_471 String) (BOUND_VARIABLE_472 Int)) void (as @void_0 void))\r\n(define-fun format/2070255028 ((BOUND_VARIABLE_475 var925) (BOUND_VARIABLE_476 var1017) (BOUND_VARIABLE_477 var2237)) var2237 (as @var2237_0 var2237))\r\n(define-fun cast-from-String-to-var2237 ((BOUND_VARIABLE_480 String)) var2237 (as @var2237_0 var2237))\r\n(define-fun cast-from-var2237-to-String ((BOUND_VARIABLE_483 var2237)) String \"\")\r\n(define-fun null-var925 () var925 (as @var925_0 var925))\r\n(define-fun null-var1017 () var1017 (as @var1017_0 var1017))\r\n(define-fun var3096 () var925 (as @var925_1 var925))\r\n(define-fun var1558 () var1017 (as @var1017_1 var1017))\r\n(define-fun var1832!1 () String \"\")\r\n(define-fun var2565!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35794944,
            "run_time": 0.10753965377807617,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var925:\n  ;;   var925!val!0 var925!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var925!val!0 () var925)\n  (declare-fun var925!val!1 () var925)\n  ;; cardinality constraint:\n  (forall ((x var925)) (or (= x var925!val!0) (= x var925!val!1)))\n  ;; -----------\n  ;; universe for var1017:\n  ;;   var1017!val!0 var1017!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1017!val!0 () var1017)\n  (declare-fun var1017!val!1 () var1017)\n  ;; cardinality constraint:\n  (forall ((x var1017)) (or (= x var1017!val!0) (= x var1017!val!1)))\n  ;; -----------\n  (define-fun var1341 () String\n    (cast-from-var2237-to-String\n  (format/2070255028 var3096 var1558 (cast-from-String-to-var2237 var1832!1))))\n  (define-fun var3096 () var925\n    var925!val!0)\n  (define-fun var2542 () String\n    (cast-from-var2237-to-String\n  (format/2070255028 var3096 var1558 (cast-from-String-to-var2237 var1832!1))))\n  (define-fun null-var1017 () var1017\n    var1017!val!1)\n  (define-fun var1558 () var1017\n    var1017!val!0)\n  (define-fun var3221 () var2237\n    (format/2070255028 var3096 var1558 (cast-from-String-to-var2237 var1832!1)))\n  (define-fun var1832 () String\n    String-init)\n  (define-fun null-var925 () var925\n    var925!val!1)\n  (define-fun var2565 () Int\n    (maxLengthEstimate/1549876084 var3096))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2565!1 () Int\n    0)\n  (define-fun var1832!1 () String\n    \"\")\n  (define-fun maxLengthEstimate/1549876084 ((x!0 var925)) Int\n    0)\n  (define-fun <init>/543593434 ((x!0 String) (x!1 Int)) void\n    void!val!0)\n  (define-fun cast-from-var2237-to-String ((x!0 var2237)) String\n    \"\")\n  (define-fun cast-from-String-to-var2237 ((x!0 String)) var2237\n    var2237!val!0)\n  (define-fun format/2070255028 ((x!0 var925) (x!1 var1017) (x!2 var2237)) var2237\n    var2237!val!0)\n)\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 156340224,
            "run_time": 1.977552890777588,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1558 () var1017 var1017!8)\r\n  (define-fun var3096 () var925 var925!6)\r\n  (define-fun null-var1017 () var1017 var1017!4)\r\n  (define-fun null-var925 () var925 var925!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDatePrinter",
            "r1 := @parameter0: java.util.Calendar",
            "$r2 = new java.lang.StringBuilder",
            "$i0 = r0.<org.apache.commons.lang3.time.FastDatePrinter: int maxLengthEstimate>",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i0)",
            "$r3 = virtualinvoke r0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.Appendable format(java.util.Calendar,java.lang.Appendable)>(r1, $r2)",
            "$r4 = (java.lang.StringBuilder) $r3",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy__lambda$new$0__1423039154\\3965.smt2",
        "z3": {
            "memory": 32133120,
            "run_time": 0.11969828605651855,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1484 () String\r\n    (append/-1166366385 var3464 124))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3949 () String\r\n    \"B\")\r\n  (define-fun var3464 () String\r\n    \"\")\r\n  (define-fun var3464!1 () String\r\n    \"\")\r\n  (define-fun var3949!1 () String\r\n    \"\")\r\n  (define-fun var1484!1 () String\r\n    \"\")\r\n  (define-fun var2925_access$700/1294968944 ((x!0 String) (x!1 String)) String\r\n    \"\")\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1650688,
            "run_time": 0.031629085540771484,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2522 is 1\r\n; rep: (as @var2522_0 var2522)\r\n; cardinality of var2925 is 1\r\n; rep: (as @var2925_0 var2925)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_615 String) (BOUND_VARIABLE_616 Int)) String \"\")\r\n(define-fun var2925_access$700/1294968944 ((BOUND_VARIABLE_619 String) (BOUND_VARIABLE_620 String)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3464 () String \"\")\r\n(define-fun var3949 () String \"\")\r\n(define-fun var3464!1 () String \"\")\r\n(define-fun var1484!1 () String \"\")\r\n(define-fun var3949!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37908480,
            "run_time": 0.3099210262298584,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 26 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132669440,
            "run_time": 2.0591766834259033,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy__lambda$new$0__1423039154\\3965.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3464!1 =\r\n     concat(var3464, rhs)\r\n   ... sat\r\n\r\n1552ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.StringBuilder",
            "r1 := @parameter1: java.lang.String",
            "$r2 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124)",
            "staticinvoke <org.apache.commons.lang3.time.FastDateParser: java.lang.StringBuilder access$700(java.lang.StringBuilder,java.lang.String)>($r2, r1)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrSubstitutor__replace__-2013768460\\3846.smt2",
        "z3": {
            "memory": 31662080,
            "run_time": 0.08859133720397949,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2063:\r\n  ;;   var2063!val!0 var2063!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2063!val!0 () var2063)\r\n  (declare-fun var2063!val!1 () var2063)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2063)) (or (= x var2063!val!0) (= x var2063!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2063 () var2063\r\n    var2063!val!1)\r\n  (define-fun var325 () var2063\r\n    var2063!val!0)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var623 () Int\r\n    (String_length/-667254855 var3300))\r\n  (define-fun var3300 () String\r\n    \"!0!\")\r\n  (define-fun var3110 () String\r\n    (replace/-2044865670 var325 var3300 0 (String_length/-667254855 var3300)))\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    0)\r\n  (define-fun replace/-2044865670 ((x!0 var2063) (x!1 String) (x!2 Int) (x!3 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1650688,
            "run_time": 0.03063654899597168,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2063 is 2\r\n; rep: (as @var2063_0 var2063)\r\n; rep: (as @var2063_1 var2063)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_length/-667254855 ((BOUND_VARIABLE_492 String)) Int 0)\r\n(define-fun replace/-2044865670 ((BOUND_VARIABLE_495 var2063) (BOUND_VARIABLE_496 String) (BOUND_VARIABLE_497 Int) (BOUND_VARIABLE_498 Int)) String \"\")\r\n(define-fun null-var2063 () var2063 (as @var2063_0 var2063))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var325 () var2063 (as @var2063_1 var2063))\r\n(define-fun var3300 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37011456,
            "run_time": 0.18607831001281738,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2063:\n  ;;   var2063!val!0 var2063!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2063!val!0 () var2063)\n  (declare-fun var2063!val!1 () var2063)\n  ;; cardinality constraint:\n  (forall ((x var2063)) (or (= x var2063!val!0) (= x var2063!val!1)))\n  ;; -----------\n  (define-fun var623 () Int\n    (String_length/-667254855 var3300))\n  (define-fun var3300 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var325 () var2063\n    var2063!val!0)\n  (define-fun null-var2063 () var2063\n    var2063!val!1)\n  (define-fun var3110 () String\n    (replace/-2044865670 var325 var3300 0 (String_length/-667254855 var3300)))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    0)\n  (define-fun replace/-2044865670 ((x!0 var2063) (x!1 String) (x!2 Int) (x!3 Int)) String\n    \"\")\n)\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 129994752,
            "run_time": 2.1377248764038086,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3300 () String \"\\u{0}\")\r\n  (define-fun var325 () var2063 var2063!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2063 () var2063 var2063!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrSubstitutor",
            "r0 := @parameter0: java.lang.CharSequence",
            "if r0 != null goto $i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "$r2 = virtualinvoke r1.<org.apache.commons.lang3.text.StrSubstitutor: java.lang.String replace(java.lang.CharSequence,int,int)>(r0, 0, $i0)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__getStrategy__1867214738\\4300.smt2",
        "z3": {
            "memory": 32174080,
            "run_time": 0.10372638702392578,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2758:\r\n  ;;   var2758!val!0 var2758!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2758!val!0 () var2758)\r\n  (declare-fun var2758!val!1 () var2758)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2758)) (or (= x var2758!val!0) (= x var2758!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2217:\r\n  ;;   var2217!val!1 var2217!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2217!val!1 () var2217)\r\n  (declare-fun var2217!val!0 () var2217)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2217)) (or (= x var2217!val!1) (= x var2217!val!0)))\r\n  ;; -----------\r\n  (define-fun var1284 () var1272\r\n    (var557_getStrategy/-364282364 var434))\r\n  (define-fun var434 () Int\r\n    90)\r\n  (define-fun null-var2758 () var2758\r\n    var2758!val!1)\r\n  (define-fun var136 () Int\r\n    var2160)\r\n  (define-fun var3302 () var2758\r\n    var2758!val!0)\r\n  (define-fun var2014 () var2217\r\n    var2217!val!0)\r\n  (define-fun null-Int () Int\r\n    89)\r\n  (define-fun null-var2217 () var2217\r\n    var2217!val!1)\r\n  (define-fun var2160 () Int\r\n    88)\r\n  (define-fun var557_getStrategy/-364282364 ((x!0 Int)) var1272\r\n    var1272!val!0)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.10856008529663086,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2217 is 2\r\n; rep: (as @var2217_0 var2217)\r\n; rep: (as @var2217_1 var2217)\r\n; cardinality of var2758 is 2\r\n; rep: (as @var2758_0 var2758)\r\n; rep: (as @var2758_1 var2758)\r\n; cardinality of var1272 is 1\r\n; rep: (as @var1272_0 var1272)\r\n; cardinality of var557 is 1\r\n; rep: (as @var557_0 var557)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var557_getStrategy/-364282364 ((BOUND_VARIABLE_766 Int)) var1272 (as @var1272_0 var1272))\r\n(define-fun null-var2217 () var2217 (as @var2217_0 var2217))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var2758 () var2758 (as @var2758_0 var2758))\r\n(define-fun var2014 () var2217 (as @var2217_1 var2217))\r\n(define-fun var2160 () Int 88)\r\n(define-fun var434 () Int 0)\r\n(define-fun var3302 () var2758 (as @var2758_1 var2758))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36081664,
            "run_time": 0.09217143058776855,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2758:\n  ;;   var2758!val!0 var2758!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2758!val!0 () var2758)\n  (declare-fun var2758!val!1 () var2758)\n  ;; cardinality constraint:\n  (forall ((x var2758)) (or (= x var2758!val!0) (= x var2758!val!1)))\n  ;; -----------\n  ;; universe for var2217:\n  ;;   var2217!val!1 var2217!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2217!val!1 () var2217)\n  (declare-fun var2217!val!0 () var2217)\n  ;; cardinality constraint:\n  (forall ((x var2217)) (or (= x var2217!val!1) (= x var2217!val!0)))\n  ;; -----------\n  (define-fun var434 () Int\n    90)\n  (define-fun null-var2758 () var2758\n    var2758!val!1)\n  (define-fun var1284 () var1272\n    (var557_getStrategy/-364282364 var434))\n  (define-fun var3302 () var2758\n    var2758!val!0)\n  (define-fun var2014 () var2217\n    var2217!val!0)\n  (define-fun var136 () Int\n    var2160)\n  (define-fun null-Int () Int\n    89)\n  (define-fun null-var2217 () var2217\n    var2217!val!1)\n  (define-fun var2160 () Int\n    88)\n  (define-fun var557_getStrategy/-364282364 ((x!0 Int)) var1272\n    var1272!val!0)\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151764992,
            "run_time": 2.042987108230591,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3302 () var2758 var2758!8)\r\n  (define-fun var434 () Int 1)\r\n  (define-fun var2160 () Int 88)\r\n  (define-fun var2014 () var2217 var2217!6)\r\n  (define-fun null-var2758 () var2758 var2758!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var2217 () var2217 var2217!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser",
            "c0 := @parameter0: char",
            "i1 := @parameter1: int",
            "r1 := @parameter2: java.util.Calendar",
            "$i2 = (int) c0",
            "tableswitch($i2) {     case 68: goto $r20 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY>;     case 69: goto $r19 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(7, r1);     case 70: goto $r18 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY>;     case 71: goto $r17 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(0, r1);     case 72: goto $r16 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY>;     case 73: goto $r30 = new java.lang.IllegalArgumentException;     case 74: goto $r30 = new java.lang.IllegalArgumentException;     case 75: goto $r15 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY>;     case 76: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 77: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 78: goto $r30 = new java.lang.IllegalArgumentException;     case 79: goto $r30 = new java.lang.IllegalArgumentException;     case 80: goto $r30 = new java.lang.IllegalArgumentException;     case 81: goto $r30 = new java.lang.IllegalArgumentException;     case 82: goto $r30 = new java.lang.IllegalArgumentException;     case 83: goto $r14 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY>;     case 84: goto $r30 = new java.lang.IllegalArgumentException;     case 85: goto $r30 = new java.lang.IllegalArgumentException;     case 86: goto $r30 = new java.lang.IllegalArgumentException;     case 87: goto $r13 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY>;     case 88: goto $r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int)>(i1);     case 89: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 90: goto if i1 != 2 goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     case 91: goto $r30 = new java.lang.IllegalArgumentException;     case 92: goto $r30 = new java.lang.IllegalArgumentException;     case 93: goto $r30 = new java.lang.IllegalArgumentException;     case 94: goto $r30 = new java.lang.IllegalArgumentException;     case 95: goto $r30 = new java.lang.IllegalArgumentException;     case 96: goto $r30 = new java.lang.IllegalArgumentException;     case 97: goto $r10 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(9, r1);     case 98: goto $r30 = new java.lang.IllegalArgumentException;     case 99: goto $r30 = new java.lang.IllegalArgumentException;     case 100: goto $r9 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY>;     case 101: goto $r30 = new java.lang.IllegalArgumentException;     case 102: goto $r30 = new java.lang.IllegalArgumentException;     case 103: goto $r30 = new java.lang.IllegalArgumentException;     case 104: goto $r8 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR12_STRATEGY>;     case 105: goto $r30 = new java.lang.IllegalArgumentException;     case 106: goto $r30 = new java.lang.IllegalArgumentException;     case 107: goto $r7 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR24_OF_DAY_STRATEGY>;     case 108: goto $r30 = new java.lang.IllegalArgumentException;     case 109: goto $r6 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY>;     case 110: goto $r30 = new java.lang.IllegalArgumentException;     case 111: goto $r30 = new java.lang.IllegalArgumentException;     case 112: goto $r30 = new java.lang.IllegalArgumentException;     case 113: goto $r30 = new java.lang.IllegalArgumentException;     case 114: goto $r30 = new java.lang.IllegalArgumentException;     case 115: goto $r5 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY>;     case 116: goto $r30 = new java.lang.IllegalArgumentException;     case 117: goto $r4 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_STRATEGY>;     case 118: goto $r30 = new java.lang.IllegalArgumentException;     case 119: goto $r3 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY>;     case 120: goto $r30 = new java.lang.IllegalArgumentException;     case 121: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 122: goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     default: goto $r30 = new java.lang.IllegalArgumentException; }",
            "$r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int)>(i1)",
            "return $r12"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.translate.UnicodeUnescaper__translate__-548774146\\3525.smt2",
        "z3": {
            "memory": 32137216,
            "run_time": 0.1195993423461914,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1721:\r\n  ;;   var1721!val!1 var1721!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1721!val!1 () var1721)\r\n  (declare-fun var1721!val!0 () var1721)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1721)) (or (= x var1721!val!1) (= x var1721!val!0)))\r\n  ;; -----------\r\n  ;; universe for var948:\r\n  ;;   var948!val!1 var948!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var948!val!1 () var948)\r\n  (declare-fun var948!val!0 () var948)\r\n  ;; cardinality constraint:\r\n  (forall ((x var948)) (or (= x var948!val!1) (= x var948!val!0)))\r\n  ;; -----------\r\n  (define-fun var918 () var1721\r\n    var1721!val!0)\r\n  (define-fun var3621 () Int\r\n    (String_charAt/1466887330 var3760 var336))\r\n  (define-fun null-var1721 () var1721\r\n    var1721!val!1)\r\n  (define-fun var1917 () Int\r\n    (String_charAt/1466887330 var3760 var336))\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var2868 () var948\r\n    var948!val!0)\r\n  (define-fun null-var948 () var948\r\n    var948!val!1)\r\n  (define-fun var3760 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var336 () Int\r\n    2)\r\n  (define-fun String_charAt/1466887330 ((x!0 String) (x!1 Int)) Int\r\n    3)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10801152,
            "run_time": 0.04665684700012207,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var948 is 2\r\n; rep: (as @var948_0 var948)\r\n; rep: (as @var948_1 var948)\r\n; cardinality of var1721 is 2\r\n; rep: (as @var1721_0 var1721)\r\n; rep: (as @var1721_1 var1721)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_charAt/1466887330 ((_arg_1 String) (_arg_2 Int)) Int 0)\r\n(define-fun null-var948 () var948 (as @var948_0 var948))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var1721 () var1721 (as @var1721_0 var1721))\r\n(define-fun var2868 () var948 (as @var948_1 var948))\r\n(define-fun var3760 () String \"\")\r\n(define-fun var336 () Int 0)\r\n(define-fun var918 () var1721 (as @var1721_1 var1721))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36851712,
            "run_time": 0.10872292518615723,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1721:\n  ;;   var1721!val!1 var1721!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1721!val!1 () var1721)\n  (declare-fun var1721!val!0 () var1721)\n  ;; cardinality constraint:\n  (forall ((x var1721)) (or (= x var1721!val!1) (= x var1721!val!0)))\n  ;; -----------\n  ;; universe for var948:\n  ;;   var948!val!1 var948!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var948!val!1 () var948)\n  (declare-fun var948!val!0 () var948)\n  ;; cardinality constraint:\n  (forall ((x var948)) (or (= x var948!val!1) (= x var948!val!0)))\n  ;; -----------\n  (define-fun null-var1721 () var1721\n    var1721!val!1)\n  (define-fun var1917 () Int\n    (String_charAt/1466887330 var3760 var336))\n  (define-fun var336 () Int\n    3)\n  (define-fun null-var948 () var948\n    var948!val!1)\n  (define-fun var3760 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-Int () Int\n    4)\n  (define-fun var2868 () var948\n    var948!val!0)\n  (define-fun var3621 () Int\n    (String_charAt/1466887330 var3760 var336))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var918 () var1721\n    var1721!val!0)\n  (define-fun String_charAt/1466887330 ((x!0 String) (x!1 Int)) Int\n    4)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 149684224,
            "run_time": 2.150456428527832,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var918 () var1721 var1721!196)\r\n  (define-fun var336 () Int 97)\r\n  (define-fun var3760 () String \"\\u{0}\")\r\n  (define-fun var2868 () var948 var948!190)\r\n  (define-fun null-var1721 () var1721 var1721!188)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var948 () var948 var948!186)\r\n  (define-fun String_charAt/1466887330 ((x!0 String) (x!1 Int)) Int (ite (and (= x!0 \"\\u{0}\") (= x!1 97)) 104 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.CharSequence: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.CharSequence: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r17 := @this: org.apache.commons.lang3.text.translate.UnicodeUnescaper",
            "r0 := @parameter0: java.lang.CharSequence",
            "i0 := @parameter1: int",
            "r10 := @parameter2: java.io.Writer",
            "$c1 = interfaceinvoke r0.<java.lang.CharSequence: char charAt(int)>(i0)",
            "$i25 = (int) $c1",
            "if $i25 != 92 goto return 0",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrBuilder__validateIndex__-1908911276\\6422.smt2",
        "z3": {
            "memory": 31842304,
            "run_time": 0.26004910469055176,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2518:\r\n  ;;   var2518!val!0 var2518!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2518!val!0 () var2518)\r\n  (declare-fun var2518!val!1 () var2518)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2518)) (or (= x var2518!val!0) (= x var2518!val!1)))\r\n  ;; -----------\r\n  (define-fun var473 () var2518\r\n    var2518!val!0)\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun var1874 () Int\r\n    0)\r\n  (define-fun var362 () Int\r\n    (size/1389889126 var473))\r\n  (define-fun null-var2518 () var2518\r\n    var2518!val!1)\r\n  (define-fun size/1389889126 ((x!0 var2518)) Int\r\n    0)\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1609728,
            "run_time": 0.075958251953125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2518 is 2\r\n; rep: (as @var2518_0 var2518)\r\n; rep: (as @var2518_1 var2518)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun size/1389889126 ((_arg_1 var2518)) Int 0)\r\n(define-fun null-var2518 () var2518 (as @var2518_0 var2518))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var473 () var2518 (as @var2518_1 var2518))\r\n(define-fun var1874 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35479552,
            "run_time": 0.0927889347076416,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2518:\n  ;;   var2518!val!0 var2518!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2518!val!0 () var2518)\n  (declare-fun var2518!val!1 () var2518)\n  ;; cardinality constraint:\n  (forall ((x var2518)) (or (= x var2518!val!0) (= x var2518!val!1)))\n  ;; -----------\n  (define-fun var473 () var2518\n    var2518!val!0)\n  (define-fun null-Int () Int\n    1)\n  (define-fun var1874 () Int\n    0)\n  (define-fun var362 () Int\n    (size/1389889126 var473))\n  (define-fun null-var2518 () var2518\n    var2518!val!1)\n  (define-fun size/1389889126 ((x!0 var2518)) Int\n    0)\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 129900544,
            "run_time": 1.7960119247436523,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1874 () Int 0)\r\n  (define-fun var473 () var2518 var2518!4)\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-var2518 () var2518 var2518!2)\r\n  (define-fun size/1389889126 ((x!0 var2518)) Int (ite (= x!0 var2518!4) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrBuilder",
            "i0 := @parameter0: int",
            "if i0 < 0 goto $r0 = new java.lang.StringIndexOutOfBoundsException",
            "$i1 = r1.<org.apache.commons.lang3.text.StrBuilder: int size>",
            "if i0 <= $i1 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__simpleQuote__35489439\\3970.smt2",
        "z3": {
            "memory": 32165888,
            "run_time": 0.10273337364196777,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3635 () Int\r\n    (charAt/1621160911 var2162 (- (length/-171891354 var2162) 1)))\r\n  (define-fun var1023 () Int\r\n    (str.len var748))\r\n  (define-fun var355 () Int\r\n    (- (length/-171891354 var2162) 1))\r\n  (define-fun var2525 () Int\r\n    0)\r\n  (define-fun var2874 () Int\r\n    (charAt/1621160911 var2162 (- (length/-171891354 var2162) 1)))\r\n  (define-fun var748 () String\r\n    \"\")\r\n  (define-fun var2162 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2374 () Int\r\n    (length/-171891354 var2162))\r\n  (define-fun length/-171891354 ((x!0 String)) Int\r\n    0)\r\n  (define-fun charAt/1621160911 ((x!0 String) (x!1 Int)) Int\r\n    3)\r\n)\r\n(error \"line 34 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1601536,
            "run_time": 0.07754802703857422,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3950 is 1\r\n; rep: (as @var3950_0 var3950)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun length/-171891354 ((_arg_1 String)) Int 0)\r\n(define-fun charAt/1621160911 ((_arg_1 String) (_arg_2 Int)) Int 0)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2162 () String \"\")\r\n(define-fun var748 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36827136,
            "run_time": 0.12333154678344727,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2374 () Int\n    (length/-171891354 var2162))\n  (define-fun var355 () Int\n    (- (length/-171891354 var2162) 1))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var748 () String\n    \"\")\n  (define-fun var2874 () Int\n    (charAt/1621160911 var2162 (- (length/-171891354 var2162) 1)))\n  (define-fun var3635 () Int\n    (charAt/1621160911 var2162 (- (length/-171891354 var2162) 1)))\n  (define-fun var1023 () Int\n    (str.len var748))\n  (define-fun var2162 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2525 () Int\n    0)\n  (define-fun length/-171891354 ((x!0 String)) Int\n    0)\n  (define-fun charAt/1621160911 ((x!0 String) (x!1 Int)) Int\n    3)\n)\n(error \"line 34 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175628288,
            "run_time": 2.309433698654175,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var748 () String \"\")\r\n  (define-fun var2162 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\\u{1}\")\r\n  (define-fun charAt/1621160911 ((x!0 String) (x!1 Int)) Int (ite (and (= x!0 \"\\u{0}\") (= x!1 52)) 54 0))\r\n  (define-fun length/-171891354 ((x!0 String)) Int (ite (= x!0 \"\\u{0}\") 53 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: int length()>",
            "<java.lang.StringBuilder: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: int length()>": 1,
            "<java.lang.StringBuilder: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.StringBuilder",
            "r0 := @parameter1: java.lang.String",
            "i5 = 0",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i5 >= $i0 goto $i1 = virtualinvoke r1.<java.lang.StringBuilder: int length()>()",
            "$i1 = virtualinvoke r1.<java.lang.StringBuilder: int length()>()",
            "$i2 = $i1 - 1",
            "$c3 = virtualinvoke r1.<java.lang.StringBuilder: char charAt(int)>($i2)",
            "$i7 = (int) $c3",
            "if $i7 != 46 goto return r1",
            "return r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.DurationFormatUtils__formatDurationWords__2142161626\\3860.smt2",
        "z3": {
            "memory": 31723520,
            "run_time": 0.12166833877563477,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1565 () String\r\n    (let ((a!1 (var1265_replaceOnce/1161312843\r\n             (var1265_replaceOnce/1161312843\r\n               (str.++ var3429!1\r\n                       \" \"\r\n                       (var1782_formatDuration/-1057633004\r\n                         var837\r\n                         \"d' days 'H' hours 'm' minutes 's' seconds'\"))\r\n               \" 1 seconds\"\r\n               \" 1 second\")\r\n             \" 1 minutes\"\r\n             \" 1 minute\")))\r\n  (trim-right (trim-left (var1265_replaceOnce/1161312843\r\n                           (var1265_replaceOnce/1161312843\r\n                             a!1\r\n                             \" 1 hours\"\r\n                             \" 1 hour\")\r\n                           \" 1 days\"\r\n                           \" 1 day\")))))\r\n  (define-fun var722 () String\r\n    (var1265_replaceOnce/1161312843\r\n  (str.++ var3429!1\r\n          \" \"\r\n          (var1782_formatDuration/-1057633004\r\n            var837\r\n            \"d' days 'H' hours 'm' minutes 's' seconds'\"))\r\n  \" 1 seconds\"\r\n  \" 1 second\"))\r\n  (define-fun var1115 () String\r\n    (var1265_replaceOnce/1161312843\r\n  (var1265_replaceOnce/1161312843\r\n    (str.++ var3429!1\r\n            \" \"\r\n            (var1782_formatDuration/-1057633004\r\n              var837\r\n              \"d' days 'H' hours 'm' minutes 's' seconds'\"))\r\n    \" 1 seconds\"\r\n    \" 1 second\")\r\n  \" 1 minutes\"\r\n  \" 1 minute\"))\r\n  (define-fun var3429 () String\r\n    String-init)\r\n  (define-fun var2718 () String\r\n    (let ((a!1 (var1265_replaceOnce/1161312843\r\n             (var1265_replaceOnce/1161312843\r\n               (str.++ var3429!1\r\n                       \" \"\r\n                       (var1782_formatDuration/-1057633004\r\n                         var837\r\n                         \"d' days 'H' hours 'm' minutes 's' seconds'\"))\r\n               \" 1 seconds\"\r\n               \" 1 second\")\r\n             \" 1 minutes\"\r\n             \" 1 minute\")))\r\n  (var1265_replaceOnce/1161312843\r\n    (var1265_replaceOnce/1161312843 a!1 \" 1 hours\" \" 1 hour\")\r\n    \" 1 days\"\r\n    \" 1 day\")))\r\n  (define-fun var2136 () String\r\n    (str.++ var3429!1\r\n        \" \"\r\n        (var1782_formatDuration/-1057633004\r\n          var837\r\n          \"d' days 'H' hours 'm' minutes 's' seconds'\")))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var621 () String\r\n    (var1782_formatDuration/-1057633004\r\n  var837\r\n  \"d' days 'H' hours 'm' minutes 's' seconds'\"))\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var837 () Int\r\n    2)\r\n  (define-fun var3482 () String\r\n    (let ((a!1 (var1265_replaceOnce/1161312843\r\n             (var1265_replaceOnce/1161312843\r\n               (str.++ var3429!1\r\n                       \" \"\r\n                       (var1782_formatDuration/-1057633004\r\n                         var837\r\n                         \"d' days 'H' hours 'm' minutes 's' seconds'\"))\r\n               \" 1 seconds\"\r\n               \" 1 second\")\r\n             \" 1 minutes\"\r\n             \" 1 minute\")))\r\n  (var1265_replaceOnce/1161312843 a!1 \" 1 hours\" \" 1 hour\")))\r\n  (define-fun var1589 () String\r\n    (str.++ var3429!1 \" \"))\r\n  (define-fun var985 () String\r\n    (str.++ var3429!1\r\n        \" \"\r\n        (var1782_formatDuration/-1057633004\r\n          var837\r\n          \"d' days 'H' hours 'm' minutes 's' seconds'\")))\r\n  (define-fun var3429!2 () String\r\n    \" \")\r\n  (define-fun null-Bool () Bool\r\n    true)\r\n  (define-fun var3685 () Bool\r\n    false)\r\n  (define-fun var3429!1 () String\r\n    \"\")\r\n  (define-fun var2456 () Bool\r\n    false)\r\n  (define-fun var1589!1 () String\r\n    \" \")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1782_formatDuration/-1057633004 ((x!0 Int) (x!1 String)) String\r\n    \"\")\r\n  (define-fun var1265_replaceOnce/1161312843 ((x!0 String)\r\n   (x!1 String)\r\n   (x!2 String)) String\r\n    \"\")\r\n)\r\n(error \"line 56 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.030157089233398438,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(\r\n; cardinality of var1782 is 1\r\n; rep: (as @var1782_0 var1782)\r\n; cardinality of var1265 is 1\r\n; rep: (as @var1265_0 var1265)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1782_formatDuration/-1057633004 ((BOUND_VARIABLE_857 Int) (BOUND_VARIABLE_858 String)) String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun var1265_replaceOnce/1161312843 ((BOUND_VARIABLE_861 String) (BOUND_VARIABLE_862 String) (BOUND_VARIABLE_863 String)) String \"\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var837 () Int 0)\r\n(define-fun var2456 () Bool false)\r\n(define-fun var3685 () Bool false)\r\n(define-fun var3429!1 () String \"\")\r\n(define-fun var3429!2 () String \" \")\r\n(define-fun var1589!1 () String \" \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36671488,
            "run_time": 0.13898277282714844,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3429 () String\n    String-init)\n  (define-fun var2718 () String\n    (let ((a!1 (var1265_replaceOnce/1161312843\n             (var1265_replaceOnce/1161312843\n               (str.++ var3429!1\n                       \" \"\n                       (var1782_formatDuration/-1057633004\n                         var837\n                         \"d' days 'H' hours 'm' minutes 's' seconds'\"))\n               \" 1 seconds\"\n               \" 1 second\")\n             \" 1 minutes\"\n             \" 1 minute\")))\n  (var1265_replaceOnce/1161312843\n    (var1265_replaceOnce/1161312843 a!1 \" 1 hours\" \" 1 hour\")\n    \" 1 days\"\n    \" 1 day\")))\n  (define-fun var2136 () String\n    (str.++ var3429!1\n        \" \"\n        (var1782_formatDuration/-1057633004\n          var837\n          \"d' days 'H' hours 'm' minutes 's' seconds'\")))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var621 () String\n    (var1782_formatDuration/-1057633004\n  var837\n  \"d' days 'H' hours 'm' minutes 's' seconds'\"))\n  (define-fun var3482 () String\n    (let ((a!1 (var1265_replaceOnce/1161312843\n             (var1265_replaceOnce/1161312843\n               (str.++ var3429!1\n                       \" \"\n                       (var1782_formatDuration/-1057633004\n                         var837\n                         \"d' days 'H' hours 'm' minutes 's' seconds'\"))\n               \" 1 seconds\"\n               \" 1 second\")\n             \" 1 minutes\"\n             \" 1 minute\")))\n  (var1265_replaceOnce/1161312843 a!1 \" 1 hours\" \" 1 hour\")))\n  (define-fun var1589 () String\n    (str.++ var3429!1 \" \"))\n  (define-fun null-Int () Int\n    3)\n  (define-fun var837 () Int\n    2)\n  (define-fun var985 () String\n    (str.++ var3429!1\n        \" \"\n        (var1782_formatDuration/-1057633004\n          var837\n          \"d' days 'H' hours 'm' minutes 's' seconds'\")))\n  (define-fun var1565 () String\n    (let ((a!1 (var1265_replaceOnce/1161312843\n             (var1265_replaceOnce/1161312843\n               (str.++ var3429!1\n                       \" \"\n                       (var1782_formatDuration/-1057633004\n                         var837\n                         \"d' days 'H' hours 'm' minutes 's' seconds'\"))\n               \" 1 seconds\"\n               \" 1 second\")\n             \" 1 minutes\"\n             \" 1 minute\")))\n  (trim-right (trim-left (var1265_replaceOnce/1161312843\n                           (var1265_replaceOnce/1161312843\n                             a!1\n                             \" 1 hours\"\n                             \" 1 hour\")\n                           \" 1 days\"\n                           \" 1 day\")))))\n  (define-fun var722 () String\n    (var1265_replaceOnce/1161312843\n  (str.++ var3429!1\n          \" \"\n          (var1782_formatDuration/-1057633004\n            var837\n            \"d' days 'H' hours 'm' minutes 's' seconds'\"))\n  \" 1 seconds\"\n  \" 1 second\"))\n  (define-fun var1115 () String\n    (var1265_replaceOnce/1161312843\n  (var1265_replaceOnce/1161312843\n    (str.++ var3429!1\n            \" \"\n            (var1782_formatDuration/-1057633004\n              var837\n              \"d' days 'H' hours 'm' minutes 's' seconds'\"))\n    \" 1 seconds\"\n    \" 1 second\")\n  \" 1 minutes\"\n  \" 1 minute\"))\n  (define-fun var3429!2 () String\n    \" \")\n  (define-fun null-Bool () Bool\n    true)\n  (define-fun var3685 () Bool\n    false)\n  (define-fun var3429!1 () String\n    \"\")\n  (define-fun var2456 () Bool\n    false)\n  (define-fun var1589!1 () String\n    \" \")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1782_formatDuration/-1057633004 ((x!0 Int) (x!1 String)) String\n    \"\")\n  (define-fun var1265_replaceOnce/1161312843 ((x!0 String)\n   (x!1 String)\n   (x!2 String)) String\n    \"\")\n)\n(error \"line 56 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 240455680,
            "run_time": 3.4248437881469727,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(model\r\n  (define-fun var1589!1 () String \" \")\r\n  (define-fun var3429!2 () String \" \")\r\n  (define-fun var3429!1 () String \"\")\r\n  (define-fun var837 () Int 59)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-Bool () Bool true)\r\n  (define-fun var3685 () Bool false)\r\n  (define-fun var2456 () Bool false)\r\n  (define-fun abbrev_112 ((x!0 Int)) String (ite (= x!0 0) \"\" \"\"))\r\n  (define-fun var1782_formatDuration/-1057633004 ((x!0 Int) (x!1 String)) String (ite (and (= x!0 59) (= x!1 \"d\\u{0}27 days \\u{0}27H\\u{0}27 hours \\u{0}27m\\u{0}27 minutes \\u{0}27s\\u{0}27 seconds\\u{0}27\")) \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: java.lang.String trim()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1,
            "<java.lang.String: java.lang.String trim()>": 1
        },
        "jimple_statements": [
            "l0 := @parameter0: long",
            "z0 := @parameter1: boolean",
            "z1 := @parameter2: boolean",
            "r3 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String formatDuration(long,java.lang.String)>(l0, \"d\\' days \\'H\\' hours \\'m\\' minutes \\'s\\' seconds\\'\")",
            "if z0 == 0 goto (branch)",
            "if z1 == 0 goto $r10 = new java.lang.StringBuilder",
            "$r10 = new java.lang.StringBuilder",
            "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r14 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>($r13, \" 1 seconds\", \" 1 second\")",
            "$r15 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>($r14, \" 1 minutes\", \" 1 minute\")",
            "$r16 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>($r15, \" 1 hours\", \" 1 hour\")",
            "$r17 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String replaceOnce(java.lang.String,java.lang.String,java.lang.String)>($r16, \" 1 days\", \" 1 day\")",
            "$r18 = virtualinvoke $r17.<java.lang.String: java.lang.String trim()>()",
            "return $r18"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDatePrinter__toString__133325076\\4799.smt2",
        "z3": {
            "memory": 32321536,
            "run_time": 0.17116236686706543,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2447:\r\n  ;;   var2447!val!1 var2447!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2447!val!1 () var2447)\r\n  (declare-fun var2447!val!0 () var2447)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2447)) (or (= x var2447!val!1) (= x var2447!val!0)))\r\n  ;; -----------\r\n  (define-fun var1028 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var1360!1 \"FastDatePrinter[\" (pattern/1549876084 var2329) \",\")\r\n          (cast-from-var482-to-var3356 (locale/1549876084 var2329)))\r\n        \",\"))\r\n  (define-fun var3324 () String\r\n    (append/-1031950772\r\n  (str.++ var1360!1 \"FastDatePrinter[\" (pattern/1549876084 var2329) \",\")\r\n  (cast-from-var482-to-var3356 (locale/1549876084 var2329))))\r\n  (define-fun var3157 () String\r\n    (str.++ var1360!1 \"FastDatePrinter[\" (pattern/1549876084 var2329)))\r\n  (define-fun var1050 () String\r\n    (pattern/1549876084 var2329))\r\n  (define-fun var1760 () var482\r\n    (locale/1549876084 var2329))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3377!1 () String\r\n    \"FastDatePrinter[,\")\r\n  (define-fun null-var2447 () var2447\r\n    var2447!val!1)\r\n  (define-fun var2426 () String\r\n    (str.++ var1360!1 \"FastDatePrinter[\"))\r\n  (define-fun var1360 () String\r\n    String-init)\r\n  (define-fun var1436 () var787\r\n    (timeZone/1549876084 var2329))\r\n  (define-fun var675 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var1360!1 \"FastDatePrinter[\" (pattern/1549876084 var2329) \",\")\r\n          (cast-from-var482-to-var3356 (locale/1549876084 var2329)))\r\n        \",\"\r\n        (getID/-1323510388 (timeZone/1549876084 var2329))\r\n        \"]\"))\r\n  (define-fun var2329 () var2447\r\n    var2447!val!0)\r\n  (define-fun var3377 () String\r\n    (str.++ var1360!1 \"FastDatePrinter[\" (pattern/1549876084 var2329) \",\"))\r\n  (define-fun var3406 () String\r\n    (getID/-1323510388 (timeZone/1549876084 var2329)))\r\n  (define-fun var1678 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var1360!1 \"FastDatePrinter[\" (pattern/1549876084 var2329) \",\")\r\n          (cast-from-var482-to-var3356 (locale/1549876084 var2329)))\r\n        \",\"\r\n        (getID/-1323510388 (timeZone/1549876084 var2329))\r\n        \"]\"))\r\n  (define-fun var298 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var1360!1 \"FastDatePrinter[\" (pattern/1549876084 var2329) \",\")\r\n          (cast-from-var482-to-var3356 (locale/1549876084 var2329)))\r\n        \",\"\r\n        (getID/-1323510388 (timeZone/1549876084 var2329))))\r\n  (define-fun var2426!1 () String\r\n    \"FastDatePrinter[\")\r\n  (define-fun var298!1 () String\r\n    \",]\")\r\n  (define-fun var1028!1 () String\r\n    \",\")\r\n  (define-fun var1360!2 () String\r\n    \"FastDatePrinter[\")\r\n  (define-fun var3324!1 () String\r\n    \",\")\r\n  (define-fun var3157!1 () String\r\n    \"FastDatePrinter[,\")\r\n  (define-fun var1360!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun pattern/1549876084 ((x!0 var2447)) String\r\n    \"\")\r\n  (define-fun locale/1549876084 ((x!0 var2447)) var482\r\n    var482!val!0)\r\n  (define-fun cast-from-var482-to-var3356 ((x!0 var482)) var3356\r\n    var3356!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3356)) String\r\n    \"\")\r\n  (define-fun timeZone/1549876084 ((x!0 var2447)) var787\r\n    var787!val!0)\r\n  (define-fun getID/-1323510388 ((x!0 var787)) String\r\n    \"\")\r\n)\r\n(error \"line 67 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13254656,
            "run_time": 0.09352827072143555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2447 is 2\r\n; rep: (as @var2447_0 var2447)\r\n; rep: (as @var2447_1 var2447)\r\n; cardinality of var482 is 1\r\n; rep: (as @var482_0 var482)\r\n; cardinality of var3356 is 1\r\n; rep: (as @var3356_0 var3356)\r\n; cardinality of var787 is 1\r\n; rep: (as @var787_0 var787)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun pattern/1549876084 ((_arg_1 var2447)) String \"\")\r\n(define-fun locale/1549876084 ((BOUND_VARIABLE_1232 var2447)) var482 (as @var482_0 var482))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1235 String) (BOUND_VARIABLE_1236 var3356)) String \"\")\r\n(define-fun cast-from-var482-to-var3356 ((BOUND_VARIABLE_1239 var482)) var3356 (as @var3356_0 var3356))\r\n(define-fun timeZone/1549876084 ((BOUND_VARIABLE_1242 var2447)) var787 (as @var787_0 var787))\r\n(define-fun getID/-1323510388 ((BOUND_VARIABLE_1245 var787)) String \"\")\r\n(define-fun null-var2447 () var2447 (as @var2447_0 var2447))\r\n(define-fun var2329 () var2447 (as @var2447_1 var2447))\r\n(define-fun var1360!1 () String \"\")\r\n(define-fun var1360!2 () String \"FastDatePrinter[\")\r\n(define-fun var2426!1 () String \"FastDatePrinter[\")\r\n(define-fun var3157!1 () String \"FastDatePrinter[,\")\r\n(define-fun var3377!1 () String \"FastDatePrinter[,\")\r\n(define-fun var3324!1 () String \",\")\r\n(define-fun var1028!1 () String \",\")\r\n(define-fun var298!1 () String \",]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34799616,
            "run_time": 0.07655096054077148,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 66 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 67 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 204734464,
            "run_time": 2.5733091831207275,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2447/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDatePrinter__toString__133325076\\4799.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_39_9 =\r\n     concat(all_39_10, \",\")\r\n   var3324!1 =\r\n     concat(all_36_5, \",\")\r\n   all_36_8 =\r\n     concat(all_36_9, \",\")\r\n   var3157!1 =\r\n     concat(all_30_4, \",\")\r\n   var298!1 =\r\n     concat(all_27_3, \"]\")\r\n   var1028!1 =\r\n     concat(all_21_4, all_21_2)\r\n   var2426!1 =\r\n     concat(\"FastDatePrinter[\", all_24_3)\r\n   var3377!1 =\r\n     concat(all_33_4, rhs)\r\n   all_33_4 =\r\n     concat(all_33_5, \",\")\r\n   all_27_3 =\r\n     concat(all_21_4, all_21_2)\r\n   all_39_10 =\r\n     concat(\"FastDatePrinter[\", all_24_3)\r\n   all_36_9 =\r\n     concat(\"FastDatePrinter[\", all_24_3)\r\n   all_30_4 =\r\n     concat(\"FastDatePrinter[\", all_24_3)\r\n   all_21_4 =\r\n     concat(all_39_6, \",\")\r\n   all_33_5 =\r\n     concat(\"FastDatePrinter[\", all_24_3)\r\n\r\n1974ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 19,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDatePrinter",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FastDatePrinter[\")",
            "$r2 = r1.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String pattern>",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",\")",
            "$r5 = r1.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Locale locale>",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5)",
            "$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",\")",
            "$r8 = r1.<org.apache.commons.lang3.time.FastDatePrinter: java.util.TimeZone timeZone>",
            "$r9 = virtualinvoke $r8.<java.util.TimeZone: java.lang.String getID()>()",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r13"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.translate.CharSequenceTranslator__hex__-1308539637\\3369.smt2",
        "z3": {
            "memory": 32104448,
            "run_time": 0.22971105575561523,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3889 () String\r\n    (Int_toHexString/1865784998 var2322))\r\n  (define-fun var2322 () Int\r\n    1)\r\n  (define-fun var3191 () String\r\n    (toUpperCase/398655892 (Int_toHexString/1865784998 var2322) var1838-ENGLISH))\r\n  (define-fun var2683 () var1838\r\n    var1838-ENGLISH)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var1838-ENGLISH () var1838\r\n    var1838!val!0)\r\n  (define-fun Int_toHexString/1865784998 ((x!0 Int)) String\r\n    \"\")\r\n  (define-fun toUpperCase/398655892 ((x!0 String) (x!1 var1838)) String\r\n    \"\")\r\n)\r\n(error \"line 21 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11476992,
            "run_time": 0.10841083526611328,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1838 is 1\r\n; rep: (as @var1838_0 var1838)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun Int_toHexString/1865784998 ((BOUND_VARIABLE_441 Int)) String \"\")\r\n(define-fun toUpperCase/398655892 ((BOUND_VARIABLE_444 String) (BOUND_VARIABLE_445 var1838)) String \"\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1838-ENGLISH () var1838 (as @var1838_0 var1838))\r\n(define-fun var2322 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36151296,
            "run_time": 0.2827036380767822,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2322 () Int\n    1)\n  (define-fun var3889 () String\n    (Int_toHexString/1865784998 var2322))\n  (define-fun var2683 () var1838\n    var1838-ENGLISH)\n  (define-fun var3191 () String\n    (toUpperCase/398655892 (Int_toHexString/1865784998 var2322) var1838-ENGLISH))\n  (define-fun null-Int () Int\n    0)\n  (define-fun var1838-ENGLISH () var1838\n    var1838!val!0)\n  (define-fun Int_toHexString/1865784998 ((x!0 Int)) String\n    \"\")\n  (define-fun toUpperCase/398655892 ((x!0 String) (x!1 var1838)) String\n    \"\")\n)\n(error \"line 21 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132190208,
            "run_time": 1.7088983058929443,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2322 () Int 1)\r\n  (define-fun null-Int () Int 0)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>": 1
        },
        "jimple_statements": [
            "i0 := @parameter0: int",
            "$r1 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(i0)",
            "$r0 = <java.util.Locale: java.util.Locale ENGLISH>",
            "$r2 = virtualinvoke $r1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r0)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__getStrategy__1867214738\\4366.smt2",
        "z3": {
            "memory": 32165888,
            "run_time": 0.1673586368560791,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3665:\r\n  ;;   var3665!val!1 var3665!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3665!val!1 () var3665)\r\n  (declare-fun var3665!val!0 () var3665)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3665)) (or (= x var3665!val!1) (= x var3665!val!0)))\r\n  ;; -----------\r\n  ;; universe for var129:\r\n  ;;   var129!val!1 var129!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var129!val!1 () var129)\r\n  (declare-fun var129!val!0 () var129)\r\n  ;; cardinality constraint:\r\n  (forall ((x var129)) (or (= x var129!val!1) (= x var129!val!0)))\r\n  ;; -----------\r\n  (define-fun var2044 () Int\r\n    119)\r\n  (define-fun var1844 () var3714\r\n    var129-DAY_OF_WEEK_STRATEGY)\r\n  (define-fun var3135 () Int\r\n    var2903)\r\n  (define-fun var2711 () var129\r\n    var129!val!0)\r\n  (define-fun null-Int () Int\r\n    118)\r\n  (define-fun null-var3665 () var3665\r\n    var3665!val!1)\r\n  (define-fun null-var129 () var129\r\n    var129!val!1)\r\n  (define-fun var2256 () var3665\r\n    var3665!val!0)\r\n  (define-fun var2903 () Int\r\n    117)\r\n  (define-fun var129-DAY_OF_WEEK_STRATEGY () var3714\r\n    var3714!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7712768,
            "run_time": 0.04581308364868164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var129 is 2\r\n; rep: (as @var129_0 var129)\r\n; rep: (as @var129_1 var129)\r\n; cardinality of var3665 is 2\r\n; rep: (as @var3665_0 var3665)\r\n; rep: (as @var3665_1 var3665)\r\n; cardinality of var3714 is 1\r\n; rep: (as @var3714_0 var3714)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var129 () var129 (as @var129_0 var129))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var3665 () var3665 (as @var3665_0 var3665))\r\n(define-fun var129-DAY_OF_WEEK_STRATEGY () var3714 (as @var3714_0 var3714))\r\n(define-fun var2711 () var129 (as @var129_1 var129))\r\n(define-fun var2903 () Int 117)\r\n(define-fun var2044 () Int 0)\r\n(define-fun var2256 () var3665 (as @var3665_1 var3665))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35930112,
            "run_time": 0.15393614768981934,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3665:\n  ;;   var3665!val!1 var3665!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3665!val!1 () var3665)\n  (declare-fun var3665!val!0 () var3665)\n  ;; cardinality constraint:\n  (forall ((x var3665)) (or (= x var3665!val!1) (= x var3665!val!0)))\n  ;; -----------\n  ;; universe for var129:\n  ;;   var129!val!1 var129!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var129!val!1 () var129)\n  (declare-fun var129!val!0 () var129)\n  ;; cardinality constraint:\n  (forall ((x var129)) (or (= x var129!val!1) (= x var129!val!0)))\n  ;; -----------\n  (define-fun var2044 () Int\n    119)\n  (define-fun var2711 () var129\n    var129!val!0)\n  (define-fun var1844 () var3714\n    var129-DAY_OF_WEEK_STRATEGY)\n  (define-fun null-Int () Int\n    118)\n  (define-fun null-var3665 () var3665\n    var3665!val!1)\n  (define-fun var3135 () Int\n    var2903)\n  (define-fun null-var129 () var129\n    var129!val!1)\n  (define-fun var2256 () var3665\n    var3665!val!0)\n  (define-fun var2903 () Int\n    117)\n  (define-fun var129-DAY_OF_WEEK_STRATEGY () var3714\n    var3714!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153509888,
            "run_time": 1.616424798965454,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2256 () var3665 var3665!8)\r\n  (define-fun var2044 () Int 1)\r\n  (define-fun var2903 () Int 117)\r\n  (define-fun var2711 () var129 var129!6)\r\n  (define-fun null-var3665 () var3665 var3665!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var129 () var129 var129!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser",
            "c0 := @parameter0: char",
            "i1 := @parameter1: int",
            "r1 := @parameter2: java.util.Calendar",
            "$i2 = (int) c0",
            "tableswitch($i2) {     case 68: goto $r20 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY>;     case 69: goto $r19 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(7, r1);     case 70: goto $r18 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY>;     case 71: goto $r17 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(0, r1);     case 72: goto $r16 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY>;     case 73: goto $r30 = new java.lang.IllegalArgumentException;     case 74: goto $r30 = new java.lang.IllegalArgumentException;     case 75: goto $r15 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY>;     case 76: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 77: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 78: goto $r30 = new java.lang.IllegalArgumentException;     case 79: goto $r30 = new java.lang.IllegalArgumentException;     case 80: goto $r30 = new java.lang.IllegalArgumentException;     case 81: goto $r30 = new java.lang.IllegalArgumentException;     case 82: goto $r30 = new java.lang.IllegalArgumentException;     case 83: goto $r14 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY>;     case 84: goto $r30 = new java.lang.IllegalArgumentException;     case 85: goto $r30 = new java.lang.IllegalArgumentException;     case 86: goto $r30 = new java.lang.IllegalArgumentException;     case 87: goto $r13 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY>;     case 88: goto $r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int)>(i1);     case 89: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 90: goto if i1 != 2 goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     case 91: goto $r30 = new java.lang.IllegalArgumentException;     case 92: goto $r30 = new java.lang.IllegalArgumentException;     case 93: goto $r30 = new java.lang.IllegalArgumentException;     case 94: goto $r30 = new java.lang.IllegalArgumentException;     case 95: goto $r30 = new java.lang.IllegalArgumentException;     case 96: goto $r30 = new java.lang.IllegalArgumentException;     case 97: goto $r10 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(9, r1);     case 98: goto $r30 = new java.lang.IllegalArgumentException;     case 99: goto $r30 = new java.lang.IllegalArgumentException;     case 100: goto $r9 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY>;     case 101: goto $r30 = new java.lang.IllegalArgumentException;     case 102: goto $r30 = new java.lang.IllegalArgumentException;     case 103: goto $r30 = new java.lang.IllegalArgumentException;     case 104: goto $r8 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR12_STRATEGY>;     case 105: goto $r30 = new java.lang.IllegalArgumentException;     case 106: goto $r30 = new java.lang.IllegalArgumentException;     case 107: goto $r7 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR24_OF_DAY_STRATEGY>;     case 108: goto $r30 = new java.lang.IllegalArgumentException;     case 109: goto $r6 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY>;     case 110: goto $r30 = new java.lang.IllegalArgumentException;     case 111: goto $r30 = new java.lang.IllegalArgumentException;     case 112: goto $r30 = new java.lang.IllegalArgumentException;     case 113: goto $r30 = new java.lang.IllegalArgumentException;     case 114: goto $r30 = new java.lang.IllegalArgumentException;     case 115: goto $r5 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY>;     case 116: goto $r30 = new java.lang.IllegalArgumentException;     case 117: goto $r4 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_STRATEGY>;     case 118: goto $r30 = new java.lang.IllegalArgumentException;     case 119: goto $r3 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY>;     case 120: goto $r30 = new java.lang.IllegalArgumentException;     case 121: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 122: goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     default: goto $r30 = new java.lang.IllegalArgumentException; }",
            "$r4 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_STRATEGY>",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrMatcher$StringMatcher__toString__1029996146\\3344.smt2",
        "z3": {
            "memory": 32133120,
            "run_time": 0.1507120132446289,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2581:\r\n  ;;   var2581!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2581!val!0 () var2581)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2581)) (= x var2581!val!0))\r\n  ;; -----------\r\n  ;; universe for var2274:\r\n  ;;   var2274!val!1 var2274!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2274!val!1 () var2274)\r\n  (declare-fun var2274!val!0 () var2274)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2274)) (or (= x var2274!val!1) (= x var2274!val!0)))\r\n  ;; -----------\r\n  (define-fun var2660 () String\r\n    (append/-1166366385\r\n  (str.++ var704!1 (toString/-522406933 (cast-from-var2274-to-var2581 var1531)))\r\n  32))\r\n  (define-fun var3325 () String\r\n    (str.++ var704!1 (toString/-522406933 (cast-from-var2274-to-var2581 var1531))))\r\n  (define-fun var2048 () String\r\n    (let ((a!1 (append/-1166366385\r\n             (str.++ var704!1\r\n                     (toString/-522406933\r\n                       (cast-from-var2274-to-var2581 var1531)))\r\n             32)))\r\n  (str.++ a!1 (var1728_toString/685783178 (chars/922855258 var1531)))))\r\n  (define-fun var1531 () var2274\r\n    var2274!val!0)\r\n  (define-fun var1670 () String\r\n    (let ((a!1 (append/-1166366385\r\n             (str.++ var704!1\r\n                     (toString/-522406933\r\n                       (cast-from-var2274-to-var2581 var1531)))\r\n             32)))\r\n  (str.++ a!1 (var1728_toString/685783178 (chars/922855258 var1531)))))\r\n  (define-fun var941 () String\r\n    (toString/-522406933 (cast-from-var2274-to-var2581 var1531)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var2274 () var2274\r\n    var2274!val!1)\r\n  (define-fun var704 () String\r\n    String-init)\r\n  (define-fun var3338 () String\r\n    (var1728_toString/685783178 (chars/922855258 var1531)))\r\n  (define-fun var3944 () (Array Int Int)\r\n    (chars/922855258 var1531))\r\n  (define-fun var3325!1 () String\r\n    \"\")\r\n  (define-fun var704!2 () String\r\n    \"\")\r\n  (define-fun var2660!1 () String\r\n    \"\")\r\n  (define-fun var704!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var2274-to-var2581 ((x!0 var2274)) var2581\r\n    var2581!val!0)\r\n  (define-fun toString/-522406933 ((x!0 var2581)) String\r\n    \"\")\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun chars/922855258 ((x!0 var2274)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var1728_toString/685783178 ((x!0 (Array Int Int))) String\r\n    \"\")\r\n)\r\n(error \"line 48 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1650688,
            "run_time": 0.07746505737304688,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2274 is 2\r\n; rep: (as @var2274_0 var2274)\r\n; rep: (as @var2274_1 var2274)\r\n; cardinality of var2581 is 1\r\n; rep: (as @var2581_0 var2581)\r\n; cardinality of var1728 is 1\r\n; rep: (as @var1728_0 var1728)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun toString/-522406933 ((_arg_1 var2581)) String \"\")\r\n(define-fun cast-from-var2274-to-var2581 ((_arg_1 var2274)) var2581 (as @var2581_0 var2581))\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_775 String) (BOUND_VARIABLE_776 Int)) String \"\")\r\n(define-fun chars/922855258 ((BOUND_VARIABLE_779 var2274)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1728_toString/685783178 ((BOUND_VARIABLE_784 (Array Int Int))) String \"\")\r\n(define-fun null-var2274 () var2274 (as @var2274_0 var2274))\r\n(define-fun var1531 () var2274 (as @var2274_1 var2274))\r\n(define-fun var704!1 () String \"\")\r\n(define-fun var704!2 () String \"\")\r\n(define-fun var3325!1 () String \"\")\r\n(define-fun var2660!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35893248,
            "run_time": 0.15590381622314453,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 47 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 48 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 159801344,
            "run_time": 2.393413543701172,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2274/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.text.StrMatcher$StringMatcher__toString__1029996146\\3344.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2660!1 =\r\n     concat(all_22_6, all_22_4)\r\n   var3325!1 =\r\n     concat(var704!2, rhs)\r\n\r\n1739ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.Object: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.util.Arrays: java.lang.String toString(char[])>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.text.StrMatcher$StringMatcher",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = specialinvoke r1.<java.lang.Object: java.lang.String toString()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32)",
            "$r4 = r1.<org.apache.commons.lang3.text.StrMatcher$StringMatcher: char[] chars>",
            "$r5 = staticinvoke <java.util.Arrays: java.lang.String toString(char[])>($r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$PatternStrategy__createPattern__1592915889\\3837.smt2",
        "z3": {
            "memory": 32243712,
            "run_time": 0.22575116157531738,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var217:\r\n  ;;   var217!val!0 var217!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var217!val!0 () var217)\r\n  (declare-fun var217!val!1 () var217)\r\n  ;; cardinality constraint:\r\n  (forall ((x var217)) (or (= x var217!val!0) (= x var217!val!1)))\r\n  ;; -----------\r\n  (define-fun var340 () var217\r\n    var217!val!0)\r\n  (define-fun var1190 () String\r\n    var3805)\r\n  (define-fun var3805 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-var217 () var217\r\n    var217!val!1)\r\n  (define-fun var340!1 () var217\r\n    var217!val!0)\r\n  (define-fun var1190!1 () String\r\n    \"\")\r\n  (define-fun createPattern/-1895420268 ((x!0 var217) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6590464,
            "run_time": 0.04590272903442383,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var217 is 2\r\n; rep: (as @var217_0 var217)\r\n; rep: (as @var217_1 var217)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun createPattern/-1895420268 ((BOUND_VARIABLE_507 var217) (BOUND_VARIABLE_508 String)) void (as @void_0 void))\r\n(define-fun null-var217 () var217 (as @var217_0 var217))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var340 () var217 (as @var217_1 var217))\r\n(define-fun var3805 () String \"\")\r\n(define-fun var340!1 () var217 (as @var217_0 var217))\r\n(define-fun var1190!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37408768,
            "run_time": 0.17226600646972656,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var217:\n  ;;   var217!val!0 var217!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var217!val!0 () var217)\n  (declare-fun var217!val!1 () var217)\n  ;; cardinality constraint:\n  (forall ((x var217)) (or (= x var217!val!0) (= x var217!val!1)))\n  ;; -----------\n  (define-fun var3805 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-var217 () var217\n    var217!val!1)\n  (define-fun var340 () var217\n    var217!val!0)\n  (define-fun var1190 () String\n    var3805)\n  (define-fun var340!1 () var217\n    var217!val!0)\n  (define-fun var1190!1 () String\n    \"\")\n  (define-fun createPattern/-1895420268 ((x!0 var217) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132923392,
            "run_time": 1.659520149230957,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3805 () String \"\\u{0}\")\r\n  (define-fun var340 () var217 var217!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var217 () var217 var217!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser$PatternStrategy",
            "r1 := @parameter0: java.lang.StringBuilder",
            "$r2 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.lang3.time.FastDateParser$PatternStrategy: void createPattern(java.lang.String)>($r2)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDatePrinter__hashCode__2038443283\\4559.smt2",
        "z3": {
            "memory": 31539200,
            "run_time": 0.1517162322998047,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2165:\r\n  ;;   var2165!val!0 var2165!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2165!val!0 () var2165)\r\n  (declare-fun var2165!val!1 () var2165)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2165)) (or (= x var2165!val!0) (= x var2165!val!1)))\r\n  ;; -----------\r\n  (define-fun var2096 () var2165\r\n    var2165!val!0)\r\n  (define-fun var1360 () Int\r\n    (* 13 (hashCode/1639332149 (locale/1549876084 var2096))))\r\n  (define-fun var433 () Int\r\n    (hashCode/-467973558 (pattern/1549876084 var2096)))\r\n  (define-fun var3967 () Int\r\n    (hashCode/1739917532\r\n  (cast-from-var3597-to-var2820 (timeZone/1549876084 var2096))))\r\n  (define-fun var1608 () Int\r\n    (+ (hashCode/1739917532\r\n     (cast-from-var3597-to-var2820 (timeZone/1549876084 var2096)))\r\n   (* 13 (hashCode/1639332149 (locale/1549876084 var2096)))))\r\n  (define-fun var522 () Int\r\n    (hashCode/1639332149 (locale/1549876084 var2096)))\r\n  (define-fun var1427 () var3597\r\n    (timeZone/1549876084 var2096))\r\n  (define-fun var1588 () Int\r\n    (let ((a!1 (+ (hashCode/1739917532\r\n                (cast-from-var3597-to-var2820 (timeZone/1549876084 var2096)))\r\n              (* 13 (hashCode/1639332149 (locale/1549876084 var2096))))))\r\n  (+ (hashCode/-467973558 (pattern/1549876084 var2096)) (* 13 a!1))))\r\n  (define-fun null-var2165 () var2165\r\n    var2165!val!1)\r\n  (define-fun var2607 () Int\r\n    (let ((a!1 (+ (hashCode/1739917532\r\n                (cast-from-var3597-to-var2820 (timeZone/1549876084 var2096)))\r\n              (* 13 (hashCode/1639332149 (locale/1549876084 var2096))))))\r\n  (* 13 a!1)))\r\n  (define-fun var690 () var3141\r\n    (locale/1549876084 var2096))\r\n  (define-fun var84 () String\r\n    (pattern/1549876084 var2096))\r\n  (define-fun timeZone/1549876084 ((x!0 var2165)) var3597\r\n    var3597!val!0)\r\n  (define-fun pattern/1549876084 ((x!0 var2165)) String\r\n    \"\")\r\n  (define-fun locale/1549876084 ((x!0 var2165)) var3141\r\n    var3141!val!0)\r\n  (define-fun hashCode/1739917532 ((x!0 var2820)) Int\r\n    0)\r\n  (define-fun cast-from-var3597-to-var2820 ((x!0 var3597)) var2820\r\n    var2820!val!0)\r\n  (define-fun hashCode/-467973558 ((x!0 String)) Int\r\n    0)\r\n  (define-fun hashCode/1639332149 ((x!0 var3141)) Int\r\n    0)\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.04574322700500488,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2165 is 2\r\n; rep: (as @var2165_0 var2165)\r\n; rep: (as @var2165_1 var2165)\r\n; cardinality of var3597 is 1\r\n; rep: (as @var3597_0 var3597)\r\n; cardinality of var2820 is 1\r\n; rep: (as @var2820_0 var2820)\r\n; cardinality of var3141 is 1\r\n; rep: (as @var3141_0 var3141)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun pattern/1549876084 ((BOUND_VARIABLE_490 var2165)) String \"\")\r\n(define-fun hashCode/-467973558 ((BOUND_VARIABLE_493 String)) Int 0)\r\n(define-fun timeZone/1549876084 ((BOUND_VARIABLE_496 var2165)) var3597 (as @var3597_0 var3597))\r\n(define-fun hashCode/1739917532 ((BOUND_VARIABLE_499 var2820)) Int 0)\r\n(define-fun cast-from-var3597-to-var2820 ((BOUND_VARIABLE_502 var3597)) var2820 (as @var2820_0 var2820))\r\n(define-fun locale/1549876084 ((BOUND_VARIABLE_505 var2165)) var3141 (as @var3141_0 var3141))\r\n(define-fun hashCode/1639332149 ((BOUND_VARIABLE_508 var3141)) Int 0)\r\n(define-fun null-var2165 () var2165 (as @var2165_0 var2165))\r\n(define-fun var2096 () var2165 (as @var2165_1 var2165))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36630528,
            "run_time": 0.2687249183654785,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2165:\n  ;;   var2165!val!0 var2165!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2165!val!0 () var2165)\n  (declare-fun var2165!val!1 () var2165)\n  ;; cardinality constraint:\n  (forall ((x var2165)) (or (= x var2165!val!0) (= x var2165!val!1)))\n  ;; -----------\n  (define-fun var2096 () var2165\n    var2165!val!0)\n  (define-fun var2607 () Int\n    (let ((a!1 (+ (hashCode/1739917532\n                (cast-from-var3597-to-var2820 (timeZone/1549876084 var2096)))\n              (* 13 (hashCode/1639332149 (locale/1549876084 var2096))))))\n  (* 13 a!1)))\n  (define-fun var690 () var3141\n    (locale/1549876084 var2096))\n  (define-fun var1360 () Int\n    (* 13 (hashCode/1639332149 (locale/1549876084 var2096))))\n  (define-fun var3967 () Int\n    (hashCode/1739917532\n  (cast-from-var3597-to-var2820 (timeZone/1549876084 var2096))))\n  (define-fun var433 () Int\n    (hashCode/-467973558 (pattern/1549876084 var2096)))\n  (define-fun var1608 () Int\n    (+ (hashCode/1739917532\n     (cast-from-var3597-to-var2820 (timeZone/1549876084 var2096)))\n   (* 13 (hashCode/1639332149 (locale/1549876084 var2096)))))\n  (define-fun var522 () Int\n    (hashCode/1639332149 (locale/1549876084 var2096)))\n  (define-fun var84 () String\n    (pattern/1549876084 var2096))\n  (define-fun null-var2165 () var2165\n    var2165!val!1)\n  (define-fun var1427 () var3597\n    (timeZone/1549876084 var2096))\n  (define-fun var1588 () Int\n    (let ((a!1 (+ (hashCode/1739917532\n                (cast-from-var3597-to-var2820 (timeZone/1549876084 var2096)))\n              (* 13 (hashCode/1639332149 (locale/1549876084 var2096))))))\n  (+ (hashCode/-467973558 (pattern/1549876084 var2096)) (* 13 a!1))))\n  (define-fun timeZone/1549876084 ((x!0 var2165)) var3597\n    var3597!val!0)\n  (define-fun pattern/1549876084 ((x!0 var2165)) String\n    \"\")\n  (define-fun locale/1549876084 ((x!0 var2165)) var3141\n    var3141!val!0)\n  (define-fun hashCode/1739917532 ((x!0 var2820)) Int\n    0)\n  (define-fun cast-from-var3597-to-var2820 ((x!0 var3597)) var2820\n    var2820!val!0)\n  (define-fun hashCode/-467973558 ((x!0 String)) Int\n    0)\n  (define-fun hashCode/1639332149 ((x!0 var3141)) Int\n    0)\n)\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 156299264,
            "run_time": 1.733654499053955,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2096 () var2165 var2165!4)\r\n  (define-fun null-var2165 () var2165 var2165!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: int hashCode()>"
        ],
        "api_count": {
            "<java.lang.String: int hashCode()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDatePrinter",
            "$r1 = r0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String pattern>",
            "$i5 = virtualinvoke $r1.<java.lang.String: int hashCode()>()",
            "$r2 = r0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.TimeZone timeZone>",
            "$i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>()",
            "$r3 = r0.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Locale locale>",
            "$i0 = virtualinvoke $r3.<java.util.Locale: int hashCode()>()",
            "$i1 = 13 * $i0",
            "$i3 = $i2 + $i1",
            "$i4 = 13 * $i3",
            "$i6 = $i5 + $i4",
            "return $i6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__getStrategy__1867214738\\4319.smt2",
        "z3": {
            "memory": 31989760,
            "run_time": 0.18437957763671875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var616:\r\n  ;;   var616!val!1 var616!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var616!val!1 () var616)\r\n  (declare-fun var616!val!0 () var616)\r\n  ;; cardinality constraint:\r\n  (forall ((x var616)) (or (= x var616!val!1) (= x var616!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1593:\r\n  ;;   var1593!val!1 var1593!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1593!val!1 () var1593)\r\n  (declare-fun var1593!val!0 () var1593)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1593)) (or (= x var1593!val!1) (= x var1593!val!0)))\r\n  ;; -----------\r\n  (define-fun var1633 () Int\r\n    99)\r\n  (define-fun var1561 () Int\r\n    var323)\r\n  (define-fun var1730 () var1593\r\n    var1593!val!0)\r\n  (define-fun null-Int () Int\r\n    98)\r\n  (define-fun var2148 () var616\r\n    var616!val!0)\r\n  (define-fun null-var616 () var616\r\n    var616!val!1)\r\n  (define-fun null-var1593 () var1593\r\n    var1593!val!1)\r\n  (define-fun var2198 () var3481\r\n    (getLocaleSpecificStrategy/-1436523368 var2148 9 var1730))\r\n  (define-fun var323 () Int\r\n    97)\r\n  (define-fun getLocaleSpecificStrategy/-1436523368 ((x!0 var616)\r\n   (x!1 Int)\r\n   (x!2 var1593)) var3481\r\n    var3481!val!0)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9961472,
            "run_time": 0.04487180709838867,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var616 is 2\r\n; rep: (as @var616_0 var616)\r\n; rep: (as @var616_1 var616)\r\n; cardinality of var1593 is 2\r\n; rep: (as @var1593_0 var1593)\r\n; rep: (as @var1593_1 var1593)\r\n; cardinality of var3481 is 1\r\n; rep: (as @var3481_0 var3481)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getLocaleSpecificStrategy/-1436523368 ((BOUND_VARIABLE_890 var616) (BOUND_VARIABLE_891 Int) (BOUND_VARIABLE_892 var1593)) var3481 (as @var3481_0 var3481))\r\n(define-fun null-var616 () var616 (as @var616_0 var616))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var1593 () var1593 (as @var1593_0 var1593))\r\n(define-fun var2148 () var616 (as @var616_1 var616))\r\n(define-fun var323 () Int 97)\r\n(define-fun var1633 () Int 0)\r\n(define-fun var1730 () var1593 (as @var1593_1 var1593))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36184064,
            "run_time": 0.10756993293762207,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var616:\n  ;;   var616!val!1 var616!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var616!val!1 () var616)\n  (declare-fun var616!val!0 () var616)\n  ;; cardinality constraint:\n  (forall ((x var616)) (or (= x var616!val!1) (= x var616!val!0)))\n  ;; -----------\n  ;; universe for var1593:\n  ;;   var1593!val!1 var1593!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1593!val!1 () var1593)\n  (declare-fun var1593!val!0 () var1593)\n  ;; cardinality constraint:\n  (forall ((x var1593)) (or (= x var1593!val!1) (= x var1593!val!0)))\n  ;; -----------\n  (define-fun var1633 () Int\n    99)\n  (define-fun var2198 () var3481\n    (getLocaleSpecificStrategy/-1436523368 var2148 9 var1730))\n  (define-fun var1730 () var1593\n    var1593!val!0)\n  (define-fun null-Int () Int\n    98)\n  (define-fun var2148 () var616\n    var616!val!0)\n  (define-fun null-var616 () var616\n    var616!val!1)\n  (define-fun null-var1593 () var1593\n    var1593!val!1)\n  (define-fun var1561 () Int\n    var323)\n  (define-fun var323 () Int\n    97)\n  (define-fun getLocaleSpecificStrategy/-1436523368 ((x!0 var616)\n   (x!1 Int)\n   (x!2 var1593)) var3481\n    var3481!val!0)\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154054656,
            "run_time": 1.5952539443969727,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1730 () var1593 var1593!8)\r\n  (define-fun var1633 () Int 1)\r\n  (define-fun var323 () Int 97)\r\n  (define-fun var2148 () var616 var616!6)\r\n  (define-fun null-var1593 () var1593 var1593!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var616 () var616 var616!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser",
            "c0 := @parameter0: char",
            "i1 := @parameter1: int",
            "r1 := @parameter2: java.util.Calendar",
            "$i2 = (int) c0",
            "tableswitch($i2) {     case 68: goto $r20 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY>;     case 69: goto $r19 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(7, r1);     case 70: goto $r18 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY>;     case 71: goto $r17 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(0, r1);     case 72: goto $r16 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY>;     case 73: goto $r30 = new java.lang.IllegalArgumentException;     case 74: goto $r30 = new java.lang.IllegalArgumentException;     case 75: goto $r15 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY>;     case 76: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 77: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 78: goto $r30 = new java.lang.IllegalArgumentException;     case 79: goto $r30 = new java.lang.IllegalArgumentException;     case 80: goto $r30 = new java.lang.IllegalArgumentException;     case 81: goto $r30 = new java.lang.IllegalArgumentException;     case 82: goto $r30 = new java.lang.IllegalArgumentException;     case 83: goto $r14 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY>;     case 84: goto $r30 = new java.lang.IllegalArgumentException;     case 85: goto $r30 = new java.lang.IllegalArgumentException;     case 86: goto $r30 = new java.lang.IllegalArgumentException;     case 87: goto $r13 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY>;     case 88: goto $r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int)>(i1);     case 89: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 90: goto if i1 != 2 goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     case 91: goto $r30 = new java.lang.IllegalArgumentException;     case 92: goto $r30 = new java.lang.IllegalArgumentException;     case 93: goto $r30 = new java.lang.IllegalArgumentException;     case 94: goto $r30 = new java.lang.IllegalArgumentException;     case 95: goto $r30 = new java.lang.IllegalArgumentException;     case 96: goto $r30 = new java.lang.IllegalArgumentException;     case 97: goto $r10 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(9, r1);     case 98: goto $r30 = new java.lang.IllegalArgumentException;     case 99: goto $r30 = new java.lang.IllegalArgumentException;     case 100: goto $r9 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY>;     case 101: goto $r30 = new java.lang.IllegalArgumentException;     case 102: goto $r30 = new java.lang.IllegalArgumentException;     case 103: goto $r30 = new java.lang.IllegalArgumentException;     case 104: goto $r8 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR12_STRATEGY>;     case 105: goto $r30 = new java.lang.IllegalArgumentException;     case 106: goto $r30 = new java.lang.IllegalArgumentException;     case 107: goto $r7 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR24_OF_DAY_STRATEGY>;     case 108: goto $r30 = new java.lang.IllegalArgumentException;     case 109: goto $r6 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY>;     case 110: goto $r30 = new java.lang.IllegalArgumentException;     case 111: goto $r30 = new java.lang.IllegalArgumentException;     case 112: goto $r30 = new java.lang.IllegalArgumentException;     case 113: goto $r30 = new java.lang.IllegalArgumentException;     case 114: goto $r30 = new java.lang.IllegalArgumentException;     case 115: goto $r5 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY>;     case 116: goto $r30 = new java.lang.IllegalArgumentException;     case 117: goto $r4 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_STRATEGY>;     case 118: goto $r30 = new java.lang.IllegalArgumentException;     case 119: goto $r3 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY>;     case 120: goto $r30 = new java.lang.IllegalArgumentException;     case 121: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 122: goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     default: goto $r30 = new java.lang.IllegalArgumentException; }",
            "$r10 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(9, r1)",
            "return $r10"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.StrTokenizer__getContent__-1371723069\\3844.smt2",
        "z3": {
            "memory": 31514624,
            "run_time": 0.1818697452545166,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1005:\r\n  ;;   var1005!val!1 var1005!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1005!val!1 () var1005)\r\n  (declare-fun var1005!val!0 () var1005)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1005)) (or (= x var1005!val!1) (= x var1005!val!0)))\r\n  ;; -----------\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 0) 0 1))\r\n  (define-fun var270 () (Array Int Int)\r\n    (chars/1491220258 var3655))\r\n  (define-fun null-var1005 () var1005\r\n    var1005!val!1)\r\n  (define-fun var3655 () var1005\r\n    var1005!val!0)\r\n  (define-fun var1616 () (Array Int Int)\r\n    (chars/1491220258 var3655))\r\n  (define-fun var546 () String\r\n    String-init)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var546!1 () String\r\n    \"\")\r\n  (define-fun var270!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun chars/1491220258 ((x!0 var1005)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/-915723298 ((x!0 String) (x!1 (Array Int Int))) void\r\n    void!val!0)\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.046243906021118164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1005 is 2\r\n; rep: (as @var1005_0 var1005)\r\n; rep: (as @var1005_1 var1005)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun chars/1491220258 ((_arg_1 var1005)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-915723298 ((BOUND_VARIABLE_474 String) (BOUND_VARIABLE_475 (Array Int Int))) void (as @void_0 void))\r\n(define-fun null-var1005 () var1005 (as @var1005_0 var1005))\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var3655 () var1005 (as @var1005_1 var1005))\r\n(define-fun var546!1 () String \"\")\r\n(define-fun var270!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35983360,
            "run_time": 0.10770583152770996,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1005:\n  ;;   var1005!val!1 var1005!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1005!val!1 () var1005)\n  (declare-fun var1005!val!0 () var1005)\n  ;; cardinality constraint:\n  (forall ((x var1005)) (or (= x var1005!val!1) (= x var1005!val!0)))\n  ;; -----------\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store ((as const (Array Int Int)) 0) 0 1))\n  (define-fun var270 () (Array Int Int)\n    (chars/1491220258 var3655))\n  (define-fun var546 () String\n    String-init)\n  (define-fun null-var1005 () var1005\n    var1005!val!1)\n  (define-fun var3655 () var1005\n    var1005!val!0)\n  (define-fun var1616 () (Array Int Int)\n    (chars/1491220258 var3655))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var546!1 () String\n    \"\")\n  (define-fun var270!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun chars/1491220258 ((x!0 var1005)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun <init>/-915723298 ((x!0 String) (x!1 (Array Int Int))) void\n    void!val!0)\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150982656,
            "run_time": 1.796694040298462,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3655 () var1005 var1005!4)\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun null-var1005 () var1005 var1005!2)\r\n  (define-fun chars/1491220258 ((x!0 var1005)) (Array Int Int) (ite (= x!0 var1005!4) (store ((as const (Array Int Int)) 0) 0 1) ((as const (Array Int Int)) 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: void <init>(char[])>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[])>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.text.StrTokenizer",
            "$r1 = r0.<org.apache.commons.lang3.text.StrTokenizer: char[] chars>",
            "if $r1 != null goto $r2 = new java.lang.String",
            "$r2 = new java.lang.String",
            "$r3 = r0.<org.apache.commons.lang3.text.StrTokenizer: char[] chars>",
            "specialinvoke $r2.<java.lang.String: void <init>(char[])>($r3)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.AbstractFormatCache__lambda$getPatternForStyle$0__-1260745825\\3726.smt2",
        "z3": {
            "memory": 31653888,
            "run_time": 0.24506115913391113,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 59 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1667072,
            "run_time": 0.030488014221191406,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35999744,
            "run_time": 0.09203839302062988,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 59 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165576704,
            "run_time": 1.7980351448059082,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Integer",
            "r1 := @parameter1: java.lang.Integer",
            "r2 := @parameter2: java.util.Locale",
            "r9 := @parameter3: org.apache.commons.lang3.time.AbstractFormatCache$ArrayKey",
            "if r0 != null goto (branch)",
            "$r3 := @caughtexception",
            "$r4 = new java.lang.IllegalArgumentException",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No date time pattern for locale: \")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8)",
            "throw $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.StopWatch__toString__-1602269775\\4787.smt2",
        "z3": {
            "memory": 31739904,
            "run_time": 0.11312127113342285,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2516:\r\n  ;;   var2516!val!1 var2516!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2516!val!1 () var2516)\r\n  (declare-fun var2516!val!0 () var2516)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2516)) (or (= x var2516!val!1) (= x var2516!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3620:\r\n  ;;   var3620!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3620!val!0 () var3620)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3620)) (= x var3620!val!0))\r\n  ;; -----------\r\n  (define-fun var3650 () String\r\n    (formatTime/309879225 var926))\r\n  (define-fun var639 () String\r\n    (var1202_toString/-749122252\r\n  (cast-from-String-to-var3620 (message/33220049 var926))\r\n  \"\"))\r\n  (define-fun var3730 () Bool\r\n    (let ((a!1 (str.len (var1202_toString/-749122252\r\n                      (cast-from-String-to-var3620 (message/33220049 var926))\r\n                      \"\"))))\r\n  (= a!1 0)))\r\n  (define-fun var3715 () String\r\n    (message/33220049 var926))\r\n  (define-fun var926 () var2516\r\n    var2516!val!0)\r\n  (define-fun var2430 () String\r\n    (formatTime/309879225 var926))\r\n  (define-fun null-var2516 () var2516\r\n    var2516!val!1)\r\n  (define-fun cast-from-String-to-var3620 ((x!0 String)) var3620\r\n    var3620!val!0)\r\n  (define-fun message/33220049 ((x!0 var2516)) String\r\n    \"\")\r\n  (define-fun var1202_toString/-749122252 ((x!0 var3620) (x!1 String)) String\r\n    \"\")\r\n  (define-fun formatTime/309879225 ((x!0 var2516)) String\r\n    \"\")\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1667072,
            "run_time": 0.030488014221191406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2516 is 2\r\n; rep: (as @var2516_0 var2516)\r\n; rep: (as @var2516_1 var2516)\r\n; cardinality of var1202 is 1\r\n; rep: (as @var1202_0 var1202)\r\n; cardinality of var3620 is 1\r\n; rep: (as @var3620_0 var3620)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun message/33220049 ((_arg_1 var2516)) String \"A\")\r\n(define-fun var1202_toString/-749122252 ((_arg_1 var3620) (_arg_2 String)) String \"\")\r\n(define-fun cast-from-String-to-var3620 ((_arg_1 String)) var3620 (as @var3620_0 var3620))\r\n(define-fun formatTime/309879225 ((BOUND_VARIABLE_546 var2516)) String \"\")\r\n(define-fun null-var2516 () var2516 (as @var2516_0 var2516))\r\n(define-fun var926 () var2516 (as @var2516_1 var2516))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35885056,
            "run_time": 0.09203839302062988,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 31 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154517504,
            "run_time": 1.940293788909912,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var926 () var2516 var2516!4)\r\n  (define-fun null-var2516 () var2516 var2516!2)\r\n  (define-fun var3620!20 () var3620 (cast-from-String-to-var3620 \"\\u{0}\"))\r\n  (define-fun var1202_toString/-749122252 ((x!0 var3620) (x!1 String)) String (ite (and (= x!0 var3620!20) (= x!1 \"\")) \"\" \"\"))\r\n  (define-fun message/33220049 ((x!0 var2516)) String (ite (= x!0 var2516!4) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 5,
        "api_sequence": [
            "<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>",
            "<java.lang.String: boolean isEmpty()>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.StopWatch",
            "$r1 = r0.<org.apache.commons.lang3.time.StopWatch: java.lang.String message>",
            "r2 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>($r1, \"\")",
            "r3 = virtualinvoke r0.<org.apache.commons.lang3.time.StopWatch: java.lang.String formatTime()>()",
            "$z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()",
            "if $z0 == 0 goto $r4 = new java.lang.StringBuilder",
            "$r8 = r3",
            "goto [?= return $r8]",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.DurationFormatUtils__format__1232670050\\3649.smt2",
        "z3": {
            "memory": 32272384,
            "run_time": 0.16627097129821777,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2178:\r\n  ;;   var2178!val!1 var2178!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2178!val!1 () var2178)\r\n  (declare-fun var2178!val!0 () var2178)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2178)) (or (= x var2178!val!1) (= x var2178!val!0)))\r\n  ;; -----------\r\n  (define-fun var1235 () Int\r\n    (getLength-Arr-var2178-1 var1305))\r\n  (define-fun var3744 () Int\r\n    1)\r\n  (define-fun var936 () Int\r\n    0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1305 () (Array Int var2178)\r\n    ((as const (Array Int var2178)) var2178!val!1))\r\n  (define-fun var2787 () Int\r\n    1)\r\n  (define-fun var3389 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var1886 () Int\r\n    (- 1))\r\n  (define-fun null-__Array__Int__var2178__ () (Array Int var2178)\r\n    ((as const (Array Int var2178)) var2178!val!0))\r\n  (define-fun var529 () String\r\n    String-init)\r\n  (define-fun var644 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var981 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var3610 () Int\r\n    (- 1))\r\n  (define-fun var2779 () Int\r\n    1)\r\n  (define-fun var136 () Int\r\n    1)\r\n  (define-fun var513 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var3924 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var2204 () Int\r\n    1)\r\n  (define-fun var3855 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var96 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var3575 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var1351 () Int\r\n    1)\r\n  (define-fun var1556 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var1665 () Int\r\n    (- 1))\r\n  (define-fun var1075 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var1072 () Int\r\n    (- 1))\r\n  (define-fun var1981 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var1647 () Bool\r\n    true)\r\n  (define-fun var580 () Int\r\n    1)\r\n  (define-fun var935 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var2439 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var2032 () String\r\n    var529!1)\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var529!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getLength-Arr-var2178-1 ((x!0 (Array Int var2178))) Int\r\n    0)\r\n)\r\n(error \"line 66 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1667072,
            "run_time": 0.06286025047302246,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2178 is 2\r\n; rep: (as @var2178_0 var2178)\r\n; rep: (as @var2178_1 var2178)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getLength-Arr-var2178-1 ((_arg_1 (Array Int var2178))) Int 0)\r\n(define-fun null-__Array__Int__var2178__ () (Array Int var2178) (store ((as const (Array Int var2178)) (as @var2178_1 var2178)) 0 (as @var2178_0 var2178)))\r\n(define-fun null-Int () Int 0)\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var1305 () (Array Int var2178) (store ((as const (Array Int var2178)) (as @var2178_0 var2178)) 0 (as @var2178_1 var2178)))\r\n(define-fun var580 () Int 1)\r\n(define-fun var3744 () Int 1)\r\n(define-fun var2787 () Int 1)\r\n(define-fun var2779 () Int 1)\r\n(define-fun var136 () Int 1)\r\n(define-fun var2204 () Int 1)\r\n(define-fun var1351 () Int 1)\r\n(define-fun var1647 () Bool false)\r\n(define-fun var529!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36769792,
            "run_time": 0.1408710479736328,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2178:\n  ;;   var2178!val!1 var2178!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2178!val!1 () var2178)\n  (declare-fun var2178!val!0 () var2178)\n  ;; cardinality constraint:\n  (forall ((x var2178)) (or (= x var2178!val!1) (= x var2178!val!0)))\n  ;; -----------\n  (define-fun var3744 () Int\n    1)\n  (define-fun var1556 () Bool\n    (ite (= 1 0) true false))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1665 () Int\n    (- 1))\n  (define-fun var1075 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var1072 () Int\n    (- 1))\n  (define-fun var1981 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var2787 () Int\n    1)\n  (define-fun var529 () String\n    String-init)\n  (define-fun var935 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var2439 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var2779 () Int\n    1)\n  (define-fun var1235 () Int\n    (getLength-Arr-var2178-1 var1305))\n  (define-fun var936 () Int\n    0)\n  (define-fun var136 () Int\n    1)\n  (define-fun var644 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var3389 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var1886 () Int\n    (- 1))\n  (define-fun var981 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var2204 () Int\n    1)\n  (define-fun var3610 () Int\n    (- 1))\n  (define-fun var1305 () (Array Int var2178)\n    ((as const (Array Int var2178)) var2178!val!1))\n  (define-fun null-__Array__Int__var2178__ () (Array Int var2178)\n    ((as const (Array Int var2178)) var2178!val!0))\n  (define-fun var1351 () Int\n    1)\n  (define-fun var3924 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var513 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var2032 () String\n    var529!1)\n  (define-fun var1647 () Bool\n    true)\n  (define-fun var580 () Int\n    1)\n  (define-fun var3855 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var96 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var3575 () Bool\n    (ite (= 1 0) true false))\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun null-Int () Int\n    0)\n  (define-fun var529!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun getLength-Arr-var2178-1 ((x!0 (Array Int var2178))) Int\n    0)\n)\n(error \"line 66 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181411840,
            "run_time": 1.95302152633667,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var529!1 () String \"\")\r\n  (define-fun var1351 () Int 1)\r\n  (define-fun var2204 () Int 1)\r\n  (define-fun var136 () Int 1)\r\n  (define-fun var2779 () Int 1)\r\n  (define-fun var2787 () Int 1)\r\n  (define-fun var3744 () Int 1)\r\n  (define-fun var580 () Int 1)\r\n  (define-fun var1305 () (Array Int var2178) ((as const (Array Int var2178)) var2178!0))\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-__Array__Int__var2178__ () (Array Int var2178) (store ((as const (Array Int var2178)) var2178!0) 0 var2178!1))\r\n  (define-fun var1647 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n  (define-fun getLength-Arr-var2178-1 ((x!0 (Array Int var2178))) Int (ite (= x!0 ((as const (Array Int var2178)) var2178!0)) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: org.apache.commons.lang3.time.DurationFormatUtils$Token[]",
            "l16 := @parameter1: long",
            "l14 := @parameter2: long",
            "l12 := @parameter3: long",
            "l10 := @parameter4: long",
            "l8 := @parameter5: long",
            "l6 := @parameter6: long",
            "l4 := @parameter7: long",
            "z8 := @parameter8: boolean",
            "$r14 = new java.lang.StringBuilder",
            "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()",
            "z9 = 0",
            "z10 = 0",
            "$i23 = (int) -1",
            "i18 = $i23",
            "z11 = 0",
            "$i25 = (int) -1",
            "i19 = $i25",
            "z12 = 0",
            "z30 = 0",
            "z29 = 0",
            "z28 = 0",
            "z27 = 0",
            "z26 = 0",
            "z25 = 0",
            "z24 = 0",
            "z23 = 0",
            "z22 = 0",
            "i0 = lengthof r1",
            "i20 = 0",
            "if i20 >= i0 goto $r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r2 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__getStrategy__1867214738\\4377.smt2",
        "z3": {
            "memory": 31760384,
            "run_time": 0.12000012397766113,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2785:\r\n  ;;   var2785!val!0 var2785!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2785!val!0 () var2785)\r\n  (declare-fun var2785!val!1 () var2785)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2785)) (or (= x var2785!val!0) (= x var2785!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2398:\r\n  ;;   var2398!val!0 var2398!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2398!val!0 () var2398)\r\n  (declare-fun var2398!val!1 () var2398)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2398)) (or (= x var2398!val!0) (= x var2398!val!1)))\r\n  ;; -----------\r\n  (define-fun var2564 () var1626\r\n    var2785-WEEK_OF_YEAR_STRATEGY)\r\n  (define-fun var2864 () Int\r\n    121)\r\n  (define-fun var3322 () var2785\r\n    var2785!val!0)\r\n  (define-fun null-var2398 () var2398\r\n    var2398!val!1)\r\n  (define-fun var589 () Int\r\n    var211)\r\n  (define-fun null-Int () Int\r\n    120)\r\n  (define-fun null-var2785 () var2785\r\n    var2785!val!1)\r\n  (define-fun var1009 () var2398\r\n    var2398!val!0)\r\n  (define-fun var211 () Int\r\n    119)\r\n  (define-fun var2785-WEEK_OF_YEAR_STRATEGY () var1626\r\n    var1626!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10084352,
            "run_time": 0.061278343200683594,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2785 is 2\r\n; rep: (as @var2785_0 var2785)\r\n; rep: (as @var2785_1 var2785)\r\n; cardinality of var2398 is 2\r\n; rep: (as @var2398_0 var2398)\r\n; rep: (as @var2398_1 var2398)\r\n; cardinality of var1626 is 1\r\n; rep: (as @var1626_0 var1626)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var2785 () var2785 (as @var2785_0 var2785))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var2398 () var2398 (as @var2398_0 var2398))\r\n(define-fun var2785-WEEK_OF_YEAR_STRATEGY () var1626 (as @var1626_0 var1626))\r\n(define-fun var3322 () var2785 (as @var2785_1 var2785))\r\n(define-fun var211 () Int 119)\r\n(define-fun var2864 () Int 0)\r\n(define-fun var1009 () var2398 (as @var2398_1 var2398))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36589568,
            "run_time": 0.10847616195678711,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2785:\n  ;;   var2785!val!0 var2785!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2785!val!0 () var2785)\n  (declare-fun var2785!val!1 () var2785)\n  ;; cardinality constraint:\n  (forall ((x var2785)) (or (= x var2785!val!0) (= x var2785!val!1)))\n  ;; -----------\n  ;; universe for var2398:\n  ;;   var2398!val!0 var2398!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2398!val!0 () var2398)\n  (declare-fun var2398!val!1 () var2398)\n  ;; cardinality constraint:\n  (forall ((x var2398)) (or (= x var2398!val!0) (= x var2398!val!1)))\n  ;; -----------\n  (define-fun var2864 () Int\n    121)\n  (define-fun var3322 () var2785\n    var2785!val!0)\n  (define-fun var2564 () var1626\n    var2785-WEEK_OF_YEAR_STRATEGY)\n  (define-fun null-var2398 () var2398\n    var2398!val!1)\n  (define-fun null-Int () Int\n    120)\n  (define-fun null-var2785 () var2785\n    var2785!val!1)\n  (define-fun var1009 () var2398\n    var2398!val!0)\n  (define-fun var589 () Int\n    var211)\n  (define-fun var211 () Int\n    119)\n  (define-fun var2785-WEEK_OF_YEAR_STRATEGY () var1626\n    var1626!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 156917760,
            "run_time": 1.4179162979125977,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1009 () var2398 var2398!8)\r\n  (define-fun var2864 () Int 1)\r\n  (define-fun var211 () Int 119)\r\n  (define-fun var3322 () var2785 var2785!6)\r\n  (define-fun null-var2398 () var2398 var2398!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var2785 () var2785 var2785!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser",
            "c0 := @parameter0: char",
            "i1 := @parameter1: int",
            "r1 := @parameter2: java.util.Calendar",
            "$i2 = (int) c0",
            "tableswitch($i2) {     case 68: goto $r20 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY>;     case 69: goto $r19 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(7, r1);     case 70: goto $r18 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY>;     case 71: goto $r17 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(0, r1);     case 72: goto $r16 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY>;     case 73: goto $r30 = new java.lang.IllegalArgumentException;     case 74: goto $r30 = new java.lang.IllegalArgumentException;     case 75: goto $r15 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY>;     case 76: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 77: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 78: goto $r30 = new java.lang.IllegalArgumentException;     case 79: goto $r30 = new java.lang.IllegalArgumentException;     case 80: goto $r30 = new java.lang.IllegalArgumentException;     case 81: goto $r30 = new java.lang.IllegalArgumentException;     case 82: goto $r30 = new java.lang.IllegalArgumentException;     case 83: goto $r14 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY>;     case 84: goto $r30 = new java.lang.IllegalArgumentException;     case 85: goto $r30 = new java.lang.IllegalArgumentException;     case 86: goto $r30 = new java.lang.IllegalArgumentException;     case 87: goto $r13 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY>;     case 88: goto $r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int)>(i1);     case 89: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 90: goto if i1 != 2 goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     case 91: goto $r30 = new java.lang.IllegalArgumentException;     case 92: goto $r30 = new java.lang.IllegalArgumentException;     case 93: goto $r30 = new java.lang.IllegalArgumentException;     case 94: goto $r30 = new java.lang.IllegalArgumentException;     case 95: goto $r30 = new java.lang.IllegalArgumentException;     case 96: goto $r30 = new java.lang.IllegalArgumentException;     case 97: goto $r10 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(9, r1);     case 98: goto $r30 = new java.lang.IllegalArgumentException;     case 99: goto $r30 = new java.lang.IllegalArgumentException;     case 100: goto $r9 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY>;     case 101: goto $r30 = new java.lang.IllegalArgumentException;     case 102: goto $r30 = new java.lang.IllegalArgumentException;     case 103: goto $r30 = new java.lang.IllegalArgumentException;     case 104: goto $r8 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR12_STRATEGY>;     case 105: goto $r30 = new java.lang.IllegalArgumentException;     case 106: goto $r30 = new java.lang.IllegalArgumentException;     case 107: goto $r7 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR24_OF_DAY_STRATEGY>;     case 108: goto $r30 = new java.lang.IllegalArgumentException;     case 109: goto $r6 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY>;     case 110: goto $r30 = new java.lang.IllegalArgumentException;     case 111: goto $r30 = new java.lang.IllegalArgumentException;     case 112: goto $r30 = new java.lang.IllegalArgumentException;     case 113: goto $r30 = new java.lang.IllegalArgumentException;     case 114: goto $r30 = new java.lang.IllegalArgumentException;     case 115: goto $r5 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY>;     case 116: goto $r30 = new java.lang.IllegalArgumentException;     case 117: goto $r4 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_STRATEGY>;     case 118: goto $r30 = new java.lang.IllegalArgumentException;     case 119: goto $r3 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY>;     case 120: goto $r30 = new java.lang.IllegalArgumentException;     case 121: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 122: goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     default: goto $r30 = new java.lang.IllegalArgumentException; }",
            "$r3 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY>",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastTimeZone__getGmtTimeZone__-1588275491\\4103.smt2",
        "z3": {
            "memory": 31768576,
            "run_time": 0.14744067192077637,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2768 () Bool\r\n    (= \"Z\" var3687))\r\n  (define-fun var1411 () var99\r\n    var2786-GREENWICH)\r\n  (define-fun var509 () String\r\n    \"Z\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3687 () String\r\n    \"Z\")\r\n  (define-fun var2786-GREENWICH () var99\r\n    var99!val!0)\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 3141632,
            "run_time": 0.07693147659301758,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3864 is 1\r\n; rep: (as @var3864_0 var3864)\r\n; cardinality of var99 is 1\r\n; rep: (as @var99_0 var99)\r\n; cardinality of var2786 is 1\r\n; rep: (as @var2786_0 var2786)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"\")\r\n(define-fun var2786-GREENWICH () var99 (as @var99_0 var99))\r\n(define-fun var3687 () String \"Z\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36315136,
            "run_time": 0.10670709609985352,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-String () String\n    \"\")\n  (define-fun var2768 () Bool\n    (= \"Z\" var3687))\n  (define-fun var1411 () var99\n    var2786-GREENWICH)\n  (define-fun var509 () String\n    \"Z\")\n  (define-fun var3687 () String\n    \"Z\")\n  (define-fun var2786-GREENWICH () var99\n    var99!val!0)\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 143867904,
            "run_time": 1.6786656379699707,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3687 () String \"Z\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$r1 = \"Z\"",
            "$z0 = virtualinvoke $r1.<java.lang.String: boolean equals(java.lang.Object)>(r0)",
            "if $z0 != 0 goto $r2 = <org.apache.commons.lang3.time.FastTimeZone: java.util.TimeZone GREENWICH>",
            "$r2 = <org.apache.commons.lang3.time.FastTimeZone: java.util.TimeZone GREENWICH>",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__getStrategy__1867214738\\4331.smt2",
        "z3": {
            "memory": 32104448,
            "run_time": 0.10493183135986328,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1536:\r\n  ;;   var1536!val!1 var1536!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1536!val!1 () var1536)\r\n  (declare-fun var1536!val!0 () var1536)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1536)) (or (= x var1536!val!1) (= x var1536!val!0)))\r\n  ;; -----------\r\n  ;; universe for var112:\r\n  ;;   var112!val!0 var112!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var112!val!0 () var112)\r\n  (declare-fun var112!val!1 () var112)\r\n  ;; cardinality constraint:\r\n  (forall ((x var112)) (or (= x var112!val!0) (= x var112!val!1)))\r\n  ;; -----------\r\n  (define-fun var2890 () var3662\r\n    var1536-DAY_OF_MONTH_STRATEGY)\r\n  (define-fun var3284 () Int\r\n    102)\r\n  (define-fun null-var1536 () var1536\r\n    var1536!val!1)\r\n  (define-fun var1137 () var112\r\n    var112!val!0)\r\n  (define-fun null-var112 () var112\r\n    var112!val!1)\r\n  (define-fun null-Int () Int\r\n    101)\r\n  (define-fun var2904 () Int\r\n    var2211)\r\n  (define-fun var913 () var1536\r\n    var1536!val!0)\r\n  (define-fun var2211 () Int\r\n    100)\r\n  (define-fun var1536-DAY_OF_MONTH_STRATEGY () var3662\r\n    var3662!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.031078577041625977,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1536 is 2\r\n; rep: (as @var1536_0 var1536)\r\n; rep: (as @var1536_1 var1536)\r\n; cardinality of var112 is 2\r\n; rep: (as @var112_0 var112)\r\n; rep: (as @var112_1 var112)\r\n; cardinality of var3662 is 1\r\n; rep: (as @var3662_0 var3662)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var1536 () var1536 (as @var1536_0 var1536))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var112 () var112 (as @var112_0 var112))\r\n(define-fun var1536-DAY_OF_MONTH_STRATEGY () var3662 (as @var3662_0 var3662))\r\n(define-fun var913 () var1536 (as @var1536_1 var1536))\r\n(define-fun var2211 () Int 100)\r\n(define-fun var3284 () Int 0)\r\n(define-fun var1137 () var112 (as @var112_1 var112))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36151296,
            "run_time": 0.09321069717407227,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1536:\n  ;;   var1536!val!1 var1536!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1536!val!1 () var1536)\n  (declare-fun var1536!val!0 () var1536)\n  ;; cardinality constraint:\n  (forall ((x var1536)) (or (= x var1536!val!1) (= x var1536!val!0)))\n  ;; -----------\n  ;; universe for var112:\n  ;;   var112!val!0 var112!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var112!val!0 () var112)\n  (declare-fun var112!val!1 () var112)\n  ;; cardinality constraint:\n  (forall ((x var112)) (or (= x var112!val!0) (= x var112!val!1)))\n  ;; -----------\n  (define-fun var2904 () Int\n    var2211)\n  (define-fun var3284 () Int\n    102)\n  (define-fun null-var1536 () var1536\n    var1536!val!1)\n  (define-fun var2890 () var3662\n    var1536-DAY_OF_MONTH_STRATEGY)\n  (define-fun var1137 () var112\n    var112!val!0)\n  (define-fun null-var112 () var112\n    var112!val!1)\n  (define-fun null-Int () Int\n    101)\n  (define-fun var913 () var1536\n    var1536!val!0)\n  (define-fun var2211 () Int\n    100)\n  (define-fun var1536-DAY_OF_MONTH_STRATEGY () var3662\n    var3662!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152711168,
            "run_time": 1.5055091381072998,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1137 () var112 var112!8)\r\n  (define-fun var3284 () Int 1)\r\n  (define-fun var2211 () Int 100)\r\n  (define-fun var913 () var1536 var1536!6)\r\n  (define-fun null-var112 () var112 var112!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var1536 () var1536 var1536!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser",
            "c0 := @parameter0: char",
            "i1 := @parameter1: int",
            "r1 := @parameter2: java.util.Calendar",
            "$i2 = (int) c0",
            "tableswitch($i2) {     case 68: goto $r20 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY>;     case 69: goto $r19 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(7, r1);     case 70: goto $r18 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY>;     case 71: goto $r17 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(0, r1);     case 72: goto $r16 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY>;     case 73: goto $r30 = new java.lang.IllegalArgumentException;     case 74: goto $r30 = new java.lang.IllegalArgumentException;     case 75: goto $r15 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY>;     case 76: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 77: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 78: goto $r30 = new java.lang.IllegalArgumentException;     case 79: goto $r30 = new java.lang.IllegalArgumentException;     case 80: goto $r30 = new java.lang.IllegalArgumentException;     case 81: goto $r30 = new java.lang.IllegalArgumentException;     case 82: goto $r30 = new java.lang.IllegalArgumentException;     case 83: goto $r14 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY>;     case 84: goto $r30 = new java.lang.IllegalArgumentException;     case 85: goto $r30 = new java.lang.IllegalArgumentException;     case 86: goto $r30 = new java.lang.IllegalArgumentException;     case 87: goto $r13 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY>;     case 88: goto $r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int)>(i1);     case 89: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 90: goto if i1 != 2 goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     case 91: goto $r30 = new java.lang.IllegalArgumentException;     case 92: goto $r30 = new java.lang.IllegalArgumentException;     case 93: goto $r30 = new java.lang.IllegalArgumentException;     case 94: goto $r30 = new java.lang.IllegalArgumentException;     case 95: goto $r30 = new java.lang.IllegalArgumentException;     case 96: goto $r30 = new java.lang.IllegalArgumentException;     case 97: goto $r10 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(9, r1);     case 98: goto $r30 = new java.lang.IllegalArgumentException;     case 99: goto $r30 = new java.lang.IllegalArgumentException;     case 100: goto $r9 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY>;     case 101: goto $r30 = new java.lang.IllegalArgumentException;     case 102: goto $r30 = new java.lang.IllegalArgumentException;     case 103: goto $r30 = new java.lang.IllegalArgumentException;     case 104: goto $r8 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR12_STRATEGY>;     case 105: goto $r30 = new java.lang.IllegalArgumentException;     case 106: goto $r30 = new java.lang.IllegalArgumentException;     case 107: goto $r7 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR24_OF_DAY_STRATEGY>;     case 108: goto $r30 = new java.lang.IllegalArgumentException;     case 109: goto $r6 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY>;     case 110: goto $r30 = new java.lang.IllegalArgumentException;     case 111: goto $r30 = new java.lang.IllegalArgumentException;     case 112: goto $r30 = new java.lang.IllegalArgumentException;     case 113: goto $r30 = new java.lang.IllegalArgumentException;     case 114: goto $r30 = new java.lang.IllegalArgumentException;     case 115: goto $r5 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY>;     case 116: goto $r30 = new java.lang.IllegalArgumentException;     case 117: goto $r4 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_STRATEGY>;     case 118: goto $r30 = new java.lang.IllegalArgumentException;     case 119: goto $r3 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY>;     case 120: goto $r30 = new java.lang.IllegalArgumentException;     case 121: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 122: goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     default: goto $r30 = new java.lang.IllegalArgumentException; }",
            "$r9 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY>",
            "return $r9"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$PatternStrategy__parse__-74140174\\3891-deviant-0.smt2",
        "z3": {
            "memory": 31854592,
            "run_time": 0.103546142578125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1983:\r\n  ;;   var1983!val!1 var1983!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1983!val!1 () var1983)\r\n  (declare-fun var1983!val!0 () var1983)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1983)) (or (= x var1983!val!1) (= x var1983!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3957:\r\n  ;;   var3957!val!0 var3957!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3957!val!0 () var3957)\r\n  (declare-fun var3957!val!1 () var3957)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3957)) (or (= x var3957!val!0) (= x var3957!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1032:\r\n  ;;   var1032!val!0 var1032!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1032!val!0 () var1032)\r\n  (declare-fun var1032!val!1 () var1032)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1032)) (or (= x var1032!val!0) (= x var1032!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3943:\r\n  ;;   var3943!val!0 var3943!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3943!val!0 () var3943)\r\n  (declare-fun var3943!val!1 () var3943)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3943)) (or (= x var3943!val!0) (= x var3943!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var1983 () var1983\r\n    var1983!val!1)\r\n  (define-fun null-var3957 () var3957\r\n    var3957!val!1)\r\n  (define-fun var105 () Int\r\n    (getIndex/-2136393185 var1947))\r\n  (define-fun var3456 () var1983\r\n    var1983!val!0)\r\n  (define-fun var1967 () var3957\r\n    var3957!val!0)\r\n  (define-fun var1947 () var1032\r\n    var1032!val!0)\r\n  (define-fun var2177 () Int\r\n    1)\r\n  (define-fun var2782 () var3943\r\n    var3943!val!0)\r\n  (define-fun null-var3943 () var3943\r\n    var3943!val!1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun null-var1032 () var1032\r\n    var1032!val!1)\r\n  (define-fun var486 () var1807\r\n    (pattern/443652580 var1967))\r\n  (define-fun var3623 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun getIndex/-2136393185 ((x!0 var1032)) Int\r\n    1)\r\n  (define-fun matcher/468719934 ((x!0 var1807) (x!1 String)) var872\r\n    var872!val!0)\r\n  (define-fun pattern/443652580 ((x!0 var3957)) var1807\r\n    var1807!val!0)\r\n  (define-fun lookingAt/-1645860844 ((x!0 var872)) Bool\r\n    false)\r\n  (define-fun setErrorIndex/-1773443795 ((x!0 var1032) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 45 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1626112,
            "run_time": 0.030449867248535156,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3957 is 2\r\n; rep: (as @var3957_0 var3957)\r\n; rep: (as @var3957_1 var3957)\r\n; cardinality of var1983 is 2\r\n; rep: (as @var1983_0 var1983)\r\n; rep: (as @var1983_1 var1983)\r\n; cardinality of var3943 is 2\r\n; rep: (as @var3943_0 var3943)\r\n; rep: (as @var3943_1 var3943)\r\n; cardinality of var1571 is 1\r\n; rep: (as @var1571_0 var1571)\r\n; cardinality of var1032 is 2\r\n; rep: (as @var1032_0 var1032)\r\n; rep: (as @var1032_1 var1032)\r\n; cardinality of var1807 is 1\r\n; rep: (as @var1807_0 var1807)\r\n; cardinality of var872 is 1\r\n; rep: (as @var872_0 var872)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun pattern/443652580 ((BOUND_VARIABLE_624 var3957)) var1807 (as @var1807_0 var1807))\r\n(define-fun getIndex/-2136393185 ((_arg_1 var1032)) Int (- 1))\r\n(define-fun matcher/468719934 ((BOUND_VARIABLE_627 var1807) (BOUND_VARIABLE_628 String)) var872 (as @var872_0 var872))\r\n(define-fun lookingAt/-1645860844 ((BOUND_VARIABLE_631 var872)) Bool false)\r\n(define-fun setErrorIndex/-1773443795 ((BOUND_VARIABLE_634 var1032) (BOUND_VARIABLE_635 Int)) void (as @void_0 void))\r\n(define-fun null-var3957 () var3957 (as @var3957_0 var3957))\r\n(define-fun null-var1983 () var1983 (as @var1983_0 var1983))\r\n(define-fun null-var3943 () var3943 (as @var3943_0 var3943))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1032 () var1032 (as @var1032_0 var1032))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1967 () var3957 (as @var3957_1 var3957))\r\n(define-fun var3456 () var1983 (as @var1983_1 var1983))\r\n(define-fun var2782 () var3943 (as @var3943_1 var3943))\r\n(define-fun var3623 () String \"\")\r\n(define-fun var1947 () var1032 (as @var1032_1 var1032))\r\n(define-fun var2177 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37122048,
            "run_time": 0.10978055000305176,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1983:\n  ;;   var1983!val!1 var1983!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1983!val!1 () var1983)\n  (declare-fun var1983!val!0 () var1983)\n  ;; cardinality constraint:\n  (forall ((x var1983)) (or (= x var1983!val!1) (= x var1983!val!0)))\n  ;; -----------\n  ;; universe for var3957:\n  ;;   var3957!val!0 var3957!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3957!val!0 () var3957)\n  (declare-fun var3957!val!1 () var3957)\n  ;; cardinality constraint:\n  (forall ((x var3957)) (or (= x var3957!val!0) (= x var3957!val!1)))\n  ;; -----------\n  ;; universe for var1032:\n  ;;   var1032!val!0 var1032!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1032!val!0 () var1032)\n  (declare-fun var1032!val!1 () var1032)\n  ;; cardinality constraint:\n  (forall ((x var1032)) (or (= x var1032!val!0) (= x var1032!val!1)))\n  ;; -----------\n  ;; universe for var3943:\n  ;;   var3943!val!0 var3943!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3943!val!0 () var3943)\n  (declare-fun var3943!val!1 () var3943)\n  ;; cardinality constraint:\n  (forall ((x var3943)) (or (= x var3943!val!0) (= x var3943!val!1)))\n  ;; -----------\n  (define-fun null-Int () Int\n    0)\n  (define-fun null-var3957 () var3957\n    var3957!val!1)\n  (define-fun var486 () var1807\n    (pattern/443652580 var1967))\n  (define-fun null-var3943 () var3943\n    var3943!val!1)\n  (define-fun null-var1032 () var1032\n    var1032!val!1)\n  (define-fun var1947 () var1032\n    var1032!val!0)\n  (define-fun var3623 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2177 () Int\n    1)\n  (define-fun var1967 () var3957\n    var3957!val!0)\n  (define-fun var3456 () var1983\n    var1983!val!0)\n  (define-fun var105 () Int\n    (getIndex/-2136393185 var1947))\n  (define-fun var2782 () var3943\n    var3943!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-var1983 () var1983\n    var1983!val!1)\n  (define-fun getIndex/-2136393185 ((x!0 var1032)) Int\n    (- 1))\n  (define-fun matcher/468719934 ((x!0 var1807) (x!1 String)) var872\n    var872!val!0)\n  (define-fun pattern/443652580 ((x!0 var3957)) var1807\n    var1807!val!0)\n  (define-fun lookingAt/-1645860844 ((x!0 var872)) Bool\n    false)\n  (define-fun setErrorIndex/-1773443795 ((x!0 var1032) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 45 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165167104,
            "run_time": 2.067493200302124,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2177 () Int 1)\r\n  (define-fun var1947 () var1032 var1032!16)\r\n  (define-fun var3623 () String \"\")\r\n  (define-fun var2782 () var3943 var3943!14)\r\n  (define-fun var3456 () var1983 var1983!12)\r\n  (define-fun var1967 () var3957 var3957!10)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var1032 () var1032 var1032!8)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var3943 () var3943 var3943!6)\r\n  (define-fun null-var1983 () var1983 var1983!4)\r\n  (define-fun null-var3957 () var3957 var3957!2)\r\n  (define-fun getIndex/-2136393185 ((x!0 var1032)) Int (ite (= x!0 var1032!16) (- 1) 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser$PatternStrategy",
            "r6 := @parameter0: org.apache.commons.lang3.time.FastDateParser",
            "r7 := @parameter1: java.util.Calendar",
            "r1 := @parameter2: java.lang.String",
            "r2 := @parameter3: java.text.ParsePosition",
            "i5 := @parameter4: int",
            "$r3 = r0.<org.apache.commons.lang3.time.FastDateParser$PatternStrategy: java.util.regex.Pattern pattern>",
            "$i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()",
            "$r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0)",
            "r5 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4)",
            "$z0 = virtualinvoke r5.<java.util.regex.Matcher: boolean lookingAt()>()",
            "if $z0 != 0 goto $i2 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()",
            "$i4 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()",
            "virtualinvoke r2.<java.text.ParsePosition: void setErrorIndex(int)>($i4)",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.text.translate.JavaUnicodeEscaper__toUtf16Escape__-852202841\\3474.smt2",
        "z3": {
            "memory": 31592448,
            "run_time": 0.10327911376953125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2254:\r\n  ;;   var2254!val!0 var2254!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2254!val!0 () var2254)\r\n  (declare-fun var2254!val!1 () var2254)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2254)) (or (= x var2254!val!0) (= x var2254!val!1)))\r\n  ;; -----------\r\n  (define-fun var645 () String\r\n    (str.++ var3251!1 \"\\u{5c}u\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3251 () String\r\n    String-init)\r\n  (define-fun var1708 () Int\r\n    (select (var1950_toChars/-1738819595 var1337) 1))\r\n  (define-fun var2628 () Int\r\n    (select (var1950_toChars/-1738819595 var1337) 0))\r\n  (define-fun var1806 () String\r\n    (var2167_hex/-1308539637 (select (var1950_toChars/-1738819595 var1337) 1)))\r\n  (define-fun var3309 () Int\r\n    (select (var1950_toChars/-1738819595 var1337) 0))\r\n  (define-fun var107 () String\r\n    (str.++ var3251!1\r\n        \"\\u{5c}u\"\r\n        (var2167_hex/-1308539637\r\n          (select (var1950_toChars/-1738819595 var1337) 0))\r\n        \"\\u{5c}u\"))\r\n  (define-fun var2497 () String\r\n    (str.++ var3251!1\r\n        \"\\u{5c}u\"\r\n        (var2167_hex/-1308539637\r\n          (select (var1950_toChars/-1738819595 var1337) 0))))\r\n  (define-fun var2866 () var2254\r\n    var2254!val!0)\r\n  (define-fun var1592 () Int\r\n    (select (var1950_toChars/-1738819595 var1337) 1))\r\n  (define-fun null-var2254 () var2254\r\n    var2254!val!1)\r\n  (define-fun var358 () String\r\n    (var2167_hex/-1308539637 (select (var1950_toChars/-1738819595 var1337) 0)))\r\n  (define-fun var1337 () Int\r\n    1)\r\n  (define-fun var139 () String\r\n    (str.++ var3251!1\r\n        \"\\u{5c}u\"\r\n        (var2167_hex/-1308539637\r\n          (select (var1950_toChars/-1738819595 var1337) 0))\r\n        \"\\u{5c}u\"\r\n        (var2167_hex/-1308539637\r\n          (select (var1950_toChars/-1738819595 var1337) 1))))\r\n  (define-fun var3795 () (Array Int Int)\r\n    (var1950_toChars/-1738819595 var1337))\r\n  (define-fun var2203 () String\r\n    (str.++ var3251!1\r\n        \"\\u{5c}u\"\r\n        (var2167_hex/-1308539637\r\n          (select (var1950_toChars/-1738819595 var1337) 0))\r\n        \"\\u{5c}u\"\r\n        (var2167_hex/-1308539637\r\n          (select (var1950_toChars/-1738819595 var1337) 1))))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var3251!1 () String\r\n    \"\")\r\n  (define-fun var645!1 () String\r\n    \"\\u{5c}u\")\r\n  (define-fun var2497!1 () String\r\n    \"\\u{5c}u\\u{5c}u\")\r\n  (define-fun var107!1 () String\r\n    \"\\u{5c}u\\u{5c}u\")\r\n  (define-fun var3251!2 () String\r\n    \"\\u{5c}u\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1950_toChars/-1738819595 ((x!0 Int)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var2167_hex/-1308539637 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 56 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1667072,
            "run_time": 0.09359240531921387,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2254 is 2\r\n; rep: (as @var2254_0 var2254)\r\n; rep: (as @var2254_1 var2254)\r\n; cardinality of var1950 is 1\r\n; rep: (as @var1950_0 var1950)\r\n; cardinality of var2167 is 1\r\n; rep: (as @var2167_0 var2167)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1950_toChars/-1738819595 ((BOUND_VARIABLE_640 Int)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun String-init () String \"\")\r\n(define-fun var2167_hex/-1308539637 ((BOUND_VARIABLE_645 Int)) String \"\")\r\n(define-fun null-var2254 () var2254 (as @var2254_0 var2254))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2866 () var2254 (as @var2254_1 var2254))\r\n(define-fun var1337 () Int 0)\r\n(define-fun var3251!1 () String \"\")\r\n(define-fun var3251!2 () String \"\\u{5c}u\")\r\n(define-fun var645!1 () String \"\\u{5c}u\")\r\n(define-fun var2497!1 () String \"\\u{5c}u\\u{5c}u\")\r\n(define-fun var107!1 () String \"\\u{5c}u\\u{5c}u\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36126720,
            "run_time": 0.1664135456085205,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2254:\n  ;;   var2254!val!0 var2254!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2254!val!0 () var2254)\n  (declare-fun var2254!val!1 () var2254)\n  ;; cardinality constraint:\n  (forall ((x var2254)) (or (= x var2254!val!0) (= x var2254!val!1)))\n  ;; -----------\n  (define-fun var2628 () Int\n    (select (var1950_toChars/-1738819595 var1337) 0))\n  (define-fun var3309 () Int\n    (select (var1950_toChars/-1738819595 var1337) 0))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3251 () String\n    String-init)\n  (define-fun var3795 () (Array Int Int)\n    (var1950_toChars/-1738819595 var1337))\n  (define-fun var1592 () Int\n    (select (var1950_toChars/-1738819595 var1337) 1))\n  (define-fun var1806 () String\n    (var2167_hex/-1308539637 (select (var1950_toChars/-1738819595 var1337) 1)))\n  (define-fun var107 () String\n    (str.++ var3251!1\n        \"\\u{5c}u\"\n        (var2167_hex/-1308539637\n          (select (var1950_toChars/-1738819595 var1337) 0))\n        \"\\u{5c}u\"))\n  (define-fun var2497 () String\n    (str.++ var3251!1\n        \"\\u{5c}u\"\n        (var2167_hex/-1308539637\n          (select (var1950_toChars/-1738819595 var1337) 0))))\n  (define-fun var2866 () var2254\n    var2254!val!0)\n  (define-fun var358 () String\n    (var2167_hex/-1308539637 (select (var1950_toChars/-1738819595 var1337) 0)))\n  (define-fun null-var2254 () var2254\n    var2254!val!1)\n  (define-fun var139 () String\n    (str.++ var3251!1\n        \"\\u{5c}u\"\n        (var2167_hex/-1308539637\n          (select (var1950_toChars/-1738819595 var1337) 0))\n        \"\\u{5c}u\"\n        (var2167_hex/-1308539637\n          (select (var1950_toChars/-1738819595 var1337) 1))))\n  (define-fun var1337 () Int\n    1)\n  (define-fun var2203 () String\n    (str.++ var3251!1\n        \"\\u{5c}u\"\n        (var2167_hex/-1308539637\n          (select (var1950_toChars/-1738819595 var1337) 0))\n        \"\\u{5c}u\"\n        (var2167_hex/-1308539637\n          (select (var1950_toChars/-1738819595 var1337) 1))))\n  (define-fun var645 () String\n    (str.++ var3251!1 \"\\u{5c}u\"))\n  (define-fun var1708 () Int\n    (select (var1950_toChars/-1738819595 var1337) 1))\n  (define-fun null-Int () Int\n    0)\n  (define-fun var3251!1 () String\n    \"\")\n  (define-fun var645!1 () String\n    \"\\u{5c}u\")\n  (define-fun var2497!1 () String\n    \"\\u{5c}u\\u{5c}u\")\n  (define-fun var107!1 () String\n    \"\\u{5c}u\\u{5c}u\")\n  (define-fun var3251!2 () String\n    \"\\u{5c}u\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1950_toChars/-1738819595 ((x!0 Int)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var2167_hex/-1308539637 ((x!0 Int)) String\n    \"\")\n)\n(error \"line 56 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 183947264,
            "run_time": 2.2395026683807373,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2254/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.text.translate.JavaUnicodeEscaper__toUtf16Escape__-852202841\\3474.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var107!1 =\r\n     concat(all_26_6, all_26_4)\r\n   var2497!1 =\r\n     concat(all_23_3, \"\\u{0}5cu\")\r\n   var645!1 =\r\n     concat(\"\\u{0}5cu\", all_20_3)\r\n   all_26_6 =\r\n     concat(all_26_7, \"\\u{0}5cu\")\r\n   all_23_3 =\r\n     concat(\"\\u{0}5cu\", all_20_3)\r\n   all_26_7 =\r\n     concat(\"\\u{0}5cu\", all_20_3)\r\n\r\n1748ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r9 := @this: org.apache.commons.lang3.text.translate.JavaUnicodeEscaper",
            "i0 := @parameter0: int",
            "r0 = staticinvoke <java.lang.Character: char[] toChars(int)>(i0)",
            "$r10 = new java.lang.StringBuilder",
            "specialinvoke $r10.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\\u\")",
            "$c1 = r0[0]",
            "$i3 = (int) $c1",
            "$r2 = staticinvoke <org.apache.commons.lang3.text.translate.JavaUnicodeEscaper: java.lang.String hex(int)>($i3)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\\u\")",
            "$c2 = r0[1]",
            "$i4 = (int) $c2",
            "$r5 = staticinvoke <org.apache.commons.lang3.text.translate.JavaUnicodeEscaper: java.lang.String hex(int)>($i4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDatePrinter__parsePattern__1876451452\\4627.smt2",
        "z3": {
            "memory": 31805440,
            "run_time": 0.15090179443359375,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3758:\r\n  ;;   var3758!val!0 var3758!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3758!val!0 () var3758)\r\n  (declare-fun var3758!val!1 () var3758)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3758)) (or (= x var3758!val!0) (= x var3758!val!1)))\r\n  ;; -----------\r\n  (define-fun var31 () (Array Int String)\r\n    (getEras/-1456756074 var764!1))\r\n  (define-fun var3917 () (Array Int String)\r\n    (getAmPmStrings/-64599668 var764!1))\r\n  (define-fun var3268 () String\r\n    (pattern/1549876084 var2906))\r\n  (define-fun null-var3758 () var3758\r\n    var3758!val!1)\r\n  (define-fun var3892 () Int\r\n    0)\r\n  (define-fun var3812 () Int\r\n    (str.len (pattern/1549876084 var2906)))\r\n  (define-fun var1942 () var239\r\n    var239-init)\r\n  (define-fun var3498 () var2934\r\n    (locale/1549876084 var2906))\r\n  (define-fun var3843 () (Array Int String)\r\n    (getMonths/746086338 var764!1))\r\n  (define-fun var1537 () (Array Int Int)\r\n    arr-Int-init)\r\n  (define-fun var2906 () var3758\r\n    var3758!val!0)\r\n  (define-fun var764 () var3341\r\n    var3341-init)\r\n  (define-fun var32 () (Array Int String)\r\n    (getWeekdays/1793337962 var764!1))\r\n  (define-fun var3782 () (Array Int String)\r\n    (getShortWeekdays/534253790 var764!1))\r\n  (define-fun var469 () (Array Int String)\r\n    (getShortMonths/-832875722 var764!1))\r\n  (define-fun var3498!1 () var2934\r\n    var2934!val!0)\r\n  (define-fun var764!1 () var3341\r\n    var3341!val!0)\r\n  (define-fun var1942!1 () var239\r\n    var239!val!0)\r\n  (define-fun var239-init () var239\r\n    var239!val!0)\r\n  (define-fun arr-Int-init () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var3341-init () var3341\r\n    var3341!val!0)\r\n  (define-fun pattern/1549876084 ((x!0 var3758)) String\r\n    \"\")\r\n  (define-fun <init>/-325640736 ((x!0 var239)) void\r\n    void!val!0)\r\n  (define-fun getWeekdays/1793337962 ((x!0 var3341)) (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun getShortMonths/-832875722 ((x!0 var3341)) (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun getAmPmStrings/-64599668 ((x!0 var3341)) (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun <init>/-1553082332 ((x!0 var3341) (x!1 var2934)) void\r\n    void!val!0)\r\n  (define-fun locale/1549876084 ((x!0 var3758)) var2934\r\n    var2934!val!0)\r\n  (define-fun getMonths/746086338 ((x!0 var3341)) (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun getShortWeekdays/534253790 ((x!0 var3341)) (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun getEras/-1456756074 ((x!0 var3341)) (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n)\r\n(error \"line 63 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1650688,
            "run_time": 0.03080606460571289,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3758 is 2\r\n; rep: (as @var3758_0 var3758)\r\n; rep: (as @var3758_1 var3758)\r\n; cardinality of var3341 is 1\r\n; rep: (as @var3341_0 var3341)\r\n; cardinality of var2934 is 1\r\n; rep: (as @var2934_0 var2934)\r\n; cardinality of var239 is 1\r\n; rep: (as @var239_0 var239)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3341-init () var3341 (as @var3341_0 var3341))\r\n(define-fun locale/1549876084 ((BOUND_VARIABLE_562 var3758)) var2934 (as @var2934_0 var2934))\r\n(define-fun <init>/-1553082332 ((BOUND_VARIABLE_565 var3341) (BOUND_VARIABLE_566 var2934)) void (as @void_0 void))\r\n(define-fun var239-init () var239 (as @var239_0 var239))\r\n(define-fun <init>/-325640736 ((BOUND_VARIABLE_569 var239)) void (as @void_0 void))\r\n(define-fun getEras/-1456756074 ((BOUND_VARIABLE_572 var3341)) (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun getMonths/746086338 ((BOUND_VARIABLE_577 var3341)) (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun getShortMonths/-832875722 ((BOUND_VARIABLE_580 var3341)) (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun getWeekdays/1793337962 ((BOUND_VARIABLE_583 var3341)) (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun getShortWeekdays/534253790 ((BOUND_VARIABLE_586 var3341)) (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun getAmPmStrings/-64599668 ((BOUND_VARIABLE_589 var3341)) (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun pattern/1549876084 ((_arg_1 var3758)) String \"\")\r\n(define-fun arr-Int-init () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun null-var3758 () var3758 (as @var3758_0 var3758))\r\n(define-fun var2906 () var3758 (as @var3758_1 var3758))\r\n(define-fun var764!1 () var3341 (as @var3341_0 var3341))\r\n(define-fun var3498!1 () var2934 (as @var2934_0 var2934))\r\n(define-fun var1942!1 () var239 (as @var239_0 var239))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35422208,
            "run_time": 0.09298467636108398,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 62 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 63 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164704256,
            "run_time": 2.0955638885498047,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2906 () var3758 var3758!4)\r\n  (define-fun null-var3758 () var3758 var3758!2)\r\n  (define-fun pattern/1549876084 ((x!0 var3758)) String (ite (= x!0 var3758!4) \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 13,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDatePrinter",
            "$r51 = new java.text.DateFormatSymbols",
            "$r2 = r1.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Locale locale>",
            "specialinvoke $r51.<java.text.DateFormatSymbols: void <init>(java.util.Locale)>($r2)",
            "$r52 = new java.util.ArrayList",
            "specialinvoke $r52.<java.util.ArrayList: void <init>()>()",
            "r4 = virtualinvoke $r51.<java.text.DateFormatSymbols: java.lang.String[] getEras()>()",
            "r5 = virtualinvoke $r51.<java.text.DateFormatSymbols: java.lang.String[] getMonths()>()",
            "r6 = virtualinvoke $r51.<java.text.DateFormatSymbols: java.lang.String[] getShortMonths()>()",
            "r7 = virtualinvoke $r51.<java.text.DateFormatSymbols: java.lang.String[] getWeekdays()>()",
            "r8 = virtualinvoke $r51.<java.text.DateFormatSymbols: java.lang.String[] getShortWeekdays()>()",
            "r9 = virtualinvoke $r51.<java.text.DateFormatSymbols: java.lang.String[] getAmPmStrings()>()",
            "$r10 = r1.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String pattern>",
            "i0 = virtualinvoke $r10.<java.lang.String: int length()>()",
            "r11 = newarray (int)[1]",
            "i6 = 0",
            "if i6 >= i0 goto return $r52",
            "return $r52"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__exclusiveBetween__-480888120\\648.smt2",
        "z3": {
            "memory": 31780864,
            "run_time": 0.15358614921569824,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2680:\r\n  ;;   var2680!val!0 var2680!val!3 var2680!val!5 var2680!val!4 var2680!val!6 var2680!val!1 var2680!val!7 var2680!val!2 var2680!val!8 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2680!val!0 () var2680)\r\n  (declare-fun var2680!val!3 () var2680)\r\n  (declare-fun var2680!val!5 () var2680)\r\n  (declare-fun var2680!val!4 () var2680)\r\n  (declare-fun var2680!val!6 () var2680)\r\n  (declare-fun var2680!val!1 () var2680)\r\n  (declare-fun var2680!val!7 () var2680)\r\n  (declare-fun var2680!val!2 () var2680)\r\n  (declare-fun var2680!val!8 () var2680)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2680))\r\n          (or (= x var2680!val!0)\r\n              (= x var2680!val!3)\r\n              (= x var2680!val!5)\r\n              (= x var2680!val!4)\r\n              (= x var2680!val!6)\r\n              (= x var2680!val!1)\r\n              (= x var2680!val!7)\r\n              (= x var2680!val!2)\r\n              (= x var2680!val!8)))\r\n  ;; -----------\r\n  (define-fun var591 () Int\r\n    (Int_valueOf/-1102777585 var2145))\r\n  (define-fun var1554!3 () (Array Int var2680)\r\n    (store ((as const (Array Int var2680)) var2680!val!8) 2 var2680!val!2))\r\n  (define-fun null-__Array__Int__var2680__ () (Array Int var2680)\r\n    (store (store ((as const (Array Int var2680)) var2680!val!5) 12 var2680!val!7)\r\n       10\r\n       var2680!val!4))\r\n  (define-fun var3639 () Int\r\n    (- 38))\r\n  (define-fun var2323 () Int\r\n    (Int_valueOf/-1102777585 var3639))\r\n  (define-fun var2151 () Int\r\n    (ite (> var3639 var2145) 1 (ite (< var3639 var2145) (- 1) 0)))\r\n  (define-fun var118 () var265\r\n    var265-init)\r\n  (define-fun var1998 () Int\r\n    (ite (> var3639 var2145) 1 (ite (< var3639 var2145) (- 1) 0)))\r\n  (define-fun var670 () Int\r\n    (Int_valueOf/-1102777585 var2991))\r\n  (define-fun var2991 () Int\r\n    4)\r\n  (define-fun var2145 () Int\r\n    7719)\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var3927 () String\r\n    (String_format/1339386452\r\n  \"The value %s is not in the specified exclusive range of %s to %s\"\r\n  var1554!3))\r\n  (define-fun var1554!2 () (Array Int var2680)\r\n    (store ((as const (Array Int var2680)) var2680!val!1) 11 var2680!val!6))\r\n  (define-fun var1554 () (Array Int var2680)\r\n    arr-var2680-init)\r\n  (define-fun var1554!1 () (Array Int var2680)\r\n    (store ((as const (Array Int var2680)) var2680!val!0) 10 var2680!val!3))\r\n  (define-fun arr-var2680-init () (Array Int var2680)\r\n    ((as const (Array Int var2680)) var2680!val!0))\r\n  (define-fun var118!1 () var265\r\n    var265!val!0)\r\n  (define-fun var265-init () var265\r\n    var265!val!0)\r\n  (define-fun var3927!1 () String\r\n    \"\")\r\n  (define-fun Int_valueOf/-1102777585 ((x!0 Int)) Int\r\n    (ite (= x!0 7719) 8\r\n    (ite (= x!0 4) 9\r\n      7)))\r\n  (define-fun k!1 ((x!0 Int)) var2680\r\n    (ite (= x!0 12) var2680!val!7\r\n    (ite (= x!0 10) var2680!val!4\r\n      var2680!val!5)))\r\n  (define-fun k!2 ((x!0 Int)) var2680\r\n    (ite (= x!0 11) var2680!val!6\r\n      var2680!val!1))\r\n  (define-fun cast-from-Int-to-var2680 ((x!0 Int)) var2680\r\n    (ite (= x!0 8) var2680!val!1\r\n    (ite (= x!0 9) var2680!val!2\r\n      var2680!val!0)))\r\n  (define-fun k!3 ((x!0 Int)) var2680\r\n    (ite (= x!0 2) var2680!val!2\r\n      var2680!val!8))\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var2680))) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var265) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1654784,
            "run_time": 0.031195402145385742,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var265 is 1\r\n; rep: (as @var265_0 var265)\r\n; cardinality of var2680 is 5\r\n; rep: (as @var2680_0 var2680)\r\n; rep: (as @var2680_1 var2680)\r\n; rep: (as @var2680_2 var2680)\r\n; rep: (as @var2680_3 var2680)\r\n; rep: (as @var2680_4 var2680)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var265-init () var265 (as @var265_0 var265))\r\n(define-fun arr-var2680-init () (Array Int var2680) ((as const (Array Int var2680)) (as @var2680_0 var2680)))\r\n(define-fun Int_valueOf/-1102777585 ((_arg_1 Int)) Int (ite (= _arg_1 0) 3 (- 2)))\r\n(define-fun cast-from-Int-to-var2680 ((_arg_1 Int)) var2680 (ite (= _arg_1 (- 2)) (as @var2680_0 var2680) (as @var2680_1 var2680)))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_825 String) (BOUND_VARIABLE_826 (Array Int var2680))) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_829 var265) (BOUND_VARIABLE_830 String)) void (as @void_0 void))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-__Array__Int__var2680__ () (Array Int var2680) (store ((as const (Array Int var2680)) (as @var2680_1 var2680)) 0 (as @var2680_3 var2680)))\r\n(define-fun var2145 () Int 1)\r\n(define-fun var2991 () Int 0)\r\n(define-fun var3639 () Int 0)\r\n(define-fun var1554!1 () (Array Int var2680) (store ((as const (Array Int var2680)) (as @var2680_0 var2680)) 0 (as @var2680_1 var2680)))\r\n(define-fun var1554!2 () (Array Int var2680) (store ((as const (Array Int var2680)) (as @var2680_2 var2680)) 1 (as @var2680_0 var2680)))\r\n(define-fun var1554!3 () (Array Int var2680) (store (store ((as const (Array Int var2680)) (as @var2680_3 var2680)) 0 (as @var2680_4 var2680)) 2 (as @var2680_1 var2680)))\r\n(define-fun var118!1 () var265 (as @var265_0 var265))\r\n(define-fun var3927!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36401152,
            "run_time": 0.109344482421875,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2680:\n  ;;   var2680!val!0 var2680!val!3 var2680!val!5 var2680!val!4 var2680!val!6 var2680!val!1 var2680!val!7 var2680!val!2 var2680!val!8 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2680!val!0 () var2680)\n  (declare-fun var2680!val!3 () var2680)\n  (declare-fun var2680!val!5 () var2680)\n  (declare-fun var2680!val!4 () var2680)\n  (declare-fun var2680!val!6 () var2680)\n  (declare-fun var2680!val!1 () var2680)\n  (declare-fun var2680!val!7 () var2680)\n  (declare-fun var2680!val!2 () var2680)\n  (declare-fun var2680!val!8 () var2680)\n  ;; cardinality constraint:\n  (forall ((x var2680))\n          (or (= x var2680!val!0)\n              (= x var2680!val!3)\n              (= x var2680!val!5)\n              (= x var2680!val!4)\n              (= x var2680!val!6)\n              (= x var2680!val!1)\n              (= x var2680!val!7)\n              (= x var2680!val!2)\n              (= x var2680!val!8)))\n  ;; -----------\n  (define-fun var1998 () Int\n    (ite (> var3639 var2145) 1 (ite (< var3639 var2145) (- 1) 0)))\n  (define-fun var670 () Int\n    (Int_valueOf/-1102777585 var2991))\n  (define-fun var1554 () (Array Int var2680)\n    arr-var2680-init)\n  (define-fun var3639 () Int\n    (- 7719))\n  (define-fun var1554!2 () (Array Int var2680)\n    (store ((as const (Array Int var2680)) var2680!val!1) 11 var2680!val!6))\n  (define-fun var591 () Int\n    (Int_valueOf/-1102777585 var2145))\n  (define-fun var1554!1 () (Array Int var2680)\n    (store ((as const (Array Int var2680)) var2680!val!3) 0 var2680!val!0))\n  (define-fun var1554!3 () (Array Int var2680)\n    (store ((as const (Array Int var2680)) var2680!val!8) 2 var2680!val!2))\n  (define-fun var2991 () Int\n    4)\n  (define-fun var3927 () String\n    (String_format/1339386452\n  \"The value %s is not in the specified exclusive range of %s to %s\"\n  var1554!3))\n  (define-fun var2145 () Int\n    21238)\n  (define-fun null-Int () Int\n    3)\n  (define-fun null-__Array__Int__var2680__ () (Array Int var2680)\n    (store (store ((as const (Array Int var2680)) var2680!val!5) 10 var2680!val!4)\n       12\n       var2680!val!7))\n  (define-fun var2323 () Int\n    (Int_valueOf/-1102777585 var3639))\n  (define-fun var2151 () Int\n    (ite (> var3639 var2145) 1 (ite (< var3639 var2145) (- 1) 0)))\n  (define-fun var118 () var265\n    var265-init)\n  (define-fun arr-var2680-init () (Array Int var2680)\n    ((as const (Array Int var2680)) var2680!val!0))\n  (define-fun var118!1 () var265\n    var265!val!0)\n  (define-fun var265-init () var265\n    var265!val!0)\n  (define-fun var3927!1 () String\n    \"\")\n  (define-fun Int_valueOf/-1102777585 ((x!0 Int)) Int\n    (ite (= x!0 21238) 8\n    (ite (= x!0 4) 9\n      7)))\n  (define-fun k!1 ((x!0 Int)) var2680\n    (ite (= x!0 10) var2680!val!4\n    (ite (= x!0 12) var2680!val!7\n      var2680!val!5)))\n  (define-fun k!2 ((x!0 Int)) var2680\n    (ite (= x!0 11) var2680!val!6\n      var2680!val!1))\n  (define-fun cast-from-Int-to-var2680 ((x!0 Int)) var2680\n    (ite (= x!0 8) var2680!val!1\n    (ite (= x!0 9) var2680!val!2\n      var2680!val!0)))\n  (define-fun k!3 ((x!0 Int)) var2680\n    (ite (= x!0 2) var2680!val!2\n      var2680!val!8))\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var2680))) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var265) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 191799296,
            "run_time": 2.4551475048065186,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1554!3 () (Array Int var2680) (store ((as const (Array Int var2680)) var2680!162) 2 var2680!148))\r\n  (define-fun var1554!2 () (Array Int var2680) (store ((as const (Array Int var2680)) var2680!160) 1 var2680!152))\r\n  (define-fun var1554!1 () (Array Int var2680) (store ((as const (Array Int var2680)) var2680!164) 0 var2680!156))\r\n  (define-fun var3639 () Int 65)\r\n  (define-fun var2991 () Int 67)\r\n  (define-fun var2145 () Int 66)\r\n  (define-fun null-__Array__Int__var2680__ () (Array Int var2680) ((as const (Array Int var2680)) var2680!0))\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun var2680!156 () var2680 (cast-from-Int-to-var2680 79))\r\n  (define-fun var2680!152 () var2680 (cast-from-Int-to-var2680 77))\r\n  (define-fun var2680!148 () var2680 (cast-from-Int-to-var2680 75))\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var2680))) String (ite (and (= x!0 \"The value %s is not in the specified exclusive range of %s to %s\") (= x!1 (store ((as const (Array Int var2680)) var2680!162) 2 var2680!148))) \"\\u{0}\" \"\"))\r\n  (define-fun Int_valueOf/-1102777585 ((x!0 Int)) Int (ite (= x!0 65) 79 (ite (= x!0 66) 77 (ite (= x!0 67) 75 0))))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "l1 := @parameter0: long",
            "l3 := @parameter1: long",
            "l0 := @parameter2: long",
            "$b2 = l0 cmp l1",
            "$i5 = (int) $b2",
            "if $i5 <= 0 goto $r6 = new java.lang.IllegalArgumentException",
            "$r6 = new java.lang.IllegalArgumentException",
            "$r1 = newarray (java.lang.Object)[3]",
            "$r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)",
            "$r1[0] = $r2",
            "$r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1)",
            "$r1[1] = $r3",
            "$r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3)",
            "$r1[2] = $r4",
            "$r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"The value %s is not in the specified exclusive range of %s to %s\", $r1)",
            "specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5)",
            "throw $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__isInstanceOf__-946479397\\1054.smt2",
        "z3": {
            "memory": 31809536,
            "run_time": 0.09554624557495117,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1864:\r\n  ;;   var1864!val!0 var1864!val!4 var1864!val!6 var1864!val!2 var1864!val!5 var1864!val!3 var1864!val!7 var1864!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1864!val!0 () var1864)\r\n  (declare-fun var1864!val!4 () var1864)\r\n  (declare-fun var1864!val!6 () var1864)\r\n  (declare-fun var1864!val!2 () var1864)\r\n  (declare-fun var1864!val!5 () var1864)\r\n  (declare-fun var1864!val!3 () var1864)\r\n  (declare-fun var1864!val!7 () var1864)\r\n  (declare-fun var1864!val!1 () var1864)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1864))\r\n          (or (= x var1864!val!0)\r\n              (= x var1864!val!4)\r\n              (= x var1864!val!6)\r\n              (= x var1864!val!2)\r\n              (= x var1864!val!5)\r\n              (= x var1864!val!3)\r\n              (= x var1864!val!7)\r\n              (= x var1864!val!1)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var3923 () Bool\r\n    (isInstance/451912363 var2828 var1048))\r\n  (define-fun var958 () var3372\r\n    var3372-init)\r\n  (define-fun null-var1864 () var1864\r\n    var1864!val!1)\r\n  (define-fun null-__Array__Int__var1864__ () (Array Int var1864)\r\n    (store ((as const (Array Int var1864)) var1864!val!6) 2 var1864!val!5))\r\n  (define-fun var2828 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var1048 () var1864\r\n    var1864!val!0)\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var2943 () String\r\n    (String_format/1339386452 \"Expected type: %s, actual: %s\" var1283!2))\r\n  (define-fun var1283!2 () (Array Int var1864)\r\n    (store ((as const (Array Int var1864)) var1864!val!3) 3 var1864!val!7))\r\n  (define-fun var3397 () String\r\n    (getName/-1958580599 var2828))\r\n  (define-fun var1283!1 () (Array Int var1864)\r\n    (store ((as const (Array Int var1864)) var1864!val!2) 2 var1864!val!4))\r\n  (define-fun var1283 () (Array Int var1864)\r\n    arr-var1864-init)\r\n  (define-fun var183 () String\r\n    (var2901_getName/1956097721 var1048 \"null\"))\r\n  (define-fun var958!1 () var3372\r\n    var3372!val!0)\r\n  (define-fun var2943!1 () String\r\n    \"\")\r\n  (define-fun arr-var1864-init () (Array Int var1864)\r\n    ((as const (Array Int var1864)) var1864!val!0))\r\n  (define-fun var3372-init () var3372\r\n    var3372!val!0)\r\n  (define-fun var2901_getName/1956097721 ((x!0 var1864) (x!1 String)) String\r\n    \"n\")\r\n  (define-fun cast-from-String-to-var1864 ((x!0 String)) var1864\r\n    (ite (= x!0 \"n\") var1864!val!3\r\n      var1864!val!2))\r\n  (define-fun k!1 ((x!0 Int)) var1864\r\n    (ite (= x!0 2) var1864!val!5\r\n      var1864!val!6))\r\n  (define-fun k!2 ((x!0 Int)) var1864\r\n    (ite (= x!0 3) var1864!val!7\r\n      var1864!val!3))\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"null\")\r\n  (define-fun isInstance/451912363 ((x!0 ClassObject) (x!1 var1864)) Bool\r\n    false)\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var1864))) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var3372) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 49 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.0302581787109375,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1864 is 6\r\n; rep: (as @var1864_0 var1864)\r\n; rep: (as @var1864_1 var1864)\r\n; rep: (as @var1864_2 var1864)\r\n; rep: (as @var1864_3 var1864)\r\n; rep: (as @var1864_4 var1864)\r\n; rep: (as @var1864_5 var1864)\r\n; cardinality of var3372 is 1\r\n; rep: (as @var3372_0 var3372)\r\n; cardinality of var2901 is 1\r\n; rep: (as @var2901_0 var2901)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun isInstance/451912363 ((_arg_1 ClassObject) (_arg_2 var1864)) Bool false)\r\n(define-fun var3372-init () var3372 (as @var3372_0 var3372))\r\n(define-fun arr-var1864-init () (Array Int var1864) ((as const (Array Int var1864)) (as @var1864_0 var1864)))\r\n(define-fun getName/-1958580599 ((_arg_1 ClassObject)) String \"A\")\r\n(define-fun cast-from-String-to-var1864 ((_arg_1 String)) var1864 (ite (= \"A\" _arg_1) (as @var1864_3 var1864) (as @var1864_2 var1864)))\r\n(define-fun var2901_getName/1956097721 ((_arg_1 var1864) (_arg_2 String)) String \"B\")\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_662 String) (BOUND_VARIABLE_663 (Array Int var1864))) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_666 var3372) (BOUND_VARIABLE_667 String)) void (as @void_0 void))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-var1864 () var1864 (as @var1864_0 var1864))\r\n(define-fun null-__Array__Int__var1864__ () (Array Int var1864) (store ((as const (Array Int var1864)) (as @var1864_1 var1864)) 0 (as @var1864_4 var1864)))\r\n(define-fun var2828 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var1048 () var1864 (as @var1864_1 var1864))\r\n(define-fun var1283!1 () (Array Int var1864) (store ((as const (Array Int var1864)) (as @var1864_0 var1864)) 0 (as @var1864_3 var1864)))\r\n(define-fun var1283!2 () (Array Int var1864) (store ((as const (Array Int var1864)) (as @var1864_2 var1864)) 0 (as @var1864_5 var1864)))\r\n(define-fun var958!1 () var3372 (as @var3372_0 var3372))\r\n(define-fun var2943!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35532800,
            "run_time": 0.09290051460266113,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 48 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 49 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 183496704,
            "run_time": 2.2969534397125244,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1283!2 () (Array Int var1864) (store ((as const (Array Int var1864)) var1864!102) 1 var1864!96))\r\n  (define-fun var1283!1 () (Array Int var1864) (store ((as const (Array Int var1864)) var1864!100) 0 var1864!92))\r\n  (define-fun var1048 () var1864 var1864!74)\r\n  (define-fun var2828 () ClassObject ClassObject!72)\r\n  (define-fun null-__Array__Int__var1864__ () (Array Int var1864) ((as const (Array Int var1864)) var1864!0))\r\n  (define-fun null-var1864 () var1864 var1864!70)\r\n  (define-fun null-ClassObject () ClassObject ClassObject!68)\r\n  (define-fun var1864!96 () var1864 (cast-from-String-to-var1864 \"\\u{1}\"))\r\n  (define-fun var1864!92 () var1864 (cast-from-String-to-var1864 \"\\u{2}\"))\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var1864))) String (ite (and (= x!0 \"Expected type: %s, actual: %s\") (= x!1 (store ((as const (Array Int var1864)) var1864!102) 1 var1864!96))) \"\\u{0}\" \"\"))\r\n  (define-fun var2901_getName/1956097721 ((x!0 var1864) (x!1 String)) String (ite (and (= x!0 var1864!74) (= x!1 \"null\")) \"\\u{1}\" \"\"))\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String (ite (= x!0 ClassObject!72) \"\\u{2}\" \"\"))\r\n  (define-fun isInstance/451912363 ((x!0 ClassObject) (x!1 var1864)) Bool (ite (and (= x!0 ClassObject!72) (= x!1 var1864!74)) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Class",
            "r1 := @parameter1: java.lang.Object",
            "$z0 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1)",
            "if $z0 != 0 goto return",
            "$r2 = new java.lang.IllegalArgumentException",
            "$r3 = newarray (java.lang.Object)[2]",
            "$r4 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>()",
            "$r3[0] = $r4",
            "$r5 = staticinvoke <org.apache.commons.lang3.ClassUtils: java.lang.String getName(java.lang.Object,java.lang.String)>(r1, \"null\")",
            "$r3[1] = $r5",
            "$r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"Expected type: %s, actual: %s\", $r3)",
            "specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6)",
            "throw $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.StopWatch__toString__-1602269775\\4813.smt2",
        "z3": {
            "memory": 31989760,
            "run_time": 0.1486518383026123,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2075:\r\n  ;;   var2075!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2075!val!0 () var2075)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2075)) (= x var2075!val!0))\r\n  ;; -----------\r\n  ;; universe for var2004:\r\n  ;;   var2004!val!1 var2004!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2004!val!1 () var2004)\r\n  (declare-fun var2004!val!0 () var2004)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2004)) (or (= x var2004!val!1) (= x var2004!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var2004 () var2004\r\n    var2004!val!1)\r\n  (define-fun var310 () String\r\n    (str.++ var1907!1\r\n        (var1763_toString/-749122252\r\n          (cast-from-String-to-var2075 (message/33220049 var558))\r\n          \"\")))\r\n  (define-fun var1328 () String\r\n    (str.++ var1907!1\r\n        (var1763_toString/-749122252\r\n          (cast-from-String-to-var2075 (message/33220049 var558))\r\n          \"\")\r\n        \" \"))\r\n  (define-fun var1164 () String\r\n    (var1763_toString/-749122252\r\n  (cast-from-String-to-var2075 (message/33220049 var558))\r\n  \"\"))\r\n  (define-fun var558 () var2004\r\n    var2004!val!0)\r\n  (define-fun var3841 () String\r\n    (message/33220049 var558))\r\n  (define-fun var405 () String\r\n    (str.++ var1907!1\r\n        (var1763_toString/-749122252\r\n          (cast-from-String-to-var2075 (message/33220049 var558))\r\n          \"\")\r\n        \" \"\r\n        (formatTime/309879225 var558)))\r\n  (define-fun var2099 () Bool\r\n    (let ((a!1 (str.len (var1763_toString/-749122252\r\n                      (cast-from-String-to-var2075 (message/33220049 var558))\r\n                      \"\"))))\r\n  (= a!1 0)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2046 () String\r\n    (str.++ var1907!1\r\n        (var1763_toString/-749122252\r\n          (cast-from-String-to-var2075 (message/33220049 var558))\r\n          \"\")\r\n        \" \"\r\n        (formatTime/309879225 var558)))\r\n  (define-fun var2662 () String\r\n    (formatTime/309879225 var558))\r\n  (define-fun var1907 () String\r\n    String-init)\r\n  (define-fun var1328!1 () String\r\n    \"A \")\r\n  (define-fun var1907!2 () String\r\n    \"A\")\r\n  (define-fun var1907!1 () String\r\n    \"\")\r\n  (define-fun var310!1 () String\r\n    \"A \")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1763_toString/-749122252 ((x!0 var2075) (x!1 String)) String\r\n    \"A\")\r\n  (define-fun cast-from-String-to-var2075 ((x!0 String)) var2075\r\n    var2075!val!0)\r\n  (define-fun message/33220049 ((x!0 var2004)) String\r\n    \"\")\r\n  (define-fun formatTime/309879225 ((x!0 var2004)) String\r\n    \"\")\r\n)\r\n(error \"line 53 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1626112,
            "run_time": 0.03126955032348633,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2004 is 2\r\n; rep: (as @var2004_0 var2004)\r\n; rep: (as @var2004_1 var2004)\r\n; cardinality of var1763 is 1\r\n; rep: (as @var1763_0 var1763)\r\n; cardinality of var2075 is 1\r\n; rep: (as @var2075_0 var2075)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun message/33220049 ((_arg_1 var2004)) String \"B\")\r\n(define-fun var1763_toString/-749122252 ((_arg_1 var2075) (_arg_2 String)) String \"A\")\r\n(define-fun cast-from-String-to-var2075 ((_arg_1 String)) var2075 (as @var2075_0 var2075))\r\n(define-fun formatTime/309879225 ((BOUND_VARIABLE_671 var2004)) String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun null-var2004 () var2004 (as @var2004_0 var2004))\r\n(define-fun var558 () var2004 (as @var2004_1 var2004))\r\n(define-fun var1907!1 () String \"\")\r\n(define-fun var1907!2 () String \"A\")\r\n(define-fun var310!1 () String \"A \")\r\n(define-fun var1328!1 () String \"A \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36810752,
            "run_time": 0.13944482803344727,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 52 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 53 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181882880,
            "run_time": 2.127976894378662,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2004/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.StopWatch__toString__-1602269775\\4813.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1328!1 =\r\n     concat(all_25_5, all_25_4)\r\n   var310!1 =\r\n     concat(var1907!2, \" \")\r\n   all_25_5 =\r\n     concat(var1907!2, \" \")\r\n\r\n1632ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 14,
        "api_sequence": [
            "<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>",
            "<java.lang.String: boolean isEmpty()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.StopWatch",
            "$r1 = r0.<org.apache.commons.lang3.time.StopWatch: java.lang.String message>",
            "r2 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>($r1, \"\")",
            "r3 = virtualinvoke r0.<org.apache.commons.lang3.time.StopWatch: java.lang.String formatTime()>()",
            "$z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()",
            "if $z0 == 0 goto $r4 = new java.lang.StringBuilder",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.DurationFormatUtils__lexx__836202102\\3949.smt2",
        "z3": {
            "memory": 31756288,
            "run_time": 0.13709616661071777,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 79 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.03007674217224121,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35573760,
            "run_time": 0.1086280345916748,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 79 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151252992,
            "run_time": 1.9080374240875244,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "$r37 = new java.util.ArrayList",
            "$i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "specialinvoke $r37.<java.util.ArrayList: void <init>(int)>($i0)",
            "z1 = 0",
            "z11 = 0",
            "z10 = 0",
            "z9 = 0",
            "r31 = null",
            "r32 = null",
            "z2 = 0",
            "z8 = 0",
            "z7 = 0",
            "z6 = 0",
            "z5 = 0",
            "z4 = 0",
            "z3 = 0",
            "$i6 = (int) -1",
            "i3 = $i6",
            "i4 = 0",
            "$i1 = virtualinvoke r1.<java.lang.String: int length()>()",
            "if i4 >= $i1 goto (branch)",
            "if z11 == 0 goto (branch)",
            "$r48 = new java.lang.IllegalArgumentException",
            "$r47 = new java.lang.StringBuilder",
            "specialinvoke $r47.<java.lang.StringBuilder: void <init>()>()",
            "$r12 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unmatched quote in format: \")",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r48.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r14)",
            "throw $r48"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__getStrategy__1867214738\\4388.smt2",
        "z3": {
            "memory": 31772672,
            "run_time": 0.22656655311584473,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var829:\r\n  ;;   var829!val!0 var829!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var829!val!0 () var829)\r\n  (declare-fun var829!val!1 () var829)\r\n  ;; cardinality constraint:\r\n  (forall ((x var829)) (or (= x var829!val!0) (= x var829!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1042:\r\n  ;;   var1042!val!1 var1042!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1042!val!1 () var1042)\r\n  (declare-fun var1042!val!0 () var1042)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1042)) (or (= x var1042!val!1) (= x var1042!val!0)))\r\n  ;; -----------\r\n  (define-fun var2056 () Int\r\n    var682)\r\n  (define-fun var3480 () Int\r\n    124)\r\n  (define-fun var759 () var1491\r\n    (getLocaleSpecificStrategy/-1436523368 var1247 15 var3338))\r\n  (define-fun null-var1042 () var1042\r\n    var1042!val!1)\r\n  (define-fun null-Int () Int\r\n    123)\r\n  (define-fun var3338 () var1042\r\n    var1042!val!0)\r\n  (define-fun var1247 () var829\r\n    var829!val!0)\r\n  (define-fun null-var829 () var829\r\n    var829!val!1)\r\n  (define-fun var682 () Int\r\n    122)\r\n  (define-fun getLocaleSpecificStrategy/-1436523368 ((x!0 var829)\r\n   (x!1 Int)\r\n   (x!2 var1042)) var1491\r\n    var1491!val!0)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1671168,
            "run_time": 0.13994717597961426,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var829 is 2\r\n; rep: (as @var829_0 var829)\r\n; rep: (as @var829_1 var829)\r\n; cardinality of var1042 is 2\r\n; rep: (as @var1042_0 var1042)\r\n; rep: (as @var1042_1 var1042)\r\n; cardinality of var1491 is 1\r\n; rep: (as @var1491_0 var1491)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getLocaleSpecificStrategy/-1436523368 ((BOUND_VARIABLE_1241 var829) (BOUND_VARIABLE_1242 Int) (BOUND_VARIABLE_1243 var1042)) var1491 (as @var1491_0 var1491))\r\n(define-fun null-var829 () var829 (as @var829_0 var829))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var1042 () var1042 (as @var1042_0 var1042))\r\n(define-fun var1247 () var829 (as @var829_1 var829))\r\n(define-fun var682 () Int 122)\r\n(define-fun var3480 () Int 0)\r\n(define-fun var3338 () var1042 (as @var1042_1 var1042))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36147200,
            "run_time": 0.12371182441711426,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var829:\n  ;;   var829!val!0 var829!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var829!val!0 () var829)\n  (declare-fun var829!val!1 () var829)\n  ;; cardinality constraint:\n  (forall ((x var829)) (or (= x var829!val!0) (= x var829!val!1)))\n  ;; -----------\n  ;; universe for var1042:\n  ;;   var1042!val!1 var1042!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1042!val!1 () var1042)\n  (declare-fun var1042!val!0 () var1042)\n  ;; cardinality constraint:\n  (forall ((x var1042)) (or (= x var1042!val!1) (= x var1042!val!0)))\n  ;; -----------\n  (define-fun var3480 () Int\n    124)\n  (define-fun var2056 () Int\n    var682)\n  (define-fun var759 () var1491\n    (getLocaleSpecificStrategy/-1436523368 var1247 15 var3338))\n  (define-fun null-var1042 () var1042\n    var1042!val!1)\n  (define-fun null-Int () Int\n    123)\n  (define-fun var3338 () var1042\n    var1042!val!0)\n  (define-fun var1247 () var829\n    var829!val!0)\n  (define-fun null-var829 () var829\n    var829!val!1)\n  (define-fun var682 () Int\n    122)\n  (define-fun getLocaleSpecificStrategy/-1436523368 ((x!0 var829)\n   (x!1 Int)\n   (x!2 var1042)) var1491\n    var1491!val!0)\n)\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154865664,
            "run_time": 1.5833897590637207,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3338 () var1042 var1042!8)\r\n  (define-fun var3480 () Int 1)\r\n  (define-fun var682 () Int 122)\r\n  (define-fun var1247 () var829 var829!6)\r\n  (define-fun null-var1042 () var1042 var1042!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var829 () var829 var829!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser",
            "c0 := @parameter0: char",
            "i1 := @parameter1: int",
            "r1 := @parameter2: java.util.Calendar",
            "$i2 = (int) c0",
            "tableswitch($i2) {     case 68: goto $r20 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY>;     case 69: goto $r19 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(7, r1);     case 70: goto $r18 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY>;     case 71: goto $r17 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(0, r1);     case 72: goto $r16 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY>;     case 73: goto $r30 = new java.lang.IllegalArgumentException;     case 74: goto $r30 = new java.lang.IllegalArgumentException;     case 75: goto $r15 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY>;     case 76: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 77: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 78: goto $r30 = new java.lang.IllegalArgumentException;     case 79: goto $r30 = new java.lang.IllegalArgumentException;     case 80: goto $r30 = new java.lang.IllegalArgumentException;     case 81: goto $r30 = new java.lang.IllegalArgumentException;     case 82: goto $r30 = new java.lang.IllegalArgumentException;     case 83: goto $r14 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY>;     case 84: goto $r30 = new java.lang.IllegalArgumentException;     case 85: goto $r30 = new java.lang.IllegalArgumentException;     case 86: goto $r30 = new java.lang.IllegalArgumentException;     case 87: goto $r13 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY>;     case 88: goto $r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int)>(i1);     case 89: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 90: goto if i1 != 2 goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     case 91: goto $r30 = new java.lang.IllegalArgumentException;     case 92: goto $r30 = new java.lang.IllegalArgumentException;     case 93: goto $r30 = new java.lang.IllegalArgumentException;     case 94: goto $r30 = new java.lang.IllegalArgumentException;     case 95: goto $r30 = new java.lang.IllegalArgumentException;     case 96: goto $r30 = new java.lang.IllegalArgumentException;     case 97: goto $r10 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(9, r1);     case 98: goto $r30 = new java.lang.IllegalArgumentException;     case 99: goto $r30 = new java.lang.IllegalArgumentException;     case 100: goto $r9 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY>;     case 101: goto $r30 = new java.lang.IllegalArgumentException;     case 102: goto $r30 = new java.lang.IllegalArgumentException;     case 103: goto $r30 = new java.lang.IllegalArgumentException;     case 104: goto $r8 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR12_STRATEGY>;     case 105: goto $r30 = new java.lang.IllegalArgumentException;     case 106: goto $r30 = new java.lang.IllegalArgumentException;     case 107: goto $r7 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR24_OF_DAY_STRATEGY>;     case 108: goto $r30 = new java.lang.IllegalArgumentException;     case 109: goto $r6 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY>;     case 110: goto $r30 = new java.lang.IllegalArgumentException;     case 111: goto $r30 = new java.lang.IllegalArgumentException;     case 112: goto $r30 = new java.lang.IllegalArgumentException;     case 113: goto $r30 = new java.lang.IllegalArgumentException;     case 114: goto $r30 = new java.lang.IllegalArgumentException;     case 115: goto $r5 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY>;     case 116: goto $r30 = new java.lang.IllegalArgumentException;     case 117: goto $r4 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_STRATEGY>;     case 118: goto $r30 = new java.lang.IllegalArgumentException;     case 119: goto $r3 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY>;     case 120: goto $r30 = new java.lang.IllegalArgumentException;     case 121: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 122: goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     default: goto $r30 = new java.lang.IllegalArgumentException; }",
            "$r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.DateUtils__getFragment__420912903\\3824.smt2",
        "z3": {
            "memory": 32288768,
            "run_time": 0.10594773292541504,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1250:\r\n  ;;   var1250!val!0 var1250!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1250!val!0 () var1250)\r\n  (declare-fun var1250!val!1 () var1250)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1250)) (or (= x var1250!val!0) (= x var1250!val!1)))\r\n  ;; -----------\r\n  ;; universe for var302:\r\n  ;;   var302!val!1 var302!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var302!val!1 () var302)\r\n  (declare-fun var302!val!0 () var302)\r\n  ;; cardinality constraint:\r\n  (forall ((x var302)) (or (= x var302!val!1) (= x var302!val!0)))\r\n  ;; -----------\r\n  (define-fun var1357 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var3511 () String\r\n    (str.++ var1977!1 \"The fragment \" (str.from_int var846)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3731 () String\r\n    (str.++ var1977!1 \"The fragment \" (str.from_int var846) \" is not supported\"))\r\n  (define-fun var302-DAYS () var302\r\n    var302!val!0)\r\n  (define-fun null-var302 () var302\r\n    var302!val!1)\r\n  (define-fun var1977 () String\r\n    String-init)\r\n  (define-fun var846 () Int\r\n    3)\r\n  (define-fun var926 () var302\r\n    var302-DAYS)\r\n  (define-fun null-var1250 () var1250\r\n    var1250!val!1)\r\n  (define-fun var3095!1 () String\r\n    \"The fragment \")\r\n  (define-fun var1672 () var422\r\n    var422-init)\r\n  (define-fun var2575 () var1250\r\n    var1250!val!0)\r\n  (define-fun null-Int () Int\r\n    4)\r\n  (define-fun var3453 () String\r\n    (str.++ var1977!1 \"The fragment \" (str.from_int var846) \" is not supported\"))\r\n  (define-fun var871 () Int\r\n    0)\r\n  (define-fun var2990 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var3095 () String\r\n    (str.++ var1977!1 \"The fragment \"))\r\n  (define-fun var2916 () var302\r\n    var302!val!0)\r\n  (define-fun var3511!1 () String\r\n    \"The fragment 3 is not supported\")\r\n  (define-fun var1977!2 () String\r\n    \"The fragment \")\r\n  (define-fun var1977!1 () String\r\n    \"\")\r\n  (define-fun var1408 () String\r\n    \"\")\r\n  (define-fun var2575!1 () var1250\r\n    var1250!val!0)\r\n  (define-fun var3731!1 () String\r\n    \"\")\r\n  (define-fun var1672!1 () var422\r\n    var422!val!0)\r\n  (define-fun var422-init () var422\r\n    var422!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var1250-to-var2499 ((x!0 var1250)) var2499\r\n    var2499!val!0)\r\n  (define-fun var1969_requireNonNull/1378936425 ((x!0 var2499) (x!1 String)) var2499\r\n    var2499!val!0)\r\n  (define-fun <init>/875830710 ((x!0 var422) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 75 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.1102607250213623,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1250 is 2\r\n; rep: (as @var1250_0 var1250)\r\n; rep: (as @var1250_1 var1250)\r\n; cardinality of var302 is 2\r\n; rep: (as @var302_0 var302)\r\n; rep: (as @var302_1 var302)\r\n; cardinality of var1969 is 1\r\n; rep: (as @var1969_0 var1969)\r\n; cardinality of var2499 is 1\r\n; rep: (as @var2499_0 var2499)\r\n; cardinality of var422 is 1\r\n; rep: (as @var422_0 var422)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1969_requireNonNull/1378936425 ((BOUND_VARIABLE_1020 var2499) (BOUND_VARIABLE_1021 String)) var2499 (as @var2499_0 var2499))\r\n(define-fun cast-from-var1250-to-var2499 ((BOUND_VARIABLE_1024 var1250)) var2499 (as @var2499_0 var2499))\r\n(define-fun var422-init () var422 (as @var422_0 var422))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_1027 var422) (BOUND_VARIABLE_1028 String)) void (as @void_0 void))\r\n(define-fun null-var1250 () var1250 (as @var1250_0 var1250))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var302 () var302 (as @var302_0 var302))\r\n(define-fun var302-DAYS () var302 (as @var302_1 var302))\r\n(define-fun var2575 () var1250 (as @var1250_1 var1250))\r\n(define-fun var846 () Int 0)\r\n(define-fun var2916 () var302 (as @var302_1 var302))\r\n(define-fun var2575!1 () var1250 (as @var1250_0 var1250))\r\n(define-fun var1408 () String \"\")\r\n(define-fun var1977!1 () String \"\")\r\n(define-fun var1977!2 () String \"The fragment \")\r\n(define-fun var3095!1 () String \"The fragment \")\r\n(define-fun var3511!1 () String \"The fragment 0 is not supported\")\r\n(define-fun var1672!1 () var422 (as @var422_0 var422))\r\n(define-fun var3731!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36847616,
            "run_time": 0.13738155364990234,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1250:\n  ;;   var1250!val!0 var1250!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1250!val!0 () var1250)\n  (declare-fun var1250!val!1 () var1250)\n  ;; cardinality constraint:\n  (forall ((x var1250)) (or (= x var1250!val!0) (= x var1250!val!1)))\n  ;; -----------\n  ;; universe for var302:\n  ;;   var302!val!1 var302!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var302!val!1 () var302)\n  (declare-fun var302!val!0 () var302)\n  ;; cardinality constraint:\n  (forall ((x var302)) (or (= x var302!val!1) (= x var302!val!0)))\n  ;; -----------\n  (define-fun var3511 () String\n    (str.++ var1977!1 \"The fragment \" (str.from_int var846)))\n  (define-fun var926 () var302\n    var302-DAYS)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3731 () String\n    (str.++ var1977!1 \"The fragment \" (str.from_int var846) \" is not supported\"))\n  (define-fun var1672 () var422\n    var422-init)\n  (define-fun var302-DAYS () var302\n    var302!val!0)\n  (define-fun null-var302 () var302\n    var302!val!1)\n  (define-fun var1977 () String\n    String-init)\n  (define-fun var871 () Int\n    0)\n  (define-fun null-var1250 () var1250\n    var1250!val!1)\n  (define-fun var846 () Int\n    3)\n  (define-fun var2990 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var3453 () String\n    (str.++ var1977!1 \"The fragment \" (str.from_int var846) \" is not supported\"))\n  (define-fun var2575 () var1250\n    var1250!val!0)\n  (define-fun null-Int () Int\n    4)\n  (define-fun var1357 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var3095!1 () String\n    \"The fragment \")\n  (define-fun var1977!1 () String\n    \"\")\n  (define-fun var3095 () String\n    (str.++ var1977!1 \"The fragment \"))\n  (define-fun var2916 () var302\n    var302!val!0)\n  (define-fun var3511!1 () String\n    \"The fragment 3 is not supported\")\n  (define-fun var1977!2 () String\n    \"The fragment \")\n  (define-fun var1408 () String\n    \"\")\n  (define-fun var2575!1 () var1250\n    var1250!val!0)\n  (define-fun var3731!1 () String\n    \"\")\n  (define-fun var1672!1 () var422\n    var422!val!0)\n  (define-fun var422-init () var422\n    var422!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun cast-from-var1250-to-var2499 ((x!0 var1250)) var2499\n    var2499!val!0)\n  (define-fun var1969_requireNonNull/1378936425 ((x!0 var2499) (x!1 String)) var2499\n    var2499!val!0)\n  (define-fun <init>/875830710 ((x!0 var422) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 75 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175820800,
            "run_time": 2.4826900959014893,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3511!1 () String \"The fragment  is not supported\")\r\n  (define-fun var3095!1 () String \"The fragment \")\r\n  (define-fun var1977!2 () String \"The fragment \")\r\n  (define-fun var1977!1 () String \"\")\r\n  (define-fun var2916 () var302 var302!6)\r\n  (define-fun var846 () Int (- 6))\r\n  (define-fun var2575 () var1250 var1250!8)\r\n  (define-fun var302-DAYS () var302 var302!6)\r\n  (define-fun null-var302 () var302 var302!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var1250 () var1250 var1250!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.util.Calendar",
            "i0 := @parameter1: int",
            "r1 := @parameter2: java.util.concurrent.TimeUnit",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"calendar\")",
            "l15 = 0L",
            "$r2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit DAYS>",
            "if r1 != $r2 goto $z2 = 1",
            "$z2 = 0",
            "$z1 = 0",
            "goto [?= (branch)]",
            "lookupswitch(i0) {     case 1: goto $i11 = virtualinvoke r0.<java.util.Calendar: int get(int)>(6);     case 2: goto $i1 = virtualinvoke r0.<java.util.Calendar: int get(int)>(5);     default: goto tableswitch(i0) {     case 1: goto $i8 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);     case 2: goto $i8 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);     case 3: goto $r6 = new java.lang.IllegalArgumentException;     case 4: goto $r6 = new java.lang.IllegalArgumentException;     case 5: goto $i8 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);     case 6: goto $i8 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);     case 7: goto $r6 = new java.lang.IllegalArgumentException;     case 8: goto $r6 = new java.lang.IllegalArgumentException;     case 9: goto $r6 = new java.lang.IllegalArgumentException;     case 10: goto $r6 = new java.lang.IllegalArgumentException;     case 11: goto $i5 = virtualinvoke r0.<java.util.Calendar: int get(int)>(12);     case 12: goto $i16 = virtualinvoke r0.<java.util.Calendar: int get(int)>(13);     case 13: goto $i19 = virtualinvoke r0.<java.util.Calendar: int get(int)>(14);     case 14: goto goto [?= return l15];     default: goto $r6 = new java.lang.IllegalArgumentException; }; }",
            "tableswitch(i0) {     case 1: goto $i8 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);     case 2: goto $i8 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);     case 3: goto $r6 = new java.lang.IllegalArgumentException;     case 4: goto $r6 = new java.lang.IllegalArgumentException;     case 5: goto $i8 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);     case 6: goto $i8 = virtualinvoke r0.<java.util.Calendar: int get(int)>(11);     case 7: goto $r6 = new java.lang.IllegalArgumentException;     case 8: goto $r6 = new java.lang.IllegalArgumentException;     case 9: goto $r6 = new java.lang.IllegalArgumentException;     case 10: goto $r6 = new java.lang.IllegalArgumentException;     case 11: goto $i5 = virtualinvoke r0.<java.util.Calendar: int get(int)>(12);     case 12: goto $i16 = virtualinvoke r0.<java.util.Calendar: int get(int)>(13);     case 13: goto $i19 = virtualinvoke r0.<java.util.Calendar: int get(int)>(14);     case 14: goto goto [?= return l15];     default: goto $r6 = new java.lang.IllegalArgumentException; }",
            "$r6 = new java.lang.IllegalArgumentException",
            "$r7 = new java.lang.StringBuilder",
            "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"The fragment \")",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is not supported\")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r11)",
            "throw $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__getStrategy__1867214738\\4337.smt2",
        "z3": {
            "memory": 31776768,
            "run_time": 0.21167325973510742,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2666:\r\n  ;;   var2666!val!0 var2666!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2666!val!0 () var2666)\r\n  (declare-fun var2666!val!1 () var2666)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2666)) (or (= x var2666!val!0) (= x var2666!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3886:\r\n  ;;   var3886!val!0 var3886!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3886!val!0 () var3886)\r\n  (declare-fun var3886!val!1 () var3886)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3886)) (or (= x var3886!val!0) (= x var3886!val!1)))\r\n  ;; -----------\r\n  (define-fun var1209 () var3886\r\n    var3886!val!0)\r\n  (define-fun var1319 () Int\r\n    106)\r\n  (define-fun null-var3886 () var3886\r\n    var3886!val!1)\r\n  (define-fun null-var2666 () var2666\r\n    var2666!val!1)\r\n  (define-fun var10 () var3678\r\n    var3886-HOUR12_STRATEGY)\r\n  (define-fun var3306 () Int\r\n    var2587)\r\n  (define-fun null-Int () Int\r\n    105)\r\n  (define-fun var1755 () var2666\r\n    var2666!val!0)\r\n  (define-fun var2587 () Int\r\n    104)\r\n  (define-fun var3886-HOUR12_STRATEGY () var3678\r\n    var3678!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1630208,
            "run_time": 0.02901172637939453,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3886 is 2\r\n; rep: (as @var3886_0 var3886)\r\n; rep: (as @var3886_1 var3886)\r\n; cardinality of var2666 is 2\r\n; rep: (as @var2666_0 var2666)\r\n; rep: (as @var2666_1 var2666)\r\n; cardinality of var3678 is 1\r\n; rep: (as @var3678_0 var3678)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var3886 () var3886 (as @var3886_0 var3886))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var2666 () var2666 (as @var2666_0 var2666))\r\n(define-fun var3886-HOUR12_STRATEGY () var3678 (as @var3678_0 var3678))\r\n(define-fun var1209 () var3886 (as @var3886_1 var3886))\r\n(define-fun var2587 () Int 104)\r\n(define-fun var1319 () Int 0)\r\n(define-fun var1755 () var2666 (as @var2666_1 var2666))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36143104,
            "run_time": 0.13788485527038574,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2666:\n  ;;   var2666!val!0 var2666!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2666!val!0 () var2666)\n  (declare-fun var2666!val!1 () var2666)\n  ;; cardinality constraint:\n  (forall ((x var2666)) (or (= x var2666!val!0) (= x var2666!val!1)))\n  ;; -----------\n  ;; universe for var3886:\n  ;;   var3886!val!0 var3886!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3886!val!0 () var3886)\n  (declare-fun var3886!val!1 () var3886)\n  ;; cardinality constraint:\n  (forall ((x var3886)) (or (= x var3886!val!0) (= x var3886!val!1)))\n  ;; -----------\n  (define-fun var1209 () var3886\n    var3886!val!0)\n  (define-fun var1319 () Int\n    106)\n  (define-fun null-var3886 () var3886\n    var3886!val!1)\n  (define-fun null-var2666 () var2666\n    var2666!val!1)\n  (define-fun var10 () var3678\n    var3886-HOUR12_STRATEGY)\n  (define-fun null-Int () Int\n    105)\n  (define-fun var3306 () Int\n    var2587)\n  (define-fun var1755 () var2666\n    var2666!val!0)\n  (define-fun var2587 () Int\n    104)\n  (define-fun var3886-HOUR12_STRATEGY () var3678\n    var3678!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152727552,
            "run_time": 1.4760785102844238,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1755 () var2666 var2666!8)\r\n  (define-fun var1319 () Int 1)\r\n  (define-fun var2587 () Int 104)\r\n  (define-fun var1209 () var3886 var3886!6)\r\n  (define-fun null-var2666 () var2666 var2666!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3886 () var3886 var3886!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser",
            "c0 := @parameter0: char",
            "i1 := @parameter1: int",
            "r1 := @parameter2: java.util.Calendar",
            "$i2 = (int) c0",
            "tableswitch($i2) {     case 68: goto $r20 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY>;     case 69: goto $r19 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(7, r1);     case 70: goto $r18 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY>;     case 71: goto $r17 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(0, r1);     case 72: goto $r16 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY>;     case 73: goto $r30 = new java.lang.IllegalArgumentException;     case 74: goto $r30 = new java.lang.IllegalArgumentException;     case 75: goto $r15 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY>;     case 76: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 77: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 78: goto $r30 = new java.lang.IllegalArgumentException;     case 79: goto $r30 = new java.lang.IllegalArgumentException;     case 80: goto $r30 = new java.lang.IllegalArgumentException;     case 81: goto $r30 = new java.lang.IllegalArgumentException;     case 82: goto $r30 = new java.lang.IllegalArgumentException;     case 83: goto $r14 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY>;     case 84: goto $r30 = new java.lang.IllegalArgumentException;     case 85: goto $r30 = new java.lang.IllegalArgumentException;     case 86: goto $r30 = new java.lang.IllegalArgumentException;     case 87: goto $r13 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY>;     case 88: goto $r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int)>(i1);     case 89: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 90: goto if i1 != 2 goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     case 91: goto $r30 = new java.lang.IllegalArgumentException;     case 92: goto $r30 = new java.lang.IllegalArgumentException;     case 93: goto $r30 = new java.lang.IllegalArgumentException;     case 94: goto $r30 = new java.lang.IllegalArgumentException;     case 95: goto $r30 = new java.lang.IllegalArgumentException;     case 96: goto $r30 = new java.lang.IllegalArgumentException;     case 97: goto $r10 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(9, r1);     case 98: goto $r30 = new java.lang.IllegalArgumentException;     case 99: goto $r30 = new java.lang.IllegalArgumentException;     case 100: goto $r9 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY>;     case 101: goto $r30 = new java.lang.IllegalArgumentException;     case 102: goto $r30 = new java.lang.IllegalArgumentException;     case 103: goto $r30 = new java.lang.IllegalArgumentException;     case 104: goto $r8 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR12_STRATEGY>;     case 105: goto $r30 = new java.lang.IllegalArgumentException;     case 106: goto $r30 = new java.lang.IllegalArgumentException;     case 107: goto $r7 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR24_OF_DAY_STRATEGY>;     case 108: goto $r30 = new java.lang.IllegalArgumentException;     case 109: goto $r6 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY>;     case 110: goto $r30 = new java.lang.IllegalArgumentException;     case 111: goto $r30 = new java.lang.IllegalArgumentException;     case 112: goto $r30 = new java.lang.IllegalArgumentException;     case 113: goto $r30 = new java.lang.IllegalArgumentException;     case 114: goto $r30 = new java.lang.IllegalArgumentException;     case 115: goto $r5 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY>;     case 116: goto $r30 = new java.lang.IllegalArgumentException;     case 117: goto $r4 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_STRATEGY>;     case 118: goto $r30 = new java.lang.IllegalArgumentException;     case 119: goto $r3 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY>;     case 120: goto $r30 = new java.lang.IllegalArgumentException;     case 121: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 122: goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     default: goto $r30 = new java.lang.IllegalArgumentException; }",
            "$r8 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR12_STRATEGY>",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.GmtTimeZone__toString__907927243\\4278.smt2",
        "z3": {
            "memory": 32698368,
            "run_time": 0.1737666130065918,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2961:\r\n  ;;   var2961!val!0 var2961!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2961!val!0 () var2961)\r\n  (declare-fun var2961!val!1 () var2961)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2961)) (or (= x var2961!val!0) (= x var2961!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2961 () var2961\r\n    var2961!val!1)\r\n  (define-fun var993 () Int\r\n    (offset/447119723 var2888))\r\n  (define-fun var999 () String\r\n    (append/-1166366385\r\n  (str.++ var1196!1\r\n          \"[GmtTimeZone id=\"\"\"\r\n          (zoneId/447119723 var2888)\r\n          \"\"\",offset=\"\r\n          (str.from_int (offset/447119723 var2888)))\r\n  93))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1196 () String\r\n    String-init)\r\n  (define-fun var1988 () String\r\n    (append/-1166366385\r\n  (str.++ var1196!1\r\n          \"[GmtTimeZone id=\"\"\"\r\n          (zoneId/447119723 var2888)\r\n          \"\"\",offset=\"\r\n          (str.from_int (offset/447119723 var2888)))\r\n  93))\r\n  (define-fun var1592 () String\r\n    (zoneId/447119723 var2888))\r\n  (define-fun var2888 () var2961\r\n    var2961!val!0)\r\n  (define-fun var2033!1 () String\r\n    \"[GmtTimeZone id=\"\"\"\",offset=\")\r\n  (define-fun var2033 () String\r\n    (str.++ var1196!1 \"[GmtTimeZone id=\"\"\" (zoneId/447119723 var2888) \"\"\",offset=\"))\r\n  (define-fun var2886 () String\r\n    (str.++ var1196!1 \"[GmtTimeZone id=\"\"\"))\r\n  (define-fun var2419 () String\r\n    (str.++ var1196!1\r\n        \"[GmtTimeZone id=\"\"\"\r\n        (zoneId/447119723 var2888)\r\n        \"\"\",offset=\"\r\n        (str.from_int (offset/447119723 var2888))))\r\n  (define-fun var2419!1 () String\r\n    \"[GmtTimeZone id=\"\"\"\",offset=\")\r\n  (define-fun var607 () String\r\n    (str.++ var1196!1 \"[GmtTimeZone id=\"\"\" (zoneId/447119723 var2888)))\r\n  (define-fun var2886!1 () String\r\n    \"[GmtTimeZone id=\"\"\")\r\n  (define-fun var1196!2 () String\r\n    \"[GmtTimeZone id=\"\"\")\r\n  (define-fun var1196!1 () String\r\n    \"\")\r\n  (define-fun var607!1 () String\r\n    \"[GmtTimeZone id=\"\"\"\",offset=\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun zoneId/447119723 ((x!0 var2961)) String\r\n    \"\")\r\n  (define-fun offset/447119723 ((x!0 var2961)) Int\r\n    (- 2))\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13348864,
            "run_time": 0.06062912940979004,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2961 is 2\r\n; rep: (as @var2961_0 var2961)\r\n; rep: (as @var2961_1 var2961)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun zoneId/447119723 ((_arg_1 var2961)) String \"\")\r\n(define-fun offset/447119723 ((_arg_1 var2961)) Int (- 1))\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_1917 String) (BOUND_VARIABLE_1918 Int)) String \"\")\r\n(define-fun null-var2961 () var2961 (as @var2961_0 var2961))\r\n(define-fun var2888 () var2961 (as @var2961_1 var2961))\r\n(define-fun var1196!1 () String \"\")\r\n(define-fun var1196!2 () String \"[GmtTimeZone id=\"\"\")\r\n(define-fun var2886!1 () String \"[GmtTimeZone id=\"\"\")\r\n(define-fun var607!1 () String \"[GmtTimeZone id=\"\"\"\",offset=\")\r\n(define-fun var2033!1 () String \"[GmtTimeZone id=\"\"\"\",offset=\")\r\n(define-fun var2419!1 () String \"[GmtTimeZone id=\"\"\"\",offset=\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36257792,
            "run_time": 0.1562788486480713,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 50 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 192614400,
            "run_time": 2.26601243019104,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2961/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.GmtTimeZone__toString__907927243\\4278.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var607!1 =\r\n     concat(all_15_2, \"\\u{0}22,offset=\")\r\n   var2886!1 =\r\n     concat(\"[GmtTimeZone id=\\u{0}22\", all_21_3)\r\n   var2419!1 =\r\n     concat(all_28_6, rhs)\r\n   var2033!1 =\r\n     concat(all_18_2, rhs)\r\n   all_28_6 =\r\n     concat(all_15_2, \"\\u{0}22,offset=\")\r\n   all_18_2 =\r\n     concat(all_15_2, \"\\u{0}22,offset=\")\r\n   all_15_2 =\r\n     concat(\"[GmtTimeZone id=\\u{0}22\", all_21_3)\r\n\r\n1603ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.GmtTimeZone",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[GmtTimeZone id=\\\"\")",
            "$r2 = r1.<org.apache.commons.lang3.time.GmtTimeZone: java.lang.String zoneId>",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\\",offset=\")",
            "$i0 = r1.<org.apache.commons.lang3.time.GmtTimeZone: int offset>",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__matchesPattern__1751222839\\1290.smt2",
        "z3": {
            "memory": 32219136,
            "run_time": 0.21837592124938965,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2698 () String\r\n    \"!0!\")\r\n  (define-fun var3296 () String\r\n    \"!2!\")\r\n  (define-fun var2631 () Bool\r\n    (var3778_matches/-236833593 var3296 var2698))\r\n  (define-fun var3778_matches/-236833593 ((x!0 String) (x!1 String)) Bool\r\n    true)\r\n)\r\n(error \"line 21 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.030417442321777344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1383 is 1\r\n; rep: (as @var1383_0 var1383)\r\n; cardinality of var3778 is 1\r\n; rep: (as @var3778_0 var3778)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3778_matches/-236833593 ((_arg_1 String) (_arg_2 String)) Bool true)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2698 () String \"\")\r\n(define-fun var3296 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37814272,
            "run_time": 0.2031717300415039,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2698 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var3296 () String\n    \"\\u{0}\")\n  (define-fun var2631 () Bool\n    (var3778_matches/-236833593 var3296 var2698))\n  (define-fun var3778_matches/-236833593 ((x!0 String) (x!1 String)) Bool\n    true)\n)\n(error \"line 21 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 136941568,
            "run_time": 1.5653555393218994,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3296 () String \"\\u{0}\")\r\n  (define-fun var2698 () String \"\\u{1}\")\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var3778_matches/-236833593 ((x!0 String) (x!1 String)) Bool (ite (and (= x!0 \"\\u{0}\") (= x!1 \"\\u{1}\")) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r1 := @parameter0: java.lang.CharSequence",
            "r0 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>(r0, r1)",
            "if $z0 != 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDatePrinter__parseToken__907492036\\4666-deviant-0.smt2",
        "z3": {
            "memory": 31834112,
            "run_time": 0.10531282424926758,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var30:\r\n  ;;   var30!val!0 var30!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var30!val!0 () var30)\r\n  (declare-fun var30!val!1 () var30)\r\n  ;; cardinality constraint:\r\n  (forall ((x var30)) (or (= x var30!val!0) (= x var30!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var30 () var30\r\n    var30!val!1)\r\n  (define-fun var3742 () Int\r\n    (str.len var2124))\r\n  (define-fun var3759 () (Array Int Int)\r\n    ((as const (Array Int Int)) (- 1)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) (- 1)) 0 0))\r\n  (define-fun var2250 () String\r\n    String-init)\r\n  (define-fun var1165 () Int\r\n    (select var3759 0))\r\n  (define-fun var2009 () var30\r\n    var30!val!0)\r\n  (define-fun var2124 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2250!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.030959129333496094,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var30 is 2\r\n; rep: (as @var30_0 var30)\r\n; rep: (as @var30_1 var30)\r\n; cardinality of var1341 is 1\r\n; rep: (as @var1341_0 var1341)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_651 String) (BOUND_VARIABLE_652 Int)) String \"\")\r\n(define-fun null-var30 () var30 (as @var30_0 var30))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var2009 () var30 (as @var30_1 var30))\r\n(define-fun var2124 () String \"\")\r\n(define-fun var3759 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2250!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37629952,
            "run_time": 0.1218564510345459,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var30:\n  ;;   var30!val!0 var30!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var30!val!0 () var30)\n  (declare-fun var30!val!1 () var30)\n  ;; cardinality constraint:\n  (forall ((x var30)) (or (= x var30!val!0) (= x var30!val!1)))\n  ;; -----------\n  (define-fun var2250!1 () String\n    \"\")\n  (define-fun null-var30 () var30\n    var30!val!1)\n  (define-fun var2009 () var30\n    var30!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1165 () Int\n    (select var3759 0))\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store ((as const (Array Int Int)) (- 1)) 0 0))\n  (define-fun var2250 () String\n    String-init)\n  (define-fun var2124 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3759 () (Array Int Int)\n    ((as const (Array Int Int)) (- 1)))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3742 () Int\n    (str.len var2124))\n  (define-fun String-init () String\n    \"\")\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\n    \"\")\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 174567424,
            "run_time": 2.0515153408050537,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2250!1 () String \"\")\r\n  (define-fun var3759 () (Array Int Int) (store ((as const (Array Int Int)) 8) 0 (- 1)))\r\n  (define-fun var2124 () String \"\")\r\n  (define-fun var2009 () var30 var30!4)\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var30 () var30 var30!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @this: org.apache.commons.lang3.time.FastDatePrinter",
            "r2 := @parameter0: java.lang.String",
            "r1 := @parameter1: int[]",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "i5 = r1[0]",
            "i0 = virtualinvoke r2.<java.lang.String: int length()>()",
            "c6 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i5)",
            "$i10 = (int) c6",
            "if $i10 < 65 goto $i12 = (int) c6",
            "$i11 = (int) c6",
            "if $i11 <= 90 goto virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c6)",
            "virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c6)",
            "$i7 = i5 + 1",
            "if $i7 >= i0 goto r1[0] = i5",
            "r1[0] = i5",
            "$r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__isInstanceOf__-946479397\\1081.smt2",
        "z3": {
            "memory": 31571968,
            "run_time": 0.0908050537109375,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2104:\r\n  ;;   var2104!val!1 var2104!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2104!val!1 () var2104)\r\n  (declare-fun var2104!val!0 () var2104)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2104)) (or (= x var2104!val!1) (= x var2104!val!0)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var894 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var377 () var2104\r\n    var2104!val!0)\r\n  (define-fun null-var2104 () var2104\r\n    var2104!val!1)\r\n  (define-fun var2561 () Bool\r\n    (isInstance/451912363 var894 var377))\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun isInstance/451912363 ((x!0 ClassObject) (x!1 var2104)) Bool\r\n    true)\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1593344,
            "run_time": 0.031130552291870117,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2104 is 2\r\n; rep: (as @var2104_0 var2104)\r\n; rep: (as @var2104_1 var2104)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun isInstance/451912363 ((_arg_1 ClassObject) (_arg_2 var2104)) Bool true)\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-var2104 () var2104 (as @var2104_0 var2104))\r\n(define-fun var894 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var377 () var2104 (as @var2104_1 var2104))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36413440,
            "run_time": 0.20187640190124512,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2104:\n  ;;   var2104!val!1 var2104!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2104!val!1 () var2104)\n  (declare-fun var2104!val!0 () var2104)\n  ;; cardinality constraint:\n  (forall ((x var2104)) (or (= x var2104!val!1) (= x var2104!val!0)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  (define-fun var894 () ClassObject\n    ClassObject!val!0)\n  (define-fun var377 () var2104\n    var2104!val!0)\n  (define-fun var2561 () Bool\n    (isInstance/451912363 var894 var377))\n  (define-fun null-var2104 () var2104\n    var2104!val!1)\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun isInstance/451912363 ((x!0 ClassObject) (x!1 var2104)) Bool\n    true)\n)\n(error \"line 22 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 126005248,
            "run_time": 1.4883756637573242,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var377 () var2104 var2104!8)\r\n  (define-fun var894 () ClassObject ClassObject!6)\r\n  (define-fun null-var2104 () var2104 var2104!4)\r\n  (define-fun null-ClassObject () ClassObject ClassObject!2)\r\n  (define-fun isInstance/451912363 ((x!0 ClassObject) (x!1 var2104)) Bool (ite (and (= x!0 ClassObject!6) (= x!1 var2104!8)) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Class",
            "r1 := @parameter1: java.lang.Object",
            "$z0 = virtualinvoke r0.<java.lang.Class: boolean isInstance(java.lang.Object)>(r1)",
            "if $z0 != 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateFormat__format__1042947744\\4370.smt2",
        "z3": {
            "memory": 31641600,
            "run_time": 0.10514521598815918,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1116:\r\n  ;;   var1116!val!0 var1116!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1116!val!0 () var1116)\r\n  (declare-fun var1116!val!1 () var1116)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1116)) (or (= x var1116!val!0) (= x var1116!val!1)))\r\n  ;; -----------\r\n  ;; universe for var435:\r\n  ;;   var435!val!1 var435!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var435!val!1 () var435)\r\n  (declare-fun var435!val!0 () var435)\r\n  ;; cardinality constraint:\r\n  (forall ((x var435)) (or (= x var435!val!1) (= x var435!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1036:\r\n  ;;   var1036!val!0 var1036!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1036!val!0 () var1036)\r\n  (declare-fun var1036!val!1 () var1036)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1036)) (or (= x var1036!val!0) (= x var1036!val!1)))\r\n  ;; -----------\r\n  (define-fun var2629 () String\r\n    (format/-872951492 (printer/-1347178147 var247) var1953))\r\n  (define-fun var3191 () String\r\n    (str.++ var2967 (format/-872951492 (printer/-1347178147 var247) var1953)))\r\n  (define-fun var247 () var1036\r\n    var1036!val!0)\r\n  (define-fun var1953 () var1116\r\n    var1116!val!0)\r\n  (define-fun null-var435 () var435\r\n    var435!val!1)\r\n  (define-fun var2967 () String\r\n    \"\")\r\n  (define-fun var2967!1 () String\r\n    \"\")\r\n  (define-fun var3438 () var1136\r\n    (printer/-1347178147 var247))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var651 () var435\r\n    var435!val!0)\r\n  (define-fun null-var1116 () var1116\r\n    var1116!val!1)\r\n  (define-fun null-var1036 () var1036\r\n    var1036!val!1)\r\n  (define-fun printer/-1347178147 ((x!0 var1036)) var1136\r\n    var1136!val!0)\r\n  (define-fun format/-872951492 ((x!0 var1136) (x!1 var1116)) String\r\n    \"\")\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.031261444091796875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1036 is 2\r\n; rep: (as @var1036_0 var1036)\r\n; rep: (as @var1036_1 var1036)\r\n; cardinality of var1116 is 2\r\n; rep: (as @var1116_0 var1116)\r\n; rep: (as @var1116_1 var1116)\r\n; cardinality of var435 is 2\r\n; rep: (as @var435_0 var435)\r\n; rep: (as @var435_1 var435)\r\n; cardinality of var1136 is 1\r\n; rep: (as @var1136_0 var1136)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun printer/-1347178147 ((BOUND_VARIABLE_651 var1036)) var1136 (as @var1136_0 var1136))\r\n(define-fun format/-872951492 ((BOUND_VARIABLE_654 var1136) (BOUND_VARIABLE_655 var1116)) String \"\")\r\n(define-fun null-var1036 () var1036 (as @var1036_0 var1036))\r\n(define-fun null-var1116 () var1116 (as @var1116_0 var1116))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var435 () var435 (as @var435_0 var435))\r\n(define-fun var247 () var1036 (as @var1036_1 var1036))\r\n(define-fun var1953 () var1116 (as @var1116_1 var1116))\r\n(define-fun var2967 () String \"\")\r\n(define-fun var651 () var435 (as @var435_1 var435))\r\n(define-fun var2967!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37617664,
            "run_time": 0.17048406600952148,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 35 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 158019584,
            "run_time": 1.5020291805267334,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateFormat__format__1042947744\\4370.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2967!1 =\r\n     concat(var2967, rhs)\r\n   ... sat\r\n\r\n1040ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDateFormat",
            "r2 := @parameter0: java.lang.Object",
            "r0 := @parameter1: java.lang.StringBuffer",
            "r6 := @parameter2: java.text.FieldPosition",
            "$r3 = r1.<org.apache.commons.lang3.time.FastDateFormat: org.apache.commons.lang3.time.FastDatePrinter printer>",
            "$r4 = virtualinvoke $r3.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String format(java.lang.Object)>(r2)",
            "$r5 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>($r4)",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__exclusiveBetween__1894227226\\698.smt2",
        "z3": {
            "memory": 31772672,
            "run_time": 0.1187589168548584,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1946:\r\n  ;;   var1946!val!0 var1946!val!1 var1946!val!3 var1946!val!8 var1946!val!9 var1946!val!7 var1946!val!4 var1946!val!5 var1946!val!6 var1946!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1946!val!0 () var1946)\r\n  (declare-fun var1946!val!1 () var1946)\r\n  (declare-fun var1946!val!3 () var1946)\r\n  (declare-fun var1946!val!8 () var1946)\r\n  (declare-fun var1946!val!9 () var1946)\r\n  (declare-fun var1946!val!7 () var1946)\r\n  (declare-fun var1946!val!4 () var1946)\r\n  (declare-fun var1946!val!5 () var1946)\r\n  (declare-fun var1946!val!6 () var1946)\r\n  (declare-fun var1946!val!2 () var1946)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1946))\r\n          (or (= x var1946!val!0)\r\n              (= x var1946!val!1)\r\n              (= x var1946!val!3)\r\n              (= x var1946!val!8)\r\n              (= x var1946!val!9)\r\n              (= x var1946!val!7)\r\n              (= x var1946!val!4)\r\n              (= x var1946!val!5)\r\n              (= x var1946!val!6)\r\n              (= x var1946!val!2)))\r\n  ;; -----------\r\n  ;; universe for var64:\r\n  ;;   var64!val!1 var64!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var64!val!1 () var64)\r\n  (declare-fun var64!val!0 () var64)\r\n  ;; cardinality constraint:\r\n  (forall ((x var64)) (or (= x var64!val!1) (= x var64!val!0)))\r\n  ;; -----------\r\n  (define-fun var1155!1 () (Array Int var1946)\r\n    (store ((as const (Array Int var1946)) var1946!val!4) 0 var1946!val!3))\r\n  (define-fun null-__Array__Int__var1946__ () (Array Int var1946)\r\n    (store (store ((as const (Array Int var1946)) var1946!val!6) 3 var1946!val!5)\r\n       5\r\n       var1946!val!8))\r\n  (define-fun var846 () String\r\n    (String_format/1339386452\r\n  \"The value %s is not in the specified exclusive range of %s to %s\"\r\n  var1155!3))\r\n  (define-fun null-var1946 () var1946\r\n    var1946!val!1)\r\n  (define-fun var1155!3 () (Array Int var1946)\r\n    (store ((as const (Array Int var1946)) var1946!val!9) 2 var1946!val!2))\r\n  (define-fun var1364 () Int\r\n    (var64_compareTo/903719057 var2586 var2939))\r\n  (define-fun var1155!2 () (Array Int var1946)\r\n    (store ((as const (Array Int var1946)) var1946!val!0) 4 var1946!val!7))\r\n  (define-fun var1155 () (Array Int var1946)\r\n    arr-var1946-init)\r\n  (define-fun var3500 () var3934\r\n    var3934-init)\r\n  (define-fun null-var64 () var64\r\n    var64!val!1)\r\n  (define-fun var2586 () var64\r\n    var64!val!0)\r\n  (define-fun var2939 () var1946\r\n    var1946!val!0)\r\n  (define-fun var2683 () var1946\r\n    var1946!val!2)\r\n  (define-fun var846!1 () String\r\n    \"\")\r\n  (define-fun arr-var1946-init () (Array Int var1946)\r\n    ((as const (Array Int var1946)) var1946!val!0))\r\n  (define-fun var3500!1 () var3934\r\n    var3934!val!0)\r\n  (define-fun var3934-init () var3934\r\n    var3934!val!0)\r\n  (define-fun k!3 ((x!0 Int)) var1946\r\n    (ite (= x!0 3) var1946!val!5\r\n    (ite (= x!0 5) var1946!val!8\r\n      var1946!val!6)))\r\n  (define-fun cast-from-var64-to-var1946 ((x!0 var64)) var1946\r\n    var1946!val!3)\r\n  (define-fun k!0 ((x!0 Int)) var1946\r\n    (ite (= x!0 4) var1946!val!7\r\n      var1946!val!0))\r\n  (define-fun var64_compareTo/903719057 ((x!0 var64) (x!1 var1946)) Int\r\n    0)\r\n  (define-fun k!1 ((x!0 Int)) var1946\r\n    (ite (= x!0 2) var1946!val!2\r\n      var1946!val!9))\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var1946))) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var3934) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 48 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1667072,
            "run_time": 0.06144213676452637,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1946 is 7\r\n; rep: (as @var1946_0 var1946)\r\n; rep: (as @var1946_1 var1946)\r\n; rep: (as @var1946_2 var1946)\r\n; rep: (as @var1946_3 var1946)\r\n; rep: (as @var1946_4 var1946)\r\n; rep: (as @var1946_5 var1946)\r\n; rep: (as @var1946_6 var1946)\r\n; cardinality of var64 is 2\r\n; rep: (as @var64_0 var64)\r\n; rep: (as @var64_1 var64)\r\n; cardinality of var3934 is 1\r\n; rep: (as @var3934_0 var3934)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var64_compareTo/903719057 ((_arg_1 var64) (_arg_2 var1946)) Int 0)\r\n(define-fun var3934-init () var3934 (as @var3934_0 var3934))\r\n(define-fun arr-var1946-init () (Array Int var1946) ((as const (Array Int var1946)) (as @var1946_0 var1946)))\r\n(define-fun cast-from-var64-to-var1946 ((_arg_1 var64)) var1946 (as @var1946_3 var1946))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_659 String) (BOUND_VARIABLE_660 (Array Int var1946))) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_663 var3934) (BOUND_VARIABLE_664 String)) void (as @void_0 void))\r\n(define-fun null-var1946 () var1946 (as @var1946_0 var1946))\r\n(define-fun null-var64 () var64 (as @var64_0 var64))\r\n(define-fun null-__Array__Int__var1946__ () (Array Int var1946) (store ((as const (Array Int var1946)) (as @var1946_3 var1946)) 0 (as @var1946_5 var1946)))\r\n(define-fun var2939 () var1946 (as @var1946_1 var1946))\r\n(define-fun var2683 () var1946 (as @var1946_2 var1946))\r\n(define-fun var2586 () var64 (as @var64_1 var64))\r\n(define-fun var1155!1 () (Array Int var1946) (store ((as const (Array Int var1946)) (as @var1946_2 var1946)) 0 (as @var1946_3 var1946)))\r\n(define-fun var1155!2 () (Array Int var1946) (store (store ((as const (Array Int var1946)) (as @var1946_0 var1946)) 0 (as @var1946_4 var1946)) 1 (as @var1946_1 var1946)))\r\n(define-fun var1155!3 () (Array Int var1946) (store (store ((as const (Array Int var1946)) (as @var1946_1 var1946)) 0 (as @var1946_6 var1946)) 2 (as @var1946_2 var1946)))\r\n(define-fun var3500!1 () var3934 (as @var3934_0 var3934))\r\n(define-fun var846!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36495360,
            "run_time": 0.15885448455810547,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1946:\n  ;;   var1946!val!0 var1946!val!1 var1946!val!3 var1946!val!8 var1946!val!9 var1946!val!7 var1946!val!4 var1946!val!5 var1946!val!6 var1946!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1946!val!0 () var1946)\n  (declare-fun var1946!val!1 () var1946)\n  (declare-fun var1946!val!3 () var1946)\n  (declare-fun var1946!val!8 () var1946)\n  (declare-fun var1946!val!9 () var1946)\n  (declare-fun var1946!val!7 () var1946)\n  (declare-fun var1946!val!4 () var1946)\n  (declare-fun var1946!val!5 () var1946)\n  (declare-fun var1946!val!6 () var1946)\n  (declare-fun var1946!val!2 () var1946)\n  ;; cardinality constraint:\n  (forall ((x var1946))\n          (or (= x var1946!val!0)\n              (= x var1946!val!1)\n              (= x var1946!val!3)\n              (= x var1946!val!8)\n              (= x var1946!val!9)\n              (= x var1946!val!7)\n              (= x var1946!val!4)\n              (= x var1946!val!5)\n              (= x var1946!val!6)\n              (= x var1946!val!2)))\n  ;; -----------\n  ;; universe for var64:\n  ;;   var64!val!1 var64!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var64!val!1 () var64)\n  (declare-fun var64!val!0 () var64)\n  ;; cardinality constraint:\n  (forall ((x var64)) (or (= x var64!val!1) (= x var64!val!0)))\n  ;; -----------\n  (define-fun null-var1946 () var1946\n    var1946!val!1)\n  (define-fun null-__Array__Int__var1946__ () (Array Int var1946)\n    (store (store ((as const (Array Int var1946)) var1946!val!6) 5 var1946!val!8)\n       3\n       var1946!val!5))\n  (define-fun var1155!1 () (Array Int var1946)\n    (store ((as const (Array Int var1946)) var1946!val!4) 0 var1946!val!3))\n  (define-fun var1364 () Int\n    (var64_compareTo/903719057 var2586 var2939))\n  (define-fun var1155!3 () (Array Int var1946)\n    (store ((as const (Array Int var1946)) var1946!val!9) 2 var1946!val!2))\n  (define-fun var3500 () var3934\n    var3934-init)\n  (define-fun var1155!2 () (Array Int var1946)\n    (store ((as const (Array Int var1946)) var1946!val!7) 1 var1946!val!0))\n  (define-fun null-var64 () var64\n    var64!val!1)\n  (define-fun var1155 () (Array Int var1946)\n    arr-var1946-init)\n  (define-fun var846 () String\n    (String_format/1339386452\n  \"The value %s is not in the specified exclusive range of %s to %s\"\n  var1155!3))\n  (define-fun var2586 () var64\n    var64!val!0)\n  (define-fun var2939 () var1946\n    var1946!val!0)\n  (define-fun var2683 () var1946\n    var1946!val!2)\n  (define-fun var846!1 () String\n    \"\")\n  (define-fun arr-var1946-init () (Array Int var1946)\n    ((as const (Array Int var1946)) var1946!val!0))\n  (define-fun var3500!1 () var3934\n    var3934!val!0)\n  (define-fun var3934-init () var3934\n    var3934!val!0)\n  (define-fun k!3 ((x!0 Int)) var1946\n    (ite (= x!0 5) var1946!val!8\n    (ite (= x!0 3) var1946!val!5\n      var1946!val!6)))\n  (define-fun cast-from-var64-to-var1946 ((x!0 var64)) var1946\n    var1946!val!3)\n  (define-fun k!0 ((x!0 Int)) var1946\n    (ite (= x!0 1) var1946!val!0\n      var1946!val!7))\n  (define-fun var64_compareTo/903719057 ((x!0 var64) (x!1 var1946)) Int\n    0)\n  (define-fun k!1 ((x!0 Int)) var1946\n    (ite (= x!0 2) var1946!val!2\n      var1946!val!9))\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var1946))) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var3934) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 48 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 189095936,
            "run_time": 2.1843767166137695,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1155!3 () (Array Int var1946) (store ((as const (Array Int var1946)) var1946!158) 2 var1946!136))\r\n  (define-fun var1155!2 () (Array Int var1946) (store ((as const (Array Int var1946)) var1946!156) 1 var1946!134))\r\n  (define-fun var1155!1 () (Array Int var1946) (store ((as const (Array Int var1946)) var1946!160) 0 var1946!154))\r\n  (define-fun var2586 () var64 var64!138)\r\n  (define-fun var2683 () var1946 var1946!136)\r\n  (define-fun var2939 () var1946 var1946!134)\r\n  (define-fun null-__Array__Int__var1946__ () (Array Int var1946) ((as const (Array Int var1946)) var1946!0))\r\n  (define-fun null-var64 () var64 var64!132)\r\n  (define-fun null-var1946 () var1946 var1946!130)\r\n  (define-fun var1946!154 () var1946 (cast-from-var64-to-var1946 var64!138))\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var1946))) String (ite (and (= x!0 \"The value %s is not in the specified exclusive range of %s to %s\") (= x!1 (store ((as const (Array Int var1946)) var1946!158) 2 var1946!136))) \"\\u{0}\" \"\"))\r\n  (define-fun var64_compareTo/903719057 ((x!0 var64) (x!1 var1946)) Int (ite (and (= x!0 var64!138) (= x!1 var1946!134)) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.Object",
            "r4 := @parameter1: java.lang.Object",
            "r0 := @parameter2: java.lang.Comparable",
            "$i0 = interfaceinvoke r0.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1)",
            "if $i0 <= 0 goto $r2 = new java.lang.IllegalArgumentException",
            "$r2 = new java.lang.IllegalArgumentException",
            "$r3 = newarray (java.lang.Object)[3]",
            "$r3[0] = r0",
            "$r3[1] = r1",
            "$r3[2] = r4",
            "$r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"The value %s is not in the specified exclusive range of %s to %s\", $r3)",
            "specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5)",
            "throw $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__hashCode__-662904534\\4422.smt2",
        "z3": {
            "memory": 31641600,
            "run_time": 0.10517644882202148,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3681:\r\n  ;;   var3681!val!1 var3681!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3681!val!1 () var3681)\r\n  (declare-fun var3681!val!0 () var3681)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3681)) (or (= x var3681!val!1) (= x var3681!val!0)))\r\n  ;; -----------\r\n  (define-fun var353 () var3681\r\n    var3681!val!0)\r\n  (define-fun var701 () String\r\n    (pattern/-1073810043 var353))\r\n  (define-fun var1193 () Int\r\n    (let ((a!1 (+ (hashCode/1739917532\r\n                (cast-from-var3403-to-var422 (timeZone/-1073810043 var353)))\r\n              (* 13 (hashCode/1639332149 (locale/-1073810043 var353))))))\r\n  (* 13 a!1)))\r\n  (define-fun var3 () Int\r\n    (hashCode/1639332149 (locale/-1073810043 var353)))\r\n  (define-fun var816 () Int\r\n    (hashCode/-467973558 (pattern/-1073810043 var353)))\r\n  (define-fun var893 () var1904\r\n    (locale/-1073810043 var353))\r\n  (define-fun null-var3681 () var3681\r\n    var3681!val!1)\r\n  (define-fun var626 () Int\r\n    (hashCode/1739917532\r\n  (cast-from-var3403-to-var422 (timeZone/-1073810043 var353))))\r\n  (define-fun var1288 () var3403\r\n    (timeZone/-1073810043 var353))\r\n  (define-fun var657 () Int\r\n    (let ((a!1 (+ (hashCode/1739917532\r\n                (cast-from-var3403-to-var422 (timeZone/-1073810043 var353)))\r\n              (* 13 (hashCode/1639332149 (locale/-1073810043 var353))))))\r\n  (+ (hashCode/-467973558 (pattern/-1073810043 var353)) (* 13 a!1))))\r\n  (define-fun var485 () Int\r\n    (+ (hashCode/1739917532\r\n     (cast-from-var3403-to-var422 (timeZone/-1073810043 var353)))\r\n   (* 13 (hashCode/1639332149 (locale/-1073810043 var353)))))\r\n  (define-fun var2916 () Int\r\n    (* 13 (hashCode/1639332149 (locale/-1073810043 var353))))\r\n  (define-fun timeZone/-1073810043 ((x!0 var3681)) var3403\r\n    var3403!val!0)\r\n  (define-fun pattern/-1073810043 ((x!0 var3681)) String\r\n    \"\")\r\n  (define-fun hashCode/1739917532 ((x!0 var422)) Int\r\n    0)\r\n  (define-fun hashCode/-467973558 ((x!0 String)) Int\r\n    0)\r\n  (define-fun hashCode/1639332149 ((x!0 var1904)) Int\r\n    0)\r\n  (define-fun locale/-1073810043 ((x!0 var3681)) var1904\r\n    var1904!val!0)\r\n  (define-fun cast-from-var3403-to-var422 ((x!0 var3403)) var422\r\n    var422!val!0)\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9773056,
            "run_time": 0.030769824981689453,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3681 is 2\r\n; rep: (as @var3681_0 var3681)\r\n; rep: (as @var3681_1 var3681)\r\n; cardinality of var3403 is 1\r\n; rep: (as @var3403_0 var3403)\r\n; cardinality of var422 is 1\r\n; rep: (as @var422_0 var422)\r\n; cardinality of var1904 is 1\r\n; rep: (as @var1904_0 var1904)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun pattern/-1073810043 ((BOUND_VARIABLE_490 var3681)) String \"\")\r\n(define-fun hashCode/-467973558 ((BOUND_VARIABLE_493 String)) Int 0)\r\n(define-fun timeZone/-1073810043 ((BOUND_VARIABLE_496 var3681)) var3403 (as @var3403_0 var3403))\r\n(define-fun hashCode/1739917532 ((BOUND_VARIABLE_499 var422)) Int 0)\r\n(define-fun cast-from-var3403-to-var422 ((BOUND_VARIABLE_502 var3403)) var422 (as @var422_0 var422))\r\n(define-fun locale/-1073810043 ((BOUND_VARIABLE_505 var3681)) var1904 (as @var1904_0 var1904))\r\n(define-fun hashCode/1639332149 ((BOUND_VARIABLE_508 var1904)) Int 0)\r\n(define-fun null-var3681 () var3681 (as @var3681_0 var3681))\r\n(define-fun var353 () var3681 (as @var3681_1 var3681))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36720640,
            "run_time": 0.0929567813873291,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3681:\n  ;;   var3681!val!1 var3681!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3681!val!1 () var3681)\n  (declare-fun var3681!val!0 () var3681)\n  ;; cardinality constraint:\n  (forall ((x var3681)) (or (= x var3681!val!1) (= x var3681!val!0)))\n  ;; -----------\n  (define-fun var701 () String\n    (pattern/-1073810043 var353))\n  (define-fun var2916 () Int\n    (* 13 (hashCode/1639332149 (locale/-1073810043 var353))))\n  (define-fun var353 () var3681\n    var3681!val!0)\n  (define-fun var657 () Int\n    (let ((a!1 (+ (hashCode/1739917532\n                (cast-from-var3403-to-var422 (timeZone/-1073810043 var353)))\n              (* 13 (hashCode/1639332149 (locale/-1073810043 var353))))))\n  (+ (hashCode/-467973558 (pattern/-1073810043 var353)) (* 13 a!1))))\n  (define-fun var1193 () Int\n    (let ((a!1 (+ (hashCode/1739917532\n                (cast-from-var3403-to-var422 (timeZone/-1073810043 var353)))\n              (* 13 (hashCode/1639332149 (locale/-1073810043 var353))))))\n  (* 13 a!1)))\n  (define-fun var3 () Int\n    (hashCode/1639332149 (locale/-1073810043 var353)))\n  (define-fun null-var3681 () var3681\n    var3681!val!1)\n  (define-fun var816 () Int\n    (hashCode/-467973558 (pattern/-1073810043 var353)))\n  (define-fun var1288 () var3403\n    (timeZone/-1073810043 var353))\n  (define-fun var626 () Int\n    (hashCode/1739917532\n  (cast-from-var3403-to-var422 (timeZone/-1073810043 var353))))\n  (define-fun var893 () var1904\n    (locale/-1073810043 var353))\n  (define-fun var485 () Int\n    (+ (hashCode/1739917532\n     (cast-from-var3403-to-var422 (timeZone/-1073810043 var353)))\n   (* 13 (hashCode/1639332149 (locale/-1073810043 var353)))))\n  (define-fun timeZone/-1073810043 ((x!0 var3681)) var3403\n    var3403!val!0)\n  (define-fun pattern/-1073810043 ((x!0 var3681)) String\n    \"\")\n  (define-fun hashCode/1739917532 ((x!0 var422)) Int\n    0)\n  (define-fun hashCode/-467973558 ((x!0 String)) Int\n    0)\n  (define-fun hashCode/1639332149 ((x!0 var1904)) Int\n    0)\n  (define-fun locale/-1073810043 ((x!0 var3681)) var1904\n    var1904!val!0)\n  (define-fun cast-from-var3403-to-var422 ((x!0 var3403)) var422\n    var422!val!0)\n)\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 156356608,
            "run_time": 1.5009710788726807,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var353 () var3681 var3681!4)\r\n  (define-fun null-var3681 () var3681 var3681!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: int hashCode()>"
        ],
        "api_count": {
            "<java.lang.String: int hashCode()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser",
            "$r1 = r0.<org.apache.commons.lang3.time.FastDateParser: java.lang.String pattern>",
            "$i5 = virtualinvoke $r1.<java.lang.String: int hashCode()>()",
            "$r2 = r0.<org.apache.commons.lang3.time.FastDateParser: java.util.TimeZone timeZone>",
            "$i2 = virtualinvoke $r2.<java.lang.Object: int hashCode()>()",
            "$r3 = r0.<org.apache.commons.lang3.time.FastDateParser: java.util.Locale locale>",
            "$i0 = virtualinvoke $r3.<java.util.Locale: int hashCode()>()",
            "$i1 = 13 * $i0",
            "$i3 = $i2 + $i1",
            "$i4 = 13 * $i3",
            "$i6 = $i5 + $i4",
            "return $i6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.tuple.Pair__toString__-1372228150\\4476.smt2",
        "z3": {
            "memory": 31784960,
            "run_time": 0.1165316104888916,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3239:\r\n  ;;   var3239!val!1 var3239!val!0 var3239!val!4 var3239!val!5 var3239!val!2 var3239!val!3 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3239!val!1 () var3239)\r\n  (declare-fun var3239!val!0 () var3239)\r\n  (declare-fun var3239!val!4 () var3239)\r\n  (declare-fun var3239!val!5 () var3239)\r\n  (declare-fun var3239!val!2 () var3239)\r\n  (declare-fun var3239!val!3 () var3239)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3239))\r\n          (or (= x var3239!val!1)\r\n              (= x var3239!val!0)\r\n              (= x var3239!val!4)\r\n              (= x var3239!val!5)\r\n              (= x var3239!val!2)\r\n              (= x var3239!val!3)))\r\n  ;; -----------\r\n  ;; universe for var2978:\r\n  ;;   var2978!val!0 var2978!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2978!val!0 () var2978)\r\n  (declare-fun var2978!val!1 () var2978)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2978)) (or (= x var2978!val!0) (= x var2978!val!1)))\r\n  ;; -----------\r\n  (define-fun var3379!1 () (Array Int var3239)\r\n    (store ((as const (Array Int var3239)) var3239!val!2) 0 var3239!val!0))\r\n  (define-fun var404 () var3239\r\n    (getLeft/1053147166 var1235))\r\n  (define-fun var3729 () var3239\r\n    (getRight/-570391911 var1235))\r\n  (define-fun var1235 () var2978\r\n    var2978!val!0)\r\n  (define-fun null-var2978 () var2978\r\n    var2978!val!1)\r\n  (define-fun var1213 () String\r\n    \"!0!\")\r\n  (define-fun null-__Array__Int__var3239__ () (Array Int var3239)\r\n    (store ((as const (Array Int var3239)) var3239!val!3) 3 var3239!val!4))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var3379!2 () (Array Int var3239)\r\n    (store ((as const (Array Int var3239)) var3239!val!1) 3 var3239!val!5))\r\n  (define-fun var3379 () (Array Int var3239)\r\n    arr-var3239-init)\r\n  (define-fun var552 () String\r\n    (String_format/1339386452 var1213 var3379!2))\r\n  (define-fun arr-var3239-init () (Array Int var3239)\r\n    ((as const (Array Int var3239)) var3239!val!0))\r\n  (define-fun getLeft/1053147166 ((x!0 var2978)) var3239\r\n    var3239!val!0)\r\n  (define-fun k!1 ((x!0 Int)) var3239\r\n    (ite (= x!0 3) var3239!val!4\r\n      var3239!val!3))\r\n  (define-fun getRight/-570391911 ((x!0 var2978)) var3239\r\n    var3239!val!1)\r\n  (define-fun k!2 ((x!0 Int)) var3239\r\n    (ite (= x!0 3) var3239!val!5\r\n      var3239!val!1))\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var3239))) String\r\n    \"\")\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1667072,
            "run_time": 0.030999422073364258,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2978 is 2\r\n; rep: (as @var2978_0 var2978)\r\n; rep: (as @var2978_1 var2978)\r\n; cardinality of var1216 is 1\r\n; rep: (as @var1216_0 var1216)\r\n; cardinality of var3239 is 4\r\n; rep: (as @var3239_0 var3239)\r\n; rep: (as @var3239_1 var3239)\r\n; rep: (as @var3239_2 var3239)\r\n; rep: (as @var3239_3 var3239)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var3239-init () (Array Int var3239) ((as const (Array Int var3239)) (as @var3239_0 var3239)))\r\n(define-fun getLeft/1053147166 ((_arg_1 var2978)) var3239 (as @var3239_1 var3239))\r\n(define-fun getRight/-570391911 ((_arg_1 var2978)) var3239 (as @var3239_0 var3239))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_630 String) (BOUND_VARIABLE_631 (Array Int var3239))) String \"\")\r\n(define-fun null-var2978 () var2978 (as @var2978_0 var2978))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var3239__ () (Array Int var3239) (store ((as const (Array Int var3239)) (as @var3239_1 var3239)) 0 (as @var3239_2 var3239)))\r\n(define-fun var1235 () var2978 (as @var2978_1 var2978))\r\n(define-fun var1213 () String \"\")\r\n(define-fun var3379!1 () (Array Int var3239) (store ((as const (Array Int var3239)) (as @var3239_0 var3239)) 0 (as @var3239_1 var3239)))\r\n(define-fun var3379!2 () (Array Int var3239) (store (store ((as const (Array Int var3239)) (as @var3239_2 var3239)) 0 (as @var3239_3 var3239)) 1 (as @var3239_0 var3239)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37703680,
            "run_time": 0.10849165916442871,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3239:\n  ;;   var3239!val!1 var3239!val!0 var3239!val!4 var3239!val!5 var3239!val!2 var3239!val!3 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3239!val!1 () var3239)\n  (declare-fun var3239!val!0 () var3239)\n  (declare-fun var3239!val!4 () var3239)\n  (declare-fun var3239!val!5 () var3239)\n  (declare-fun var3239!val!2 () var3239)\n  (declare-fun var3239!val!3 () var3239)\n  ;; cardinality constraint:\n  (forall ((x var3239))\n          (or (= x var3239!val!1)\n              (= x var3239!val!0)\n              (= x var3239!val!4)\n              (= x var3239!val!5)\n              (= x var3239!val!2)\n              (= x var3239!val!3)))\n  ;; -----------\n  ;; universe for var2978:\n  ;;   var2978!val!0 var2978!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2978!val!0 () var2978)\n  (declare-fun var2978!val!1 () var2978)\n  ;; cardinality constraint:\n  (forall ((x var2978)) (or (= x var2978!val!0) (= x var2978!val!1)))\n  ;; -----------\n  (define-fun var3379 () (Array Int var3239)\n    arr-var3239-init)\n  (define-fun var1213 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3379!2 () (Array Int var3239)\n    (store ((as const (Array Int var3239)) var3239!val!1) 4 var3239!val!5))\n  (define-fun null-var2978 () var2978\n    var2978!val!1)\n  (define-fun var3729 () var3239\n    (getRight/-570391911 var1235))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3379!1 () (Array Int var3239)\n    (store ((as const (Array Int var3239)) var3239!val!2) 0 var3239!val!0))\n  (define-fun var404 () var3239\n    (getLeft/1053147166 var1235))\n  (define-fun var552 () String\n    (String_format/1339386452 var1213 var3379!2))\n  (define-fun var1235 () var2978\n    var2978!val!0)\n  (define-fun null-__Array__Int__var3239__ () (Array Int var3239)\n    (store ((as const (Array Int var3239)) var3239!val!3) 4 var3239!val!4))\n  (define-fun arr-var3239-init () (Array Int var3239)\n    ((as const (Array Int var3239)) var3239!val!0))\n  (define-fun getLeft/1053147166 ((x!0 var2978)) var3239\n    var3239!val!0)\n  (define-fun k!41 ((x!0 Int)) var3239\n    (ite (= x!0 4) var3239!val!4\n      var3239!val!3))\n  (define-fun getRight/-570391911 ((x!0 var2978)) var3239\n    var3239!val!1)\n  (define-fun k!42 ((x!0 Int)) var3239\n    (ite (= x!0 4) var3239!val!5\n      var3239!val!1))\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var3239))) String\n    \"\")\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167362560,
            "run_time": 1.7639145851135254,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3379!2 () (Array Int var3239) (store ((as const (Array Int var3239)) var3239!26) 1 var3239!22))\r\n  (define-fun var3379!1 () (Array Int var3239) (store ((as const (Array Int var3239)) var3239!24) 0 var3239!20))\r\n  (define-fun var1213 () String \"\\u{0}\")\r\n  (define-fun var1235 () var2978 var2978!6)\r\n  (define-fun null-__Array__Int__var3239__ () (Array Int var3239) ((as const (Array Int var3239)) var3239!0))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2978 () var2978 var2978!4)\r\n  (define-fun var3239!22 () var3239 (getRight/-570391911 var2978!6))\r\n  (define-fun var3239!20 () var3239 (getLeft/1053147166 var2978!6))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.apache.commons.lang3.tuple.Pair",
            "r0 := @parameter0: java.lang.String",
            "$r1 = newarray (java.lang.Object)[2]",
            "$r3 = virtualinvoke r2.<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>()",
            "$r1[0] = $r3",
            "$r4 = virtualinvoke r2.<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>()",
            "$r1[1] = $r4",
            "$r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, $r1)",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__getStrategy__1867214738\\4340.smt2",
        "z3": {
            "memory": 32100352,
            "run_time": 0.08855104446411133,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3442:\r\n  ;;   var3442!val!0 var3442!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3442!val!0 () var3442)\r\n  (declare-fun var3442!val!1 () var3442)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3442)) (or (= x var3442!val!0) (= x var3442!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3359:\r\n  ;;   var3359!val!1 var3359!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3359!val!1 () var3359)\r\n  (declare-fun var3359!val!0 () var3359)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3359)) (or (= x var3359!val!1) (= x var3359!val!0)))\r\n  ;; -----------\r\n  (define-fun var3235 () var3359\r\n    var3359!val!0)\r\n  (define-fun var957 () Int\r\n    109)\r\n  (define-fun var1676 () var3442\r\n    var3442!val!0)\r\n  (define-fun null-var3442 () var3442\r\n    var3442!val!1)\r\n  (define-fun null-Int () Int\r\n    108)\r\n  (define-fun var367 () var1389\r\n    var3359-HOUR24_OF_DAY_STRATEGY)\r\n  (define-fun var894 () Int\r\n    var1319)\r\n  (define-fun null-var3359 () var3359\r\n    var3359!val!1)\r\n  (define-fun var1319 () Int\r\n    107)\r\n  (define-fun var3359-HOUR24_OF_DAY_STRATEGY () var1389\r\n    var1389!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.030333995819091797,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3359 is 2\r\n; rep: (as @var3359_0 var3359)\r\n; rep: (as @var3359_1 var3359)\r\n; cardinality of var3442 is 2\r\n; rep: (as @var3442_0 var3442)\r\n; rep: (as @var3442_1 var3442)\r\n; cardinality of var1389 is 1\r\n; rep: (as @var1389_0 var1389)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var3359 () var3359 (as @var3359_0 var3359))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var3442 () var3442 (as @var3442_0 var3442))\r\n(define-fun var3359-HOUR24_OF_DAY_STRATEGY () var1389 (as @var1389_0 var1389))\r\n(define-fun var3235 () var3359 (as @var3359_1 var3359))\r\n(define-fun var1319 () Int 107)\r\n(define-fun var957 () Int 0)\r\n(define-fun var1676 () var3442 (as @var3442_1 var3442))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36372480,
            "run_time": 0.10820865631103516,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3442:\n  ;;   var3442!val!0 var3442!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3442!val!0 () var3442)\n  (declare-fun var3442!val!1 () var3442)\n  ;; cardinality constraint:\n  (forall ((x var3442)) (or (= x var3442!val!0) (= x var3442!val!1)))\n  ;; -----------\n  ;; universe for var3359:\n  ;;   var3359!val!1 var3359!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3359!val!1 () var3359)\n  (declare-fun var3359!val!0 () var3359)\n  ;; cardinality constraint:\n  (forall ((x var3359)) (or (= x var3359!val!1) (= x var3359!val!0)))\n  ;; -----------\n  (define-fun var3235 () var3359\n    var3359!val!0)\n  (define-fun var367 () var1389\n    var3359-HOUR24_OF_DAY_STRATEGY)\n  (define-fun var957 () Int\n    109)\n  (define-fun var894 () Int\n    var1319)\n  (define-fun var1676 () var3442\n    var3442!val!0)\n  (define-fun null-var3442 () var3442\n    var3442!val!1)\n  (define-fun null-Int () Int\n    108)\n  (define-fun null-var3359 () var3359\n    var3359!val!1)\n  (define-fun var1319 () Int\n    107)\n  (define-fun var3359-HOUR24_OF_DAY_STRATEGY () var1389\n    var1389!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153997312,
            "run_time": 1.3180437088012695,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1676 () var3442 var3442!8)\r\n  (define-fun var957 () Int 1)\r\n  (define-fun var1319 () Int 107)\r\n  (define-fun var3235 () var3359 var3359!6)\r\n  (define-fun null-var3442 () var3442 var3442!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3359 () var3359 var3359!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser",
            "c0 := @parameter0: char",
            "i1 := @parameter1: int",
            "r1 := @parameter2: java.util.Calendar",
            "$i2 = (int) c0",
            "tableswitch($i2) {     case 68: goto $r20 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY>;     case 69: goto $r19 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(7, r1);     case 70: goto $r18 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY>;     case 71: goto $r17 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(0, r1);     case 72: goto $r16 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY>;     case 73: goto $r30 = new java.lang.IllegalArgumentException;     case 74: goto $r30 = new java.lang.IllegalArgumentException;     case 75: goto $r15 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY>;     case 76: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 77: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 78: goto $r30 = new java.lang.IllegalArgumentException;     case 79: goto $r30 = new java.lang.IllegalArgumentException;     case 80: goto $r30 = new java.lang.IllegalArgumentException;     case 81: goto $r30 = new java.lang.IllegalArgumentException;     case 82: goto $r30 = new java.lang.IllegalArgumentException;     case 83: goto $r14 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY>;     case 84: goto $r30 = new java.lang.IllegalArgumentException;     case 85: goto $r30 = new java.lang.IllegalArgumentException;     case 86: goto $r30 = new java.lang.IllegalArgumentException;     case 87: goto $r13 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY>;     case 88: goto $r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int)>(i1);     case 89: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 90: goto if i1 != 2 goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     case 91: goto $r30 = new java.lang.IllegalArgumentException;     case 92: goto $r30 = new java.lang.IllegalArgumentException;     case 93: goto $r30 = new java.lang.IllegalArgumentException;     case 94: goto $r30 = new java.lang.IllegalArgumentException;     case 95: goto $r30 = new java.lang.IllegalArgumentException;     case 96: goto $r30 = new java.lang.IllegalArgumentException;     case 97: goto $r10 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(9, r1);     case 98: goto $r30 = new java.lang.IllegalArgumentException;     case 99: goto $r30 = new java.lang.IllegalArgumentException;     case 100: goto $r9 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY>;     case 101: goto $r30 = new java.lang.IllegalArgumentException;     case 102: goto $r30 = new java.lang.IllegalArgumentException;     case 103: goto $r30 = new java.lang.IllegalArgumentException;     case 104: goto $r8 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR12_STRATEGY>;     case 105: goto $r30 = new java.lang.IllegalArgumentException;     case 106: goto $r30 = new java.lang.IllegalArgumentException;     case 107: goto $r7 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR24_OF_DAY_STRATEGY>;     case 108: goto $r30 = new java.lang.IllegalArgumentException;     case 109: goto $r6 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY>;     case 110: goto $r30 = new java.lang.IllegalArgumentException;     case 111: goto $r30 = new java.lang.IllegalArgumentException;     case 112: goto $r30 = new java.lang.IllegalArgumentException;     case 113: goto $r30 = new java.lang.IllegalArgumentException;     case 114: goto $r30 = new java.lang.IllegalArgumentException;     case 115: goto $r5 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY>;     case 116: goto $r30 = new java.lang.IllegalArgumentException;     case 117: goto $r4 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_STRATEGY>;     case 118: goto $r30 = new java.lang.IllegalArgumentException;     case 119: goto $r3 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY>;     case 120: goto $r30 = new java.lang.IllegalArgumentException;     case 121: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 122: goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     default: goto $r30 = new java.lang.IllegalArgumentException; }",
            "$r7 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR24_OF_DAY_STRATEGY>",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.GmtTimeZone__twoDigits__-1996239367\\4086.smt2",
        "z3": {
            "memory": 32272384,
            "run_time": 0.09496164321899414,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2557 () Int\r\n    (+ 48 (mod var966 10)))\r\n  (define-fun var966 () Int\r\n    0)\r\n  (define-fun var1264 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3938!1 () String\r\n    \"\")\r\n  (define-fun var1085 () Int\r\n    (+ 48 (div var966 10)))\r\n  (define-fun var315 () Int\r\n    (mod var966 10))\r\n  (define-fun var252 () Int\r\n    (+ 48 (div var966 10)))\r\n  (define-fun var2863 () String\r\n    (append/-1166366385\r\n  (append/-1166366385 var1264 (+ 48 (div var966 10)))\r\n  (+ 48 (mod var966 10))))\r\n  (define-fun var1264!1 () String\r\n    \"\")\r\n  (define-fun var3938 () String\r\n    (append/-1166366385 var1264 (+ 48 (div var966 10))))\r\n  (define-fun var2629 () Int\r\n    (div var966 10))\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun var3279 () Int\r\n    (+ 48 (mod var966 10)))\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9670656,
            "run_time": 0.03064107894897461,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun append/-1166366385 ((_arg_1 String) (_arg_2 Int)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1264 () String \"\")\r\n(define-fun var966 () Int 0)\r\n(define-fun var1264!1 () String \"\")\r\n(define-fun var3938!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37093376,
            "run_time": 0.15581345558166504,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 31 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155414528,
            "run_time": 1.441356897354126,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.GmtTimeZone__twoDigits__-1996239367\\4086.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3938!1 =\r\n     concat(all_10_0, rhs)\r\n   var1264!1 =\r\n     concat(var1264, rhs)\r\n   ... sat\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3938!1 =\r\n     concat(var1264, rhs)\r\n   var1264!1 =\r\n     concat(var1264, rhs)\r\n   ... sat\r\n\r\n980ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 2
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.StringBuilder",
            "i0 := @parameter1: int",
            "$i1 = i0 / 10",
            "$i2 = 48 + $i1",
            "$c3 = (char) $i2",
            "$r1 = virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c3)",
            "$i4 = i0 % 10",
            "$i5 = 48 + $i4",
            "$c6 = (char) $i5",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>($c6)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__notEmpty__1384193294\\1611.smt2",
        "z3": {
            "memory": 31752192,
            "run_time": 0.13914012908935547,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1703:\r\n  ;;   var1703!val!1 var1703!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1703!val!1 () var1703)\r\n  (declare-fun var1703!val!0 () var1703)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1703)) (or (= x var1703!val!1) (= x var1703!val!0)))\r\n  ;; -----------\r\n  (define-fun var3276 () var378\r\n    var378-init)\r\n  (define-fun null-__Array__Int__var1703__ () (Array Int var1703)\r\n    ((as const (Array Int var1703)) var1703!val!1))\r\n  (define-fun var1360 () String\r\n    \"!0!\")\r\n  (define-fun var2371 () Int\r\n    (String_length/-667254855 var1360!1))\r\n  (define-fun var3977 () String\r\n    (var1436_getMessage/1241486448 var1824 var2873))\r\n  (define-fun var2873 () (Array Int var1703)\r\n    ((as const (Array Int var1703)) var1703!val!0))\r\n  (define-fun var1360!1 () String\r\n    \"!3!\")\r\n  (define-fun var1824 () String\r\n    \"!2!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var3927 () var2548\r\n    (var1436_toSupplier/2040472275 var1824 var2873))\r\n  (define-fun var378-init () var378\r\n    var378!val!0)\r\n  (define-fun var3977!1 () String\r\n    \"\")\r\n  (define-fun var3927!1 () var2548\r\n    var2548!val!0)\r\n  (define-fun var3276!1 () var378\r\n    var378!val!0)\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    0)\r\n  (define-fun cast-from-String-to-var1703 ((x!0 String)) var1703\r\n    var1703!val!1)\r\n  (define-fun var465_requireNonNull/1077068520 ((x!0 var1703) (x!1 var2548)) var1703\r\n    var1703!val!1)\r\n  (define-fun var1436_toSupplier/2040472275 ((x!0 String)\r\n   (x!1 (Array Int var1703))) var2548\r\n    var2548!val!0)\r\n  (define-fun var1436_getMessage/1241486448 ((x!0 String)\r\n   (x!1 (Array Int var1703))) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var378) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 46 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.029578208923339844,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1581 is 1\r\n; rep: (as @var1581_0 var1581)\r\n; cardinality of var1703 is 2\r\n; rep: (as @var1703_0 var1703)\r\n; rep: (as @var1703_1 var1703)\r\n; cardinality of var2548 is 1\r\n; rep: (as @var2548_0 var2548)\r\n; cardinality of var1436 is 1\r\n; rep: (as @var1436_0 var1436)\r\n; cardinality of var465 is 1\r\n; rep: (as @var465_0 var465)\r\n; cardinality of var378 is 1\r\n; rep: (as @var378_0 var378)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1436_toSupplier/2040472275 ((BOUND_VARIABLE_616 String) (BOUND_VARIABLE_617 (Array Int var1703))) var2548 (as @var2548_0 var2548))\r\n(define-fun var465_requireNonNull/1077068520 ((BOUND_VARIABLE_620 var1703) (BOUND_VARIABLE_621 var2548)) var1703 (as @var1703_0 var1703))\r\n(define-fun cast-from-String-to-var1703 ((BOUND_VARIABLE_624 String)) var1703 (as @var1703_0 var1703))\r\n(define-fun String_length/-667254855 ((_arg_1 String)) Int 0)\r\n(define-fun var378-init () var378 (as @var378_0 var378))\r\n(define-fun var1436_getMessage/1241486448 ((BOUND_VARIABLE_627 String) (BOUND_VARIABLE_628 (Array Int var1703))) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_631 var378) (BOUND_VARIABLE_632 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var1703__ () (Array Int var1703) (store ((as const (Array Int var1703)) (as @var1703_1 var1703)) 0 (as @var1703_0 var1703)))\r\n(define-fun var1360 () String \"\")\r\n(define-fun var1824 () String \"\")\r\n(define-fun var2873 () (Array Int var1703) (store ((as const (Array Int var1703)) (as @var1703_0 var1703)) 0 (as @var1703_1 var1703)))\r\n(define-fun var1360!1 () String \"\")\r\n(define-fun var3927!1 () var2548 (as @var2548_0 var2548))\r\n(define-fun var3276!1 () var378 (as @var378_0 var378))\r\n(define-fun var3977!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37507072,
            "run_time": 0.16875982284545898,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1703:\n  ;;   var1703!val!1 var1703!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1703!val!1 () var1703)\n  (declare-fun var1703!val!0 () var1703)\n  ;; cardinality constraint:\n  (forall ((x var1703)) (or (= x var1703!val!1) (= x var1703!val!0)))\n  ;; -----------\n  (define-fun var1360!1 () String\n    \"\")\n  (define-fun var3927 () var2548\n    (var1436_toSupplier/2040472275 var1824 var2873))\n  (define-fun var1360 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1824 () String\n    \"\\u{0}\")\n  (define-fun var3977 () String\n    (var1436_getMessage/1241486448 var1824 var2873))\n  (define-fun var2371 () Int\n    (String_length/-667254855 var1360!1))\n  (define-fun null-__Array__Int__var1703__ () (Array Int var1703)\n    ((as const (Array Int var1703)) var1703!val!1))\n  (define-fun var3276 () var378\n    var378-init)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2873 () (Array Int var1703)\n    ((as const (Array Int var1703)) var1703!val!0))\n  (define-fun var378-init () var378\n    var378!val!0)\n  (define-fun var3977!1 () String\n    \"\")\n  (define-fun var3927!1 () var2548\n    var2548!val!0)\n  (define-fun var3276!1 () var378\n    var378!val!0)\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    0)\n  (define-fun cast-from-String-to-var1703 ((x!0 String)) var1703\n    var1703!val!1)\n  (define-fun var465_requireNonNull/1077068520 ((x!0 var1703) (x!1 var2548)) var1703\n    var1703!val!1)\n  (define-fun var1436_toSupplier/2040472275 ((x!0 String)\n   (x!1 (Array Int var1703))) var2548\n    var2548!val!0)\n  (define-fun var1436_getMessage/1241486448 ((x!0 String)\n   (x!1 (Array Int var1703))) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var378) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 46 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167129088,
            "run_time": 1.3814215660095215,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1360!1 () String \"\\u{0}\")\r\n  (define-fun var2873 () (Array Int var1703) ((as const (Array Int var1703)) var1703!0))\r\n  (define-fun var1824 () String \"\\u{0}\")\r\n  (define-fun var1360 () String \"\\u{0}\")\r\n  (define-fun null-__Array__Int__var1703__ () (Array Int var1703) (store ((as const (Array Int var1703)) var1703!0) 0 var1703!1))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int (ite (= x!0 \"\\u{0}\") 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "r1 := @parameter1: java.lang.String",
            "r2 := @parameter2: java.lang.Object[]",
            "$r3 = staticinvoke <org.apache.commons.lang3.Validate: java.util.function.Supplier toSupplier(java.lang.String,java.lang.Object[])>(r1, r2)",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.util.function.Supplier)>(r0, $r3)",
            "$i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "if $i0 != 0 goto return r0",
            "$r4 = new java.lang.IllegalArgumentException",
            "$r5 = staticinvoke <org.apache.commons.lang3.Validate: java.lang.String getMessage(java.lang.String,java.lang.Object[])>(r1, r2)",
            "specialinvoke $r4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5)",
            "throw $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__isTrue__-1387036672\\1166.smt2",
        "z3": {
            "memory": 32276480,
            "run_time": 0.08865976333618164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2197:\r\n  ;;   var2197!val!1 var2197!val!0 var2197!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2197!val!1 () var2197)\r\n  (declare-fun var2197!val!0 () var2197)\r\n  (declare-fun var2197!val!2 () var2197)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2197))\r\n          (or (= x var2197!val!1) (= x var2197!val!0) (= x var2197!val!2)))\r\n  ;; -----------\r\n  (define-fun var1766 () var3933\r\n    var3933-init)\r\n  (define-fun null-__Array__Int__var2197__ () (Array Int var2197)\r\n    ((as const (Array Int var2197)) var2197!val!2))\r\n  (define-fun var275 () Float64\r\n    (Float64_valueOf/679560954 var1948))\r\n  (define-fun var1948 () Float64\r\n    (_ +zero 11 53))\r\n  (define-fun var1167 () (Array Int var2197)\r\n    arr-var2197-init)\r\n  (define-fun var2194 () String\r\n    \"!0!\")\r\n  (define-fun var2153 () String\r\n    (String_format/1339386452 var2194 var1167!1))\r\n  (define-fun null-Float64 () Float64\r\n    (fp #b0 #b00000000000 #x0000000000001))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1167!1 () (Array Int var2197)\r\n    (store ((as const (Array Int var2197)) var2197!val!0) 2 var2197!val!1))\r\n  (define-fun null-Bool () Bool\r\n    true)\r\n  (define-fun var1444 () Bool\r\n    false)\r\n  (define-fun var1766!1 () var3933\r\n    var3933!val!0)\r\n  (define-fun var3933-init () var3933\r\n    var3933!val!0)\r\n  (define-fun arr-var2197-init () (Array Int var2197)\r\n    ((as const (Array Int var2197)) var2197!val!0))\r\n  (define-fun var2153!1 () String\r\n    \"\")\r\n  (define-fun cast-from-Float64-to-var2197 ((x!0 Float64)) var2197\r\n    var2197!val!0)\r\n  (define-fun Float64_valueOf/679560954 ((x!0 Float64)) Float64\r\n    (_ +zero 11 53))\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var2197))) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var3933) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 16887808,
            "run_time": 0.10704350471496582,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var694 is 1\r\n; rep: (as @var694_0 var694)\r\n; cardinality of var3933 is 1\r\n; rep: (as @var3933_0 var3933)\r\n; cardinality of var2197 is 2\r\n; rep: (as @var2197_0 var2197)\r\n; rep: (as @var2197_1 var2197)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3933-init () var3933 (as @var3933_0 var3933))\r\n(define-fun arr-var2197-init () (Array Int var2197) ((as const (Array Int var2197)) (as @var2197_0 var2197)))\r\n(define-fun Float64_valueOf/679560954 ((_arg_1 (_ FloatingPoint 11 53))) (_ FloatingPoint 11 53) (fp #b1 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun cast-from-Float64-to-var2197 ((_arg_1 (_ FloatingPoint 11 53))) var2197 (as @var2197_1 var2197))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_9878 String) (BOUND_VARIABLE_9879 (Array Int var2197))) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_9882 var3933) (BOUND_VARIABLE_9883 String)) void (as @void_0 void))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Float64 () (_ FloatingPoint 11 53) (fp #b1 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun null-__Array__Int__var2197__ () (Array Int var2197) (store ((as const (Array Int var2197)) (as @var2197_1 var2197)) 0 (as @var2197_0 var2197)))\r\n(define-fun var1444 () Bool false)\r\n(define-fun var2194 () String \"\")\r\n(define-fun var1948 () (_ FloatingPoint 11 53) (fp #b0 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun var1167!1 () (Array Int var2197) (store ((as const (Array Int var2197)) (as @var2197_0 var2197)) 0 (as @var2197_1 var2197)))\r\n(define-fun var1766!1 () var3933 (as @var3933_0 var3933))\r\n(define-fun var2153!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38518784,
            "run_time": 0.10621929168701172,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2197:\n  ;;   var2197!val!1 var2197!val!0 var2197!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2197!val!1 () var2197)\n  (declare-fun var2197!val!0 () var2197)\n  (declare-fun var2197!val!2 () var2197)\n  ;; cardinality constraint:\n  (forall ((x var2197))\n          (or (= x var2197!val!1) (= x var2197!val!0) (= x var2197!val!2)))\n  ;; -----------\n  (define-fun var1444 () Bool\n    false)\n  (define-fun null-Bool () Bool\n    true)\n  (define-fun var2153 () String\n    (String_format/1339386452 var2194 var1167!1))\n  (define-fun var1167 () (Array Int var2197)\n    arr-var2197-init)\n  (define-fun var1766 () var3933\n    var3933-init)\n  (define-fun null-__Array__Int__var2197__ () (Array Int var2197)\n    ((as const (Array Int var2197)) var2197!val!2))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var275 () Float64\n    (Float64_valueOf/679560954 var1948))\n  (define-fun var2194 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1167!1 () (Array Int var2197)\n    (store ((as const (Array Int var2197)) var2197!val!1) 0 var2197!val!0))\n  (define-fun var1948 () Float64\n    (_ +zero 11 53))\n  (define-fun null-Float64 () Float64\n    (fp #b0 #b00000000000 #x0000000000001))\n  (define-fun var1766!1 () var3933\n    var3933!val!0)\n  (define-fun var3933-init () var3933\n    var3933!val!0)\n  (define-fun arr-var2197-init () (Array Int var2197)\n    ((as const (Array Int var2197)) var2197!val!0))\n  (define-fun var2153!1 () String\n    \"\")\n  (define-fun Float64_valueOf/679560954 ((x!0 Float64)) Float64\n    (_ +zero 11 53))\n  (define-fun cast-from-Float64-to-var2197 ((x!0 Float64)) var2197\n    var2197!val!0)\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var2197))) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var3933) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 124477440,
            "run_time": 0.8853230476379395,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.Validate__isTrue__-1387036672\\1166.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n500ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "z0 := @parameter0: boolean",
            "r1 := @parameter1: java.lang.String",
            "d0 := @parameter2: double",
            "if z0 != 0 goto return",
            "$r0 = new java.lang.IllegalArgumentException",
            "$r2 = newarray (java.lang.Object)[1]",
            "$r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0)",
            "$r2[0] = $r3",
            "$r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r2)",
            "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__lambda$appendDisplayNames$0__1306817118\\4725.smt2",
        "z3": {
            "memory": 31907840,
            "run_time": 0.11820697784423828,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3780:\r\n  ;;   var3780!val!0 var3780!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3780!val!0 () var3780)\r\n  (declare-fun var3780!val!1 () var3780)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3780)) (or (= x var3780!val!0) (= x var3780!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1447:\r\n  ;;   var1447!val!1 var1447!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1447!val!1 () var1447)\r\n  (declare-fun var1447!val!0 () var1447)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1447)) (or (= x var1447!val!1) (= x var1447!val!0)))\r\n  ;; -----------\r\n  ;; universe for var250:\r\n  ;;   var250!val!1 var250!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var250!val!1 () var250)\r\n  (declare-fun var250!val!0 () var250)\r\n  ;; cardinality constraint:\r\n  (forall ((x var250)) (or (= x var250!val!1) (= x var250!val!0)))\r\n  ;; -----------\r\n  ;; universe for var45:\r\n  ;;   var45!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var45!val!0 () var45)\r\n  ;; cardinality constraint:\r\n  (forall ((x var45)) (= x var45!val!0))\r\n  ;; -----------\r\n  (define-fun var15 () String\r\n    (toLowerCase/1946809429 var3551 var3169))\r\n  (define-fun var2524 () Bool\r\n    (add/397686517 var2685\r\n               (cast-from-String-to-var45\r\n                 (toLowerCase/1946809429 var3551 var3169))))\r\n  (define-fun null-var3780 () var3780\r\n    var3780!val!1)\r\n  (define-fun var1228 () var3780\r\n    var3780!val!0)\r\n  (define-fun var1257 () Int\r\n    1)\r\n  (define-fun var3169 () var1447\r\n    var1447!val!0)\r\n  (define-fun var2685 () var250\r\n    var250!val!0)\r\n  (define-fun null-var250 () var250\r\n    var250!val!1)\r\n  (define-fun null-var1447 () var1447\r\n    var1447!val!1)\r\n  (define-fun var3551 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun add/397686517 ((x!0 var250) (x!1 var45)) Bool\r\n    false)\r\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var1447)) String\r\n    \"!2!\")\r\n  (define-fun cast-from-String-to-var45 ((x!0 String)) var45\r\n    var45!val!0)\r\n)\r\n(error \"line 39 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.029874086380004883,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1447 is 2\r\n; rep: (as @var1447_0 var1447)\r\n; rep: (as @var1447_1 var1447)\r\n; cardinality of var250 is 2\r\n; rep: (as @var250_0 var250)\r\n; rep: (as @var250_1 var250)\r\n; cardinality of var3780 is 2\r\n; rep: (as @var3780_0 var3780)\r\n; rep: (as @var3780_1 var3780)\r\n; cardinality of var2316 is 1\r\n; rep: (as @var2316_0 var2316)\r\n; cardinality of var45 is 1\r\n; rep: (as @var45_0 var45)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun toLowerCase/1946809429 ((_arg_1 String) (_arg_2 var1447)) String \"B\")\r\n(define-fun add/397686517 ((_arg_1 var250) (_arg_2 var45)) Bool false)\r\n(define-fun cast-from-String-to-var45 ((_arg_1 String)) var45 (as @var45_0 var45))\r\n(define-fun null-var1447 () var1447 (as @var1447_0 var1447))\r\n(define-fun null-var250 () var250 (as @var250_0 var250))\r\n(define-fun null-var3780 () var3780 (as @var3780_0 var3780))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3169 () var1447 (as @var1447_1 var1447))\r\n(define-fun var2685 () var250 (as @var250_1 var250))\r\n(define-fun var1228 () var3780 (as @var3780_1 var3780))\r\n(define-fun var3551 () String \"\")\r\n(define-fun var1257 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35655680,
            "run_time": 0.0776674747467041,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 38 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 39 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167211008,
            "run_time": 1.240713357925415,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1257 () Int 1)\r\n  (define-fun var3551 () String \"\\u{0}\")\r\n  (define-fun var1228 () var3780 var3780!12)\r\n  (define-fun var2685 () var250 var250!10)\r\n  (define-fun var3169 () var1447 var1447!8)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3780 () var3780 var3780!6)\r\n  (define-fun null-var250 () var250 var250!4)\r\n  (define-fun null-var1447 () var1447 var1447!2)\r\n  (define-fun var45!34 () var45 (cast-from-String-to-var45 \"\\u{1}\"))\r\n  (define-fun add/397686517 ((x!0 var250) (x!1 var45)) Bool (ite (and (= x!0 var250!10) (= x!1 var45!34)) false true))\r\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var1447)) String (ite (and (= x!0 \"\\u{0}\") (= x!1 var1447!8)) \"\\u{1}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.util.Locale",
            "r3 := @parameter1: java.util.TreeSet",
            "r4 := @parameter2: java.util.Map",
            "r0 := @parameter3: java.lang.String",
            "r5 := @parameter4: java.lang.Integer",
            "r2 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(r1)",
            "$z0 = virtualinvoke r3.<java.util.TreeSet: boolean add(java.lang.Object)>(r2)",
            "if $z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__getMessage__1241486448\\804.smt2",
        "z3": {
            "memory": 31256576,
            "run_time": 0.13354158401489258,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var949:\r\n  ;;   var949!val!1 var949!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var949!val!1 () var949)\r\n  (declare-fun var949!val!0 () var949)\r\n  ;; cardinality constraint:\r\n  (forall ((x var949)) (or (= x var949!val!1) (= x var949!val!0)))\r\n  ;; -----------\r\n  (define-fun var1654 () String\r\n    \"!0!\")\r\n  (define-fun null-__Array__Int__var949__ () (Array Int var949)\r\n    ((as const (Array Int var949)) var949!val!1))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1676 () Bool\r\n    (var2575_isEmpty/-1293327634 var2387))\r\n  (define-fun var1293 () String\r\n    (String_format/1339386452 var1654 var2387))\r\n  (define-fun var2387 () (Array Int var949)\r\n    ((as const (Array Int var949)) var949!val!0))\r\n  (define-fun var2575_isEmpty/-1293327634 ((x!0 (Array Int var949))) Bool\r\n    false)\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var949))) String\r\n    \"\")\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1646592,
            "run_time": 0.03159356117248535,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var937 is 1\r\n; rep: (as @var937_0 var937)\r\n; cardinality of var949 is 2\r\n; rep: (as @var949_0 var949)\r\n; rep: (as @var949_1 var949)\r\n; cardinality of var2575 is 1\r\n; rep: (as @var2575_0 var2575)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2575_isEmpty/-1293327634 ((_arg_1 (Array Int var949))) Bool false)\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_543 String) (BOUND_VARIABLE_544 (Array Int var949))) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var949__ () (Array Int var949) (store ((as const (Array Int var949)) (as @var949_1 var949)) 0 (as @var949_0 var949)))\r\n(define-fun var1654 () String \"\")\r\n(define-fun var2387 () (Array Int var949) (store ((as const (Array Int var949)) (as @var949_0 var949)) 0 (as @var949_1 var949)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37158912,
            "run_time": 0.09409809112548828,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var949:\n  ;;   var949!val!1 var949!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var949!val!1 () var949)\n  (declare-fun var949!val!0 () var949)\n  ;; cardinality constraint:\n  (forall ((x var949)) (or (= x var949!val!1) (= x var949!val!0)))\n  ;; -----------\n  (define-fun var2387 () (Array Int var949)\n    ((as const (Array Int var949)) var949!val!0))\n  (define-fun var1676 () Bool\n    (var2575_isEmpty/-1293327634 var2387))\n  (define-fun var1654 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-__Array__Int__var949__ () (Array Int var949)\n    ((as const (Array Int var949)) var949!val!1))\n  (define-fun var1293 () String\n    (String_format/1339386452 var1654 var2387))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2575_isEmpty/-1293327634 ((x!0 (Array Int var949))) Bool\n    false)\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var949))) String\n    \"\")\n)\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152481792,
            "run_time": 1.287266492843628,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2387 () (Array Int var949) ((as const (Array Int var949)) var949!0))\r\n  (define-fun var1654 () String \"\\u{0}\")\r\n  (define-fun null-__Array__Int__var949__ () (Array Int var949) (store ((as const (Array Int var949)) var949!0) 0 var949!1))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var2575_isEmpty/-1293327634 ((x!0 (Array Int var949))) Bool (ite (= x!0 ((as const (Array Int var949)) var949!0)) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.lang.Object[]",
            "$z0 = staticinvoke <org.apache.commons.lang3.ArrayUtils: boolean isEmpty(java.lang.Object[])>(r0)",
            "if $z0 == 0 goto $r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r0)",
            "$r2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, r0)",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDatePrinter__parseToken__907492036\\4666.smt2",
        "z3": {
            "memory": 32088064,
            "run_time": 0.11787557601928711,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var30:\r\n  ;;   var30!val!0 var30!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var30!val!0 () var30)\r\n  (declare-fun var30!val!1 () var30)\r\n  ;; cardinality constraint:\r\n  (forall ((x var30)) (or (= x var30!val!0) (= x var30!val!1)))\r\n  ;; -----------\r\n  (define-fun var3742 () Int\r\n    (str.len var2124))\r\n  (define-fun var3264 () Int\r\n    (str.to_code (str.at var2124 (select var3759 0))))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2250 () String\r\n    String-init)\r\n  (define-fun var3759!1 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 11) 0 0))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 10) 5 7))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1165 () Int\r\n    (select var3759 0))\r\n  (define-fun var3568 () Int\r\n    (+ (select var3759 0) 1))\r\n  (define-fun null-var30 () var30\r\n    var30!val!1)\r\n  (define-fun var3759 () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 0) 5 6))\r\n  (define-fun var1820 () String\r\n    var2250!2)\r\n  (define-fun var3313 () Int\r\n    (str.to_code (str.at var2124 (select var3759 0))))\r\n  (define-fun var1798 () Int\r\n    (str.to_code (str.at var2124 (select var3759 0))))\r\n  (define-fun var2009 () var30\r\n    var30!val!0)\r\n  (define-fun var2124 () String\r\n    \"J\")\r\n  (define-fun var2250!1 () String\r\n    \"\")\r\n  (define-fun var2250!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun k!1 ((x!0 Int)) Int\r\n    (ite (= x!0 5) 7\r\n      10))\r\n  (define-fun k!2 ((x!0 Int)) Int\r\n    (ite (= x!0 0) 0\r\n      11))\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 57 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13193216,
            "run_time": 0.04637336730957031,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var30 is 2\r\n; rep: (as @var30_0 var30)\r\n; rep: (as @var30_1 var30)\r\n; cardinality of var1341 is 1\r\n; rep: (as @var1341_0 var1341)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_1131 String) (BOUND_VARIABLE_1132 Int)) String \"\")\r\n(define-fun null-var30 () var30 (as @var30_0 var30))\r\n(define-fun null-String () String \"\")\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var2009 () var30 (as @var30_1 var30))\r\n(define-fun var2124 () String \"A\")\r\n(define-fun var3759 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2250!1 () String \"\")\r\n(define-fun var2250!2 () String \"\")\r\n(define-fun var3759!1 () (Array Int Int) (store ((as const (Array Int Int)) (- 1)) 0 0))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37609472,
            "run_time": 0.12209224700927734,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var30:\n  ;;   var30!val!0 var30!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var30!val!0 () var30)\n  (declare-fun var30!val!1 () var30)\n  ;; cardinality constraint:\n  (forall ((x var30)) (or (= x var30!val!0) (= x var30!val!1)))\n  ;; -----------\n  (define-fun var2250!1 () String\n    \"\")\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store ((as const (Array Int Int)) 11) 12 13))\n  (define-fun var3759!1 () (Array Int Int)\n    (store ((as const (Array Int Int)) 14) 0 1))\n  (define-fun var3568 () Int\n    (+ (select var3759 0) 1))\n  (define-fun var2009 () var30\n    var30!val!0)\n  (define-fun var3759 () (Array Int Int)\n    (store ((as const (Array Int Int)) 10) 0 1))\n  (define-fun var3264 () Int\n    (str.to_code (str.at var2124 (select var3759 0))))\n  (define-fun var3742 () Int\n    (str.len var2124))\n  (define-fun var1165 () Int\n    (select var3759 0))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2250 () String\n    String-init)\n  (define-fun var3313 () Int\n    (str.to_code (str.at var2124 (select var3759 0))))\n  (define-fun var1798 () Int\n    (str.to_code (str.at var2124 (select var3759 0))))\n  (define-fun var1820 () String\n    var2250!2)\n  (define-fun null-var30 () var30\n    var30!val!1)\n  (define-fun var2124 () String\n    \"\\u{0}A\")\n  (define-fun var2250!2 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun k!490 ((x!0 Int)) Int\n    (ite (= x!0 12) 13\n      11))\n  (define-fun k!491 ((x!0 Int)) Int\n    (ite (= x!0 0) 1\n      14))\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\n    \"\")\n)\n(error \"line 57 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 184934400,
            "run_time": 1.6738309860229492,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_29_1, all_29_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDatePrinter__parseToken__907492036\\4666.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n1275ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @this: org.apache.commons.lang3.time.FastDatePrinter",
            "r2 := @parameter0: java.lang.String",
            "r1 := @parameter1: int[]",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "i5 = r1[0]",
            "i0 = virtualinvoke r2.<java.lang.String: int length()>()",
            "c6 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i5)",
            "$i10 = (int) c6",
            "if $i10 < 65 goto $i12 = (int) c6",
            "$i11 = (int) c6",
            "if $i11 <= 90 goto virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c6)",
            "virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c6)",
            "$i7 = i5 + 1",
            "if $i7 >= i0 goto r1[0] = i5",
            "r1[0] = i5",
            "$r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.tuple.Pair__toString__1366828197\\4449.smt2",
        "z3": {
            "memory": 31752192,
            "run_time": 0.09907197952270508,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var487:\r\n  ;;   var487!val!1 var487!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var487!val!1 () var487)\r\n  (declare-fun var487!val!0 () var487)\r\n  ;; cardinality constraint:\r\n  (forall ((x var487)) (or (= x var487!val!1) (= x var487!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1123:\r\n  ;;   var1123!val!1 var1123!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1123!val!1 () var1123)\r\n  (declare-fun var1123!val!0 () var1123)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1123)) (or (= x var1123!val!1) (= x var1123!val!0)))\r\n  ;; -----------\r\n  (define-fun var375!1 () String\r\n    \"(\")\r\n  (define-fun var1756!1 () String\r\n    \"\")\r\n  (define-fun var1446 () var1123\r\n    (getLeft/1053147166 var2723))\r\n  (define-fun var375 () String\r\n    (str.++ var2909!1 \"(\"))\r\n  (define-fun var2723 () var487\r\n    var487!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var35 () String\r\n    (let ((a!1 (append/-1031950772\r\n             (append/-1166366385\r\n               (append/-1031950772\r\n                 (str.++ var2909!1 \"(\")\r\n                 (getLeft/1053147166 var2723))\r\n               44)\r\n             (getRight/-570391911 var2723))))\r\n  (append/-1166366385 a!1 41)))\r\n  (define-fun var444 () String\r\n    (append/-1031950772\r\n  (append/-1166366385\r\n    (append/-1031950772 (str.++ var2909!1 \"(\") (getLeft/1053147166 var2723))\r\n    44)\r\n  (getRight/-570391911 var2723)))\r\n  (define-fun var1756 () String\r\n    (append/-1166366385\r\n  (append/-1031950772 (str.++ var2909!1 \"(\") (getLeft/1053147166 var2723))\r\n  44))\r\n  (define-fun var2452!1 () String\r\n    \"\")\r\n  (define-fun var444!1 () String\r\n    \"\")\r\n  (define-fun var2909 () String\r\n    String-init)\r\n  (define-fun var1462 () String\r\n    (let ((a!1 (append/-1031950772\r\n             (append/-1166366385\r\n               (append/-1031950772\r\n                 (str.++ var2909!1 \"(\")\r\n                 (getLeft/1053147166 var2723))\r\n               44)\r\n             (getRight/-570391911 var2723))))\r\n  (append/-1166366385 a!1 41)))\r\n  (define-fun null-var487 () var487\r\n    var487!val!1)\r\n  (define-fun var2407 () var1123\r\n    (getRight/-570391911 var2723))\r\n  (define-fun var2452 () String\r\n    (append/-1031950772 (str.++ var2909!1 \"(\") (getLeft/1053147166 var2723)))\r\n  (define-fun var2909!1 () String\r\n    \"\")\r\n  (define-fun var2909!2 () String\r\n    \"(\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun getLeft/1053147166 ((x!0 var487)) var1123\r\n    var1123!val!0)\r\n  (define-fun getRight/-570391911 ((x!0 var487)) var1123\r\n    var1123!val!1)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1123)) String\r\n    \"\")\r\n)\r\n(error \"line 54 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9441280,
            "run_time": 0.03214430809020996,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var487 is 2\r\n; rep: (as @var487_0 var487)\r\n; rep: (as @var487_1 var487)\r\n; cardinality of var1123 is 2\r\n; rep: (as @var1123_0 var1123)\r\n; rep: (as @var1123_1 var1123)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getLeft/1053147166 ((_arg_1 var487)) var1123 (as @var1123_0 var1123))\r\n(define-fun append/-1031950772 ((_arg_1 String) (_arg_2 var1123)) String \"\")\r\n(define-fun append/-1166366385 ((_arg_1 String) (_arg_2 Int)) String \"\")\r\n(define-fun getRight/-570391911 ((_arg_1 var487)) var1123 (as @var1123_1 var1123))\r\n(define-fun null-var487 () var487 (as @var487_0 var487))\r\n(define-fun var2723 () var487 (as @var487_1 var487))\r\n(define-fun var2909!1 () String \"\")\r\n(define-fun var2909!2 () String \"(\")\r\n(define-fun var375!1 () String \"(\")\r\n(define-fun var2452!1 () String \"\")\r\n(define-fun var1756!1 () String \"\")\r\n(define-fun var444!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37019648,
            "run_time": 0.09227180480957031,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 53 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 54 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169525248,
            "run_time": 1.5182363986968994,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.tuple.Pair__toString__1366828197\\4449.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var444!1 =\r\n     concat(all_26_2, rhs)\r\n   var1756!1 =\r\n     concat(all_23_2, rhs)\r\n   var2452!1 =\r\n     concat(all_20_2, rhs)\r\n   ... sat\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var444!1 =\r\n     concat(all_20_2, rhs)\r\n   var1756!1 =\r\n     concat(all_20_2, rhs)\r\n   var2452!1 =\r\n     concat(all_20_2, rhs)\r\n   ... sat\r\n\r\n1155ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.tuple.Pair",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$r2 = virtualinvoke r1.<org.apache.commons.lang3.tuple.Pair: java.lang.Object getLeft()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2)",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44)",
            "$r5 = virtualinvoke r1.<org.apache.commons.lang3.tuple.Pair: java.lang.Object getRight()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r9"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__isTrue__-1387036672\\1188.smt2",
        "z3": {
            "memory": 32174080,
            "run_time": 0.07261967658996582,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3259 () String\r\n    \"!0!\")\r\n  (define-fun null-Float64 () Float64\r\n    (fp #b0 #b00000000000 #x0000000000001))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2060 () Float64\r\n    (_ +zero 11 53))\r\n  (define-fun var2361 () Bool\r\n    true)\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 15310848,
            "run_time": 0.06346583366394043,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1495 is 1\r\n; rep: (as @var1495_0 var1495)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-Bool () Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Float64 () (_ FloatingPoint 11 53) (fp #b1 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun var2361 () Bool true)\r\n(define-fun var3259 () String \"\")\r\n(define-fun var2060 () (_ FloatingPoint 11 53) (fp #b0 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37621760,
            "run_time": 0.19954299926757812,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun var2361 () Bool\n    true)\n  (define-fun var3259 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2060 () Float64\n    (_ +zero 11 53))\n  (define-fun null-Float64 () Float64\n    (fp #b0 #b00000000000 #x0000000000001))\n  (define-fun null-String () String\n    \"\\u{0}\")\n)\n(error \"line 22 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 124788736,
            "run_time": 0.8214223384857178,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.Validate__isTrue__-1387036672\\1188.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n441ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 0,
        "assertion_count": 4,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "z0 := @parameter0: boolean",
            "r1 := @parameter1: java.lang.String",
            "d0 := @parameter2: double",
            "if z0 != 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__notEmpty__1384193294\\1641.smt2",
        "z3": {
            "memory": 31756288,
            "run_time": 0.12190485000610352,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3005:\r\n  ;;   var3005!val!0 var3005!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3005!val!0 () var3005)\r\n  (declare-fun var3005!val!1 () var3005)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3005)) (or (= x var3005!val!0) (= x var3005!val!1)))\r\n  ;; -----------\r\n  (define-fun var2909 () String\r\n    \"!2!\")\r\n  (define-fun var1236 () (Array Int var3005)\r\n    ((as const (Array Int var3005)) var3005!val!0))\r\n  (define-fun null-__Array__Int__var3005__ () (Array Int var3005)\r\n    ((as const (Array Int var3005)) var3005!val!1))\r\n  (define-fun var3739!1 () String\r\n    \"!3!\")\r\n  (define-fun var1167 () Int\r\n    (String_length/-667254855 var3739!1))\r\n  (define-fun var797 () var3865\r\n    (var1253_toSupplier/2040472275 var2909 var1236))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var3739 () String\r\n    \"!0!\")\r\n  (define-fun var797!1 () var3865\r\n    var3865!val!0)\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int\r\n    2)\r\n  (define-fun var646_requireNonNull/1077068520 ((x!0 var3005) (x!1 var3865)) var3005\r\n    var3005!val!0)\r\n  (define-fun var1253_toSupplier/2040472275 ((x!0 String)\r\n   (x!1 (Array Int var3005))) var3865\r\n    var3865!val!0)\r\n  (define-fun cast-from-String-to-var3005 ((x!0 String)) var3005\r\n    var3005!val!0)\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.07656598091125488,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2692 is 1\r\n; rep: (as @var2692_0 var2692)\r\n; cardinality of var3005 is 2\r\n; rep: (as @var3005_0 var3005)\r\n; rep: (as @var3005_1 var3005)\r\n; cardinality of var3865 is 1\r\n; rep: (as @var3865_0 var3865)\r\n; cardinality of var1253 is 1\r\n; rep: (as @var1253_0 var1253)\r\n; cardinality of var646 is 1\r\n; rep: (as @var646_0 var646)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1253_toSupplier/2040472275 ((BOUND_VARIABLE_606 String) (BOUND_VARIABLE_607 (Array Int var3005))) var3865 (as @var3865_0 var3865))\r\n(define-fun var646_requireNonNull/1077068520 ((BOUND_VARIABLE_610 var3005) (BOUND_VARIABLE_611 var3865)) var3005 (as @var3005_0 var3005))\r\n(define-fun cast-from-String-to-var3005 ((BOUND_VARIABLE_614 String)) var3005 (as @var3005_0 var3005))\r\n(define-fun String_length/-667254855 ((_arg_1 String)) Int (- 1))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var3005__ () (Array Int var3005) (store ((as const (Array Int var3005)) (as @var3005_1 var3005)) 0 (as @var3005_0 var3005)))\r\n(define-fun var3739 () String \"\")\r\n(define-fun var2909 () String \"\")\r\n(define-fun var1236 () (Array Int var3005) (store ((as const (Array Int var3005)) (as @var3005_0 var3005)) 0 (as @var3005_1 var3005)))\r\n(define-fun var3739!1 () String \"\")\r\n(define-fun var797!1 () var3865 (as @var3865_0 var3865))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37535744,
            "run_time": 0.12422919273376465,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3005:\n  ;;   var3005!val!0 var3005!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3005!val!0 () var3005)\n  (declare-fun var3005!val!1 () var3005)\n  ;; cardinality constraint:\n  (forall ((x var3005)) (or (= x var3005!val!0) (= x var3005!val!1)))\n  ;; -----------\n  (define-fun var3739!1 () String\n    \"\")\n  (define-fun var797 () var3865\n    (var1253_toSupplier/2040472275 var2909 var1236))\n  (define-fun var2909 () String\n    \"\\u{0}\")\n  (define-fun var1167 () Int\n    (String_length/-667254855 var3739!1))\n  (define-fun var3739 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-__Array__Int__var3005__ () (Array Int var3005)\n    ((as const (Array Int var3005)) var3005!val!1))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1236 () (Array Int var3005)\n    ((as const (Array Int var3005)) var3005!val!0))\n  (define-fun var797!1 () var3865\n    var3865!val!0)\n  (define-fun String_length/-667254855 ((x!0 String)) Int\n    4)\n  (define-fun var646_requireNonNull/1077068520 ((x!0 var3005) (x!1 var3865)) var3005\n    var3005!val!0)\n  (define-fun var1253_toSupplier/2040472275 ((x!0 String)\n   (x!1 (Array Int var3005))) var3865\n    var3865!val!0)\n  (define-fun cast-from-String-to-var3005 ((x!0 String)) var3005\n    var3005!val!0)\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168587264,
            "run_time": 1.1897358894348145,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3739!1 () String \"\\u{0}\")\r\n  (define-fun var1236 () (Array Int var3005) ((as const (Array Int var3005)) var3005!0))\r\n  (define-fun var2909 () String \"\\u{0}\")\r\n  (define-fun var3739 () String \"\\u{0}\")\r\n  (define-fun null-__Array__Int__var3005__ () (Array Int var3005) (store ((as const (Array Int var3005)) var3005!0) 0 var3005!1))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun String_length/-667254855 ((x!0 String)) Int (ite (= x!0 \"\\u{0}\") 10 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.CharSequence: int length()>"
        ],
        "api_count": {
            "<java.lang.CharSequence: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.CharSequence",
            "r1 := @parameter1: java.lang.String",
            "r2 := @parameter2: java.lang.Object[]",
            "$r3 = staticinvoke <org.apache.commons.lang3.Validate: java.util.function.Supplier toSupplier(java.lang.String,java.lang.Object[])>(r1, r2)",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.util.function.Supplier)>(r0, $r3)",
            "$i0 = interfaceinvoke r0.<java.lang.CharSequence: int length()>()",
            "if $i0 != 0 goto return r0",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.GmtTimeZone__\u300ainit\u300b__-1793658684\\4115.smt2",
        "z3": {
            "memory": 31297536,
            "run_time": 0.07165789604187012,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2161:\r\n  ;;   var2161!val!1 var2161!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2161!val!1 () var2161)\r\n  (declare-fun var2161!val!0 () var2161)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2161)) (or (= x var2161!val!1) (= x var2161!val!0)))\r\n  ;; -----------\r\n  (define-fun var1278 () String\r\n    (str.++ var1900!1 (str.from_int var3422)))\r\n  (define-fun var1905 () Bool\r\n    true)\r\n  (define-fun var1900 () String\r\n    String-init)\r\n  (define-fun var2820 () Int\r\n    26)\r\n  (define-fun var3422 () Int\r\n    24)\r\n  (define-fun var1043 () String\r\n    (str.++ var1900!1 (str.from_int var3422) \" hours out of range\"))\r\n  (define-fun var1007 () var3859\r\n    var3859-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var2161 () var2161\r\n    var2161!val!1)\r\n  (define-fun null-Int () Int\r\n    25)\r\n  (define-fun var3551 () var2161\r\n    var2161!val!0)\r\n  (define-fun var981 () String\r\n    (str.++ var1900!1 (str.from_int var3422) \" hours out of range\"))\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var1900!1 () String\r\n    \"\")\r\n  (define-fun var1278!1 () String\r\n    \"24 hours out of range\")\r\n  (define-fun var3859-init () var3859\r\n    var3859!val!0)\r\n  (define-fun var1043!1 () String\r\n    \"\")\r\n  (define-fun var1007!1 () var3859\r\n    var3859!val!0)\r\n  (define-fun var1900!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3551!1 () var2161\r\n    var2161!val!1)\r\n  (define-fun <init>/-1065096742 ((x!0 var663)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var2161-to-var663 ((x!0 var2161)) var663\r\n    var663!val!0)\r\n  (define-fun <init>/875830710 ((x!0 var3859) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 60 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1650688,
            "run_time": 0.03002762794494629,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2161 is 2\r\n; rep: (as @var2161_0 var2161)\r\n; rep: (as @var2161_1 var2161)\r\n; cardinality of var663 is 1\r\n; rep: (as @var663_0 var663)\r\n; cardinality of var3859 is 1\r\n; rep: (as @var3859_0 var3859)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun <init>/-1065096742 ((BOUND_VARIABLE_646 var663)) void (as @void_0 void))\r\n(define-fun cast-from-var2161-to-var663 ((BOUND_VARIABLE_649 var2161)) var663 (as @var663_0 var663))\r\n(define-fun var3859-init () var3859 (as @var3859_0 var3859))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_652 var3859) (BOUND_VARIABLE_653 String)) void (as @void_0 void))\r\n(define-fun null-var2161 () var2161 (as @var2161_0 var2161))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun null-Int () Int 0)\r\n(define-fun var3551 () var2161 (as @var2161_1 var2161))\r\n(define-fun var1905 () Bool false)\r\n(define-fun var3422 () Int 24)\r\n(define-fun var2820 () Int 1)\r\n(define-fun var3551!1 () var2161 (as @var2161_0 var2161))\r\n(define-fun var1900!1 () String \"\")\r\n(define-fun var1900!2 () String \"\")\r\n(define-fun var1278!1 () String \"24 hours out of range\")\r\n(define-fun var1007!1 () var3859 (as @var3859_0 var3859))\r\n(define-fun var1043!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36368384,
            "run_time": 0.10934710502624512,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2161:\n  ;;   var2161!val!1 var2161!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2161!val!1 () var2161)\n  (declare-fun var2161!val!0 () var2161)\n  ;; cardinality constraint:\n  (forall ((x var2161)) (or (= x var2161!val!1) (= x var2161!val!0)))\n  ;; -----------\n  (define-fun var1900 () String\n    String-init)\n  (define-fun var1043 () String\n    (str.++ var1900!1 (str.from_int var3422) \" hours out of range\"))\n  (define-fun var1905 () Bool\n    true)\n  (define-fun var2820 () Int\n    26)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3422 () Int\n    24)\n  (define-fun null-var2161 () var2161\n    var2161!val!1)\n  (define-fun var981 () String\n    (str.++ var1900!1 (str.from_int var3422) \" hours out of range\"))\n  (define-fun var1007 () var3859\n    var3859-init)\n  (define-fun null-Int () Int\n    25)\n  (define-fun var3551 () var2161\n    var2161!val!0)\n  (define-fun var1278 () String\n    (str.++ var1900!1 (str.from_int var3422)))\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun var1900!1 () String\n    \"\")\n  (define-fun var1278!1 () String\n    \"24 hours out of range\")\n  (define-fun var3859-init () var3859\n    var3859!val!0)\n  (define-fun var1043!1 () String\n    \"\")\n  (define-fun var1007!1 () var3859\n    var3859!val!0)\n  (define-fun var1900!2 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3551!1 () var2161\n    var2161!val!1)\n  (define-fun <init>/-1065096742 ((x!0 var663)) void\n    void!val!0)\n  (define-fun cast-from-var2161-to-var663 ((x!0 var2161)) var663\n    var663!val!0)\n  (define-fun <init>/875830710 ((x!0 var3859) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 60 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 209399808,
            "run_time": 1.5617823600769043,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1278!1 () String \"24 hours out of range\")\r\n  (define-fun var1900!2 () String \"\")\r\n  (define-fun var1900!1 () String \"\")\r\n  (define-fun var2820 () Int 1)\r\n  (define-fun var3422 () Int 24)\r\n  (define-fun var3551 () var2161 var2161!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var2161 () var2161 var2161!2)\r\n  (define-fun var1905 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.GmtTimeZone",
            "z0 := @parameter0: boolean",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "specialinvoke r0.<java.util.TimeZone: void <init>()>()",
            "if i0 < 24 goto (branch)",
            "$r19 = new java.lang.IllegalArgumentException",
            "$r18 = new java.lang.StringBuilder",
            "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()",
            "$r15 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" hours out of range\")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r17)",
            "throw $r19"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDatePrinter__parseToken__907492036\\4702-deviant-0.smt2",
        "z3": {
            "memory": 31432704,
            "run_time": 0.13426709175109863,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2094:\r\n  ;;   var2094!val!1 var2094!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2094!val!1 () var2094)\r\n  (declare-fun var2094!val!0 () var2094)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2094)) (or (= x var2094!val!1) (= x var2094!val!0)))\r\n  ;; -----------\r\n  (define-fun var1697 () Int\r\n    (select var1155 0))\r\n  (define-fun var1403 () String\r\n    \"A\")\r\n  (define-fun var1155 () (Array Int Int)\r\n    ((as const (Array Int Int)) (- 1)))\r\n  (define-fun var2796 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) (- 1)) 0 0))\r\n  (define-fun null-var2094 () var2094\r\n    var2094!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3701 () Int\r\n    (str.len var1403))\r\n  (define-fun var429 () var2094\r\n    var2094!val!0)\r\n  (define-fun var2796!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.03125786781311035,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2094 is 2\r\n; rep: (as @var2094_0 var2094)\r\n; rep: (as @var2094_1 var2094)\r\n; cardinality of var306 is 1\r\n; rep: (as @var306_0 var306)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_651 String) (BOUND_VARIABLE_652 Int)) String \"\")\r\n(define-fun null-var2094 () var2094 (as @var2094_0 var2094))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var429 () var2094 (as @var2094_1 var2094))\r\n(define-fun var1403 () String \"\")\r\n(define-fun var1155 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var2796!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37076992,
            "run_time": 0.07758688926696777,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2094:\n  ;;   var2094!val!1 var2094!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2094!val!1 () var2094)\n  (declare-fun var2094!val!0 () var2094)\n  ;; cardinality constraint:\n  (forall ((x var2094)) (or (= x var2094!val!1) (= x var2094!val!0)))\n  ;; -----------\n  (define-fun var2796!1 () String\n    \"\")\n  (define-fun var1155 () (Array Int Int)\n    ((as const (Array Int Int)) (- 1)))\n  (define-fun null-var2094 () var2094\n    var2094!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store ((as const (Array Int Int)) (- 1)) 0 0))\n  (define-fun var1697 () Int\n    (select var1155 0))\n  (define-fun var2796 () String\n    String-init)\n  (define-fun var429 () var2094\n    var2094!val!0)\n  (define-fun var3701 () Int\n    (str.len var1403))\n  (define-fun var1403 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\n    \"\")\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177811456,
            "run_time": 1.3039162158966064,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2796!1 () String \"\")\r\n  (define-fun var1155 () (Array Int Int) (store ((as const (Array Int Int)) 8) 0 (- 1)))\r\n  (define-fun var1403 () String \"\")\r\n  (define-fun var429 () var2094 var2094!4)\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) ((as const (Array Int Int)) 0))\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var2094 () var2094 var2094!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @this: org.apache.commons.lang3.time.FastDatePrinter",
            "r2 := @parameter0: java.lang.String",
            "r1 := @parameter1: int[]",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "i5 = r1[0]",
            "i0 = virtualinvoke r2.<java.lang.String: int length()>()",
            "c6 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i5)",
            "$i10 = (int) c6",
            "if $i10 < 65 goto $i12 = (int) c6",
            "$i12 = (int) c6",
            "if $i12 < 97 goto virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39)",
            "virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39)",
            "z0 = 0",
            "if i5 >= i0 goto r1[0] = i5",
            "r1[0] = i5",
            "$r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__inclusiveBetween__-1999459306\\883.smt2",
        "z3": {
            "memory": 31453184,
            "run_time": 0.10395479202270508,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2587:\r\n  ;;   var2587!val!1 var2587!val!3 var2587!val!5 var2587!val!7 var2587!val!0 var2587!val!4 var2587!val!6 var2587!val!2 var2587!val!8 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2587!val!1 () var2587)\r\n  (declare-fun var2587!val!3 () var2587)\r\n  (declare-fun var2587!val!5 () var2587)\r\n  (declare-fun var2587!val!7 () var2587)\r\n  (declare-fun var2587!val!0 () var2587)\r\n  (declare-fun var2587!val!4 () var2587)\r\n  (declare-fun var2587!val!6 () var2587)\r\n  (declare-fun var2587!val!2 () var2587)\r\n  (declare-fun var2587!val!8 () var2587)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2587))\r\n          (or (= x var2587!val!1)\r\n              (= x var2587!val!3)\r\n              (= x var2587!val!5)\r\n              (= x var2587!val!7)\r\n              (= x var2587!val!0)\r\n              (= x var2587!val!4)\r\n              (= x var2587!val!6)\r\n              (= x var2587!val!2)\r\n              (= x var2587!val!8)))\r\n  ;; -----------\r\n  (define-fun var3165 () Int\r\n    7718)\r\n  (define-fun null-__Array__Int__var2587__ () (Array Int var2587)\r\n    (store (store ((as const (Array Int var2587)) var2587!val!5) 10 var2587!val!3)\r\n       12\r\n       var2587!val!7))\r\n  (define-fun var973 () Int\r\n    (Int_valueOf/-1102777585 var2118))\r\n  (define-fun var1714 () Int\r\n    (Int_valueOf/-1102777585 var3165))\r\n  (define-fun var2118 () Int\r\n    7719)\r\n  (define-fun var996 () Int\r\n    4)\r\n  (define-fun var1895 () var1817\r\n    var1817-init)\r\n  (define-fun var1496 () Int\r\n    (Int_valueOf/-1102777585 var996))\r\n  (define-fun var1041 () String\r\n    (String_format/1339386452\r\n  \"The value %s is not in the specified inclusive range of %s to %s\"\r\n  var7!3))\r\n  (define-fun var7!3 () (Array Int var2587)\r\n    (store ((as const (Array Int var2587)) var2587!val!2) 12 var2587!val!8))\r\n  (define-fun var3027 () Int\r\n    (ite (> var3165 var2118) 1 (ite (< var3165 var2118) (- 1) 0)))\r\n  (define-fun var7!2 () (Array Int var2587)\r\n    (store ((as const (Array Int var2587)) var2587!val!1) 11 var2587!val!6))\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var7!1 () (Array Int var2587)\r\n    (store ((as const (Array Int var2587)) var2587!val!0) 10 var2587!val!4))\r\n  (define-fun var3772 () Int\r\n    (ite (> var3165 var2118) 1 (ite (< var3165 var2118) (- 1) 0)))\r\n  (define-fun var7 () (Array Int var2587)\r\n    arr-var2587-init)\r\n  (define-fun var1895!1 () var1817\r\n    var1817!val!0)\r\n  (define-fun var1817-init () var1817\r\n    var1817!val!0)\r\n  (define-fun arr-var2587-init () (Array Int var2587)\r\n    ((as const (Array Int var2587)) var2587!val!0))\r\n  (define-fun var1041!1 () String\r\n    \"\")\r\n  (define-fun k!1 ((x!0 Int)) var2587\r\n    (ite (= x!0 10) var2587!val!3\r\n    (ite (= x!0 12) var2587!val!7\r\n      var2587!val!5)))\r\n  (define-fun Int_valueOf/-1102777585 ((x!0 Int)) Int\r\n    (ite (= x!0 7719) 8\r\n    (ite (= x!0 4) 9\r\n      7)))\r\n  (define-fun k!2 ((x!0 Int)) var2587\r\n    (ite (= x!0 11) var2587!val!6\r\n      var2587!val!1))\r\n  (define-fun k!3 ((x!0 Int)) var2587\r\n    (ite (= x!0 12) var2587!val!8\r\n      var2587!val!2))\r\n  (define-fun cast-from-Int-to-var2587 ((x!0 Int)) var2587\r\n    (ite (= x!0 8) var2587!val!1\r\n    (ite (= x!0 9) var2587!val!2\r\n      var2587!val!0)))\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var2587))) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var1817) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10637312,
            "run_time": 0.06079721450805664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1817 is 1\r\n; rep: (as @var1817_0 var1817)\r\n; cardinality of var2587 is 5\r\n; rep: (as @var2587_0 var2587)\r\n; rep: (as @var2587_1 var2587)\r\n; rep: (as @var2587_2 var2587)\r\n; rep: (as @var2587_3 var2587)\r\n; rep: (as @var2587_4 var2587)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1817-init () var1817 (as @var1817_0 var1817))\r\n(define-fun arr-var2587-init () (Array Int var2587) ((as const (Array Int var2587)) (as @var2587_0 var2587)))\r\n(define-fun Int_valueOf/-1102777585 ((_arg_1 Int)) Int (ite (= _arg_1 0) 3 (- 2)))\r\n(define-fun cast-from-Int-to-var2587 ((_arg_1 Int)) var2587 (ite (= _arg_1 (- 2)) (as @var2587_0 var2587) (as @var2587_1 var2587)))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_826 String) (BOUND_VARIABLE_827 (Array Int var2587))) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_830 var1817) (BOUND_VARIABLE_831 String)) void (as @void_0 void))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-__Array__Int__var2587__ () (Array Int var2587) (store ((as const (Array Int var2587)) (as @var2587_1 var2587)) 0 (as @var2587_3 var2587)))\r\n(define-fun var2118 () Int 1)\r\n(define-fun var996 () Int 0)\r\n(define-fun var3165 () Int 0)\r\n(define-fun var7!1 () (Array Int var2587) (store ((as const (Array Int var2587)) (as @var2587_0 var2587)) 0 (as @var2587_1 var2587)))\r\n(define-fun var7!2 () (Array Int var2587) (store ((as const (Array Int var2587)) (as @var2587_2 var2587)) 1 (as @var2587_0 var2587)))\r\n(define-fun var7!3 () (Array Int var2587) (store (store ((as const (Array Int var2587)) (as @var2587_3 var2587)) 0 (as @var2587_4 var2587)) 2 (as @var2587_1 var2587)))\r\n(define-fun var1895!1 () var1817 (as @var1817_0 var1817))\r\n(define-fun var1041!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36945920,
            "run_time": 0.07715415954589844,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2587:\n  ;;   var2587!val!1 var2587!val!3 var2587!val!5 var2587!val!7 var2587!val!0 var2587!val!4 var2587!val!6 var2587!val!2 var2587!val!8 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2587!val!1 () var2587)\n  (declare-fun var2587!val!3 () var2587)\n  (declare-fun var2587!val!5 () var2587)\n  (declare-fun var2587!val!7 () var2587)\n  (declare-fun var2587!val!0 () var2587)\n  (declare-fun var2587!val!4 () var2587)\n  (declare-fun var2587!val!6 () var2587)\n  (declare-fun var2587!val!2 () var2587)\n  (declare-fun var2587!val!8 () var2587)\n  ;; cardinality constraint:\n  (forall ((x var2587))\n          (or (= x var2587!val!1)\n              (= x var2587!val!3)\n              (= x var2587!val!5)\n              (= x var2587!val!7)\n              (= x var2587!val!0)\n              (= x var2587!val!4)\n              (= x var2587!val!6)\n              (= x var2587!val!2)\n              (= x var2587!val!8)))\n  ;; -----------\n  (define-fun var973 () Int\n    (Int_valueOf/-1102777585 var2118))\n  (define-fun null-__Array__Int__var2587__ () (Array Int var2587)\n    (store (store ((as const (Array Int var2587)) var2587!val!5) 10 var2587!val!3)\n       12\n       var2587!val!7))\n  (define-fun var1895 () var1817\n    var1817-init)\n  (define-fun var3165 () Int\n    21238)\n  (define-fun var1496 () Int\n    (Int_valueOf/-1102777585 var996))\n  (define-fun var3027 () Int\n    (ite (> var3165 var2118) 1 (ite (< var3165 var2118) (- 1) 0)))\n  (define-fun var7 () (Array Int var2587)\n    arr-var2587-init)\n  (define-fun var7!3 () (Array Int var2587)\n    (store ((as const (Array Int var2587)) var2587!val!2) 12 var2587!val!8))\n  (define-fun var2118 () Int\n    21239)\n  (define-fun var7!2 () (Array Int var2587)\n    (store ((as const (Array Int var2587)) var2587!val!1) 11 var2587!val!6))\n  (define-fun var1041 () String\n    (String_format/1339386452\n  \"The value %s is not in the specified inclusive range of %s to %s\"\n  var7!3))\n  (define-fun var996 () Int\n    4)\n  (define-fun var3772 () Int\n    (ite (> var3165 var2118) 1 (ite (< var3165 var2118) (- 1) 0)))\n  (define-fun var7!1 () (Array Int var2587)\n    (store ((as const (Array Int var2587)) var2587!val!0) 10 var2587!val!4))\n  (define-fun null-Int () Int\n    3)\n  (define-fun var1714 () Int\n    (Int_valueOf/-1102777585 var3165))\n  (define-fun var1895!1 () var1817\n    var1817!val!0)\n  (define-fun var1817-init () var1817\n    var1817!val!0)\n  (define-fun arr-var2587-init () (Array Int var2587)\n    ((as const (Array Int var2587)) var2587!val!0))\n  (define-fun var1041!1 () String\n    \"\")\n  (define-fun k!1 ((x!0 Int)) var2587\n    (ite (= x!0 10) var2587!val!3\n    (ite (= x!0 12) var2587!val!7\n      var2587!val!5)))\n  (define-fun Int_valueOf/-1102777585 ((x!0 Int)) Int\n    (ite (= x!0 21239) 8\n    (ite (= x!0 4) 9\n      7)))\n  (define-fun k!2 ((x!0 Int)) var2587\n    (ite (= x!0 11) var2587!val!6\n      var2587!val!1))\n  (define-fun k!3 ((x!0 Int)) var2587\n    (ite (= x!0 12) var2587!val!8\n      var2587!val!2))\n  (define-fun cast-from-Int-to-var2587 ((x!0 Int)) var2587\n    (ite (= x!0 8) var2587!val!1\n    (ite (= x!0 9) var2587!val!2\n      var2587!val!0)))\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var2587))) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var1817) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 188866560,
            "run_time": 1.428161859512329,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var7!3 () (Array Int var2587) (store ((as const (Array Int var2587)) var2587!162) 2 var2587!148))\r\n  (define-fun var7!2 () (Array Int var2587) (store ((as const (Array Int var2587)) var2587!160) 1 var2587!152))\r\n  (define-fun var7!1 () (Array Int var2587) (store ((as const (Array Int var2587)) var2587!164) 0 var2587!156))\r\n  (define-fun var3165 () Int 65)\r\n  (define-fun var996 () Int 67)\r\n  (define-fun var2118 () Int 66)\r\n  (define-fun null-__Array__Int__var2587__ () (Array Int var2587) ((as const (Array Int var2587)) var2587!0))\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun var2587!156 () var2587 (cast-from-Int-to-var2587 79))\r\n  (define-fun var2587!152 () var2587 (cast-from-Int-to-var2587 77))\r\n  (define-fun var2587!148 () var2587 (cast-from-Int-to-var2587 75))\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var2587))) String (ite (and (= x!0 \"The value %s is not in the specified inclusive range of %s to %s\") (= x!1 (store ((as const (Array Int var2587)) var2587!162) 2 var2587!148))) \"\\u{0}\" \"\"))\r\n  (define-fun Int_valueOf/-1102777585 ((x!0 Int)) Int (ite (= x!0 65) 79 (ite (= x!0 66) 77 (ite (= x!0 67) 75 0))))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "l1 := @parameter0: long",
            "l3 := @parameter1: long",
            "l0 := @parameter2: long",
            "$b2 = l0 cmp l1",
            "$i5 = (int) $b2",
            "if $i5 < 0 goto $r6 = new java.lang.IllegalArgumentException",
            "$r6 = new java.lang.IllegalArgumentException",
            "$r1 = newarray (java.lang.Object)[3]",
            "$r2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)",
            "$r1[0] = $r2",
            "$r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l1)",
            "$r1[1] = $r3",
            "$r4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l3)",
            "$r1[2] = $r4",
            "$r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"The value %s is not in the specified inclusive range of %s to %s\", $r1)",
            "specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5)",
            "throw $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.tuple.Triple__toString__-1106391191\\4373.smt2",
        "z3": {
            "memory": 28266496,
            "run_time": 0.07316970825195312,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var28:\r\n  ;;   var28!val!0 var28!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var28!val!0 () var28)\r\n  (declare-fun var28!val!1 () var28)\r\n  ;; cardinality constraint:\r\n  (forall ((x var28)) (or (= x var28!val!0) (= x var28!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3328:\r\n  ;;   var3328!val!0 var3328!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3328!val!0 () var3328)\r\n  (declare-fun var3328!val!1 () var3328)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3328)) (or (= x var3328!val!0) (= x var3328!val!1)))\r\n  ;; -----------\r\n  (define-fun var3385 () String\r\n    (str.++ (append/-1031950772 (str.++ var1889!1 \"(\") (getLeft/-550654758 var375))\r\n        \",\"))\r\n  (define-fun var2698 () String\r\n    (append/-1031950772\r\n  (str.++ (append/-1031950772\r\n            (str.++ var1889!1 \"(\")\r\n            (getLeft/-550654758 var375))\r\n          \",\")\r\n  (getMiddle/2097035148 var375)))\r\n  (define-fun var3632 () String\r\n    (let ((a!1 (append/-1031950772\r\n             (str.++ (append/-1031950772\r\n                       (str.++ var1889!1 \"(\")\r\n                       (getLeft/-550654758 var375))\r\n                     \",\")\r\n             (getMiddle/2097035148 var375))))\r\n  (append/-1031950772 (str.++ a!1 \",\") (getRight/1251355997 var375))))\r\n  (define-fun null-var28 () var28\r\n    var28!val!1)\r\n  (define-fun var2768 () var3328\r\n    (getLeft/-550654758 var375))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var375 () var28\r\n    var28!val!0)\r\n  (define-fun var1889 () String\r\n    String-init)\r\n  (define-fun var2112 () var3328\r\n    (getRight/1251355997 var375))\r\n  (define-fun var111 () String\r\n    (let ((a!1 (append/-1031950772\r\n             (str.++ (append/-1031950772\r\n                       (str.++ var1889!1 \"(\")\r\n                       (getLeft/-550654758 var375))\r\n                     \",\")\r\n             (getMiddle/2097035148 var375))))\r\n  (str.++ a!1 \",\")))\r\n  (define-fun var908!1 () String\r\n    \"(\")\r\n  (define-fun var3385!1 () String\r\n    \",\")\r\n  (define-fun var3744 () String\r\n    (append/-1031950772 (str.++ var1889!1 \"(\") (getLeft/-550654758 var375)))\r\n  (define-fun var2247 () String\r\n    (let ((a!1 (append/-1031950772\r\n             (str.++ (append/-1031950772\r\n                       (str.++ var1889!1 \"(\")\r\n                       (getLeft/-550654758 var375))\r\n                     \",\")\r\n             (getMiddle/2097035148 var375))))\r\n  (str.++ (append/-1031950772 (str.++ a!1 \",\") (getRight/1251355997 var375))\r\n          \")\")))\r\n  (define-fun var908 () String\r\n    (str.++ var1889!1 \"(\"))\r\n  (define-fun var3075 () String\r\n    (let ((a!1 (append/-1031950772\r\n             (str.++ (append/-1031950772\r\n                       (str.++ var1889!1 \"(\")\r\n                       (getLeft/-550654758 var375))\r\n                     \",\")\r\n             (getMiddle/2097035148 var375))))\r\n  (str.++ (append/-1031950772 (str.++ a!1 \",\") (getRight/1251355997 var375))\r\n          \")\")))\r\n  (define-fun var1400 () var3328\r\n    (getMiddle/2097035148 var375))\r\n  (define-fun var111!1 () String\r\n    \",\")\r\n  (define-fun var3744!1 () String\r\n    \",\")\r\n  (define-fun var1889!1 () String\r\n    \"\")\r\n  (define-fun var3632!1 () String\r\n    \")\")\r\n  (define-fun var1889!2 () String\r\n    \"(\")\r\n  (define-fun var2698!1 () String\r\n    \",\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getLeft/-550654758 ((x!0 var28)) var3328\r\n    var3328!val!0)\r\n  (define-fun getMiddle/2097035148 ((x!0 var28)) var3328\r\n    var3328!val!1)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3328)) String\r\n    \"\")\r\n  (define-fun getRight/1251355997 ((x!0 var28)) var3328\r\n    var3328!val!0)\r\n)\r\n(error \"line 64 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12906496,
            "run_time": 0.04598832130432129,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var28 is 2\r\n; rep: (as @var28_0 var28)\r\n; rep: (as @var28_1 var28)\r\n; cardinality of var3328 is 2\r\n; rep: (as @var3328_0 var3328)\r\n; rep: (as @var3328_1 var3328)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getLeft/-550654758 ((_arg_1 var28)) var3328 (as @var3328_0 var3328))\r\n(define-fun append/-1031950772 ((_arg_1 String) (_arg_2 var3328)) String \"\")\r\n(define-fun getMiddle/2097035148 ((_arg_1 var28)) var3328 (as @var3328_1 var3328))\r\n(define-fun getRight/1251355997 ((BOUND_VARIABLE_1916 var28)) var3328 (as @var3328_0 var3328))\r\n(define-fun null-var28 () var28 (as @var28_0 var28))\r\n(define-fun var375 () var28 (as @var28_1 var28))\r\n(define-fun var1889!1 () String \"\")\r\n(define-fun var1889!2 () String \"(\")\r\n(define-fun var908!1 () String \"(\")\r\n(define-fun var3744!1 () String \",\")\r\n(define-fun var3385!1 () String \",\")\r\n(define-fun var2698!1 () String \",\")\r\n(define-fun var111!1 () String \",\")\r\n(define-fun var3632!1 () String \")\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37064704,
            "run_time": 0.06286144256591797,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 63 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 64 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173182976,
            "run_time": 1.3938660621643066,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var28/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.tuple.Triple__toString__-1106391191\\4373.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3632!1 =\r\n     concat(all_32_7, \")\")\r\n   all_32_9 =\r\n     concat(all_32_10, \",\")\r\n   var2698!1 =\r\n     concat(all_26_5, \",\")\r\n   all_32_12 =\r\n     concat(all_20_4, \",\")\r\n   all_29_8 =\r\n     concat(all_20_4, \",\")\r\n   all_26_7 =\r\n     concat(all_20_4, \",\")\r\n   var3744!1 =\r\n     concat(all_20_4, \",\")\r\n   var111!1 =\r\n     concat(all_29_5, rhs)\r\n   var3385!1 =\r\n     concat(all_23_4, rhs)\r\n   all_29_5 =\r\n     concat(all_29_6, \",\")\r\n   all_23_4 =\r\n     concat(all_20_4, \",\")\r\n\r\n1072ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.tuple.Triple",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$r2 = virtualinvoke r1.<org.apache.commons.lang3.tuple.Triple: java.lang.Object getLeft()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2)",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",\")",
            "$r5 = virtualinvoke r1.<org.apache.commons.lang3.tuple.Triple: java.lang.Object getMiddle()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5)",
            "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",\")",
            "$r8 = virtualinvoke r1.<org.apache.commons.lang3.tuple.Triple: java.lang.Object getRight()>()",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r12"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__isTrue__312300139\\1196.smt2",
        "z3": {
            "memory": 31768576,
            "run_time": 0.07363748550415039,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1530:\r\n  ;;   var1530!val!0 var1530!val!1 var1530!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1530!val!0 () var1530)\r\n  (declare-fun var1530!val!1 () var1530)\r\n  (declare-fun var1530!val!2 () var1530)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1530))\r\n          (or (= x var1530!val!0) (= x var1530!val!1) (= x var1530!val!2)))\r\n  ;; -----------\r\n  (define-fun null-__Array__Int__var1530__ () (Array Int var1530)\r\n    ((as const (Array Int var1530)) var1530!val!2))\r\n  (define-fun var3999!1 () (Array Int var1530)\r\n    (store ((as const (Array Int var1530)) var1530!val!1) 0 var1530!val!0))\r\n  (define-fun var2618 () Int\r\n    (Int_valueOf/-1102777585 var3418))\r\n  (define-fun var3999 () (Array Int var1530)\r\n    arr-var1530-init)\r\n  (define-fun var1114 () String\r\n    (String_format/1339386452 var1092 var3999!1))\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var1092 () String\r\n    \"!0!\")\r\n  (define-fun var3418 () Int\r\n    2)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2545 () var1371\r\n    var1371-init)\r\n  (define-fun null-Bool () Bool\r\n    true)\r\n  (define-fun var1700 () Bool\r\n    false)\r\n  (define-fun var1371-init () var1371\r\n    var1371!val!0)\r\n  (define-fun arr-var1530-init () (Array Int var1530)\r\n    ((as const (Array Int var1530)) var1530!val!0))\r\n  (define-fun var2545!1 () var1371\r\n    var1371!val!0)\r\n  (define-fun var1114!1 () String\r\n    \"\")\r\n  (define-fun cast-from-Int-to-var1530 ((x!0 Int)) var1530\r\n    var1530!val!0)\r\n  (define-fun Int_valueOf/-1102777585 ((x!0 Int)) Int\r\n    3)\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var1530))) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var1371) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1667072,
            "run_time": 0.0316309928894043,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2262 is 1\r\n; rep: (as @var2262_0 var2262)\r\n; cardinality of var1371 is 1\r\n; rep: (as @var1371_0 var1371)\r\n; cardinality of var1530 is 2\r\n; rep: (as @var1530_0 var1530)\r\n; rep: (as @var1530_1 var1530)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1371-init () var1371 (as @var1371_0 var1371))\r\n(define-fun arr-var1530-init () (Array Int var1530) ((as const (Array Int var1530)) (as @var1530_0 var1530)))\r\n(define-fun Int_valueOf/-1102777585 ((_arg_1 Int)) Int 2)\r\n(define-fun cast-from-Int-to-var1530 ((_arg_1 Int)) var1530 (as @var1530_1 var1530))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_634 String) (BOUND_VARIABLE_635 (Array Int var1530))) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_638 var1371) (BOUND_VARIABLE_639 String)) void (as @void_0 void))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-__Array__Int__var1530__ () (Array Int var1530) (store ((as const (Array Int var1530)) (as @var1530_1 var1530)) 0 (as @var1530_0 var1530)))\r\n(define-fun var1700 () Bool false)\r\n(define-fun var1092 () String \"\")\r\n(define-fun var3418 () Int 0)\r\n(define-fun var3999!1 () (Array Int var1530) (store ((as const (Array Int var1530)) (as @var1530_0 var1530)) 0 (as @var1530_1 var1530)))\r\n(define-fun var2545!1 () var1371 (as @var1371_0 var1371))\r\n(define-fun var1114!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37187584,
            "run_time": 0.1058645248413086,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1530:\n  ;;   var1530!val!0 var1530!val!1 var1530!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1530!val!0 () var1530)\n  (declare-fun var1530!val!1 () var1530)\n  (declare-fun var1530!val!2 () var1530)\n  ;; cardinality constraint:\n  (forall ((x var1530))\n          (or (= x var1530!val!0) (= x var1530!val!1) (= x var1530!val!2)))\n  ;; -----------\n  (define-fun var1700 () Bool\n    false)\n  (define-fun null-Bool () Bool\n    true)\n  (define-fun var1092 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3999!1 () (Array Int var1530)\n    (store ((as const (Array Int var1530)) var1530!val!1) 0 var1530!val!0))\n  (define-fun var3418 () Int\n    3)\n  (define-fun null-Int () Int\n    4)\n  (define-fun var2618 () Int\n    (Int_valueOf/-1102777585 var3418))\n  (define-fun null-__Array__Int__var1530__ () (Array Int var1530)\n    ((as const (Array Int var1530)) var1530!val!2))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1114 () String\n    (String_format/1339386452 var1092 var3999!1))\n  (define-fun var2545 () var1371\n    var1371-init)\n  (define-fun var3999 () (Array Int var1530)\n    arr-var1530-init)\n  (define-fun var1371-init () var1371\n    var1371!val!0)\n  (define-fun arr-var1530-init () (Array Int var1530)\n    ((as const (Array Int var1530)) var1530!val!0))\n  (define-fun var2545!1 () var1371\n    var1371!val!0)\n  (define-fun var1114!1 () String\n    \"\")\n  (define-fun cast-from-Int-to-var1530 ((x!0 Int)) var1530\n    var1530!val!0)\n  (define-fun Int_valueOf/-1102777585 ((x!0 Int)) Int\n    4)\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var1530))) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var1371) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 170065920,
            "run_time": 1.21132230758667,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3999!1 () (Array Int var1530) (store ((as const (Array Int var1530)) var1530!20) 0 var1530!16))\r\n  (define-fun var3418 () Int 1)\r\n  (define-fun var1092 () String \"\\u{0}\")\r\n  (define-fun null-__Array__Int__var1530__ () (Array Int var1530) ((as const (Array Int var1530)) var1530!0))\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-Bool () Bool true)\r\n  (define-fun var1530!16 () var1530 (cast-from-Int-to-var1530 9))\r\n  (define-fun var1700 () Bool false)\r\n  (define-fun Int_valueOf/-1102777585 ((x!0 Int)) Int (ite (= x!0 1) 9 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "z0 := @parameter0: boolean",
            "r1 := @parameter1: java.lang.String",
            "l0 := @parameter2: long",
            "if z0 != 0 goto return",
            "$r0 = new java.lang.IllegalArgumentException",
            "$r2 = newarray (java.lang.Object)[1]",
            "$r3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(l0)",
            "$r2[0] = $r3",
            "$r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r1, $r2)",
            "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.StopWatch__toSplitString__-497370419\\4751.smt2",
        "z3": {
            "memory": 31842304,
            "run_time": 0.07398653030395508,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3947:\r\n  ;;   var3947!val!0 var3947!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3947!val!0 () var3947)\r\n  (declare-fun var3947!val!1 () var3947)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3947)) (or (= x var3947!val!0) (= x var3947!val!1)))\r\n  ;; -----------\r\n  ;; universe for var525:\r\n  ;;   var525!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var525!val!0 () var525)\r\n  ;; cardinality constraint:\r\n  (forall ((x var525)) (= x var525!val!0))\r\n  ;; -----------\r\n  (define-fun var2502 () var3947\r\n    var3947!val!0)\r\n  (define-fun var1101 () String\r\n    (formatSplitTime/-357006771 var2502))\r\n  (define-fun var1958 () Bool\r\n    (let ((a!1 (str.len (var2834_toString/-749122252\r\n                      (cast-from-String-to-var525 (message/33220049 var2502))\r\n                      \"\"))))\r\n  (= a!1 0)))\r\n  (define-fun null-var3947 () var3947\r\n    var3947!val!1)\r\n  (define-fun var2877 () String\r\n    (var2834_toString/-749122252\r\n  (cast-from-String-to-var525 (message/33220049 var2502))\r\n  \"\"))\r\n  (define-fun var3541 () String\r\n    (formatSplitTime/-357006771 var2502))\r\n  (define-fun var1562 () String\r\n    (message/33220049 var2502))\r\n  (define-fun cast-from-String-to-var525 ((x!0 String)) var525\r\n    var525!val!0)\r\n  (define-fun message/33220049 ((x!0 var3947)) String\r\n    \"\")\r\n  (define-fun var2834_toString/-749122252 ((x!0 var525) (x!1 String)) String\r\n    \"\")\r\n  (define-fun formatSplitTime/-357006771 ((x!0 var3947)) String\r\n    \"\")\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1667072,
            "run_time": 0.04675173759460449,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3947 is 2\r\n; rep: (as @var3947_0 var3947)\r\n; rep: (as @var3947_1 var3947)\r\n; cardinality of var2834 is 1\r\n; rep: (as @var2834_0 var2834)\r\n; cardinality of var525 is 1\r\n; rep: (as @var525_0 var525)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun message/33220049 ((_arg_1 var3947)) String \"A\")\r\n(define-fun var2834_toString/-749122252 ((_arg_1 var525) (_arg_2 String)) String \"\")\r\n(define-fun cast-from-String-to-var525 ((_arg_1 String)) var525 (as @var525_0 var525))\r\n(define-fun formatSplitTime/-357006771 ((BOUND_VARIABLE_546 var3947)) String \"\")\r\n(define-fun null-var3947 () var3947 (as @var3947_0 var3947))\r\n(define-fun var2502 () var3947 (as @var3947_1 var3947))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36499456,
            "run_time": 0.06428813934326172,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 31 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155111424,
            "run_time": 1.1337966918945312,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2502 () var3947 var3947!4)\r\n  (define-fun null-var3947 () var3947 var3947!2)\r\n  (define-fun var525!20 () var525 (cast-from-String-to-var525 \"\\u{0}\"))\r\n  (define-fun var2834_toString/-749122252 ((x!0 var525) (x!1 String)) String (ite (and (= x!0 var525!20) (= x!1 \"\")) \"\" \"\"))\r\n  (define-fun message/33220049 ((x!0 var3947)) String (ite (= x!0 var3947!4) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 5,
        "api_sequence": [
            "<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>",
            "<java.lang.String: boolean isEmpty()>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.StopWatch",
            "$r1 = r0.<org.apache.commons.lang3.time.StopWatch: java.lang.String message>",
            "r2 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>($r1, \"\")",
            "r3 = virtualinvoke r0.<org.apache.commons.lang3.time.StopWatch: java.lang.String formatSplitTime()>()",
            "$z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()",
            "if $z0 == 0 goto $r4 = new java.lang.StringBuilder",
            "$r8 = r3",
            "goto [?= return $r8]",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__isTrue__312300139\\1221.smt2",
        "z3": {
            "memory": 29073408,
            "run_time": 0.06098365783691406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3722 () Int\r\n    1)\r\n  (define-fun var1896 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var631 () Bool\r\n    true)\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8540160,
            "run_time": 0.01602482795715332,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var503 is 1\r\n; rep: (as @var503_0 var503)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-Bool () Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var631 () Bool true)\r\n(define-fun var1896 () String \"\")\r\n(define-fun var3722 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37154816,
            "run_time": 0.06122851371765137,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var631 () Bool\n    true)\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun null-Int () Int\n    0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1896 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3722 () Int\n    1)\n)\n(error \"line 22 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132657152,
            "run_time": 0.9058830738067627,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3722 () Int 1)\r\n  (define-fun var1896 () String \"\\u{0}\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var631 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 4,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "z0 := @parameter0: boolean",
            "r1 := @parameter1: java.lang.String",
            "l0 := @parameter2: long",
            "if z0 != 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDatePrinter__parseToken__907492036\\4702.smt2",
        "z3": {
            "memory": 30224384,
            "run_time": 0.08644676208496094,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 56 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1667072,
            "run_time": 0.030068635940551758,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36765696,
            "run_time": 0.07688665390014648,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 56 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 184459264,
            "run_time": 1.314305305480957,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_29_1, all_29_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDatePrinter__parseToken__907492036\\4702.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n1042ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: char charAt(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: char charAt(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @this: org.apache.commons.lang3.time.FastDatePrinter",
            "r2 := @parameter0: java.lang.String",
            "r1 := @parameter1: int[]",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "i5 = r1[0]",
            "i0 = virtualinvoke r2.<java.lang.String: int length()>()",
            "c6 = virtualinvoke r2.<java.lang.String: char charAt(int)>(i5)",
            "$i10 = (int) c6",
            "if $i10 < 65 goto $i12 = (int) c6",
            "$i12 = (int) c6",
            "if $i12 < 97 goto virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39)",
            "virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39)",
            "z0 = 0",
            "if i5 >= i0 goto r1[0] = i5",
            "r1[0] = i5",
            "$r4 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__inclusiveBetween__1982605416\\936.smt2",
        "z3": {
            "memory": 32219136,
            "run_time": 0.12167239189147949,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var79:\r\n  ;;   var79!val!0 var79!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var79!val!0 () var79)\r\n  (declare-fun var79!val!1 () var79)\r\n  ;; cardinality constraint:\r\n  (forall ((x var79)) (or (= x var79!val!0) (= x var79!val!1)))\r\n  ;; -----------\r\n  ;; universe for var830:\r\n  ;;   var830!val!7 var830!val!4 var830!val!6 var830!val!2 var830!val!1 var830!val!0 var830!val!3 var830!val!5 var830!val!8 var830!val!9 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var830!val!7 () var830)\r\n  (declare-fun var830!val!4 () var830)\r\n  (declare-fun var830!val!6 () var830)\r\n  (declare-fun var830!val!2 () var830)\r\n  (declare-fun var830!val!1 () var830)\r\n  (declare-fun var830!val!0 () var830)\r\n  (declare-fun var830!val!3 () var830)\r\n  (declare-fun var830!val!5 () var830)\r\n  (declare-fun var830!val!8 () var830)\r\n  (declare-fun var830!val!9 () var830)\r\n  ;; cardinality constraint:\r\n  (forall ((x var830))\r\n          (or (= x var830!val!7)\r\n              (= x var830!val!4)\r\n              (= x var830!val!6)\r\n              (= x var830!val!2)\r\n              (= x var830!val!1)\r\n              (= x var830!val!0)\r\n              (= x var830!val!3)\r\n              (= x var830!val!5)\r\n              (= x var830!val!8)\r\n              (= x var830!val!9)))\r\n  ;; -----------\r\n  (define-fun null-var830 () var830\r\n    var830!val!1)\r\n  (define-fun var2232 () var79\r\n    var79!val!0)\r\n  (define-fun null-var79 () var79\r\n    var79!val!1)\r\n  (define-fun var3027!1 () (Array Int var830)\r\n    (store ((as const (Array Int var830)) var830!val!3) 3 var830!val!4))\r\n  (define-fun var3027!2 () (Array Int var830)\r\n    (store ((as const (Array Int var830)) var830!val!0) 4 var830!val!7))\r\n  (define-fun var3027!3 () (Array Int var830)\r\n    (store ((as const (Array Int var830)) var830!val!9) 2 var830!val!2))\r\n  (define-fun var3027 () (Array Int var830)\r\n    arr-var830-init)\r\n  (define-fun var2507 () Int\r\n    (var79_compareTo/903719057 var2232 var2585))\r\n  (define-fun var486 () var198\r\n    var198-init)\r\n  (define-fun var1050 () String\r\n    (String_format/1339386452\r\n  \"The value %s is not in the specified inclusive range of %s to %s\"\r\n  var3027!3))\r\n  (define-fun null-__Array__Int__var830__ () (Array Int var830)\r\n    (store (store ((as const (Array Int var830)) var830!val!6) 5 var830!val!8)\r\n       3\r\n       var830!val!5))\r\n  (define-fun var2013 () var830\r\n    var830!val!2)\r\n  (define-fun var2585 () var830\r\n    var830!val!0)\r\n  (define-fun var198-init () var198\r\n    var198!val!0)\r\n  (define-fun arr-var830-init () (Array Int var830)\r\n    ((as const (Array Int var830)) var830!val!0))\r\n  (define-fun var1050!1 () String\r\n    \"\")\r\n  (define-fun var486!1 () var198\r\n    var198!val!0)\r\n  (define-fun k!3 ((x!0 Int)) var830\r\n    (ite (= x!0 5) var830!val!8\r\n    (ite (= x!0 3) var830!val!5\r\n      var830!val!6)))\r\n  (define-fun k!0 ((x!0 Int)) var830\r\n    (ite (= x!0 4) var830!val!7\r\n      var830!val!0))\r\n  (define-fun k!1 ((x!0 Int)) var830\r\n    (ite (= x!0 2) var830!val!2\r\n      var830!val!9))\r\n  (define-fun var79_compareTo/903719057 ((x!0 var79) (x!1 var830)) Int\r\n    (- 1))\r\n  (define-fun cast-from-var79-to-var830 ((x!0 var79)) var830\r\n    var830!val!3)\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var830))) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var198) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 48 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12095488,
            "run_time": 0.0301053524017334,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var830 is 7\r\n; rep: (as @var830_0 var830)\r\n; rep: (as @var830_1 var830)\r\n; rep: (as @var830_2 var830)\r\n; rep: (as @var830_3 var830)\r\n; rep: (as @var830_4 var830)\r\n; rep: (as @var830_5 var830)\r\n; rep: (as @var830_6 var830)\r\n; cardinality of var79 is 2\r\n; rep: (as @var79_0 var79)\r\n; rep: (as @var79_1 var79)\r\n; cardinality of var198 is 1\r\n; rep: (as @var198_0 var198)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var79_compareTo/903719057 ((_arg_1 var79) (_arg_2 var830)) Int (- 1))\r\n(define-fun var198-init () var198 (as @var198_0 var198))\r\n(define-fun arr-var830-init () (Array Int var830) ((as const (Array Int var830)) (as @var830_0 var830)))\r\n(define-fun cast-from-var79-to-var830 ((_arg_1 var79)) var830 (as @var830_3 var830))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_659 String) (BOUND_VARIABLE_660 (Array Int var830))) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_663 var198) (BOUND_VARIABLE_664 String)) void (as @void_0 void))\r\n(define-fun null-var830 () var830 (as @var830_0 var830))\r\n(define-fun null-var79 () var79 (as @var79_0 var79))\r\n(define-fun null-__Array__Int__var830__ () (Array Int var830) (store ((as const (Array Int var830)) (as @var830_3 var830)) 0 (as @var830_5 var830)))\r\n(define-fun var2585 () var830 (as @var830_1 var830))\r\n(define-fun var2013 () var830 (as @var830_2 var830))\r\n(define-fun var2232 () var79 (as @var79_1 var79))\r\n(define-fun var3027!1 () (Array Int var830) (store ((as const (Array Int var830)) (as @var830_2 var830)) 0 (as @var830_3 var830)))\r\n(define-fun var3027!2 () (Array Int var830) (store (store ((as const (Array Int var830)) (as @var830_0 var830)) 0 (as @var830_4 var830)) 1 (as @var830_1 var830)))\r\n(define-fun var3027!3 () (Array Int var830) (store (store ((as const (Array Int var830)) (as @var830_1 var830)) 0 (as @var830_6 var830)) 2 (as @var830_2 var830)))\r\n(define-fun var486!1 () var198 (as @var198_0 var198))\r\n(define-fun var1050!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35680256,
            "run_time": 0.07924318313598633,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var79:\n  ;;   var79!val!0 var79!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var79!val!0 () var79)\n  (declare-fun var79!val!1 () var79)\n  ;; cardinality constraint:\n  (forall ((x var79)) (or (= x var79!val!0) (= x var79!val!1)))\n  ;; -----------\n  ;; universe for var830:\n  ;;   var830!val!7 var830!val!4 var830!val!6 var830!val!2 var830!val!1 var830!val!0 var830!val!3 var830!val!5 var830!val!8 var830!val!9 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var830!val!7 () var830)\n  (declare-fun var830!val!4 () var830)\n  (declare-fun var830!val!6 () var830)\n  (declare-fun var830!val!2 () var830)\n  (declare-fun var830!val!1 () var830)\n  (declare-fun var830!val!0 () var830)\n  (declare-fun var830!val!3 () var830)\n  (declare-fun var830!val!5 () var830)\n  (declare-fun var830!val!8 () var830)\n  (declare-fun var830!val!9 () var830)\n  ;; cardinality constraint:\n  (forall ((x var830))\n          (or (= x var830!val!7)\n              (= x var830!val!4)\n              (= x var830!val!6)\n              (= x var830!val!2)\n              (= x var830!val!1)\n              (= x var830!val!0)\n              (= x var830!val!3)\n              (= x var830!val!5)\n              (= x var830!val!8)\n              (= x var830!val!9)))\n  ;; -----------\n  (define-fun null-var830 () var830\n    var830!val!1)\n  (define-fun var2232 () var79\n    var79!val!0)\n  (define-fun null-var79 () var79\n    var79!val!1)\n  (define-fun null-__Array__Int__var830__ () (Array Int var830)\n    (store (store ((as const (Array Int var830)) var830!val!6) 3 var830!val!5)\n       5\n       var830!val!8))\n  (define-fun var1050 () String\n    (String_format/1339386452\n  \"The value %s is not in the specified inclusive range of %s to %s\"\n  var3027!3))\n  (define-fun var2507 () Int\n    (var79_compareTo/903719057 var2232 var2585))\n  (define-fun var486 () var198\n    var198-init)\n  (define-fun var3027!1 () (Array Int var830)\n    (store ((as const (Array Int var830)) var830!val!3) 3 var830!val!4))\n  (define-fun var3027!2 () (Array Int var830)\n    (store ((as const (Array Int var830)) var830!val!0) 4 var830!val!7))\n  (define-fun var3027!3 () (Array Int var830)\n    (store ((as const (Array Int var830)) var830!val!9) 2 var830!val!2))\n  (define-fun var3027 () (Array Int var830)\n    arr-var830-init)\n  (define-fun var2013 () var830\n    var830!val!2)\n  (define-fun var2585 () var830\n    var830!val!0)\n  (define-fun var198-init () var198\n    var198!val!0)\n  (define-fun arr-var830-init () (Array Int var830)\n    ((as const (Array Int var830)) var830!val!0))\n  (define-fun var1050!1 () String\n    \"\")\n  (define-fun var486!1 () var198\n    var198!val!0)\n  (define-fun k!3 ((x!0 Int)) var830\n    (ite (= x!0 3) var830!val!5\n    (ite (= x!0 5) var830!val!8\n      var830!val!6)))\n  (define-fun cast-from-var79-to-var830 ((x!0 var79)) var830\n    var830!val!3)\n  (define-fun k!0 ((x!0 Int)) var830\n    (ite (= x!0 4) var830!val!7\n      var830!val!0))\n  (define-fun k!1 ((x!0 Int)) var830\n    (ite (= x!0 2) var830!val!2\n      var830!val!9))\n  (define-fun var79_compareTo/903719057 ((x!0 var79) (x!1 var830)) Int\n    (- 1))\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var830))) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var198) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 48 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177594368,
            "run_time": 1.2965819835662842,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3027!3 () (Array Int var830) (store ((as const (Array Int var830)) var830!158) 2 var830!136))\r\n  (define-fun var3027!2 () (Array Int var830) (store ((as const (Array Int var830)) var830!156) 1 var830!134))\r\n  (define-fun var3027!1 () (Array Int var830) (store ((as const (Array Int var830)) var830!160) 0 var830!154))\r\n  (define-fun var2232 () var79 var79!138)\r\n  (define-fun var2013 () var830 var830!136)\r\n  (define-fun var2585 () var830 var830!134)\r\n  (define-fun null-__Array__Int__var830__ () (Array Int var830) ((as const (Array Int var830)) var830!0))\r\n  (define-fun null-var79 () var79 var79!132)\r\n  (define-fun null-var830 () var830 var830!130)\r\n  (define-fun var830!154 () var830 (cast-from-var79-to-var830 var79!138))\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var830))) String (ite (and (= x!0 \"The value %s is not in the specified inclusive range of %s to %s\") (= x!1 (store ((as const (Array Int var830)) var830!158) 2 var830!136))) \"\\u{0}\" \"\"))\r\n  (define-fun var79_compareTo/903719057 ((x!0 var79) (x!1 var830)) Int (ite (and (= x!0 var79!138) (= x!1 var830!134)) (- 1) 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.Object",
            "r4 := @parameter1: java.lang.Object",
            "r0 := @parameter2: java.lang.Comparable",
            "$i0 = interfaceinvoke r0.<java.lang.Comparable: int compareTo(java.lang.Object)>(r1)",
            "if $i0 < 0 goto $r2 = new java.lang.IllegalArgumentException",
            "$r2 = new java.lang.IllegalArgumentException",
            "$r3 = newarray (java.lang.Object)[3]",
            "$r3[0] = r0",
            "$r3[1] = r1",
            "$r3[2] = r4",
            "$r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"The value %s is not in the specified inclusive range of %s to %s\", $r3)",
            "specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5)",
            "throw $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.tuple.Triple__toString__-532342642\\4402.smt2",
        "z3": {
            "memory": 27889664,
            "run_time": 0.07982301712036133,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1016:\r\n  ;;   var1016!val!2 var1016!val!3 var1016!val!6 var1016!val!5 var1016!val!4 var1016!val!7 var1016!val!0 var1016!val!1 var1016!val!8 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1016!val!2 () var1016)\r\n  (declare-fun var1016!val!3 () var1016)\r\n  (declare-fun var1016!val!6 () var1016)\r\n  (declare-fun var1016!val!5 () var1016)\r\n  (declare-fun var1016!val!4 () var1016)\r\n  (declare-fun var1016!val!7 () var1016)\r\n  (declare-fun var1016!val!0 () var1016)\r\n  (declare-fun var1016!val!1 () var1016)\r\n  (declare-fun var1016!val!8 () var1016)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1016))\r\n          (or (= x var1016!val!2)\r\n              (= x var1016!val!3)\r\n              (= x var1016!val!6)\r\n              (= x var1016!val!5)\r\n              (= x var1016!val!4)\r\n              (= x var1016!val!7)\r\n              (= x var1016!val!0)\r\n              (= x var1016!val!1)\r\n              (= x var1016!val!8)))\r\n  ;; -----------\r\n  ;; universe for var2220:\r\n  ;;   var2220!val!0 var2220!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2220!val!0 () var2220)\r\n  (declare-fun var2220!val!1 () var2220)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2220)) (or (= x var2220!val!0) (= x var2220!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2220 () var2220\r\n    var2220!val!1)\r\n  (define-fun var3161 () var1016\r\n    (getLeft/-550654758 var2749))\r\n  (define-fun var3629 () var1016\r\n    (getMiddle/2097035148 var2749))\r\n  (define-fun null-__Array__Int__var1016__ () (Array Int var1016)\r\n    (store (store ((as const (Array Int var1016)) var1016!val!7) 3 var1016!val!4)\r\n       4\r\n       var1016!val!5))\r\n  (define-fun var1699 () var1016\r\n    (getRight/1251355997 var2749))\r\n  (define-fun var3583!1 () (Array Int var1016)\r\n    (store ((as const (Array Int var1016)) var1016!val!0) 3 var1016!val!3))\r\n  (define-fun var2749 () var2220\r\n    var2220!val!0)\r\n  (define-fun var3583 () (Array Int var1016)\r\n    arr-var1016-init)\r\n  (define-fun var3084 () String\r\n    (String_format/1339386452 var2685 var3583!3))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2685 () String\r\n    \"!0!\")\r\n  (define-fun var3583!2 () (Array Int var1016)\r\n    (store ((as const (Array Int var1016)) var1016!val!1) 4 var1016!val!6))\r\n  (define-fun var3583!3 () (Array Int var1016)\r\n    (store ((as const (Array Int var1016)) var1016!val!2) 5 var1016!val!8))\r\n  (define-fun arr-var1016-init () (Array Int var1016)\r\n    ((as const (Array Int var1016)) var1016!val!0))\r\n  (define-fun k!1 ((x!0 Int)) var1016\r\n    (ite (= x!0 3) var1016!val!4\r\n    (ite (= x!0 4) var1016!val!5\r\n      var1016!val!7)))\r\n  (define-fun getLeft/-550654758 ((x!0 var2220)) var1016\r\n    var1016!val!0)\r\n  (define-fun k!2 ((x!0 Int)) var1016\r\n    (ite (= x!0 4) var1016!val!6\r\n      var1016!val!1))\r\n  (define-fun getRight/1251355997 ((x!0 var2220)) var1016\r\n    var1016!val!2)\r\n  (define-fun k!3 ((x!0 Int)) var1016\r\n    (ite (= x!0 5) var1016!val!8\r\n      var1016!val!2))\r\n  (define-fun getMiddle/2097035148 ((x!0 var2220)) var1016\r\n    var1016!val!1)\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var1016))) String\r\n    \"\")\r\n)\r\n(error \"line 42 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11255808,
            "run_time": 0.03112030029296875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2220 is 2\r\n; rep: (as @var2220_0 var2220)\r\n; rep: (as @var2220_1 var2220)\r\n; cardinality of var2073 is 1\r\n; rep: (as @var2073_0 var2073)\r\n; cardinality of var1016 is 6\r\n; rep: (as @var1016_0 var1016)\r\n; rep: (as @var1016_1 var1016)\r\n; rep: (as @var1016_2 var1016)\r\n; rep: (as @var1016_3 var1016)\r\n; rep: (as @var1016_4 var1016)\r\n; rep: (as @var1016_5 var1016)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var1016-init () (Array Int var1016) ((as const (Array Int var1016)) (as @var1016_0 var1016)))\r\n(define-fun getLeft/-550654758 ((_arg_1 var2220)) var1016 (as @var1016_2 var1016))\r\n(define-fun getMiddle/2097035148 ((_arg_1 var2220)) var1016 (as @var1016_0 var1016))\r\n(define-fun getRight/1251355997 ((_arg_1 var2220)) var1016 (as @var1016_1 var1016))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_706 String) (BOUND_VARIABLE_707 (Array Int var1016))) String \"\")\r\n(define-fun null-var2220 () var2220 (as @var2220_0 var2220))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var1016__ () (Array Int var1016) (store ((as const (Array Int var1016)) (as @var1016_1 var1016)) 0 (as @var1016_4 var1016)))\r\n(define-fun var2749 () var2220 (as @var2220_1 var2220))\r\n(define-fun var2685 () String \"\")\r\n(define-fun var3583!1 () (Array Int var1016) (store ((as const (Array Int var1016)) (as @var1016_0 var1016)) 0 (as @var1016_2 var1016)))\r\n(define-fun var3583!2 () (Array Int var1016) (store (store ((as const (Array Int var1016)) (as @var1016_2 var1016)) 0 (as @var1016_3 var1016)) 1 (as @var1016_0 var1016)))\r\n(define-fun var3583!3 () (Array Int var1016) (store (store ((as const (Array Int var1016)) (as @var1016_3 var1016)) 0 (as @var1016_5 var1016)) 2 (as @var1016_1 var1016)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37203968,
            "run_time": 0.06122851371765137,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1016:\n  ;;   var1016!val!2 var1016!val!3 var1016!val!6 var1016!val!5 var1016!val!4 var1016!val!7 var1016!val!0 var1016!val!1 var1016!val!8 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1016!val!2 () var1016)\n  (declare-fun var1016!val!3 () var1016)\n  (declare-fun var1016!val!6 () var1016)\n  (declare-fun var1016!val!5 () var1016)\n  (declare-fun var1016!val!4 () var1016)\n  (declare-fun var1016!val!7 () var1016)\n  (declare-fun var1016!val!0 () var1016)\n  (declare-fun var1016!val!1 () var1016)\n  (declare-fun var1016!val!8 () var1016)\n  ;; cardinality constraint:\n  (forall ((x var1016))\n          (or (= x var1016!val!2)\n              (= x var1016!val!3)\n              (= x var1016!val!6)\n              (= x var1016!val!5)\n              (= x var1016!val!4)\n              (= x var1016!val!7)\n              (= x var1016!val!0)\n              (= x var1016!val!1)\n              (= x var1016!val!8)))\n  ;; -----------\n  ;; universe for var2220:\n  ;;   var2220!val!0 var2220!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2220!val!0 () var2220)\n  (declare-fun var2220!val!1 () var2220)\n  ;; cardinality constraint:\n  (forall ((x var2220)) (or (= x var2220!val!0) (= x var2220!val!1)))\n  ;; -----------\n  (define-fun var1699 () var1016\n    (getRight/1251355997 var2749))\n  (define-fun var3583!1 () (Array Int var1016)\n    (store ((as const (Array Int var1016)) var1016!val!0) 3 var1016!val!3))\n  (define-fun var2749 () var2220\n    var2220!val!0)\n  (define-fun null-var2220 () var2220\n    var2220!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3583 () (Array Int var1016)\n    arr-var1016-init)\n  (define-fun var3629 () var1016\n    (getMiddle/2097035148 var2749))\n  (define-fun null-__Array__Int__var1016__ () (Array Int var1016)\n    (store (store ((as const (Array Int var1016)) var1016!val!7) 3 var1016!val!4)\n       4\n       var1016!val!5))\n  (define-fun var3583!2 () (Array Int var1016)\n    (store ((as const (Array Int var1016)) var1016!val!1) 4 var1016!val!6))\n  (define-fun var3583!3 () (Array Int var1016)\n    (store ((as const (Array Int var1016)) var1016!val!8) 2 var1016!val!2))\n  (define-fun var3084 () String\n    (String_format/1339386452 var2685 var3583!3))\n  (define-fun var2685 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3161 () var1016\n    (getLeft/-550654758 var2749))\n  (define-fun arr-var1016-init () (Array Int var1016)\n    ((as const (Array Int var1016)) var1016!val!0))\n  (define-fun k!49 ((x!0 Int)) var1016\n    (ite (= x!0 3) var1016!val!4\n    (ite (= x!0 4) var1016!val!5\n      var1016!val!7)))\n  (define-fun getLeft/-550654758 ((x!0 var2220)) var1016\n    var1016!val!0)\n  (define-fun k!50 ((x!0 Int)) var1016\n    (ite (= x!0 4) var1016!val!6\n      var1016!val!1))\n  (define-fun getRight/1251355997 ((x!0 var2220)) var1016\n    var1016!val!2)\n  (define-fun k!51 ((x!0 Int)) var1016\n    (ite (= x!0 2) var1016!val!2\n      var1016!val!8))\n  (define-fun getMiddle/2097035148 ((x!0 var2220)) var1016\n    var1016!val!1)\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var1016))) String\n    \"\")\n)\n(error \"line 42 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176353280,
            "run_time": 1.2030837535858154,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3583!3 () (Array Int var1016) (store ((as const (Array Int var1016)) var1016!30) 2 var1016!24))\r\n  (define-fun var3583!2 () (Array Int var1016) (store ((as const (Array Int var1016)) var1016!28) 1 var1016!22))\r\n  (define-fun var3583!1 () (Array Int var1016) (store ((as const (Array Int var1016)) var1016!32) 0 var1016!26))\r\n  (define-fun var2685 () String \"\\u{0}\")\r\n  (define-fun var2749 () var2220 var2220!8)\r\n  (define-fun null-__Array__Int__var1016__ () (Array Int var1016) ((as const (Array Int var1016)) var1016!0))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2220 () var2220 var2220!6)\r\n  (define-fun var1016!24 () var1016 (getRight/1251355997 var2220!8))\r\n  (define-fun var1016!22 () var1016 (getMiddle/2097035148 var2220!8))\r\n  (define-fun var1016!26 () var1016 (getLeft/-550654758 var2220!8))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.apache.commons.lang3.tuple.Triple",
            "r0 := @parameter0: java.lang.String",
            "$r1 = newarray (java.lang.Object)[3]",
            "$r3 = virtualinvoke r2.<org.apache.commons.lang3.tuple.Triple: java.lang.Object getLeft()>()",
            "$r1[0] = $r3",
            "$r4 = virtualinvoke r2.<org.apache.commons.lang3.tuple.Triple: java.lang.Object getMiddle()>()",
            "$r1[1] = $r4",
            "$r5 = virtualinvoke r2.<org.apache.commons.lang3.tuple.Triple: java.lang.Object getRight()>()",
            "$r1[2] = $r5",
            "$r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(r0, $r1)",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.StopWatch__toSplitString__-497370419\\4778.smt2",
        "z3": {
            "memory": 31838208,
            "run_time": 0.07237052917480469,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3526:\r\n  ;;   var3526!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3526!val!0 () var3526)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3526)) (= x var3526!val!0))\r\n  ;; -----------\r\n  ;; universe for var425:\r\n  ;;   var425!val!1 var425!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var425!val!1 () var425)\r\n  (declare-fun var425!val!0 () var425)\r\n  ;; cardinality constraint:\r\n  (forall ((x var425)) (or (= x var425!val!1) (= x var425!val!0)))\r\n  ;; -----------\r\n  (define-fun var2923 () var425\r\n    var425!val!0)\r\n  (define-fun var1636 () String\r\n    (str.++ var3726!1\r\n        (var1681_toString/-749122252\r\n          (cast-from-String-to-var3526 (message/33220049 var2923))\r\n          \"\")\r\n        \" \"))\r\n  (define-fun var2127 () String\r\n    (str.++ var3726!1\r\n        (var1681_toString/-749122252\r\n          (cast-from-String-to-var3526 (message/33220049 var2923))\r\n          \"\")\r\n        \" \"\r\n        (formatSplitTime/-357006771 var2923)))\r\n  (define-fun var2719 () String\r\n    (str.++ var3726!1\r\n        (var1681_toString/-749122252\r\n          (cast-from-String-to-var3526 (message/33220049 var2923))\r\n          \"\")\r\n        \" \"\r\n        (formatSplitTime/-357006771 var2923)))\r\n  (define-fun null-var425 () var425\r\n    var425!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3033 () String\r\n    (message/33220049 var2923))\r\n  (define-fun var1525 () String\r\n    (var1681_toString/-749122252\r\n  (cast-from-String-to-var3526 (message/33220049 var2923))\r\n  \"\"))\r\n  (define-fun var75 () String\r\n    (formatSplitTime/-357006771 var2923))\r\n  (define-fun var3726 () String\r\n    String-init)\r\n  (define-fun var3794 () String\r\n    (str.++ var3726!1\r\n        (var1681_toString/-749122252\r\n          (cast-from-String-to-var3526 (message/33220049 var2923))\r\n          \"\")))\r\n  (define-fun var3972 () Bool\r\n    (let ((a!1 (str.len (var1681_toString/-749122252\r\n                      (cast-from-String-to-var3526 (message/33220049 var2923))\r\n                      \"\"))))\r\n  (= a!1 0)))\r\n  (define-fun var3794!1 () String\r\n    \"A \")\r\n  (define-fun var3726!2 () String\r\n    \"A\")\r\n  (define-fun var3726!1 () String\r\n    \"\")\r\n  (define-fun var1636!1 () String\r\n    \"A \")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-String-to-var3526 ((x!0 String)) var3526\r\n    var3526!val!0)\r\n  (define-fun var1681_toString/-749122252 ((x!0 var3526) (x!1 String)) String\r\n    \"A\")\r\n  (define-fun message/33220049 ((x!0 var425)) String\r\n    \"\")\r\n  (define-fun formatSplitTime/-357006771 ((x!0 var425)) String\r\n    \"\")\r\n)\r\n(error \"line 53 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.045952796936035156,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var425 is 2\r\n; rep: (as @var425_0 var425)\r\n; rep: (as @var425_1 var425)\r\n; cardinality of var1681 is 1\r\n; rep: (as @var1681_0 var1681)\r\n; cardinality of var3526 is 1\r\n; rep: (as @var3526_0 var3526)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun message/33220049 ((_arg_1 var425)) String \"B\")\r\n(define-fun var1681_toString/-749122252 ((_arg_1 var3526) (_arg_2 String)) String \"A\")\r\n(define-fun cast-from-String-to-var3526 ((_arg_1 String)) var3526 (as @var3526_0 var3526))\r\n(define-fun formatSplitTime/-357006771 ((BOUND_VARIABLE_671 var425)) String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun null-var425 () var425 (as @var425_0 var425))\r\n(define-fun var2923 () var425 (as @var425_1 var425))\r\n(define-fun var3726!1 () String \"\")\r\n(define-fun var3726!2 () String \"A\")\r\n(define-fun var3794!1 () String \"A \")\r\n(define-fun var1636!1 () String \"A \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35684352,
            "run_time": 0.07785773277282715,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 52 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 53 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180899840,
            "run_time": 1.2347447872161865,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var425/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.StopWatch__toSplitString__-497370419\\4778.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1636!1 =\r\n     concat(all_25_5, all_25_4)\r\n   var3794!1 =\r\n     concat(var3726!2, \" \")\r\n   all_25_5 =\r\n     concat(var3726!2, \" \")\r\n\r\n910ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 14,
        "api_sequence": [
            "<java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>",
            "<java.lang.String: boolean isEmpty()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.StopWatch",
            "$r1 = r0.<org.apache.commons.lang3.time.StopWatch: java.lang.String message>",
            "r2 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>($r1, \"\")",
            "r3 = virtualinvoke r0.<org.apache.commons.lang3.time.StopWatch: java.lang.String formatSplitTime()>()",
            "$z0 = virtualinvoke r2.<java.lang.String: boolean isEmpty()>()",
            "if $z0 == 0 goto $r4 = new java.lang.StringBuilder",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__inclusiveBetween__40989195\\833.smt2",
        "z3": {
            "memory": 33484800,
            "run_time": 0.06007218360900879,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3232:\r\n  ;;   var3232!val!1 var3232!val!2 var3232!val!3 var3232!val!4 var3232!val!5 var3232!val!0 var3232!val!6 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3232!val!1 () var3232)\r\n  (declare-fun var3232!val!2 () var3232)\r\n  (declare-fun var3232!val!3 () var3232)\r\n  (declare-fun var3232!val!4 () var3232)\r\n  (declare-fun var3232!val!5 () var3232)\r\n  (declare-fun var3232!val!0 () var3232)\r\n  (declare-fun var3232!val!6 () var3232)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3232))\r\n          (or (= x var3232!val!1)\r\n              (= x var3232!val!2)\r\n              (= x var3232!val!3)\r\n              (= x var3232!val!4)\r\n              (= x var3232!val!5)\r\n              (= x var3232!val!0)\r\n              (= x var3232!val!6)))\r\n  ;; -----------\r\n  (define-fun null-__Array__Int__var3232__ () (Array Int var3232)\r\n    (store (store ((as const (Array Int var3232)) var3232!val!5) 3 var3232!val!2)\r\n       4\r\n       var3232!val!3))\r\n  (define-fun var1066 () (Array Int var3232)\r\n    arr-var3232-init)\r\n  (define-fun var1726 () Float64\r\n    (fp #b1 #b00001010100 #x9081c80000001))\r\n  (define-fun var2481 () Int\r\n    (ite (fp.gt var1726 var1793) 1 (ite (fp.lt var1726 var1793) (- 1) 0)))\r\n  (define-fun var1793 () Float64\r\n    (fp #b1 #b00000101001 #xa403c20000000))\r\n  (define-fun var1066!3 () (Array Int var3232)\r\n    (store ((as const (Array Int var3232)) var3232!val!6) 2 var3232!val!0))\r\n  (define-fun null-Float64 () Float64\r\n    (_ +zero 11 53))\r\n  (define-fun var3760 () Float64\r\n    (fp #b0 #b00000000000 #x0000002000000))\r\n  (define-fun var2898 () Float64\r\n    (Float64_valueOf/679560954 var1793))\r\n  (define-fun var2508 () Float64\r\n    (Float64_valueOf/679560954 var3760))\r\n  (define-fun var3870 () String\r\n    (String_format/1339386452\r\n  \"The value %s is not in the specified inclusive range of %s to %s\"\r\n  var1066!3))\r\n  (define-fun var1066!1 () (Array Int var3232)\r\n    (store ((as const (Array Int var3232)) var3232!val!1) 0 var3232!val!0))\r\n  (define-fun var1386 () var3910\r\n    var3910-init)\r\n  (define-fun var2627 () Float64\r\n    (Float64_valueOf/679560954 var1726))\r\n  (define-fun var237 () Int\r\n    (ite (fp.gt var1726 var1793) 1 (ite (fp.lt var1726 var1793) (- 1) 0)))\r\n  (define-fun var1066!2 () (Array Int var3232)\r\n    (store ((as const (Array Int var3232)) var3232!val!0) 4 var3232!val!4))\r\n  (define-fun var1386!1 () var3910\r\n    var3910!val!0)\r\n  (define-fun var3870!1 () String\r\n    \"\")\r\n  (define-fun var3910-init () var3910\r\n    var3910!val!0)\r\n  (define-fun arr-var3232-init () (Array Int var3232)\r\n    ((as const (Array Int var3232)) var3232!val!0))\r\n  (define-fun k!2 ((x!0 Int)) var3232\r\n    (ite (= x!0 3) var3232!val!2\r\n    (ite (= x!0 4) var3232!val!3\r\n      var3232!val!5)))\r\n  (define-fun k!3 ((x!0 Int)) var3232\r\n    (ite (= x!0 4) var3232!val!4\r\n      var3232!val!0))\r\n  (define-fun Float64_valueOf/679560954 ((x!0 Float64)) Float64\r\n    (_ +zero 11 53))\r\n  (define-fun cast-from-Float64-to-var3232 ((x!0 Float64)) var3232\r\n    var3232!val!0)\r\n  (define-fun k!4 ((x!0 Int)) var3232\r\n    (ite (= x!0 2) var3232!val!0\r\n      var3232!val!6))\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var3232))) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var3910) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 24412160,
            "run_time": 0.10828542709350586,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3910 is 1\r\n; rep: (as @var3910_0 var3910)\r\n; cardinality of var3232 is 4\r\n; rep: (as @var3232_0 var3232)\r\n; rep: (as @var3232_1 var3232)\r\n; rep: (as @var3232_2 var3232)\r\n; rep: (as @var3232_3 var3232)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3910-init () var3910 (as @var3910_0 var3910))\r\n(define-fun arr-var3232-init () (Array Int var3232) ((as const (Array Int var3232)) (as @var3232_0 var3232)))\r\n(define-fun Float64_valueOf/679560954 ((_arg_1 (_ FloatingPoint 11 53))) (_ FloatingPoint 11 53) (fp #b1 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun cast-from-Float64-to-var3232 ((_arg_1 (_ FloatingPoint 11 53))) var3232 (as @var3232_0 var3232))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_24659 String) (BOUND_VARIABLE_24660 (Array Int var3232))) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_24663 var3910) (BOUND_VARIABLE_24664 String)) void (as @void_0 void))\r\n(define-fun null-Float64 () (_ FloatingPoint 11 53) (fp #b1 #b00000101110 #b1111111111111111111111111111111111111111111111111110))\r\n(define-fun null-__Array__Int__var3232__ () (Array Int var3232) (store ((as const (Array Int var3232)) (as @var3232_1 var3232)) 0 (as @var3232_2 var3232)))\r\n(define-fun var1793 () (_ FloatingPoint 11 53) (fp #b0 #b00000101110 #b1111111111111111111111111111111111111111111111111111))\r\n(define-fun var3760 () (_ FloatingPoint 11 53) (fp #b0 #b00000101110 #b1111111111111111111111111111111111111111111111111111))\r\n(define-fun var1726 () (_ FloatingPoint 11 53) (fp #b1 #b00000101110 #b1111111111111111111111111111111111111111111111111111))\r\n(define-fun var1066!1 () (Array Int var3232) ((as const (Array Int var3232)) (as @var3232_0 var3232)))\r\n(define-fun var1066!2 () (Array Int var3232) (store (store ((as const (Array Int var3232)) (as @var3232_2 var3232)) 0 (as @var3232_1 var3232)) 1 (as @var3232_0 var3232)))\r\n(define-fun var1066!3 () (Array Int var3232) (store ((as const (Array Int var3232)) (as @var3232_3 var3232)) 2 (as @var3232_0 var3232)))\r\n(define-fun var1386!1 () var3910 (as @var3910_0 var3910))\r\n(define-fun var3870!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37834752,
            "run_time": 0.06026625633239746,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3232:\n  ;;   var3232!val!1 var3232!val!2 var3232!val!3 var3232!val!4 var3232!val!5 var3232!val!0 var3232!val!6 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3232!val!1 () var3232)\n  (declare-fun var3232!val!2 () var3232)\n  (declare-fun var3232!val!3 () var3232)\n  (declare-fun var3232!val!4 () var3232)\n  (declare-fun var3232!val!5 () var3232)\n  (declare-fun var3232!val!0 () var3232)\n  (declare-fun var3232!val!6 () var3232)\n  ;; cardinality constraint:\n  (forall ((x var3232))\n          (or (= x var3232!val!1)\n              (= x var3232!val!2)\n              (= x var3232!val!3)\n              (= x var3232!val!4)\n              (= x var3232!val!5)\n              (= x var3232!val!0)\n              (= x var3232!val!6)))\n  ;; -----------\n  (define-fun var1066!1 () (Array Int var3232)\n    (store ((as const (Array Int var3232)) var3232!val!0) 3 var3232!val!1))\n  (define-fun var1386 () var3910\n    var3910-init)\n  (define-fun var3870 () String\n    (String_format/1339386452\n  \"The value %s is not in the specified inclusive range of %s to %s\"\n  var1066!3))\n  (define-fun var237 () Int\n    (ite (fp.gt var1726 var1793) 1 (ite (fp.lt var1726 var1793) (- 1) 0)))\n  (define-fun var1066 () (Array Int var3232)\n    arr-var3232-init)\n  (define-fun var2898 () Float64\n    (Float64_valueOf/679560954 var1793))\n  (define-fun var2508 () Float64\n    (Float64_valueOf/679560954 var3760))\n  (define-fun var1066!2 () (Array Int var3232)\n    (store ((as const (Array Int var3232)) var3232!val!0) 4 var3232!val!4))\n  (define-fun null-__Array__Int__var3232__ () (Array Int var3232)\n    (store (store ((as const (Array Int var3232)) var3232!val!3) 5 var3232!val!5)\n       3\n       var3232!val!2))\n  (define-fun var1726 () Float64\n    (fp #b1 #b00001010100 #x9081c80000001))\n  (define-fun var1793 () Float64\n    (fp #b1 #b00000101001 #xa403c20000000))\n  (define-fun null-Float64 () Float64\n    (_ +zero 11 53))\n  (define-fun var2627 () Float64\n    (Float64_valueOf/679560954 var1726))\n  (define-fun var3760 () Float64\n    (fp #b0 #b00000000000 #x0000002000000))\n  (define-fun var1066!3 () (Array Int var3232)\n    (store ((as const (Array Int var3232)) var3232!val!6) 2 var3232!val!0))\n  (define-fun var2481 () Int\n    (ite (fp.gt var1726 var1793) 1 (ite (fp.lt var1726 var1793) (- 1) 0)))\n  (define-fun var1386!1 () var3910\n    var3910!val!0)\n  (define-fun var3870!1 () String\n    \"\")\n  (define-fun var3910-init () var3910\n    var3910!val!0)\n  (define-fun arr-var3232-init () (Array Int var3232)\n    ((as const (Array Int var3232)) var3232!val!0))\n  (define-fun k!2 ((x!0 Int)) var3232\n    (ite (= x!0 5) var3232!val!5\n    (ite (= x!0 3) var3232!val!2\n      var3232!val!3)))\n  (define-fun k!3 ((x!0 Int)) var3232\n    (ite (= x!0 4) var3232!val!4\n      var3232!val!0))\n  (define-fun k!4 ((x!0 Int)) var3232\n    (ite (= x!0 2) var3232!val!0\n      var3232!val!6))\n  (define-fun cast-from-Float64-to-var3232 ((x!0 Float64)) var3232\n    var3232!val!0)\n  (define-fun Float64_valueOf/679560954 ((x!0 Float64)) Float64\n    (_ +zero 11 53))\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var3232))) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var3910) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 124375040,
            "run_time": 0.6491663455963135,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.Validate__inclusiveBetween__40989195\\833.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n377ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "d1 := @parameter0: double",
            "d2 := @parameter1: double",
            "d0 := @parameter2: double",
            "$b0 = d0 cmpg d1",
            "$i2 = (int) $b0",
            "if $i2 < 0 goto $r6 = new java.lang.IllegalArgumentException",
            "$r6 = new java.lang.IllegalArgumentException",
            "$r1 = newarray (java.lang.Object)[3]",
            "$r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0)",
            "$r1[0] = $r2",
            "$r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1)",
            "$r1[1] = $r3",
            "$r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2)",
            "$r1[2] = $r4",
            "$r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"The value %s is not in the specified inclusive range of %s to %s\", $r1)",
            "specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5)",
            "throw $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__exclusiveBetween__-1415072963\\600.smt2",
        "z3": {
            "memory": 33484800,
            "run_time": 0.07562661170959473,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var732:\r\n  ;;   var732!val!4 var732!val!1 var732!val!2 var732!val!5 var732!val!3 var732!val!6 var732!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var732!val!4 () var732)\r\n  (declare-fun var732!val!1 () var732)\r\n  (declare-fun var732!val!2 () var732)\r\n  (declare-fun var732!val!5 () var732)\r\n  (declare-fun var732!val!3 () var732)\r\n  (declare-fun var732!val!6 () var732)\r\n  (declare-fun var732!val!0 () var732)\r\n  ;; cardinality constraint:\r\n  (forall ((x var732))\r\n          (or (= x var732!val!4)\r\n              (= x var732!val!1)\r\n              (= x var732!val!2)\r\n              (= x var732!val!5)\r\n              (= x var732!val!3)\r\n              (= x var732!val!6)\r\n              (= x var732!val!0)))\r\n  ;; -----------\r\n  (define-fun var1341 () String\r\n    (String_format/1339386452\r\n  \"The value %s is not in the specified exclusive range of %s to %s\"\r\n  var1100!3))\r\n  (define-fun var1100!1 () (Array Int var732)\r\n    (store ((as const (Array Int var732)) var732!val!0) 3 var732!val!1))\r\n  (define-fun var1100!2 () (Array Int var732)\r\n    (store ((as const (Array Int var732)) var732!val!0) 4 var732!val!4))\r\n  (define-fun var1875 () Float64\r\n    (fp #b1 #b00100000101 #x08aff80000001))\r\n  (define-fun var1378 () Float64\r\n    (Float64_valueOf/679560954 var1875))\r\n  (define-fun null-Float64 () Float64\r\n    (_ +zero 11 53))\r\n  (define-fun null-__Array__Int__var732__ () (Array Int var732)\r\n    (store (store ((as const (Array Int var732)) var732!val!3) 5 var732!val!5)\r\n       3\r\n       var732!val!2))\r\n  (define-fun var1938 () Float64\r\n    (fp #b0 #b00000000000 #x0010000000000))\r\n  (define-fun var652 () Int\r\n    (ite (fp.gt var1875 var2050) 1 (ite (fp.lt var1875 var2050) (- 1) 0)))\r\n  (define-fun var2965 () Int\r\n    (ite (fp.gt var1875 var2050) 1 (ite (fp.lt var1875 var2050) (- 1) 0)))\r\n  (define-fun var3814 () Float64\r\n    (Float64_valueOf/679560954 var2050))\r\n  (define-fun var2139 () var694\r\n    var694-init)\r\n  (define-fun var1100 () (Array Int var732)\r\n    arr-var732-init)\r\n  (define-fun var1100!3 () (Array Int var732)\r\n    (store ((as const (Array Int var732)) var732!val!0) 5 var732!val!6))\r\n  (define-fun var2050 () Float64\r\n    (fp #b0 #b10010000100 #x08aff80000000))\r\n  (define-fun var987 () Float64\r\n    (Float64_valueOf/679560954 var1938))\r\n  (define-fun var1341!1 () String\r\n    \"\")\r\n  (define-fun arr-var732-init () (Array Int var732)\r\n    ((as const (Array Int var732)) var732!val!0))\r\n  (define-fun var2139!1 () var694\r\n    var694!val!0)\r\n  (define-fun var694-init () var694\r\n    var694!val!0)\r\n  (define-fun cast-from-Float64-to-var732 ((x!0 Float64)) var732\r\n    var732!val!0)\r\n  (define-fun Float64_valueOf/679560954 ((x!0 Float64)) Float64\r\n    (_ +zero 11 53))\r\n  (define-fun k!2 ((x!0 Int)) var732\r\n    (ite (= x!0 5) var732!val!5\r\n    (ite (= x!0 3) var732!val!2\r\n      var732!val!3)))\r\n  (define-fun k!3 ((x!0 Int)) var732\r\n    (ite (= x!0 4) var732!val!4\r\n      var732!val!0))\r\n  (define-fun k!4 ((x!0 Int)) var732\r\n    (ite (= x!0 5) var732!val!6\r\n      var732!val!0))\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var732))) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var694) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 24805376,
            "run_time": 0.1220846176147461,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var694 is 1\r\n; rep: (as @var694_0 var694)\r\n; cardinality of var732 is 4\r\n; rep: (as @var732_0 var732)\r\n; rep: (as @var732_1 var732)\r\n; rep: (as @var732_2 var732)\r\n; rep: (as @var732_3 var732)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var694-init () var694 (as @var694_0 var694))\r\n(define-fun arr-var732-init () (Array Int var732) ((as const (Array Int var732)) (as @var732_0 var732)))\r\n(define-fun Float64_valueOf/679560954 ((_arg_1 (_ FloatingPoint 11 53))) (_ FloatingPoint 11 53) (fp #b1 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun cast-from-Float64-to-var732 ((_arg_1 (_ FloatingPoint 11 53))) var732 (as @var732_0 var732))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_24658 String) (BOUND_VARIABLE_24659 (Array Int var732))) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_24662 var694) (BOUND_VARIABLE_24663 String)) void (as @void_0 void))\r\n(define-fun null-Float64 () (_ FloatingPoint 11 53) (fp #b1 #b00000101110 #b1111111111111111111111111111111111111111111111111110))\r\n(define-fun null-__Array__Int__var732__ () (Array Int var732) (store ((as const (Array Int var732)) (as @var732_1 var732)) 0 (as @var732_2 var732)))\r\n(define-fun var2050 () (_ FloatingPoint 11 53) (fp #b0 #b00000101110 #b1111111111111111111111111111111111111111111111111111))\r\n(define-fun var1938 () (_ FloatingPoint 11 53) (fp #b0 #b00000101110 #b1111111111111111111111111111111111111111111111111111))\r\n(define-fun var1875 () (_ FloatingPoint 11 53) (fp #b1 #b00000101110 #b1111111111111111111111111111111111111111111111111111))\r\n(define-fun var1100!1 () (Array Int var732) ((as const (Array Int var732)) (as @var732_0 var732)))\r\n(define-fun var1100!2 () (Array Int var732) (store (store ((as const (Array Int var732)) (as @var732_2 var732)) 0 (as @var732_1 var732)) 1 (as @var732_0 var732)))\r\n(define-fun var1100!3 () (Array Int var732) (store ((as const (Array Int var732)) (as @var732_3 var732)) 2 (as @var732_0 var732)))\r\n(define-fun var2139!1 () var694 (as @var694_0 var694))\r\n(define-fun var1341!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37806080,
            "run_time": 0.06208086013793945,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var732:\n  ;;   var732!val!4 var732!val!1 var732!val!2 var732!val!5 var732!val!3 var732!val!6 var732!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var732!val!4 () var732)\n  (declare-fun var732!val!1 () var732)\n  (declare-fun var732!val!2 () var732)\n  (declare-fun var732!val!5 () var732)\n  (declare-fun var732!val!3 () var732)\n  (declare-fun var732!val!6 () var732)\n  (declare-fun var732!val!0 () var732)\n  ;; cardinality constraint:\n  (forall ((x var732))\n          (or (= x var732!val!4)\n              (= x var732!val!1)\n              (= x var732!val!2)\n              (= x var732!val!5)\n              (= x var732!val!3)\n              (= x var732!val!6)\n              (= x var732!val!0)))\n  ;; -----------\n  (define-fun var652 () Int\n    (ite (fp.gt var1875 var2050) 1 (ite (fp.lt var1875 var2050) (- 1) 0)))\n  (define-fun var1100!1 () (Array Int var732)\n    (store ((as const (Array Int var732)) var732!val!1) 0 var732!val!0))\n  (define-fun var1100!2 () (Array Int var732)\n    (store ((as const (Array Int var732)) var732!val!0) 4 var732!val!4))\n  (define-fun var987 () Float64\n    (Float64_valueOf/679560954 var1938))\n  (define-fun var1341 () String\n    (String_format/1339386452\n  \"The value %s is not in the specified exclusive range of %s to %s\"\n  var1100!3))\n  (define-fun var2965 () Int\n    (ite (fp.gt var1875 var2050) 1 (ite (fp.lt var1875 var2050) (- 1) 0)))\n  (define-fun null-__Array__Int__var732__ () (Array Int var732)\n    (store (store ((as const (Array Int var732)) var732!val!2) 4 var732!val!3)\n       5\n       var732!val!5))\n  (define-fun var1100 () (Array Int var732)\n    arr-var732-init)\n  (define-fun var2139 () var694\n    var694-init)\n  (define-fun var2050 () Float64\n    (fp #b0 #b10010000100 #x08aff80000000))\n  (define-fun var1378 () Float64\n    (Float64_valueOf/679560954 var1875))\n  (define-fun var1100!3 () (Array Int var732)\n    (store ((as const (Array Int var732)) var732!val!6) 2 var732!val!0))\n  (define-fun var3814 () Float64\n    (Float64_valueOf/679560954 var2050))\n  (define-fun var1875 () Float64\n    (fp #b1 #b00100000101 #x08aff80000001))\n  (define-fun null-Float64 () Float64\n    (_ +zero 11 53))\n  (define-fun var1938 () Float64\n    (fp #b0 #b00000000000 #x0010000000000))\n  (define-fun var1341!1 () String\n    \"\")\n  (define-fun arr-var732-init () (Array Int var732)\n    ((as const (Array Int var732)) var732!val!0))\n  (define-fun var2139!1 () var694\n    var694!val!0)\n  (define-fun var694-init () var694\n    var694!val!0)\n  (define-fun k!2 ((x!0 Int)) var732\n    (ite (= x!0 4) var732!val!3\n    (ite (= x!0 5) var732!val!5\n      var732!val!2)))\n  (define-fun cast-from-Float64-to-var732 ((x!0 Float64)) var732\n    var732!val!0)\n  (define-fun k!3 ((x!0 Int)) var732\n    (ite (= x!0 4) var732!val!4\n      var732!val!0))\n  (define-fun k!4 ((x!0 Int)) var732\n    (ite (= x!0 2) var732!val!0\n      var732!val!6))\n  (define-fun Float64_valueOf/679560954 ((x!0 Float64)) Float64\n    (_ +zero 11 53))\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var732))) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var694) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 125313024,
            "run_time": 0.6500370502471924,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.Validate__exclusiveBetween__-1415072963\\600.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n393ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "d1 := @parameter0: double",
            "d2 := @parameter1: double",
            "d0 := @parameter2: double",
            "$b0 = d0 cmpg d1",
            "$i2 = (int) $b0",
            "if $i2 <= 0 goto $r6 = new java.lang.IllegalArgumentException",
            "$r6 = new java.lang.IllegalArgumentException",
            "$r1 = newarray (java.lang.Object)[3]",
            "$r2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d0)",
            "$r1[0] = $r2",
            "$r3 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d1)",
            "$r1[1] = $r3",
            "$r4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(d2)",
            "$r1[2] = $r4",
            "$r5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"The value %s is not in the specified exclusive range of %s to %s\", $r1)",
            "specialinvoke $r6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r5)",
            "throw $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__matchesPattern__1751222839\\1263.smt2",
        "z3": {
            "memory": 31256576,
            "run_time": 0.09064459800720215,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var774:\r\n  ;;   var774!val!4 var774!val!2 var774!val!5 var774!val!1 var774!val!0 var774!val!3 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var774!val!4 () var774)\r\n  (declare-fun var774!val!2 () var774)\r\n  (declare-fun var774!val!5 () var774)\r\n  (declare-fun var774!val!1 () var774)\r\n  (declare-fun var774!val!0 () var774)\r\n  (declare-fun var774!val!3 () var774)\r\n  ;; cardinality constraint:\r\n  (forall ((x var774))\r\n          (or (= x var774!val!4)\r\n              (= x var774!val!2)\r\n              (= x var774!val!5)\r\n              (= x var774!val!1)\r\n              (= x var774!val!0)\r\n              (= x var774!val!3)))\r\n  ;; -----------\r\n  (define-fun var1392!2 () (Array Int var774)\r\n    (store ((as const (Array Int var774)) var774!val!5) 1 var774!val!1))\r\n  (define-fun var1162 () String\r\n    (String_format/1339386452\r\n  \"The string %s does not match the pattern %s\"\r\n  var1392!2))\r\n  (define-fun var3090 () Bool\r\n    (var2643_matches/-236833593 var3588 var2358))\r\n  (define-fun var3588 () String\r\n    \"!2!\")\r\n  (define-fun var2358 () String\r\n    \"!0!\")\r\n  (define-fun var3200 () var2271\r\n    var2271-init)\r\n  (define-fun var1392!1 () (Array Int var774)\r\n    (store ((as const (Array Int var774)) var774!val!2) 0 var774!val!0))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1392 () (Array Int var774)\r\n    arr-var774-init)\r\n  (define-fun null-__Array__Int__var774__ () (Array Int var774)\r\n    (store ((as const (Array Int var774)) var774!val!3) 3 var774!val!4))\r\n  (define-fun var3200!1 () var2271\r\n    var2271!val!0)\r\n  (define-fun arr-var774-init () (Array Int var774)\r\n    ((as const (Array Int var774)) var774!val!0))\r\n  (define-fun var2271-init () var2271\r\n    var2271!val!0)\r\n  (define-fun var1162!1 () String\r\n    \"\")\r\n  (define-fun k!1 ((x!0 Int)) var774\r\n    (ite (= x!0 3) var774!val!4\r\n      var774!val!3))\r\n  (define-fun k!2 ((x!0 Int)) var774\r\n    (ite (= x!0 1) var774!val!1\r\n      var774!val!5))\r\n  (define-fun cast-from-String-to-var774 ((x!0 String)) var774\r\n    (ite (= x!0 \"!2!\") var774!val!1\r\n      var774!val!0))\r\n  (define-fun var2643_matches/-236833593 ((x!0 String) (x!1 String)) Bool\r\n    false)\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var774))) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var2271) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1642496,
            "run_time": 0.06474781036376953,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1978 is 1\r\n; rep: (as @var1978_0 var1978)\r\n; cardinality of var2643 is 1\r\n; rep: (as @var2643_0 var2643)\r\n; cardinality of var2271 is 1\r\n; rep: (as @var2271_0 var2271)\r\n; cardinality of var774 is 3\r\n; rep: (as @var774_0 var774)\r\n; rep: (as @var774_1 var774)\r\n; rep: (as @var774_2 var774)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2643_matches/-236833593 ((_arg_1 String) (_arg_2 String)) Bool false)\r\n(define-fun var2271-init () var2271 (as @var2271_0 var2271))\r\n(define-fun arr-var774-init () (Array Int var774) ((as const (Array Int var774)) (as @var774_0 var774)))\r\n(define-fun cast-from-String-to-var774 ((_arg_1 String)) var774 (as @var774_0 var774))\r\n(define-fun String_format/1339386452 ((BOUND_VARIABLE_688 String) (BOUND_VARIABLE_689 (Array Int var774))) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_692 var2271) (BOUND_VARIABLE_693 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var774__ () (Array Int var774) ((as const (Array Int var774)) (as @var774_1 var774)))\r\n(define-fun var2358 () String \"\")\r\n(define-fun var3588 () String \"\")\r\n(define-fun var1392!1 () (Array Int var774) ((as const (Array Int var774)) (as @var774_0 var774)))\r\n(define-fun var1392!2 () (Array Int var774) (store ((as const (Array Int var774)) (as @var774_2 var774)) 1 (as @var774_0 var774)))\r\n(define-fun var3200!1 () var2271 (as @var2271_0 var2271))\r\n(define-fun var1162!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37552128,
            "run_time": 0.12275147438049316,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var774:\n  ;;   var774!val!4 var774!val!2 var774!val!5 var774!val!1 var774!val!0 var774!val!3 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var774!val!4 () var774)\n  (declare-fun var774!val!2 () var774)\n  (declare-fun var774!val!5 () var774)\n  (declare-fun var774!val!1 () var774)\n  (declare-fun var774!val!0 () var774)\n  (declare-fun var774!val!3 () var774)\n  ;; cardinality constraint:\n  (forall ((x var774))\n          (or (= x var774!val!4)\n              (= x var774!val!2)\n              (= x var774!val!5)\n              (= x var774!val!1)\n              (= x var774!val!0)\n              (= x var774!val!3)))\n  ;; -----------\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1392 () (Array Int var774)\n    arr-var774-init)\n  (define-fun null-__Array__Int__var774__ () (Array Int var774)\n    (store ((as const (Array Int var774)) var774!val!4) 4 var774!val!3))\n  (define-fun var2358 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3588 () String\n    \"\\u{0}\")\n  (define-fun var1392!2 () (Array Int var774)\n    (store ((as const (Array Int var774)) var774!val!1) 5 var774!val!5))\n  (define-fun var3090 () Bool\n    (var2643_matches/-236833593 var3588 var2358))\n  (define-fun var1162 () String\n    (String_format/1339386452\n  \"The string %s does not match the pattern %s\"\n  var1392!2))\n  (define-fun var1392!1 () (Array Int var774)\n    (store ((as const (Array Int var774)) var774!val!0) 4 var774!val!2))\n  (define-fun var3200 () var2271\n    var2271-init)\n  (define-fun var3200!1 () var2271\n    var2271!val!0)\n  (define-fun arr-var774-init () (Array Int var774)\n    ((as const (Array Int var774)) var774!val!0))\n  (define-fun var2271-init () var2271\n    var2271!val!0)\n  (define-fun var1162!1 () String\n    \"\")\n  (define-fun k!417 ((x!0 Int)) var774\n    (ite (= x!0 4) var774!val!3\n      var774!val!4))\n  (define-fun k!418 ((x!0 Int)) var774\n    (ite (= x!0 5) var774!val!5\n      var774!val!1))\n  (define-fun var2643_matches/-236833593 ((x!0 String) (x!1 String)) Bool\n    false)\n  (define-fun cast-from-String-to-var774 ((x!0 String)) var774\n    (ite (= x!0 \"\\u{0}\") var774!val!1\n      var774!val!0))\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var774))) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var2271) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 183775232,
            "run_time": 1.0963842868804932,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1392!2 () (Array Int var774) (store ((as const (Array Int var774)) var774!116) 1 var774!110))\r\n  (define-fun var1392!1 () (Array Int var774) (store ((as const (Array Int var774)) var774!114) 0 var774!108))\r\n  (define-fun var3588 () String \"\\u{1}\")\r\n  (define-fun var2358 () String \"\\u{2}\")\r\n  (define-fun null-__Array__Int__var774__ () (Array Int var774) ((as const (Array Int var774)) var774!0))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun var774!110 () var774 (cast-from-String-to-var774 \"\\u{1}\"))\r\n  (define-fun var774!108 () var774 (cast-from-String-to-var774 \"\\u{2}\"))\r\n  (define-fun String_format/1339386452 ((x!0 String) (x!1 (Array Int var774))) String (ite (and (= x!0 \"The string %s does not match the pattern %s\") (= x!1 (store ((as const (Array Int var774)) var774!116) 1 var774!110))) \"\\u{0}\" \"\"))\r\n  (define-fun var2643_matches/-236833593 ((x!0 String) (x!1 String)) Bool (ite (and (= x!0 \"\\u{1}\") (= x!1 \"\\u{2}\")) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.CharSequence",
            "r0 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <java.util.regex.Pattern: boolean matches(java.lang.String,java.lang.CharSequence)>(r0, r1)",
            "if $z0 != 0 goto return",
            "$r2 = new java.lang.IllegalArgumentException",
            "$r3 = newarray (java.lang.Object)[2]",
            "$r3[0] = r1",
            "$r3[1] = r0",
            "$r4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"The string %s does not match the pattern %s\", $r3)",
            "specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4)",
            "throw $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.Validate__isAssignableFrom__-815051731\\988.smt2",
        "z3": {
            "memory": 31232000,
            "run_time": 0.06021451950073242,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 42 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1667072,
            "run_time": 0.029984474182128906,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35659776,
            "run_time": 0.07631587982177734,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 42 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166555648,
            "run_time": 0.8234491348266602,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.Class",
            "r0 := @parameter1: java.lang.Class",
            "if r0 == null goto $r2 = new java.lang.IllegalArgumentException",
            "$r2 = new java.lang.IllegalArgumentException",
            "$r3 = newarray (java.lang.Object)[2]",
            "$r4 = staticinvoke <org.apache.commons.lang3.ClassUtils: java.lang.String getName(java.lang.Class,java.lang.String)>(r0, \"null type\")",
            "$r3[0] = $r4",
            "$r5 = staticinvoke <org.apache.commons.lang3.ClassUtils: java.lang.String getName(java.lang.Class,java.lang.String)>(r1, \"null type\")",
            "$r3[1] = $r5",
            "$r6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(\"Cannot assign a %s to a %s\", $r3)",
            "specialinvoke $r2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r6)",
            "throw $r2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle__resetIndent__686731300\\1303.smt2",
        "z3": {
            "memory": 32038912,
            "run_time": 60.00907278060913,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14295040,
            "run_time": 0.07635021209716797,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1044 is 2\r\n; rep: (as @var1044_0 var1044)\r\n; rep: (as @var1044_1 var1044)\r\n; cardinality of var449 is 1\r\n; rep: (as @var449_0 var449)\r\n; cardinality of var1994 is 1\r\n; rep: (as @var1994_0 var1994)\r\n; cardinality of var388 is 1\r\n; rep: (as @var388_0 var388)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var449_lineSeparator/-342590142 () String \"\")\r\n(define-fun spaces/692771816 ((BOUND_VARIABLE_3309 var1044)) Int 0)\r\n(define-fun spacer/1271586076 ((BOUND_VARIABLE_3312 var1044) (BOUND_VARIABLE_3313 Int)) String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_3316 String) (BOUND_VARIABLE_3317 var1994)) String \"\")\r\n(define-fun cast-from-String-to-var1994 ((BOUND_VARIABLE_3320 String)) var1994 (as @var1994_0 var1994))\r\n(define-fun setArrayStart/341024116 ((BOUND_VARIABLE_3323 var388) (BOUND_VARIABLE_3324 String)) void (as @void_0 void))\r\n(define-fun cast-from-var1044-to-var388 ((BOUND_VARIABLE_3327 var1044)) var388 (as @var388_0 var388))\r\n(define-fun setArraySeparator/-299825135 ((BOUND_VARIABLE_3330 var388) (BOUND_VARIABLE_3331 String)) void (as @void_0 void))\r\n(define-fun setArrayEnd/636535131 ((BOUND_VARIABLE_3334 var388) (BOUND_VARIABLE_3335 String)) void (as @void_0 void))\r\n(define-fun setContentStart/-305650476 ((BOUND_VARIABLE_3338 var388) (BOUND_VARIABLE_3339 String)) void (as @void_0 void))\r\n(define-fun setFieldSeparator/766569266 ((BOUND_VARIABLE_3342 var388) (BOUND_VARIABLE_3343 String)) void (as @void_0 void))\r\n(define-fun setContentEnd/-1348493125 ((BOUND_VARIABLE_3346 var388) (BOUND_VARIABLE_3347 String)) void (as @void_0 void))\r\n(define-fun null-var1044 () var1044 (as @var1044_0 var1044))\r\n(define-fun var1312 () var1044 (as @var1044_1 var1044))\r\n(define-fun var3293!1 () String \"\")\r\n(define-fun var3293!2 () String \"{\")\r\n(define-fun var1209!1 () String \"{\")\r\n(define-fun var779!1 () String \"{\")\r\n(define-fun var1312!1 () var1044 (as @var1044_0 var1044))\r\n(define-fun var3213!1 () String \"\")\r\n(define-fun var1250!1 () String \"\")\r\n(define-fun var1250!2 () String \",\")\r\n(define-fun var2647!1 () String \",\")\r\n(define-fun var3876!1 () String \",\")\r\n(define-fun var1312!2 () var1044 (as @var1044_0 var1044))\r\n(define-fun var1938!1 () String \"\")\r\n(define-fun var1908!1 () String \"\")\r\n(define-fun var1908!2 () String \"\")\r\n(define-fun var1417!1 () String \"\")\r\n(define-fun var1844!1 () String \"}\")\r\n(define-fun var1312!3 () var1044 (as @var1044_0 var1044))\r\n(define-fun var894!1 () String \"\")\r\n(define-fun var701!1 () String \"\")\r\n(define-fun var701!2 () String \"[\")\r\n(define-fun var1216!1 () String \"[\")\r\n(define-fun var2393!1 () String \"[\")\r\n(define-fun var1312!4 () var1044 (as @var1044_0 var1044))\r\n(define-fun var109!1 () String \"\")\r\n(define-fun var313!1 () String \"\")\r\n(define-fun var313!2 () String \",\")\r\n(define-fun var2135!1 () String \",\")\r\n(define-fun var163!1 () String \",\")\r\n(define-fun var1312!5 () var1044 (as @var1044_0 var1044))\r\n(define-fun var1112!1 () String \"\")\r\n(define-fun var1948!1 () String \"\")\r\n(define-fun var1948!2 () String \"\")\r\n(define-fun var910!1 () String \"\")\r\n(define-fun var3747!1 () String \"]\")\r\n(define-fun var1312!6 () var1044 (as @var1044_0 var1044))\r\n(define-fun var841!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39497728,
            "run_time": 0.10730338096618652,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 202 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 203 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 339742720,
            "run_time": 1.3037636280059814,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1044/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle__resetIndent__686731300\\1303.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3747!1 =\r\n     concat(all_69_4, \"]\")\r\n   var1844!1 =\r\n     concat(all_66_4, \"}\")\r\n   var1216!1 =\r\n     concat(\"[\", var449_lineSeparator/-342590142)\r\n   var2135!1 =\r\n     concat(\",\", var449_lineSeparator/-342590142)\r\n   var2647!1 =\r\n     concat(\",\", var449_lineSeparator/-342590142)\r\n   var1209!1 =\r\n     concat(\"{\", var449_lineSeparator/-342590142)\r\n   var2393!1 =\r\n     concat(all_63_3, rhs)\r\n   var779!1 =\r\n     concat(all_60_3, rhs)\r\n   var3876!1 =\r\n     concat(all_57_3, rhs)\r\n   var163!1 =\r\n     concat(all_54_3, rhs)\r\n   var910!1 =\r\n     concat(var449_lineSeparator/-342590142, rhs)\r\n   var1417!1 =\r\n     concat(var449_lineSeparator/-342590142, rhs)\r\n   all_63_3 =\r\n     concat(\"[\", var449_lineSeparator/-342590142)\r\n   all_57_3 =\r\n     concat(\",\", var449_lineSeparator/-342590142)\r\n   all_54_3 =\r\n     concat(\",\", var449_lineSeparator/-342590142)\r\n   all_60_3 =\r\n     concat(\"{\", var449_lineSeparator/-342590142)\r\n\r\n867ms\r\n"
        },
        "undefined_function_count": 13,
        "assertion_count": 67,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 6,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 12,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 6
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"{\")",
            "$r2 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>()",
            "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$i0 = r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: int spaces>",
            "$r4 = specialinvoke r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: java.lang.StringBuilder spacer(int)>($i0)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: void setArrayStart(java.lang.String)>($r7)",
            "$r8 = new java.lang.StringBuilder",
            "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",\")",
            "$r9 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>()",
            "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)",
            "$i1 = r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: int spaces>",
            "$r11 = specialinvoke r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: java.lang.StringBuilder spacer(int)>($i1)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r11)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: void setArraySeparator(java.lang.String)>($r14)",
            "$r15 = new java.lang.StringBuilder",
            "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()",
            "$r16 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>()",
            "$r18 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)",
            "$i2 = r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: int spaces>",
            "$i3 = $i2 - 2",
            "$r17 = specialinvoke r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: java.lang.StringBuilder spacer(int)>($i3)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17)",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"}\")",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: void setArrayEnd(java.lang.String)>($r21)",
            "$r22 = new java.lang.StringBuilder",
            "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()",
            "$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[\")",
            "$r23 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>()",
            "$r26 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)",
            "$i4 = r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: int spaces>",
            "$r25 = specialinvoke r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: java.lang.StringBuilder spacer(int)>($i4)",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r25)",
            "$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: void setContentStart(java.lang.String)>($r28)",
            "$r29 = new java.lang.StringBuilder",
            "specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()",
            "$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",\")",
            "$r30 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>()",
            "$r33 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30)",
            "$i5 = r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: int spaces>",
            "$r32 = specialinvoke r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: java.lang.StringBuilder spacer(int)>($i5)",
            "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r32)",
            "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: void setFieldSeparator(java.lang.String)>($r35)",
            "$r36 = new java.lang.StringBuilder",
            "specialinvoke $r36.<java.lang.StringBuilder: void <init>()>()",
            "$r37 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>()",
            "$r39 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r37)",
            "$i6 = r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: int spaces>",
            "$i7 = $i6 - 2",
            "$r38 = specialinvoke r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: java.lang.StringBuilder spacer(int)>($i7)",
            "$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r38)",
            "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle: void setContentEnd(java.lang.String)>($r42)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle__spacer__1271586076\\1341.smt2",
        "z3": {
            "memory": 30113792,
            "run_time": 0.07209420204162598,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2187:\r\n  ;;   var2187!val!1 var2187!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2187!val!1 () var2187)\r\n  (declare-fun var2187!val!0 () var2187)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2187)) (or (= x var2187!val!1) (= x var2187!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var2187 () var2187\r\n    var2187!val!1)\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun var1388 () Int\r\n    0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2520 () String\r\n    String-init)\r\n  (define-fun var1921 () Int\r\n    0)\r\n  (define-fun var3935 () var2187\r\n    var2187!val!0)\r\n  (define-fun var2520!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.01567530632019043,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2187 is 2\r\n; rep: (as @var2187_0 var2187)\r\n; rep: (as @var2187_1 var2187)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun null-var2187 () var2187 (as @var2187_0 var2187))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3935 () var2187 (as @var2187_1 var2187))\r\n(define-fun var1388 () Int 0)\r\n(define-fun var2520!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36360192,
            "run_time": 0.046350717544555664,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2187:\n  ;;   var2187!val!1 var2187!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2187!val!1 () var2187)\n  (declare-fun var2187!val!0 () var2187)\n  ;; cardinality constraint:\n  (forall ((x var2187)) (or (= x var2187!val!1) (= x var2187!val!0)))\n  ;; -----------\n  (define-fun null-var2187 () var2187\n    var2187!val!1)\n  (define-fun null-Int () Int\n    1)\n  (define-fun var1388 () Int\n    0)\n  (define-fun var1921 () Int\n    0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2520 () String\n    String-init)\n  (define-fun var3935 () var2187\n    var2187!val!0)\n  (define-fun var2520!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 144379904,
            "run_time": 0.7121601104736328,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2520!1 () String \"\")\r\n  (define-fun var1388 () Int 0)\r\n  (define-fun var3935 () var2187 var2187!4)\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-var2187 () var2187 var2187!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.builder.MultilineRecursiveToStringStyle",
            "i0 := @parameter0: int",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "i1 = 0",
            "if i1 >= i0 goto return $r0",
            "return $r0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ReflectionDiffBuilder__accept__1663518743\\1118.smt2",
        "z3": {
            "memory": 31264768,
            "run_time": 0.062056779861450195,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3296:\r\n  ;;   var3296!val!0 var3296!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3296!val!0 () var3296)\r\n  (declare-fun var3296!val!1 () var3296)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3296)) (or (= x var3296!val!0) (= x var3296!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2836:\r\n  ;;   var2836!val!1 var2836!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2836!val!1 () var2836)\r\n  (declare-fun var2836!val!0 () var2836)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2836)) (or (= x var2836!val!1) (= x var2836!val!0)))\r\n  ;; -----------\r\n  (define-fun var2079 () String\r\n    (getName/1618348824 var3666))\r\n  (define-fun var3815 () Int\r\n    (str.indexof (getName/1618348824 var3666) (str.from_code 36) 0))\r\n  (define-fun null-var3296 () var3296\r\n    var3296!val!1)\r\n  (define-fun var1413 () Int\r\n    (- 1))\r\n  (define-fun var1516 () var3296\r\n    var3296!val!0)\r\n  (define-fun var3666 () var2836\r\n    var2836!val!0)\r\n  (define-fun null-var2836 () var2836\r\n    var2836!val!1)\r\n  (define-fun getName/1618348824 ((x!0 var2836)) String\r\n    \"$\")\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.015561819076538086,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3296 is 2\r\n; rep: (as @var3296_0 var3296)\r\n; rep: (as @var3296_1 var3296)\r\n; cardinality of var2836 is 2\r\n; rep: (as @var2836_0 var2836)\r\n; rep: (as @var2836_1 var2836)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getName/1618348824 ((_arg_1 var2836)) String \"$\")\r\n(define-fun null-var3296 () var3296 (as @var3296_0 var3296))\r\n(define-fun null-var2836 () var2836 (as @var2836_0 var2836))\r\n(define-fun var1516 () var3296 (as @var3296_1 var3296))\r\n(define-fun var3666 () var2836 (as @var2836_1 var2836))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36519936,
            "run_time": 0.046611785888671875,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 27 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165261312,
            "run_time": 0.8048624992370605,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3296/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ReflectionDiffBuilder__accept__1663518743\\1118.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_14_0 =\r\n     concat(all_18_2, all_18_4)\r\n   all_18_2 =\r\n     concat(all_18_3, \"$\")\r\n\r\n568ms\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int indexOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int)>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.apache.commons.lang3.builder.ReflectionDiffBuilder",
            "r0 := @parameter0: java.lang.reflect.Field",
            "$r1 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.String getName()>()",
            "$i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(36)",
            "$i5 = (int) -1",
            "if $i0 == $i5 goto $i1 = virtualinvoke r0.<java.lang.reflect.Field: int getModifiers()>()",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.builder.ReflectionToStringBuilder__accept__-1579621360\\1469.smt2",
        "z3": {
            "memory": 31813632,
            "run_time": 0.07398557662963867,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2132:\r\n  ;;   var2132!val!0 var2132!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2132!val!0 () var2132)\r\n  (declare-fun var2132!val!1 () var2132)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2132)) (or (= x var2132!val!0) (= x var2132!val!1)))\r\n  ;; -----------\r\n  ;; universe for var200:\r\n  ;;   var200!val!1 var200!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var200!val!1 () var200)\r\n  (declare-fun var200!val!0 () var200)\r\n  ;; cardinality constraint:\r\n  (forall ((x var200)) (or (= x var200!val!1) (= x var200!val!0)))\r\n  ;; -----------\r\n  (define-fun var3926 () Int\r\n    (- 1))\r\n  (define-fun null-var200 () var200\r\n    var200!val!1)\r\n  (define-fun var395 () var200\r\n    var200!val!0)\r\n  (define-fun var3793 () String\r\n    (getName/1618348824 var395))\r\n  (define-fun var1322 () Int\r\n    (str.indexof (getName/1618348824 var395) (str.from_code 36) 0))\r\n  (define-fun var3180 () var2132\r\n    var2132!val!0)\r\n  (define-fun null-var2132 () var2132\r\n    var2132!val!1)\r\n  (define-fun getName/1618348824 ((x!0 var200)) String\r\n    \"$\")\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1650688,
            "run_time": 0.045770883560180664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2132 is 2\r\n; rep: (as @var2132_0 var2132)\r\n; rep: (as @var2132_1 var2132)\r\n; cardinality of var200 is 2\r\n; rep: (as @var200_0 var200)\r\n; rep: (as @var200_1 var200)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getName/1618348824 ((_arg_1 var200)) String \"$\")\r\n(define-fun null-var2132 () var2132 (as @var2132_0 var2132))\r\n(define-fun null-var200 () var200 (as @var200_0 var200))\r\n(define-fun var3180 () var2132 (as @var2132_1 var2132))\r\n(define-fun var395 () var200 (as @var200_1 var200))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36917248,
            "run_time": 0.04678940773010254,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 27 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164929536,
            "run_time": 0.7744905948638916,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2132/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.builder.ReflectionToStringBuilder__accept__-1579621360\\1469.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_14_0 =\r\n     concat(all_18_2, all_18_4)\r\n   all_18_2 =\r\n     concat(all_18_3, \"$\")\r\n\r\n542ms\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int indexOf(int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(int)>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.apache.commons.lang3.builder.ReflectionToStringBuilder",
            "r0 := @parameter0: java.lang.reflect.Field",
            "$r1 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.String getName()>()",
            "$i0 = virtualinvoke $r1.<java.lang.String: int indexOf(int)>(36)",
            "$i6 = (int) -1",
            "if $i0 == $i6 goto $i1 = virtualinvoke r0.<java.lang.reflect.Field: int getModifiers()>()",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringBetween__-410933523\\5805.smt2",
        "z3": {
            "memory": 32710656,
            "run_time": 0.2925448417663574,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var867:\r\n  ;;   var867!val!2 var867!val!7 var867!val!0 var867!val!4 var867!val!6 var867!val!5 var867!val!1 var867!val!3 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var867!val!2 () var867)\r\n  (declare-fun var867!val!7 () var867)\r\n  (declare-fun var867!val!0 () var867)\r\n  (declare-fun var867!val!4 () var867)\r\n  (declare-fun var867!val!6 () var867)\r\n  (declare-fun var867!val!5 () var867)\r\n  (declare-fun var867!val!1 () var867)\r\n  (declare-fun var867!val!3 () var867)\r\n  ;; cardinality constraint:\r\n  (forall ((x var867))\r\n          (or (= x var867!val!2)\r\n              (= x var867!val!7)\r\n              (= x var867!val!0)\r\n              (= x var867!val!4)\r\n              (= x var867!val!6)\r\n              (= x var867!val!5)\r\n              (= x var867!val!1)\r\n              (= x var867!val!3)))\r\n  ;; -----------\r\n  (define-fun var479 () Int\r\n    (+ (str.indexof var3617 var3307 0) (str.len var3307)))\r\n  (define-fun var1073 () Int\r\n    (- 1))\r\n  (define-fun var2405 () Int\r\n    (str.len var3307))\r\n  (define-fun var347 () Int\r\n    (+ (str.indexof var3617 var3307 0) (str.len var3307)))\r\n  (define-fun var3617 () String\r\n    \"A\")\r\n  (define-fun var3809 () Int\r\n    (str.indexof var3617 var3307 0))\r\n  (define-fun var1965 () String\r\n    (let ((a!1 (- (str.indexof var3617\r\n                           var3603\r\n                           (+ (str.indexof var3617 var3307 0) (str.len var3307)))\r\n              (+ (str.indexof var3617 var3307 0) (str.len var3307)))))\r\n  (str.substr var3617 (+ (str.indexof var3617 var3307 0) (str.len var3307)) a!1)))\r\n  (define-fun null-String () String\r\n    \"B\")\r\n  (define-fun var1591 () Bool\r\n    (var3141_allNotNull/1601190162 var754!3))\r\n  (define-fun var267 () Int\r\n    (- 1))\r\n  (define-fun var3603 () String\r\n    \"A\")\r\n  (define-fun var754!3 () (Array Int var867)\r\n    (store ((as const (Array Int var867)) var867!val!7) 2 var867!val!0))\r\n  (define-fun var754!1 () (Array Int var867)\r\n    (store ((as const (Array Int var867)) var867!val!2) 0 var867!val!0))\r\n  (define-fun var754!2 () (Array Int var867)\r\n    (store ((as const (Array Int var867)) var867!val!1) 6 var867!val!5))\r\n  (define-fun null-__Array__Int__var867__ () (Array Int var867)\r\n    (store (store ((as const (Array Int var867)) var867!val!6) 5 var867!val!3)\r\n       6\r\n       var867!val!4))\r\n  (define-fun var3307 () String\r\n    \"\")\r\n  (define-fun var1609 () Int\r\n    (str.len var3307))\r\n  (define-fun var754 () (Array Int var867)\r\n    arr-var867-init)\r\n  (define-fun var2702 () Int\r\n    (str.indexof var3617\r\n             var3603\r\n             (+ (str.indexof var3617 var3307 0) (str.len var3307))))\r\n  (define-fun arr-var867-init () (Array Int var867)\r\n    ((as const (Array Int var867)) var867!val!0))\r\n  (define-fun k!1 ((x!0 Int)) var867\r\n    (ite (= x!0 5) var867!val!3\r\n    (ite (= x!0 6) var867!val!4\r\n      var867!val!6)))\r\n  (define-fun k!2 ((x!0 Int)) var867\r\n    (ite (= x!0 6) var867!val!5\r\n      var867!val!1))\r\n  (define-fun k!3 ((x!0 Int)) var867\r\n    (ite (= x!0 2) var867!val!0\r\n      var867!val!7))\r\n  (define-fun cast-from-String-to-var867 ((x!0 String)) var867\r\n    (ite (= x!0 \"\") var867!val!1\r\n      var867!val!0))\r\n  (define-fun var3141_allNotNull/1601190162 ((x!0 (Array Int var867))) Bool\r\n    true)\r\n)\r\n(error \"line 60 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12574720,
            "run_time": 0.03140091896057129,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1763 is 1\r\n; rep: (as @var1763_0 var1763)\r\n; cardinality of var867 is 4\r\n; rep: (as @var867_0 var867)\r\n; rep: (as @var867_1 var867)\r\n; rep: (as @var867_2 var867)\r\n; rep: (as @var867_3 var867)\r\n; cardinality of var3141 is 1\r\n; rep: (as @var3141_0 var3141)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var867-init () (Array Int var867) ((as const (Array Int var867)) (as @var867_0 var867)))\r\n(define-fun cast-from-String-to-var867 ((_arg_1 String)) var867 (as @var867_0 var867))\r\n(define-fun var3141_allNotNull/1601190162 ((_arg_1 (Array Int var867))) Bool true)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var867__ () (Array Int var867) (store ((as const (Array Int var867)) (as @var867_1 var867)) 0 (as @var867_2 var867)))\r\n(define-fun var3617 () String \"\")\r\n(define-fun var3307 () String \"\")\r\n(define-fun var3603 () String \"\")\r\n(define-fun var754!1 () (Array Int var867) ((as const (Array Int var867)) (as @var867_0 var867)))\r\n(define-fun var754!2 () (Array Int var867) (store (store ((as const (Array Int var867)) (as @var867_2 var867)) 0 (as @var867_1 var867)) 1 (as @var867_0 var867)))\r\n(define-fun var754!3 () (Array Int var867) (store ((as const (Array Int var867)) (as @var867_3 var867)) 2 (as @var867_0 var867)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 5833183232,
            "run_time": 60.01399087905884,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169041920,
            "run_time": 13.421928405761719,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_indexof(var3617, var3603, all_28_2 + all_28_3, all_28_1)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.StringUtils__substringBetween__-410933523\\5805.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n1992ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.String: int indexOf(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int indexOf(java.lang.String,int)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: java.lang.String substring(int,int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 2,
            "<java.lang.String: int indexOf(java.lang.String,int)>": 1,
            "<java.lang.String: java.lang.String substring(int,int)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.String",
            "r3 := @parameter2: java.lang.String",
            "$r0 = newarray (java.lang.Object)[3]",
            "$r0[0] = r1",
            "$r0[1] = r2",
            "$r0[2] = r3",
            "$z0 = staticinvoke <org.apache.commons.lang3.ObjectUtils: boolean allNotNull(java.lang.Object[])>($r0)",
            "if $z0 != 0 goto i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(r2)",
            "i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(r2)",
            "$i7 = (int) -1",
            "if i0 == $i7 goto return null",
            "$i1 = virtualinvoke r2.<java.lang.String: int length()>()",
            "$i2 = i0 + $i1",
            "i3 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>(r3, $i2)",
            "$i9 = (int) -1",
            "if i3 == $i9 goto return null",
            "$i4 = virtualinvoke r2.<java.lang.String: int length()>()",
            "$i5 = i0 + $i4",
            "$r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int,int)>($i5, i3)",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.event.EventUtils__addEventListener__1097310080\\2088.smt2",
        "z3": {
            "memory": 30613504,
            "run_time": 60.01624941825867,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6836224,
            "run_time": 0.07515954971313477,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var91 is 3\r\n; rep: (as @var91_0 var91)\r\n; rep: (as @var91_1 var91)\r\n; rep: (as @var91_2 var91)\r\n; cardinality of var262 is 2\r\n; rep: (as @var262_0 var262)\r\n; rep: (as @var262_1 var262)\r\n; cardinality of var2811 is 1\r\n; rep: (as @var2811_0 var2811)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2811-init () var2811 (as @var2811_0 var2811))\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_698 var91)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_701 ClassObject)) String \"\")\r\n(define-fun getSimpleName/-390194377 ((BOUND_VARIABLE_704 ClassObject)) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_707 var2811) (BOUND_VARIABLE_708 String)) void (as @void_0 void))\r\n(define-fun null-var91 () var91 (as @var91_0 var91))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-var262 () var262 (as @var262_0 var262))\r\n(define-fun var1283 () var91 (as @var91_1 var91))\r\n(define-fun var1751 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var3425 () var91 (as @var91_2 var91))\r\n(define-fun var2468 () var262 (as @var262_1 var262))\r\n(define-fun var1154!1 () String \"\")\r\n(define-fun var1154!2 () String \"Class \")\r\n(define-fun var2212!1 () String \"Class \")\r\n(define-fun var2494!1 () String \"Class  does not have an accessible add\")\r\n(define-fun var69!1 () String \"Class  does not have an accessible add\")\r\n(define-fun var2996!1 () String \"Class  does not have an accessible add method which takes a parameter of type \")\r\n(define-fun var1249!1 () String \"Class  does not have an accessible add method which takes a parameter of type \")\r\n(define-fun var2055!1 () String \"Class  does not have an accessible add method which takes a parameter of type .\")\r\n(define-fun var2206!1 () var2811 (as @var2811_0 var2811))\r\n(define-fun var2103!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36122624,
            "run_time": 60.015318632125854,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 203104256,
            "run_time": 3.1266162395477295,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: ClassObject/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.event.EventUtils__addEventListener__1097310080\\2088.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2494!1 =\r\n     concat(all_37_4, \" does not have an accessible add\")\r\n   var2996!1 =\r\n     concat(all_28_3, \" method which takes a parameter of type \")\r\n   var2055!1 =\r\n     concat(all_25_3, \".\")\r\n   var1249!1 =\r\n     concat(all_22_3, all_22_2)\r\n   var69!1 =\r\n     concat(all_19_3, all_19_2)\r\n   var2212!1 =\r\n     concat(\"Class \", all_34_3)\r\n   all_22_3 =\r\n     concat(all_64_3, \" method which takes a parameter of type \")\r\n   all_25_3 =\r\n     concat(all_25_5, all_22_2)\r\n   all_28_3 =\r\n     concat(all_19_3, all_19_2)\r\n   all_37_4 =\r\n     concat(\"Class \", all_34_3)\r\n   all_25_5 =\r\n     concat(all_61_3, \" method which takes a parameter of type \")\r\n   all_64_3 =\r\n     concat(all_19_3, all_19_2)\r\n   all_61_3 =\r\n     concat(all_19_3, all_19_2)\r\n   all_19_3 =\r\n     concat(all_40_5, \" does not have an accessible add\")\r\n   all_40_5 =\r\n     concat(\"Class \", all_34_3)\r\n\r\n1232ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 27,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "r2 := @parameter1: java.lang.Class",
            "r7 := @parameter2: java.lang.Object",
            "$r1 = new java.lang.StringBuilder",
            "$r12 := @caughtexception",
            "$r13 = new java.lang.IllegalArgumentException",
            "$r14 = new java.lang.StringBuilder",
            "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()",
            "$r17 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Class \")",
            "$r15 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r16 = virtualinvoke $r15.<java.lang.Class: java.lang.String getName()>()",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)",
            "$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" does not have an accessible add\")",
            "$r19 = virtualinvoke r2.<java.lang.Class: java.lang.String getSimpleName()>()",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)",
            "$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" method which takes a parameter of type \")",
            "$r22 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>()",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\".\")",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26)",
            "throw $r13"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateFormat__toString__1250671669\\4646.smt2",
        "z3": {
            "memory": 31891456,
            "run_time": 60.01191020011902,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13352960,
            "run_time": 9.498515605926514,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3842 is 2\r\n; rep: (as @var3842_0 var3842)\r\n; rep: (as @var3842_1 var3842)\r\n; cardinality of var94 is 1\r\n; rep: (as @var94_0 var94)\r\n; cardinality of var2899 is 1\r\n; rep: (as @var2899_0 var2899)\r\n; cardinality of var1209 is 1\r\n; rep: (as @var1209_0 var1209)\r\n; cardinality of var145 is 1\r\n; rep: (as @var145_0 var145)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun printer/-1347178147 ((_arg_1 var3842)) var94 (as @var94_0 var94))\r\n(define-fun getPattern/515694758 ((_arg_1 var94)) String \"\")\r\n(define-fun getLocale/-788858571 ((BOUND_VARIABLE_1256 var94)) var2899 (as @var2899_0 var2899))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1259 String) (BOUND_VARIABLE_1260 var1209)) String \"\")\r\n(define-fun cast-from-var2899-to-var1209 ((BOUND_VARIABLE_1263 var2899)) var1209 (as @var1209_0 var1209))\r\n(define-fun getTimeZone/-666450313 ((BOUND_VARIABLE_1266 var94)) var145 (as @var145_0 var145))\r\n(define-fun getID/-1323510388 ((BOUND_VARIABLE_1269 var145)) String \"\")\r\n(define-fun null-var3842 () var3842 (as @var3842_0 var3842))\r\n(define-fun var3869 () var3842 (as @var3842_1 var3842))\r\n(define-fun var1728!1 () String \"\")\r\n(define-fun var1728!2 () String \"FastDateFormat[\")\r\n(define-fun var624!1 () String \"FastDateFormat[\")\r\n(define-fun var3009!1 () String \"FastDateFormat[,\")\r\n(define-fun var840!1 () String \"FastDateFormat[,\")\r\n(define-fun var1272!1 () String \",\")\r\n(define-fun var684!1 () String \",\")\r\n(define-fun var1113!1 () String \",]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34443264,
            "run_time": 5.447718858718872,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 74 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 75 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 200794112,
            "run_time": 3.770416498184204,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3842/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateFormat__toString__1250671669\\4646.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_41_9 =\r\n     concat(all_41_10, \",\")\r\n   var1272!1 =\r\n     concat(all_38_5, \",\")\r\n   all_38_8 =\r\n     concat(all_38_9, \",\")\r\n   var3009!1 =\r\n     concat(all_32_4, \",\")\r\n   var1113!1 =\r\n     concat(all_29_3, \"]\")\r\n   var684!1 =\r\n     concat(all_23_5, all_23_2)\r\n   var624!1 =\r\n     concat(\"FastDateFormat[\", all_26_3)\r\n   var840!1 =\r\n     concat(all_35_4, rhs)\r\n   all_35_4 =\r\n     concat(all_35_5, \",\")\r\n   all_29_3 =\r\n     concat(all_23_5, all_23_2)\r\n   all_41_10 =\r\n     concat(\"FastDateFormat[\", all_26_3)\r\n   all_38_9 =\r\n     concat(\"FastDateFormat[\", all_26_3)\r\n   all_32_4 =\r\n     concat(\"FastDateFormat[\", all_26_3)\r\n   all_23_5 =\r\n     concat(all_41_6, \",\")\r\n   all_35_5 =\r\n     concat(\"FastDateFormat[\", all_26_3)\r\n\r\n881ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 22,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDateFormat",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FastDateFormat[\")",
            "$r2 = r1.<org.apache.commons.lang3.time.FastDateFormat: org.apache.commons.lang3.time.FastDatePrinter printer>",
            "$r3 = virtualinvoke $r2.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.String getPattern()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",\")",
            "$r6 = r1.<org.apache.commons.lang3.time.FastDateFormat: org.apache.commons.lang3.time.FastDatePrinter printer>",
            "$r7 = virtualinvoke $r6.<org.apache.commons.lang3.time.FastDatePrinter: java.util.Locale getLocale()>()",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7)",
            "$r13 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",\")",
            "$r10 = r1.<org.apache.commons.lang3.time.FastDateFormat: org.apache.commons.lang3.time.FastDatePrinter printer>",
            "$r11 = virtualinvoke $r10.<org.apache.commons.lang3.time.FastDatePrinter: java.util.TimeZone getTimeZone()>()",
            "$r12 = virtualinvoke $r11.<java.util.TimeZone: java.lang.String getID()>()",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r12)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r16"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$PatternStrategy__parse__-74140174\\3891.smt2",
        "z3": {
            "memory": 32235520,
            "run_time": 0.17992615699768066,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1983:\r\n  ;;   var1983!val!1 var1983!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1983!val!1 () var1983)\r\n  (declare-fun var1983!val!0 () var1983)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1983)) (or (= x var1983!val!1) (= x var1983!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3957:\r\n  ;;   var3957!val!0 var3957!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3957!val!0 () var3957)\r\n  (declare-fun var3957!val!1 () var3957)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3957)) (or (= x var3957!val!0) (= x var3957!val!1)))\r\n  ;; -----------\r\n  ;; universe for var872:\r\n  ;;   var872!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var872!val!0 () var872)\r\n  ;; cardinality constraint:\r\n  (forall ((x var872)) (= x var872!val!0))\r\n  ;; -----------\r\n  ;; universe for var1032:\r\n  ;;   var1032!val!0 var1032!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1032!val!0 () var1032)\r\n  (declare-fun var1032!val!1 () var1032)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1032)) (or (= x var1032!val!0) (= x var1032!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3943:\r\n  ;;   var3943!val!0 var3943!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3943!val!0 () var3943)\r\n  (declare-fun var3943!val!1 () var3943)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3943)) (or (= x var3943!val!0) (= x var3943!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1807:\r\n  ;;   var1807!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1807!val!0 () var1807)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1807)) (= x var1807!val!0))\r\n  ;; -----------\r\n  (define-fun var1783 () String\r\n    (str.substr var3623\r\n            (getIndex/-2136393185 var1947)\r\n            (- (str.len var3623) (getIndex/-2136393185 var1947))))\r\n  (define-fun null-var3957 () var3957\r\n    var3957!val!1)\r\n  (define-fun var3243 () Int\r\n    (getIndex/-2136393185 var1947))\r\n  (define-fun var105 () Int\r\n    (getIndex/-2136393185 var1947))\r\n  (define-fun null-var1032 () var1032\r\n    var1032!val!1)\r\n  (define-fun var2406 () var872\r\n    (matcher/468719934\r\n  (pattern/443652580 var1967)\r\n  (str.substr var3623\r\n              (getIndex/-2136393185 var1947)\r\n              (- (str.len var3623) (getIndex/-2136393185 var1947)))))\r\n  (define-fun null-var3943 () var3943\r\n    var3943!val!1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun null-var1983 () var1983\r\n    var1983!val!1)\r\n  (define-fun var3623 () String\r\n    \"\")\r\n  (define-fun var182 () Bool\r\n    (let ((a!1 (matcher/468719934\r\n             (pattern/443652580 var1967)\r\n             (str.substr var3623\r\n                         (getIndex/-2136393185 var1947)\r\n                         (- (str.len var3623) (getIndex/-2136393185 var1947))))))\r\n  (lookingAt/-1645860844 a!1)))\r\n  (define-fun var3456 () var1983\r\n    var1983!val!0)\r\n  (define-fun var1967 () var3957\r\n    var3957!val!0)\r\n  (define-fun var1947 () var1032\r\n    var1032!val!0)\r\n  (define-fun var2177 () Int\r\n    1)\r\n  (define-fun var2782 () var3943\r\n    var3943!val!0)\r\n  (define-fun var486 () var1807\r\n    (pattern/443652580 var1967))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var1947!1 () var1032\r\n    var1032!val!0)\r\n  (define-fun var3243!1 () Int\r\n    0)\r\n  (define-fun getIndex/-2136393185 ((x!0 var1032)) Int\r\n    0)\r\n  (define-fun matcher/468719934 ((x!0 var1807) (x!1 String)) var872\r\n    var872!val!0)\r\n  (define-fun lookingAt/-1645860844 ((x!0 var872)) Bool\r\n    false)\r\n  (define-fun pattern/443652580 ((x!0 var3957)) var1807\r\n    var1807!val!0)\r\n  (define-fun setErrorIndex/-1773443795 ((x!0 var1032) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 60 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1708032,
            "run_time": 0.03010869026184082,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3957 is 2\r\n; rep: (as @var3957_0 var3957)\r\n; rep: (as @var3957_1 var3957)\r\n; cardinality of var1983 is 2\r\n; rep: (as @var1983_0 var1983)\r\n; rep: (as @var1983_1 var1983)\r\n; cardinality of var3943 is 2\r\n; rep: (as @var3943_0 var3943)\r\n; rep: (as @var3943_1 var3943)\r\n; cardinality of var1571 is 1\r\n; rep: (as @var1571_0 var1571)\r\n; cardinality of var1032 is 2\r\n; rep: (as @var1032_0 var1032)\r\n; rep: (as @var1032_1 var1032)\r\n; cardinality of var1807 is 1\r\n; rep: (as @var1807_0 var1807)\r\n; cardinality of var872 is 1\r\n; rep: (as @var872_0 var872)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun pattern/443652580 ((_arg_1 var3957)) var1807 (as @var1807_0 var1807))\r\n(define-fun getIndex/-2136393185 ((_arg_1 var1032)) Int 0)\r\n(define-fun matcher/468719934 ((_arg_1 var1807) (_arg_2 String)) var872 (as @var872_0 var872))\r\n(define-fun lookingAt/-1645860844 ((_arg_1 var872)) Bool false)\r\n(define-fun setErrorIndex/-1773443795 ((BOUND_VARIABLE_744 var1032) (BOUND_VARIABLE_745 Int)) void (as @void_0 void))\r\n(define-fun null-var3957 () var3957 (as @var3957_0 var3957))\r\n(define-fun null-var1983 () var1983 (as @var1983_0 var1983))\r\n(define-fun null-var3943 () var3943 (as @var3943_0 var3943))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1032 () var1032 (as @var1032_0 var1032))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1967 () var3957 (as @var3957_1 var3957))\r\n(define-fun var3456 () var1983 (as @var1983_1 var1983))\r\n(define-fun var2782 () var3943 (as @var3943_1 var3943))\r\n(define-fun var3623 () String \"\")\r\n(define-fun var1947 () var1032 (as @var1032_1 var1032))\r\n(define-fun var2177 () Int 0)\r\n(define-fun var1947!1 () var1032 (as @var1032_0 var1032))\r\n(define-fun var3243!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 165871616,
            "run_time": 60.00309658050537,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164986880,
            "run_time": 4.754828453063965,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1983/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser$PatternStrategy__parse__-74140174\\3891.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3623 =\r\n     concat(all_33_5, all_30_3)\r\n\r\n1883ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser$PatternStrategy",
            "r6 := @parameter0: org.apache.commons.lang3.time.FastDateParser",
            "r7 := @parameter1: java.util.Calendar",
            "r1 := @parameter2: java.lang.String",
            "r2 := @parameter3: java.text.ParsePosition",
            "i5 := @parameter4: int",
            "$r3 = r0.<org.apache.commons.lang3.time.FastDateParser$PatternStrategy: java.util.regex.Pattern pattern>",
            "$i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()",
            "$r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0)",
            "r5 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4)",
            "$z0 = virtualinvoke r5.<java.util.regex.Matcher: boolean lookingAt()>()",
            "if $z0 != 0 goto $i2 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()",
            "$i4 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()",
            "virtualinvoke r2.<java.text.ParsePosition: void setErrorIndex(int)>($i4)",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy__toString__-1344047253\\3935.smt2",
        "z3": {
            "memory": 32227328,
            "run_time": 60.0084068775177,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 14032896,
            "run_time": 0.6854050159454346,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1308 is 2\r\n; rep: (as @var1308_0 var1308)\r\n; rep: (as @var1308_1 var1308)\r\n; cardinality of var46 is 1\r\n; rep: (as @var46_0 var46)\r\n; cardinality of var1773 is 2\r\n; rep: (as @var1773_0 var1773)\r\n; rep: (as @var1773_1 var1773)\r\n; cardinality of var1949 is 1\r\n; rep: (as @var1949_0 var1949)\r\n; cardinality of var2098 is 1\r\n; rep: (as @var2098_0 var2098)\r\n; cardinality of var762 is 1\r\n; rep: (as @var762_0 var762)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun locale/-580305909 ((_arg_1 var1308)) var46 (as @var46_0 var46))\r\n(define-fun append/-1031950772 ((_arg_1 String) (_arg_2 var1773)) String \"\")\r\n(define-fun cast-from-var46-to-var1773 ((_arg_1 var46)) var1773 (as @var1773_0 var1773))\r\n(define-fun tzNames/-580305909 ((_arg_1 var1308)) var1949 (as @var1949_0 var1949))\r\n(define-fun cast-from-var1949-to-var1773 ((_arg_1 var1949)) var1773 (as @var1773_1 var1773))\r\n(define-fun pattern/443652580 ((BOUND_VARIABLE_2047 var762)) var2098 (as @var2098_0 var2098))\r\n(define-fun cast-from-var1308-to-var762 ((BOUND_VARIABLE_2050 var1308)) var762 (as @var762_0 var762))\r\n(define-fun cast-from-var2098-to-var1773 ((BOUND_VARIABLE_2053 var2098)) var1773 (as @var1773_0 var1773))\r\n(define-fun null-var1308 () var1308 (as @var1308_0 var1308))\r\n(define-fun var3411 () var1308 (as @var1308_1 var1308))\r\n(define-fun var3789!1 () String \"\")\r\n(define-fun var3789!2 () String \"TimeZoneStrategy [locale=\")\r\n(define-fun var2268!1 () String \"TimeZoneStrategy [locale=\")\r\n(define-fun var1485!1 () String \", tzNames=\")\r\n(define-fun var666!1 () String \", tzNames=\")\r\n(define-fun var1154!1 () String \", pattern=\")\r\n(define-fun var1240!1 () String \", pattern=\")\r\n(define-fun var368!1 () String \"]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34705408,
            "run_time": 3.385437488555908,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 68 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 69 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 198930432,
            "run_time": 5.943442344665527,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1308/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy__toString__-1344047253\\3935.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_39_6 =\r\n     concat(all_70_4, \", pattern=\")\r\n   var1154!1 =\r\n     concat(all_42_4, \", pattern=\")\r\n   var368!1 =\r\n     concat(all_39_2, \"]\")\r\n   all_73_5 =\r\n     concat(all_33_2, \", tzNames=\")\r\n   all_70_5 =\r\n     concat(all_33_2, \", tzNames=\")\r\n   all_42_7 =\r\n     concat(all_33_2, \", tzNames=\")\r\n   var1485!1 =\r\n     concat(all_33_2, \", tzNames=\")\r\n   var666!1 =\r\n     concat(all_36_2, rhs)\r\n   var1240!1 =\r\n     concat(all_24_0, rhs)\r\n   all_24_0 =\r\n     concat(all_73_4, \", pattern=\")\r\n   all_36_2 =\r\n     concat(all_33_2, \", tzNames=\")\r\n\r\n3116ms\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"TimeZoneStrategy [locale=\")",
            "$r2 = r1.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy: java.util.Locale locale>",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2)",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", tzNames=\")",
            "$r5 = r1.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy: java.util.Map tzNames>",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5)",
            "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", pattern=\")",
            "$r8 = r1.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy: java.util.regex.Pattern pattern>",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r12"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__toStringAll__-1951035588\\4629.smt2",
        "z3": {
            "memory": 33218560,
            "run_time": 60.01003289222717,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 15515648,
            "run_time": 3.94246506690979,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1640 is 2\r\n; rep: (as @var1640_0 var1640)\r\n; rep: (as @var1640_1 var1640)\r\n; cardinality of var341 is 1\r\n; rep: (as @var341_0 var341)\r\n; cardinality of var2405 is 2\r\n; rep: (as @var2405_0 var2405)\r\n; rep: (as @var2405_1 var2405)\r\n; cardinality of var1861 is 1\r\n; rep: (as @var1861_0 var1861)\r\n; cardinality of var938 is 1\r\n; rep: (as @var938_0 var938)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun pattern/-1073810043 ((_arg_1 var1640)) String \"\")\r\n(define-fun timeZone/-1073810043 ((_arg_1 var1640)) var341 (as @var341_0 var341))\r\n(define-fun append/-1031950772 ((_arg_1 String) (_arg_2 var2405)) String \"\")\r\n(define-fun cast-from-var341-to-var2405 ((_arg_1 var341)) var2405 (as @var2405_0 var2405))\r\n(define-fun locale/-1073810043 ((_arg_1 var1640)) var1861 (as @var1861_0 var1861))\r\n(define-fun cast-from-var1861-to-var2405 ((_arg_1 var1861)) var2405 (as @var2405_1 var2405))\r\n(define-fun century/-1073810043 ((_arg_1 var1640)) Int (- 1))\r\n(define-fun startYear/-1073810043 ((_arg_1 var1640)) Int (- 1))\r\n(define-fun patterns/-1073810043 ((BOUND_VARIABLE_3967 var1640)) var938 (as @var938_0 var938))\r\n(define-fun cast-from-var938-to-var2405 ((BOUND_VARIABLE_3970 var938)) var2405 (as @var2405_0 var2405))\r\n(define-fun null-var1640 () var1640 (as @var1640_0 var1640))\r\n(define-fun var2871 () var1640 (as @var1640_1 var1640))\r\n(define-fun var1646!1 () String \"\")\r\n(define-fun var1646!2 () String \"FastDateParser [pattern=\")\r\n(define-fun var2265!1 () String \"FastDateParser [pattern=\")\r\n(define-fun var2214!1 () String \"FastDateParser [pattern=, timeZone=\")\r\n(define-fun var3110!1 () String \"FastDateParser [pattern=, timeZone=\")\r\n(define-fun var3847!1 () String \", locale=\")\r\n(define-fun var3450!1 () String \", locale=\")\r\n(define-fun var177!1 () String \", century=\")\r\n(define-fun var807!1 () String \", century=\")\r\n(define-fun var2319!1 () String \", century=, startYear=\")\r\n(define-fun var2958!1 () String \", century=, startYear=\")\r\n(define-fun var3010!1 () String \", century=, startYear=, patterns=\")\r\n(define-fun var1844!1 () String \", century=, startYear=, patterns=\")\r\n(define-fun var1693!1 () String \"]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34926592,
            "run_time": 2.506675958633423,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 97 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 98 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 222646272,
            "run_time": 3.5712504386901855,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1640/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser__toStringAll__-1951035588\\4629.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_90_7 =\r\n     concat(all_129_5, \", locale=\")\r\n   all_129_6 =\r\n     concat(all_129_7, \", timeZone=\")\r\n   all_84_7 =\r\n     concat(all_126_5, \", locale=\")\r\n   all_126_6 =\r\n     concat(all_126_7, \", timeZone=\")\r\n   all_87_7 =\r\n     concat(all_123_5, \", locale=\")\r\n   all_123_6 =\r\n     concat(all_123_7, \", timeZone=\")\r\n   all_93_7 =\r\n     concat(all_120_5, \", locale=\")\r\n   all_120_6 =\r\n     concat(all_120_7, \", timeZone=\")\r\n   all_105_6 =\r\n     concat(all_105_7, \", timeZone=\")\r\n   all_34_5 =\r\n     concat(all_102_5, \", locale=\")\r\n   all_102_6 =\r\n     concat(all_102_7, \", timeZone=\")\r\n   all_37_6 =\r\n     concat(all_99_5, \", locale=\")\r\n   all_99_6 =\r\n     concat(all_99_7, \", timeZone=\")\r\n   all_55_11 =\r\n     concat(all_96_5, \", locale=\")\r\n   all_96_6 =\r\n     concat(all_96_7, \", timeZone=\")\r\n   var1693!1 =\r\n     concat(all_64_5, \"]\")\r\n   all_64_8 =\r\n     concat(all_64_12, \", patterns=\")\r\n   var2319!1 =\r\n     concat(all_55_7, \", startYear=\")\r\n   var3847!1 =\r\n     concat(all_52_5, \", locale=\")\r\n   all_52_8 =\r\n     concat(all_52_9, \", timeZone=\")\r\n   var3010!1 =\r\n     concat(all_46_6, \", patterns=\")\r\n   var2214!1 =\r\n     concat(all_40_3, \", timeZone=\")\r\n   var177!1 =\r\n     concat(all_34_2, \", century=\")\r\n   var2265!1 =\r\n     concat(\"FastDateParser [pattern=\", all_27_2)\r\n   var1844!1 =\r\n     concat(all_49_3, rhs)\r\n   var3110!1 =\r\n     concat(all_43_3, rhs)\r\n   var807!1 =\r\n     concat(all_37_2, rhs)\r\n   var2958!1 =\r\n     concat(all_22_0, rhs)\r\n   var3450!1 =\r\n     concat(all_20_0, rhs)\r\n   all_20_0 =\r\n     concat(all_105_5, \", locale=\")\r\n   all_22_0 =\r\n     concat(all_93_5, \", startYear=\")\r\n   all_46_6 =\r\n     concat(all_90_5, \", startYear=\")\r\n   all_64_12 =\r\n     concat(all_84_5, \", startYear=\")\r\n   all_55_7 =\r\n     concat(all_55_8, \", century=\")\r\n   all_49_3 =\r\n     concat(all_49_7, \", patterns=\")\r\n   all_43_3 =\r\n     concat(all_43_4, \", timeZone=\")\r\n   all_37_2 =\r\n     concat(all_37_3, \", century=\")\r\n   all_129_7 =\r\n     concat(\"FastDateParser [pattern=\", all_27_2)\r\n   all_126_7 =\r\n     concat(\"FastDateParser [pattern=\", all_27_2)\r\n   all_123_7 =\r\n     concat(\"FastDateParser [pattern=\", all_27_2)\r\n   all_120_7 =\r\n     concat(\"FastDateParser [pattern=\", all_27_2)\r\n   all_105_7 =\r\n     concat(\"FastDateParser [pattern=\", all_27_2)\r\n   all_102_7 =\r\n     concat(\"FastDateParser [pattern=\", all_27_2)\r\n   all_99_7 =\r\n     concat(\"FastDateParser [pattern=\", all_27_2)\r\n   all_96_7 =\r\n     concat(\"FastDateParser [pattern=\", all_27_2)\r\n   all_52_9 =\r\n     concat(\"FastDateParser [pattern=\", all_27_2)\r\n   all_40_3 =\r\n     concat(\"FastDateParser [pattern=\", all_27_2)\r\n   all_93_5 =\r\n     concat(all_93_6, \", century=\")\r\n   all_90_5 =\r\n     concat(all_90_6, \", century=\")\r\n   all_49_7 =\r\n     concat(all_87_5, \", startYear=\")\r\n   all_84_5 =\r\n     concat(all_84_6, \", century=\")\r\n   all_43_4 =\r\n     concat(\"FastDateParser [pattern=\", all_27_2)\r\n   all_87_5 =\r\n     concat(all_87_6, \", century=\")\r\n\r\n3222ms\r\n"
        },
        "undefined_function_count": 11,
        "assertion_count": 30,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 8,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDateParser",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FastDateParser [pattern=\")",
            "$r2 = r1.<org.apache.commons.lang3.time.FastDateParser: java.lang.String pattern>",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", timeZone=\")",
            "$r5 = r1.<org.apache.commons.lang3.time.FastDateParser: java.util.TimeZone timeZone>",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5)",
            "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", locale=\")",
            "$r8 = r1.<org.apache.commons.lang3.time.FastDateParser: java.util.Locale locale>",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r8)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", century=\")",
            "$i0 = r1.<org.apache.commons.lang3.time.FastDateParser: int century>",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", startYear=\")",
            "$i1 = r1.<org.apache.commons.lang3.time.FastDateParser: int startYear>",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1)",
            "$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", patterns=\")",
            "$r15 = r1.<org.apache.commons.lang3.time.FastDateParser: java.util.List patterns>",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r15)",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r19"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.MethodUtils__invokeMethod__538237164\\3331.smt2",
        "z3": {
            "memory": 31342592,
            "run_time": 60.008419036865234,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1667072,
            "run_time": 0.030666351318359375,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2294 is 5\r\n; rep: (as @var2294_0 var2294)\r\n; rep: (as @var2294_1 var2294)\r\n; rep: (as @var2294_2 var2294)\r\n; rep: (as @var2294_3 var2294)\r\n; rep: (as @var2294_4 var2294)\r\n; cardinality of var495 is 1\r\n; rep: (as @var495_0 var495)\r\n; cardinality of var564 is 1\r\n; rep: (as @var564_0 var564)\r\n; cardinality of var1572 is 1\r\n; rep: (as @var1572_0 var1572)\r\n; cardinality of var2493 is 2\r\n; rep: (as @var2493_0 var2493)\r\n; rep: (as @var2493_1 var2493)\r\n; cardinality of var909 is 1\r\n; rep: (as @var909_0 var909)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 3\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n; rep: (as @ClassObject_2 ClassObject)\r\n(define-fun var564_requireNonNull/1378936425 ((BOUND_VARIABLE_668 var2294) (BOUND_VARIABLE_669 String)) var2294 (as @var2294_0 var2294))\r\n(define-fun var1572_nullToEmpty/1403447389 ((_arg_1 (Array Int ClassObject))) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun var1572_nullToEmpty/627354827 ((BOUND_VARIABLE_672 (Array Int var2294))) (Array Int var2294) ((as const (Array Int var2294)) (as @var2294_0 var2294)))\r\n(define-fun getClass/1258963082 ((_arg_1 var2294)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var909_getMatchingAccessibleMethod/856695000 ((_arg_1 ClassObject) (_arg_2 String) (_arg_3 (Array Int ClassObject))) var2493 (as @var2493_1 var2493))\r\n(define-fun var909_toVarArgs/306330370 ((BOUND_VARIABLE_676 var2493) (BOUND_VARIABLE_677 (Array Int var2294))) (Array Int var2294) ((as const (Array Int var2294)) (as @var2294_0 var2294)))\r\n(define-fun invoke/-1759464968 ((BOUND_VARIABLE_680 var2493) (BOUND_VARIABLE_681 var2294) (BOUND_VARIABLE_682 (Array Int var2294))) var2294 (as @var2294_0 var2294))\r\n(define-fun null-var2294 () var2294 (as @var2294_0 var2294))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var2294__ () (Array Int var2294) (store ((as const (Array Int var2294)) (as @var2294_1 var2294)) 0 (as @var2294_3 var2294)))\r\n(define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_1 ClassObject)))\r\n(define-fun null-var2493 () var2493 (as @var2493_0 var2493))\r\n(define-fun var2416 () var2294 (as @var2294_1 var2294))\r\n(define-fun var1754 () Bool false)\r\n(define-fun var768 () String \"\")\r\n(define-fun var3944 () (Array Int var2294) (store ((as const (Array Int var2294)) (as @var2294_0 var2294)) 0 (as @var2294_4 var2294)))\r\n(define-fun var2063 () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)) 0 (as @ClassObject_2 ClassObject)))\r\n(define-fun var2416!1 () var2294 (as @var2294_2 var2294))\r\n(define-fun var2066 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37273600,
            "run_time": 60.91109848022461,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177672192,
            "run_time": 2.7715485095977783,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2416!1 () var2294 var2294!12)\r\n  (define-fun var2063 () (Array Int ClassObject) ((as const (Array Int ClassObject)) ClassObject!0))\r\n  (define-fun var3944 () (Array Int var2294) ((as const (Array Int var2294)) var2294!0))\r\n  (define-fun var768 () String \"od: \")\r\n  (define-fun var2416 () var2294 var2294!6)\r\n  (define-fun null-var2493 () var2493 var2493!4)\r\n  (define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) ClassObject!0) 0 ClassObject!1))\r\n  (define-fun null-__Array__Int__var2294__ () (Array Int var2294) (store ((as const (Array Int var2294)) var2294!0) 0 var2294!1))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2294 () var2294 var2294!2)\r\n  (define-fun null-Bool () Bool true)\r\n  (define-fun var2493!36 () var2493 (var909_getMatchingAccessibleMethod/856695000 ClassObject!32 \"od: \" (store ((as const (Array Int ClassObject)) ClassObject!0) 1 ClassObject!1)))\r\n  (define-fun ClassObject!32 () ClassObject (getClass/1258963082 var2294!12))\r\n  (define-fun var1754 () Bool false)\r\n  (define-fun var1572_nullToEmpty/1403447389 ((x!0 (Array Int ClassObject))) (Array Int ClassObject) (ite (= x!0 ((as const (Array Int ClassObject)) ClassObject!0)) (store ((as const (Array Int ClassObject)) ClassObject!0) 1 ClassObject!1) ((as const (Array Int ClassObject)) ClassObject!0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 10,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "z0 := @parameter1: boolean",
            "r2 := @parameter2: java.lang.String",
            "r12 := @parameter3: java.lang.Object[]",
            "r13 := @parameter4: java.lang.Class[]",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"object\")",
            "r14 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Class[] nullToEmpty(java.lang.Class[])>(r13)",
            "r15 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(r12)",
            "r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "if z0 == 0 goto r16 = \"No such accessible method: \"",
            "r16 = \"No such accessible method: \"",
            "r17 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.reflect.Method getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(r1, r2, r14)",
            "if r17 != null goto r18 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.Object[] toVarArgs(java.lang.reflect.Method,java.lang.Object[])>(r17, r15)",
            "r18 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.Object[] toVarArgs(java.lang.reflect.Method,java.lang.Object[])>(r17, r15)",
            "$r3 = virtualinvoke r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, r18)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.MethodUtils__invokeExactMethod__-214879133\\3175.smt2",
        "z3": {
            "memory": 31625216,
            "run_time": 60.01325798034668,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1650688,
            "run_time": 0.047307491302490234,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3127 is 5\r\n; rep: (as @var3127_0 var3127)\r\n; rep: (as @var3127_1 var3127)\r\n; rep: (as @var3127_2 var3127)\r\n; rep: (as @var3127_3 var3127)\r\n; rep: (as @var3127_4 var3127)\r\n; cardinality of var3587 is 1\r\n; rep: (as @var3587_0 var3587)\r\n; cardinality of var2954 is 1\r\n; rep: (as @var2954_0 var2954)\r\n; cardinality of var2491 is 1\r\n; rep: (as @var2491_0 var2491)\r\n; cardinality of var1359 is 2\r\n; rep: (as @var1359_0 var1359)\r\n; rep: (as @var1359_1 var1359)\r\n; cardinality of var2351 is 1\r\n; rep: (as @var2351_0 var2351)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 3\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n; rep: (as @ClassObject_2 ClassObject)\r\n(define-fun var2954_requireNonNull/1378936425 ((BOUND_VARIABLE_619 var3127) (BOUND_VARIABLE_620 String)) var3127 (as @var3127_0 var3127))\r\n(define-fun var2491_nullToEmpty/627354827 ((BOUND_VARIABLE_623 (Array Int var3127))) (Array Int var3127) ((as const (Array Int var3127)) (as @var3127_0 var3127)))\r\n(define-fun var2491_nullToEmpty/1403447389 ((_arg_1 (Array Int ClassObject))) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun getClass/1258963082 ((_arg_1 var3127)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var2351_getAccessibleMethod/841246421 ((_arg_1 ClassObject) (_arg_2 String) (_arg_3 (Array Int ClassObject))) var1359 (as @var1359_1 var1359))\r\n(define-fun invoke/-1759464968 ((BOUND_VARIABLE_627 var1359) (BOUND_VARIABLE_628 var3127) (BOUND_VARIABLE_629 (Array Int var3127))) var3127 (as @var3127_0 var3127))\r\n(define-fun null-var3127 () var3127 (as @var3127_0 var3127))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var3127__ () (Array Int var3127) (store ((as const (Array Int var3127)) (as @var3127_1 var3127)) 0 (as @var3127_3 var3127)))\r\n(define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_1 ClassObject)))\r\n(define-fun null-var1359 () var1359 (as @var1359_0 var1359))\r\n(define-fun var3700 () var3127 (as @var3127_1 var3127))\r\n(define-fun var1456 () String \"\")\r\n(define-fun var498 () (Array Int var3127) (store ((as const (Array Int var3127)) (as @var3127_0 var3127)) 0 (as @var3127_4 var3127)))\r\n(define-fun var1977 () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)) 0 (as @ClassObject_2 ClassObject)))\r\n(define-fun var3700!1 () var3127 (as @var3127_2 var3127))\r\n(define-fun var965 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37257216,
            "run_time": 60.96223497390747,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154746880,
            "run_time": 1.0727181434631348,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3700!1 () var3127 var3127!12)\r\n  (define-fun var1977 () (Array Int ClassObject) ((as const (Array Int ClassObject)) ClassObject!0))\r\n  (define-fun var498 () (Array Int var3127) ((as const (Array Int var3127)) var3127!0))\r\n  (define-fun var1456 () String \"\\u{0}\")\r\n  (define-fun var3700 () var3127 var3127!6)\r\n  (define-fun null-var1359 () var1359 var1359!4)\r\n  (define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) ClassObject!0) 0 ClassObject!1))\r\n  (define-fun null-__Array__Int__var3127__ () (Array Int var3127) (store ((as const (Array Int var3127)) var3127!0) 0 var3127!1))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3127 () var3127 var3127!2)\r\n  (define-fun var1359!36 () var1359 (var2351_getAccessibleMethod/841246421 ClassObject!32 \"\\u{0}\" (store ((as const (Array Int ClassObject)) ClassObject!0) 1 ClassObject!1)))\r\n  (define-fun ClassObject!32 () ClassObject (getClass/1258963082 var3127!12))\r\n  (define-fun var2491_nullToEmpty/1403447389 ((x!0 (Array Int ClassObject))) (Array Int ClassObject) (ite (= x!0 ((as const (Array Int ClassObject)) ClassObject!0)) (store ((as const (Array Int ClassObject)) ClassObject!0) 1 ClassObject!1) ((as const (Array Int ClassObject)) ClassObject!0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 7,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "r2 := @parameter1: java.lang.String",
            "r13 := @parameter2: java.lang.Object[]",
            "r14 := @parameter3: java.lang.Class[]",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"object\")",
            "r15 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(r13)",
            "r16 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Class[] nullToEmpty(java.lang.Class[])>(r14)",
            "r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "r3 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.reflect.Method getAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(r1, r2, r16)",
            "if r3 != null goto $r4 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, r15)",
            "$r4 = virtualinvoke r3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, r15)",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.event.EventUtils__addEventListener__1097310080\\2100.smt2",
        "z3": {
            "memory": 30375936,
            "run_time": 2.644315481185913,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2844:\r\n  ;;   var2844!val!1 var2844!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2844!val!1 () var2844)\r\n  (declare-fun var2844!val!0 () var2844)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2844)) (or (= x var2844!val!1) (= x var2844!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3593:\r\n  ;;   var3593!val!1 var3593!val!0 var3593!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3593!val!1 () var3593)\r\n  (declare-fun var3593!val!0 () var3593)\r\n  (declare-fun var3593!val!2 () var3593)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3593))\r\n          (or (= x var3593!val!1) (= x var3593!val!0) (= x var3593!val!2)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!1 ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!1) (= x ClassObject!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var2844 () var2844\r\n    var2844!val!1)\r\n  (define-fun var759 () var3593\r\n    var3593!val!0)\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var2120 () var1016\r\n    (getCause/20745027 var135))\r\n  (define-fun var3626 () var3593\r\n    var3593!val!2)\r\n  (define-fun null-var3593 () var3593\r\n    var3593!val!1)\r\n  (define-fun var3338 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var1245 () var1952\r\n    var1952-init)\r\n  (define-fun var135 () var2844\r\n    var2844!val!0)\r\n  (define-fun var3621 () String\r\n    String-init)\r\n  (define-fun var3376 () String\r\n    \"\")\r\n  (define-fun var2120!1 () var1016\r\n    var1016!val!0)\r\n  (define-fun var1245!1 () var1952\r\n    var1952!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1952-init () var1952\r\n    var1952!val!0)\r\n  (define-fun <init>/-1425936906 ((x!0 var1952) (x!1 String) (x!2 var1016)) void\r\n    void!val!0)\r\n  (define-fun getCause/20745027 ((x!0 var2844)) var1016\r\n    var1016!val!0)\r\n)\r\n(error \"line 40 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1658880,
            "run_time": 0.029661893844604492,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3593 is 3\r\n; rep: (as @var3593_0 var3593)\r\n; rep: (as @var3593_1 var3593)\r\n; rep: (as @var3593_2 var3593)\r\n; cardinality of var2844 is 2\r\n; rep: (as @var2844_0 var2844)\r\n; rep: (as @var2844_1 var2844)\r\n; cardinality of var1952 is 1\r\n; rep: (as @var1952_0 var1952)\r\n; cardinality of var1016 is 1\r\n; rep: (as @var1016_0 var1016)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var1952-init () var1952 (as @var1952_0 var1952))\r\n(define-fun getCause/20745027 ((BOUND_VARIABLE_457 var2844)) var1016 (as @var1016_0 var1016))\r\n(define-fun <init>/-1425936906 ((BOUND_VARIABLE_460 var1952) (BOUND_VARIABLE_461 String) (BOUND_VARIABLE_462 var1016)) void (as @void_0 void))\r\n(define-fun null-var3593 () var3593 (as @var3593_0 var3593))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-var2844 () var2844 (as @var2844_0 var2844))\r\n(define-fun var759 () var3593 (as @var3593_1 var3593))\r\n(define-fun var3338 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var3626 () var3593 (as @var3593_2 var3593))\r\n(define-fun var135 () var2844 (as @var2844_1 var2844))\r\n(define-fun var1245!1 () var1952 (as @var1952_0 var1952))\r\n(define-fun var3376 () String \"\")\r\n(define-fun var2120!1 () var1016 (as @var1016_0 var1016))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35082240,
            "run_time": 10.349545955657959,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2844:\n  ;;   var2844!val!1 var2844!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2844!val!1 () var2844)\n  (declare-fun var2844!val!0 () var2844)\n  ;; cardinality constraint:\n  (forall ((x var2844)) (or (= x var2844!val!1) (= x var2844!val!0)))\n  ;; -----------\n  ;; universe for var3593:\n  ;;   var3593!val!1 var3593!val!0 var3593!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3593!val!1 () var3593)\n  (declare-fun var3593!val!0 () var3593)\n  (declare-fun var3593!val!2 () var3593)\n  ;; cardinality constraint:\n  (forall ((x var3593))\n          (or (= x var3593!val!1) (= x var3593!val!0) (= x var3593!val!2)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!1 ClassObject!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!1 () ClassObject)\n  (declare-fun ClassObject!val!0 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!1) (= x ClassObject!val!0)))\n  ;; -----------\n  (define-fun null-var2844 () var2844\n    var2844!val!1)\n  (define-fun var759 () var3593\n    var3593!val!0)\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var3626 () var3593\n    var3593!val!2)\n  (define-fun null-var3593 () var3593\n    var3593!val!1)\n  (define-fun var3338 () ClassObject\n    ClassObject!val!0)\n  (define-fun var2120 () var1016\n    (getCause/20745027 var135))\n  (define-fun var3621 () String\n    String-init)\n  (define-fun var1245 () var1952\n    var1952-init)\n  (define-fun var135 () var2844\n    var2844!val!0)\n  (define-fun var3376 () String\n    \"\")\n  (define-fun var2120!1 () var1016\n    var1016!val!0)\n  (define-fun var1245!1 () var1952\n    var1952!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1952-init () var1952\n    var1952!val!0)\n  (define-fun <init>/-1425936906 ((x!0 var1952) (x!1 String) (x!2 var1016)) void\n    void!val!0)\n  (define-fun getCause/20745027 ((x!0 var2844)) var1016\n    var1016!val!0)\n)\n(error \"line 40 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 156753920,
            "run_time": 0.8333942890167236,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var135 () var2844 var2844!14)\r\n  (define-fun var3626 () var3593 var3593!12)\r\n  (define-fun var3338 () ClassObject ClassObject!10)\r\n  (define-fun var759 () var3593 var3593!8)\r\n  (define-fun null-var2844 () var2844 var2844!6)\r\n  (define-fun null-ClassObject () ClassObject ClassObject!4)\r\n  (define-fun null-var3593 () var3593 var3593!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 7,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "r2 := @parameter1: java.lang.Class",
            "r7 := @parameter2: java.lang.Object",
            "$r1 = new java.lang.StringBuilder",
            "$r9 := @caughtexception",
            "$r10 = new java.lang.IllegalArgumentException",
            "$r11 = virtualinvoke $r9.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>()",
            "specialinvoke $r10.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(\"Unable to add listener.\", $r11)",
            "throw $r10"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy__setCalendar__-1886499951\\3784.smt2",
        "z3": {
            "memory": 9588736,
            "run_time": 0.7739884853363037,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1734:\r\n  ;;   var1734!val!1 var1734!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1734!val!1 () var1734)\r\n  (declare-fun var1734!val!0 () var1734)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1734)) (or (= x var1734!val!1) (= x var1734!val!0)))\r\n  ;; -----------\r\n  ;; universe for var436:\r\n  ;;   var436!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var436!val!0 () var436)\r\n  ;; cardinality constraint:\r\n  (forall ((x var436)) (= x var436!val!0))\r\n  ;; -----------\r\n  ;; universe for var3991:\r\n  ;;   var3991!val!0 var3991!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3991!val!0 () var3991)\r\n  (declare-fun var3991!val!1 () var3991)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3991)) (or (= x var3991!val!0) (= x var3991!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1168:\r\n  ;;   var1168!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1168!val!0 () var1168)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1168)) (= x var1168!val!0))\r\n  ;; -----------\r\n  ;; universe for var1341:\r\n  ;;   var1341!val!0 var1341!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1341!val!0 () var1341)\r\n  (declare-fun var1341!val!1 () var1341)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1341)) (or (= x var1341!val!0) (= x var1341!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1455:\r\n  ;;   var1455!val!0 var1455!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1455!val!0 () var1455)\r\n  (declare-fun var1455!val!1 () var1455)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1455)) (or (= x var1455!val!0) (= x var1455!val!1)))\r\n  ;; -----------\r\n  (define-fun var3866 () var1455\r\n    var1455!val!0)\r\n  (define-fun var2628 () String\r\n    \"!0!\")\r\n  (define-fun var1935 () var3991\r\n    (var1168_get/1088891777\r\n  (lKeyValues/-1318375070 var3872)\r\n  (cast-from-String-to-var3991\r\n    (toLowerCase/1946809429 var2628 (locale/-1318375070 var3872)))))\r\n  (define-fun var1955 () var436\r\n    (locale/-1318375070 var3872))\r\n  (define-fun null-var1734 () var1734\r\n    var1734!val!1)\r\n  (define-fun null-var1455 () var1455\r\n    var1455!val!1)\r\n  (define-fun var1001 () Int\r\n    (let ((a!1 (var1168_get/1088891777\r\n             (lKeyValues/-1318375070 var3872)\r\n             (cast-from-String-to-var3991\r\n               (toLowerCase/1946809429 var2628 (locale/-1318375070 var3872))))))\r\n  (intValue/-1815674922 (cast-from-var3991-to-Int a!1))))\r\n  (define-fun var3368 () Int\r\n    (let ((a!1 (var1168_get/1088891777\r\n             (lKeyValues/-1318375070 var3872)\r\n             (cast-from-String-to-var3991\r\n               (toLowerCase/1946809429 var2628 (locale/-1318375070 var3872))))))\r\n  (cast-from-var3991-to-Int a!1)))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-var1341 () var1341\r\n    var1341!val!1)\r\n  (define-fun var3108 () Int\r\n    (field/-1318375070 var3872))\r\n  (define-fun var3872 () var1341\r\n    var1341!val!0)\r\n  (define-fun var2133 () var1734\r\n    var1734!val!0)\r\n  (define-fun null-Int () Int\r\n    4)\r\n  (define-fun var27 () String\r\n    (toLowerCase/1946809429 var2628 (locale/-1318375070 var3872)))\r\n  (define-fun var3883 () var1168\r\n    (lKeyValues/-1318375070 var3872))\r\n  (define-fun field/-1318375070 ((x!0 var1341)) Int\r\n    9)\r\n  (define-fun lKeyValues/-1318375070 ((x!0 var1341)) var1168\r\n    var1168!val!0)\r\n  (define-fun cast-from-String-to-var3991 ((x!0 String)) var3991\r\n    var3991!val!0)\r\n  (define-fun intValue/-1815674922 ((x!0 Int)) Int\r\n    2)\r\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var436)) String\r\n    \"!2!\")\r\n  (define-fun locale/-1318375070 ((x!0 var1341)) var436\r\n    var436!val!0)\r\n  (define-fun cast-from-var3991-to-Int ((x!0 var3991)) Int\r\n    3)\r\n  (define-fun var1168_get/1088891777 ((x!0 var1168) (x!1 var3991)) var3991\r\n    var3991!val!1)\r\n)\r\n(error \"line 53 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9637888,
            "run_time": 0.2591516971588135,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1341 is 2\r\n; rep: (as @var1341_0 var1341)\r\n; rep: (as @var1341_1 var1341)\r\n; cardinality of var1455 is 2\r\n; rep: (as @var1455_0 var1455)\r\n; rep: (as @var1455_1 var1455)\r\n; cardinality of var1734 is 2\r\n; rep: (as @var1734_0 var1734)\r\n; rep: (as @var1734_1 var1734)\r\n; cardinality of var1601 is 1\r\n; rep: (as @var1601_0 var1601)\r\n; cardinality of var436 is 1\r\n; rep: (as @var436_0 var436)\r\n; cardinality of var1168 is 1\r\n; rep: (as @var1168_0 var1168)\r\n; cardinality of var3991 is 2\r\n; rep: (as @var3991_0 var3991)\r\n; rep: (as @var3991_1 var3991)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun locale/-1318375070 ((_arg_1 var1341)) var436 (as @var436_0 var436))\r\n(define-fun toLowerCase/1946809429 ((_arg_1 String) (_arg_2 var436)) String \"B\")\r\n(define-fun lKeyValues/-1318375070 ((_arg_1 var1341)) var1168 (as @var1168_0 var1168))\r\n(define-fun var1168_get/1088891777 ((_arg_1 var1168) (_arg_2 var3991)) var3991 (as @var3991_1 var3991))\r\n(define-fun cast-from-String-to-var3991 ((_arg_1 String)) var3991 (as @var3991_0 var3991))\r\n(define-fun cast-from-var3991-to-Int ((_arg_1 var3991)) Int 0)\r\n(define-fun field/-1318375070 ((_arg_1 var1341)) Int 9)\r\n(define-fun intValue/-1815674922 ((_arg_1 Int)) Int 2)\r\n(define-fun null-var1341 () var1341 (as @var1341_0 var1341))\r\n(define-fun null-var1455 () var1455 (as @var1455_0 var1455))\r\n(define-fun null-var1734 () var1734 (as @var1734_0 var1734))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3872 () var1341 (as @var1341_1 var1341))\r\n(define-fun var3866 () var1455 (as @var1455_1 var1455))\r\n(define-fun var2133 () var1734 (as @var1734_1 var1734))\r\n(define-fun var2628 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35155968,
            "run_time": 8.623230934143066,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 52 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 53 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180305920,
            "run_time": 1.0352628231048584,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2628 () String \"\\u{0}\")\r\n  (define-fun var2133 () var1734 var1734!30)\r\n  (define-fun var3866 () var1455 var1455!28)\r\n  (define-fun var3872 () var1341 var1341!26)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var1734 () var1734 var1734!24)\r\n  (define-fun null-var1455 () var1455 var1455!22)\r\n  (define-fun null-var1341 () var1341 var1341!20)\r\n  (define-fun var3991!60 () var3991 (cast-from-String-to-var3991 \"\\u{1}\"))\r\n  (define-fun var3991!62 () var3991 (var1168_get/1088891777 var1168!54 var3991!60))\r\n  (define-fun var1168!54 () var1168 (lKeyValues/-1318375070 var1341!26))\r\n  (define-fun var436!56 () var436 (locale/-1318375070 var1341!26))\r\n  (define-fun intValue/-1815674922 ((x!0 Int)) Int (ite (= x!0 32) 2 0))\r\n  (define-fun field/-1318375070 ((x!0 var1341)) Int (ite (= x!0 var1341!26) 9 0))\r\n  (define-fun cast-from-var3991-to-Int ((x!0 var3991)) Int (ite (= x!0 var3991!62) 32 0))\r\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var436)) String (ite (and (= x!0 \"\\u{0}\") (= x!1 var436!56)) \"\\u{1}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy",
            "r13 := @parameter0: org.apache.commons.lang3.time.FastDateParser",
            "r6 := @parameter1: java.util.Calendar",
            "r0 := @parameter2: java.lang.String",
            "$r2 = r1.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: java.util.Locale locale>",
            "r3 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2)",
            "$r4 = r1.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: java.util.Map lKeyValues>",
            "$r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)",
            "r14 = (java.lang.Integer) $r5",
            "if r14 != null goto $i0 = r1.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: int field>",
            "$i0 = r1.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: int field>",
            "if 9 != $i0 goto $i1 = r1.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: int field>",
            "$i3 = virtualinvoke r14.<java.lang.Integer: int intValue()>()",
            "if $i3 > 1 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__toString__522668637\\4599.smt2",
        "z3": {
            "memory": 31801344,
            "run_time": 0.5683386325836182,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var138:\r\n  ;;   var138!val!0 var138!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var138!val!0 () var138)\r\n  (declare-fun var138!val!1 () var138)\r\n  ;; cardinality constraint:\r\n  (forall ((x var138)) (or (= x var138!val!0) (= x var138!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var138 () var138\r\n    var138!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3048 () String\r\n    (str.++ var863!1 \"FastDateParser[\" (pattern/-1073810043 var1520)))\r\n  (define-fun var1553 () String\r\n    (str.++ var863!1 \"FastDateParser[\"))\r\n  (define-fun var1986 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var863!1 \"FastDateParser[\" (pattern/-1073810043 var1520) \", \")\r\n          (cast-from-var1307-to-var3400 (locale/-1073810043 var1520)))\r\n        \", \"\r\n        (getID/-1323510388 (timeZone/-1073810043 var1520))\r\n        \"]\"))\r\n  (define-fun var3340 () String\r\n    (str.++ var863!1 \"FastDateParser[\" (pattern/-1073810043 var1520) \", \"))\r\n  (define-fun var2230 () String\r\n    (append/-1031950772\r\n  (str.++ var863!1 \"FastDateParser[\" (pattern/-1073810043 var1520) \", \")\r\n  (cast-from-var1307-to-var3400 (locale/-1073810043 var1520))))\r\n  (define-fun var863 () String\r\n    String-init)\r\n  (define-fun var3523 () String\r\n    (getID/-1323510388 (timeZone/-1073810043 var1520)))\r\n  (define-fun var3340!1 () String\r\n    \"FastDateParser[, \")\r\n  (define-fun var921 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var863!1 \"FastDateParser[\" (pattern/-1073810043 var1520) \", \")\r\n          (cast-from-var1307-to-var3400 (locale/-1073810043 var1520)))\r\n        \", \"\r\n        (getID/-1323510388 (timeZone/-1073810043 var1520))))\r\n  (define-fun var2170 () String\r\n    (pattern/-1073810043 var1520))\r\n  (define-fun var1520 () var138\r\n    var138!val!0)\r\n  (define-fun var3142 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var863!1 \"FastDateParser[\" (pattern/-1073810043 var1520) \", \")\r\n          (cast-from-var1307-to-var3400 (locale/-1073810043 var1520)))\r\n        \", \"))\r\n  (define-fun var431 () var2335\r\n    (timeZone/-1073810043 var1520))\r\n  (define-fun var672 () var1307\r\n    (locale/-1073810043 var1520))\r\n  (define-fun var360 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var863!1 \"FastDateParser[\" (pattern/-1073810043 var1520) \", \")\r\n          (cast-from-var1307-to-var3400 (locale/-1073810043 var1520)))\r\n        \", \"\r\n        (getID/-1323510388 (timeZone/-1073810043 var1520))\r\n        \"]\"))\r\n  (define-fun var921!1 () String\r\n    \", ]\")\r\n  (define-fun var3048!1 () String\r\n    \"FastDateParser[, \")\r\n  (define-fun var3142!1 () String\r\n    \", \")\r\n  (define-fun var2230!1 () String\r\n    \", \")\r\n  (define-fun var1553!1 () String\r\n    \"FastDateParser[\")\r\n  (define-fun var863!1 () String\r\n    \"\")\r\n  (define-fun var863!2 () String\r\n    \"FastDateParser[\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun pattern/-1073810043 ((x!0 var138)) String\r\n    \"\")\r\n  (define-fun locale/-1073810043 ((x!0 var138)) var1307\r\n    var1307!val!0)\r\n  (define-fun cast-from-var1307-to-var3400 ((x!0 var1307)) var3400\r\n    var3400!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3400)) String\r\n    \"\")\r\n  (define-fun timeZone/-1073810043 ((x!0 var138)) var2335\r\n    var2335!val!0)\r\n  (define-fun getID/-1323510388 ((x!0 var2335)) String\r\n    \"\")\r\n)\r\n(error \"line 67 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1671168,
            "run_time": 0.05467653274536133,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var138 is 2\r\n; rep: (as @var138_0 var138)\r\n; rep: (as @var138_1 var138)\r\n; cardinality of var1307 is 1\r\n; rep: (as @var1307_0 var1307)\r\n; cardinality of var3400 is 1\r\n; rep: (as @var3400_0 var3400)\r\n; cardinality of var2335 is 1\r\n; rep: (as @var2335_0 var2335)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun pattern/-1073810043 ((_arg_1 var138)) String \"\")\r\n(define-fun locale/-1073810043 ((BOUND_VARIABLE_1245 var138)) var1307 (as @var1307_0 var1307))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1248 String) (BOUND_VARIABLE_1249 var3400)) String \"\")\r\n(define-fun cast-from-var1307-to-var3400 ((BOUND_VARIABLE_1252 var1307)) var3400 (as @var3400_0 var3400))\r\n(define-fun timeZone/-1073810043 ((BOUND_VARIABLE_1255 var138)) var2335 (as @var2335_0 var2335))\r\n(define-fun getID/-1323510388 ((BOUND_VARIABLE_1258 var2335)) String \"\")\r\n(define-fun null-var138 () var138 (as @var138_0 var138))\r\n(define-fun var1520 () var138 (as @var138_1 var138))\r\n(define-fun var863!1 () String \"\")\r\n(define-fun var863!2 () String \"FastDateParser[\")\r\n(define-fun var1553!1 () String \"FastDateParser[\")\r\n(define-fun var3048!1 () String \"FastDateParser[, \")\r\n(define-fun var3340!1 () String \"FastDateParser[, \")\r\n(define-fun var2230!1 () String \", \")\r\n(define-fun var3142!1 () String \", \")\r\n(define-fun var921!1 () String \", ]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34361344,
            "run_time": 5.556793928146362,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 66 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 67 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 206258176,
            "run_time": 0.9564228057861328,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var138/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser__toString__522668637\\4599.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_39_9 =\r\n     concat(all_39_10, \", \")\r\n   var2230!1 =\r\n     concat(all_36_5, \", \")\r\n   all_36_8 =\r\n     concat(all_36_9, \", \")\r\n   var3048!1 =\r\n     concat(all_30_4, \", \")\r\n   var921!1 =\r\n     concat(all_27_3, \"]\")\r\n   var3142!1 =\r\n     concat(all_21_4, all_21_2)\r\n   var1553!1 =\r\n     concat(\"FastDateParser[\", all_24_3)\r\n   var3340!1 =\r\n     concat(all_33_4, rhs)\r\n   all_33_4 =\r\n     concat(all_33_5, \", \")\r\n   all_27_3 =\r\n     concat(all_21_4, all_21_2)\r\n   all_39_10 =\r\n     concat(\"FastDateParser[\", all_24_3)\r\n   all_36_9 =\r\n     concat(\"FastDateParser[\", all_24_3)\r\n   all_30_4 =\r\n     concat(\"FastDateParser[\", all_24_3)\r\n   all_21_4 =\r\n     concat(all_39_6, \", \")\r\n   all_33_5 =\r\n     concat(\"FastDateParser[\", all_24_3)\r\n\r\n686ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 19,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDateParser",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"FastDateParser[\")",
            "$r2 = r1.<org.apache.commons.lang3.time.FastDateParser: java.lang.String pattern>",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")",
            "$r5 = r1.<org.apache.commons.lang3.time.FastDateParser: java.util.Locale locale>",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5)",
            "$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", \")",
            "$r8 = r1.<org.apache.commons.lang3.time.FastDateParser: java.util.TimeZone timeZone>",
            "$r9 = virtualinvoke $r8.<java.util.TimeZone: java.lang.String getID()>()",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r13"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDatePrinter$StringLiteral__estimateLength__676560006\\3973.smt2",
        "z3": {
            "memory": 17252352,
            "run_time": 0.0759732723236084,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3008:\r\n  ;;   var3008!val!0 var3008!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3008!val!0 () var3008)\r\n  (declare-fun var3008!val!1 () var3008)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3008)) (or (= x var3008!val!0) (= x var3008!val!1)))\r\n  ;; -----------\r\n  (define-fun var1656 () var3008\r\n    var3008!val!0)\r\n  (define-fun var1990 () String\r\n    (value/-356188658 var1656))\r\n  (define-fun var978 () Int\r\n    (str.len (value/-356188658 var1656)))\r\n  (define-fun null-var3008 () var3008\r\n    var3008!val!1)\r\n  (define-fun value/-356188658 ((x!0 var3008)) String\r\n    \"\")\r\n)\r\n(error \"line 19 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1626112,
            "run_time": 0.01575326919555664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3008 is 2\r\n; rep: (as @var3008_0 var3008)\r\n; rep: (as @var3008_1 var3008)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun value/-356188658 ((BOUND_VARIABLE_426 var3008)) String \"\")\r\n(define-fun null-var3008 () var3008 (as @var3008_0 var3008))\r\n(define-fun var1656 () var3008 (as @var3008_1 var3008))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36302848,
            "run_time": 0.07721257209777832,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3008:\n  ;;   var3008!val!0 var3008!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3008!val!0 () var3008)\n  (declare-fun var3008!val!1 () var3008)\n  ;; cardinality constraint:\n  (forall ((x var3008)) (or (= x var3008!val!0) (= x var3008!val!1)))\n  ;; -----------\n  (define-fun var1656 () var3008\n    var3008!val!0)\n  (define-fun var978 () Int\n    (str.len (value/-356188658 var1656)))\n  (define-fun var1990 () String\n    (value/-356188658 var1656))\n  (define-fun null-var3008 () var3008\n    var3008!val!1)\n  (define-fun value/-356188658 ((x!0 var3008)) String\n    \"\")\n)\n(error \"line 19 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132730880,
            "run_time": 0.7462170124053955,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1656 () var3008 var3008!4)\r\n  (define-fun null-var3008 () var3008 var3008!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDatePrinter$StringLiteral",
            "$r1 = r0.<org.apache.commons.lang3.time.FastDatePrinter$StringLiteral: java.lang.String value>",
            "$i0 = virtualinvoke $r1.<java.lang.String: int length()>()",
            "return $i0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy__setCalendar__-1886499951\\3806.smt2",
        "z3": {
            "memory": 31461376,
            "run_time": 0.12162923812866211,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2055:\r\n  ;;   var2055!val!0 var2055!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2055!val!0 () var2055)\r\n  (declare-fun var2055!val!1 () var2055)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2055)) (or (= x var2055!val!0) (= x var2055!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2590:\r\n  ;;   var2590!val!0 var2590!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2590!val!0 () var2590)\r\n  (declare-fun var2590!val!1 () var2590)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2590)) (or (= x var2590!val!0) (= x var2590!val!1)))\r\n  ;; -----------\r\n  ;; universe for var351:\r\n  ;;   var351!val!0 var351!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var351!val!0 () var351)\r\n  (declare-fun var351!val!1 () var351)\r\n  ;; cardinality constraint:\r\n  (forall ((x var351)) (or (= x var351!val!0) (= x var351!val!1)))\r\n  ;; -----------\r\n  (define-fun var149 () var1781\r\n    (locale/-1318375070 var1225))\r\n  (define-fun var1935 () var2055\r\n    var2055!val!0)\r\n  (define-fun var2407 () String\r\n    (toLowerCase/1946809429 var3044 (locale/-1318375070 var1225)))\r\n  (define-fun var1270 () var2896\r\n    (lKeyValues/-1318375070 var1225))\r\n  (define-fun null-var2055 () var2055\r\n    var2055!val!1)\r\n  (define-fun var2531 () Int\r\n    (let ((a!1 (var2896_get/1088891777\r\n             (lKeyValues/-1318375070 var1225)\r\n             (cast-from-String-to-var2074\r\n               (toLowerCase/1946809429 var3044 (locale/-1318375070 var1225))))))\r\n  (cast-from-var2074-to-Int a!1)))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-var2590 () var2590\r\n    var2590!val!1)\r\n  (define-fun var196 () Int\r\n    (field/-1318375070 var1225))\r\n  (define-fun null-var351 () var351\r\n    var351!val!1)\r\n  (define-fun var3591 () Int\r\n    (field/-1318375070 var1225))\r\n  (define-fun var1225 () var2590\r\n    var2590!val!0)\r\n  (define-fun var1798 () Int\r\n    (let ((a!1 (var2896_get/1088891777\r\n             (lKeyValues/-1318375070 var1225)\r\n             (cast-from-String-to-var2074\r\n               (toLowerCase/1946809429 var3044 (locale/-1318375070 var1225))))))\r\n  (intValue/-1815674922 (cast-from-var2074-to-Int a!1))))\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun var3044 () String\r\n    \"!0!\")\r\n  (define-fun var68 () var2074\r\n    (var2896_get/1088891777\r\n  (lKeyValues/-1318375070 var1225)\r\n  (cast-from-String-to-var2074\r\n    (toLowerCase/1946809429 var3044 (locale/-1318375070 var1225)))))\r\n  (define-fun var3779 () var351\r\n    var351!val!0)\r\n  (define-fun var3591!1 () Int\r\n    0)\r\n  (define-fun var1798!1 () Int\r\n    0)\r\n  (define-fun var3779!1 () var351\r\n    var351!val!0)\r\n  (define-fun field/-1318375070 ((x!0 var2590)) Int\r\n    2)\r\n  (define-fun lKeyValues/-1318375070 ((x!0 var2590)) var2896\r\n    var2896!val!0)\r\n  (define-fun locale/-1318375070 ((x!0 var2590)) var1781\r\n    var1781!val!0)\r\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var1781)) String\r\n    \"\")\r\n  (define-fun cast-from-String-to-var2074 ((x!0 String)) var2074\r\n    var2074!val!0)\r\n  (define-fun var2896_get/1088891777 ((x!0 var2896) (x!1 var2074)) var2074\r\n    var2074!val!0)\r\n  (define-fun cast-from-var2074-to-Int ((x!0 var2074)) Int\r\n    0)\r\n  (define-fun intValue/-1815674922 ((x!0 Int)) Int\r\n    0)\r\n  (define-fun set/-1736220299 ((x!0 var351) (x!1 Int) (x!2 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 60 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1617920,
            "run_time": 0.05887913703918457,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2590 is 2\r\n; rep: (as @var2590_0 var2590)\r\n; rep: (as @var2590_1 var2590)\r\n; cardinality of var2055 is 2\r\n; rep: (as @var2055_0 var2055)\r\n; rep: (as @var2055_1 var2055)\r\n; cardinality of var351 is 2\r\n; rep: (as @var351_0 var351)\r\n; rep: (as @var351_1 var351)\r\n; cardinality of var3261 is 1\r\n; rep: (as @var3261_0 var3261)\r\n; cardinality of var1781 is 1\r\n; rep: (as @var1781_0 var1781)\r\n; cardinality of var2896 is 1\r\n; rep: (as @var2896_0 var2896)\r\n; cardinality of var2074 is 2\r\n; rep: (as @var2074_0 var2074)\r\n; rep: (as @var2074_1 var2074)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun locale/-1318375070 ((_arg_1 var2590)) var1781 (as @var1781_0 var1781))\r\n(define-fun toLowerCase/1946809429 ((_arg_1 String) (_arg_2 var1781)) String \"B\")\r\n(define-fun lKeyValues/-1318375070 ((_arg_1 var2590)) var2896 (as @var2896_0 var2896))\r\n(define-fun var2896_get/1088891777 ((_arg_1 var2896) (_arg_2 var2074)) var2074 (as @var2074_1 var2074))\r\n(define-fun cast-from-String-to-var2074 ((_arg_1 String)) var2074 (as @var2074_0 var2074))\r\n(define-fun cast-from-var2074-to-Int ((_arg_1 var2074)) Int 0)\r\n(define-fun field/-1318375070 ((_arg_1 var2590)) Int 0)\r\n(define-fun intValue/-1815674922 ((BOUND_VARIABLE_646 Int)) Int 0)\r\n(define-fun set/-1736220299 ((BOUND_VARIABLE_649 var351) (BOUND_VARIABLE_650 Int) (BOUND_VARIABLE_651 Int)) void (as @void_0 void))\r\n(define-fun null-var2590 () var2590 (as @var2590_0 var2590))\r\n(define-fun null-var2055 () var2055 (as @var2055_0 var2055))\r\n(define-fun null-var351 () var351 (as @var351_0 var351))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1225 () var2590 (as @var2590_1 var2590))\r\n(define-fun var1935 () var2055 (as @var2055_1 var2055))\r\n(define-fun var3779 () var351 (as @var351_1 var351))\r\n(define-fun var3044 () String \"\")\r\n(define-fun var3779!1 () var351 (as @var351_0 var351))\r\n(define-fun var3591!1 () Int 0)\r\n(define-fun var1798!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37101568,
            "run_time": 0.050135135650634766,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2055:\n  ;;   var2055!val!0 var2055!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2055!val!0 () var2055)\n  (declare-fun var2055!val!1 () var2055)\n  ;; cardinality constraint:\n  (forall ((x var2055)) (or (= x var2055!val!0) (= x var2055!val!1)))\n  ;; -----------\n  ;; universe for var2590:\n  ;;   var2590!val!0 var2590!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2590!val!0 () var2590)\n  (declare-fun var2590!val!1 () var2590)\n  ;; cardinality constraint:\n  (forall ((x var2590)) (or (= x var2590!val!0) (= x var2590!val!1)))\n  ;; -----------\n  ;; universe for var351:\n  ;;   var351!val!0 var351!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var351!val!0 () var351)\n  (declare-fun var351!val!1 () var351)\n  ;; cardinality constraint:\n  (forall ((x var351)) (or (= x var351!val!0) (= x var351!val!1)))\n  ;; -----------\n  (define-fun var2407 () String\n    (toLowerCase/1946809429 var3044 (locale/-1318375070 var1225)))\n  (define-fun var1935 () var2055\n    var2055!val!0)\n  (define-fun var3044 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2531 () Int\n    (let ((a!1 (var2896_get/1088891777\n             (lKeyValues/-1318375070 var1225)\n             (cast-from-String-to-var2074\n               (toLowerCase/1946809429 var3044 (locale/-1318375070 var1225))))))\n  (cast-from-var2074-to-Int a!1)))\n  (define-fun var1270 () var2896\n    (lKeyValues/-1318375070 var1225))\n  (define-fun null-Int () Int\n    1)\n  (define-fun null-var2055 () var2055\n    var2055!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var196 () Int\n    (field/-1318375070 var1225))\n  (define-fun var1798 () Int\n    (let ((a!1 (var2896_get/1088891777\n             (lKeyValues/-1318375070 var1225)\n             (cast-from-String-to-var2074\n               (toLowerCase/1946809429 var3044 (locale/-1318375070 var1225))))))\n  (intValue/-1815674922 (cast-from-var2074-to-Int a!1))))\n  (define-fun null-var2590 () var2590\n    var2590!val!1)\n  (define-fun var68 () var2074\n    (var2896_get/1088891777\n  (lKeyValues/-1318375070 var1225)\n  (cast-from-String-to-var2074\n    (toLowerCase/1946809429 var3044 (locale/-1318375070 var1225)))))\n  (define-fun null-var351 () var351\n    var351!val!1)\n  (define-fun var3779 () var351\n    var351!val!0)\n  (define-fun var1225 () var2590\n    var2590!val!0)\n  (define-fun var149 () var1781\n    (locale/-1318375070 var1225))\n  (define-fun var3591 () Int\n    (field/-1318375070 var1225))\n  (define-fun var3591!1 () Int\n    0)\n  (define-fun var1798!1 () Int\n    0)\n  (define-fun var3779!1 () var351\n    var351!val!0)\n  (define-fun field/-1318375070 ((x!0 var2590)) Int\n    3)\n  (define-fun lKeyValues/-1318375070 ((x!0 var2590)) var2896\n    var2896!val!0)\n  (define-fun locale/-1318375070 ((x!0 var2590)) var1781\n    var1781!val!0)\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var1781)) String\n    \"\")\n  (define-fun cast-from-String-to-var2074 ((x!0 String)) var2074\n    var2074!val!0)\n  (define-fun var2896_get/1088891777 ((x!0 var2896) (x!1 var2074)) var2074\n    var2074!val!0)\n  (define-fun cast-from-var2074-to-Int ((x!0 var2074)) Int\n    0)\n  (define-fun intValue/-1815674922 ((x!0 Int)) Int\n    0)\n  (define-fun set/-1736220299 ((x!0 var351) (x!1 Int) (x!2 Int)) void\n    void!val!0)\n)\n(error \"line 60 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154865664,
            "run_time": 0.8664090633392334,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3044 () String \"\\u{0}\")\r\n  (define-fun var3779 () var351 var351!30)\r\n  (define-fun var1935 () var2055 var2055!28)\r\n  (define-fun var1225 () var2590 var2590!26)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var351 () var351 var351!24)\r\n  (define-fun null-var2055 () var2055 var2055!22)\r\n  (define-fun null-var2590 () var2590 var2590!20)\r\n  (define-fun var2074!62 () var2074 (cast-from-String-to-var2074 \"\\u{1}\"))\r\n  (define-fun var2074!64 () var2074 (var2896_get/1088891777 var2896!56 var2074!62))\r\n  (define-fun var2896!56 () var2896 (lKeyValues/-1318375070 var2590!26))\r\n  (define-fun var1781!58 () var1781 (locale/-1318375070 var2590!26))\r\n  (define-fun field/-1318375070 ((x!0 var2590)) Int (ite (= x!0 var2590!26) 27 0))\r\n  (define-fun cast-from-var2074-to-Int ((x!0 var2074)) Int (ite (= x!0 var2074!64) 33 0))\r\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var1781)) String (ite (and (= x!0 \"\\u{0}\") (= x!1 var1781!58)) \"\\u{1}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy",
            "r13 := @parameter0: org.apache.commons.lang3.time.FastDateParser",
            "r6 := @parameter1: java.util.Calendar",
            "r0 := @parameter2: java.lang.String",
            "$r2 = r1.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: java.util.Locale locale>",
            "r3 = virtualinvoke r0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2)",
            "$r4 = r1.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: java.util.Map lKeyValues>",
            "$r5 = interfaceinvoke $r4.<java.util.Map: java.lang.Object get(java.lang.Object)>(r3)",
            "r14 = (java.lang.Integer) $r5",
            "if r14 != null goto $i0 = r1.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: int field>",
            "$i0 = r1.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: int field>",
            "if 9 != $i0 goto $i1 = r1.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: int field>",
            "$i1 = r1.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: int field>",
            "$i2 = virtualinvoke r14.<java.lang.Integer: int intValue()>()",
            "virtualinvoke r6.<java.util.Calendar: void set(int,int)>($i1, $i2)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.exception.DefaultExceptionContext__getFormattedExceptionMessage__-2037232824\\2189.smt2",
        "z3": {
            "memory": 31473664,
            "run_time": 0.15674400329589844,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 37 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10493952,
            "run_time": 0.540579080581665,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35672064,
            "run_time": 0.07749819755554199,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 37 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153845760,
            "run_time": 0.9264013767242432,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.apache.commons.lang3.exception.DefaultExceptionContext",
            "r1 := @parameter0: java.lang.String",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>(int)>(256)",
            "if r1 == null goto $r3 = r2.<org.apache.commons.lang3.exception.DefaultExceptionContext: java.util.List contextValues>",
            "$r3 = r2.<org.apache.commons.lang3.exception.DefaultExceptionContext: java.util.List contextValues>",
            "$z0 = interfaceinvoke $r3.<java.util.List: boolean isEmpty()>()",
            "if $z0 != 0 goto $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule__estimateLength__1728455084\\4045.smt2",
        "z3": {
            "memory": 30519296,
            "run_time": 0.10264754295349121,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3119:\r\n  ;;   var3119!val!1 var3119!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3119!val!1 () var3119)\r\n  (declare-fun var3119!val!0 () var3119)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3119)) (or (= x var3119!val!1) (= x var3119!val!0)))\r\n  ;; -----------\r\n  (define-fun var594 () Int\r\n    (var950_max/1360571700\r\n  (str.len (standard/714102448 var3930))\r\n  (str.len (daylight/714102448 var3930))))\r\n  (define-fun var3532 () String\r\n    (standard/714102448 var3930))\r\n  (define-fun var3930 () var3119\r\n    var3119!val!0)\r\n  (define-fun var687 () Int\r\n    (str.len (standard/714102448 var3930)))\r\n  (define-fun var2083 () String\r\n    (daylight/714102448 var3930))\r\n  (define-fun null-var3119 () var3119\r\n    var3119!val!1)\r\n  (define-fun var2372 () Int\r\n    (str.len (daylight/714102448 var3930)))\r\n  (define-fun standard/714102448 ((x!0 var3119)) String\r\n    \"\")\r\n  (define-fun daylight/714102448 ((x!0 var3119)) String\r\n    \"\")\r\n  (define-fun var950_max/1360571700 ((x!0 Int) (x!1 Int)) Int\r\n    0)\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.015039205551147461,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3119 is 2\r\n; rep: (as @var3119_0 var3119)\r\n; rep: (as @var3119_1 var3119)\r\n; cardinality of var950 is 1\r\n; rep: (as @var950_0 var950)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun standard/714102448 ((BOUND_VARIABLE_451 var3119)) String \"\")\r\n(define-fun daylight/714102448 ((BOUND_VARIABLE_454 var3119)) String \"\")\r\n(define-fun var950_max/1360571700 ((BOUND_VARIABLE_457 Int) (BOUND_VARIABLE_458 Int)) Int 0)\r\n(define-fun null-var3119 () var3119 (as @var3119_0 var3119))\r\n(define-fun var3930 () var3119 (as @var3119_1 var3119))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36315136,
            "run_time": 0.07689666748046875,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3119:\n  ;;   var3119!val!1 var3119!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3119!val!1 () var3119)\n  (declare-fun var3119!val!0 () var3119)\n  ;; cardinality constraint:\n  (forall ((x var3119)) (or (= x var3119!val!1) (= x var3119!val!0)))\n  ;; -----------\n  (define-fun var2083 () String\n    (daylight/714102448 var3930))\n  (define-fun var3930 () var3119\n    var3119!val!0)\n  (define-fun var2372 () Int\n    (str.len (daylight/714102448 var3930)))\n  (define-fun var3532 () String\n    (standard/714102448 var3930))\n  (define-fun var594 () Int\n    (var950_max/1360571700\n  (str.len (standard/714102448 var3930))\n  (str.len (daylight/714102448 var3930))))\n  (define-fun null-var3119 () var3119\n    var3119!val!1)\n  (define-fun var687 () Int\n    (str.len (standard/714102448 var3930)))\n  (define-fun standard/714102448 ((x!0 var3119)) String\n    \"\")\n  (define-fun daylight/714102448 ((x!0 var3119)) String\n    \"\")\n  (define-fun var950_max/1360571700 ((x!0 Int) (x!1 Int)) Int\n    0)\n)\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140935168,
            "run_time": 0.6789555549621582,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3930 () var3119 var3119!4)\r\n  (define-fun null-var3119 () var3119 var3119!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule",
            "$r1 = r0.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule: java.lang.String standard>",
            "$i1 = virtualinvoke $r1.<java.lang.String: int length()>()",
            "$r2 = r0.<org.apache.commons.lang3.time.FastDatePrinter$TimeZoneNameRule: java.lang.String daylight>",
            "$i0 = virtualinvoke $r2.<java.lang.String: int length()>()",
            "$i2 = staticinvoke <java.lang.Math: int max(int,int)>($i1, $i0)",
            "return $i2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDatePrinter__applyRulesToString__-1625938071\\4205.smt2",
        "z3": {
            "memory": 31408128,
            "run_time": 0.13803672790527344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2328:\r\n  ;;   var2328!val!1 var2328!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2328!val!1 () var2328)\r\n  (declare-fun var2328!val!0 () var2328)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2328)) (or (= x var2328!val!1) (= x var2328!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3679:\r\n  ;;   var3679!val!1 var3679!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3679!val!1 () var3679)\r\n  (declare-fun var3679!val!0 () var3679)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3679)) (or (= x var3679!val!1) (= x var3679!val!0)))\r\n  ;; -----------\r\n  (define-fun var1727 () var3679\r\n    var3679!val!0)\r\n  (define-fun null-var3679 () var3679\r\n    var3679!val!1)\r\n  (define-fun var327 () Int\r\n    (maxLengthEstimate/1549876084 var1761))\r\n  (define-fun var630 () var3791\r\n    (applyRules/-1090986906 var1761 var1727 (cast-from-String-to-var3791 var2211!1)))\r\n  (define-fun var2211 () String\r\n    String-init)\r\n  (define-fun null-var2328 () var2328\r\n    var2328!val!1)\r\n  (define-fun var3075 () String\r\n    (cast-from-var3791-to-String\r\n  (applyRules/-1090986906\r\n    var1761\r\n    var1727\r\n    (cast-from-String-to-var3791 var2211!1))))\r\n  (define-fun var1761 () var2328\r\n    var2328!val!0)\r\n  (define-fun var3577 () String\r\n    (cast-from-var3791-to-String\r\n  (applyRules/-1090986906\r\n    var1761\r\n    var1727\r\n    (cast-from-String-to-var3791 var2211!1))))\r\n  (define-fun var327!1 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2211!1 () String\r\n    \"\")\r\n  (define-fun maxLengthEstimate/1549876084 ((x!0 var2328)) Int\r\n    0)\r\n  (define-fun cast-from-var3791-to-String ((x!0 var3791)) String\r\n    \"\")\r\n  (define-fun cast-from-String-to-var3791 ((x!0 String)) var3791\r\n    var3791!val!0)\r\n  (define-fun applyRules/-1090986906 ((x!0 var2328) (x!1 var3679) (x!2 var3791)) var3791\r\n    var3791!val!0)\r\n  (define-fun <init>/543593434 ((x!0 String) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.015969514846801758,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2328 is 2\r\n; rep: (as @var2328_0 var2328)\r\n; rep: (as @var2328_1 var2328)\r\n; cardinality of var3679 is 2\r\n; rep: (as @var3679_0 var3679)\r\n; rep: (as @var3679_1 var3679)\r\n; cardinality of var3791 is 1\r\n; rep: (as @var3791_0 var3791)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun maxLengthEstimate/1549876084 ((BOUND_VARIABLE_468 var2328)) Int 0)\r\n(define-fun <init>/543593434 ((BOUND_VARIABLE_471 String) (BOUND_VARIABLE_472 Int)) void (as @void_0 void))\r\n(define-fun applyRules/-1090986906 ((BOUND_VARIABLE_475 var2328) (BOUND_VARIABLE_476 var3679) (BOUND_VARIABLE_477 var3791)) var3791 (as @var3791_0 var3791))\r\n(define-fun cast-from-String-to-var3791 ((BOUND_VARIABLE_480 String)) var3791 (as @var3791_0 var3791))\r\n(define-fun cast-from-var3791-to-String ((BOUND_VARIABLE_483 var3791)) String \"\")\r\n(define-fun null-var2328 () var2328 (as @var2328_0 var2328))\r\n(define-fun null-var3679 () var3679 (as @var3679_0 var3679))\r\n(define-fun var1761 () var2328 (as @var2328_1 var2328))\r\n(define-fun var1727 () var3679 (as @var3679_1 var3679))\r\n(define-fun var2211!1 () String \"\")\r\n(define-fun var327!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36167680,
            "run_time": 0.07816529273986816,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2328:\n  ;;   var2328!val!1 var2328!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2328!val!1 () var2328)\n  (declare-fun var2328!val!0 () var2328)\n  ;; cardinality constraint:\n  (forall ((x var2328)) (or (= x var2328!val!1) (= x var2328!val!0)))\n  ;; -----------\n  ;; universe for var3679:\n  ;;   var3679!val!1 var3679!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3679!val!1 () var3679)\n  (declare-fun var3679!val!0 () var3679)\n  ;; cardinality constraint:\n  (forall ((x var3679)) (or (= x var3679!val!1) (= x var3679!val!0)))\n  ;; -----------\n  (define-fun var1727 () var3679\n    var3679!val!0)\n  (define-fun null-var3679 () var3679\n    var3679!val!1)\n  (define-fun var2211 () String\n    String-init)\n  (define-fun var3075 () String\n    (cast-from-var3791-to-String\n  (applyRules/-1090986906\n    var1761\n    var1727\n    (cast-from-String-to-var3791 var2211!1))))\n  (define-fun var630 () var3791\n    (applyRules/-1090986906 var1761 var1727 (cast-from-String-to-var3791 var2211!1)))\n  (define-fun null-var2328 () var2328\n    var2328!val!1)\n  (define-fun var3577 () String\n    (cast-from-var3791-to-String\n  (applyRules/-1090986906\n    var1761\n    var1727\n    (cast-from-String-to-var3791 var2211!1))))\n  (define-fun var327 () Int\n    (maxLengthEstimate/1549876084 var1761))\n  (define-fun var1761 () var2328\n    var2328!val!0)\n  (define-fun var327!1 () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2211!1 () String\n    \"\")\n  (define-fun maxLengthEstimate/1549876084 ((x!0 var2328)) Int\n    0)\n  (define-fun cast-from-var3791-to-String ((x!0 var3791)) String\n    \"\")\n  (define-fun cast-from-String-to-var3791 ((x!0 String)) var3791\n    var3791!val!0)\n  (define-fun applyRules/-1090986906 ((x!0 var2328) (x!1 var3679) (x!2 var3791)) var3791\n    var3791!val!0)\n  (define-fun <init>/543593434 ((x!0 String) (x!1 Int)) void\n    void!val!0)\n)\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 157552640,
            "run_time": 0.7267124652862549,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1727 () var3679 var3679!8)\r\n  (define-fun var1761 () var2328 var2328!6)\r\n  (define-fun null-var3679 () var3679 var3679!4)\r\n  (define-fun null-var2328 () var2328 var2328!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDatePrinter",
            "r1 := @parameter0: java.util.Calendar",
            "$r2 = new java.lang.StringBuilder",
            "$i0 = r0.<org.apache.commons.lang3.time.FastDatePrinter: int maxLengthEstimate>",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>(int)>($i0)",
            "$r3 = specialinvoke r0.<org.apache.commons.lang3.time.FastDatePrinter: java.lang.Appendable applyRules(java.util.Calendar,java.lang.Appendable)>(r1, $r2)",
            "$r4 = (java.lang.StringBuilder) $r3",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.exception.ExceptionUtils__getMessage__672744981\\2231.smt2",
        "z3": {
            "memory": 31076352,
            "run_time": 0.07560205459594727,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2847:\r\n  ;;   var2847!val!0 var2847!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2847!val!0 () var2847)\r\n  (declare-fun var2847!val!1 () var2847)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2847)) (or (= x var2847!val!0) (= x var2847!val!1)))\r\n  ;; -----------\r\n  (define-fun var2786 () String\r\n    String-init)\r\n  (define-fun var1913 () String\r\n    (var2935_getShortClassName/-731246219\r\n  (cast-from-var2847-to-var517 var2740)\r\n  null-String))\r\n  (define-fun var2740 () var2847\r\n    var2847!val!0)\r\n  (define-fun var2697 () String\r\n    (str.++ var2786!1\r\n        (var2935_getShortClassName/-731246219\r\n          (cast-from-var2847-to-var517 var2740)\r\n          null-String)\r\n        \": \"))\r\n  (define-fun var3771 () String\r\n    (str.++ var2786!1\r\n        (var2935_getShortClassName/-731246219\r\n          (cast-from-var2847-to-var517 var2740)\r\n          null-String)))\r\n  (define-fun var1252 () String\r\n    (getMessage/849299655 var2740))\r\n  (define-fun var3997 () String\r\n    (var2538_defaultString/-1973478738 (getMessage/849299655 var2740)))\r\n  (define-fun null-var2847 () var2847\r\n    var2847!val!1)\r\n  (define-fun var3080 () String\r\n    (str.++ var2786!1\r\n        (var2935_getShortClassName/-731246219\r\n          (cast-from-var2847-to-var517 var2740)\r\n          null-String)\r\n        \": \"\r\n        (var2538_defaultString/-1973478738 (getMessage/849299655 var2740))))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var481 () String\r\n    (str.++ var2786!1\r\n        (var2935_getShortClassName/-731246219\r\n          (cast-from-var2847-to-var517 var2740)\r\n          null-String)\r\n        \": \"\r\n        (var2538_defaultString/-1973478738 (getMessage/849299655 var2740))))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2786!2 () String\r\n    \"\")\r\n  (define-fun var3771!1 () String\r\n    \": \")\r\n  (define-fun var2786!1 () String\r\n    \"\")\r\n  (define-fun var2697!1 () String\r\n    \": \")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var2847-to-var517 ((x!0 var2847)) var517\r\n    var517!val!0)\r\n  (define-fun var2935_getShortClassName/-731246219 ((x!0 var517) (x!1 String)) String\r\n    \"\")\r\n  (define-fun getMessage/849299655 ((x!0 var2847)) String\r\n    \"\")\r\n  (define-fun var2538_defaultString/-1973478738 ((x!0 String)) String\r\n    \"\")\r\n)\r\n(error \"line 52 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 3100672,
            "run_time": 0.0610501766204834,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2847 is 2\r\n; rep: (as @var2847_0 var2847)\r\n; rep: (as @var2847_1 var2847)\r\n; cardinality of var2935 is 1\r\n; rep: (as @var2935_0 var2935)\r\n; cardinality of var517 is 1\r\n; rep: (as @var517_0 var517)\r\n; cardinality of var443 is 1\r\n; rep: (as @var443_0 var443)\r\n; cardinality of var2538 is 1\r\n; rep: (as @var2538_0 var2538)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2935_getShortClassName/-731246219 ((BOUND_VARIABLE_555 var517) (BOUND_VARIABLE_556 String)) String \"\")\r\n(define-fun cast-from-var2847-to-var517 ((BOUND_VARIABLE_559 var2847)) var517 (as @var517_0 var517))\r\n(define-fun String-init () String \"\")\r\n(define-fun getMessage/849299655 ((BOUND_VARIABLE_562 var2847)) String \"\")\r\n(define-fun var2538_defaultString/-1973478738 ((BOUND_VARIABLE_565 String)) String \"\")\r\n(define-fun null-var2847 () var2847 (as @var2847_0 var2847))\r\n(define-fun null-String () String \"\")\r\n(define-fun var2740 () var2847 (as @var2847_1 var2847))\r\n(define-fun var2786!1 () String \"\")\r\n(define-fun var2786!2 () String \"\")\r\n(define-fun var3771!1 () String \": \")\r\n(define-fun var2697!1 () String \": \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35667968,
            "run_time": 0.07898569107055664,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2847:\n  ;;   var2847!val!0 var2847!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2847!val!0 () var2847)\n  (declare-fun var2847!val!1 () var2847)\n  ;; cardinality constraint:\n  (forall ((x var2847)) (or (= x var2847!val!0) (= x var2847!val!1)))\n  ;; -----------\n  (define-fun var3771 () String\n    (str.++ var2786!1\n        (var2935_getShortClassName/-731246219\n          (cast-from-var2847-to-var517 var2740)\n          null-String)))\n  (define-fun var2697 () String\n    (str.++ var2786!1\n        (var2935_getShortClassName/-731246219\n          (cast-from-var2847-to-var517 var2740)\n          null-String)\n        \": \"))\n  (define-fun var2740 () var2847\n    var2847!val!0)\n  (define-fun var1252 () String\n    (getMessage/849299655 var2740))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var2847 () var2847\n    var2847!val!1)\n  (define-fun var481 () String\n    (str.++ var2786!1\n        (var2935_getShortClassName/-731246219\n          (cast-from-var2847-to-var517 var2740)\n          null-String)\n        \": \"\n        (var2538_defaultString/-1973478738 (getMessage/849299655 var2740))))\n  (define-fun var3080 () String\n    (str.++ var2786!1\n        (var2935_getShortClassName/-731246219\n          (cast-from-var2847-to-var517 var2740)\n          null-String)\n        \": \"\n        (var2538_defaultString/-1973478738 (getMessage/849299655 var2740))))\n  (define-fun var3997 () String\n    (var2538_defaultString/-1973478738 (getMessage/849299655 var2740)))\n  (define-fun var2786 () String\n    String-init)\n  (define-fun var1913 () String\n    (var2935_getShortClassName/-731246219\n  (cast-from-var2847-to-var517 var2740)\n  null-String))\n  (define-fun null-String () String\n    \"\")\n  (define-fun var2786!2 () String\n    \"\")\n  (define-fun var3771!1 () String\n    \": \")\n  (define-fun var2786!1 () String\n    \"\")\n  (define-fun var2697!1 () String\n    \": \")\n  (define-fun String-init () String\n    \"\")\n  (define-fun cast-from-var2847-to-var517 ((x!0 var2847)) var517\n    var517!val!0)\n  (define-fun var2935_getShortClassName/-731246219 ((x!0 var517) (x!1 String)) String\n    \"\")\n  (define-fun getMessage/849299655 ((x!0 var2847)) String\n    \"\")\n  (define-fun var2538_defaultString/-1973478738 ((x!0 String)) String\n    \"\")\n)\n(error \"line 52 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176037888,
            "run_time": 0.8986937999725342,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2847/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.exception.ExceptionUtils__getMessage__672744981\\2231.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2697!1 =\r\n     concat(all_26_6, all_26_4)\r\n   var3771!1 =\r\n     concat(var2786!2, \": \")\r\n   all_26_6 =\r\n     concat(var2786!2, \": \")\r\n\r\n648ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Throwable",
            "if r0 != null goto r1 = staticinvoke <org.apache.commons.lang3.ClassUtils: java.lang.String getShortClassName(java.lang.Object,java.lang.String)>(r0, null)",
            "r1 = staticinvoke <org.apache.commons.lang3.ClassUtils: java.lang.String getShortClassName(java.lang.Object,java.lang.String)>(r0, null)",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")",
            "$r4 = virtualinvoke r0.<java.lang.Throwable: java.lang.String getMessage()>()",
            "$r5 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String defaultString(java.lang.String)>($r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.JavaVersion__toFloatVersion__496705396\\291.smt2",
        "z3": {
            "memory": 26021888,
            "run_time": 0.337247371673584,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1991 () Float32\r\n    (var987_toFloat/-1162720090 var1053 ((_ to_fp 8 24) #xbf800000)))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3819 () Bool\r\n    (str.contains var1053 \".\"))\r\n  (define-fun var1053 () String\r\n    \"\")\r\n  (define-fun var987_toFloat/-1162720090 ((x!0 String) (x!1 Float32)) Float32\r\n    (_ NaN 8 24))\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12255232,
            "run_time": 0.46578383445739746,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1020 is 1\r\n; rep: (as @var1020_0 var1020)\r\n; cardinality of var987 is 1\r\n; rep: (as @var987_0 var987)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var987_toFloat/-1162720090 ((BOUND_VARIABLE_587 String) (BOUND_VARIABLE_588 (_ FloatingPoint 8 24))) (_ FloatingPoint 8 24) (fp #b0 #b00000000 #b00000000000000000000000))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1053 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37806080,
            "run_time": 0.07676124572753906,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1991 () Float32\n    (var987_toFloat/-1162720090 var1053 ((_ to_fp 8 24) #xbf800000)))\n  (define-fun var3819 () Bool\n    (str.contains var1053 \".\"))\n  (define-fun null-String () String\n    \"\")\n  (define-fun var1053 () String\n    \"/\")\n  (define-fun var987_toFloat/-1162720090 ((x!0 String) (x!1 Float32)) Float32\n    (_ NaN 8 24))\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 127610880,
            "run_time": 0.5093700885772705,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.JavaVersion__toFloatVersion__496705396\\291.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n289ms\r\nSort Float32 not declared\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: boolean contains(java.lang.CharSequence)>"
        ],
        "api_count": {
            "<java.lang.String: boolean contains(java.lang.CharSequence)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean contains(java.lang.CharSequence)>(\".\")",
            "if $z0 != 0 goto r1 = virtualinvoke r0.<java.lang.String: java.lang.String[] split(java.lang.String)>(\"\\\\.\")",
            "$f1 = staticinvoke <org.apache.commons.lang3.math.NumberUtils: float toFloat(java.lang.String,float)>(r0, -1.0F)",
            "return $f1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.LocaleUtils__lambda$countriesByLanguage$0__-1227522548\\614.smt2",
        "z3": {
            "memory": 28745728,
            "run_time": 0.06020617485046387,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var406:\r\n  ;;   var406!val!0 var406!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var406!val!0 () var406)\r\n  (declare-fun var406!val!1 () var406)\r\n  ;; cardinality constraint:\r\n  (forall ((x var406)) (or (= x var406!val!0) (= x var406!val!1)))\r\n  ;; -----------\r\n  (define-fun var3482 () Bool\r\n    (= var2604 (getLanguage/1066037614 var2744)))\r\n  (define-fun var3060 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var948 () String\r\n    (getLanguage/1066037614 var2744))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2604 () String\r\n    \"!0!\")\r\n  (define-fun null-var406 () var406\r\n    var406!val!1)\r\n  (define-fun var2744 () var406\r\n    var406!val!0)\r\n  (define-fun getLanguage/1066037614 ((x!0 var406)) String\r\n    \"!2!\")\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1646592,
            "run_time": 0.0779867172241211,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2261 is 1\r\n; rep: (as @var2261_0 var2261)\r\n; cardinality of var406 is 2\r\n; rep: (as @var406_0 var406)\r\n; rep: (as @var406_1 var406)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getLanguage/1066037614 ((_arg_1 var406)) String \"A\")\r\n(define-fun null-String () String \"B\")\r\n(define-fun null-var406 () var406 (as @var406_0 var406))\r\n(define-fun var2604 () String \"\")\r\n(define-fun var2744 () var406 (as @var406_1 var406))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35753984,
            "run_time": 0.07755255699157715,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 26 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 149725184,
            "run_time": 0.6813859939575195,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2744 () var406 var406!4)\r\n  (define-fun var2604 () String \"\\u{0}\")\r\n  (define-fun null-var406 () var406 var406!2)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun getLanguage/1066037614 ((x!0 var406)) String (ite (= x!0 var406!4) \"\\u{1}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.util.Locale",
            "$r2 = virtualinvoke r1.<java.util.Locale: java.lang.String getLanguage()>()",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>($r2)",
            "if $z0 == 0 goto $z3 = 0",
            "$z3 = 0",
            "return $z3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$PatternStrategy__parse__-74140174\\3918.smt2",
        "z3": {
            "memory": 32002048,
            "run_time": 60.04496479034424,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11968512,
            "run_time": 3.7877254486083984,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var207 is 2\r\n; rep: (as @var207_0 var207)\r\n; rep: (as @var207_1 var207)\r\n; cardinality of var285 is 2\r\n; rep: (as @var285_0 var285)\r\n; rep: (as @var285_1 var285)\r\n; cardinality of var3834 is 2\r\n; rep: (as @var3834_0 var3834)\r\n; rep: (as @var3834_1 var3834)\r\n; cardinality of var2420 is 1\r\n; rep: (as @var2420_0 var2420)\r\n; cardinality of var803 is 2\r\n; rep: (as @var803_0 var803)\r\n; rep: (as @var803_1 var803)\r\n; cardinality of var2491 is 1\r\n; rep: (as @var2491_0 var2491)\r\n; cardinality of var1922 is 1\r\n; rep: (as @var1922_0 var1922)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun pattern/443652580 ((_arg_1 var207)) var2491 (as @var2491_0 var2491))\r\n(define-fun getIndex/-2136393185 ((_arg_1 var803)) Int 0)\r\n(define-fun matcher/468719934 ((_arg_1 var2491) (_arg_2 String)) var1922 (as @var1922_0 var1922))\r\n(define-fun lookingAt/-1645860844 ((_arg_1 var1922)) Bool true)\r\n(define-fun end/-952472175 ((BOUND_VARIABLE_786 var1922) (BOUND_VARIABLE_787 Int)) Int 0)\r\n(define-fun setIndex/-453939609 ((BOUND_VARIABLE_790 var803) (BOUND_VARIABLE_791 Int)) void (as @void_0 void))\r\n(define-fun group/-653887691 ((BOUND_VARIABLE_794 var1922) (BOUND_VARIABLE_795 Int)) String \"\")\r\n(define-fun setCalendar/1778664015 ((BOUND_VARIABLE_798 var207) (BOUND_VARIABLE_799 var285) (BOUND_VARIABLE_800 var3834) (BOUND_VARIABLE_801 String)) void (as @void_0 void))\r\n(define-fun null-var207 () var207 (as @var207_0 var207))\r\n(define-fun null-var285 () var285 (as @var285_0 var285))\r\n(define-fun null-var3834 () var3834 (as @var3834_0 var3834))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var803 () var803 (as @var803_0 var803))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2505 () var207 (as @var207_1 var207))\r\n(define-fun var2209 () var285 (as @var285_1 var285))\r\n(define-fun var1484 () var3834 (as @var3834_1 var3834))\r\n(define-fun var3299 () String \"\")\r\n(define-fun var968 () var803 (as @var803_1 var803))\r\n(define-fun var1967 () Int 0)\r\n(define-fun var968!1 () var803 (as @var803_0 var803))\r\n(define-fun var2883!1 () Int 0)\r\n(define-fun var2505!1 () var207 (as @var207_0 var207))\r\n(define-fun var2209!1 () var285 (as @var285_0 var285))\r\n(define-fun var1484!1 () var3834 (as @var3834_0 var3834))\r\n(define-fun var1800!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 165462016,
            "run_time": 60.00914931297302,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 178176000,
            "run_time": 0.7953298091888428,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var803/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser$PatternStrategy__parse__-74140174\\3918.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3299 =\r\n     concat(all_33_5, all_30_2)\r\n\r\n568ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.String: java.lang.String substring(int)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String substring(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser$PatternStrategy",
            "r6 := @parameter0: org.apache.commons.lang3.time.FastDateParser",
            "r7 := @parameter1: java.util.Calendar",
            "r1 := @parameter2: java.lang.String",
            "r2 := @parameter3: java.text.ParsePosition",
            "i5 := @parameter4: int",
            "$r3 = r0.<org.apache.commons.lang3.time.FastDateParser$PatternStrategy: java.util.regex.Pattern pattern>",
            "$i0 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()",
            "$r4 = virtualinvoke r1.<java.lang.String: java.lang.String substring(int)>($i0)",
            "r5 = virtualinvoke $r3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>($r4)",
            "$z0 = virtualinvoke r5.<java.util.regex.Matcher: boolean lookingAt()>()",
            "if $z0 != 0 goto $i2 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()",
            "$i2 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()",
            "$i1 = virtualinvoke r5.<java.util.regex.Matcher: int end(int)>(1)",
            "$i3 = $i2 + $i1",
            "virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i3)",
            "$r8 = virtualinvoke r5.<java.util.regex.Matcher: java.lang.String group(int)>(1)",
            "virtualinvoke r0.<org.apache.commons.lang3.time.FastDateParser$PatternStrategy: void setCalendar(org.apache.commons.lang3.time.FastDateParser,java.util.Calendar,java.lang.String)>(r6, r7, $r8)",
            "return 1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$PatternStrategy__toString__1575700092\\3933.smt2",
        "z3": {
            "memory": 31592448,
            "run_time": 0.16162943840026855,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1219:\r\n  ;;   var1219!val!1 var1219!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1219!val!1 () var1219)\r\n  (declare-fun var1219!val!0 () var1219)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1219)) (or (= x var1219!val!1) (= x var1219!val!0)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  ;; universe for var1514:\r\n  ;;   var1514!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1514!val!0 () var1514)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1514)) (= x var1514!val!0))\r\n  ;; -----------\r\n  (define-fun var1529 () String\r\n    (getSimpleName/-390194377\r\n  (getClass/1258963082 (cast-from-var1219-to-var1514 var1768))))\r\n  (define-fun var1851 () String\r\n    (let ((a!1 (str.++ var1159!1\r\n                   (getSimpleName/-390194377\r\n                     (getClass/1258963082\r\n                       (cast-from-var1219-to-var1514 var1768)))\r\n                   \" [pattern=\")))\r\n  (str.++ (append/-1031950772\r\n            a!1\r\n            (cast-from-var223-to-var1514 (pattern/443652580 var1768)))\r\n          \"]\")))\r\n  (define-fun var2527!1 () String\r\n    \" [pattern=\")\r\n  (define-fun var1768 () var1219\r\n    var1219!val!0)\r\n  (define-fun var2527 () String\r\n    (str.++ var1159!1\r\n        (getSimpleName/-390194377\r\n          (getClass/1258963082 (cast-from-var1219-to-var1514 var1768)))\r\n        \" [pattern=\"))\r\n  (define-fun var1651 () String\r\n    (let ((a!1 (str.++ var1159!1\r\n                   (getSimpleName/-390194377\r\n                     (getClass/1258963082\r\n                       (cast-from-var1219-to-var1514 var1768)))\r\n                   \" [pattern=\")))\r\n  (str.++ (append/-1031950772\r\n            a!1\r\n            (cast-from-var223-to-var1514 (pattern/443652580 var1768)))\r\n          \"]\")))\r\n  (define-fun var3485 () String\r\n    (str.++ var1159!1\r\n        (getSimpleName/-390194377\r\n          (getClass/1258963082 (cast-from-var1219-to-var1514 var1768)))))\r\n  (define-fun var44 () ClassObject\r\n    (getClass/1258963082 (cast-from-var1219-to-var1514 var1768)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2742 () var223\r\n    (pattern/443652580 var1768))\r\n  (define-fun var680 () String\r\n    (let ((a!1 (str.++ var1159!1\r\n                   (getSimpleName/-390194377\r\n                     (getClass/1258963082\r\n                       (cast-from-var1219-to-var1514 var1768)))\r\n                   \" [pattern=\")))\r\n  (append/-1031950772\r\n    a!1\r\n    (cast-from-var223-to-var1514 (pattern/443652580 var1768)))))\r\n  (define-fun null-var1219 () var1219\r\n    var1219!val!1)\r\n  (define-fun var1159 () String\r\n    String-init)\r\n  (define-fun var680!1 () String\r\n    \"]\")\r\n  (define-fun var1159!2 () String\r\n    \"\")\r\n  (define-fun var1159!1 () String\r\n    \"\")\r\n  (define-fun var3485!1 () String\r\n    \" [pattern=\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getClass/1258963082 ((x!0 var1514)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun getSimpleName/-390194377 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun cast-from-var1219-to-var1514 ((x!0 var1219)) var1514\r\n    var1514!val!0)\r\n  (define-fun pattern/443652580 ((x!0 var1219)) var223\r\n    var223!val!0)\r\n  (define-fun cast-from-var223-to-var1514 ((x!0 var223)) var1514\r\n    var1514!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1514)) String\r\n    \"\")\r\n)\r\n(error \"line 54 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1667072,
            "run_time": 0.045523643493652344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1219 is 2\r\n; rep: (as @var1219_0 var1219)\r\n; rep: (as @var1219_1 var1219)\r\n; cardinality of var1514 is 1\r\n; rep: (as @var1514_0 var1514)\r\n; cardinality of var223 is 1\r\n; rep: (as @var223_0 var223)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getClass/1258963082 ((_arg_1 var1514)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var1219-to-var1514 ((_arg_1 var1219)) var1514 (as @var1514_0 var1514))\r\n(define-fun getSimpleName/-390194377 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun pattern/443652580 ((BOUND_VARIABLE_1117 var1219)) var223 (as @var223_0 var223))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1120 String) (BOUND_VARIABLE_1121 var1514)) String \"\")\r\n(define-fun cast-from-var223-to-var1514 ((BOUND_VARIABLE_1124 var223)) var1514 (as @var1514_0 var1514))\r\n(define-fun null-var1219 () var1219 (as @var1219_0 var1219))\r\n(define-fun var1768 () var1219 (as @var1219_1 var1219))\r\n(define-fun var1159!1 () String \"\")\r\n(define-fun var1159!2 () String \"\")\r\n(define-fun var3485!1 () String \" [pattern=\")\r\n(define-fun var2527!1 () String \" [pattern=\")\r\n(define-fun var680!1 () String \"]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36184064,
            "run_time": 0.10745763778686523,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 53 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 54 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167931904,
            "run_time": 0.8509292602539062,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1219/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser$PatternStrategy__toString__1575700092\\3933.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var680!1 =\r\n     concat(all_25_5, \"]\")\r\n   all_25_8 =\r\n     concat(var1159!2, \" [pattern=\")\r\n   var3485!1 =\r\n     concat(var1159!2, \" [pattern=\")\r\n   var2527!1 =\r\n     concat(all_22_3, rhs)\r\n   all_22_3 =\r\n     concat(var1159!2, \" [pattern=\")\r\n\r\n582ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDateParser$PatternStrategy",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()",
            "$r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>()",
            "$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" [pattern=\")",
            "$r5 = r1.<org.apache.commons.lang3.time.FastDateParser$PatternStrategy: java.util.regex.Pattern pattern>",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r9"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$StrategyAndWidth__toString__609372417\\3883.smt2",
        "z3": {
            "memory": 30183424,
            "run_time": 0.088623046875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2654:\r\n  ;;   var2654!val!0 var2654!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2654!val!0 () var2654)\r\n  (declare-fun var2654!val!1 () var2654)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2654)) (or (= x var2654!val!0) (= x var2654!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2211:\r\n  ;;   var2211!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2211!val!0 () var2211)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2211)) (= x var2211!val!0))\r\n  ;; -----------\r\n  ;; universe for var1037:\r\n  ;;   var1037!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1037!val!0 () var1037)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1037)) (= x var1037!val!0))\r\n  ;; -----------\r\n  (define-fun var3248 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var956!1 () String\r\n    \", width=\")\r\n  (define-fun var843 () String\r\n    (append/-1031950772\r\n  (str.++ var3248!1 \"StrategyAndWidth [strategy=\")\r\n  (cast-from-var2211-to-var1037 (strategy/-1034954719 var3999))))\r\n  (define-fun var1606 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var3248!1 \"StrategyAndWidth [strategy=\")\r\n          (cast-from-var2211-to-var1037 (strategy/-1034954719 var3999)))\r\n        \", width=\"\r\n        (str.from_int (width/-1034954719 var3999))\r\n        \"]\"))\r\n  (define-fun var812 () var2211\r\n    (strategy/-1034954719 var3999))\r\n  (define-fun var2650!1 () String\r\n    \"StrategyAndWidth [strategy=\")\r\n  (define-fun null-var2654 () var2654\r\n    var2654!val!1)\r\n  (define-fun var956 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var3248!1 \"StrategyAndWidth [strategy=\")\r\n          (cast-from-var2211-to-var1037 (strategy/-1034954719 var3999)))\r\n        \", width=\"))\r\n  (define-fun var1148 () Int\r\n    (width/-1034954719 var3999))\r\n  (define-fun var3999 () var2654\r\n    var2654!val!0)\r\n  (define-fun var167 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var3248!1 \"StrategyAndWidth [strategy=\")\r\n          (cast-from-var2211-to-var1037 (strategy/-1034954719 var3999)))\r\n        \", width=\"\r\n        (str.from_int (width/-1034954719 var3999))))\r\n  (define-fun var2469 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var3248!1 \"StrategyAndWidth [strategy=\")\r\n          (cast-from-var2211-to-var1037 (strategy/-1034954719 var3999)))\r\n        \", width=\"\r\n        (str.from_int (width/-1034954719 var3999))\r\n        \"]\"))\r\n  (define-fun var2650 () String\r\n    (str.++ var3248!1 \"StrategyAndWidth [strategy=\"))\r\n  (define-fun var3248!2 () String\r\n    \"StrategyAndWidth [strategy=\")\r\n  (define-fun var167!1 () String\r\n    \", width=0]\")\r\n  (define-fun var3248!1 () String\r\n    \"\")\r\n  (define-fun var843!1 () String\r\n    \", width=\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1037)) String\r\n    \"\")\r\n  (define-fun cast-from-var2211-to-var1037 ((x!0 var2211)) var1037\r\n    var1037!val!0)\r\n  (define-fun strategy/-1034954719 ((x!0 var2654)) var2211\r\n    var2211!val!0)\r\n  (define-fun width/-1034954719 ((x!0 var2654)) Int\r\n    0)\r\n)\r\n(error \"line 54 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12726272,
            "run_time": 0.03162336349487305,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2654 is 2\r\n; rep: (as @var2654_0 var2654)\r\n; rep: (as @var2654_1 var2654)\r\n; cardinality of var2211 is 1\r\n; rep: (as @var2211_0 var2211)\r\n; cardinality of var1037 is 1\r\n; rep: (as @var1037_0 var1037)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun strategy/-1034954719 ((_arg_1 var2654)) var2211 (as @var2211_0 var2211))\r\n(define-fun append/-1031950772 ((_arg_1 String) (_arg_2 var1037)) String \"\")\r\n(define-fun cast-from-var2211-to-var1037 ((_arg_1 var2211)) var1037 (as @var1037_0 var1037))\r\n(define-fun width/-1034954719 ((BOUND_VARIABLE_1496 var2654)) Int 0)\r\n(define-fun null-var2654 () var2654 (as @var2654_0 var2654))\r\n(define-fun var3999 () var2654 (as @var2654_1 var2654))\r\n(define-fun var3248!1 () String \"\")\r\n(define-fun var3248!2 () String \"StrategyAndWidth [strategy=\")\r\n(define-fun var2650!1 () String \"StrategyAndWidth [strategy=\")\r\n(define-fun var843!1 () String \", width=\")\r\n(define-fun var956!1 () String \", width=\")\r\n(define-fun var167!1 () String \", width=0]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35815424,
            "run_time": 0.07778596878051758,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 53 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 54 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 190717952,
            "run_time": 0.9193956851959229,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2654/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser$StrategyAndWidth__toString__609372417\\3883.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var167!1 =\r\n     concat(all_31_7, \"]\")\r\n   var843!1 =\r\n     concat(all_25_2, \", width=\")\r\n   var956!1 =\r\n     concat(all_28_2, rhs)\r\n   all_31_7 =\r\n     concat(all_25_2, \", width=\")\r\n   all_28_2 =\r\n     concat(all_25_2, \", width=\")\r\n\r\n644ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDateParser$StrategyAndWidth",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"StrategyAndWidth [strategy=\")",
            "$r2 = r1.<org.apache.commons.lang3.time.FastDateParser$StrategyAndWidth: org.apache.commons.lang3.time.FastDateParser$Strategy strategy>",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", width=\")",
            "$i0 = r1.<org.apache.commons.lang3.time.FastDateParser$StrategyAndWidth: int width>",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$StrategyParser__getNextStrategy__1794851579\\3892.smt2",
        "z3": {
            "memory": 29970432,
            "run_time": 0.1353435516357422,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1808:\r\n  ;;   var1808!val!1 var1808!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1808!val!1 () var1808)\r\n  (declare-fun var1808!val!0 () var1808)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1808)) (or (= x var1808!val!1) (= x var1808!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2734:\r\n  ;;   var2734!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2734!val!0 () var2734)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2734)) (= x var2734!val!0))\r\n  ;; -----------\r\n  (define-fun var1121 () var2734\r\n    (this$0/-1576495471 var3392))\r\n  (define-fun var1480 () Int\r\n    (currentIdx/-1576495471 var3392))\r\n  (define-fun null-var1808 () var1808\r\n    var1808!val!1)\r\n  (define-fun var2652 () String\r\n    (var2734_access$300/-739635973 (this$0/-1576495471 var3392)))\r\n  (define-fun var3392 () var1808\r\n    var1808!val!0)\r\n  (define-fun var2550 () Int\r\n    (str.len (var2734_access$300/-739635973 (this$0/-1576495471 var3392))))\r\n  (define-fun var2734_access$300/-739635973 ((x!0 var2734)) String\r\n    \"\")\r\n  (define-fun currentIdx/-1576495471 ((x!0 var1808)) Int\r\n    0)\r\n  (define-fun this$0/-1576495471 ((x!0 var1808)) var2734\r\n    var2734!val!0)\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.04556083679199219,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1808 is 2\r\n; rep: (as @var1808_0 var1808)\r\n; rep: (as @var1808_1 var1808)\r\n; cardinality of var2734 is 1\r\n; rep: (as @var2734_0 var2734)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun currentIdx/-1576495471 ((_arg_1 var1808)) Int 0)\r\n(define-fun this$0/-1576495471 ((_arg_1 var1808)) var2734 (as @var2734_0 var2734))\r\n(define-fun var2734_access$300/-739635973 ((_arg_1 var2734)) String \"\")\r\n(define-fun null-var1808 () var1808 (as @var1808_0 var1808))\r\n(define-fun var3392 () var1808 (as @var1808_1 var1808))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35196928,
            "run_time": 0.10609626770019531,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 25 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 142307328,
            "run_time": 1.316985845565796,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1808/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser$StrategyParser__getNextStrategy__1794851579\\3892.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n\r\n867ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser$StrategyParser",
            "$i0 = r0.<org.apache.commons.lang3.time.FastDateParser$StrategyParser: int currentIdx>",
            "$r1 = r0.<org.apache.commons.lang3.time.FastDateParser$StrategyParser: org.apache.commons.lang3.time.FastDateParser this$0>",
            "$r2 = staticinvoke <org.apache.commons.lang3.time.FastDateParser: java.lang.String access$300(org.apache.commons.lang3.time.FastDateParser)>($r1)",
            "$i1 = virtualinvoke $r2.<java.lang.String: int length()>()",
            "if $i0 < $i1 goto $r3 = r0.<org.apache.commons.lang3.time.FastDateParser$StrategyParser: org.apache.commons.lang3.time.FastDateParser this$0>",
            "return null"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$StrategyParser__letterPattern__-1742085629\\3919.smt2",
        "z3": {
            "memory": 31662080,
            "run_time": 1.6041622161865234,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2346:\r\n  ;;   var2346!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2346!val!0 () var2346)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2346)) (= x var2346!val!0))\r\n  ;; -----------\r\n  ;; universe for var3218:\r\n  ;;   var3218!val!0 var3218!val!1 var3218!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3218!val!0 () var3218)\r\n  (declare-fun var3218!val!1 () var3218)\r\n  (declare-fun var3218!val!2 () var3218)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3218))\r\n          (or (= x var3218!val!0) (= x var3218!val!1) (= x var3218!val!2)))\r\n  ;; -----------\r\n  (define-fun var820 () Int\r\n    (currentIdx/-1576495471 var2624!1))\r\n  (define-fun var2572 () Int\r\n    (+ (currentIdx/-1576495471 var2624) 1))\r\n  (define-fun var431 () var300\r\n    (definingCalendar/-1576495471 var2624!1))\r\n  (define-fun var3711 () var1223\r\n    (var2346_access$500/1565833853\r\n  (this$0/-1576495471 var2624!1)\r\n  var870\r\n  (- (currentIdx/-1576495471 var2624!1) (currentIdx/-1576495471 var2624))\r\n  (definingCalendar/-1576495471 var2624!1)))\r\n  (define-fun var2445 () var2346\r\n    (this$0/-1576495471 var2624!1))\r\n  (define-fun var3841 () var2346\r\n    (this$0/-1576495471 var2624!1))\r\n  (define-fun null-var3218 () var3218\r\n    var3218!val!1)\r\n  (define-fun var1065 () Int\r\n    (currentIdx/-1576495471 var2624))\r\n  (define-fun var2907 () Int\r\n    (- (currentIdx/-1576495471 var2624!1) (currentIdx/-1576495471 var2624)))\r\n  (define-fun var2624!1 () var3218\r\n    var3218!val!2)\r\n  (define-fun var2361 () String\r\n    (var2346_access$300/-739635973 (this$0/-1576495471 var2624!1)))\r\n  (define-fun var2624 () var3218\r\n    var3218!val!0)\r\n  (define-fun var1453 () var3196\r\n    var3196-init)\r\n  (define-fun var870 () Int\r\n    1)\r\n  (define-fun var920 () Int\r\n    (str.len (var2346_access$300/-739635973 (this$0/-1576495471 var2624!1))))\r\n  (define-fun var723 () Int\r\n    (currentIdx/-1576495471 var2624))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var2907!1 () Int\r\n    0)\r\n  (define-fun var1453!1 () var3196\r\n    var3196!val!0)\r\n  (define-fun var3711!1 () var1223\r\n    var1223!val!0)\r\n  (define-fun var3196-init () var3196\r\n    var3196!val!0)\r\n  (define-fun currentIdx/-1576495471 ((x!0 var3218)) Int\r\n    (ite (= x!0 var3218!val!0) 0\r\n      1))\r\n  (define-fun var2346_access$300/-739635973 ((x!0 var2346)) String\r\n    \"\")\r\n  (define-fun this$0/-1576495471 ((x!0 var3218)) var2346\r\n    var2346!val!0)\r\n  (define-fun definingCalendar/-1576495471 ((x!0 var3218)) var300\r\n    var300!val!0)\r\n  (define-fun var2346_access$500/1565833853 ((x!0 var2346)\r\n   (x!1 Int)\r\n   (x!2 Int)\r\n   (x!3 var300)) var1223\r\n    var1223!val!0)\r\n  (define-fun <init>/-762572363 ((x!0 var3196) (x!1 var1223) (x!2 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 54 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9498624,
            "run_time": 0.2933671474456787,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3218 is 3\r\n; rep: (as @var3218_0 var3218)\r\n; rep: (as @var3218_1 var3218)\r\n; rep: (as @var3218_2 var3218)\r\n; cardinality of var2346 is 1\r\n; rep: (as @var2346_0 var2346)\r\n; cardinality of var3196 is 1\r\n; rep: (as @var3196_0 var3196)\r\n; cardinality of var300 is 1\r\n; rep: (as @var300_0 var300)\r\n; cardinality of var1223 is 1\r\n; rep: (as @var1223_0 var1223)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun currentIdx/-1576495471 ((_arg_1 var3218)) Int (ite (= (as @var3218_1 var3218) _arg_1) 0 1))\r\n(define-fun this$0/-1576495471 ((_arg_1 var3218)) var2346 (as @var2346_0 var2346))\r\n(define-fun var2346_access$300/-739635973 ((_arg_1 var2346)) String \"\")\r\n(define-fun var3196-init () var3196 (as @var3196_0 var3196))\r\n(define-fun definingCalendar/-1576495471 ((BOUND_VARIABLE_622 var3218)) var300 (as @var300_0 var300))\r\n(define-fun var2346_access$500/1565833853 ((BOUND_VARIABLE_625 var2346) (BOUND_VARIABLE_626 Int) (BOUND_VARIABLE_627 Int) (BOUND_VARIABLE_628 var300)) var1223 (as @var1223_0 var1223))\r\n(define-fun <init>/-762572363 ((BOUND_VARIABLE_631 var3196) (BOUND_VARIABLE_632 var1223) (BOUND_VARIABLE_633 Int)) void (as @void_0 void))\r\n(define-fun null-var3218 () var3218 (as @var3218_0 var3218))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2624 () var3218 (as @var3218_1 var3218))\r\n(define-fun var870 () Int 0)\r\n(define-fun var2624!1 () var3218 (as @var3218_2 var3218))\r\n(define-fun var1453!1 () var3196 (as @var3196_0 var3196))\r\n(define-fun var3711!1 () var1223 (as @var1223_0 var1223))\r\n(define-fun var2907!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34115584,
            "run_time": 0.6327986717224121,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 53 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 54 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167514112,
            "run_time": 1.2087268829345703,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3218/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser$StrategyParser__letterPattern__-1742085629\\3919.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n\r\n529ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser$StrategyParser",
            "c5 := @parameter0: char",
            "i0 = r0.<org.apache.commons.lang3.time.FastDateParser$StrategyParser: int currentIdx>",
            "$i1 = r0.<org.apache.commons.lang3.time.FastDateParser$StrategyParser: int currentIdx>",
            "$i2 = $i1 + 1",
            "r0.<org.apache.commons.lang3.time.FastDateParser$StrategyParser: int currentIdx> = $i2",
            "$r1 = r0.<org.apache.commons.lang3.time.FastDateParser$StrategyParser: org.apache.commons.lang3.time.FastDateParser this$0>",
            "$r2 = staticinvoke <org.apache.commons.lang3.time.FastDateParser: java.lang.String access$300(org.apache.commons.lang3.time.FastDateParser)>($r1)",
            "$i3 = virtualinvoke $r2.<java.lang.String: int length()>()",
            "if $i2 >= $i3 goto $i4 = r0.<org.apache.commons.lang3.time.FastDateParser$StrategyParser: int currentIdx>",
            "$i4 = r0.<org.apache.commons.lang3.time.FastDateParser$StrategyParser: int currentIdx>",
            "$i8 = $i4 - i0",
            "$r9 = new org.apache.commons.lang3.time.FastDateParser$StrategyAndWidth",
            "$r5 = r0.<org.apache.commons.lang3.time.FastDateParser$StrategyParser: org.apache.commons.lang3.time.FastDateParser this$0>",
            "$r4 = r0.<org.apache.commons.lang3.time.FastDateParser$StrategyParser: java.util.Calendar definingCalendar>",
            "$r6 = staticinvoke <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy access$500(org.apache.commons.lang3.time.FastDateParser,char,int,java.util.Calendar)>($r5, c5, $i8, $r4)",
            "specialinvoke $r9.<org.apache.commons.lang3.time.FastDateParser$StrategyAndWidth: void <init>(org.apache.commons.lang3.time.FastDateParser$Strategy,int)>($r6, $i8)",
            "return $r9"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$StrategyParser__literal__2045574504\\3950.smt2",
        "z3": {
            "memory": 31076352,
            "run_time": 1.5040888786315918,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 45 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10539008,
            "run_time": 3.2095489501953125,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33054720,
            "run_time": 3.271345853805542,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 45 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 142258176,
            "run_time": 1.0579874515533447,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDateParser$StrategyParser",
            "z1 = 0",
            "$r14 = new java.lang.StringBuilder",
            "specialinvoke $r14.<java.lang.StringBuilder: void <init>()>()",
            "$i9 = r1.<org.apache.commons.lang3.time.FastDateParser$StrategyParser: int currentIdx>",
            "$r11 = r1.<org.apache.commons.lang3.time.FastDateParser$StrategyParser: org.apache.commons.lang3.time.FastDateParser this$0>",
            "$r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser: java.lang.String access$300(org.apache.commons.lang3.time.FastDateParser)>($r11)",
            "$i10 = virtualinvoke $r12.<java.lang.String: int length()>()",
            "if $i9 >= $i10 goto (branch)",
            "if z1 == 0 goto r13 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r15 = new java.lang.IllegalArgumentException",
            "specialinvoke $r15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(\"Unterminated quote\")",
            "throw $r15"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringBetween__-410933523\\5809.smt2",
        "z3": {
            "memory": 32071680,
            "run_time": 5.706187009811401,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2236:\r\n  ;;   var2236!val!0 var2236!val!1 var2236!val!6 var2236!val!7 var2236!val!4 var2236!val!2 var2236!val!5 var2236!val!3 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2236!val!0 () var2236)\r\n  (declare-fun var2236!val!1 () var2236)\r\n  (declare-fun var2236!val!6 () var2236)\r\n  (declare-fun var2236!val!7 () var2236)\r\n  (declare-fun var2236!val!4 () var2236)\r\n  (declare-fun var2236!val!2 () var2236)\r\n  (declare-fun var2236!val!5 () var2236)\r\n  (declare-fun var2236!val!3 () var2236)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2236))\r\n          (or (= x var2236!val!0)\r\n              (= x var2236!val!1)\r\n              (= x var2236!val!6)\r\n              (= x var2236!val!7)\r\n              (= x var2236!val!4)\r\n              (= x var2236!val!2)\r\n              (= x var2236!val!5)\r\n              (= x var2236!val!3)))\r\n  ;; -----------\r\n  (define-fun var1737 () Int\r\n    (str.len var3144))\r\n  (define-fun var2445!2 () (Array Int var2236)\r\n    (store ((as const (Array Int var2236)) var2236!val!0) 4 var2236!val!5))\r\n  (define-fun var3887 () Int\r\n    (str.indexof var3051\r\n             var1546\r\n             (+ (str.indexof var3051 var3144 0) (str.len var3144))))\r\n  (define-fun var2848 () Int\r\n    (- 1))\r\n  (define-fun var2445!3 () (Array Int var2236)\r\n    (store ((as const (Array Int var2236)) var2236!val!7) 2 var2236!val!1))\r\n  (define-fun var2445 () (Array Int var2236)\r\n    arr-var2236-init)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3144 () String\r\n    \"\")\r\n  (define-fun var3051 () String\r\n    \"\")\r\n  (define-fun var2434 () Bool\r\n    (var2866_allNotNull/1601190162 var2445!3))\r\n  (define-fun var162 () Int\r\n    (+ (str.indexof var3051 var3144 0) (str.len var3144)))\r\n  (define-fun var1546 () String\r\n    \"B\")\r\n  (define-fun var58 () Int\r\n    (str.indexof var3051 var3144 0))\r\n  (define-fun null-__Array__Int__var2236__ () (Array Int var2236)\r\n    (store (store ((as const (Array Int var2236)) var2236!val!3) 4 var2236!val!4)\r\n       5\r\n       var2236!val!6))\r\n  (define-fun var2445!1 () (Array Int var2236)\r\n    (store ((as const (Array Int var2236)) var2236!val!2) 0 var2236!val!0))\r\n  (define-fun var3023 () Int\r\n    (- 1))\r\n  (define-fun arr-var2236-init () (Array Int var2236)\r\n    ((as const (Array Int var2236)) var2236!val!0))\r\n  (define-fun k!3 ((x!0 Int)) var2236\r\n    (ite (= x!0 2) var2236!val!1\r\n      var2236!val!7))\r\n  (define-fun var2866_allNotNull/1601190162 ((x!0 (Array Int var2236))) Bool\r\n    true)\r\n  (define-fun cast-from-String-to-var2236 ((x!0 String)) var2236\r\n    (ite (= x!0 \"B\") var2236!val!1\r\n      var2236!val!0))\r\n  (define-fun k!1 ((x!0 Int)) var2236\r\n    (ite (= x!0 4) var2236!val!4\r\n    (ite (= x!0 5) var2236!val!6\r\n      var2236!val!3)))\r\n  (define-fun k!2 ((x!0 Int)) var2236\r\n    (ite (= x!0 4) var2236!val!5\r\n      var2236!val!0))\r\n)\r\n(error \"line 54 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13791232,
            "run_time": 2.084303617477417,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2615 is 1\r\n; rep: (as @var2615_0 var2615)\r\n; cardinality of var2236 is 5\r\n; rep: (as @var2236_0 var2236)\r\n; rep: (as @var2236_1 var2236)\r\n; rep: (as @var2236_2 var2236)\r\n; rep: (as @var2236_3 var2236)\r\n; rep: (as @var2236_4 var2236)\r\n; cardinality of var2866 is 1\r\n; rep: (as @var2866_0 var2866)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-var2236-init () (Array Int var2236) ((as const (Array Int var2236)) (as @var2236_0 var2236)))\r\n(define-fun cast-from-String-to-var2236 ((_arg_1 String)) var2236 (ite (= \"\" _arg_1) (as @var2236_1 var2236) (as @var2236_0 var2236)))\r\n(define-fun var2866_allNotNull/1601190162 ((_arg_1 (Array Int var2236))) Bool true)\r\n(define-fun null-String () String \"B\")\r\n(define-fun null-__Array__Int__var2236__ () (Array Int var2236) (store ((as const (Array Int var2236)) (as @var2236_1 var2236)) 0 (as @var2236_3 var2236)))\r\n(define-fun var3051 () String \"\")\r\n(define-fun var3144 () String \"\")\r\n(define-fun var1546 () String \"A\")\r\n(define-fun var2445!1 () (Array Int var2236) (store ((as const (Array Int var2236)) (as @var2236_0 var2236)) 0 (as @var2236_1 var2236)))\r\n(define-fun var2445!2 () (Array Int var2236) (store ((as const (Array Int var2236)) (as @var2236_2 var2236)) 1 (as @var2236_1 var2236)))\r\n(define-fun var2445!3 () (Array Int var2236) (store (store ((as const (Array Int var2236)) (as @var2236_3 var2236)) 0 (as @var2236_4 var2236)) 2 (as @var2236_0 var2236)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 7639044096,
            "run_time": 60.012826442718506,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 159420416,
            "run_time": 6.2472755908966064,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_indexof(var3051, var1546, all_25_0 + all_25_1, -1)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.StringUtils__substringBetween__-410933523\\5809.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n736ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.String: int indexOf(java.lang.String)>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int indexOf(java.lang.String,int)>"
        ],
        "api_count": {
            "<java.lang.String: int indexOf(java.lang.String)>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.String: int indexOf(java.lang.String,int)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.String",
            "r3 := @parameter2: java.lang.String",
            "$r0 = newarray (java.lang.Object)[3]",
            "$r0[0] = r1",
            "$r0[1] = r2",
            "$r0[2] = r3",
            "$z0 = staticinvoke <org.apache.commons.lang3.ObjectUtils: boolean allNotNull(java.lang.Object[])>($r0)",
            "if $z0 != 0 goto i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(r2)",
            "i0 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String)>(r2)",
            "$i7 = (int) -1",
            "if i0 == $i7 goto return null",
            "$i1 = virtualinvoke r2.<java.lang.String: int length()>()",
            "$i2 = i0 + $i1",
            "i3 = virtualinvoke r1.<java.lang.String: int indexOf(java.lang.String,int)>(r3, $i2)",
            "$i9 = (int) -1",
            "if i3 == $i9 goto return null",
            "return null"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substringsBetween__-1684025032\\5822.smt2",
        "z3": {
            "memory": 31641600,
            "run_time": 0.9121787548065186,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3636 () Int\r\n    (str.len var3262))\r\n  (define-fun var1920 () String\r\n    \"\")\r\n  (define-fun var3262 () String\r\n    \"\")\r\n  (define-fun var3661 () Bool\r\n    (var3625_isEmpty/1595667738 var1920))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var992 () (Array Int String)\r\n    var2873-EMPTY_STRING_ARRAY)\r\n  (define-fun var2717 () Bool\r\n    (var3625_isEmpty/1595667738 var3671))\r\n  (define-fun var3671 () String\r\n    \"\")\r\n  (define-fun var2873-EMPTY_STRING_ARRAY () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun var3625_isEmpty/1595667738 ((x!0 String)) Bool\r\n    false)\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8839168,
            "run_time": 0.062117576599121094,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3949 is 1\r\n; rep: (as @var3949_0 var3949)\r\n; cardinality of var3625 is 1\r\n; rep: (as @var3625_0 var3625)\r\n; cardinality of var2873 is 1\r\n; rep: (as @var2873_0 var2873)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3625_isEmpty/1595667738 ((_arg_1 String)) Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2873-EMPTY_STRING_ARRAY () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var3262 () String \"\")\r\n(define-fun var3671 () String \"\")\r\n(define-fun var1920 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37523456,
            "run_time": 0.3556661605834961,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var3636 () Int\n    (str.len var3262))\n  (define-fun var3661 () Bool\n    (var3625_isEmpty/1595667738 var1920))\n  (define-fun var1920 () String\n    \"\\u{0}\")\n  (define-fun var2717 () Bool\n    (var3625_isEmpty/1595667738 var3671))\n  (define-fun var992 () (Array Int String)\n    var2873-EMPTY_STRING_ARRAY)\n  (define-fun var3262 () String\n    \"\")\n  (define-fun var3671 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2873-EMPTY_STRING_ARRAY () (Array Int String)\n    ((as const (Array Int String)) \"\"))\n  (define-fun var3625_isEmpty/1595667738 ((x!0 String)) Bool\n    false)\n)\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176713728,
            "run_time": 1.484769582748413,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1920 () String \"\\u{0}\")\r\n  (define-fun var3671 () String \"\\u{1}\")\r\n  (define-fun var3262 () String \"\")\r\n  (define-fun null-String () String \"\\u{2}\")\r\n  (define-fun var3625_isEmpty/1595667738 ((x!0 String)) Bool (ite (= x!0 \"\\u{1}\") false (ite (= x!0 \"\\u{0}\") false true)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "r2 := @parameter2: java.lang.String",
            "if r0 == null goto return null",
            "$z0 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r1)",
            "if $z0 != 0 goto return null",
            "$z1 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(r2)",
            "if $z1 == 0 goto i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i0 != 0 goto i1 = virtualinvoke r2.<java.lang.String: int length()>()",
            "$r8 = <org.apache.commons.lang3.ArrayUtils: java.lang.String[] EMPTY_STRING_ARRAY>",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.StringUtils__substring__-2090793678\\5654.smt2",
        "z3": {
            "memory": 27430912,
            "run_time": 0.3087937831878662,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3716 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var3435 () Int\r\n    1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var2101 () Int\r\n    (str.len var3716))\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11943936,
            "run_time": 0.08857846260070801,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3169 is 1\r\n; rep: (as @var3169_0 var3169)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int 0)\r\n(define-fun var3716 () String \"\")\r\n(define-fun var3435 () Int 1)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36954112,
            "run_time": 0.17000889778137207,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2101 () Int\n    (str.len var3716))\n  (define-fun null-Int () Int\n    4)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3716 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3435 () Int\n    3)\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169336832,
            "run_time": 0.7887604236602783,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3435 () Int 1)\r\n  (define-fun var3716 () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i2 := @parameter1: int",
            "if r0 != null goto (branch)",
            "if i2 >= 0 goto (branch)",
            "if i2 >= 0 goto $i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i2 <= $i0 goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String substring(int)>(i2)",
            "return \"\""
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy__toString__769602426\\3818.smt2",
        "z3": {
            "memory": 32571392,
            "run_time": 60.01041054725647,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 15208448,
            "run_time": 0.4614434242248535,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1009 is 2\r\n; rep: (as @var1009_0 var1009)\r\n; rep: (as @var1009_1 var1009)\r\n; cardinality of var2302 is 1\r\n; rep: (as @var2302_0 var2302)\r\n; cardinality of var2384 is 2\r\n; rep: (as @var2384_0 var2384)\r\n; rep: (as @var2384_1 var2384)\r\n; cardinality of var3145 is 1\r\n; rep: (as @var3145_0 var3145)\r\n; cardinality of var3841 is 1\r\n; rep: (as @var3841_0 var3841)\r\n; cardinality of var3048 is 1\r\n; rep: (as @var3048_0 var3048)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun field/-1318375070 ((_arg_1 var1009)) Int (- 1))\r\n(define-fun locale/-1318375070 ((_arg_1 var1009)) var2302 (as @var2302_0 var2302))\r\n(define-fun append/-1031950772 ((_arg_1 String) (_arg_2 var2384)) String \"\")\r\n(define-fun cast-from-var2302-to-var2384 ((_arg_1 var2302)) var2384 (as @var2384_0 var2384))\r\n(define-fun lKeyValues/-1318375070 ((_arg_1 var1009)) var3145 (as @var3145_0 var3145))\r\n(define-fun cast-from-var3145-to-var2384 ((_arg_1 var3145)) var2384 (as @var2384_1 var2384))\r\n(define-fun pattern/443652580 ((BOUND_VARIABLE_2864 var3048)) var3841 (as @var3841_0 var3841))\r\n(define-fun cast-from-var1009-to-var3048 ((BOUND_VARIABLE_2867 var1009)) var3048 (as @var3048_0 var3048))\r\n(define-fun cast-from-var3841-to-var2384 ((BOUND_VARIABLE_2870 var3841)) var2384 (as @var2384_0 var2384))\r\n(define-fun null-var1009 () var1009 (as @var1009_0 var1009))\r\n(define-fun var3759 () var1009 (as @var1009_1 var1009))\r\n(define-fun var3195!1 () String \"\")\r\n(define-fun var3195!2 () String \"CaseInsensitiveTextStrategy [field=\")\r\n(define-fun var2885!1 () String \"CaseInsensitiveTextStrategy [field=\")\r\n(define-fun var317!1 () String \"CaseInsensitiveTextStrategy [field=, locale=\")\r\n(define-fun var362!1 () String \"CaseInsensitiveTextStrategy [field=, locale=\")\r\n(define-fun var1222!1 () String \", lKeyValues=\")\r\n(define-fun var1733!1 () String \", lKeyValues=\")\r\n(define-fun var2401!1 () String \", pattern=\")\r\n(define-fun var1539!1 () String \", pattern=\")\r\n(define-fun var344!1 () String \"]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37097472,
            "run_time": 0.10833621025085449,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 79 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 80 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 206020608,
            "run_time": 1.1653847694396973,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1009/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy__toString__769602426\\3818.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var344!1 =\r\n     concat(all_48_4, \"]\")\r\n   all_48_8 =\r\n     concat(all_48_9, \", pattern=\")\r\n   all_48_12 =\r\n     concat(all_45_5, \", lKeyValues=\")\r\n   all_36_6 =\r\n     concat(all_45_5, \", lKeyValues=\")\r\n   all_33_5 =\r\n     concat(all_45_5, \", lKeyValues=\")\r\n   var1222!1 =\r\n     concat(all_45_5, \", lKeyValues=\")\r\n   var2401!1 =\r\n     concat(all_33_2, \", pattern=\")\r\n   var1539!1 =\r\n     concat(all_36_2, rhs)\r\n   var1733!1 =\r\n     concat(all_24_0, rhs)\r\n   all_24_0 =\r\n     concat(all_45_5, \", lKeyValues=\")\r\n   all_36_2 =\r\n     concat(all_36_3, \", pattern=\")\r\n\r\n765ms\r\n"
        },
        "undefined_function_count": 10,
        "assertion_count": 22,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 5,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"CaseInsensitiveTextStrategy [field=\")",
            "$i0 = r1.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: int field>",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", locale=\")",
            "$r4 = r1.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: java.util.Locale locale>",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4)",
            "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", lKeyValues=\")",
            "$r7 = r1.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: java.util.Map lKeyValues>",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7)",
            "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", pattern=\")",
            "$r10 = r1.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: java.util.regex.Pattern pattern>",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r14"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.MethodUtils__invokeStaticMethod__-591292973\\3420.smt2",
        "z3": {
            "memory": 31580160,
            "run_time": 60.0147967338562,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10768384,
            "run_time": 0.21882009506225586,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1292 is 1\r\n; rep: (as @var1292_0 var1292)\r\n; cardinality of var3721 is 2\r\n; rep: (as @var3721_0 var3721)\r\n; rep: (as @var3721_1 var3721)\r\n; cardinality of var1812 is 1\r\n; rep: (as @var1812_0 var1812)\r\n; cardinality of var183 is 1\r\n; rep: (as @var183_0 var183)\r\n; cardinality of var25 is 1\r\n; rep: (as @var25_0 var25)\r\n; cardinality of var3071 is 1\r\n; rep: (as @var3071_0 var3071)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 4\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n; rep: (as @ClassObject_2 ClassObject)\r\n; rep: (as @ClassObject_3 ClassObject)\r\n(define-fun var1812_nullToEmpty/627354827 ((BOUND_VARIABLE_753 (Array Int var3721))) (Array Int var3721) ((as const (Array Int var3721)) (as @var3721_0 var3721)))\r\n(define-fun var1812_nullToEmpty/1403447389 ((BOUND_VARIABLE_757 (Array Int ClassObject))) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun var25_getMatchingAccessibleMethod/856695000 ((BOUND_VARIABLE_761 ClassObject) (BOUND_VARIABLE_762 String) (BOUND_VARIABLE_763 (Array Int ClassObject))) var183 (as @var183_0 var183))\r\n(define-fun var3071-init () var3071 (as @var3071_0 var3071))\r\n(define-fun String-init () String \"\")\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_766 ClassObject)) String \"\")\r\n(define-fun <init>/-966825728 ((BOUND_VARIABLE_769 var3071) (BOUND_VARIABLE_770 String)) void (as @void_0 void))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var3721__ () (Array Int var3721) (store ((as const (Array Int var3721)) (as @var3721_1 var3721)) 0 (as @var3721_0 var3721)))\r\n(define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_1 ClassObject)) 0 (as @ClassObject_2 ClassObject)))\r\n(define-fun null-var183 () var183 (as @var183_0 var183))\r\n(define-fun var1538 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var1105 () String \"\")\r\n(define-fun var2530 () (Array Int var3721) (store ((as const (Array Int var3721)) (as @var3721_0 var3721)) 0 (as @var3721_1 var3721)))\r\n(define-fun var2496 () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)) 0 (as @ClassObject_3 ClassObject)))\r\n(define-fun var1443!1 () String \"\")\r\n(define-fun var1443!2 () String \"No such accessible method: \")\r\n(define-fun var3845!1 () String \"No such accessible method: \")\r\n(define-fun var771!1 () String \"No such accessible method: () on class: \")\r\n(define-fun var3211!1 () String \"No such accessible method: () on class: \")\r\n(define-fun var3806!1 () var3071 (as @var3071_0 var3071))\r\n(define-fun var1263!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38010880,
            "run_time": 60.00981664657593,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182775808,
            "run_time": 0.9398477077484131,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: ClassObject/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.reflect.MethodUtils__invokeStaticMethod__-591292973\\3420.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3211!1 =\r\n     concat(all_37_5, all_37_4)\r\n   var771!1 =\r\n     concat(all_34_3, \"() on class: \")\r\n   var3845!1 =\r\n     concat(\"No such accessible method: \", var1105)\r\n   all_37_5 =\r\n     concat(all_37_6, \"() on class: \")\r\n   all_34_3 =\r\n     concat(\"No such accessible method: \", var1105)\r\n   all_37_6 =\r\n     concat(\"No such accessible method: \", var1105)\r\n\r\n650ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Class",
            "r1 := @parameter1: java.lang.String",
            "r12 := @parameter2: java.lang.Object[]",
            "r13 := @parameter3: java.lang.Class[]",
            "r14 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(r12)",
            "r15 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Class[] nullToEmpty(java.lang.Class[])>(r13)",
            "r2 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.reflect.Method getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(r0, r1, r15)",
            "if r2 != null goto r16 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.Object[] toVarArgs(java.lang.reflect.Method,java.lang.Object[])>(r2, r14)",
            "$r4 = new java.lang.NoSuchMethodException",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No such accessible method: \")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"() on class: \")",
            "$r8 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>()",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r4.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r11)",
            "throw $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.MethodUtils__invokeExactStaticMethod__869014720\\3206.smt2",
        "z3": {
            "memory": 31707136,
            "run_time": 60.010066747665405,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10768384,
            "run_time": 0.2531778812408447,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3940 is 1\r\n; rep: (as @var3940_0 var3940)\r\n; cardinality of var3946 is 2\r\n; rep: (as @var3946_0 var3946)\r\n; rep: (as @var3946_1 var3946)\r\n; cardinality of var3589 is 1\r\n; rep: (as @var3589_0 var3589)\r\n; cardinality of var1163 is 1\r\n; rep: (as @var1163_0 var1163)\r\n; cardinality of var1084 is 1\r\n; rep: (as @var1084_0 var1084)\r\n; cardinality of var2856 is 1\r\n; rep: (as @var2856_0 var2856)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 4\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n; rep: (as @ClassObject_2 ClassObject)\r\n; rep: (as @ClassObject_3 ClassObject)\r\n(define-fun var3589_nullToEmpty/627354827 ((BOUND_VARIABLE_753 (Array Int var3946))) (Array Int var3946) ((as const (Array Int var3946)) (as @var3946_0 var3946)))\r\n(define-fun var3589_nullToEmpty/1403447389 ((BOUND_VARIABLE_757 (Array Int ClassObject))) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun var1084_getAccessibleMethod/841246421 ((BOUND_VARIABLE_761 ClassObject) (BOUND_VARIABLE_762 String) (BOUND_VARIABLE_763 (Array Int ClassObject))) var1163 (as @var1163_0 var1163))\r\n(define-fun var2856-init () var2856 (as @var2856_0 var2856))\r\n(define-fun String-init () String \"\")\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_766 ClassObject)) String \"\")\r\n(define-fun <init>/-966825728 ((BOUND_VARIABLE_769 var2856) (BOUND_VARIABLE_770 String)) void (as @void_0 void))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var3946__ () (Array Int var3946) (store ((as const (Array Int var3946)) (as @var3946_1 var3946)) 0 (as @var3946_0 var3946)))\r\n(define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_1 ClassObject)) 0 (as @ClassObject_2 ClassObject)))\r\n(define-fun null-var1163 () var1163 (as @var1163_0 var1163))\r\n(define-fun var2603 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var2209 () String \"\")\r\n(define-fun var1387 () (Array Int var3946) (store ((as const (Array Int var3946)) (as @var3946_0 var3946)) 0 (as @var3946_1 var3946)))\r\n(define-fun var2294 () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)) 0 (as @ClassObject_3 ClassObject)))\r\n(define-fun var1669!1 () String \"\")\r\n(define-fun var1669!2 () String \"No such accessible method: \")\r\n(define-fun var2401!1 () String \"No such accessible method: \")\r\n(define-fun var968!1 () String \"No such accessible method: () on class: \")\r\n(define-fun var1884!1 () String \"No such accessible method: () on class: \")\r\n(define-fun var2391!1 () var2856 (as @var2856_0 var2856))\r\n(define-fun var19!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37023744,
            "run_time": 60.00520920753479,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182439936,
            "run_time": 0.9117581844329834,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: ClassObject/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.reflect.MethodUtils__invokeExactStaticMethod__869014720\\3206.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1884!1 =\r\n     concat(all_37_5, all_37_4)\r\n   var968!1 =\r\n     concat(all_34_3, \"() on class: \")\r\n   var2401!1 =\r\n     concat(\"No such accessible method: \", var2209)\r\n   all_37_5 =\r\n     concat(all_37_6, \"() on class: \")\r\n   all_34_3 =\r\n     concat(\"No such accessible method: \", var2209)\r\n   all_37_6 =\r\n     concat(\"No such accessible method: \", var2209)\r\n\r\n662ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Class",
            "r1 := @parameter1: java.lang.String",
            "r12 := @parameter2: java.lang.Object[]",
            "r13 := @parameter3: java.lang.Class[]",
            "r14 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(r12)",
            "r15 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Class[] nullToEmpty(java.lang.Class[])>(r13)",
            "r2 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.reflect.Method getAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(r0, r1, r15)",
            "if r2 != null goto $r3 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r14)",
            "$r4 = new java.lang.NoSuchMethodException",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"No such accessible method: \")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"() on class: \")",
            "$r8 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>()",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r4.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r11)",
            "throw $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.MethodUtils__invokeExactStaticMethod__869014720\\3239.smt2",
        "z3": {
            "memory": 27725824,
            "run_time": 0.07946968078613281,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1117:\r\n  ;;   var1117!val!0 var1117!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1117!val!0 () var1117)\r\n  (declare-fun var1117!val!1 () var1117)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1117)) (or (= x var1117!val!0) (= x var1117!val!1)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 ClassObject!val!5 ClassObject!val!3 ClassObject!val!4 ClassObject!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  (declare-fun ClassObject!val!5 () ClassObject)\r\n  (declare-fun ClassObject!val!3 () ClassObject)\r\n  (declare-fun ClassObject!val!4 () ClassObject)\r\n  (declare-fun ClassObject!val!2 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject))\r\n          (or (= x ClassObject!val!0)\r\n              (= x ClassObject!val!1)\r\n              (= x ClassObject!val!5)\r\n              (= x ClassObject!val!3)\r\n              (= x ClassObject!val!4)\r\n              (= x ClassObject!val!2)))\r\n  ;; -----------\r\n  ;; universe for var575:\r\n  ;;   var575!val!1 var575!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var575!val!1 () var575)\r\n  (declare-fun var575!val!0 () var575)\r\n  ;; cardinality constraint:\r\n  (forall ((x var575)) (or (= x var575!val!1) (= x var575!val!0)))\r\n  ;; -----------\r\n  (define-fun var1125 () String\r\n    \"!0!\")\r\n  (define-fun var737 () (Array Int var575)\r\n    ((as const (Array Int var575)) var575!val!0))\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var24 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var1945 () var1117\r\n    (var1942_getAccessibleMethod/841246421\r\n  var24\r\n  var1125\r\n  (var1008_nullToEmpty/1403447389 var2676)))\r\n  (define-fun var531 () var575\r\n    (invoke/-1759464968\r\n  (var1942_getAccessibleMethod/841246421\r\n    var24\r\n    var1125\r\n    (var1008_nullToEmpty/1403447389 var2676))\r\n  null-var575\r\n  (var1008_nullToEmpty/627354827 var737)))\r\n  (define-fun var2824 () (Array Int var575)\r\n    (var1008_nullToEmpty/627354827 var737))\r\n  (define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!3))\r\n  (define-fun var2676 () (Array Int ClassObject)\r\n    (store ((as const (Array Int ClassObject)) ClassObject!val!2)\r\n       4\r\n       ClassObject!val!4))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-var1117 () var1117\r\n    var1117!val!1)\r\n  (define-fun var3789 () (Array Int ClassObject)\r\n    (var1008_nullToEmpty/1403447389 var2676))\r\n  (define-fun null-__Array__Int__var575__ () (Array Int var575)\r\n    ((as const (Array Int var575)) var575!val!1))\r\n  (define-fun null-var575 () var575\r\n    var575!val!1)\r\n  (define-fun null-NullType () var367\r\n    var367!val!0)\r\n  (define-fun k!2 ((x!0 Int)) ClassObject\r\n    (ite (= x!0 4) ClassObject!val!4\r\n      ClassObject!val!2))\r\n  (define-fun var1008_nullToEmpty/1403447389 ((x!0 (Array Int ClassObject))) (Array Int\r\n         ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!5))\r\n  (define-fun k!4 ((x!0 Int)) ClassObject\r\n    ClassObject!val!5)\r\n  (define-fun var1942_getAccessibleMethod/841246421 ((x!0 ClassObject)\r\n   (x!1 String)\r\n   (x!2 (Array Int ClassObject))) var1117\r\n    var1117!val!0)\r\n  (define-fun invoke/-1759464968 ((x!0 var1117)\r\n   (x!1 var575)\r\n   (x!2 (Array Int var575))) var575\r\n    var575!val!1)\r\n  (define-fun var1008_nullToEmpty/627354827 ((x!0 (Array Int var575))) (Array Int\r\n         var575)\r\n    ((as const (Array Int var575)) var575!val!0))\r\n)\r\n(error \"line 41 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.046639204025268555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var367 is 1\r\n; rep: (as @var367_0 var367)\r\n; cardinality of var575 is 2\r\n; rep: (as @var575_0 var575)\r\n; rep: (as @var575_1 var575)\r\n; cardinality of var1008 is 1\r\n; rep: (as @var1008_0 var1008)\r\n; cardinality of var1117 is 2\r\n; rep: (as @var1117_0 var1117)\r\n; rep: (as @var1117_1 var1117)\r\n; cardinality of var1942 is 1\r\n; rep: (as @var1942_0 var1942)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 4\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n; rep: (as @ClassObject_2 ClassObject)\r\n; rep: (as @ClassObject_3 ClassObject)\r\n(define-fun var1008_nullToEmpty/627354827 ((BOUND_VARIABLE_601 (Array Int var575))) (Array Int var575) ((as const (Array Int var575)) (as @var575_0 var575)))\r\n(define-fun var1008_nullToEmpty/1403447389 ((_arg_1 (Array Int ClassObject))) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun var1942_getAccessibleMethod/841246421 ((_arg_1 ClassObject) (_arg_2 String) (_arg_3 (Array Int ClassObject))) var1117 (as @var1117_1 var1117))\r\n(define-fun invoke/-1759464968 ((BOUND_VARIABLE_605 var1117) (BOUND_VARIABLE_606 var575) (BOUND_VARIABLE_607 (Array Int var575))) var575 (as @var575_0 var575))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var575__ () (Array Int var575) (store ((as const (Array Int var575)) (as @var575_1 var575)) 0 (as @var575_0 var575)))\r\n(define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_1 ClassObject)) 0 (as @ClassObject_2 ClassObject)))\r\n(define-fun null-var1117 () var1117 (as @var1117_0 var1117))\r\n(define-fun null-NullType () var367 (as @var367_0 var367))\r\n(define-fun null-var575 () var575 (as @var575_0 var575))\r\n(define-fun var24 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var1125 () String \"\")\r\n(define-fun var737 () (Array Int var575) (store ((as const (Array Int var575)) (as @var575_0 var575)) 0 (as @var575_1 var575)))\r\n(define-fun var2676 () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)) 0 (as @ClassObject_3 ClassObject)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37031936,
            "run_time": 0.07918047904968262,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1117:\n  ;;   var1117!val!0 var1117!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1117!val!0 () var1117)\n  (declare-fun var1117!val!1 () var1117)\n  ;; cardinality constraint:\n  (forall ((x var1117)) (or (= x var1117!val!0) (= x var1117!val!1)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 ClassObject!val!5 ClassObject!val!3 ClassObject!val!4 ClassObject!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  (declare-fun ClassObject!val!5 () ClassObject)\n  (declare-fun ClassObject!val!3 () ClassObject)\n  (declare-fun ClassObject!val!4 () ClassObject)\n  (declare-fun ClassObject!val!2 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject))\n          (or (= x ClassObject!val!0)\n              (= x ClassObject!val!1)\n              (= x ClassObject!val!5)\n              (= x ClassObject!val!3)\n              (= x ClassObject!val!4)\n              (= x ClassObject!val!2)))\n  ;; -----------\n  ;; universe for var575:\n  ;;   var575!val!1 var575!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var575!val!1 () var575)\n  (declare-fun var575!val!0 () var575)\n  ;; cardinality constraint:\n  (forall ((x var575)) (or (= x var575!val!1) (= x var575!val!0)))\n  ;; -----------\n  (define-fun var3789 () (Array Int ClassObject)\n    (var1008_nullToEmpty/1403447389 var2676))\n  (define-fun var531 () var575\n    (invoke/-1759464968\n  (var1942_getAccessibleMethod/841246421\n    var24\n    var1125\n    (var1008_nullToEmpty/1403447389 var2676))\n  null-var575\n  (var1008_nullToEmpty/627354827 var737)))\n  (define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!3))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var24 () ClassObject\n    ClassObject!val!0)\n  (define-fun var737 () (Array Int var575)\n    ((as const (Array Int var575)) var575!val!0))\n  (define-fun var1945 () var1117\n    (var1942_getAccessibleMethod/841246421\n  var24\n  var1125\n  (var1008_nullToEmpty/1403447389 var2676)))\n  (define-fun var1125 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var1117 () var1117\n    var1117!val!1)\n  (define-fun null-__Array__Int__var575__ () (Array Int var575)\n    ((as const (Array Int var575)) var575!val!1))\n  (define-fun var2824 () (Array Int var575)\n    (var1008_nullToEmpty/627354827 var737))\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var2676 () (Array Int ClassObject)\n    (store ((as const (Array Int ClassObject)) ClassObject!val!2)\n       5\n       ClassObject!val!4))\n  (define-fun null-var575 () var575\n    var575!val!1)\n  (define-fun null-NullType () var367\n    var367!val!0)\n  (define-fun var1942_getAccessibleMethod/841246421 ((x!0 ClassObject)\n   (x!1 String)\n   (x!2 (Array Int ClassObject))) var1117\n    var1117!val!0)\n  (define-fun var1008_nullToEmpty/1403447389 ((x!0 (Array Int ClassObject))) (Array Int\n         ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!5))\n  (define-fun k!38 ((x!0 Int)) ClassObject\n    (ite (= x!0 5) ClassObject!val!4\n      ClassObject!val!2))\n  (define-fun k!40 ((x!0 Int)) ClassObject\n    ClassObject!val!5)\n  (define-fun invoke/-1759464968 ((x!0 var1117)\n   (x!1 var575)\n   (x!2 (Array Int var575))) var575\n    var575!val!1)\n  (define-fun var1008_nullToEmpty/627354827 ((x!0 (Array Int var575))) (Array Int\n         var575)\n    ((as const (Array Int var575)) var575!val!0))\n)\n(error \"line 41 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155799552,
            "run_time": 0.8206138610839844,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2676 () (Array Int ClassObject) ((as const (Array Int ClassObject)) ClassObject!0))\r\n  (define-fun var737 () (Array Int var575) ((as const (Array Int var575)) var575!0))\r\n  (define-fun var1125 () String \"\\u{0}\")\r\n  (define-fun var24 () ClassObject ClassObject!6)\r\n  (define-fun null-var1117 () var1117 var1117!4)\r\n  (define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) ClassObject!0) 0 ClassObject!1))\r\n  (define-fun null-__Array__Int__var575__ () (Array Int var575) (store ((as const (Array Int var575)) var575!0) 0 var575!1))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-ClassObject () ClassObject ClassObject!2)\r\n  (define-fun var1117!30 () var1117 (var1942_getAccessibleMethod/841246421 ClassObject!6 \"\\u{0}\" (store ((as const (Array Int ClassObject)) ClassObject!0) 1 ClassObject!1)))\r\n  (define-fun var1008_nullToEmpty/1403447389 ((x!0 (Array Int ClassObject))) (Array Int ClassObject) (ite (= x!0 ((as const (Array Int ClassObject)) ClassObject!0)) (store ((as const (Array Int ClassObject)) ClassObject!0) 1 ClassObject!1) ((as const (Array Int ClassObject)) ClassObject!0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 6,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Class",
            "r1 := @parameter1: java.lang.String",
            "r12 := @parameter2: java.lang.Object[]",
            "r13 := @parameter3: java.lang.Class[]",
            "r14 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(r12)",
            "r15 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Class[] nullToEmpty(java.lang.Class[])>(r13)",
            "r2 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.reflect.Method getAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(r0, r1, r15)",
            "if r2 != null goto $r3 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r14)",
            "$r3 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r14)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy__\u300ainit\u300b__-236154542\\3754.smt2",
        "z3": {
            "memory": 31313920,
            "run_time": 60.00188064575195,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1658880,
            "run_time": 0.028593778610229492,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3835 is 5\r\n; rep: (as @var3835_0 var3835)\r\n; rep: (as @var3835_1 var3835)\r\n; rep: (as @var3835_2 var3835)\r\n; rep: (as @var3835_3 var3835)\r\n; rep: (as @var3835_4 var3835)\r\n; cardinality of var1023 is 2\r\n; rep: (as @var1023_0 var1023)\r\n; rep: (as @var1023_1 var1023)\r\n; cardinality of var241 is 3\r\n; rep: (as @var241_0 var241)\r\n; rep: (as @var241_1 var241)\r\n; rep: (as @var241_2 var241)\r\n; cardinality of var2348 is 1\r\n; rep: (as @var2348_0 var2348)\r\n; cardinality of var2301 is 1\r\n; rep: (as @var2301_0 var2301)\r\n; cardinality of var1873 is 1\r\n; rep: (as @var1873_0 var1873)\r\n; cardinality of var2631 is 1\r\n; rep: (as @var2631_0 var2631)\r\n; cardinality of var2965 is 1\r\n; rep: (as @var2965_0 var2965)\r\n; cardinality of var3905 is 1\r\n; rep: (as @var3905_0 var3905)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun <init>/1132792119 ((BOUND_VARIABLE_656 var2348) (BOUND_VARIABLE_657 var2301)) void (as @void_0 void))\r\n(define-fun cast-from-var3835-to-var2348 ((BOUND_VARIABLE_660 var3835)) var2348 (as @var2348_0 var2348))\r\n(define-fun field/-1318375070 ((_arg_1 var3835)) Int 0)\r\n(define-fun var2631_toLocale/455255440 ((_arg_1 var241)) var241 (as @var241_2 var241))\r\n(define-fun locale/-1318375070 ((_arg_1 var3835)) var241 (as @var241_2 var241))\r\n(define-fun String-init () String \"\")\r\n(define-fun var3905_access$100/542141246 ((_arg_1 var1023) (_arg_2 var241) (_arg_3 Int) (_arg_4 String)) var2965 (as @var2965_0 var2965))\r\n(define-fun lKeyValues/-1318375070 ((_arg_1 var3835)) var2965 (as @var2965_0 var2965))\r\n(define-fun length/-171891354 ((BOUND_VARIABLE_663 String)) Int 0)\r\n(define-fun setLength/1276735992 ((BOUND_VARIABLE_666 String) (BOUND_VARIABLE_667 Int)) void (as @void_0 void))\r\n(define-fun createPattern/1592915889 ((BOUND_VARIABLE_670 var2348) (BOUND_VARIABLE_671 String)) void (as @void_0 void))\r\n(define-fun null-var3835 () var3835 (as @var3835_0 var3835))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var1023 () var1023 (as @var1023_0 var1023))\r\n(define-fun null-var241 () var241 (as @var241_0 var241))\r\n(define-fun null-NullType () var1873 (as @var1873_0 var1873))\r\n(define-fun null-var2301 () var2301 (as @var2301_0 var2301))\r\n(define-fun var407 () var3835 (as @var3835_1 var3835))\r\n(define-fun var945 () Int 0)\r\n(define-fun var3094 () var1023 (as @var1023_1 var1023))\r\n(define-fun var1163 () var241 (as @var241_1 var241))\r\n(define-fun var407!1 () var3835 (as @var3835_0 var3835))\r\n(define-fun var3566 () var1873 (as @var1873_0 var1873))\r\n(define-fun var407!2 () var3835 (as @var3835_2 var3835))\r\n(define-fun var407!3 () var3835 (as @var3835_3 var3835))\r\n(define-fun var3568!1 () String \"\")\r\n(define-fun var3568!2 () String \"((?iu)\")\r\n(define-fun var407!4 () var3835 (as @var3835_4 var3835))\r\n(define-fun var3568!3 () String \"\")\r\n(define-fun var3093!1 () Int 0)\r\n(define-fun var3568!4 () String \")\")\r\n(define-fun var407!5 () var3835 (as @var3835_0 var3835))\r\n(define-fun var3568!5 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36356096,
            "run_time": 0.08023619651794434,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2965:\n  ;;   var2965!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2965!val!0 () var2965)\n  ;; cardinality constraint:\n  (forall ((x var2965)) (= x var2965!val!0))\n  ;; -----------\n  ;; universe for var241:\n  ;;   var241!val!0 var241!val!1 var241!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var241!val!0 () var241)\n  (declare-fun var241!val!1 () var241)\n  (declare-fun var241!val!2 () var241)\n  ;; cardinality constraint:\n  (forall ((x var241))\n          (or (= x var241!val!0) (= x var241!val!1) (= x var241!val!2)))\n  ;; -----------\n  ;; universe for var1023:\n  ;;   var1023!val!1 var1023!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1023!val!1 () var1023)\n  (declare-fun var1023!val!0 () var1023)\n  ;; cardinality constraint:\n  (forall ((x var1023)) (or (= x var1023!val!1) (= x var1023!val!0)))\n  ;; -----------\n  ;; universe for var3835:\n  ;;   var3835!val!0 var3835!val!1 var3835!val!2 var3835!val!4 var3835!val!3 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3835!val!0 () var3835)\n  (declare-fun var3835!val!1 () var3835)\n  (declare-fun var3835!val!2 () var3835)\n  (declare-fun var3835!val!4 () var3835)\n  (declare-fun var3835!val!3 () var3835)\n  ;; cardinality constraint:\n  (forall ((x var3835))\n          (or (= x var3835!val!0)\n              (= x var3835!val!1)\n              (= x var3835!val!2)\n              (= x var3835!val!4)\n              (= x var3835!val!3)))\n  ;; -----------\n  (define-fun null-var241 () var241\n    var241!val!1)\n  (define-fun var407!4 () var3835\n    var3835!val!4)\n  (define-fun var3094 () var1023\n    var1023!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var505 () Int\n    (length/-171891354 var3568!2))\n  (define-fun null-var1023 () var1023\n    var1023!val!1)\n  (define-fun var3769 () var2965\n    (var3905_access$100/542141246 var3094 var1163 var945 var3568!2))\n  (define-fun var1163 () var241\n    var241!val!0)\n  (define-fun var407!2 () var3835\n    var3835!val!2)\n  (define-fun var407!3 () var3835\n    var3835!val!3)\n  (define-fun var174 () var241\n    (var2631_toLocale/455255440 var1163))\n  (define-fun null-var3835 () var3835\n    var3835!val!1)\n  (define-fun var407 () var3835\n    var3835!val!0)\n  (define-fun var3093 () Int\n    (- (length/-171891354 var3568!2) 1))\n  (define-fun null-Int () Int\n    3)\n  (define-fun var3568 () String\n    String-init)\n  (define-fun var3568!3 () String\n    \"\")\n  (define-fun var3568!4 () String\n    \")\")\n  (define-fun var3568!1 () String\n    \"\")\n  (define-fun var3568!2 () String\n    \"((?iu)\")\n  (define-fun var945 () Int\n    2)\n  (define-fun var3566 () var1873\n    var1873!val!0)\n  (define-fun null-var2301 () var2301\n    var2301!val!0)\n  (define-fun null-NullType () var1873\n    var1873!val!0)\n  (define-fun var3093!1 () Int\n    0)\n  (define-fun var407!5 () var3835\n    var3835!val!0)\n  (define-fun var3568!5 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var407!1 () var3835\n    var3835!val!0)\n  (define-fun locale/-1318375070 ((x!0 var3835)) var241\n    var241!val!2)\n  (define-fun field/-1318375070 ((x!0 var3835)) Int\n    2)\n  (define-fun lKeyValues/-1318375070 ((x!0 var3835)) var2965\n    var2965!val!0)\n  (define-fun var2631_toLocale/455255440 ((x!0 var241)) var241\n    var241!val!2)\n  (define-fun var3905_access$100/542141246 ((x!0 var1023)\n   (x!1 var241)\n   (x!2 Int)\n   (x!3 String)) var2965\n    var2965!val!0)\n  (define-fun setLength/1276735992 ((x!0 String) (x!1 Int)) void\n    void!val!0)\n  (define-fun length/-171891354 ((x!0 String)) Int\n    0)\n  (define-fun cast-from-var3835-to-var2348 ((x!0 var3835)) var2348\n    var2348!val!0)\n  (define-fun <init>/1132792119 ((x!0 var2348) (x!1 var2301)) void\n    void!val!0)\n  (define-fun createPattern/1592915889 ((x!0 var2348) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 88 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179933184,
            "run_time": 0.7882988452911377,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3835/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy__init__-236154542\\3754.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3568!4 =\r\n     concat(var3568!3, \")\")\r\n\r\n544ms\r\n"
        },
        "undefined_function_count": 11,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: int length()>",
            "<java.lang.StringBuilder: void setLength(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: int length()>": 1,
            "<java.lang.StringBuilder: void setLength(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy",
            "i0 := @parameter0: int",
            "r4 := @parameter1: java.util.Calendar",
            "r1 := @parameter2: java.util.Locale",
            "specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser$PatternStrategy: void <init>(org.apache.commons.lang3.time.FastDateParser$1)>(null)",
            "r0.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: int field> = i0",
            "$r2 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.Locale toLocale(java.util.Locale)>(r1)",
            "r0.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: java.util.Locale locale> = $r2",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"((?iu)\")",
            "$r5 = staticinvoke <org.apache.commons.lang3.time.FastDateParser: java.util.Map access$100(java.util.Calendar,java.util.Locale,int,java.lang.StringBuilder)>(r4, r1, i0, $r3)",
            "r0.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: java.util.Map lKeyValues> = $r5",
            "$i1 = virtualinvoke $r3.<java.lang.StringBuilder: int length()>()",
            "$i2 = $i1 - 1",
            "virtualinvoke $r3.<java.lang.StringBuilder: void setLength(int)>($i2)",
            "virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "virtualinvoke r0.<org.apache.commons.lang3.time.FastDateParser$CaseInsensitiveTextStrategy: void createPattern(java.lang.StringBuilder)>($r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy__parse__2141306949\\3811.smt2",
        "z3": {
            "memory": 16056320,
            "run_time": 0.09035944938659668,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3678:\r\n  ;;   var3678!val!0 var3678!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3678!val!0 () var3678)\r\n  (declare-fun var3678!val!1 () var3678)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3678)) (or (= x var3678!val!0) (= x var3678!val!1)))\r\n  ;; -----------\r\n  ;; universe for var188:\r\n  ;;   var188!val!0 var188!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var188!val!0 () var188)\r\n  (declare-fun var188!val!1 () var188)\r\n  ;; cardinality constraint:\r\n  (forall ((x var188)) (or (= x var188!val!0) (= x var188!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3704:\r\n  ;;   var3704!val!0 var3704!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3704!val!0 () var3704)\r\n  (declare-fun var3704!val!1 () var3704)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3704)) (or (= x var3704!val!0) (= x var3704!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2984:\r\n  ;;   var2984!val!0 var2984!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2984!val!0 () var2984)\r\n  (declare-fun var2984!val!1 () var2984)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2984)) (or (= x var2984!val!0) (= x var2984!val!1)))\r\n  ;; -----------\r\n  (define-fun var1778 () Int\r\n    0)\r\n  (define-fun null-var3678 () var3678\r\n    var3678!val!1)\r\n  (define-fun var3392 () var2984\r\n    var2984!val!0)\r\n  (define-fun var1009 () Int\r\n    (str.len (formatField/1302741359 var2073)))\r\n  (define-fun var3862 () var188\r\n    var188!val!0)\r\n  (define-fun var2073 () var3704\r\n    var3704!val!0)\r\n  (define-fun var3445 () String\r\n    (formatField/1302741359 var2073))\r\n  (define-fun var2641 () String\r\n    (formatField/1302741359 var2073))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2743 () var3678\r\n    var3678!val!0)\r\n  (define-fun null-var188 () var188\r\n    var188!val!1)\r\n  (define-fun null-var2984 () var2984\r\n    var2984!val!1)\r\n  (define-fun var3540 () Int\r\n    (getIndex/-2136393185 var3392))\r\n  (define-fun var1376 () Int\r\n    1)\r\n  (define-fun null-var3704 () var3704\r\n    var3704!val!1)\r\n  (define-fun var483 () String\r\n    \"A\")\r\n  (define-fun var3296 () Int\r\n    (str.len (formatField/1302741359 var2073)))\r\n  (define-fun var3889 () Int\r\n    (+ (str.len (formatField/1302741359 var2073)) (getIndex/-2136393185 var3392)))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var3889!1 () Int\r\n    0)\r\n  (define-fun var3392!1 () var2984\r\n    var2984!val!0)\r\n  (define-fun formatField/1302741359 ((x!0 var3704)) String\r\n    \"\")\r\n  (define-fun getIndex/-2136393185 ((x!0 var2984)) Int\r\n    0)\r\n  (define-fun setIndex/-453939609 ((x!0 var2984) (x!1 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 55 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1634304,
            "run_time": 0.015554666519165039,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3704 is 2\r\n; rep: (as @var3704_0 var3704)\r\n; rep: (as @var3704_1 var3704)\r\n; cardinality of var188 is 2\r\n; rep: (as @var188_0 var188)\r\n; rep: (as @var188_1 var188)\r\n; cardinality of var3678 is 2\r\n; rep: (as @var3678_0 var3678)\r\n; rep: (as @var3678_1 var3678)\r\n; cardinality of var982 is 1\r\n; rep: (as @var982_0 var982)\r\n; cardinality of var2984 is 2\r\n; rep: (as @var2984_0 var2984)\r\n; rep: (as @var2984_1 var2984)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun formatField/1302741359 ((_arg_1 var3704)) String \"\")\r\n(define-fun getIndex/-2136393185 ((BOUND_VARIABLE_639 var2984)) Int 0)\r\n(define-fun setIndex/-453939609 ((BOUND_VARIABLE_642 var2984) (BOUND_VARIABLE_643 Int)) void (as @void_0 void))\r\n(define-fun null-var3704 () var3704 (as @var3704_0 var3704))\r\n(define-fun null-var188 () var188 (as @var188_0 var188))\r\n(define-fun null-var3678 () var3678 (as @var3678_0 var3678))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var2984 () var2984 (as @var2984_0 var2984))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2073 () var3704 (as @var3704_1 var3704))\r\n(define-fun var3862 () var188 (as @var188_1 var188))\r\n(define-fun var2743 () var3678 (as @var3678_1 var3678))\r\n(define-fun var483 () String \"\")\r\n(define-fun var3392 () var2984 (as @var2984_1 var2984))\r\n(define-fun var1376 () Int 0)\r\n(define-fun var3392!1 () var2984 (as @var2984_0 var2984))\r\n(define-fun var3889!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35532800,
            "run_time": 0.09181380271911621,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 54 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 55 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181399552,
            "run_time": 0.7550170421600342,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1376 () Int 1)\r\n  (define-fun var3392 () var2984 var2984!16)\r\n  (define-fun var483 () String \"\\u{0}\")\r\n  (define-fun var2743 () var3678 var3678!14)\r\n  (define-fun var3862 () var188 var188!12)\r\n  (define-fun var2073 () var3704 var3704!10)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var2984 () var2984 var2984!8)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3678 () var3678 var3678!6)\r\n  (define-fun null-var188 () var188 var188!4)\r\n  (define-fun null-var3704 () var3704 var3704!2)\r\n  (define-fun formatField/1302741359 ((x!0 var3704)) String (ite (= x!0 var3704!10) \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy",
            "r6 := @parameter0: org.apache.commons.lang3.time.FastDateParser",
            "r7 := @parameter1: java.util.Calendar",
            "r4 := @parameter2: java.lang.String",
            "r2 := @parameter3: java.text.ParsePosition",
            "i9 := @parameter4: int",
            "i10 = 0",
            "$r1 = r0.<org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy: java.lang.String formatField>",
            "$i0 = virtualinvoke $r1.<java.lang.String: int length()>()",
            "if i10 >= $i0 goto $r3 = r0.<org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy: java.lang.String formatField>",
            "$r3 = r0.<org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy: java.lang.String formatField>",
            "$i2 = virtualinvoke $r3.<java.lang.String: int length()>()",
            "$i1 = virtualinvoke r2.<java.text.ParsePosition: int getIndex()>()",
            "$i3 = $i2 + $i1",
            "virtualinvoke r2.<java.text.ParsePosition: void setIndex(int)>($i3)",
            "return 1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy__toString__1916433615\\3839.smt2",
        "z3": {
            "memory": 31887360,
            "run_time": 0.10469555854797363,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3581:\r\n  ;;   var3581!val!0 var3581!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3581!val!0 () var3581)\r\n  (declare-fun var3581!val!1 () var3581)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3581)) (or (= x var3581!val!0) (= x var3581!val!1)))\r\n  ;; -----------\r\n  (define-fun var1289 () String\r\n    (str.++ var1349!1\r\n        \"CopyQuotedStrategy [formatField=\"\r\n        (formatField/1302741359 var251)\r\n        \"]\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1349 () String\r\n    String-init)\r\n  (define-fun var1206 () String\r\n    (str.++ var1349!1 \"CopyQuotedStrategy [formatField=\"))\r\n  (define-fun var251 () var3581\r\n    var3581!val!0)\r\n  (define-fun var798 () String\r\n    (formatField/1302741359 var251))\r\n  (define-fun var394 () String\r\n    (str.++ var1349!1\r\n        \"CopyQuotedStrategy [formatField=\"\r\n        (formatField/1302741359 var251)))\r\n  (define-fun null-var3581 () var3581\r\n    var3581!val!1)\r\n  (define-fun var380 () String\r\n    (str.++ var1349!1\r\n        \"CopyQuotedStrategy [formatField=\"\r\n        (formatField/1302741359 var251)\r\n        \"]\"))\r\n  (define-fun var1206!1 () String\r\n    \"CopyQuotedStrategy [formatField=\")\r\n  (define-fun var1349!1 () String\r\n    \"\")\r\n  (define-fun var1349!2 () String\r\n    \"CopyQuotedStrategy [formatField=\")\r\n  (define-fun var394!1 () String\r\n    \"CopyQuotedStrategy [formatField=]\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun formatField/1302741359 ((x!0 var3581)) String\r\n    \"\")\r\n)\r\n(error \"line 39 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.015199661254882812,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3581 is 2\r\n; rep: (as @var3581_0 var3581)\r\n; rep: (as @var3581_1 var3581)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun formatField/1302741359 ((BOUND_VARIABLE_526 var3581)) String \"\")\r\n(define-fun null-var3581 () var3581 (as @var3581_0 var3581))\r\n(define-fun var251 () var3581 (as @var3581_1 var3581))\r\n(define-fun var1349!1 () String \"\")\r\n(define-fun var1349!2 () String \"CopyQuotedStrategy [formatField=\")\r\n(define-fun var1206!1 () String \"CopyQuotedStrategy [formatField=\")\r\n(define-fun var394!1 () String \"CopyQuotedStrategy [formatField=]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36184064,
            "run_time": 0.07664823532104492,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3581:\n  ;;   var3581!val!0 var3581!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3581!val!0 () var3581)\n  (declare-fun var3581!val!1 () var3581)\n  ;; cardinality constraint:\n  (forall ((x var3581)) (or (= x var3581!val!0) (= x var3581!val!1)))\n  ;; -----------\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1206 () String\n    (str.++ var1349!1 \"CopyQuotedStrategy [formatField=\"))\n  (define-fun var1349 () String\n    String-init)\n  (define-fun var798 () String\n    (formatField/1302741359 var251))\n  (define-fun var394 () String\n    (str.++ var1349!1\n        \"CopyQuotedStrategy [formatField=\"\n        (formatField/1302741359 var251)))\n  (define-fun var380 () String\n    (str.++ var1349!1\n        \"CopyQuotedStrategy [formatField=\"\n        (formatField/1302741359 var251)\n        \"]\"))\n  (define-fun var251 () var3581\n    var3581!val!0)\n  (define-fun var1289 () String\n    (str.++ var1349!1\n        \"CopyQuotedStrategy [formatField=\"\n        (formatField/1302741359 var251)\n        \"]\"))\n  (define-fun null-var3581 () var3581\n    var3581!val!1)\n  (define-fun var1206!1 () String\n    \"CopyQuotedStrategy [formatField=\")\n  (define-fun var1349!1 () String\n    \"\")\n  (define-fun var1349!2 () String\n    \"CopyQuotedStrategy [formatField=\")\n  (define-fun var394!1 () String\n    \"CopyQuotedStrategy [formatField=]\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun formatField/1302741359 ((x!0 var3581)) String\n    \"\")\n)\n(error \"line 39 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177438720,
            "run_time": 0.7721855640411377,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3581/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy__toString__1916433615\\3839.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var394!1 =\r\n     concat(all_22_3, \"]\")\r\n   var1206!1 =\r\n     concat(\"CopyQuotedStrategy [formatField=\", all_19_2)\r\n   all_22_3 =\r\n     concat(\"CopyQuotedStrategy [formatField=\", all_19_2)\r\n\r\n543ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"CopyQuotedStrategy [formatField=\")",
            "$r2 = r1.<org.apache.commons.lang3.time.FastDateParser$CopyQuotedStrategy: java.lang.String formatField>",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy__\u300ainit\u300b__1484273582\\3890.smt2",
        "z3": {
            "memory": 31232000,
            "run_time": 60.011091232299805,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12247040,
            "run_time": 60.01044273376465,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36388864,
            "run_time": 60.00401329994202,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 197419008,
            "run_time": 0.9896695613861084,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var888!3 () String \"((?iu)[+-]\\u{0}5cd{4}|GMT[+-]\\u{0}5cd{1,2}:\\u{0}5cd{2})\")\r\n  (define-fun var888!2 () String \"((?iu)[+-]\\u{0}5cd{4}|GMT[+-]\\u{0}5cd{1,2}:\\u{0}5cd{2}\")\r\n  (define-fun var888!1 () String \"\")\r\n  (define-fun var1586!3 () var697 var697!16)\r\n  (define-fun var1586!2 () var697 var697!14)\r\n  (define-fun var3225!1 () var245 var245!12)\r\n  (define-fun var3160 () var766 var766!10)\r\n  (define-fun var1586 () var697 var697!8)\r\n  (define-fun null-var766 () var766 var766!6)\r\n  (define-fun null-var697 () var697 var697!4)\r\n  (define-fun var2257_getAvailableIDs/-1200039018 () (Array Int String) ((as const (Array Int String)) \"\"))\r\n  (define-fun var3909!60 () var3909 (var3909_getInstance/2052282742 var766!10))\r\n  (define-fun var766!58 () var766 (locale/-580305909 var697!16))\r\n  (define-fun var766!58 () var766 (var1416_toLocale/455255440 var766!10))\r\n  (define-fun var1359!56 () var1359 (tzNames/-580305909 var697!14))\r\n  (define-fun var1359!56 () var1359 (cast-from-var245-to-var1359 var245!12))\r\n  (define-fun getLength-Arr-String-1 ((x!0 (Array Int String))) Int (ite (= x!0 ((as const (Array Int String)) \"\")) 0 0))\r\n  (define-fun getLength-Arr-String-2 ((x!0 (Array Int (Array Int String)))) Int (ite (= x!0 ((as const (Array Int (Array Int String))) ((as const (Array Int String)) \"\"))) 0 0))\r\n  (define-fun getZoneStrings/-1822190447 ((x!0 var3909)) (Array Int (Array Int String)) (ite (= x!0 var3909!60) ((as const (Array Int (Array Int String))) ((as const (Array Int String)) \"\")) ((as const (Array Int (Array Int String))) ((as const (Array Int String)) \"\"))))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 21,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy",
            "r2 := @parameter0: java.util.Locale",
            "specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser$PatternStrategy: void <init>(org.apache.commons.lang3.time.FastDateParser$1)>(null)",
            "$r1 = new java.util.HashMap",
            "specialinvoke $r1.<java.util.HashMap: void <init>()>()",
            "r0.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy: java.util.Map tzNames> = $r1",
            "$r3 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.Locale toLocale(java.util.Locale)>(r2)",
            "r0.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy: java.util.Locale locale> = $r3",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"((?iu)[+-]\\\\d{4}|GMT[+-]\\\\d{1,2}:\\\\d{2}\")",
            "$r5 = new java.util.TreeSet",
            "$r6 = staticinvoke <org.apache.commons.lang3.time.FastDateParser: java.util.Comparator access$600()>()",
            "specialinvoke $r5.<java.util.TreeSet: void <init>(java.util.Comparator)>($r6)",
            "$r7 = staticinvoke <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>(r2)",
            "r8 = virtualinvoke $r7.<java.text.DateFormatSymbols: java.lang.String[][] getZoneStrings()>()",
            "i1 = lengthof r8",
            "i2 = 0",
            "if i2 >= i1 goto r21 = staticinvoke <java.util.TimeZone: java.lang.String[] getAvailableIDs()>()",
            "r21 = staticinvoke <java.util.TimeZone: java.lang.String[] getAvailableIDs()>()",
            "i4 = lengthof r21",
            "i5 = 0",
            "if i5 >= i4 goto $r9 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy$lambda_new_0__266: java.util.function.Consumer bootstrap$(java.lang.StringBuilder)>($r4)",
            "$r9 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy$lambda_new_0__266: java.util.function.Consumer bootstrap$(java.lang.StringBuilder)>($r4)",
            "interfaceinvoke $r5.<java.util.Set: void forEach(java.util.function.Consumer)>($r9)",
            "virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "virtualinvoke r0.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy: void createPattern(java.lang.StringBuilder)>($r4)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__getStrategy__1867214738\\4255.smt2",
        "z3": {
            "memory": 26005504,
            "run_time": 0.14714765548706055,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1670:\r\n  ;;   var1670!val!1 var1670!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1670!val!1 () var1670)\r\n  (declare-fun var1670!val!0 () var1670)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1670)) (or (= x var1670!val!1) (= x var1670!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3590:\r\n  ;;   var3590!val!0 var3590!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3590!val!0 () var3590)\r\n  (declare-fun var3590!val!1 () var3590)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3590)) (or (= x var3590!val!0) (= x var3590!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var1670 () var1670\r\n    var1670!val!1)\r\n  (define-fun var617 () Int\r\n    4)\r\n  (define-fun var3842 () String\r\n    (str.++ (append/-1166366385 (str.++ var1999!1 \"Format '\") var1171)\r\n        \"' not supported\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1698 () String\r\n    (str.++ var1999!1 \"Format '\"))\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var1363 () var3590\r\n    var3590!val!0)\r\n  (define-fun var578 () var1670\r\n    var1670!val!0)\r\n  (define-fun var1171 () Int\r\n    2)\r\n  (define-fun var1698!1 () String\r\n    \"Format '\")\r\n  (define-fun var86 () String\r\n    (append/-1166366385 (str.++ var1999!1 \"Format '\") var1171))\r\n  (define-fun var3921 () var2925\r\n    var2925-init)\r\n  (define-fun var3224 () String\r\n    (str.++ (append/-1166366385 (str.++ var1999!1 \"Format '\") var1171)\r\n        \"' not supported\"))\r\n  (define-fun var1999 () String\r\n    String-init)\r\n  (define-fun var2904 () Int\r\n    var1171)\r\n  (define-fun null-var3590 () var3590\r\n    var3590!val!1)\r\n  (define-fun var1999!1 () String\r\n    \"\")\r\n  (define-fun var86!1 () String\r\n    \"' not supported\")\r\n  (define-fun var1999!2 () String\r\n    \"Format '\")\r\n  (define-fun var3224!1 () String\r\n    \"\")\r\n  (define-fun var2925-init () var2925\r\n    var2925!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3921!1 () var2925\r\n    var2925!val!0)\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var2925) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 60 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1654784,
            "run_time": 0.01473546028137207,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1670 is 2\r\n; rep: (as @var1670_0 var1670)\r\n; rep: (as @var1670_1 var1670)\r\n; cardinality of var3590 is 2\r\n; rep: (as @var3590_0 var3590)\r\n; rep: (as @var3590_1 var3590)\r\n; cardinality of var2925 is 1\r\n; rep: (as @var2925_0 var2925)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2925-init () var2925 (as @var2925_0 var2925))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_1069 String) (BOUND_VARIABLE_1070 Int)) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_1073 var2925) (BOUND_VARIABLE_1074 String)) void (as @void_0 void))\r\n(define-fun null-var1670 () var1670 (as @var1670_0 var1670))\r\n(define-fun null-Int () Int 0)\r\n(define-fun null-var3590 () var3590 (as @var3590_0 var3590))\r\n(define-fun var578 () var1670 (as @var1670_1 var1670))\r\n(define-fun var1171 () Int 1)\r\n(define-fun var617 () Int 1)\r\n(define-fun var1363 () var3590 (as @var3590_1 var3590))\r\n(define-fun var1999!1 () String \"\")\r\n(define-fun var1999!2 () String \"Format '\")\r\n(define-fun var1698!1 () String \"Format '\")\r\n(define-fun var86!1 () String \"' not supported\")\r\n(define-fun var3921!1 () var2925 (as @var2925_0 var2925))\r\n(define-fun var3224!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36831232,
            "run_time": 0.10710310935974121,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1670:\n  ;;   var1670!val!1 var1670!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1670!val!1 () var1670)\n  (declare-fun var1670!val!0 () var1670)\n  ;; cardinality constraint:\n  (forall ((x var1670)) (or (= x var1670!val!1) (= x var1670!val!0)))\n  ;; -----------\n  ;; universe for var3590:\n  ;;   var3590!val!0 var3590!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3590!val!0 () var3590)\n  (declare-fun var3590!val!1 () var3590)\n  ;; cardinality constraint:\n  (forall ((x var3590)) (or (= x var3590!val!0) (= x var3590!val!1)))\n  ;; -----------\n  (define-fun var3842 () String\n    (str.++ (append/-1166366385 (str.++ var1999!1 \"Format '\") var1171)\n        \"' not supported\"))\n  (define-fun null-var1670 () var1670\n    var1670!val!1)\n  (define-fun var617 () Int\n    4)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1698 () String\n    (str.++ var1999!1 \"Format '\"))\n  (define-fun var1999!2 () String\n    \"Format '\")\n  (define-fun null-Int () Int\n    3)\n  (define-fun var1363 () var3590\n    var3590!val!0)\n  (define-fun var3921 () var2925\n    var2925-init)\n  (define-fun var86 () String\n    (append/-1166366385 (str.++ var1999!1 \"Format '\") var1171))\n  (define-fun var578 () var1670\n    var1670!val!0)\n  (define-fun var1171 () Int\n    2)\n  (define-fun var2904 () Int\n    var1171)\n  (define-fun var3224 () String\n    (str.++ (append/-1166366385 (str.++ var1999!1 \"Format '\") var1171)\n        \"' not supported\"))\n  (define-fun var1999 () String\n    String-init)\n  (define-fun var1698!1 () String\n    \"Format '\")\n  (define-fun null-var3590 () var3590\n    var3590!val!1)\n  (define-fun var1999!1 () String\n    \"\")\n  (define-fun var86!1 () String\n    \"' not supported\")\n  (define-fun var3224!1 () String\n    \"\")\n  (define-fun var2925-init () var2925\n    var2925!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3921!1 () var2925\n    var2925!val!0)\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var2925) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 60 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182022144,
            "run_time": 0.8044869899749756,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3590/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.time.FastDateParser__getStrategy__1867214738\\4255.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_25_4 =\r\n     concat(all_22_4, \"\\u{0}27 not supported\")\r\n   var86!1 =\r\n     concat(all_22_4, \"\\u{0}27 not supported\")\r\n\r\n572ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser",
            "c0 := @parameter0: char",
            "i1 := @parameter1: int",
            "r1 := @parameter2: java.util.Calendar",
            "$i2 = (int) c0",
            "tableswitch($i2) {     case 68: goto $r20 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY>;     case 69: goto $r19 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(7, r1);     case 70: goto $r18 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY>;     case 71: goto $r17 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(0, r1);     case 72: goto $r16 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY>;     case 73: goto $r30 = new java.lang.IllegalArgumentException;     case 74: goto $r30 = new java.lang.IllegalArgumentException;     case 75: goto $r15 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY>;     case 76: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 77: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 78: goto $r30 = new java.lang.IllegalArgumentException;     case 79: goto $r30 = new java.lang.IllegalArgumentException;     case 80: goto $r30 = new java.lang.IllegalArgumentException;     case 81: goto $r30 = new java.lang.IllegalArgumentException;     case 82: goto $r30 = new java.lang.IllegalArgumentException;     case 83: goto $r14 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY>;     case 84: goto $r30 = new java.lang.IllegalArgumentException;     case 85: goto $r30 = new java.lang.IllegalArgumentException;     case 86: goto $r30 = new java.lang.IllegalArgumentException;     case 87: goto $r13 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY>;     case 88: goto $r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int)>(i1);     case 89: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 90: goto if i1 != 2 goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     case 91: goto $r30 = new java.lang.IllegalArgumentException;     case 92: goto $r30 = new java.lang.IllegalArgumentException;     case 93: goto $r30 = new java.lang.IllegalArgumentException;     case 94: goto $r30 = new java.lang.IllegalArgumentException;     case 95: goto $r30 = new java.lang.IllegalArgumentException;     case 96: goto $r30 = new java.lang.IllegalArgumentException;     case 97: goto $r10 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(9, r1);     case 98: goto $r30 = new java.lang.IllegalArgumentException;     case 99: goto $r30 = new java.lang.IllegalArgumentException;     case 100: goto $r9 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY>;     case 101: goto $r30 = new java.lang.IllegalArgumentException;     case 102: goto $r30 = new java.lang.IllegalArgumentException;     case 103: goto $r30 = new java.lang.IllegalArgumentException;     case 104: goto $r8 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR12_STRATEGY>;     case 105: goto $r30 = new java.lang.IllegalArgumentException;     case 106: goto $r30 = new java.lang.IllegalArgumentException;     case 107: goto $r7 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR24_OF_DAY_STRATEGY>;     case 108: goto $r30 = new java.lang.IllegalArgumentException;     case 109: goto $r6 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY>;     case 110: goto $r30 = new java.lang.IllegalArgumentException;     case 111: goto $r30 = new java.lang.IllegalArgumentException;     case 112: goto $r30 = new java.lang.IllegalArgumentException;     case 113: goto $r30 = new java.lang.IllegalArgumentException;     case 114: goto $r30 = new java.lang.IllegalArgumentException;     case 115: goto $r5 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY>;     case 116: goto $r30 = new java.lang.IllegalArgumentException;     case 117: goto $r4 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_STRATEGY>;     case 118: goto $r30 = new java.lang.IllegalArgumentException;     case 119: goto $r3 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY>;     case 120: goto $r30 = new java.lang.IllegalArgumentException;     case 121: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 122: goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     default: goto $r30 = new java.lang.IllegalArgumentException; }",
            "$r30 = new java.lang.IllegalArgumentException",
            "$r29 = new java.lang.StringBuilder",
            "specialinvoke $r29.<java.lang.StringBuilder: void <init>()>()",
            "$r23 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Format \\'\")",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(c0)",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' not supported\")",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r26)",
            "throw $r30"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.time.FastDateParser__getStrategy__1867214738\\4279.smt2",
        "z3": {
            "memory": 21000192,
            "run_time": 0.12185788154602051,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3600:\r\n  ;;   var3600!val!1 var3600!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3600!val!1 () var3600)\r\n  (declare-fun var3600!val!0 () var3600)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3600)) (or (= x var3600!val!1) (= x var3600!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1716:\r\n  ;;   var1716!val!1 var1716!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1716!val!1 () var1716)\r\n  (declare-fun var1716!val!0 () var1716)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1716)) (or (= x var1716!val!1) (= x var1716!val!0)))\r\n  ;; -----------\r\n  (define-fun var3394 () Int\r\n    77)\r\n  (define-fun var3052 () var3600\r\n    var3600!val!0)\r\n  (define-fun var1000 () Int\r\n    var2493)\r\n  (define-fun var3533 () var1716\r\n    var1716!val!0)\r\n  (define-fun var2895 () var2739\r\n    var1716-HOUR_STRATEGY)\r\n  (define-fun null-var3600 () var3600\r\n    var3600!val!1)\r\n  (define-fun null-Int () Int\r\n    76)\r\n  (define-fun null-var1716 () var1716\r\n    var1716!val!1)\r\n  (define-fun var2493 () Int\r\n    75)\r\n  (define-fun var1716-HOUR_STRATEGY () var2739\r\n    var2739!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1658880,
            "run_time": 0.015806198120117188,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1716 is 2\r\n; rep: (as @var1716_0 var1716)\r\n; rep: (as @var1716_1 var1716)\r\n; cardinality of var3600 is 2\r\n; rep: (as @var3600_0 var3600)\r\n; rep: (as @var3600_1 var3600)\r\n; cardinality of var2739 is 1\r\n; rep: (as @var2739_0 var2739)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var1716 () var1716 (as @var1716_0 var1716))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var3600 () var3600 (as @var3600_0 var3600))\r\n(define-fun var1716-HOUR_STRATEGY () var2739 (as @var2739_0 var2739))\r\n(define-fun var3533 () var1716 (as @var1716_1 var1716))\r\n(define-fun var2493 () Int 75)\r\n(define-fun var3394 () Int 0)\r\n(define-fun var3052 () var3600 (as @var3600_1 var3600))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 31989760,
            "run_time": 0.09365272521972656,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3600:\n  ;;   var3600!val!1 var3600!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3600!val!1 () var3600)\n  (declare-fun var3600!val!0 () var3600)\n  ;; cardinality constraint:\n  (forall ((x var3600)) (or (= x var3600!val!1) (= x var3600!val!0)))\n  ;; -----------\n  ;; universe for var1716:\n  ;;   var1716!val!1 var1716!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1716!val!1 () var1716)\n  (declare-fun var1716!val!0 () var1716)\n  ;; cardinality constraint:\n  (forall ((x var1716)) (or (= x var1716!val!1) (= x var1716!val!0)))\n  ;; -----------\n  (define-fun var3394 () Int\n    77)\n  (define-fun var3052 () var3600\n    var3600!val!0)\n  (define-fun var3533 () var1716\n    var1716!val!0)\n  (define-fun null-var3600 () var3600\n    var3600!val!1)\n  (define-fun null-Int () Int\n    76)\n  (define-fun var1000 () Int\n    var2493)\n  (define-fun var2895 () var2739\n    var1716-HOUR_STRATEGY)\n  (define-fun null-var1716 () var1716\n    var1716!val!1)\n  (define-fun var2493 () Int\n    75)\n  (define-fun var1716-HOUR_STRATEGY () var2739\n    var2739!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154165248,
            "run_time": 0.5875213146209717,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3052 () var3600 var3600!8)\r\n  (define-fun var3394 () Int 1)\r\n  (define-fun var2493 () Int 75)\r\n  (define-fun var3533 () var1716 var1716!6)\r\n  (define-fun null-var3600 () var3600 var3600!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var1716 () var1716 var1716!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 5,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.lang3.time.FastDateParser",
            "c0 := @parameter0: char",
            "i1 := @parameter1: int",
            "r1 := @parameter2: java.util.Calendar",
            "$i2 = (int) c0",
            "tableswitch($i2) {     case 68: goto $r20 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_YEAR_STRATEGY>;     case 69: goto $r19 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(7, r1);     case 70: goto $r18 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_IN_MONTH_STRATEGY>;     case 71: goto $r17 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(0, r1);     case 72: goto $r16 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_OF_DAY_STRATEGY>;     case 73: goto $r30 = new java.lang.IllegalArgumentException;     case 74: goto $r30 = new java.lang.IllegalArgumentException;     case 75: goto $r15 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY>;     case 76: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 77: goto if i1 < 3 goto $r27 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy NUMBER_MONTH_STRATEGY>;     case 78: goto $r30 = new java.lang.IllegalArgumentException;     case 79: goto $r30 = new java.lang.IllegalArgumentException;     case 80: goto $r30 = new java.lang.IllegalArgumentException;     case 81: goto $r30 = new java.lang.IllegalArgumentException;     case 82: goto $r30 = new java.lang.IllegalArgumentException;     case 83: goto $r14 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MILLISECOND_STRATEGY>;     case 84: goto $r30 = new java.lang.IllegalArgumentException;     case 85: goto $r30 = new java.lang.IllegalArgumentException;     case 86: goto $r30 = new java.lang.IllegalArgumentException;     case 87: goto $r13 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_MONTH_STRATEGY>;     case 88: goto $r12 = staticinvoke <org.apache.commons.lang3.time.FastDateParser$ISO8601TimeZoneStrategy: org.apache.commons.lang3.time.FastDateParser$Strategy getStrategy(int)>(i1);     case 89: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 90: goto if i1 != 2 goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     case 91: goto $r30 = new java.lang.IllegalArgumentException;     case 92: goto $r30 = new java.lang.IllegalArgumentException;     case 93: goto $r30 = new java.lang.IllegalArgumentException;     case 94: goto $r30 = new java.lang.IllegalArgumentException;     case 95: goto $r30 = new java.lang.IllegalArgumentException;     case 96: goto $r30 = new java.lang.IllegalArgumentException;     case 97: goto $r10 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(9, r1);     case 98: goto $r30 = new java.lang.IllegalArgumentException;     case 99: goto $r30 = new java.lang.IllegalArgumentException;     case 100: goto $r9 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_MONTH_STRATEGY>;     case 101: goto $r30 = new java.lang.IllegalArgumentException;     case 102: goto $r30 = new java.lang.IllegalArgumentException;     case 103: goto $r30 = new java.lang.IllegalArgumentException;     case 104: goto $r8 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR12_STRATEGY>;     case 105: goto $r30 = new java.lang.IllegalArgumentException;     case 106: goto $r30 = new java.lang.IllegalArgumentException;     case 107: goto $r7 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR24_OF_DAY_STRATEGY>;     case 108: goto $r30 = new java.lang.IllegalArgumentException;     case 109: goto $r6 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy MINUTE_STRATEGY>;     case 110: goto $r30 = new java.lang.IllegalArgumentException;     case 111: goto $r30 = new java.lang.IllegalArgumentException;     case 112: goto $r30 = new java.lang.IllegalArgumentException;     case 113: goto $r30 = new java.lang.IllegalArgumentException;     case 114: goto $r30 = new java.lang.IllegalArgumentException;     case 115: goto $r5 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy SECOND_STRATEGY>;     case 116: goto $r30 = new java.lang.IllegalArgumentException;     case 117: goto $r4 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy DAY_OF_WEEK_STRATEGY>;     case 118: goto $r30 = new java.lang.IllegalArgumentException;     case 119: goto $r3 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy WEEK_OF_YEAR_STRATEGY>;     case 120: goto $r30 = new java.lang.IllegalArgumentException;     case 121: goto if i1 <= 2 goto $r28 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy ABBREVIATED_YEAR_STRATEGY>;     case 122: goto $r2 = specialinvoke r0.<org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy getLocaleSpecificStrategy(int,java.util.Calendar)>(15, r1);     default: goto $r30 = new java.lang.IllegalArgumentException; }",
            "$r15 = <org.apache.commons.lang3.time.FastDateParser: org.apache.commons.lang3.time.FastDateParser$Strategy HOUR_STRATEGY>",
            "return $r15"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.MethodUtils__invokeStaticMethod__-591292973\\3492.smt2",
        "z3": {
            "memory": 31342592,
            "run_time": 60.002665996551514,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1658880,
            "run_time": 0.0151824951171875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1055 is 1\r\n; rep: (as @var1055_0 var1055)\r\n; cardinality of var2183 is 2\r\n; rep: (as @var2183_0 var2183)\r\n; rep: (as @var2183_1 var2183)\r\n; cardinality of var3208 is 1\r\n; rep: (as @var3208_0 var3208)\r\n; cardinality of var1969 is 2\r\n; rep: (as @var1969_0 var1969)\r\n; rep: (as @var1969_1 var1969)\r\n; cardinality of var869 is 1\r\n; rep: (as @var869_0 var869)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 4\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n; rep: (as @ClassObject_2 ClassObject)\r\n; rep: (as @ClassObject_3 ClassObject)\r\n(define-fun var3208_nullToEmpty/627354827 ((BOUND_VARIABLE_610 (Array Int var2183))) (Array Int var2183) ((as const (Array Int var2183)) (as @var2183_0 var2183)))\r\n(define-fun var3208_nullToEmpty/1403447389 ((_arg_1 (Array Int ClassObject))) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun var869_getMatchingAccessibleMethod/856695000 ((_arg_1 ClassObject) (_arg_2 String) (_arg_3 (Array Int ClassObject))) var1969 (as @var1969_1 var1969))\r\n(define-fun var869_toVarArgs/306330370 ((BOUND_VARIABLE_614 var1969) (BOUND_VARIABLE_615 (Array Int var2183))) (Array Int var2183) ((as const (Array Int var2183)) (as @var2183_0 var2183)))\r\n(define-fun invoke/-1759464968 ((BOUND_VARIABLE_618 var1969) (BOUND_VARIABLE_619 var2183) (BOUND_VARIABLE_620 (Array Int var2183))) var2183 (as @var2183_0 var2183))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var2183__ () (Array Int var2183) (store ((as const (Array Int var2183)) (as @var2183_1 var2183)) 0 (as @var2183_0 var2183)))\r\n(define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_1 ClassObject)) 0 (as @ClassObject_2 ClassObject)))\r\n(define-fun null-var1969 () var1969 (as @var1969_0 var1969))\r\n(define-fun null-NullType () var1055 (as @var1055_0 var1055))\r\n(define-fun null-var2183 () var2183 (as @var2183_0 var2183))\r\n(define-fun var3578 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var3053 () String \"\")\r\n(define-fun var658 () (Array Int var2183) (store ((as const (Array Int var2183)) (as @var2183_0 var2183)) 0 (as @var2183_1 var2183)))\r\n(define-fun var2150 () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)) 0 (as @ClassObject_3 ClassObject)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37842944,
            "run_time": 60.012720823287964,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 158068736,
            "run_time": 0.7258007526397705,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2150 () (Array Int ClassObject) ((as const (Array Int ClassObject)) ClassObject!0))\r\n  (define-fun var658 () (Array Int var2183) ((as const (Array Int var2183)) var2183!0))\r\n  (define-fun var3053 () String \"\\u{0}\")\r\n  (define-fun var3578 () ClassObject ClassObject!6)\r\n  (define-fun null-var1969 () var1969 var1969!4)\r\n  (define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) ClassObject!0) 0 ClassObject!1))\r\n  (define-fun null-__Array__Int__var2183__ () (Array Int var2183) (store ((as const (Array Int var2183)) var2183!0) 0 var2183!1))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-ClassObject () ClassObject ClassObject!2)\r\n  (define-fun var1969!30 () var1969 (var869_getMatchingAccessibleMethod/856695000 ClassObject!6 \"\\u{0}\" (store ((as const (Array Int ClassObject)) ClassObject!0) 1 ClassObject!1)))\r\n  (define-fun var3208_nullToEmpty/1403447389 ((x!0 (Array Int ClassObject))) (Array Int ClassObject) (ite (= x!0 ((as const (Array Int ClassObject)) ClassObject!0)) (store ((as const (Array Int ClassObject)) ClassObject!0) 1 ClassObject!1) ((as const (Array Int ClassObject)) ClassObject!0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 6,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Class",
            "r1 := @parameter1: java.lang.String",
            "r12 := @parameter2: java.lang.Object[]",
            "r13 := @parameter3: java.lang.Class[]",
            "r14 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(r12)",
            "r15 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Class[] nullToEmpty(java.lang.Class[])>(r13)",
            "r2 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.reflect.Method getMatchingAccessibleMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(r0, r1, r15)",
            "if r2 != null goto r16 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.Object[] toVarArgs(java.lang.reflect.Method,java.lang.Object[])>(r2, r14)",
            "r16 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.Object[] toVarArgs(java.lang.reflect.Method,java.lang.Object[])>(r2, r14)",
            "$r3 = virtualinvoke r2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, r16)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.MethodUtils__lambda$getMatchingAccessibleMethod$0__628655597\\3703.smt2",
        "z3": {
            "memory": 30670848,
            "run_time": 0.07801485061645508,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var28:\r\n  ;;   var28!val!0 var28!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var28!val!0 () var28)\r\n  (declare-fun var28!val!1 () var28)\r\n  ;; cardinality constraint:\r\n  (forall ((x var28)) (or (= x var28!val!0) (= x var28!val!1)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var1742 () Bool\r\n    (= (getName/1227988463 var3536) var52))\r\n  (define-fun var3536 () var28\r\n    var28!val!0)\r\n  (define-fun null-var28 () var28\r\n    var28!val!1)\r\n  (define-fun var1367 () String\r\n    (getName/1227988463 var3536))\r\n  (define-fun var504 () (Array Int ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\r\n  (define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!1))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1427 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var52 () String\r\n    \"!0!\")\r\n  (define-fun getName/1227988463 ((x!0 var28)) String\r\n    \"!2!\")\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1634304,
            "run_time": 0.01757335662841797,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2379 is 1\r\n; rep: (as @var2379_0 var2379)\r\n; cardinality of var28 is 2\r\n; rep: (as @var28_0 var28)\r\n; rep: (as @var28_1 var28)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun getName/1227988463 ((_arg_1 var28)) String \"A\")\r\n(define-fun null-String () String \"B\")\r\n(define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_1 ClassObject)) 0 (as @ClassObject_0 ClassObject)))\r\n(define-fun null-var28 () var28 (as @var28_0 var28))\r\n(define-fun var52 () String \"\")\r\n(define-fun var504 () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)) 0 (as @ClassObject_1 ClassObject)))\r\n(define-fun var3536 () var28 (as @var28_1 var28))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 31469568,
            "run_time": 0.09463286399841309,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 29 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152039424,
            "run_time": 0.6658623218536377,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3536 () var28 var28!4)\r\n  (define-fun var504 () (Array Int ClassObject) ((as const (Array Int ClassObject)) ClassObject!0))\r\n  (define-fun var52 () String \"\\u{0}\")\r\n  (define-fun null-var28 () var28 var28!2)\r\n  (define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) ClassObject!0) 0 ClassObject!1))\r\n  (define-fun null-String () String \"\")\r\n  (define-fun getName/1227988463 ((x!0 var28)) String (ite (= x!0 var28!4) \"\\u{1}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r3 := @parameter1: java.lang.Class[]",
            "r0 := @parameter2: java.lang.reflect.Method",
            "$r2 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>()",
            "$z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1)",
            "if $z0 == 0 goto $z2 = 0",
            "$z2 = 0",
            "return $z2"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.MethodUtils__invokeMethod__538237164\\3285.smt2",
        "z3": {
            "memory": 32067584,
            "run_time": 60.00797414779663,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1605632,
            "run_time": 0.0162508487701416,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1970 is 4\r\n; rep: (as @var1970_0 var1970)\r\n; rep: (as @var1970_1 var1970)\r\n; rep: (as @var1970_2 var1970)\r\n; rep: (as @var1970_3 var1970)\r\n; cardinality of var435 is 1\r\n; rep: (as @var435_0 var435)\r\n; cardinality of var3839 is 1\r\n; rep: (as @var3839_0 var3839)\r\n; cardinality of var3950 is 1\r\n; rep: (as @var3950_0 var3950)\r\n; cardinality of var1650 is 1\r\n; rep: (as @var1650_0 var1650)\r\n; cardinality of var3742 is 1\r\n; rep: (as @var3742_0 var3742)\r\n; cardinality of var870 is 1\r\n; rep: (as @var870_0 var870)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var3839_requireNonNull/1378936425 ((BOUND_VARIABLE_821 var1970) (BOUND_VARIABLE_822 String)) var1970 (as @var1970_0 var1970))\r\n(define-fun var3950_nullToEmpty/1403447389 ((BOUND_VARIABLE_825 (Array Int ClassObject))) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun var3950_nullToEmpty/627354827 ((BOUND_VARIABLE_829 (Array Int var1970))) (Array Int var1970) ((as const (Array Int var1970)) (as @var1970_0 var1970)))\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_833 var1970)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var3742_getMatchingMethod/737181742 ((BOUND_VARIABLE_836 ClassObject) (BOUND_VARIABLE_837 String) (BOUND_VARIABLE_838 (Array Int ClassObject))) var1650 (as @var1650_0 var1650))\r\n(define-fun var870-init () var870 (as @var870_0 var870))\r\n(define-fun String-init () String \"\")\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_841 ClassObject)) String \"\")\r\n(define-fun <init>/-966825728 ((BOUND_VARIABLE_844 var870) (BOUND_VARIABLE_845 String)) void (as @void_0 void))\r\n(define-fun null-var1970 () var1970 (as @var1970_0 var1970))\r\n(define-fun null-Bool () Bool false)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-__Array__Int__var1970__ () (Array Int var1970) (store ((as const (Array Int var1970)) (as @var1970_1 var1970)) 0 (as @var1970_2 var1970)))\r\n(define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_1 ClassObject)) 0 (as @ClassObject_0 ClassObject)))\r\n(define-fun null-var1650 () var1650 (as @var1650_0 var1650))\r\n(define-fun var2860 () var1970 (as @var1970_1 var1970))\r\n(define-fun var947 () Bool true)\r\n(define-fun var428 () String \"\")\r\n(define-fun var543 () (Array Int var1970) (store ((as const (Array Int var1970)) (as @var1970_0 var1970)) 0 (as @var1970_3 var1970)))\r\n(define-fun var3221 () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)) 0 (as @ClassObject_1 ClassObject)))\r\n(define-fun var2860!1 () var1970 (as @var1970_0 var1970))\r\n(define-fun var3406 () String \"\")\r\n(define-fun var1077!1 () String \"\")\r\n(define-fun var1077!2 () String \"No such method: \")\r\n(define-fun var1448!1 () String \"No such method: \")\r\n(define-fun var231!1 () String \"No such method: () on object: \")\r\n(define-fun var3910!1 () String \"No such method: () on object: \")\r\n(define-fun var2902!1 () var870 (as @var870_0 var870))\r\n(define-fun var824!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37060608,
            "run_time": 60.01500177383423,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 184127488,
            "run_time": 0.9383673667907715,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1970/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-lang\\smt\\method-org.apache.commons.lang3.reflect.MethodUtils__invokeMethod__538237164\\3285.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var231!1 =\r\n     concat(all_35_4, \"() on object: \")\r\n   var3910!1 =\r\n     concat(all_29_4, all_29_2)\r\n   var1448!1 =\r\n     concat(\"No such method: \", var428)\r\n   all_29_4 =\r\n     concat(all_38_5, \"() on object: \")\r\n   all_35_4 =\r\n     concat(\"No such method: \", var428)\r\n   all_38_5 =\r\n     concat(\"No such method: \", var428)\r\n\r\n697ms\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 22,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "z0 := @parameter1: boolean",
            "r2 := @parameter2: java.lang.String",
            "r12 := @parameter3: java.lang.Object[]",
            "r13 := @parameter4: java.lang.Class[]",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"object\")",
            "r14 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Class[] nullToEmpty(java.lang.Class[])>(r13)",
            "r15 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(r12)",
            "r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "if z0 == 0 goto r16 = \"No such accessible method: \"",
            "r16 = \"No such method: \"",
            "r17 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.reflect.Method getMatchingMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(r1, r2, r14)",
            "if r17 == null goto (branch)",
            "if r17 != null goto r18 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.Object[] toVarArgs(java.lang.reflect.Method,java.lang.Object[])>(r17, r15)",
            "$r4 = new java.lang.NoSuchMethodException",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r16)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"() on object: \")",
            "$r8 = virtualinvoke r1.<java.lang.Class: java.lang.String getName()>()",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r4.<java.lang.NoSuchMethodException: void <init>(java.lang.String)>($r11)",
            "throw $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.MethodUtils__lambda$getMatchingMethod$1__559838386\\3680.smt2",
        "z3": {
            "memory": 22745088,
            "run_time": 0.16702485084533691,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3459:\r\n  ;;   var3459!val!1 var3459!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3459!val!1 () var3459)\r\n  (declare-fun var3459!val!0 () var3459)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3459)) (or (= x var3459!val!1) (= x var3459!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var3459 () var3459\r\n    var3459!val!1)\r\n  (define-fun var762 () var3459\r\n    var3459!val!0)\r\n  (define-fun var2165 () String\r\n    (getName/1227988463 var762))\r\n  (define-fun var1357 () String\r\n    \"!0!\")\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var3947 () Bool\r\n    (= (getName/1227988463 var762) var1357))\r\n  (define-fun getName/1227988463 ((x!0 var3459)) String\r\n    \"\")\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1712128,
            "run_time": 0.014770984649658203,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var85 is 1\r\n; rep: (as @var85_0 var85)\r\n; cardinality of var3459 is 2\r\n; rep: (as @var3459_0 var3459)\r\n; rep: (as @var3459_1 var3459)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getName/1227988463 ((BOUND_VARIABLE_491 var3459)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3459 () var3459 (as @var3459_0 var3459))\r\n(define-fun var1357 () String \"\")\r\n(define-fun var762 () var3459 (as @var3459_1 var3459))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37453824,
            "run_time": 0.09157347679138184,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3459:\n  ;;   var3459!val!1 var3459!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3459!val!1 () var3459)\n  (declare-fun var3459!val!0 () var3459)\n  ;; cardinality constraint:\n  (forall ((x var3459)) (or (= x var3459!val!1) (= x var3459!val!0)))\n  ;; -----------\n  (define-fun var2165 () String\n    (getName/1227988463 var762))\n  (define-fun null-var3459 () var3459\n    var3459!val!1)\n  (define-fun var3947 () Bool\n    (= (getName/1227988463 var762) var1357))\n  (define-fun var1357 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var762 () var3459\n    var3459!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun getName/1227988463 ((x!0 var3459)) String\n    \"\")\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 133058560,
            "run_time": 0.6491508483886719,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var762 () var3459 var3459!4)\r\n  (define-fun var1357 () String \"\\u{0}\")\r\n  (define-fun null-var3459 () var3459 var3459!2)\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.lang.reflect.Method",
            "$r2 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>()",
            "$z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1)",
            "return $z0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.MethodUtils__invokeMethod__538237164\\3316.smt2",
        "z3": {
            "memory": 29020160,
            "run_time": 0.05507946014404297,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 57 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.016020774841308594,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33038336,
            "run_time": 0.10780978202819824,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 57 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166207488,
            "run_time": 0.7296531200408936,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 10,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "z0 := @parameter1: boolean",
            "r2 := @parameter2: java.lang.String",
            "r12 := @parameter3: java.lang.Object[]",
            "r13 := @parameter4: java.lang.Class[]",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(r0, \"object\")",
            "r14 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Class[] nullToEmpty(java.lang.Class[])>(r13)",
            "r15 = staticinvoke <org.apache.commons.lang3.ArrayUtils: java.lang.Object[] nullToEmpty(java.lang.Object[])>(r12)",
            "r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "if z0 == 0 goto r16 = \"No such accessible method: \"",
            "r16 = \"No such method: \"",
            "r17 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.reflect.Method getMatchingMethod(java.lang.Class,java.lang.String,java.lang.Class[])>(r1, r2, r14)",
            "if r17 == null goto (branch)",
            "if r17 != null goto r18 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.Object[] toVarArgs(java.lang.reflect.Method,java.lang.Object[])>(r17, r15)",
            "r18 = staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.Object[] toVarArgs(java.lang.reflect.Method,java.lang.Object[])>(r17, r15)",
            "$r3 = virtualinvoke r17.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(r0, r18)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.lang3.reflect.MethodUtils__lambda$getMatchingMethod$2__-1140902093\\3653.smt2",
        "z3": {
            "memory": 31236096,
            "run_time": 0.05354881286621094,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var815:\r\n  ;;   var815!val!0 var815!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var815!val!0 () var815)\r\n  (declare-fun var815!val!1 () var815)\r\n  ;; cardinality constraint:\r\n  (forall ((x var815)) (or (= x var815!val!0) (= x var815!val!1)))\r\n  ;; -----------\r\n  (define-fun var1743 () String\r\n    (getName/1227988463 var869))\r\n  (define-fun var869 () var815\r\n    var815!val!0)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1578 () Bool\r\n    (= (getName/1227988463 var869) var3856))\r\n  (define-fun var3856 () String\r\n    \"!0!\")\r\n  (define-fun null-var815 () var815\r\n    var815!val!1)\r\n  (define-fun getName/1227988463 ((x!0 var815)) String\r\n    \"\")\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1658880,
            "run_time": 0.015145301818847656,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3699 is 1\r\n; rep: (as @var3699_0 var3699)\r\n; cardinality of var815 is 2\r\n; rep: (as @var815_0 var815)\r\n; rep: (as @var815_1 var815)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getName/1227988463 ((BOUND_VARIABLE_491 var815)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var815 () var815 (as @var815_0 var815))\r\n(define-fun var3856 () String \"\")\r\n(define-fun var869 () var815 (as @var815_1 var815))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35790848,
            "run_time": 0.07828545570373535,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var815:\n  ;;   var815!val!0 var815!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var815!val!0 () var815)\n  (declare-fun var815!val!1 () var815)\n  ;; cardinality constraint:\n  (forall ((x var815)) (or (= x var815!val!0) (= x var815!val!1)))\n  ;; -----------\n  (define-fun var3856 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var815 () var815\n    var815!val!1)\n  (define-fun var1578 () Bool\n    (= (getName/1227988463 var869) var3856))\n  (define-fun var1743 () String\n    (getName/1227988463 var869))\n  (define-fun var869 () var815\n    var815!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun getName/1227988463 ((x!0 var815)) String\n    \"\")\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 133300224,
            "run_time": 0.6329493522644043,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var869 () var815 var815!4)\r\n  (define-fun var3856 () String \"\\u{0}\")\r\n  (define-fun null-var815 () var815 var815!2)\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.lang.reflect.Method",
            "$r2 = virtualinvoke r0.<java.lang.reflect.Method: java.lang.String getName()>()",
            "$z0 = virtualinvoke $r2.<java.lang.String: boolean equals(java.lang.Object)>(r1)",
            "return $z0"
        ]
    }
]