(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var637 0)
(declare-sort var904 0)
(declare-sort var2387 0)
(declare-sort var2583 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun getNodeTypeSymbol/-2019705514 (var637) String)
(declare-fun paramExp/-127123538 (var637) var904)
(declare-fun getCanonicalForm/-1714059646 (var2387) String)
(declare-fun cast-from-var904-to-var2387 (var904) var2387)
(declare-fun getChildrenCanonicalForm/123097860 (var2583) String)
(declare-fun cast-from-var637-to-var2583 (var637) var2583)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-const null-var637 var637)
(declare-const null-Bool Bool)
(declare-const var1753 var637) ; Statement: r0 := @this: freemarker.core.OutputFormatBlock 
(assert (not (= var1753 null-var637)))
(declare-const var866 Bool) ; Statement: z0 := @parameter0: boolean 
(assert (not (= var866 null-Bool)))
 ; Statement: if z0 == 0 goto $r1 = virtualinvoke r0.<freemarker.core.OutputFormatBlock: java.lang.String getNodeTypeSymbol()>() 
(assert (not (= (ite var866 1 0) 0))) ; Negate: Cond: z0 == 0  
(define-const var2829 String String-init) ; Statement: $r2 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var2829)) ; Statement: specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() 
(declare-const var2829!1 String)
(assert (= var2829!1 ""))
(assert true)
(define-const var3178 String (append/672562846 var2829!1 "<")) ; Statement: $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<") 
(declare-const var2829!2 String)
(assert (= var2829!2 (str.++ var2829!1 "<")))
(assert true)
(define-const var2438 String (getNodeTypeSymbol/-2019705514 var1753)) ; Statement: $r3 = virtualinvoke r0.<freemarker.core.OutputFormatBlock: java.lang.String getNodeTypeSymbol()>() 
(assert true)
(define-const var780 String (append/672562846 var3178 var2438)) ; Statement: $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) 
(declare-const var3178!1 String)
(assert (= var3178!1 (str.++ var3178 var2438)))
(assert true)
(define-const var1100 String (append/672562846 var780 " \u0022")) ; Statement: $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"") 
(declare-const var780!1 String)
(assert (= var780!1 (str.++ var780 " \u0022")))
(define-const var181 var904 (paramExp/-127123538 var1753)) ; Statement: $r6 = r0.<freemarker.core.OutputFormatBlock: freemarker.core.Expression paramExp> 
(assert true)
(define-const var3256 String (getCanonicalForm/-1714059646 (cast-from-var904-to-var2387 var181))) ; Statement: $r7 = virtualinvoke $r6.<freemarker.core.Expression: java.lang.String getCanonicalForm()>() 
(assert true)
(define-const var1660 String (append/672562846 var1100 var3256)) ; Statement: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) 
(declare-const var1100!1 String)
(assert (= var1100!1 (str.++ var1100 var3256)))
(assert true)
(define-const var1481 String (append/672562846 var1660 "\u0022>")) ; Statement: $r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">") 
(declare-const var1660!1 String)
(assert (= var1660!1 (str.++ var1660 "\u0022>")))
(assert true)
(define-const var1133 String (getChildrenCanonicalForm/123097860 (cast-from-var637-to-var2583 var1753))) ; Statement: $r10 = virtualinvoke r0.<freemarker.core.OutputFormatBlock: java.lang.String getChildrenCanonicalForm()>() 
(assert true)
(define-const var1842 String (append/672562846 var1481 var1133)) ; Statement: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) 
(declare-const var1481!1 String)
(assert (= var1481!1 (str.++ var1481 var1133)))
(assert true)
(define-const var1707 String (append/672562846 var1842 "</")) ; Statement: $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</") 
(declare-const var1842!1 String)
(assert (= var1842!1 (str.++ var1842 "</")))
(assert true)
(define-const var1106 String (getNodeTypeSymbol/-2019705514 var1753)) ; Statement: $r13 = virtualinvoke r0.<freemarker.core.OutputFormatBlock: java.lang.String getNodeTypeSymbol()>() 
(assert true)
(define-const var3858 String (append/672562846 var1707 var1106)) ; Statement: $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) 
(declare-const var1707!1 String)
(assert (= var1707!1 (str.++ var1707 var1106)))
(assert true)
(define-const var3778 String (append/672562846 var3858 ">")) ; Statement: $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">") 
(declare-const var3858!1 String)
(assert (= var3858!1 (str.++ var3858 ">")))
(assert true)
(define-const var984 String (toString/-2075883882 var3778)) ; Statement: $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() 
 ; Statement: return $r17 
(check-sat)
(get-model)
(get-unsat-core)
; {String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), getNodeTypeSymbol/-2019705514=([freemarker.core.OutputFormatBlock], java.lang.String), paramExp/-127123538=([freemarker.core.OutputFormatBlock], freemarker.core.Expression), getCanonicalForm/-1714059646=([freemarker.core.TemplateObject], java.lang.String), cast-from-var904-to-var2387=([freemarker.core.Expression], freemarker.core.TemplateObject), getChildrenCanonicalForm/123097860=([freemarker.core.TemplateElement], java.lang.String), cast-from-var637-to-var2583=([freemarker.core.OutputFormatBlock], freemarker.core.TemplateElement), toString/-2075883882=([java.lang.StringBuilder], java.lang.String)}
; {var637=freemarker.core.OutputFormatBlock, var1753=r0, var866=z0, var2829=$r2, var3178=$r4, var2438=$r3, var780=$r5, var1100=$r8, var904=freemarker.core.Expression, var181=$r6, var2387=freemarker.core.TemplateObject, var3256=$r7, var1660=$r9, var1481=$r11, var2583=freemarker.core.TemplateElement, var1133=$r10, var1842=$r12, var1707=$r14, var1106=$r13, var3858=$r15, var3778=$r16, var984=$r17}
; {freemarker.core.OutputFormatBlock=var637, r0=var1753, z0=var866, $r2=var2829, $r4=var3178, $r3=var2438, $r5=var780, $r8=var1100, freemarker.core.Expression=var904, $r6=var181, freemarker.core.TemplateObject=var2387, $r7=var3256, $r9=var1660, $r11=var1481, freemarker.core.TemplateElement=var2583, $r10=var1133, $r12=var1842, $r14=var1707, $r13=var1106, $r15=var3858, $r16=var3778, $r17=var984}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 9,"<java.lang.StringBuilder: java.lang.String toString()>": 1}
;stmts r0 := @this: freemarker.core.OutputFormatBlock;	z0 := @parameter0: boolean;	if z0 == 0 goto $r1 = virtualinvoke r0.<freemarker.core.OutputFormatBlock: java.lang.String getNodeTypeSymbol()>();	$r2 = new java.lang.StringBuilder;	specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();	$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");	$r3 = virtualinvoke r0.<freemarker.core.OutputFormatBlock: java.lang.String getNodeTypeSymbol()>();	$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);	$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" \"");	$r6 = r0.<freemarker.core.OutputFormatBlock: freemarker.core.Expression paramExp>;	$r7 = virtualinvoke $r6.<freemarker.core.Expression: java.lang.String getCanonicalForm()>();	$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);	$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\">");	$r10 = virtualinvoke r0.<freemarker.core.OutputFormatBlock: java.lang.String getChildrenCanonicalForm()>();	$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);	$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("</");	$r13 = virtualinvoke r0.<freemarker.core.OutputFormatBlock: java.lang.String getNodeTypeSymbol()>();	$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);	$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");	$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();	return $r17
;block_num 2