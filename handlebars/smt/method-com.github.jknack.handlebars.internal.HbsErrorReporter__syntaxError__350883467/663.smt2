(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var1539 0)
(declare-sort var1654 0)
(declare-sort var3103 0)
(declare-sort var1671 0)
(declare-sort var2540 0)
(declare-sort var3901 0)
(declare-sort var1677 0)
(declare-sort var1236 0)
(declare-sort var2407 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun var3901_max/1360571700 (Int Int) Int)
(declare-fun cast-from-var3103-to-var1677 (var3103) var1677)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(declare-fun filename/-1137484017 (var1539) String)
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(define-fun append/-1001720160 ((s String) (tail Int)) String (str.++ s (str.from_int tail)))
(declare-fun length/-171891354 (String) Int)
(declare-fun getText/1815794653 (var1677) String)
(declare-fun substring/-975425934 (String Int) String)
(declare-fun lines/-1679411926 (var1539 var1654) (Array Int String))
(declare-fun underline/1350738831 (var1539 String (Array Int String) Int Int) void)
(declare-fun getLength-Arr-String-1 ((Array Int String)) Int)
(declare-fun lineAt/905040310 (var1539 (Array Int String) Int) String)
(declare-fun var1236-init () var1236)
(define-fun replace/2138489945 ((s String) (old String) (new String)) String (str.replace_all s old new))
(define-fun cast-from-String-to-String ((arg String)) String arg)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-fun <init>/-1514878111 (var1236 String Int Int String String String) void)
(declare-fun var2407-init () var2407)
(declare-fun <init>/-2128942556 (var2407 var1236) void)
(declare-const null-var1539 var1539)
(declare-const null-var1654 var1654)
(declare-const null-var3103 var3103)
(declare-const null-Int Int)
(declare-const null-String String)
(declare-const null-var2540 var2540)
(declare-const null-var1677 var1677)
(declare-const var3404 var1539) ; Statement: r3 := @this: com.github.jknack.handlebars.internal.HbsErrorReporter 
(assert (not (= var3404 null-var1539)))
(declare-const var2903 var1654) ; Statement: r16 := @parameter0: com.github.jknack.handlebars.internal.antlr.Recognizer 
(assert (not (= var2903 null-var1654)))
(declare-const var480 var3103) ; Statement: r0 := @parameter1: java.lang.Object 
(assert (not (= var480 null-var3103)))
(declare-const var442 Int) ; Statement: i2 := @parameter2: int 
(assert (not (= var442 null-Int)))
(declare-const var739 Int) ; Statement: i0 := @parameter3: int 
(assert (not (= var739 null-Int)))
(declare-const var2417 String) ; Statement: r13 := @parameter4: java.lang.String 
(assert (not (= var2417 null-String)))
(declare-const var2912 var2540) ; Statement: r30 := @parameter5: com.github.jknack.handlebars.internal.antlr.RecognitionException 
(assert (not (= var2912 null-var2540)))
(define-const var3615 Int (var3901_max/1360571700 1 var739)) ; Statement: i1 = staticinvoke <java.lang.Math: int max(int,int)>(1, i0) 
(define-const var1271 var1677 (cast-from-var3103-to-var1677 var480)) ; Statement: r1 = (com.github.jknack.handlebars.internal.antlr.CommonToken) r0 
(define-const var507 String String-init) ; Statement: $r2 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var507)) ; Statement: specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() 
(declare-const var507!1 String)
(assert (= var507!1 ""))
(define-const var3966 String (filename/-1137484017 var3404)) ; Statement: $r4 = r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String filename> 
(assert true)
(define-const var2941 String (append/672562846 var507!1 var3966)) ; Statement: $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) 
(declare-const var507!2 String)
(assert (= var507!2 (str.++ var507!1 var3966)))
(assert true)
(define-const var127 String (append/672562846 var2941 ":")) ; Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") 
(declare-const var2941!1 String)
(assert (= var2941!1 (str.++ var2941 ":")))
(assert true)
(define-const var1107 String (append/-1001720160 var127 var442)) ; Statement: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2) 
(declare-const var127!1 String)
(assert (str.prefixof var127 var127!1))
(assert true)
(define-const var2769 String (append/672562846 var1107 ":")) ; Statement: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") 
(declare-const var1107!1 String)
(assert (= var1107!1 (str.++ var1107 ":")))
(assert true)
(define-const var1302 String (append/-1001720160 var2769 var3615)) ; Statement: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) 
(declare-const var2769!1 String)
(assert (str.prefixof var2769 var2769!1))
(assert true)
;(assert (append/672562846 var1302 ": ")) ; Statement: virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") 
(declare-const var1302!1 String)
(assert (= var1302!1 (str.++ var1302 ": ")))
(define-const var2334 String "") ; Statement: r31 = "" 
(assert true)
(define-const var1140 Int (length/-171891354 var507!2)) ; Statement: i3 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>() 
 ; Statement: if r1 != null goto $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found: \'") 
(assert (not (= var1271 null-var1677))) ; Cond: r1 != null 
(assert true)
(define-const var2445 String (append/672562846 var507!2 "found: \u0027")) ; Statement: $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found: \'") 
(declare-const var507!3 String)
(assert (= var507!3 (str.++ var507!2 "found: \u0027")))
(assert true)
(define-const var2991 String (getText/1815794653 var1271)) ; Statement: $r10 = virtualinvoke r1.<com.github.jknack.handlebars.internal.antlr.CommonToken: java.lang.String getText()>() 
(assert true)
(define-const var1068 String (append/672562846 var2445 var2991)) ; Statement: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) 
(declare-const var2445!1 String)
(assert (= var2445!1 (str.++ var2445 var2991)))
(assert true)
;(assert (append/672562846 var1068 "\u0027, ")) ; Statement: virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ") 
(declare-const var1068!1 String)
(assert (= var1068!1 (str.++ var1068 "\u0027, ")))
(assert true)
(define-const var3631 String (append/672562846 var507!3 "expected: \u0027")) ; Statement: $r14 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected: \'") 
(declare-const var507!4 String)
(assert (= var507!4 (str.++ var507!3 "expected: \u0027")))
(assert true)
(define-const var2977 String (append/672562846 var3631 var2417)) ; Statement: $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13) 
(declare-const var3631!1 String)
(assert (= var3631!1 (str.++ var3631 var2417)))
(assert true)
;(assert (append/672562846 var2977 "\u0027")) ; Statement: virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") 
(declare-const var2977!1 String)
(assert (= var2977!1 (str.++ var2977 "\u0027")))
(assert true) ; Non Conditional
(assert true)
(define-const var3190 String (substring/-975425934 var507!4 var1140)) ; Statement: $r28 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String substring(int)>(i3) 
(assert true)
;(assert (append/672562846 var507!4 "\n")) ; Statement: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") 
(declare-const var507!5 String)
(assert (= var507!5 (str.++ var507!4 "\n")))
(assert true)
(define-const var2853 Int (length/-171891354 var507!5)) ; Statement: $i6 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>() 
(assert true)
(define-const var3672 (Array Int String) (lines/-1679411926 var3404 var2903)) ; Statement: $r29 = virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String[] lines(com.github.jknack.handlebars.internal.antlr.Recognizer)>(r16) 
(assert true)
;(assert (underline/1350738831 var3404 var507!5 var3672 var442 var3615)) ; Statement: virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: void underline(java.lang.StringBuilder,java.lang.String[],int,int)>($r2, $r29, i2, i1) 

(declare-const var3404!1 var1539)
(declare-const var507!6 String)
(declare-const var3672!1 (Array Int String))
(declare-const var442!1 Int)
(declare-const var3615!1 Int)
(define-const var1289 Int (getLength-Arr-String-1 var3672!1)) ; Statement: $i4 = lengthof $r29 
 ; Statement: if i2 <= $i4 goto $i7 = i2 - 2 
(assert (not (<= var442!1 var1289))) ; Negate: Cond: i2 <= $i4  
(define-const var2576 Int (getLength-Arr-String-1 var3672!1)) ; Statement: $i7 = lengthof $r29 
 ; Statement: goto [?= $r23 = virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String lineAt(java.lang.String[],int)>($r29, $i7)] 
(assert true) ; Non Conditional
(assert true)
(define-const var1307 String (lineAt/905040310 var3404!1 var3672!1 var2576)) ; Statement: $r23 = virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String lineAt(java.lang.String[],int)>($r29, $i7) 
(assert true)
(define-const var2622 String (lineAt/905040310 var3404!1 var3672!1 var442!1)) ; Statement: $r24 = virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String lineAt(java.lang.String[],int)>($r29, i2) 
(assert true)
(define-const var365 String (substring/-975425934 var507!6 var2853)) ; Statement: $r17 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String substring(int)>($i6) 
(define-const var3427 String (str.++ "\u0001\n\u0001\n\u0001" var1307 var365 var2622)) ; Statement: $r25 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>($r23, $r17, $r24) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\n\u0001\n\u0001") 
(assert true)
;(assert (append/672562846 var507!6 var2334)) ; Statement: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31) 
(declare-const var507!7 String)
(assert (= var507!7 (str.++ var507!6 var2334)))
(define-const var2494 var1236 var1236-init) ; Statement: $r18 = new com.github.jknack.handlebars.HandlebarsError 
(define-const var2298 String (filename/-1137484017 var3404!1)) ; Statement: $r19 = r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String filename> 
(assert true)
(define-const var1338 String (replace/2138489945 var3190 (cast-from-String-to-String "<EOF>") (cast-from-String-to-String "EOF"))) ; Statement: $r21 = virtualinvoke $r28.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<EOF>", "EOF") 
(assert true)
(define-const var2891 String (toString/-2075883882 var507!7)) ; Statement: $r20 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (<init>/-1514878111 var2494 var2298 var442!1 var3615!1 var1338 var3427 var2891)) ; Statement: specialinvoke $r18.<com.github.jknack.handlebars.HandlebarsError: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)>($r19, i2, i1, $r21, $r25, $r20) 

(declare-const var2494!1 var1236)
(declare-const var2298!1 String)
(declare-const var442!2 Int)
(declare-const var3615!2 Int)
(declare-const var1338!1 String)
(declare-const var3427!1 String)
(declare-const var2891!1 String)
(define-const var262 var2407 var2407-init) ; Statement: $r22 = new com.github.jknack.handlebars.HandlebarsException 
(assert true)
;(assert (<init>/-2128942556 var262 var2494!1)) ; Statement: specialinvoke $r22.<com.github.jknack.handlebars.HandlebarsException: void <init>(com.github.jknack.handlebars.HandlebarsError)>($r18) 

(declare-const var262!1 var2407)
(declare-const var2494!2 var1236)
 ; Statement: throw $r22 
(check-sat)
(get-model)
(get-unsat-core)
; {var3901_max/1360571700=([int, int], int), cast-from-var3103-to-var1677=([java.lang.Object], com.github.jknack.handlebars.internal.antlr.CommonToken), String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), filename/-1137484017=([com.github.jknack.handlebars.internal.HbsErrorReporter], java.lang.String), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), append/-1001720160=([java.lang.StringBuilder, int], java.lang.StringBuilder), length/-171891354=([java.lang.StringBuilder], int), getText/1815794653=([com.github.jknack.handlebars.internal.antlr.CommonToken], java.lang.String), substring/-975425934=([java.lang.StringBuilder, int], java.lang.String), lines/-1679411926=([com.github.jknack.handlebars.internal.HbsErrorReporter, com.github.jknack.handlebars.internal.antlr.Recognizer], java.lang.String[]), underline/1350738831=([com.github.jknack.handlebars.internal.HbsErrorReporter, java.lang.StringBuilder, java.lang.String[], int, int], void), getLength-Arr-String-1=([java.lang.String[]], int), lineAt/905040310=([com.github.jknack.handlebars.internal.HbsErrorReporter, java.lang.String[], int], java.lang.String), var1236-init=([], com.github.jknack.handlebars.HandlebarsError), replace/2138489945=([java.lang.String, java.lang.CharSequence, java.lang.CharSequence], java.lang.String), cast-from-String-to-String=([java.lang.String], java.lang.CharSequence), toString/-2075883882=([java.lang.StringBuilder], java.lang.String), <init>/-1514878111=([com.github.jknack.handlebars.HandlebarsError, java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String], void), var2407-init=([], com.github.jknack.handlebars.HandlebarsException), <init>/-2128942556=([com.github.jknack.handlebars.HandlebarsException, com.github.jknack.handlebars.HandlebarsError], void)}
; {var1539=com.github.jknack.handlebars.internal.HbsErrorReporter, var3404=r3, var1654=com.github.jknack.handlebars.internal.antlr.Recognizer, var2903=r16, var3103=java.lang.Object, var480=r0, var442=i2, var739=i0, var2417=r13, var1671=null_type, var2540=com.github.jknack.handlebars.internal.antlr.RecognitionException, var2912=r30, var3901=java.lang.Math, var3615=i1, var1677=com.github.jknack.handlebars.internal.antlr.CommonToken, var1271=r1, var507=$r2, var3966=$r4, var2941=$r5, var127=$r6, var1107=$r7, var2769=$r8, var1302=$r9, var2334=r31, var1140=i3, var2445=$r11, var2991=$r10, var1068=$r12, var3631=$r14, var2977=$r15, var3190=$r28, var2853=$i6, var3672=$r29, var1289=$i4, var2576=$i7, var1307=$r23, var2622=$r24, var365=$r17, var3427=$r25, var1236=com.github.jknack.handlebars.HandlebarsError, var2494=$r18, var2298=$r19, var1338=$r21, var2891=$r20, var2407=com.github.jknack.handlebars.HandlebarsException, var262=$r22}
; {com.github.jknack.handlebars.internal.HbsErrorReporter=var1539, r3=var3404, com.github.jknack.handlebars.internal.antlr.Recognizer=var1654, r16=var2903, java.lang.Object=var3103, r0=var480, i2=var442, i0=var739, r13=var2417, null_type=var1671, com.github.jknack.handlebars.internal.antlr.RecognitionException=var2540, r30=var2912, java.lang.Math=var3901, i1=var3615, com.github.jknack.handlebars.internal.antlr.CommonToken=var1677, r1=var1271, $r2=var507, $r4=var3966, $r5=var2941, $r6=var127, $r7=var1107, $r8=var2769, $r9=var1302, r31=var2334, i3=var1140, $r11=var2445, $r10=var2991, $r12=var1068, $r14=var3631, $r15=var2977, $r28=var3190, $i6=var2853, $r29=var3672, $i4=var1289, $i7=var2576, $r23=var1307, $r24=var2622, $r17=var365, $r25=var3427, com.github.jknack.handlebars.HandlebarsError=var1236, $r18=var2494, $r19=var2298, $r21=var1338, $r20=var2891, com.github.jknack.handlebars.HandlebarsException=var2407, $r22=var262}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(int)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(int)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: int length()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String substring(int)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: int length()>;	<java.lang.StringBuilder: java.lang.String substring(int)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 12,"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,"<java.lang.StringBuilder: int length()>": 2,"<java.lang.StringBuilder: java.lang.String substring(int)>": 2,"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>": 1,"<java.lang.StringBuilder: java.lang.String toString()>": 1}
;stmts r3 := @this: com.github.jknack.handlebars.internal.HbsErrorReporter;	r16 := @parameter0: com.github.jknack.handlebars.internal.antlr.Recognizer;	r0 := @parameter1: java.lang.Object;	i2 := @parameter2: int;	i0 := @parameter3: int;	r13 := @parameter4: java.lang.String;	r30 := @parameter5: com.github.jknack.handlebars.internal.antlr.RecognitionException;	i1 = staticinvoke <java.lang.Math: int max(int,int)>(1, i0);	r1 = (com.github.jknack.handlebars.internal.antlr.CommonToken) r0;	$r2 = new java.lang.StringBuilder;	specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();	$r4 = r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String filename>;	$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);	$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");	$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);	$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");	$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);	virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");	r31 = "";	i3 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();	if r1 != null goto $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found: \'");	$r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found: \'");	$r10 = virtualinvoke r1.<com.github.jknack.handlebars.internal.antlr.CommonToken: java.lang.String getText()>();	$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);	virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");	$r14 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected: \'");	$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);	virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");	$r28 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String substring(int)>(i3);	virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");	$i6 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();	$r29 = virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String[] lines(com.github.jknack.handlebars.internal.antlr.Recognizer)>(r16);	virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: void underline(java.lang.StringBuilder,java.lang.String[],int,int)>($r2, $r29, i2, i1);	$i4 = lengthof $r29;	if i2 <= $i4 goto $i7 = i2 - 2;	$i7 = lengthof $r29;	goto [?= $r23 = virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String lineAt(java.lang.String[],int)>($r29, $i7)];	$r23 = virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String lineAt(java.lang.String[],int)>($r29, $i7);	$r24 = virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String lineAt(java.lang.String[],int)>($r29, i2);	$r17 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String substring(int)>($i6);	$r25 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>($r23, $r17, $r24) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\n\u0001\n\u0001");	virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);	$r18 = new com.github.jknack.handlebars.HandlebarsError;	$r19 = r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String filename>;	$r21 = virtualinvoke $r28.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<EOF>", "EOF");	$r20 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();	specialinvoke $r18.<com.github.jknack.handlebars.HandlebarsError: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)>($r19, i2, i1, $r21, $r25, $r20);	$r22 = new com.github.jknack.handlebars.HandlebarsException;	specialinvoke $r22.<com.github.jknack.handlebars.HandlebarsException: void <init>(com.github.jknack.handlebars.HandlebarsError)>($r18);	throw $r22
;block_num 5