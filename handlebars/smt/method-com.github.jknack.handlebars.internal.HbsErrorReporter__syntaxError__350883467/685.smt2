(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var1021 0)
(declare-sort var1486 0)
(declare-sort var2244 0)
(declare-sort var867 0)
(declare-sort var820 0)
(declare-sort var3887 0)
(declare-sort var3904 0)
(declare-sort var3079 0)
(declare-sort var3248 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun var3887_max/1360571700 (Int Int) Int)
(declare-fun cast-from-var2244-to-var3904 (var2244) var3904)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(declare-fun filename/-1137484017 (var1021) String)
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(define-fun append/-1001720160 ((s String) (tail Int)) String (str.++ s (str.from_int tail)))
(declare-fun length/-171891354 (String) Int)
(declare-fun getText/1815794653 (var3904) String)
(declare-fun substring/-975425934 (String Int) String)
(declare-fun lines/-1679411926 (var1021 var1486) (Array Int String))
(declare-fun underline/1350738831 (var1021 String (Array Int String) Int Int) void)
(declare-fun getLength-Arr-String-1 ((Array Int String)) Int)
(declare-fun lineAt/905040310 (var1021 (Array Int String) Int) String)
(declare-fun var3079-init () var3079)
(define-fun replace/2138489945 ((s String) (old String) (new String)) String (str.replace_all s old new))
(define-fun cast-from-String-to-String ((arg String)) String arg)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-fun <init>/-1514878111 (var3079 String Int Int String String String) void)
(declare-fun var3248-init () var3248)
(declare-fun <init>/-2128942556 (var3248 var3079) void)
(declare-const null-var1021 var1021)
(declare-const null-var1486 var1486)
(declare-const null-var2244 var2244)
(declare-const null-Int Int)
(declare-const null-String String)
(declare-const null-var820 var820)
(declare-const null-var3904 var3904)
(declare-const var557 var1021) ; Statement: r3 := @this: com.github.jknack.handlebars.internal.HbsErrorReporter 
(assert (not (= var557 null-var1021)))
(declare-const var1288 var1486) ; Statement: r16 := @parameter0: com.github.jknack.handlebars.internal.antlr.Recognizer 
(assert (not (= var1288 null-var1486)))
(declare-const var122 var2244) ; Statement: r0 := @parameter1: java.lang.Object 
(assert (not (= var122 null-var2244)))
(declare-const var2187 Int) ; Statement: i2 := @parameter2: int 
(assert (not (= var2187 null-Int)))
(declare-const var777 Int) ; Statement: i0 := @parameter3: int 
(assert (not (= var777 null-Int)))
(declare-const var630 String) ; Statement: r13 := @parameter4: java.lang.String 
(assert (not (= var630 null-String)))
(declare-const var2839 var820) ; Statement: r30 := @parameter5: com.github.jknack.handlebars.internal.antlr.RecognitionException 
(assert (not (= var2839 null-var820)))
(define-const var1449 Int (var3887_max/1360571700 1 var777)) ; Statement: i1 = staticinvoke <java.lang.Math: int max(int,int)>(1, i0) 
(define-const var1831 var3904 (cast-from-var2244-to-var3904 var122)) ; Statement: r1 = (com.github.jknack.handlebars.internal.antlr.CommonToken) r0 
(define-const var955 String String-init) ; Statement: $r2 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var955)) ; Statement: specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() 
(declare-const var955!1 String)
(assert (= var955!1 ""))
(define-const var2871 String (filename/-1137484017 var557)) ; Statement: $r4 = r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String filename> 
(assert true)
(define-const var3980 String (append/672562846 var955!1 var2871)) ; Statement: $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) 
(declare-const var955!2 String)
(assert (= var955!2 (str.++ var955!1 var2871)))
(assert true)
(define-const var1876 String (append/672562846 var3980 ":")) ; Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") 
(declare-const var3980!1 String)
(assert (= var3980!1 (str.++ var3980 ":")))
(assert true)
(define-const var3635 String (append/-1001720160 var1876 var2187)) ; Statement: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2) 
(declare-const var1876!1 String)
(assert (str.prefixof var1876 var1876!1))
(assert true)
(define-const var250 String (append/672562846 var3635 ":")) ; Statement: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") 
(declare-const var3635!1 String)
(assert (= var3635!1 (str.++ var3635 ":")))
(assert true)
(define-const var2659 String (append/-1001720160 var250 var1449)) ; Statement: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1) 
(declare-const var250!1 String)
(assert (str.prefixof var250 var250!1))
(assert true)
;(assert (append/672562846 var2659 ": ")) ; Statement: virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") 
(declare-const var2659!1 String)
(assert (= var2659!1 (str.++ var2659 ": ")))
(define-const var680 String "") ; Statement: r31 = "" 
(assert true)
(define-const var3445 Int (length/-171891354 var955!2)) ; Statement: i3 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>() 
 ; Statement: if r1 != null goto $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found: \'") 
(assert (not (= var1831 null-var3904))) ; Cond: r1 != null 
(assert true)
(define-const var247 String (append/672562846 var955!2 "found: \u0027")) ; Statement: $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found: \'") 
(declare-const var955!3 String)
(assert (= var955!3 (str.++ var955!2 "found: \u0027")))
(assert true)
(define-const var1920 String (getText/1815794653 var1831)) ; Statement: $r10 = virtualinvoke r1.<com.github.jknack.handlebars.internal.antlr.CommonToken: java.lang.String getText()>() 
(assert true)
(define-const var1629 String (append/672562846 var247 var1920)) ; Statement: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) 
(declare-const var247!1 String)
(assert (= var247!1 (str.++ var247 var1920)))
(assert true)
;(assert (append/672562846 var1629 "\u0027, ")) ; Statement: virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ") 
(declare-const var1629!1 String)
(assert (= var1629!1 (str.++ var1629 "\u0027, ")))
(assert true)
(define-const var2791 String (append/672562846 var955!3 "expected: \u0027")) ; Statement: $r14 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected: \'") 
(declare-const var955!4 String)
(assert (= var955!4 (str.++ var955!3 "expected: \u0027")))
(assert true)
(define-const var265 String (append/672562846 var2791 var630)) ; Statement: $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13) 
(declare-const var2791!1 String)
(assert (= var2791!1 (str.++ var2791 var630)))
(assert true)
;(assert (append/672562846 var265 "\u0027")) ; Statement: virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") 
(declare-const var265!1 String)
(assert (= var265!1 (str.++ var265 "\u0027")))
(assert true) ; Non Conditional
(assert true)
(define-const var1064 String (substring/-975425934 var955!4 var3445)) ; Statement: $r28 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String substring(int)>(i3) 
(assert true)
;(assert (append/672562846 var955!4 "\n")) ; Statement: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n") 
(declare-const var955!5 String)
(assert (= var955!5 (str.++ var955!4 "\n")))
(assert true)
(define-const var3931 Int (length/-171891354 var955!5)) ; Statement: $i6 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>() 
(assert true)
(define-const var937 (Array Int String) (lines/-1679411926 var557 var1288)) ; Statement: $r29 = virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String[] lines(com.github.jknack.handlebars.internal.antlr.Recognizer)>(r16) 
(assert true)
;(assert (underline/1350738831 var557 var955!5 var937 var2187 var1449)) ; Statement: virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: void underline(java.lang.StringBuilder,java.lang.String[],int,int)>($r2, $r29, i2, i1) 

(declare-const var557!1 var1021)
(declare-const var955!6 String)
(declare-const var937!1 (Array Int String))
(declare-const var2187!1 Int)
(declare-const var1449!1 Int)
(define-const var2884 Int (getLength-Arr-String-1 var937!1)) ; Statement: $i4 = lengthof $r29 
 ; Statement: if i2 <= $i4 goto $i7 = i2 - 2 
(assert (<= var2187!1 var2884)) ; Cond: i2 <= $i4 
(define-const var217 Int (- var2187!1 2)) ; Statement: $i7 = i2 - 2 
(assert true) ; Non Conditional
(assert true)
(define-const var2468 String (lineAt/905040310 var557!1 var937!1 var217)) ; Statement: $r23 = virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String lineAt(java.lang.String[],int)>($r29, $i7) 
(assert true)
(define-const var1883 String (lineAt/905040310 var557!1 var937!1 var2187!1)) ; Statement: $r24 = virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String lineAt(java.lang.String[],int)>($r29, i2) 
(assert true)
(define-const var2439 String (substring/-975425934 var955!6 var3931)) ; Statement: $r17 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String substring(int)>($i6) 
(define-const var1930 String (str.++ "\u0001\n\u0001\n\u0001" var2468 var2439 var1883)) ; Statement: $r25 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>($r23, $r17, $r24) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\n\u0001\n\u0001") 
(assert true)
;(assert (append/672562846 var955!6 var680)) ; Statement: virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31) 
(declare-const var955!7 String)
(assert (= var955!7 (str.++ var955!6 var680)))
(define-const var2889 var3079 var3079-init) ; Statement: $r18 = new com.github.jknack.handlebars.HandlebarsError 
(define-const var2282 String (filename/-1137484017 var557!1)) ; Statement: $r19 = r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String filename> 
(assert true)
(define-const var142 String (replace/2138489945 var1064 (cast-from-String-to-String "<EOF>") (cast-from-String-to-String "EOF"))) ; Statement: $r21 = virtualinvoke $r28.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<EOF>", "EOF") 
(assert true)
(define-const var1134 String (toString/-2075883882 var955!7)) ; Statement: $r20 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (<init>/-1514878111 var2889 var2282 var2187!1 var1449!1 var142 var1930 var1134)) ; Statement: specialinvoke $r18.<com.github.jknack.handlebars.HandlebarsError: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)>($r19, i2, i1, $r21, $r25, $r20) 

(declare-const var2889!1 var3079)
(declare-const var2282!1 String)
(declare-const var2187!2 Int)
(declare-const var1449!2 Int)
(declare-const var142!1 String)
(declare-const var1930!1 String)
(declare-const var1134!1 String)
(define-const var957 var3248 var3248-init) ; Statement: $r22 = new com.github.jknack.handlebars.HandlebarsException 
(assert true)
;(assert (<init>/-2128942556 var957 var2889!1)) ; Statement: specialinvoke $r22.<com.github.jknack.handlebars.HandlebarsException: void <init>(com.github.jknack.handlebars.HandlebarsError)>($r18) 

(declare-const var957!1 var3248)
(declare-const var2889!2 var3079)
 ; Statement: throw $r22 
(check-sat)
(get-model)
(get-unsat-core)
; {var3887_max/1360571700=([int, int], int), cast-from-var2244-to-var3904=([java.lang.Object], com.github.jknack.handlebars.internal.antlr.CommonToken), String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), filename/-1137484017=([com.github.jknack.handlebars.internal.HbsErrorReporter], java.lang.String), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), append/-1001720160=([java.lang.StringBuilder, int], java.lang.StringBuilder), length/-171891354=([java.lang.StringBuilder], int), getText/1815794653=([com.github.jknack.handlebars.internal.antlr.CommonToken], java.lang.String), substring/-975425934=([java.lang.StringBuilder, int], java.lang.String), lines/-1679411926=([com.github.jknack.handlebars.internal.HbsErrorReporter, com.github.jknack.handlebars.internal.antlr.Recognizer], java.lang.String[]), underline/1350738831=([com.github.jknack.handlebars.internal.HbsErrorReporter, java.lang.StringBuilder, java.lang.String[], int, int], void), getLength-Arr-String-1=([java.lang.String[]], int), lineAt/905040310=([com.github.jknack.handlebars.internal.HbsErrorReporter, java.lang.String[], int], java.lang.String), var3079-init=([], com.github.jknack.handlebars.HandlebarsError), replace/2138489945=([java.lang.String, java.lang.CharSequence, java.lang.CharSequence], java.lang.String), cast-from-String-to-String=([java.lang.String], java.lang.CharSequence), toString/-2075883882=([java.lang.StringBuilder], java.lang.String), <init>/-1514878111=([com.github.jknack.handlebars.HandlebarsError, java.lang.String, int, int, java.lang.String, java.lang.String, java.lang.String], void), var3248-init=([], com.github.jknack.handlebars.HandlebarsException), <init>/-2128942556=([com.github.jknack.handlebars.HandlebarsException, com.github.jknack.handlebars.HandlebarsError], void)}
; {var1021=com.github.jknack.handlebars.internal.HbsErrorReporter, var557=r3, var1486=com.github.jknack.handlebars.internal.antlr.Recognizer, var1288=r16, var2244=java.lang.Object, var122=r0, var2187=i2, var777=i0, var630=r13, var867=null_type, var820=com.github.jknack.handlebars.internal.antlr.RecognitionException, var2839=r30, var3887=java.lang.Math, var1449=i1, var3904=com.github.jknack.handlebars.internal.antlr.CommonToken, var1831=r1, var955=$r2, var2871=$r4, var3980=$r5, var1876=$r6, var3635=$r7, var250=$r8, var2659=$r9, var680=r31, var3445=i3, var247=$r11, var1920=$r10, var1629=$r12, var2791=$r14, var265=$r15, var1064=$r28, var3931=$i6, var937=$r29, var2884=$i4, var217=$i7, var2468=$r23, var1883=$r24, var2439=$r17, var1930=$r25, var3079=com.github.jknack.handlebars.HandlebarsError, var2889=$r18, var2282=$r19, var142=$r21, var1134=$r20, var3248=com.github.jknack.handlebars.HandlebarsException, var957=$r22}
; {com.github.jknack.handlebars.internal.HbsErrorReporter=var1021, r3=var557, com.github.jknack.handlebars.internal.antlr.Recognizer=var1486, r16=var1288, java.lang.Object=var2244, r0=var122, i2=var2187, i0=var777, r13=var630, null_type=var867, com.github.jknack.handlebars.internal.antlr.RecognitionException=var820, r30=var2839, java.lang.Math=var3887, i1=var1449, com.github.jknack.handlebars.internal.antlr.CommonToken=var3904, r1=var1831, $r2=var955, $r4=var2871, $r5=var3980, $r6=var1876, $r7=var3635, $r8=var250, $r9=var2659, r31=var680, i3=var3445, $r11=var247, $r10=var1920, $r12=var1629, $r14=var2791, $r15=var265, $r28=var1064, $i6=var3931, $r29=var937, $i4=var2884, $i7=var217, $r23=var2468, $r24=var1883, $r17=var2439, $r25=var1930, com.github.jknack.handlebars.HandlebarsError=var3079, $r18=var2889, $r19=var2282, $r21=var142, $r20=var1134, com.github.jknack.handlebars.HandlebarsException=var3248, $r22=var957}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(int)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(int)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: int length()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String substring(int)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: int length()>;	<java.lang.StringBuilder: java.lang.String substring(int)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 12,"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,"<java.lang.StringBuilder: int length()>": 2,"<java.lang.StringBuilder: java.lang.String substring(int)>": 2,"<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>": 1,"<java.lang.StringBuilder: java.lang.String toString()>": 1}
;stmts r3 := @this: com.github.jknack.handlebars.internal.HbsErrorReporter;	r16 := @parameter0: com.github.jknack.handlebars.internal.antlr.Recognizer;	r0 := @parameter1: java.lang.Object;	i2 := @parameter2: int;	i0 := @parameter3: int;	r13 := @parameter4: java.lang.String;	r30 := @parameter5: com.github.jknack.handlebars.internal.antlr.RecognitionException;	i1 = staticinvoke <java.lang.Math: int max(int,int)>(1, i0);	r1 = (com.github.jknack.handlebars.internal.antlr.CommonToken) r0;	$r2 = new java.lang.StringBuilder;	specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();	$r4 = r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String filename>;	$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);	$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");	$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i2);	$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");	$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1);	virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");	r31 = "";	i3 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();	if r1 != null goto $r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found: \'");	$r11 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("found: \'");	$r10 = virtualinvoke r1.<com.github.jknack.handlebars.internal.antlr.CommonToken: java.lang.String getText()>();	$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);	virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ");	$r14 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("expected: \'");	$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);	virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");	$r28 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String substring(int)>(i3);	virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\n");	$i6 = virtualinvoke $r2.<java.lang.StringBuilder: int length()>();	$r29 = virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String[] lines(com.github.jknack.handlebars.internal.antlr.Recognizer)>(r16);	virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: void underline(java.lang.StringBuilder,java.lang.String[],int,int)>($r2, $r29, i2, i1);	$i4 = lengthof $r29;	if i2 <= $i4 goto $i7 = i2 - 2;	$i7 = i2 - 2;	$r23 = virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String lineAt(java.lang.String[],int)>($r29, $i7);	$r24 = virtualinvoke r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String lineAt(java.lang.String[],int)>($r29, i2);	$r17 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String substring(int)>($i6);	$r25 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>($r23, $r17, $r24) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\n\u0001\n\u0001");	virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r31);	$r18 = new com.github.jknack.handlebars.HandlebarsError;	$r19 = r3.<com.github.jknack.handlebars.internal.HbsErrorReporter: java.lang.String filename>;	$r21 = virtualinvoke $r28.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("<EOF>", "EOF");	$r20 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.String toString()>();	specialinvoke $r18.<com.github.jknack.handlebars.HandlebarsError: void <init>(java.lang.String,int,int,java.lang.String,java.lang.String,java.lang.String)>($r19, i2, i1, $r21, $r25, $r20);	$r22 = new com.github.jknack.handlebars.HandlebarsException;	specialinvoke $r22.<com.github.jknack.handlebars.HandlebarsException: void <init>(com.github.jknack.handlebars.HandlebarsError)>($r18);	throw $r22
;block_num 5