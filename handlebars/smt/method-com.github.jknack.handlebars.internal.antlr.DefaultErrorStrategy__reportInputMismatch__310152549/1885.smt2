(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var3933 0)
(declare-sort var2888 0)
(declare-sort var855 0)
(declare-sort var1839 0)
(declare-sort var1551 0)
(declare-sort var2522 0)
(declare-sort var2810 0)
(declare-sort var2760 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun getOffendingToken/-1678522683 (var1551) var1839)
(declare-fun cast-from-var855-to-var1551 (var855) var1551)
(declare-fun getTokenErrorDisplay/398744226 (var3933 var1839) String)
(declare-fun getExpectedTokens/587965216 (var1551) var2522)
(declare-fun getVocabulary/1387097077 (var2760) var2810)
(declare-fun cast-from-var2888-to-var2760 (var2888) var2760)
(declare-fun toString/-1252666215 (var2522 var2810) String)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-fun notifyErrorListeners/-935134556 (var2888 var1839 String var1551) void)
(declare-const null-var3933 var3933)
(declare-const null-var2888 var2888)
(declare-const null-var855 var855)
(declare-const var1889 var3933) ; Statement: r1 := @this: com.github.jknack.handlebars.internal.antlr.DefaultErrorStrategy 
(assert (not (= var1889 null-var3933)))
(declare-const var565 var2888) ; Statement: r7 := @parameter0: com.github.jknack.handlebars.internal.antlr.Parser 
(assert (not (= var565 null-var2888)))
(declare-const var3315 var855) ; Statement: r2 := @parameter1: com.github.jknack.handlebars.internal.antlr.InputMismatchException 
(assert (not (= var3315 null-var855)))
(define-const var1432 String String-init) ; Statement: $r0 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var1432)) ; Statement: specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() 
(declare-const var1432!1 String)
(assert (= var1432!1 ""))
(assert true)
(define-const var520 String (append/672562846 var1432!1 "mismatched input ")) ; Statement: $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mismatched input ") 
(declare-const var1432!2 String)
(assert (= var1432!2 (str.++ var1432!1 "mismatched input ")))
(assert true)
(define-const var663 var1839 (getOffendingToken/-1678522683 (cast-from-var855-to-var1551 var3315))) ; Statement: $r3 = virtualinvoke r2.<com.github.jknack.handlebars.internal.antlr.InputMismatchException: com.github.jknack.handlebars.internal.antlr.Token getOffendingToken()>() 
(assert true)
(define-const var1557 String (getTokenErrorDisplay/398744226 var1889 var663)) ; Statement: $r4 = virtualinvoke r1.<com.github.jknack.handlebars.internal.antlr.DefaultErrorStrategy: java.lang.String getTokenErrorDisplay(com.github.jknack.handlebars.internal.antlr.Token)>($r3) 
(assert true)
(define-const var600 String (append/672562846 var520 var1557)) ; Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) 
(declare-const var520!1 String)
(assert (= var520!1 (str.++ var520 var1557)))
(assert true)
(define-const var3823 String (append/672562846 var600 " expecting ")) ; Statement: $r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expecting ") 
(declare-const var600!1 String)
(assert (= var600!1 (str.++ var600 " expecting ")))
(assert true)
(define-const var1545 var2522 (getExpectedTokens/587965216 (cast-from-var855-to-var1551 var3315))) ; Statement: $r9 = virtualinvoke r2.<com.github.jknack.handlebars.internal.antlr.InputMismatchException: com.github.jknack.handlebars.internal.antlr.misc.IntervalSet getExpectedTokens()>() 
(assert true)
(define-const var2251 var2810 (getVocabulary/1387097077 (cast-from-var2888-to-var2760 var565))) ; Statement: $r8 = virtualinvoke r7.<com.github.jknack.handlebars.internal.antlr.Parser: com.github.jknack.handlebars.internal.antlr.Vocabulary getVocabulary()>() 
(assert true)
(define-const var3056 String (toString/-1252666215 var1545 var2251)) ; Statement: $r10 = virtualinvoke $r9.<com.github.jknack.handlebars.internal.antlr.misc.IntervalSet: java.lang.String toString(com.github.jknack.handlebars.internal.antlr.Vocabulary)>($r8) 
(assert true)
(define-const var2164 String (append/672562846 var3823 var3056)) ; Statement: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) 
(declare-const var3823!1 String)
(assert (= var3823!1 (str.++ var3823 var3056)))
(assert true)
(define-const var747 String (toString/-2075883882 var2164)) ; Statement: r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
(define-const var1906 var1839 (getOffendingToken/-1678522683 (cast-from-var855-to-var1551 var3315))) ; Statement: $r14 = virtualinvoke r2.<com.github.jknack.handlebars.internal.antlr.InputMismatchException: com.github.jknack.handlebars.internal.antlr.Token getOffendingToken()>() 
(assert true)
;(assert (notifyErrorListeners/-935134556 var565 var1906 var747 (cast-from-var855-to-var1551 var3315))) ; Statement: virtualinvoke r7.<com.github.jknack.handlebars.internal.antlr.Parser: void notifyErrorListeners(com.github.jknack.handlebars.internal.antlr.Token,java.lang.String,com.github.jknack.handlebars.internal.antlr.RecognitionException)>($r14, r13, r2) 

(declare-const var565!1 var2888)
(declare-const var1906!1 var1839)
(declare-const var747!1 String)
(declare-const var3315!1 var855)
 ; Statement: return 
(check-sat)
(get-model)
(get-unsat-core)
; {String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), getOffendingToken/-1678522683=([com.github.jknack.handlebars.internal.antlr.RecognitionException], com.github.jknack.handlebars.internal.antlr.Token), cast-from-var855-to-var1551=([com.github.jknack.handlebars.internal.antlr.InputMismatchException], com.github.jknack.handlebars.internal.antlr.RecognitionException), getTokenErrorDisplay/398744226=([com.github.jknack.handlebars.internal.antlr.DefaultErrorStrategy, com.github.jknack.handlebars.internal.antlr.Token], java.lang.String), getExpectedTokens/587965216=([com.github.jknack.handlebars.internal.antlr.RecognitionException], com.github.jknack.handlebars.internal.antlr.misc.IntervalSet), getVocabulary/1387097077=([com.github.jknack.handlebars.internal.antlr.Recognizer], com.github.jknack.handlebars.internal.antlr.Vocabulary), cast-from-var2888-to-var2760=([com.github.jknack.handlebars.internal.antlr.Parser], com.github.jknack.handlebars.internal.antlr.Recognizer), toString/-1252666215=([com.github.jknack.handlebars.internal.antlr.misc.IntervalSet, com.github.jknack.handlebars.internal.antlr.Vocabulary], java.lang.String), toString/-2075883882=([java.lang.StringBuilder], java.lang.String), notifyErrorListeners/-935134556=([com.github.jknack.handlebars.internal.antlr.Parser, com.github.jknack.handlebars.internal.antlr.Token, java.lang.String, com.github.jknack.handlebars.internal.antlr.RecognitionException], void)}
; {var3933=com.github.jknack.handlebars.internal.antlr.DefaultErrorStrategy, var1889=r1, var2888=com.github.jknack.handlebars.internal.antlr.Parser, var565=r7, var855=com.github.jknack.handlebars.internal.antlr.InputMismatchException, var3315=r2, var1432=$r0, var520=$r5, var1839=com.github.jknack.handlebars.internal.antlr.Token, var1551=com.github.jknack.handlebars.internal.antlr.RecognitionException, var663=$r3, var1557=$r4, var600=$r6, var3823=$r11, var2522=com.github.jknack.handlebars.internal.antlr.misc.IntervalSet, var1545=$r9, var2810=com.github.jknack.handlebars.internal.antlr.Vocabulary, var2760=com.github.jknack.handlebars.internal.antlr.Recognizer, var2251=$r8, var3056=$r10, var2164=$r12, var747=r13, var1906=$r14}
; {com.github.jknack.handlebars.internal.antlr.DefaultErrorStrategy=var3933, r1=var1889, com.github.jknack.handlebars.internal.antlr.Parser=var2888, r7=var565, com.github.jknack.handlebars.internal.antlr.InputMismatchException=var855, r2=var3315, $r0=var1432, $r5=var520, com.github.jknack.handlebars.internal.antlr.Token=var1839, com.github.jknack.handlebars.internal.antlr.RecognitionException=var1551, $r3=var663, $r4=var1557, $r6=var600, $r11=var3823, com.github.jknack.handlebars.internal.antlr.misc.IntervalSet=var2522, $r9=var1545, com.github.jknack.handlebars.internal.antlr.Vocabulary=var2810, com.github.jknack.handlebars.internal.antlr.Recognizer=var2760, $r8=var2251, $r10=var3056, $r12=var2164, r13=var747, $r14=var1906}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<com.github.jknack.handlebars.internal.antlr.misc.IntervalSet: java.lang.String toString(com.github.jknack.handlebars.internal.antlr.Vocabulary)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,"<java.lang.StringBuilder: java.lang.String toString()>": 1}
;stmts r1 := @this: com.github.jknack.handlebars.internal.antlr.DefaultErrorStrategy;	r7 := @parameter0: com.github.jknack.handlebars.internal.antlr.Parser;	r2 := @parameter1: com.github.jknack.handlebars.internal.antlr.InputMismatchException;	$r0 = new java.lang.StringBuilder;	specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();	$r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("mismatched input ");	$r3 = virtualinvoke r2.<com.github.jknack.handlebars.internal.antlr.InputMismatchException: com.github.jknack.handlebars.internal.antlr.Token getOffendingToken()>();	$r4 = virtualinvoke r1.<com.github.jknack.handlebars.internal.antlr.DefaultErrorStrategy: java.lang.String getTokenErrorDisplay(com.github.jknack.handlebars.internal.antlr.Token)>($r3);	$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);	$r11 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" expecting ");	$r9 = virtualinvoke r2.<com.github.jknack.handlebars.internal.antlr.InputMismatchException: com.github.jknack.handlebars.internal.antlr.misc.IntervalSet getExpectedTokens()>();	$r8 = virtualinvoke r7.<com.github.jknack.handlebars.internal.antlr.Parser: com.github.jknack.handlebars.internal.antlr.Vocabulary getVocabulary()>();	$r10 = virtualinvoke $r9.<com.github.jknack.handlebars.internal.antlr.misc.IntervalSet: java.lang.String toString(com.github.jknack.handlebars.internal.antlr.Vocabulary)>($r8);	$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);	r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>();	$r14 = virtualinvoke r2.<com.github.jknack.handlebars.internal.antlr.InputMismatchException: com.github.jknack.handlebars.internal.antlr.Token getOffendingToken()>();	virtualinvoke r7.<com.github.jknack.handlebars.internal.antlr.Parser: void notifyErrorListeners(com.github.jknack.handlebars.internal.antlr.Token,java.lang.String,com.github.jknack.handlebars.internal.antlr.RecognitionException)>($r14, r13, r2);	return
;block_num 1