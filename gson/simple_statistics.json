[
    {
        "filename": "smt\\method-com.google.gson.Gson__checkValidFloatingPoint__-481673828\\212.smt2",
        "z3": {
            "memory": 31604736,
            "run_time": 0.11325597763061523,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var629 () var298\r\n    var298-init)\r\n  (define-fun var3660 () String\r\n    (str.++ (append/33611274 var558!1 var3175)\r\n        \" is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\"))\r\n  (define-fun var558 () String\r\n    String-init)\r\n  (define-fun var3874 () String\r\n    (str.++ (append/33611274 var558!1 var3175)\r\n        \" is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\"))\r\n  (define-fun var3175 () Float64\r\n    (fp #b0 #b00000010000 #x0000000000001))\r\n  (define-fun var1372 () String\r\n    (append/33611274 var558!1 var3175))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2277 () Bool\r\n    (Float64_isNaN/-647401060 var3175))\r\n  (define-fun null-Float64 () Float64\r\n    (fp #b1 #b00000000000 #x0000000002000))\r\n  (define-fun var1372!1 () String\r\n    \" is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\")\r\n  (define-fun var558!1 () String\r\n    \"\")\r\n  (define-fun var298-init () var298\r\n    var298!val!0)\r\n  (define-fun var558!2 () String\r\n    \"\")\r\n  (define-fun var3660!1 () String\r\n    \"\")\r\n  (define-fun var629!1 () var298\r\n    var298!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun Float64_isNaN/-647401060 ((x!0 Float64)) Bool\r\n    true)\r\n  (define-fun append/33611274 ((x!0 String) (x!1 Float64)) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var298) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 46 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13582336,
            "run_time": 0.09282803535461426,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var298 is 1\r\n; rep: (as @var298_0 var298)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun Float64_isNaN/-647401060 ((_arg_1 (_ FloatingPoint 11 53))) Bool true)\r\n(define-fun var298-init () var298 (as @var298_0 var298))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/33611274 ((BOUND_VARIABLE_7003 String) (BOUND_VARIABLE_7004 (_ FloatingPoint 11 53))) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_7007 var298) (BOUND_VARIABLE_7008 String)) void (as @void_0 void))\r\n(define-fun null-Float64 () (_ FloatingPoint 11 53) (fp #b1 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun var3175 () (_ FloatingPoint 11 53) (fp #b0 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun var558!1 () String \"\")\r\n(define-fun var558!2 () String \"\")\r\n(define-fun var1372!1 () String \" is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\")\r\n(define-fun var629!1 () var298 (as @var298_0 var298))\r\n(define-fun var3660!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35500032,
            "run_time": 0.07531929016113281,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1372 () String\n    (append/33611274 var558!1 var3175))\n  (define-fun var2277 () Bool\n    (Float64_isNaN/-647401060 var3175))\n  (define-fun var3175 () Float64\n    (_ +zero 11 53))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var629 () var298\n    var298-init)\n  (define-fun null-Float64 () Float64\n    (fp #b0 #b00000000000 #x0000000000001))\n  (define-fun var3660 () String\n    (str.++ (append/33611274 var558!1 var3175)\n        \" is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\"))\n  (define-fun var3874 () String\n    (str.++ (append/33611274 var558!1 var3175)\n        \" is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\"))\n  (define-fun var558 () String\n    String-init)\n  (define-fun var1372!1 () String\n    \" is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\")\n  (define-fun var558!1 () String\n    \"\")\n  (define-fun var298-init () var298\n    var298!val!0)\n  (define-fun var558!2 () String\n    \"\")\n  (define-fun var3660!1 () String\n    \"\")\n  (define-fun var629!1 () var298\n    var298!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun Float64_isNaN/-647401060 ((x!0 Float64)) Bool\n    true)\n  (define-fun append/33611274 ((x!0 String) (x!1 Float64)) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var298) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 46 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 118140928,
            "run_time": 1.0078752040863037,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.Gson__checkValidFloatingPoint__-481673828\\212.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n573ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(double)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(double)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "d0 := @parameter0: double",
            "$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)",
            "if $z0 != 0 goto $r0 = new java.lang.IllegalArgumentException",
            "$r0 = new java.lang.IllegalArgumentException",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is not a valid double value as per JSON specification. To override this behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.\")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.GsonBuilder__addTypeAdaptersForDate__-725157487\\1529.smt2",
        "z3": {
            "memory": 29323264,
            "run_time": 0.1129903793334961,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 56 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7569408,
            "run_time": 0.029234647750854492,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32301056,
            "run_time": 0.09332633018493652,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 56 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154873856,
            "run_time": 1.5503625869750977,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 11,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r9 := @this: com.google.gson.GsonBuilder",
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "r2 := @parameter3: java.util.List",
            "z0 = <com.google.gson.internal.sql.SqlTypesSupport: boolean SUPPORTS_SQL_TYPES>",
            "r10 = null",
            "r11 = null",
            "if r0 == null goto (branch)",
            "if i0 == 2 goto return",
            "if i1 == 2 goto return",
            "$r1 = <com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE>",
            "r12 = virtualinvoke $r1.<com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.TypeAdapterFactory createAdapterFactory(int,int)>(i0, i1)",
            "if z0 == 0 goto interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)",
            "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)",
            "if z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.GsonBuilder__addTypeAdaptersForDate__-725157487\\1532.smt2",
        "z3": {
            "memory": 29028352,
            "run_time": 0.12235426902770996,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 66 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7917568,
            "run_time": 0.062333106994628906,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33050624,
            "run_time": 0.07723665237426758,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 66 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 147038208,
            "run_time": 1.6281921863555908,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 14,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r9 := @this: com.google.gson.GsonBuilder",
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "r2 := @parameter3: java.util.List",
            "z0 = <com.google.gson.internal.sql.SqlTypesSupport: boolean SUPPORTS_SQL_TYPES>",
            "r10 = null",
            "r11 = null",
            "if r0 == null goto (branch)",
            "if i0 == 2 goto return",
            "if i1 == 2 goto return",
            "$r1 = <com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE>",
            "r12 = virtualinvoke $r1.<com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.TypeAdapterFactory createAdapterFactory(int,int)>(i0, i1)",
            "if z0 == 0 goto interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)",
            "$r3 = <com.google.gson.internal.sql.SqlTypesSupport: com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType TIMESTAMP_DATE_TYPE>",
            "r10 = virtualinvoke $r3.<com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.TypeAdapterFactory createAdapterFactory(int,int)>(i0, i1)",
            "$r4 = <com.google.gson.internal.sql.SqlTypesSupport: com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE_DATE_TYPE>",
            "r11 = virtualinvoke $r4.<com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.TypeAdapterFactory createAdapterFactory(int,int)>(i0, i1)",
            "goto [?= interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)]",
            "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)",
            "if z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.FieldNamingPolicy$4__translateName__407038227\\54.smt2",
        "z3": {
            "memory": 30367744,
            "run_time": 0.11555218696594238,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var981:\r\n  ;;   var981!val!1 var981!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var981!val!1 () var981)\r\n  (declare-fun var981!val!0 () var981)\r\n  ;; cardinality constraint:\r\n  (forall ((x var981)) (or (= x var981!val!1) (= x var981!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2637:\r\n  ;;   var2637!val!0 var2637!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2637!val!0 () var2637)\r\n  (declare-fun var2637!val!1 () var2637)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2637)) (or (= x var2637!val!0) (= x var2637!val!1)))\r\n  ;; -----------\r\n  (define-fun var510 () String\r\n    (var2028_separateCamelCase/1260369589 (getName/1618348824 var678) 95))\r\n  (define-fun var678 () var2637\r\n    var2637!val!0)\r\n  (define-fun var3622 () var253\r\n    var253-ENGLISH)\r\n  (define-fun var2757 () String\r\n    (getName/1618348824 var678))\r\n  (define-fun null-var2637 () var2637\r\n    var2637!val!1)\r\n  (define-fun null-var981 () var981\r\n    var981!val!1)\r\n  (define-fun var1330 () String\r\n    (toUpperCase/398655892\r\n  (var2028_separateCamelCase/1260369589 (getName/1618348824 var678) 95)\r\n  var253-ENGLISH))\r\n  (define-fun var3430 () var981\r\n    var981!val!0)\r\n  (define-fun var253-ENGLISH () var253\r\n    var253!val!0)\r\n  (define-fun getName/1618348824 ((x!0 var2637)) String\r\n    \"\")\r\n  (define-fun var2028_separateCamelCase/1260369589 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun toUpperCase/398655892 ((x!0 String) (x!1 var253)) String\r\n    \"\")\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1716224,
            "run_time": 0.04579877853393555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var981 is 2\r\n; rep: (as @var981_0 var981)\r\n; rep: (as @var981_1 var981)\r\n; cardinality of var2637 is 2\r\n; rep: (as @var2637_0 var2637)\r\n; rep: (as @var2637_1 var2637)\r\n; cardinality of var2028 is 1\r\n; rep: (as @var2028_0 var2028)\r\n; cardinality of var253 is 1\r\n; rep: (as @var253_0 var253)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getName/1618348824 ((BOUND_VARIABLE_448 var2637)) String \"\")\r\n(define-fun var2028_separateCamelCase/1260369589 ((BOUND_VARIABLE_451 String) (BOUND_VARIABLE_452 Int)) String \"\")\r\n(define-fun toUpperCase/398655892 ((BOUND_VARIABLE_455 String) (BOUND_VARIABLE_456 var253)) String \"\")\r\n(define-fun null-var981 () var981 (as @var981_0 var981))\r\n(define-fun null-var2637 () var2637 (as @var2637_0 var2637))\r\n(define-fun var253-ENGLISH () var253 (as @var253_0 var253))\r\n(define-fun var3430 () var981 (as @var981_1 var981))\r\n(define-fun var678 () var2637 (as @var2637_1 var2637))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33595392,
            "run_time": 0.13956975936889648,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var981:\n  ;;   var981!val!1 var981!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var981!val!1 () var981)\n  (declare-fun var981!val!0 () var981)\n  ;; cardinality constraint:\n  (forall ((x var981)) (or (= x var981!val!1) (= x var981!val!0)))\n  ;; -----------\n  ;; universe for var2637:\n  ;;   var2637!val!0 var2637!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2637!val!0 () var2637)\n  (declare-fun var2637!val!1 () var2637)\n  ;; cardinality constraint:\n  (forall ((x var2637)) (or (= x var2637!val!0) (= x var2637!val!1)))\n  ;; -----------\n  (define-fun var2757 () String\n    (getName/1618348824 var678))\n  (define-fun var678 () var2637\n    var2637!val!0)\n  (define-fun var1330 () String\n    (toUpperCase/398655892\n  (var2028_separateCamelCase/1260369589 (getName/1618348824 var678) 95)\n  var253-ENGLISH))\n  (define-fun null-var2637 () var2637\n    var2637!val!1)\n  (define-fun null-var981 () var981\n    var981!val!1)\n  (define-fun var3622 () var253\n    var253-ENGLISH)\n  (define-fun var3430 () var981\n    var981!val!0)\n  (define-fun var510 () String\n    (var2028_separateCamelCase/1260369589 (getName/1618348824 var678) 95))\n  (define-fun var253-ENGLISH () var253\n    var253!val!0)\n  (define-fun getName/1618348824 ((x!0 var2637)) String\n    \"\")\n  (define-fun var2028_separateCamelCase/1260369589 ((x!0 String) (x!1 Int)) String\n    \"\")\n  (define-fun toUpperCase/398655892 ((x!0 String) (x!1 var253)) String\n    \"\")\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141008896,
            "run_time": 1.643327236175537,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var678 () var2637 var2637!8)\r\n  (define-fun var3430 () var981 var981!6)\r\n  (define-fun null-var2637 () var2637 var2637!4)\r\n  (define-fun null-var981 () var981 var981!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>": 1
        },
        "jimple_statements": [
            "r5 := @this: com.google.gson.FieldNamingPolicy$4",
            "r0 := @parameter0: java.lang.reflect.Field",
            "$r1 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.String getName()>()",
            "$r3 = staticinvoke <com.google.gson.FieldNamingPolicy$4: java.lang.String separateCamelCase(java.lang.String,char)>($r1, 95)",
            "$r2 = <java.util.Locale: java.util.Locale ENGLISH>",
            "$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>($r2)",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.FieldNamingPolicy$7__translateName__1248087894\\8.smt2",
        "z3": {
            "memory": 30097408,
            "run_time": 0.08987164497375488,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var273:\r\n  ;;   var273!val!0 var273!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var273!val!0 () var273)\r\n  (declare-fun var273!val!1 () var273)\r\n  ;; cardinality constraint:\r\n  (forall ((x var273)) (or (= x var273!val!0) (= x var273!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1685:\r\n  ;;   var1685!val!0 var1685!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1685!val!0 () var1685)\r\n  (declare-fun var1685!val!1 () var1685)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1685)) (or (= x var1685!val!0) (= x var1685!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var1685 () var1685\r\n    var1685!val!1)\r\n  (define-fun var466 () String\r\n    (var2589_separateCamelCase/1260369589 (getName/1618348824 var3563) 46))\r\n  (define-fun var3563 () var273\r\n    var273!val!0)\r\n  (define-fun var774 () String\r\n    (getName/1618348824 var3563))\r\n  (define-fun var1864 () String\r\n    (toLowerCase/1946809429\r\n  (var2589_separateCamelCase/1260369589 (getName/1618348824 var3563) 46)\r\n  var979-ENGLISH))\r\n  (define-fun var975 () var1685\r\n    var1685!val!0)\r\n  (define-fun var866 () var979\r\n    var979-ENGLISH)\r\n  (define-fun null-var273 () var273\r\n    var273!val!1)\r\n  (define-fun var979-ENGLISH () var979\r\n    var979!val!0)\r\n  (define-fun var2589_separateCamelCase/1260369589 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun getName/1618348824 ((x!0 var273)) String\r\n    \"\")\r\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var979)) String\r\n    \"\")\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.02982807159423828,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1685 is 2\r\n; rep: (as @var1685_0 var1685)\r\n; rep: (as @var1685_1 var1685)\r\n; cardinality of var273 is 2\r\n; rep: (as @var273_0 var273)\r\n; rep: (as @var273_1 var273)\r\n; cardinality of var2589 is 1\r\n; rep: (as @var2589_0 var2589)\r\n; cardinality of var979 is 1\r\n; rep: (as @var979_0 var979)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getName/1618348824 ((BOUND_VARIABLE_448 var273)) String \"\")\r\n(define-fun var2589_separateCamelCase/1260369589 ((BOUND_VARIABLE_451 String) (BOUND_VARIABLE_452 Int)) String \"\")\r\n(define-fun toLowerCase/1946809429 ((BOUND_VARIABLE_455 String) (BOUND_VARIABLE_456 var979)) String \"\")\r\n(define-fun null-var1685 () var1685 (as @var1685_0 var1685))\r\n(define-fun null-var273 () var273 (as @var273_0 var273))\r\n(define-fun var979-ENGLISH () var979 (as @var979_0 var979))\r\n(define-fun var975 () var1685 (as @var1685_1 var1685))\r\n(define-fun var3563 () var273 (as @var273_1 var273))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34504704,
            "run_time": 0.20101594924926758,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var273:\n  ;;   var273!val!0 var273!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var273!val!0 () var273)\n  (declare-fun var273!val!1 () var273)\n  ;; cardinality constraint:\n  (forall ((x var273)) (or (= x var273!val!0) (= x var273!val!1)))\n  ;; -----------\n  ;; universe for var1685:\n  ;;   var1685!val!0 var1685!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1685!val!0 () var1685)\n  (declare-fun var1685!val!1 () var1685)\n  ;; cardinality constraint:\n  (forall ((x var1685)) (or (= x var1685!val!0) (= x var1685!val!1)))\n  ;; -----------\n  (define-fun null-var1685 () var1685\n    var1685!val!1)\n  (define-fun var774 () String\n    (getName/1618348824 var3563))\n  (define-fun var3563 () var273\n    var273!val!0)\n  (define-fun var1864 () String\n    (toLowerCase/1946809429\n  (var2589_separateCamelCase/1260369589 (getName/1618348824 var3563) 46)\n  var979-ENGLISH))\n  (define-fun var975 () var1685\n    var1685!val!0)\n  (define-fun null-var273 () var273\n    var273!val!1)\n  (define-fun var466 () String\n    (var2589_separateCamelCase/1260369589 (getName/1618348824 var3563) 46))\n  (define-fun var866 () var979\n    var979-ENGLISH)\n  (define-fun var979-ENGLISH () var979\n    var979!val!0)\n  (define-fun var2589_separateCamelCase/1260369589 ((x!0 String) (x!1 Int)) String\n    \"\")\n  (define-fun getName/1618348824 ((x!0 var273)) String\n    \"\")\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var979)) String\n    \"\")\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140316672,
            "run_time": 1.6779673099517822,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3563 () var273 var273!8)\r\n  (define-fun var975 () var1685 var1685!6)\r\n  (define-fun null-var273 () var273 var273!4)\r\n  (define-fun null-var1685 () var1685 var1685!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>": 1
        },
        "jimple_statements": [
            "r5 := @this: com.google.gson.FieldNamingPolicy$7",
            "r0 := @parameter0: java.lang.reflect.Field",
            "$r1 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.String getName()>()",
            "$r3 = staticinvoke <com.google.gson.FieldNamingPolicy$7: java.lang.String separateCamelCase(java.lang.String,char)>($r1, 46)",
            "$r2 = <java.util.Locale: java.util.Locale ENGLISH>",
            "$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2)",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.ReflectiveTypeAdapterFactory__checkAccessible__-1516662337\\920.smt2",
        "z3": {
            "memory": 31657984,
            "run_time": 0.19366002082824707,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var117:\r\n  ;;   var117!val!0 var117!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var117!val!0 () var117)\r\n  (declare-fun var117!val!1 () var117)\r\n  ;; cardinality constraint:\r\n  (forall ((x var117)) (or (= x var117!val!0) (= x var117!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3943:\r\n  ;;   var3943!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3943!val!0 () var3943)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3943)) (= x var3943!val!0))\r\n  ;; -----------\r\n  ;; universe for var3090:\r\n  ;;   var3090!val!0 var3090!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3090!val!0 () var3090)\r\n  (declare-fun var3090!val!1 () var3090)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3090)) (or (= x var3090!val!0) (= x var3090!val!1)))\r\n  ;; -----------\r\n  (define-fun var632 () Bool\r\n    (var2542_isStatic/379715466\r\n  (var3943_getModifiers/622745125 (cast-from-var3090-to-var3943 var3948))))\r\n  (define-fun var2031 () Bool\r\n    (var765_canAccess/24921369 var3948 null-var117))\r\n  (define-fun var3398 () Int\r\n    (var3943_getModifiers/622745125 (cast-from-var3090-to-var3943 var3948)))\r\n  (define-fun var1625 () var117\r\n    null-var117)\r\n  (define-fun var589 () var117\r\n    var117!val!0)\r\n  (define-fun null-var3090 () var3090\r\n    var3090!val!1)\r\n  (define-fun null-var117 () var117\r\n    var117!val!1)\r\n  (define-fun var2728 () var3943\r\n    (cast-from-var3090-to-var3943 var3948))\r\n  (define-fun var3948 () var3090\r\n    var3090!val!0)\r\n  (define-fun cast-from-var3090-to-var3943 ((x!0 var3090)) var3943\r\n    var3943!val!0)\r\n  (define-fun var765_canAccess/24921369 ((x!0 var3090) (x!1 var117)) Bool\r\n    true)\r\n  (define-fun var3943_getModifiers/622745125 ((x!0 var3943)) Int\r\n    0)\r\n  (define-fun var2542_isStatic/379715466 ((x!0 Int)) Bool\r\n    true)\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9773056,
            "run_time": 0.029998064041137695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var117 is 2\r\n; rep: (as @var117_0 var117)\r\n; rep: (as @var117_1 var117)\r\n; cardinality of var3090 is 2\r\n; rep: (as @var3090_0 var3090)\r\n; rep: (as @var3090_1 var3090)\r\n; cardinality of var3943 is 1\r\n; rep: (as @var3943_0 var3943)\r\n; cardinality of var2542 is 1\r\n; rep: (as @var2542_0 var2542)\r\n; cardinality of var765 is 1\r\n; rep: (as @var765_0 var765)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var3090-to-var3943 ((_arg_1 var3090)) var3943 (as @var3943_0 var3943))\r\n(define-fun var3943_getModifiers/622745125 ((_arg_1 var3943)) Int 0)\r\n(define-fun var2542_isStatic/379715466 ((_arg_1 Int)) Bool true)\r\n(define-fun var765_canAccess/24921369 ((_arg_1 var3090) (_arg_2 var117)) Bool true)\r\n(define-fun null-var117 () var117 (as @var117_0 var117))\r\n(define-fun null-var3090 () var3090 (as @var3090_0 var3090))\r\n(define-fun var589 () var117 (as @var117_1 var117))\r\n(define-fun var3948 () var3090 (as @var3090_1 var3090))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36716544,
            "run_time": 0.12274050712585449,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var117:\n  ;;   var117!val!0 var117!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var117!val!0 () var117)\n  (declare-fun var117!val!1 () var117)\n  ;; cardinality constraint:\n  (forall ((x var117)) (or (= x var117!val!0) (= x var117!val!1)))\n  ;; -----------\n  ;; universe for var3943:\n  ;;   var3943!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3943!val!0 () var3943)\n  ;; cardinality constraint:\n  (forall ((x var3943)) (= x var3943!val!0))\n  ;; -----------\n  ;; universe for var3090:\n  ;;   var3090!val!0 var3090!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3090!val!0 () var3090)\n  (declare-fun var3090!val!1 () var3090)\n  ;; cardinality constraint:\n  (forall ((x var3090)) (or (= x var3090!val!0) (= x var3090!val!1)))\n  ;; -----------\n  (define-fun var2728 () var3943\n    (cast-from-var3090-to-var3943 var3948))\n  (define-fun var632 () Bool\n    (var2542_isStatic/379715466\n  (var3943_getModifiers/622745125 (cast-from-var3090-to-var3943 var3948))))\n  (define-fun var2031 () Bool\n    (var765_canAccess/24921369 var3948 null-var117))\n  (define-fun var3398 () Int\n    (var3943_getModifiers/622745125 (cast-from-var3090-to-var3943 var3948)))\n  (define-fun var589 () var117\n    var117!val!0)\n  (define-fun null-var3090 () var3090\n    var3090!val!1)\n  (define-fun null-var117 () var117\n    var117!val!1)\n  (define-fun var1625 () var117\n    null-var117)\n  (define-fun var3948 () var3090\n    var3090!val!0)\n  (define-fun cast-from-var3090-to-var3943 ((x!0 var3090)) var3943\n    var3943!val!0)\n  (define-fun var765_canAccess/24921369 ((x!0 var3090) (x!1 var117)) Bool\n    true)\n  (define-fun var3943_getModifiers/622745125 ((x!0 var3943)) Int\n    0)\n  (define-fun var2542_isStatic/379715466 ((x!0 Int)) Bool\n    true)\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140832768,
            "run_time": 1.6773240566253662,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3948 () var3090 var3090!8)\r\n  (define-fun var589 () var117 var117!6)\r\n  (define-fun null-var3090 () var3090 var3090!4)\r\n  (define-fun null-var117 () var117 var117!2)\r\n  (define-fun var3943!26 () var3943 (cast-from-var3090-to-var3943 var3090!8))\r\n  (define-fun var765_canAccess/24921369 ((x!0 var3090) (x!1 var117)) Bool (ite (and (= x!0 var3090!8) (= x!1 var117!2)) true true))\r\n  (define-fun var2542_isStatic/379715466 ((x!0 Int)) Bool (ite (= x!0 14) true true))\r\n  (define-fun var3943_getModifiers/622745125 ((x!0 var3943)) Int (ite (= x!0 var3943!26) 14 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 5,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r2 := @parameter0: java.lang.Object",
            "r0 := @parameter1: java.lang.reflect.AccessibleObject",
            "$r1 = (java.lang.reflect.Member) r0",
            "$i0 = interfaceinvoke $r1.<java.lang.reflect.Member: int getModifiers()>()",
            "$z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0)",
            "if $z0 == 0 goto $r9 = r2",
            "$r9 = null",
            "goto [?= $z1 = staticinvoke <com.google.gson.internal.ReflectionAccessFilterHelper: boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object)>(r0, $r9)]",
            "$z1 = staticinvoke <com.google.gson.internal.ReflectionAccessFilterHelper: boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object)>(r0, $r9)",
            "if $z1 != 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.JsonTreeWriter__get__1016882660\\998.smt2",
        "z3": {
            "memory": 31535104,
            "run_time": 0.14614415168762207,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2963:\r\n  ;;   var2963!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2963!val!0 () var2963)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2963)) (= x var2963!val!0))\r\n  ;; -----------\r\n  ;; universe for var136:\r\n  ;;   var136!val!0 var136!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var136!val!0 () var136)\r\n  (declare-fun var136!val!1 () var136)\r\n  ;; cardinality constraint:\r\n  (forall ((x var136)) (or (= x var136!val!0) (= x var136!val!1)))\r\n  ;; -----------\r\n  (define-fun var3295 () var136\r\n    var136!val!0)\r\n  (define-fun var586 () var2963\r\n    (stack/-996497260 var3295))\r\n  (define-fun var1376 () var2334\r\n    (product/-996497260 var3295))\r\n  (define-fun null-var136 () var136\r\n    var136!val!1)\r\n  (define-fun var3274 () Bool\r\n    (var2963_isEmpty/-153543822 (stack/-996497260 var3295)))\r\n  (define-fun stack/-996497260 ((x!0 var136)) var2963\r\n    var2963!val!0)\r\n  (define-fun var2963_isEmpty/-153543822 ((x!0 var2963)) Bool\r\n    true)\r\n  (define-fun product/-996497260 ((x!0 var136)) var2334\r\n    var2334!val!0)\r\n)\r\n(error \"line 24 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9805824,
            "run_time": 0.031321048736572266,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var136 is 2\r\n; rep: (as @var136_0 var136)\r\n; rep: (as @var136_1 var136)\r\n; cardinality of var2963 is 1\r\n; rep: (as @var2963_0 var2963)\r\n; cardinality of var2334 is 1\r\n; rep: (as @var2334_0 var2334)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun stack/-996497260 ((_arg_1 var136)) var2963 (as @var2963_0 var2963))\r\n(define-fun var2963_isEmpty/-153543822 ((_arg_1 var2963)) Bool true)\r\n(define-fun product/-996497260 ((BOUND_VARIABLE_474 var136)) var2334 (as @var2334_0 var2334))\r\n(define-fun null-var136 () var136 (as @var136_0 var136))\r\n(define-fun var3295 () var136 (as @var136_1 var136))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34492416,
            "run_time": 0.15224170684814453,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2963:\n  ;;   var2963!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2963!val!0 () var2963)\n  ;; cardinality constraint:\n  (forall ((x var2963)) (= x var2963!val!0))\n  ;; -----------\n  ;; universe for var136:\n  ;;   var136!val!0 var136!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var136!val!0 () var136)\n  (declare-fun var136!val!1 () var136)\n  ;; cardinality constraint:\n  (forall ((x var136)) (or (= x var136!val!0) (= x var136!val!1)))\n  ;; -----------\n  (define-fun var3295 () var136\n    var136!val!0)\n  (define-fun var3274 () Bool\n    (var2963_isEmpty/-153543822 (stack/-996497260 var3295)))\n  (define-fun null-var136 () var136\n    var136!val!1)\n  (define-fun var586 () var2963\n    (stack/-996497260 var3295))\n  (define-fun var1376 () var2334\n    (product/-996497260 var3295))\n  (define-fun stack/-996497260 ((x!0 var136)) var2963\n    var2963!val!0)\n  (define-fun var2963_isEmpty/-153543822 ((x!0 var2963)) Bool\n    true)\n  (define-fun product/-996497260 ((x!0 var136)) var2334\n    var2334!val!0)\n)\n(error \"line 24 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 127541248,
            "run_time": 1.739302158355713,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3295 () var136 var136!4)\r\n  (define-fun null-var136 () var136 var136!2)\r\n  (define-fun var2963!18 () var2963 (stack/-996497260 var136!4))\r\n  (define-fun var2963_isEmpty/-153543822 ((x!0 var2963)) Bool (ite (= x!0 var2963!18) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 2,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.JsonTreeWriter",
            "$r1 = r0.<com.google.gson.internal.bind.JsonTreeWriter: java.util.List stack>",
            "$z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>()",
            "if $z0 != 0 goto $r2 = r0.<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.JsonElement product>",
            "$r2 = r0.<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.JsonElement product>",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter__keyToString__864022817\\978.smt2",
        "z3": {
            "memory": 31952896,
            "run_time": 0.23702478408813477,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2875:\r\n  ;;   var2875!val!0 var2875!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2875!val!0 () var2875)\r\n  (declare-fun var2875!val!1 () var2875)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2875)) (or (= x var2875!val!0) (= x var2875!val!1)))\r\n  ;; -----------\r\n  ;; universe for var998:\r\n  ;;   var998!val!0 var998!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var998!val!0 () var998)\r\n  (declare-fun var998!val!1 () var998)\r\n  ;; cardinality constraint:\r\n  (forall ((x var998)) (or (= x var998!val!0) (= x var998!val!1)))\r\n  ;; -----------\r\n  (define-fun var2148 () var258\r\n    var258-init)\r\n  (define-fun var2791 () var2875\r\n    var2875!val!0)\r\n  (define-fun var1667 () Bool\r\n    (isJsonNull/138558921 var2791))\r\n  (define-fun var3528 () Bool\r\n    (isJsonPrimitive/2003092387 var2791))\r\n  (define-fun null-var998 () var998\r\n    var998!val!1)\r\n  (define-fun var3563 () var998\r\n    var998!val!0)\r\n  (define-fun null-var2875 () var2875\r\n    var2875!val!1)\r\n  (define-fun var258-init () var258\r\n    var258!val!0)\r\n  (define-fun var2148!1 () var258\r\n    var258!val!0)\r\n  (define-fun isJsonPrimitive/2003092387 ((x!0 var2875)) Bool\r\n    false)\r\n  (define-fun isJsonNull/138558921 ((x!0 var2875)) Bool\r\n    false)\r\n  (define-fun <init>/-208190597 ((x!0 var258)) void\r\n    void!val!0)\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9777152,
            "run_time": 0.030881881713867188,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var998 is 2\r\n; rep: (as @var998_0 var998)\r\n; rep: (as @var998_1 var998)\r\n; cardinality of var2875 is 2\r\n; rep: (as @var2875_0 var2875)\r\n; rep: (as @var2875_1 var2875)\r\n; cardinality of var258 is 1\r\n; rep: (as @var258_0 var258)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun isJsonPrimitive/2003092387 ((_arg_1 var2875)) Bool false)\r\n(define-fun isJsonNull/138558921 ((_arg_1 var2875)) Bool false)\r\n(define-fun var258-init () var258 (as @var258_0 var258))\r\n(define-fun <init>/-208190597 ((BOUND_VARIABLE_492 var258)) void (as @void_0 void))\r\n(define-fun null-var998 () var998 (as @var998_0 var998))\r\n(define-fun null-var2875 () var2875 (as @var2875_0 var2875))\r\n(define-fun var3563 () var998 (as @var998_1 var998))\r\n(define-fun var2791 () var2875 (as @var2875_1 var2875))\r\n(define-fun var2148!1 () var258 (as @var258_0 var258))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36618240,
            "run_time": 0.10723638534545898,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2875:\n  ;;   var2875!val!0 var2875!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2875!val!0 () var2875)\n  (declare-fun var2875!val!1 () var2875)\n  ;; cardinality constraint:\n  (forall ((x var2875)) (or (= x var2875!val!0) (= x var2875!val!1)))\n  ;; -----------\n  ;; universe for var998:\n  ;;   var998!val!0 var998!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var998!val!0 () var998)\n  (declare-fun var998!val!1 () var998)\n  ;; cardinality constraint:\n  (forall ((x var998)) (or (= x var998!val!0) (= x var998!val!1)))\n  ;; -----------\n  (define-fun var3528 () Bool\n    (isJsonPrimitive/2003092387 var2791))\n  (define-fun var2791 () var2875\n    var2875!val!0)\n  (define-fun var1667 () Bool\n    (isJsonNull/138558921 var2791))\n  (define-fun var2148 () var258\n    var258-init)\n  (define-fun null-var998 () var998\n    var998!val!1)\n  (define-fun var3563 () var998\n    var998!val!0)\n  (define-fun null-var2875 () var2875\n    var2875!val!1)\n  (define-fun var258-init () var258\n    var258!val!0)\n  (define-fun var2148!1 () var258\n    var258!val!0)\n  (define-fun isJsonPrimitive/2003092387 ((x!0 var2875)) Bool\n    false)\n  (define-fun isJsonNull/138558921 ((x!0 var2875)) Bool\n    false)\n  (define-fun <init>/-208190597 ((x!0 var258)) void\n    void!val!0)\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 139198464,
            "run_time": 1.8034188747406006,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2791 () var2875 var2875!8)\r\n  (define-fun var3563 () var998 var998!6)\r\n  (define-fun null-var2875 () var2875 var2875!4)\r\n  (define-fun null-var998 () var998 var998!2)\r\n  (define-fun isJsonNull/138558921 ((x!0 var2875)) Bool (ite (= x!0 var2875!8) false true))\r\n  (define-fun isJsonPrimitive/2003092387 ((x!0 var2875)) Bool (ite (= x!0 var2875!8) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 7,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r8 := @this: com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter",
            "r0 := @parameter0: com.google.gson.JsonElement",
            "$z0 = virtualinvoke r0.<com.google.gson.JsonElement: boolean isJsonPrimitive()>()",
            "if $z0 == 0 goto $z1 = virtualinvoke r0.<com.google.gson.JsonElement: boolean isJsonNull()>()",
            "$z1 = virtualinvoke r0.<com.google.gson.JsonElement: boolean isJsonNull()>()",
            "if $z1 == 0 goto $r1 = new java.lang.AssertionError",
            "$r1 = new java.lang.AssertionError",
            "specialinvoke $r1.<java.lang.AssertionError: void <init>()>()",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.JsonTreeReader__nextString__200340804\\986.smt2",
        "z3": {
            "memory": 31064064,
            "run_time": 0.21355962753295898,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var116:\r\n  ;;   var116!val!0 var116!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var116!val!0 () var116)\r\n  (declare-fun var116!val!1 () var116)\r\n  ;; cardinality constraint:\r\n  (forall ((x var116)) (or (= x var116!val!0) (= x var116!val!1)))\r\n  ;; -----------\r\n  (define-fun var2786 () var116\r\n    var116!val!0)\r\n  (define-fun null-var116 () var116\r\n    var116!val!1)\r\n  (define-fun var2108 () var1949\r\n    (popStack/-1055838337 var2786))\r\n  (define-fun var2245 () var3013\r\n    (peek/-1841308090 var2786))\r\n  (define-fun var263 () String\r\n    (getAsString/1431914449\r\n  (cast-from-var1949-to-var3709 (popStack/-1055838337 var2786))))\r\n  (define-fun var965 () Int\r\n    (stackSize/-1151902492 var2786))\r\n  (define-fun var2897 () var3013\r\n    var3013-STRING)\r\n  (define-fun var625 () var3709\r\n    (cast-from-var1949-to-var3709 (popStack/-1055838337 var2786)))\r\n  (define-fun var3013-STRING () var3013\r\n    var3013!val!0)\r\n  (define-fun stackSize/-1151902492 ((x!0 var116)) Int\r\n    0)\r\n  (define-fun peek/-1841308090 ((x!0 var116)) var3013\r\n    var3013!val!0)\r\n  (define-fun cast-from-var1949-to-var3709 ((x!0 var1949)) var3709\r\n    var3709!val!0)\r\n  (define-fun popStack/-1055838337 ((x!0 var116)) var1949\r\n    var1949!val!0)\r\n  (define-fun getAsString/1431914449 ((x!0 var3709)) String\r\n    \"\")\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9904128,
            "run_time": 0.02915167808532715,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var116 is 2\r\n; rep: (as @var116_0 var116)\r\n; rep: (as @var116_1 var116)\r\n; cardinality of var3013 is 1\r\n; rep: (as @var3013_0 var3013)\r\n; cardinality of var1949 is 1\r\n; rep: (as @var1949_0 var1949)\r\n; cardinality of var3709 is 1\r\n; rep: (as @var3709_0 var3709)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-1841308090 ((BOUND_VARIABLE_470 var116)) var3013 (as @var3013_0 var3013))\r\n(define-fun popStack/-1055838337 ((BOUND_VARIABLE_473 var116)) var1949 (as @var1949_0 var1949))\r\n(define-fun cast-from-var1949-to-var3709 ((BOUND_VARIABLE_476 var1949)) var3709 (as @var3709_0 var3709))\r\n(define-fun getAsString/1431914449 ((BOUND_VARIABLE_479 var3709)) String \"\")\r\n(define-fun stackSize/-1151902492 ((_arg_1 var116)) Int 0)\r\n(define-fun null-var116 () var116 (as @var116_0 var116))\r\n(define-fun var3013-STRING () var3013 (as @var3013_0 var3013))\r\n(define-fun var2786 () var116 (as @var116_1 var116))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35844096,
            "run_time": 0.16974687576293945,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var116:\n  ;;   var116!val!0 var116!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var116!val!0 () var116)\n  (declare-fun var116!val!1 () var116)\n  ;; cardinality constraint:\n  (forall ((x var116)) (or (= x var116!val!0) (= x var116!val!1)))\n  ;; -----------\n  ;; universe for var3013:\n  ;;   var3013!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3013!val!0 () var3013)\n  ;; cardinality constraint:\n  (forall ((x var3013)) (= x var3013!val!0))\n  ;; -----------\n  (define-fun var2897 () var3013\n    var3013-STRING)\n  (define-fun var2108 () var1949\n    (popStack/-1055838337 var2786))\n  (define-fun var263 () String\n    (getAsString/1431914449\n  (cast-from-var1949-to-var3709 (popStack/-1055838337 var2786))))\n  (define-fun var625 () var3709\n    (cast-from-var1949-to-var3709 (popStack/-1055838337 var2786)))\n  (define-fun var2245 () var3013\n    (peek/-1841308090 var2786))\n  (define-fun var965 () Int\n    (stackSize/-1151902492 var2786))\n  (define-fun var2786 () var116\n    var116!val!0)\n  (define-fun null-var116 () var116\n    var116!val!1)\n  (define-fun var3013-STRING () var3013\n    var3013!val!0)\n  (define-fun stackSize/-1151902492 ((x!0 var116)) Int\n    0)\n  (define-fun peek/-1841308090 ((x!0 var116)) var3013\n    var3013!val!0)\n  (define-fun cast-from-var1949-to-var3709 ((x!0 var1949)) var3709\n    var3709!val!0)\n  (define-fun popStack/-1055838337 ((x!0 var116)) var1949\n    var1949!val!0)\n  (define-fun getAsString/1431914449 ((x!0 var3709)) String\n    \"\")\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166227968,
            "run_time": 1.922999620437622,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2786 () var116 var116!6)\r\n  (define-fun var3013-STRING () var3013 var3013!4)\r\n  (define-fun null-var116 () var116 var116!2)\r\n  (define-fun var3013!4 () var3013 (peek/-1841308090 var116!6))\r\n  (define-fun stackSize/-1151902492 ((x!0 var116)) Int (ite (= x!0 var116!6) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 6,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.JsonTreeReader",
            "r1 = virtualinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>()",
            "$r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING>",
            "if r1 == $r2 goto $r3 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object popStack()>()",
            "$r3 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object popStack()>()",
            "$r4 = (com.google.gson.JsonPrimitive) $r3",
            "$r7 = virtualinvoke $r4.<com.google.gson.JsonPrimitive: java.lang.String getAsString()>()",
            "$i0 = r0.<com.google.gson.internal.bind.JsonTreeReader: int stackSize>",
            "if $i0 <= 0 goto return $r7",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.JsonTreeReader__getPath__1423304411\\1377.smt2",
        "z3": {
            "memory": 32096256,
            "run_time": 0.19251036643981934,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1300:\r\n  ;;   var1300!val!0 var1300!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1300!val!0 () var1300)\r\n  (declare-fun var1300!val!1 () var1300)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1300)) (or (= x var1300!val!0) (= x var1300!val!1)))\r\n  ;; -----------\r\n  (define-fun var3198 () String\r\n    (append/-1166366385 var3454!1 36))\r\n  (define-fun var2694 () Int\r\n    0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var532 () Bool\r\n    true)\r\n  (define-fun var2955 () var1300\r\n    var1300!val!0)\r\n  (define-fun var1828 () String\r\n    (append/-1166366385 var3454!1 36))\r\n  (define-fun var3454 () String\r\n    String-init)\r\n  (define-fun null-var1300 () var1300\r\n    var1300!val!1)\r\n  (define-fun var780 () Int\r\n    (stackSize/-1151902492 var2955))\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var3454!1 () String\r\n    \"\")\r\n  (define-fun var3454!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun stackSize/-1151902492 ((x!0 var1300)) Int\r\n    0)\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9789440,
            "run_time": 0.09080338478088379,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1300 is 2\r\n; rep: (as @var1300_0 var1300)\r\n; rep: (as @var1300_1 var1300)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_539 String) (BOUND_VARIABLE_540 Int)) String \"\")\r\n(define-fun stackSize/-1151902492 ((_arg_1 var1300)) Int 0)\r\n(define-fun null-var1300 () var1300 (as @var1300_0 var1300))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var2955 () var1300 (as @var1300_1 var1300))\r\n(define-fun var532 () Bool false)\r\n(define-fun var3454!1 () String \"\")\r\n(define-fun var3454!2 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35766272,
            "run_time": 0.10651803016662598,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1300:\n  ;;   var1300!val!0 var1300!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1300!val!0 () var1300)\n  (declare-fun var1300!val!1 () var1300)\n  ;; cardinality constraint:\n  (forall ((x var1300)) (or (= x var1300!val!0) (= x var1300!val!1)))\n  ;; -----------\n  (define-fun var3198 () String\n    (append/-1166366385 var3454!1 36))\n  (define-fun var780 () Int\n    (stackSize/-1151902492 var2955))\n  (define-fun var3454 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1828 () String\n    (append/-1166366385 var3454!1 36))\n  (define-fun var532 () Bool\n    true)\n  (define-fun var2955 () var1300\n    var1300!val!0)\n  (define-fun var2694 () Int\n    0)\n  (define-fun null-var1300 () var1300\n    var1300!val!1)\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun var3454!1 () String\n    \"\")\n  (define-fun var3454!2 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun stackSize/-1151902492 ((x!0 var1300)) Int\n    0)\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\n    \"\")\n)\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 172953600,
            "run_time": 2.0780856609344482,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3454!2 () String \"\")\r\n  (define-fun var3454!1 () String \"\")\r\n  (define-fun var2955 () var1300 var1300!4)\r\n  (define-fun null-var1300 () var1300 var1300!2)\r\n  (define-fun var532 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n  (define-fun stackSize/-1151902492 ((x!0 var1300)) Int (ite (= x!0 var1300!4) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @this: com.google.gson.internal.bind.JsonTreeReader",
            "z4 := @parameter0: boolean",
            "$r19 = new java.lang.StringBuilder",
            "specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()",
            "r1 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(36)",
            "i7 = 0",
            "$i0 = r2.<com.google.gson.internal.bind.JsonTreeReader: int stackSize>",
            "if i7 >= $i0 goto $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl__toString__-1001498094\\431.smt2",
        "z3": {
            "memory": 30273536,
            "run_time": 0.18851518630981445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3198:\r\n  ;;   var3198!val!0 var3198!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3198!val!0 () var3198)\r\n  (declare-fun var3198!val!1 () var3198)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3198)) (or (= x var3198!val!0) (= x var3198!val!1)))\r\n  ;; -----------\r\n  (define-fun var2525 () var3198\r\n    var3198!val!0)\r\n  (define-fun var634 () String\r\n    (str.++ var2757!1\r\n        (var1627_typeToString/-1316259189 (componentType/13380338 var2525))\r\n        \"[]\"))\r\n  (define-fun var2757 () String\r\n    String-init)\r\n  (define-fun var1993 () String\r\n    (var1627_typeToString/-1316259189 (componentType/13380338 var2525)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var87 () ClassObject\r\n    (componentType/13380338 var2525))\r\n  (define-fun var304 () String\r\n    (str.++ var2757!1\r\n        (var1627_typeToString/-1316259189 (componentType/13380338 var2525))))\r\n  (define-fun var624 () String\r\n    (str.++ var2757!1\r\n        (var1627_typeToString/-1316259189 (componentType/13380338 var2525))\r\n        \"[]\"))\r\n  (define-fun null-var3198 () var3198\r\n    var3198!val!1)\r\n  (define-fun var2757!2 () String\r\n    \"\")\r\n  (define-fun var2757!1 () String\r\n    \"\")\r\n  (define-fun var304!1 () String\r\n    \"[]\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun componentType/13380338 ((x!0 var3198)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var1627_typeToString/-1316259189 ((x!0 ClassObject)) String\r\n    \"\")\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9805824,
            "run_time": 0.0311892032623291,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3198 is 2\r\n; rep: (as @var3198_0 var3198)\r\n; rep: (as @var3198_1 var3198)\r\n; cardinality of var1627 is 1\r\n; rep: (as @var1627_0 var1627)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun componentType/13380338 ((BOUND_VARIABLE_511 var3198)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var1627_typeToString/-1316259189 ((BOUND_VARIABLE_514 ClassObject)) String \"\")\r\n(define-fun null-var3198 () var3198 (as @var3198_0 var3198))\r\n(define-fun var2525 () var3198 (as @var3198_1 var3198))\r\n(define-fun var2757!1 () String \"\")\r\n(define-fun var2757!2 () String \"\")\r\n(define-fun var304!1 () String \"[]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34295808,
            "run_time": 0.16828632354736328,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3198:\n  ;;   var3198!val!0 var3198!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3198!val!0 () var3198)\n  (declare-fun var3198!val!1 () var3198)\n  ;; cardinality constraint:\n  (forall ((x var3198)) (or (= x var3198!val!0) (= x var3198!val!1)))\n  ;; -----------\n  (define-fun var2525 () var3198\n    var3198!val!0)\n  (define-fun var2757 () String\n    String-init)\n  (define-fun var1993 () String\n    (var1627_typeToString/-1316259189 (componentType/13380338 var2525)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var304 () String\n    (str.++ var2757!1\n        (var1627_typeToString/-1316259189 (componentType/13380338 var2525))))\n  (define-fun var624 () String\n    (str.++ var2757!1\n        (var1627_typeToString/-1316259189 (componentType/13380338 var2525))\n        \"[]\"))\n  (define-fun null-var3198 () var3198\n    var3198!val!1)\n  (define-fun var87 () ClassObject\n    (componentType/13380338 var2525))\n  (define-fun var634 () String\n    (str.++ var2757!1\n        (var1627_typeToString/-1316259189 (componentType/13380338 var2525))\n        \"[]\"))\n  (define-fun var2757!2 () String\n    \"\")\n  (define-fun var2757!1 () String\n    \"\")\n  (define-fun var304!1 () String\n    \"[]\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun componentType/13380338 ((x!0 var3198)) ClassObject\n    ClassObject!val!0)\n  (define-fun var1627_typeToString/-1316259189 ((x!0 ClassObject)) String\n    \"\")\n)\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164704256,
            "run_time": 2.0918946266174316,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3198/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl__toString__-1001498094\\431.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var304!1 =\r\n     concat(var2757!2, \"[]\")\r\n\r\n1658ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = r1.<com.google.gson.internal.$Gson$Types$GenericArrayTypeImpl: java.lang.reflect.Type componentType>",
            "$r3 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.String typeToString(java.lang.reflect.Type)>($r2)",
            "$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[]\")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.ObjectTypeAdapter__readTerminal__-884402865\\601.smt2",
        "z3": {
            "memory": 32227328,
            "run_time": 0.14048552513122559,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3281:\r\n  ;;   var3281!val!0 var3281!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3281!val!0 () var3281)\r\n  (declare-fun var3281!val!1 () var3281)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3281)) (or (= x var3281!val!0) (= x var3281!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1796:\r\n  ;;   var1796!val!0 var1796!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1796!val!0 () var1796)\r\n  (declare-fun var1796!val!1 () var1796)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1796)) (or (= x var1796!val!0) (= x var1796!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1101:\r\n  ;;   var1101!val!0 var1101!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1101!val!0 () var1101)\r\n  (declare-fun var1101!val!1 () var1101)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1101)) (or (= x var1101!val!0) (= x var1101!val!1)))\r\n  ;; -----------\r\n  (define-fun var3045 () var3281\r\n    var3281!val!0)\r\n  (define-fun var1704-$SwitchMap$com$google$gson$stream$JsonToken () (Array Int Int)\r\n    ((as const (Array Int Int)) 2))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2194 () var199\r\n    var199-init)\r\n  (define-fun var485 () var1796\r\n    var1796!val!0)\r\n  (define-fun var3405 () var1101\r\n    var1101!val!0)\r\n  (define-fun var477 () String\r\n    (append/-1031950772\r\n  (str.++ var67!1 \"Unexpected token: \")\r\n  (cast-from-var1101-to-var996 var3405)))\r\n  (define-fun var1343 () Int\r\n    (select var1704-$SwitchMap$com$google$gson$stream$JsonToken\r\n        (ordinal/-291641772 (cast-from-var1101-to-var3040 var3405))))\r\n  (define-fun null-var1101 () var1101\r\n    var1101!val!1)\r\n  (define-fun null-var1796 () var1796\r\n    var1796!val!1)\r\n  (define-fun var1922!1 () String\r\n    \"Unexpected token: \")\r\n  (define-fun null-var3281 () var3281\r\n    var3281!val!1)\r\n  (define-fun var634 () Int\r\n    (ordinal/-291641772 (cast-from-var1101-to-var3040 var3405)))\r\n  (define-fun var2237 () String\r\n    (append/-1031950772\r\n  (str.++ var67!1 \"Unexpected token: \")\r\n  (cast-from-var1101-to-var996 var3405)))\r\n  (define-fun var2509 () (Array Int Int)\r\n    var1704-$SwitchMap$com$google$gson$stream$JsonToken)\r\n  (define-fun var1922 () String\r\n    (str.++ var67!1 \"Unexpected token: \"))\r\n  (define-fun var67 () String\r\n    String-init)\r\n  (define-fun var67!1 () String\r\n    \"\")\r\n  (define-fun var67!2 () String\r\n    \"Unexpected token: \")\r\n  (define-fun var2237!1 () String\r\n    \"\")\r\n  (define-fun var2194!1 () var199\r\n    var199!val!0)\r\n  (define-fun var199-init () var199\r\n    var199!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var996)) String\r\n    \"\")\r\n  (define-fun cast-from-var1101-to-var996 ((x!0 var1101)) var996\r\n    var996!val!0)\r\n  (define-fun cast-from-var1101-to-var3040 ((x!0 var1101)) var3040\r\n    var3040!val!0)\r\n  (define-fun ordinal/-291641772 ((x!0 var3040)) Int\r\n    0)\r\n  (define-fun <init>/-1092629202 ((x!0 var199) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 64 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9797632,
            "run_time": 0.029799699783325195,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3281 is 2\r\n; rep: (as @var3281_0 var3281)\r\n; rep: (as @var3281_1 var3281)\r\n; cardinality of var1796 is 2\r\n; rep: (as @var1796_0 var1796)\r\n; rep: (as @var1796_1 var1796)\r\n; cardinality of var1101 is 2\r\n; rep: (as @var1101_0 var1101)\r\n; rep: (as @var1101_1 var1101)\r\n; cardinality of var1704 is 1\r\n; rep: (as @var1704_0 var1704)\r\n; cardinality of var3040 is 1\r\n; rep: (as @var3040_0 var3040)\r\n; cardinality of var199 is 1\r\n; rep: (as @var199_0 var199)\r\n; cardinality of var996 is 1\r\n; rep: (as @var996_0 var996)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun ordinal/-291641772 ((_arg_1 var3040)) Int 0)\r\n(define-fun cast-from-var1101-to-var3040 ((_arg_1 var1101)) var3040 (as @var3040_0 var3040))\r\n(define-fun var199-init () var199 (as @var199_0 var199))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1017 String) (BOUND_VARIABLE_1018 var996)) String \"\")\r\n(define-fun cast-from-var1101-to-var996 ((BOUND_VARIABLE_1021 var1101)) var996 (as @var996_0 var996))\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_1024 var199) (BOUND_VARIABLE_1025 String)) void (as @void_0 void))\r\n(define-fun null-var3281 () var3281 (as @var3281_0 var3281))\r\n(define-fun null-var1796 () var1796 (as @var1796_0 var1796))\r\n(define-fun null-var1101 () var1101 (as @var1101_0 var1101))\r\n(define-fun var1704-$SwitchMap$com$google$gson$stream$JsonToken () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3045 () var3281 (as @var3281_1 var3281))\r\n(define-fun var485 () var1796 (as @var1796_1 var1796))\r\n(define-fun var3405 () var1101 (as @var1101_1 var1101))\r\n(define-fun var67!1 () String \"\")\r\n(define-fun var67!2 () String \"Unexpected token: \")\r\n(define-fun var1922!1 () String \"Unexpected token: \")\r\n(define-fun var2194!1 () var199 (as @var199_0 var199))\r\n(define-fun var2237!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36900864,
            "run_time": 0.12223029136657715,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3281:\n  ;;   var3281!val!0 var3281!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3281!val!0 () var3281)\n  (declare-fun var3281!val!1 () var3281)\n  ;; cardinality constraint:\n  (forall ((x var3281)) (or (= x var3281!val!0) (= x var3281!val!1)))\n  ;; -----------\n  ;; universe for var1796:\n  ;;   var1796!val!0 var1796!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1796!val!0 () var1796)\n  (declare-fun var1796!val!1 () var1796)\n  ;; cardinality constraint:\n  (forall ((x var1796)) (or (= x var1796!val!0) (= x var1796!val!1)))\n  ;; -----------\n  ;; universe for var1101:\n  ;;   var1101!val!0 var1101!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1101!val!0 () var1101)\n  (declare-fun var1101!val!1 () var1101)\n  ;; cardinality constraint:\n  (forall ((x var1101)) (or (= x var1101!val!0) (= x var1101!val!1)))\n  ;; -----------\n  (define-fun var3045 () var3281\n    var3281!val!0)\n  (define-fun var2509 () (Array Int Int)\n    var1704-$SwitchMap$com$google$gson$stream$JsonToken)\n  (define-fun var1704-$SwitchMap$com$google$gson$stream$JsonToken () (Array Int Int)\n    ((as const (Array Int Int)) 2))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1343 () Int\n    (select var1704-$SwitchMap$com$google$gson$stream$JsonToken\n        (ordinal/-291641772 (cast-from-var1101-to-var3040 var3405))))\n  (define-fun var485 () var1796\n    var1796!val!0)\n  (define-fun var634 () Int\n    (ordinal/-291641772 (cast-from-var1101-to-var3040 var3405)))\n  (define-fun var67!2 () String\n    \"Unexpected token: \")\n  (define-fun var477 () String\n    (append/-1031950772\n  (str.++ var67!1 \"Unexpected token: \")\n  (cast-from-var1101-to-var996 var3405)))\n  (define-fun var3405 () var1101\n    var1101!val!0)\n  (define-fun null-var1101 () var1101\n    var1101!val!1)\n  (define-fun null-var1796 () var1796\n    var1796!val!1)\n  (define-fun var2237 () String\n    (append/-1031950772\n  (str.++ var67!1 \"Unexpected token: \")\n  (cast-from-var1101-to-var996 var3405)))\n  (define-fun null-var3281 () var3281\n    var3281!val!1)\n  (define-fun var1922 () String\n    (str.++ var67!1 \"Unexpected token: \"))\n  (define-fun var67 () String\n    String-init)\n  (define-fun var2194 () var199\n    var199-init)\n  (define-fun var1922!1 () String\n    \"Unexpected token: \")\n  (define-fun var67!1 () String\n    \"\")\n  (define-fun var2237!1 () String\n    \"\")\n  (define-fun var2194!1 () var199\n    var199!val!0)\n  (define-fun var199-init () var199\n    var199!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var996)) String\n    \"\")\n  (define-fun cast-from-var1101-to-var996 ((x!0 var1101)) var996\n    var996!val!0)\n  (define-fun cast-from-var1101-to-var3040 ((x!0 var1101)) var3040\n    var3040!val!0)\n  (define-fun ordinal/-291641772 ((x!0 var3040)) Int\n    0)\n  (define-fun <init>/-1092629202 ((x!0 var199) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 64 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 196034560,
            "run_time": 2.4559919834136963,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1922!1 () String \"Unexpected token: \")\r\n  (define-fun var67!2 () String \"Unexpected token: \")\r\n  (define-fun var67!1 () String \"\")\r\n  (define-fun var3405 () var1101 var1101!24)\r\n  (define-fun var485 () var1796 var1796!22)\r\n  (define-fun var3045 () var3281 var3281!20)\r\n  (define-fun var1704-$SwitchMap$com$google$gson$stream$JsonToken () (Array Int Int) (store ((as const (Array Int Int)) 26) 24 25))\r\n  (define-fun null-var1101 () var1101 var1101!18)\r\n  (define-fun null-var1796 () var1796 var1796!16)\r\n  (define-fun null-var3281 () var3281 var3281!14)\r\n  (define-fun var3040!46 () var3040 (cast-from-var1101-to-var3040 var1101!24))\r\n  (define-fun ordinal/-291641772 ((x!0 var3040)) Int (ite (= x!0 var3040!46) 24 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r4 := @this: com.google.gson.internal.bind.ObjectTypeAdapter",
            "r2 := @parameter0: com.google.gson.stream.JsonReader",
            "r0 := @parameter1: com.google.gson.stream.JsonToken",
            "$r1 = <com.google.gson.internal.bind.ObjectTypeAdapter$2: int[] $SwitchMap$com$google$gson$stream$JsonToken>",
            "$i0 = virtualinvoke r0.<com.google.gson.stream.JsonToken: int ordinal()>()",
            "$i1 = $r1[$i0]",
            "tableswitch($i1) {     case 3: goto $r7 = virtualinvoke r2.<com.google.gson.stream.JsonReader: java.lang.String nextString()>();     case 4: goto $r5 = r4.<com.google.gson.internal.bind.ObjectTypeAdapter: com.google.gson.ToNumberStrategy toNumberStrategy>;     case 5: goto $z0 = virtualinvoke r2.<com.google.gson.stream.JsonReader: boolean nextBoolean()>();     case 6: goto virtualinvoke r2.<com.google.gson.stream.JsonReader: void nextNull()>();     default: goto $r8 = new java.lang.IllegalStateException; }",
            "$r8 = new java.lang.IllegalStateException",
            "$r9 = new java.lang.StringBuilder",
            "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected token: \")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12)",
            "throw $r8"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.GsonBuilder__addTypeAdaptersForDate__-725157487\\1523.smt2",
        "z3": {
            "memory": 33509376,
            "run_time": 0.16126656532287598,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2907:\r\n  ;;   var2907!val!0 var2907!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2907!val!0 () var2907)\r\n  (declare-fun var2907!val!1 () var2907)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2907)) (or (= x var2907!val!0) (= x var2907!val!1)))\r\n  ;; -----------\r\n  ;; universe for var45:\r\n  ;;   var45!val!0 var45!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var45!val!0 () var45)\r\n  (declare-fun var45!val!1 () var45)\r\n  ;; cardinality constraint:\r\n  (forall ((x var45)) (or (= x var45!val!0) (= x var45!val!1)))\r\n  ;; -----------\r\n  (define-fun var390 () String\r\n    \"\")\r\n  (define-fun var2700 () var45\r\n    var45!val!0)\r\n  (define-fun var107 () Int\r\n    5)\r\n  (define-fun var2590 () var3936\r\n    null-var3936)\r\n  (define-fun var842 () Bool\r\n    (= (str.len (trim-right (trim-left var390))) 0))\r\n  (define-fun var992 () var2907\r\n    var2907!val!0)\r\n  (define-fun var1809 () var3936\r\n    null-var3936)\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun null-var45 () var45\r\n    var45!val!1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1819 () String\r\n    (trim-right (trim-left var390)))\r\n  (define-fun var1370 () Bool\r\n    var782-SUPPORTS_SQL_TYPES)\r\n  (define-fun null-var2907 () var2907\r\n    var2907!val!1)\r\n  (define-fun var1836 () Int\r\n    2)\r\n  (define-fun var782-SUPPORTS_SQL_TYPES () Bool\r\n    false)\r\n  (define-fun null-var3936 () var3936\r\n    var3936!val!0)\r\n)\r\n(error \"line 49 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 21520384,
            "run_time": 0.5249679088592529,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(\r\n; cardinality of var45 is 2\r\n; rep: (as @var45_0 var45)\r\n; rep: (as @var45_1 var45)\r\n; cardinality of var2099 is 1\r\n; rep: (as @var2099_0 var2099)\r\n; cardinality of var2907 is 2\r\n; rep: (as @var2907_0 var2907)\r\n; rep: (as @var2907_1 var2907)\r\n; cardinality of var782 is 1\r\n; rep: (as @var782_0 var782)\r\n; cardinality of var3936 is 1\r\n; rep: (as @var3936_0 var3936)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var45 () var45 (as @var45_0 var45))\r\n(define-fun null-String () String \"!\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var2907 () var2907 (as @var2907_0 var2907))\r\n(define-fun var782-SUPPORTS_SQL_TYPES () Bool false)\r\n(define-fun null-var3936 () var3936 (as @var3936_0 var3936))\r\n(define-fun var2700 () var45 (as @var45_1 var45))\r\n(define-fun var390 () String \"\")\r\n(define-fun var1836 () Int 2)\r\n(define-fun var107 () Int 0)\r\n(define-fun var992 () var2907 (as @var2907_1 var2907))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35471360,
            "run_time": 0.13841891288757324,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 48 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 49 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 204955648,
            "run_time": 2.7509570121765137,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_47_2, all_47_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.GsonBuilder__addTypeAdaptersForDate__-725157487\\1523.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming that recursive function trim-left is partial\r\nWarning: assuming that recursive function trim-right is partial\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n2192ms\r\n"
        },
        "undefined_function_count": 0,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>",
            "<java.lang.String: boolean isEmpty()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 1,
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r9 := @this: com.google.gson.GsonBuilder",
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "r2 := @parameter3: java.util.List",
            "z0 = <com.google.gson.internal.sql.SqlTypesSupport: boolean SUPPORTS_SQL_TYPES>",
            "r10 = null",
            "r11 = null",
            "if r0 == null goto (branch)",
            "$r5 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()",
            "$z1 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>()",
            "if $z1 != 0 goto (branch)",
            "if i0 == 2 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.GsonBuilder__addTypeAdaptersForDate__-725157487\\1533.smt2",
        "z3": {
            "memory": 31989760,
            "run_time": 0.12157201766967773,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 65 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1654784,
            "run_time": 0.04520535469055176,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33247232,
            "run_time": 0.12432670593261719,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 65 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154148864,
            "run_time": 1.6398117542266846,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 12,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r9 := @this: com.google.gson.GsonBuilder",
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "r2 := @parameter3: java.util.List",
            "z0 = <com.google.gson.internal.sql.SqlTypesSupport: boolean SUPPORTS_SQL_TYPES>",
            "r10 = null",
            "r11 = null",
            "if r0 == null goto (branch)",
            "if i0 == 2 goto return",
            "if i1 == 2 goto return",
            "$r1 = <com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE>",
            "r12 = virtualinvoke $r1.<com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.TypeAdapterFactory createAdapterFactory(int,int)>(i0, i1)",
            "if z0 == 0 goto interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)",
            "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)",
            "if z0 == 0 goto return",
            "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r10)",
            "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r11)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.GsonBuilder__addTypeAdaptersForDate__-725157487\\1526.smt2",
        "z3": {
            "memory": 34074624,
            "run_time": 0.2676365375518799,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var295:\r\n  ;;   var295!val!0 var295!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var295!val!0 () var295)\r\n  (declare-fun var295!val!1 () var295)\r\n  ;; cardinality constraint:\r\n  (forall ((x var295)) (or (= x var295!val!0) (= x var295!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3612:\r\n  ;;   var3612!val!0 var3612!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3612!val!0 () var3612)\r\n  (declare-fun var3612!val!1 () var3612)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3612)) (or (= x var3612!val!0) (= x var3612!val!1)))\r\n  ;; -----------\r\n  (define-fun var37 () var295\r\n    var295!val!0)\r\n  (define-fun var3564 () var3612\r\n    var3612!val!0)\r\n  (define-fun var34 () Bool\r\n    (= (str.len (trim-right (trim-left var3926))) 0))\r\n  (define-fun var2054 () Bool\r\n    var3708-SUPPORTS_SQL_TYPES)\r\n  (define-fun var628 () var74\r\n    null-var74)\r\n  (define-fun var2461 () String\r\n    (trim-right (trim-left var3926)))\r\n  (define-fun var2553 () Int\r\n    3)\r\n  (define-fun null-Int () Int\r\n    5)\r\n  (define-fun var3926 () String\r\n    \"\")\r\n  (define-fun null-var3612 () var3612\r\n    var3612!val!1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun null-var295 () var295\r\n    var295!val!1)\r\n  (define-fun var763 () var74\r\n    null-var74)\r\n  (define-fun var396 () Int\r\n    2)\r\n  (define-fun null-var74 () var74\r\n    var74!val!0)\r\n  (define-fun var3708-SUPPORTS_SQL_TYPES () Bool\r\n    false)\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 21954560,
            "run_time": 0.5874199867248535,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(\r\n; cardinality of var3612 is 2\r\n; rep: (as @var3612_0 var3612)\r\n; rep: (as @var3612_1 var3612)\r\n; cardinality of var3255 is 1\r\n; rep: (as @var3255_0 var3255)\r\n; cardinality of var295 is 2\r\n; rep: (as @var295_0 var295)\r\n; rep: (as @var295_1 var295)\r\n; cardinality of var3708 is 1\r\n; rep: (as @var3708_0 var3708)\r\n; cardinality of var74 is 1\r\n; rep: (as @var74_0 var74)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var3612 () var3612 (as @var3612_0 var3612))\r\n(define-fun null-String () String \"!\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var295 () var295 (as @var295_0 var295))\r\n(define-fun var3708-SUPPORTS_SQL_TYPES () Bool false)\r\n(define-fun null-var74 () var74 (as @var74_0 var74))\r\n(define-fun var3564 () var3612 (as @var3612_1 var3612))\r\n(define-fun var3926 () String \"\")\r\n(define-fun var2553 () Int 0)\r\n(define-fun var396 () Int 2)\r\n(define-fun var37 () var295 (as @var295_1 var295))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35872768,
            "run_time": 0.15416789054870605,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 50 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 184975360,
            "run_time": 2.8350882530212402,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_47_2, all_47_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.GsonBuilder__addTypeAdaptersForDate__-725157487\\1526.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming that recursive function trim-left is partial\r\nWarning: assuming that recursive function trim-right is partial\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n2066ms\r\n"
        },
        "undefined_function_count": 0,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>",
            "<java.lang.String: boolean isEmpty()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 1,
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r9 := @this: com.google.gson.GsonBuilder",
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "r2 := @parameter3: java.util.List",
            "z0 = <com.google.gson.internal.sql.SqlTypesSupport: boolean SUPPORTS_SQL_TYPES>",
            "r10 = null",
            "r11 = null",
            "if r0 == null goto (branch)",
            "$r5 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()",
            "$z1 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>()",
            "if $z1 != 0 goto (branch)",
            "if i0 == 2 goto return",
            "if i1 == 2 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.FieldNamingPolicy$5__translateName__687388116\\3.smt2",
        "z3": {
            "memory": 31891456,
            "run_time": 0.18231534957885742,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1180:\r\n  ;;   var1180!val!0 var1180!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1180!val!0 () var1180)\r\n  (declare-fun var1180!val!1 () var1180)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1180)) (or (= x var1180!val!0) (= x var1180!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1602:\r\n  ;;   var1602!val!1 var1602!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1602!val!1 () var1602)\r\n  (declare-fun var1602!val!0 () var1602)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1602)) (or (= x var1602!val!1) (= x var1602!val!0)))\r\n  ;; -----------\r\n  (define-fun var2513 () var3795\r\n    var3795-ENGLISH)\r\n  (define-fun null-var1180 () var1180\r\n    var1180!val!1)\r\n  (define-fun null-var1602 () var1602\r\n    var1602!val!1)\r\n  (define-fun var1748 () String\r\n    (getName/1618348824 var684))\r\n  (define-fun var380 () String\r\n    (var1880_separateCamelCase/1260369589 (getName/1618348824 var684) 95))\r\n  (define-fun var497 () var1602\r\n    var1602!val!0)\r\n  (define-fun var684 () var1180\r\n    var1180!val!0)\r\n  (define-fun var1491 () String\r\n    (toLowerCase/1946809429\r\n  (var1880_separateCamelCase/1260369589 (getName/1618348824 var684) 95)\r\n  var3795-ENGLISH))\r\n  (define-fun var3795-ENGLISH () var3795\r\n    var3795!val!0)\r\n  (define-fun getName/1618348824 ((x!0 var1180)) String\r\n    \"\")\r\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var3795)) String\r\n    \"\")\r\n  (define-fun var1880_separateCamelCase/1260369589 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9625600,
            "run_time": 0.028975963592529297,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1602 is 2\r\n; rep: (as @var1602_0 var1602)\r\n; rep: (as @var1602_1 var1602)\r\n; cardinality of var1180 is 2\r\n; rep: (as @var1180_0 var1180)\r\n; rep: (as @var1180_1 var1180)\r\n; cardinality of var1880 is 1\r\n; rep: (as @var1880_0 var1880)\r\n; cardinality of var3795 is 1\r\n; rep: (as @var3795_0 var3795)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getName/1618348824 ((BOUND_VARIABLE_448 var1180)) String \"\")\r\n(define-fun var1880_separateCamelCase/1260369589 ((BOUND_VARIABLE_451 String) (BOUND_VARIABLE_452 Int)) String \"\")\r\n(define-fun toLowerCase/1946809429 ((BOUND_VARIABLE_455 String) (BOUND_VARIABLE_456 var3795)) String \"\")\r\n(define-fun null-var1602 () var1602 (as @var1602_0 var1602))\r\n(define-fun null-var1180 () var1180 (as @var1180_0 var1180))\r\n(define-fun var3795-ENGLISH () var3795 (as @var3795_0 var3795))\r\n(define-fun var497 () var1602 (as @var1602_1 var1602))\r\n(define-fun var684 () var1180 (as @var1180_1 var1180))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33591296,
            "run_time": 0.09364080429077148,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1180:\n  ;;   var1180!val!0 var1180!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1180!val!0 () var1180)\n  (declare-fun var1180!val!1 () var1180)\n  ;; cardinality constraint:\n  (forall ((x var1180)) (or (= x var1180!val!0) (= x var1180!val!1)))\n  ;; -----------\n  ;; universe for var1602:\n  ;;   var1602!val!1 var1602!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1602!val!1 () var1602)\n  (declare-fun var1602!val!0 () var1602)\n  ;; cardinality constraint:\n  (forall ((x var1602)) (or (= x var1602!val!1) (= x var1602!val!0)))\n  ;; -----------\n  (define-fun var1748 () String\n    (getName/1618348824 var684))\n  (define-fun var380 () String\n    (var1880_separateCamelCase/1260369589 (getName/1618348824 var684) 95))\n  (define-fun null-var1180 () var1180\n    var1180!val!1)\n  (define-fun null-var1602 () var1602\n    var1602!val!1)\n  (define-fun var1491 () String\n    (toLowerCase/1946809429\n  (var1880_separateCamelCase/1260369589 (getName/1618348824 var684) 95)\n  var3795-ENGLISH))\n  (define-fun var2513 () var3795\n    var3795-ENGLISH)\n  (define-fun var497 () var1602\n    var1602!val!0)\n  (define-fun var684 () var1180\n    var1180!val!0)\n  (define-fun var3795-ENGLISH () var3795\n    var3795!val!0)\n  (define-fun getName/1618348824 ((x!0 var1180)) String\n    \"\")\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var3795)) String\n    \"\")\n  (define-fun var1880_separateCamelCase/1260369589 ((x!0 String) (x!1 Int)) String\n    \"\")\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141074432,
            "run_time": 1.6997499465942383,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var684 () var1180 var1180!8)\r\n  (define-fun var497 () var1602 var1602!6)\r\n  (define-fun null-var1180 () var1180 var1180!4)\r\n  (define-fun null-var1602 () var1602 var1602!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>": 1
        },
        "jimple_statements": [
            "r5 := @this: com.google.gson.FieldNamingPolicy$5",
            "r0 := @parameter0: java.lang.reflect.Field",
            "$r1 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.String getName()>()",
            "$r3 = staticinvoke <com.google.gson.FieldNamingPolicy$5: java.lang.String separateCamelCase(java.lang.String,char)>($r1, 95)",
            "$r2 = <java.util.Locale: java.util.Locale ENGLISH>",
            "$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2)",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.FieldNamingPolicy__separateCamelCase__1260369589\\1247.smt2",
        "z3": {
            "memory": 32092160,
            "run_time": 0.16368532180786133,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3805 () String\r\n    String-init)\r\n  (define-fun var3629 () Int\r\n    0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2533 () Int\r\n    1)\r\n  (define-fun var219 () String\r\n    var3805!1)\r\n  (define-fun var662 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1185 () Int\r\n    (str.len var662))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var3805!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n)\r\n(error \"line 34 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9740288,
            "run_time": 0.030964374542236328,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3492 is 1\r\n; rep: (as @var3492_0 var3492)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var662 () String \"\")\r\n(define-fun var2533 () Int 0)\r\n(define-fun var3805!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37801984,
            "run_time": 0.2020108699798584,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1185 () Int\n    (str.len var662))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var662 () String\n    \"\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var219 () String\n    var3805!1)\n  (define-fun var3629 () Int\n    0)\n  (define-fun var2533 () Int\n    1)\n  (define-fun var3805 () String\n    String-init)\n  (define-fun var3805!1 () String\n    \"\")\n  (define-fun null-Int () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n)\n(error \"line 34 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154132480,
            "run_time": 2.039609909057617,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3805!1 () String \"\")\r\n  (define-fun var2533 () Int 1)\r\n  (define-fun var662 () String \"\")\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "c3 := @parameter1: char",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "i4 = 0",
            "i0 = virtualinvoke r1.<java.lang.String: int length()>()",
            "if i4 >= i0 goto $r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r2"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter__keyToString__864022817\\945.smt2",
        "z3": {
            "memory": 31858688,
            "run_time": 0.16695785522460938,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3290:\r\n  ;;   var3290!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3290!val!0 () var3290)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3290)) (= x var3290!val!0))\r\n  ;; -----------\r\n  ;; universe for var2492:\r\n  ;;   var2492!val!1 var2492!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2492!val!1 () var2492)\r\n  (declare-fun var2492!val!0 () var2492)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2492)) (or (= x var2492!val!1) (= x var2492!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3636:\r\n  ;;   var3636!val!1 var3636!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3636!val!1 () var3636)\r\n  (declare-fun var3636!val!0 () var3636)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3636)) (or (= x var3636!val!1) (= x var3636!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var3636 () var3636\r\n    var3636!val!1)\r\n  (define-fun var1350 () var1047\r\n    (getAsNumber/-493285535 (getAsJsonPrimitive/-449722137 var2561)))\r\n  (define-fun null-var2492 () var2492\r\n    var2492!val!1)\r\n  (define-fun var1225 () var2492\r\n    var2492!val!0)\r\n  (define-fun var1311 () var3290\r\n    (getAsJsonPrimitive/-449722137 var2561))\r\n  (define-fun var122 () Bool\r\n    (isNumber/1639800004 (getAsJsonPrimitive/-449722137 var2561)))\r\n  (define-fun var304 () String\r\n    (String_valueOf/-333372740\r\n  (cast-from-var1047-to-var511\r\n    (getAsNumber/-493285535 (getAsJsonPrimitive/-449722137 var2561)))))\r\n  (define-fun var924 () Bool\r\n    (isJsonPrimitive/2003092387 var2561))\r\n  (define-fun var2561 () var3636\r\n    var3636!val!0)\r\n  (define-fun isNumber/1639800004 ((x!0 var3290)) Bool\r\n    true)\r\n  (define-fun isJsonPrimitive/2003092387 ((x!0 var3636)) Bool\r\n    true)\r\n  (define-fun getAsJsonPrimitive/-449722137 ((x!0 var3636)) var3290\r\n    var3290!val!0)\r\n  (define-fun cast-from-var1047-to-var511 ((x!0 var1047)) var511\r\n    var511!val!0)\r\n  (define-fun getAsNumber/-493285535 ((x!0 var3290)) var1047\r\n    var1047!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var511)) String\r\n    \"\")\r\n)\r\n(error \"line 40 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9699328,
            "run_time": 0.04260683059692383,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2492 is 2\r\n; rep: (as @var2492_0 var2492)\r\n; rep: (as @var2492_1 var2492)\r\n; cardinality of var3636 is 2\r\n; rep: (as @var3636_0 var3636)\r\n; rep: (as @var3636_1 var3636)\r\n; cardinality of var3290 is 1\r\n; rep: (as @var3290_0 var3290)\r\n; cardinality of var1047 is 1\r\n; rep: (as @var1047_0 var1047)\r\n; cardinality of var511 is 1\r\n; rep: (as @var511_0 var511)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun isJsonPrimitive/2003092387 ((_arg_1 var3636)) Bool true)\r\n(define-fun getAsJsonPrimitive/-449722137 ((_arg_1 var3636)) var3290 (as @var3290_0 var3290))\r\n(define-fun isNumber/1639800004 ((_arg_1 var3290)) Bool true)\r\n(define-fun getAsNumber/-493285535 ((BOUND_VARIABLE_549 var3290)) var1047 (as @var1047_0 var1047))\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_552 var511)) String \"\")\r\n(define-fun cast-from-var1047-to-var511 ((BOUND_VARIABLE_555 var1047)) var511 (as @var511_0 var511))\r\n(define-fun null-var2492 () var2492 (as @var2492_0 var2492))\r\n(define-fun null-var3636 () var3636 (as @var3636_0 var3636))\r\n(define-fun var1225 () var2492 (as @var2492_1 var2492))\r\n(define-fun var2561 () var3636 (as @var3636_1 var3636))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33681408,
            "run_time": 0.10787534713745117,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3290:\n  ;;   var3290!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3290!val!0 () var3290)\n  ;; cardinality constraint:\n  (forall ((x var3290)) (= x var3290!val!0))\n  ;; -----------\n  ;; universe for var2492:\n  ;;   var2492!val!1 var2492!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2492!val!1 () var2492)\n  (declare-fun var2492!val!0 () var2492)\n  ;; cardinality constraint:\n  (forall ((x var2492)) (or (= x var2492!val!1) (= x var2492!val!0)))\n  ;; -----------\n  ;; universe for var3636:\n  ;;   var3636!val!1 var3636!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3636!val!1 () var3636)\n  (declare-fun var3636!val!0 () var3636)\n  ;; cardinality constraint:\n  (forall ((x var3636)) (or (= x var3636!val!1) (= x var3636!val!0)))\n  ;; -----------\n  (define-fun null-var3636 () var3636\n    var3636!val!1)\n  (define-fun var924 () Bool\n    (isJsonPrimitive/2003092387 var2561))\n  (define-fun null-var2492 () var2492\n    var2492!val!1)\n  (define-fun var1350 () var1047\n    (getAsNumber/-493285535 (getAsJsonPrimitive/-449722137 var2561)))\n  (define-fun var1225 () var2492\n    var2492!val!0)\n  (define-fun var304 () String\n    (String_valueOf/-333372740\n  (cast-from-var1047-to-var511\n    (getAsNumber/-493285535 (getAsJsonPrimitive/-449722137 var2561)))))\n  (define-fun var1311 () var3290\n    (getAsJsonPrimitive/-449722137 var2561))\n  (define-fun var122 () Bool\n    (isNumber/1639800004 (getAsJsonPrimitive/-449722137 var2561)))\n  (define-fun var2561 () var3636\n    var3636!val!0)\n  (define-fun isNumber/1639800004 ((x!0 var3290)) Bool\n    true)\n  (define-fun isJsonPrimitive/2003092387 ((x!0 var3636)) Bool\n    true)\n  (define-fun getAsJsonPrimitive/-449722137 ((x!0 var3636)) var3290\n    var3290!val!0)\n  (define-fun cast-from-var1047-to-var511 ((x!0 var1047)) var511\n    var511!val!0)\n  (define-fun getAsNumber/-493285535 ((x!0 var3290)) var1047\n    var1047!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var511)) String\n    \"\")\n)\n(error \"line 40 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 159154176,
            "run_time": 1.9217212200164795,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2561 () var3636 var3636!8)\r\n  (define-fun var1225 () var2492 var2492!6)\r\n  (define-fun null-var3636 () var3636 var3636!4)\r\n  (define-fun null-var2492 () var2492 var2492!2)\r\n  (define-fun var3290!26 () var3290 (getAsJsonPrimitive/-449722137 var3636!8))\r\n  (define-fun isNumber/1639800004 ((x!0 var3290)) Bool (ite (= x!0 var3290!26) true true))\r\n  (define-fun isJsonPrimitive/2003092387 ((x!0 var3636)) Bool (ite (= x!0 var3636!8) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r8 := @this: com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter",
            "r0 := @parameter0: com.google.gson.JsonElement",
            "$z0 = virtualinvoke r0.<com.google.gson.JsonElement: boolean isJsonPrimitive()>()",
            "if $z0 == 0 goto $z1 = virtualinvoke r0.<com.google.gson.JsonElement: boolean isJsonNull()>()",
            "r2 = virtualinvoke r0.<com.google.gson.JsonElement: com.google.gson.JsonPrimitive getAsJsonPrimitive()>()",
            "$z2 = virtualinvoke r2.<com.google.gson.JsonPrimitive: boolean isNumber()>()",
            "if $z2 == 0 goto $z3 = virtualinvoke r2.<com.google.gson.JsonPrimitive: boolean isBoolean()>()",
            "$r6 = virtualinvoke r2.<com.google.gson.JsonPrimitive: java.lang.Number getAsNumber()>()",
            "$r7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r6)",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.JsonTreeReader__toString__460571004\\1318.smt2",
        "z3": {
            "memory": 32337920,
            "run_time": 0.08952569961547852,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2459:\r\n  ;;   var2459!val!1 var2459!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2459!val!1 () var2459)\r\n  (declare-fun var2459!val!0 () var2459)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2459)) (or (= x var2459!val!1) (= x var2459!val!0)))\r\n  ;; -----------\r\n  (define-fun var2475 () ClassObject\r\n    (getClass/1258963082 (cast-from-var2459-to-var315 var1295)))\r\n  (define-fun var38 () String\r\n    (str.++ var1096!1\r\n        (getSimpleName/-390194377\r\n          (getClass/1258963082 (cast-from-var2459-to-var315 var1295)))\r\n        (locationString/-286819006 var1295)))\r\n  (define-fun null-var2459 () var2459\r\n    var2459!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var165 () String\r\n    (locationString/-286819006 var1295))\r\n  (define-fun var1735 () String\r\n    (str.++ var1096!1\r\n        (getSimpleName/-390194377\r\n          (getClass/1258963082 (cast-from-var2459-to-var315 var1295)))\r\n        (locationString/-286819006 var1295)))\r\n  (define-fun var3179 () String\r\n    (str.++ var1096!1\r\n        (getSimpleName/-390194377\r\n          (getClass/1258963082 (cast-from-var2459-to-var315 var1295)))))\r\n  (define-fun var1295 () var2459\r\n    var2459!val!0)\r\n  (define-fun var1594 () String\r\n    (getSimpleName/-390194377\r\n  (getClass/1258963082 (cast-from-var2459-to-var315 var1295))))\r\n  (define-fun var1096 () String\r\n    String-init)\r\n  (define-fun var3179!1 () String\r\n    \"\")\r\n  (define-fun var1096!1 () String\r\n    \"\")\r\n  (define-fun var1096!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var2459-to-var315 ((x!0 var2459)) var315\r\n    var315!val!0)\r\n  (define-fun getClass/1258963082 ((x!0 var315)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun getSimpleName/-390194377 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun locationString/-286819006 ((x!0 var2459)) String\r\n    \"\")\r\n)\r\n(error \"line 44 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9777152,
            "run_time": 0.029265642166137695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2459 is 2\r\n; rep: (as @var2459_0 var2459)\r\n; rep: (as @var2459_1 var2459)\r\n; cardinality of var315 is 1\r\n; rep: (as @var315_0 var315)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_521 var315)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var2459-to-var315 ((BOUND_VARIABLE_524 var2459)) var315 (as @var315_0 var315))\r\n(define-fun getSimpleName/-390194377 ((BOUND_VARIABLE_527 ClassObject)) String \"\")\r\n(define-fun locationString/-286819006 ((BOUND_VARIABLE_530 var2459)) String \"\")\r\n(define-fun null-var2459 () var2459 (as @var2459_0 var2459))\r\n(define-fun var1295 () var2459 (as @var2459_1 var2459))\r\n(define-fun var1096!1 () String \"\")\r\n(define-fun var1096!2 () String \"\")\r\n(define-fun var3179!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35704832,
            "run_time": 0.14867043495178223,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2459:\n  ;;   var2459!val!1 var2459!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2459!val!1 () var2459)\n  (declare-fun var2459!val!0 () var2459)\n  ;; cardinality constraint:\n  (forall ((x var2459)) (or (= x var2459!val!1) (= x var2459!val!0)))\n  ;; -----------\n  (define-fun var38 () String\n    (str.++ var1096!1\n        (getSimpleName/-390194377\n          (getClass/1258963082 (cast-from-var2459-to-var315 var1295)))\n        (locationString/-286819006 var1295)))\n  (define-fun var2475 () ClassObject\n    (getClass/1258963082 (cast-from-var2459-to-var315 var1295)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var165 () String\n    (locationString/-286819006 var1295))\n  (define-fun var1735 () String\n    (str.++ var1096!1\n        (getSimpleName/-390194377\n          (getClass/1258963082 (cast-from-var2459-to-var315 var1295)))\n        (locationString/-286819006 var1295)))\n  (define-fun null-var2459 () var2459\n    var2459!val!1)\n  (define-fun var1096 () String\n    String-init)\n  (define-fun var1594 () String\n    (getSimpleName/-390194377\n  (getClass/1258963082 (cast-from-var2459-to-var315 var1295))))\n  (define-fun var3179 () String\n    (str.++ var1096!1\n        (getSimpleName/-390194377\n          (getClass/1258963082 (cast-from-var2459-to-var315 var1295)))))\n  (define-fun var1295 () var2459\n    var2459!val!0)\n  (define-fun var3179!1 () String\n    \"\")\n  (define-fun var1096!1 () String\n    \"\")\n  (define-fun var1096!2 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun cast-from-var2459-to-var315 ((x!0 var2459)) var315\n    var315!val!0)\n  (define-fun getClass/1258963082 ((x!0 var315)) ClassObject\n    ClassObject!val!0)\n  (define-fun getSimpleName/-390194377 ((x!0 ClassObject)) String\n    \"\")\n  (define-fun locationString/-286819006 ((x!0 var2459)) String\n    \"\")\n)\n(error \"line 44 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 158392320,
            "run_time": 2.019041061401367,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2459/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.JsonTreeReader__toString__460571004\\1318.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3179!1 =\r\n     concat(var1096!2, all_17_3)\r\n\r\n1546ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: com.google.gson.internal.bind.JsonTreeReader",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()",
            "$r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>()",
            "$r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r4 = specialinvoke r1.<com.google.gson.internal.bind.JsonTreeReader: java.lang.String locationString()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.JsonTreeReader__locationString__-286819006\\1410.smt2",
        "z3": {
            "memory": 31850496,
            "run_time": 0.14505553245544434,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1906:\r\n  ;;   var1906!val!1 var1906!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1906!val!1 () var1906)\r\n  (declare-fun var1906!val!0 () var1906)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1906)) (or (= x var1906!val!1) (= x var1906!val!0)))\r\n  ;; -----------\r\n  (define-fun var2591 () var1906\r\n    var1906!val!0)\r\n  (define-fun var2057 () String\r\n    (str.++ var851!1 \" at path \" (getPath/1533310839 var2591)))\r\n  (define-fun var44 () String\r\n    (str.++ var851!1 \" at path \"))\r\n  (define-fun null-var1906 () var1906\r\n    var1906!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var851 () String\r\n    String-init)\r\n  (define-fun var1994 () String\r\n    (getPath/1533310839 var2591))\r\n  (define-fun var2905 () String\r\n    (str.++ var851!1 \" at path \" (getPath/1533310839 var2591)))\r\n  (define-fun var851!2 () String\r\n    \" at path \")\r\n  (define-fun var851!1 () String\r\n    \"\")\r\n  (define-fun var44!1 () String\r\n    \" at path \")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getPath/1533310839 ((x!0 var1906)) String\r\n    \"\")\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9785344,
            "run_time": 0.03042292594909668,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1906 is 2\r\n; rep: (as @var1906_0 var1906)\r\n; rep: (as @var1906_1 var1906)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getPath/1533310839 ((BOUND_VARIABLE_499 var1906)) String \"\")\r\n(define-fun null-var1906 () var1906 (as @var1906_0 var1906))\r\n(define-fun var2591 () var1906 (as @var1906_1 var1906))\r\n(define-fun var851!1 () String \"\")\r\n(define-fun var851!2 () String \" at path \")\r\n(define-fun var44!1 () String \" at path \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34742272,
            "run_time": 0.13794374465942383,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1906:\n  ;;   var1906!val!1 var1906!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1906!val!1 () var1906)\n  (declare-fun var1906!val!0 () var1906)\n  ;; cardinality constraint:\n  (forall ((x var1906)) (or (= x var1906!val!1) (= x var1906!val!0)))\n  ;; -----------\n  (define-fun var2591 () var1906\n    var1906!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var851 () String\n    String-init)\n  (define-fun null-var1906 () var1906\n    var1906!val!1)\n  (define-fun var1994 () String\n    (getPath/1533310839 var2591))\n  (define-fun var2057 () String\n    (str.++ var851!1 \" at path \" (getPath/1533310839 var2591)))\n  (define-fun var2905 () String\n    (str.++ var851!1 \" at path \" (getPath/1533310839 var2591)))\n  (define-fun var44 () String\n    (str.++ var851!1 \" at path \"))\n  (define-fun var851!2 () String\n    \" at path \")\n  (define-fun var851!1 () String\n    \"\")\n  (define-fun var44!1 () String\n    \" at path \")\n  (define-fun String-init () String\n    \"\")\n  (define-fun getPath/1533310839 ((x!0 var1906)) String\n    \"\")\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 162115584,
            "run_time": 1.9454004764556885,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1906/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.JsonTreeReader__locationString__-286819006\\1410.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var44!1 =\r\n     concat(\" at path \", all_15_3)\r\n\r\n1461ms\r\n"
        },
        "undefined_function_count": 2,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: com.google.gson.internal.bind.JsonTreeReader",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" at path \")",
            "$r2 = virtualinvoke r1.<com.google.gson.internal.bind.JsonTreeReader: java.lang.String getPath()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.ReflectiveTypeAdapterFactory__checkAccessible__-1516662337\\927.smt2",
        "z3": {
            "memory": 32165888,
            "run_time": 0.12215113639831543,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var743:\r\n  ;;   var743!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var743!val!0 () var743)\r\n  ;; cardinality constraint:\r\n  (forall ((x var743)) (= x var743!val!0))\r\n  ;; -----------\r\n  ;; universe for var2473:\r\n  ;;   var2473!val!0 var2473!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2473!val!0 () var2473)\r\n  (declare-fun var2473!val!1 () var2473)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2473)) (or (= x var2473!val!0) (= x var2473!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2196:\r\n  ;;   var2196!val!0 var2196!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2196!val!0 () var2196)\r\n  (declare-fun var2196!val!1 () var2196)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2196)) (or (= x var2196!val!0) (= x var2196!val!1)))\r\n  ;; -----------\r\n  (define-fun var3999 () var743\r\n    (cast-from-var2473-to-var743 var3013))\r\n  (define-fun var3013 () var2473\r\n    var2473!val!0)\r\n  (define-fun var3205 () String\r\n    String-init)\r\n  (define-fun var1970 () String\r\n    (str.++ var3205!1\r\n        (var2166_getAccessibleObjectDescription/-550785423\r\n          var3013\r\n          (ite (= 1 1) true false))\r\n        \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\"))\r\n  (define-fun var3536 () Int\r\n    (var743_getModifiers/622745125 (cast-from-var2473-to-var743 var3013)))\r\n  (define-fun var611 () var3125\r\n    var3125-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var2473 () var2473\r\n    var2473!val!1)\r\n  (define-fun null-var2196 () var2196\r\n    var2196!val!1)\r\n  (define-fun var2012 () Bool\r\n    (var290_canAccess/24921369 var3013 var2953))\r\n  (define-fun var1382 () String\r\n    (str.++ var3205!1\r\n        (var2166_getAccessibleObjectDescription/-550785423\r\n          var3013\r\n          (ite (= 1 1) true false))))\r\n  (define-fun var3016 () String\r\n    (var2166_getAccessibleObjectDescription/-550785423\r\n  var3013\r\n  (ite (= 1 1) true false)))\r\n  (define-fun var3344 () String\r\n    (str.++ var3205!1\r\n        (var2166_getAccessibleObjectDescription/-550785423\r\n          var3013\r\n          (ite (= 1 1) true false))\r\n        \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\"))\r\n  (define-fun var2953 () var2196\r\n    var2196!val!0)\r\n  (define-fun var1449 () Bool\r\n    (var3888_isStatic/379715466\r\n  (var743_getModifiers/622745125 (cast-from-var2473-to-var743 var3013))))\r\n  (define-fun var2622 () var2196\r\n    var2953)\r\n  (define-fun var3205!2 () String\r\n    \"\")\r\n  (define-fun var1382!1 () String\r\n    \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\")\r\n  (define-fun var3205!1 () String\r\n    \"\")\r\n  (define-fun var3125-init () var3125\r\n    var3125!val!0)\r\n  (define-fun var611!1 () var3125\r\n    var3125!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1970!1 () String\r\n    \"\")\r\n  (define-fun var743_getModifiers/622745125 ((x!0 var743)) Int\r\n    0)\r\n  (define-fun var3888_isStatic/379715466 ((x!0 Int)) Bool\r\n    false)\r\n  (define-fun cast-from-var2473-to-var743 ((x!0 var2473)) var743\r\n    var743!val!0)\r\n  (define-fun var290_canAccess/24921369 ((x!0 var2473) (x!1 var2196)) Bool\r\n    false)\r\n  (define-fun var2166_getAccessibleObjectDescription/-550785423 ((x!0 var2473)\r\n   (x!1 Bool)) String\r\n    \"\")\r\n  (define-fun <init>/-1993171084 ((x!0 var3125) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 66 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9777152,
            "run_time": 0.07683253288269043,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2196 is 2\r\n; rep: (as @var2196_0 var2196)\r\n; rep: (as @var2196_1 var2196)\r\n; cardinality of var2473 is 2\r\n; rep: (as @var2473_0 var2473)\r\n; rep: (as @var2473_1 var2473)\r\n; cardinality of var743 is 1\r\n; rep: (as @var743_0 var743)\r\n; cardinality of var3888 is 1\r\n; rep: (as @var3888_0 var3888)\r\n; cardinality of var290 is 1\r\n; rep: (as @var290_0 var290)\r\n; cardinality of var2166 is 1\r\n; rep: (as @var2166_0 var2166)\r\n; cardinality of var3125 is 1\r\n; rep: (as @var3125_0 var3125)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var2473-to-var743 ((_arg_1 var2473)) var743 (as @var743_0 var743))\r\n(define-fun var743_getModifiers/622745125 ((_arg_1 var743)) Int 1)\r\n(define-fun var3888_isStatic/379715466 ((_arg_1 Int)) Bool false)\r\n(define-fun var290_canAccess/24921369 ((_arg_1 var2473) (_arg_2 var2196)) Bool false)\r\n(define-fun var2166_getAccessibleObjectDescription/-550785423 ((BOUND_VARIABLE_646 var2473) (BOUND_VARIABLE_647 Bool)) String \"\")\r\n(define-fun var3125-init () var3125 (as @var3125_0 var3125))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1993171084 ((BOUND_VARIABLE_650 var3125) (BOUND_VARIABLE_651 String)) void (as @void_0 void))\r\n(define-fun null-var2196 () var2196 (as @var2196_0 var2196))\r\n(define-fun null-var2473 () var2473 (as @var2473_0 var2473))\r\n(define-fun var2953 () var2196 (as @var2196_1 var2196))\r\n(define-fun var3013 () var2473 (as @var2473_1 var2473))\r\n(define-fun var3205!1 () String \"\")\r\n(define-fun var3205!2 () String \"\")\r\n(define-fun var1382!1 () String \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\")\r\n(define-fun var611!1 () var3125 (as @var3125_0 var3125))\r\n(define-fun var1970!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35037184,
            "run_time": 0.18060827255249023,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var743:\n  ;;   var743!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var743!val!0 () var743)\n  ;; cardinality constraint:\n  (forall ((x var743)) (= x var743!val!0))\n  ;; -----------\n  ;; universe for var2473:\n  ;;   var2473!val!0 var2473!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2473!val!0 () var2473)\n  (declare-fun var2473!val!1 () var2473)\n  ;; cardinality constraint:\n  (forall ((x var2473)) (or (= x var2473!val!0) (= x var2473!val!1)))\n  ;; -----------\n  ;; universe for var2196:\n  ;;   var2196!val!0 var2196!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2196!val!0 () var2196)\n  (declare-fun var2196!val!1 () var2196)\n  ;; cardinality constraint:\n  (forall ((x var2196)) (or (= x var2196!val!0) (= x var2196!val!1)))\n  ;; -----------\n  (define-fun var3013 () var2473\n    var2473!val!0)\n  (define-fun var2012 () Bool\n    (var290_canAccess/24921369 var3013 var2953))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var2473 () var2473\n    var2473!val!1)\n  (define-fun var3016 () String\n    (var2166_getAccessibleObjectDescription/-550785423\n  var3013\n  (ite (= 1 1) true false)))\n  (define-fun null-var2196 () var2196\n    var2196!val!1)\n  (define-fun var1382 () String\n    (str.++ var3205!1\n        (var2166_getAccessibleObjectDescription/-550785423\n          var3013\n          (ite (= 1 1) true false))))\n  (define-fun var3344 () String\n    (str.++ var3205!1\n        (var2166_getAccessibleObjectDescription/-550785423\n          var3013\n          (ite (= 1 1) true false))\n        \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\"))\n  (define-fun var1449 () Bool\n    (var3888_isStatic/379715466\n  (var743_getModifiers/622745125 (cast-from-var2473-to-var743 var3013))))\n  (define-fun var2622 () var2196\n    var2953)\n  (define-fun var3999 () var743\n    (cast-from-var2473-to-var743 var3013))\n  (define-fun var2953 () var2196\n    var2196!val!0)\n  (define-fun var3536 () Int\n    (var743_getModifiers/622745125 (cast-from-var2473-to-var743 var3013)))\n  (define-fun var611 () var3125\n    var3125-init)\n  (define-fun var3205 () String\n    String-init)\n  (define-fun var1970 () String\n    (str.++ var3205!1\n        (var2166_getAccessibleObjectDescription/-550785423\n          var3013\n          (ite (= 1 1) true false))\n        \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\"))\n  (define-fun var3205!2 () String\n    \"\")\n  (define-fun var1382!1 () String\n    \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\")\n  (define-fun var3205!1 () String\n    \"\")\n  (define-fun var3125-init () var3125\n    var3125!val!0)\n  (define-fun var611!1 () var3125\n    var3125!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1970!1 () String\n    \"\")\n  (define-fun var743_getModifiers/622745125 ((x!0 var743)) Int\n    0)\n  (define-fun var3888_isStatic/379715466 ((x!0 Int)) Bool\n    false)\n  (define-fun cast-from-var2473-to-var743 ((x!0 var2473)) var743\n    var743!val!0)\n  (define-fun var290_canAccess/24921369 ((x!0 var2473) (x!1 var2196)) Bool\n    false)\n  (define-fun var2166_getAccessibleObjectDescription/-550785423 ((x!0 var2473)\n   (x!1 Bool)) String\n    \"\")\n  (define-fun <init>/-1993171084 ((x!0 var3125) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 66 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169857024,
            "run_time": 2.278697967529297,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2196/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.ReflectiveTypeAdapterFactory__checkAccessible__-1516662337\\927.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_34_3 =\r\n     concat(var3205!2, \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\")\r\n   var1382!1 =\r\n     concat(var3205!2, \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\")\r\n\r\n1734ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.Object",
            "r0 := @parameter1: java.lang.reflect.AccessibleObject",
            "$r1 = (java.lang.reflect.Member) r0",
            "$i0 = interfaceinvoke $r1.<java.lang.reflect.Member: int getModifiers()>()",
            "$z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0)",
            "if $z0 == 0 goto $r9 = r2",
            "$r9 = r2",
            "$z1 = staticinvoke <com.google.gson.internal.ReflectionAccessFilterHelper: boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object)>(r0, $r9)",
            "if $z1 != 0 goto return",
            "r3 = staticinvoke <com.google.gson.internal.reflect.ReflectionHelper: java.lang.String getAccessibleObjectDescription(java.lang.reflect.AccessibleObject,boolean)>(r0, 1)",
            "$r4 = new com.google.gson.JsonIOException",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r4.<com.google.gson.JsonIOException: void <init>(java.lang.String)>($r8)",
            "throw $r4"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.$Gson$Types$WildcardTypeImpl__toString__-557370326\\555.smt2",
        "z3": {
            "memory": 32382976,
            "run_time": 0.25147008895874023,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  ;; universe for var662:\r\n  ;;   var662!val!0 var662!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var662!val!0 () var662)\r\n  (declare-fun var662!val!1 () var662)\r\n  ;; cardinality constraint:\r\n  (forall ((x var662)) (or (= x var662!val!0) (= x var662!val!1)))\r\n  ;; -----------\r\n  (define-fun var2907 () var662\r\n    var662!val!0)\r\n  (define-fun var2124 () String\r\n    String-init)\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun null-var662 () var662\r\n    var662!val!1)\r\n  (define-fun var737 () String\r\n    (var3468_typeToString/-1316259189 (lowerBound/-424870646 var2907)))\r\n  (define-fun var1835 () ClassObject\r\n    (lowerBound/-424870646 var2907))\r\n  (define-fun var112 () String\r\n    (str.++ var2124!1 \"? super \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var363 () String\r\n    (str.++ var2124!1\r\n        \"? super \"\r\n        (var3468_typeToString/-1316259189 (lowerBound/-424870646 var2907))))\r\n  (define-fun var1013 () String\r\n    (str.++ var2124!1\r\n        \"? super \"\r\n        (var3468_typeToString/-1316259189 (lowerBound/-424870646 var2907))))\r\n  (define-fun var907 () ClassObject\r\n    (lowerBound/-424870646 var2907))\r\n  (define-fun var112!1 () String\r\n    \"? super \")\r\n  (define-fun var2124!1 () String\r\n    \"\")\r\n  (define-fun var2124!2 () String\r\n    \"? super \")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun lowerBound/-424870646 ((x!0 var662)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var3468_typeToString/-1316259189 ((x!0 ClassObject)) String\r\n    \"\")\r\n)\r\n(error \"line 42 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9760768,
            "run_time": 0.02910447120666504,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var662 is 2\r\n; rep: (as @var662_0 var662)\r\n; rep: (as @var662_1 var662)\r\n; cardinality of var3468 is 1\r\n; rep: (as @var3468_0 var3468)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun lowerBound/-424870646 ((_arg_1 var662)) ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun String-init () String \"\")\r\n(define-fun var3468_typeToString/-1316259189 ((BOUND_VARIABLE_528 ClassObject)) String \"\")\r\n(define-fun null-var662 () var662 (as @var662_0 var662))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var2907 () var662 (as @var662_1 var662))\r\n(define-fun var2124!1 () String \"\")\r\n(define-fun var2124!2 () String \"? super \")\r\n(define-fun var112!1 () String \"? super \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35364864,
            "run_time": 0.10778403282165527,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  ;; universe for var662:\n  ;;   var662!val!0 var662!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var662!val!0 () var662)\n  (declare-fun var662!val!1 () var662)\n  ;; cardinality constraint:\n  (forall ((x var662)) (or (= x var662!val!0) (= x var662!val!1)))\n  ;; -----------\n  (define-fun var2907 () var662\n    var662!val!0)\n  (define-fun var112 () String\n    (str.++ var2124!1 \"? super \"))\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var737 () String\n    (var3468_typeToString/-1316259189 (lowerBound/-424870646 var2907)))\n  (define-fun null-var662 () var662\n    var662!val!1)\n  (define-fun var907 () ClassObject\n    (lowerBound/-424870646 var2907))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var363 () String\n    (str.++ var2124!1\n        \"? super \"\n        (var3468_typeToString/-1316259189 (lowerBound/-424870646 var2907))))\n  (define-fun var1013 () String\n    (str.++ var2124!1\n        \"? super \"\n        (var3468_typeToString/-1316259189 (lowerBound/-424870646 var2907))))\n  (define-fun var1835 () ClassObject\n    (lowerBound/-424870646 var2907))\n  (define-fun var2124 () String\n    String-init)\n  (define-fun var112!1 () String\n    \"? super \")\n  (define-fun var2124!1 () String\n    \"\")\n  (define-fun var2124!2 () String\n    \"? super \")\n  (define-fun String-init () String\n    \"\")\n  (define-fun lowerBound/-424870646 ((x!0 var662)) ClassObject\n    ClassObject!val!0)\n  (define-fun var3468_typeToString/-1316259189 ((x!0 ClassObject)) String\n    \"\")\n)\n(error \"line 42 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164958208,
            "run_time": 2.006894111633301,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var662/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.$Gson$Types$WildcardTypeImpl__toString__-557370326\\555.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var112!1 =\r\n     concat(\"? super \", all_19_3)\r\n\r\n1494ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.$Gson$Types$WildcardTypeImpl",
            "$r1 = r0.<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type lowerBound>",
            "if $r1 == null goto $r2 = r0.<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type upperBound>",
            "$r9 = new java.lang.StringBuilder",
            "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()",
            "$r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"? super \")",
            "$r10 = r0.<com.google.gson.internal.$Gson$Types$WildcardTypeImpl: java.lang.reflect.Type lowerBound>",
            "$r11 = staticinvoke <com.google.gson.internal.$Gson$Types: java.lang.String typeToString(java.lang.reflect.Type)>($r10)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r14"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.GsonBuilder__setVersion__-2118851090\\1313.smt2",
        "z3": {
            "memory": 32411648,
            "run_time": 0.13393831253051758,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2322:\r\n  ;;   var2322!val!1 var2322!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2322!val!1 () var2322)\r\n  (declare-fun var2322!val!0 () var2322)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2322)) (or (= x var2322!val!1) (= x var2322!val!0)))\r\n  ;; -----------\r\n  (define-fun var1046 () String\r\n    (append/33611274 (str.++ var2148!1 \"Invalid version: \") var3022))\r\n  (define-fun var2555 () Bool\r\n    (Float64_isNaN/-647401060 var3022))\r\n  (define-fun var587 () String\r\n    (str.++ var2148!1 \"Invalid version: \"))\r\n  (define-fun var2160 () String\r\n    (append/33611274 (str.++ var2148!1 \"Invalid version: \") var3022))\r\n  (define-fun var761 () var2322\r\n    var2322!val!0)\r\n  (define-fun var3022 () Float64\r\n    (fp #b0 #b00000000100 #x0000000000001))\r\n  (define-fun null-var2322 () var2322\r\n    var2322!val!1)\r\n  (define-fun null-Float64 () Float64\r\n    (fp #b1 #b00000000000 #x0000000020000))\r\n  (define-fun var587!1 () String\r\n    \"Invalid version: \")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2148 () String\r\n    String-init)\r\n  (define-fun var1858 () var1043\r\n    var1043-init)\r\n  (define-fun var2148!2 () String\r\n    \"Invalid version: \")\r\n  (define-fun var2148!1 () String\r\n    \"\")\r\n  (define-fun var1046!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1043-init () var1043\r\n    var1043!val!0)\r\n  (define-fun var1858!1 () var1043\r\n    var1043!val!0)\r\n  (define-fun Float64_isNaN/-647401060 ((x!0 Float64)) Bool\r\n    true)\r\n  (define-fun append/33611274 ((x!0 String) (x!1 Float64)) String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var1043) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 17244160,
            "run_time": 0.09344959259033203,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2322 is 2\r\n; rep: (as @var2322_0 var2322)\r\n; rep: (as @var2322_1 var2322)\r\n; cardinality of var1043 is 1\r\n; rep: (as @var1043_0 var1043)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun Float64_isNaN/-647401060 ((_arg_1 (_ FloatingPoint 11 53))) Bool true)\r\n(define-fun var1043-init () var1043 (as @var1043_0 var1043))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/33611274 ((BOUND_VARIABLE_7358 String) (BOUND_VARIABLE_7359 (_ FloatingPoint 11 53))) String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_7362 var1043) (BOUND_VARIABLE_7363 String)) void (as @void_0 void))\r\n(define-fun null-var2322 () var2322 (as @var2322_0 var2322))\r\n(define-fun null-Float64 () (_ FloatingPoint 11 53) (fp #b1 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun var761 () var2322 (as @var2322_1 var2322))\r\n(define-fun var3022 () (_ FloatingPoint 11 53) (fp #b0 #b11111111111 #b0000000000000000000000000000000000000000000000000000))\r\n(define-fun var2148!1 () String \"\")\r\n(define-fun var2148!2 () String \"Invalid version: \")\r\n(define-fun var587!1 () String \"Invalid version: \")\r\n(define-fun var1858!1 () var1043 (as @var1043_0 var1043))\r\n(define-fun var1046!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36417536,
            "run_time": 0.12192344665527344,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2322:\n  ;;   var2322!val!1 var2322!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2322!val!1 () var2322)\n  (declare-fun var2322!val!0 () var2322)\n  ;; cardinality constraint:\n  (forall ((x var2322)) (or (= x var2322!val!1) (= x var2322!val!0)))\n  ;; -----------\n  (define-fun var587 () String\n    (str.++ var2148!1 \"Invalid version: \"))\n  (define-fun var2160 () String\n    (append/33611274 (str.++ var2148!1 \"Invalid version: \") var3022))\n  (define-fun var2148!1 () String\n    \"\")\n  (define-fun var587!1 () String\n    \"Invalid version: \")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2148 () String\n    String-init)\n  (define-fun var2555 () Bool\n    (Float64_isNaN/-647401060 var3022))\n  (define-fun var761 () var2322\n    var2322!val!0)\n  (define-fun var3022 () Float64\n    (_ +zero 11 53))\n  (define-fun null-var2322 () var2322\n    var2322!val!1)\n  (define-fun null-Float64 () Float64\n    (fp #b0 #b00000000000 #x0000000000001))\n  (define-fun var1046 () String\n    (append/33611274 (str.++ var2148!1 \"Invalid version: \") var3022))\n  (define-fun var1858 () var1043\n    var1043-init)\n  (define-fun var2148!2 () String\n    \"Invalid version: \")\n  (define-fun var1046!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1043-init () var1043\n    var1043!val!0)\n  (define-fun var1858!1 () var1043\n    var1043!val!0)\n  (define-fun Float64_isNaN/-647401060 ((x!0 Float64)) Bool\n    true)\n  (define-fun append/33611274 ((x!0 String) (x!1 Float64)) String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var1043) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 116895744,
            "run_time": 1.071608066558838,
            "is_sat": "error",
            "stdout": "error\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.GsonBuilder__setVersion__-2118851090\\1313.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\n591ms\r\nSort Float64 not declared\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(double)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(double)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r5 := @this: com.google.gson.GsonBuilder",
            "d0 := @parameter0: double",
            "$z0 = staticinvoke <java.lang.Double: boolean isNaN(double)>(d0)",
            "if $z0 != 0 goto $r9 = new java.lang.IllegalArgumentException",
            "$r9 = new java.lang.IllegalArgumentException",
            "$r8 = new java.lang.StringBuilder",
            "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid version: \")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(d0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4)",
            "throw $r9"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.GsonBuilder__addTypeAdaptersForDate__-725157487\\1524.smt2",
        "z3": {
            "memory": 31895552,
            "run_time": 0.11690855026245117,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 39 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9777152,
            "run_time": 0.027437448501586914,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33452032,
            "run_time": 0.14841532707214355,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 39 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140775424,
            "run_time": 1.5046288967132568,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 8,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r9 := @this: com.google.gson.GsonBuilder",
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "r2 := @parameter3: java.util.List",
            "z0 = <com.google.gson.internal.sql.SqlTypesSupport: boolean SUPPORTS_SQL_TYPES>",
            "r10 = null",
            "r11 = null",
            "if r0 == null goto (branch)",
            "if i0 == 2 goto return",
            "if i1 == 2 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter__finalize__1242099278\\530.smt2",
        "z3": {
            "memory": 32518144,
            "run_time": 0.08879637718200684,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1250:\r\n  ;;   var1250!val!0 var1250!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1250!val!0 () var1250)\r\n  (declare-fun var1250!val!1 () var1250)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1250)) (or (= x var1250!val!0) (= x var1250!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3044:\r\n  ;;   var3044!val!0 var3044!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3044!val!0 () var3044)\r\n  (declare-fun var3044!val!1 () var3044)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3044)) (or (= x var3044!val!0) (= x var3044!val!1)))\r\n  ;; -----------\r\n  ;; universe for var451:\r\n  ;;   var451!val!1 var451!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var451!val!1 () var451)\r\n  (declare-fun var451!val!0 () var451)\r\n  ;; cardinality constraint:\r\n  (forall ((x var451)) (or (= x var451!val!1) (= x var451!val!0)))\r\n  ;; -----------\r\n  (define-fun var1989 () var1470\r\n    (constructor/-339183035 var429))\r\n  (define-fun var1602 () var1470\r\n    (constructor/-339183035 var429))\r\n  (define-fun var429 () var1250\r\n    var1250!val!0)\r\n  (define-fun null-var1250 () var1250\r\n    var1250!val!1)\r\n  (define-fun var2135 () String\r\n    (str.++ var2177!1\r\n        \"Failed to invoke constructor '\"\r\n        (var568_constructorToString/1631520055 (constructor/-339183035 var429))\r\n        \"' with args \"\r\n        (var3159_toString/-575966009 var1326)))\r\n  (define-fun var2552 () String\r\n    (str.++ var2177!1\r\n        \"Failed to invoke constructor '\"\r\n        (var568_constructorToString/1631520055 (constructor/-339183035 var429))\r\n        \"' with args \"))\r\n  (define-fun var2892 () String\r\n    (str.++ var2177!1\r\n        \"Failed to invoke constructor '\"\r\n        (var568_constructorToString/1631520055 (constructor/-339183035 var429))))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-__Array__Int__var3044__ () (Array Int var3044)\r\n    ((as const (Array Int var3044)) var3044!val!0))\r\n  (define-fun var2177 () String\r\n    String-init)\r\n  (define-fun null-var451 () var451\r\n    var451!val!1)\r\n  (define-fun var2301 () String\r\n    (str.++ var2177!1 \"Failed to invoke constructor '\"))\r\n  (define-fun var2036 () var451\r\n    var451!val!0)\r\n  (define-fun var2462 () String\r\n    (str.++ var2177!1\r\n        \"Failed to invoke constructor '\"\r\n        (var568_constructorToString/1631520055 (constructor/-339183035 var429))\r\n        \"' with args \"\r\n        (var3159_toString/-575966009 var1326)))\r\n  (define-fun var17 () String\r\n    (var3159_toString/-575966009 var1326))\r\n  (define-fun var1953 () String\r\n    (var568_constructorToString/1631520055 (constructor/-339183035 var429)))\r\n  (define-fun var1326 () (Array Int var3044)\r\n    ((as const (Array Int var3044)) var3044!val!1))\r\n  (define-fun var3372 () var2871\r\n    var2871-init)\r\n  (define-fun var2552!1 () String\r\n    \"Failed to invoke constructor '' with args \")\r\n  (define-fun var2177!1 () String\r\n    \"\")\r\n  (define-fun var2177!2 () String\r\n    \"Failed to invoke constructor '\")\r\n  (define-fun var2301!1 () String\r\n    \"Failed to invoke constructor '\")\r\n  (define-fun var2892!1 () String\r\n    \"Failed to invoke constructor '' with args \")\r\n  (define-fun var2871-init () var2871\r\n    var2871!val!0)\r\n  (define-fun var3372!1 () var2871\r\n    var2871!val!0)\r\n  (define-fun var2036!1 () var451\r\n    var451!val!1)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2135!1 () String\r\n    \"\")\r\n  (define-fun constructor/-339183035 ((x!0 var1250)) var1470\r\n    var1470!val!0)\r\n  (define-fun var568_constructorToString/1631520055 ((x!0 var1470)) String\r\n    \"\")\r\n  (define-fun var3159_toString/-575966009 ((x!0 (Array Int var3044))) String\r\n    \"\")\r\n  (define-fun cast-from-var451-to-var1905 ((x!0 var451)) var1905\r\n    var1905!val!0)\r\n  (define-fun <init>/1642269841 ((x!0 var2871) (x!1 String) (x!2 var1905)) void\r\n    void!val!0)\r\n)\r\n(error \"line 72 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9760768,
            "run_time": 0.03073573112487793,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1250 is 2\r\n; rep: (as @var1250_0 var1250)\r\n; rep: (as @var1250_1 var1250)\r\n; cardinality of var3044 is 2\r\n; rep: (as @var3044_0 var3044)\r\n; rep: (as @var3044_1 var3044)\r\n; cardinality of var1470 is 1\r\n; rep: (as @var1470_0 var1470)\r\n; cardinality of var451 is 2\r\n; rep: (as @var451_0 var451)\r\n; rep: (as @var451_1 var451)\r\n; cardinality of var2871 is 1\r\n; rep: (as @var2871_0 var2871)\r\n; cardinality of var568 is 1\r\n; rep: (as @var568_0 var568)\r\n; cardinality of var3159 is 1\r\n; rep: (as @var3159_0 var3159)\r\n; cardinality of var1905 is 1\r\n; rep: (as @var1905_0 var1905)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun constructor/-339183035 ((BOUND_VARIABLE_640 var1250)) var1470 (as @var1470_0 var1470))\r\n(define-fun var2871-init () var2871 (as @var2871_0 var2871))\r\n(define-fun String-init () String \"\")\r\n(define-fun var568_constructorToString/1631520055 ((BOUND_VARIABLE_643 var1470)) String \"\")\r\n(define-fun var3159_toString/-575966009 ((BOUND_VARIABLE_646 (Array Int var3044))) String \"\")\r\n(define-fun <init>/1642269841 ((BOUND_VARIABLE_649 var2871) (BOUND_VARIABLE_650 String) (BOUND_VARIABLE_651 var1905)) void (as @void_0 void))\r\n(define-fun cast-from-var451-to-var1905 ((BOUND_VARIABLE_654 var451)) var1905 (as @var1905_0 var1905))\r\n(define-fun null-var1250 () var1250 (as @var1250_0 var1250))\r\n(define-fun null-__Array__Int__var3044__ () (Array Int var3044) (store ((as const (Array Int var3044)) (as @var3044_1 var3044)) 0 (as @var3044_0 var3044)))\r\n(define-fun null-var451 () var451 (as @var451_0 var451))\r\n(define-fun var429 () var1250 (as @var1250_1 var1250))\r\n(define-fun var1326 () (Array Int var3044) (store ((as const (Array Int var3044)) (as @var3044_0 var3044)) 0 (as @var3044_1 var3044)))\r\n(define-fun var2036 () var451 (as @var451_1 var451))\r\n(define-fun var2177!1 () String \"\")\r\n(define-fun var2177!2 () String \"Failed to invoke constructor '\")\r\n(define-fun var2301!1 () String \"Failed to invoke constructor '\")\r\n(define-fun var2892!1 () String \"Failed to invoke constructor '' with args \")\r\n(define-fun var2552!1 () String \"Failed to invoke constructor '' with args \")\r\n(define-fun var3372!1 () var2871 (as @var2871_0 var2871))\r\n(define-fun var2135!1 () String \"\")\r\n(define-fun var2036!1 () var451 (as @var451_0 var451))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36237312,
            "run_time": 0.15343976020812988,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1250:\n  ;;   var1250!val!0 var1250!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1250!val!0 () var1250)\n  (declare-fun var1250!val!1 () var1250)\n  ;; cardinality constraint:\n  (forall ((x var1250)) (or (= x var1250!val!0) (= x var1250!val!1)))\n  ;; -----------\n  ;; universe for var3044:\n  ;;   var3044!val!0 var3044!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3044!val!0 () var3044)\n  (declare-fun var3044!val!1 () var3044)\n  ;; cardinality constraint:\n  (forall ((x var3044)) (or (= x var3044!val!0) (= x var3044!val!1)))\n  ;; -----------\n  ;; universe for var451:\n  ;;   var451!val!1 var451!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var451!val!1 () var451)\n  (declare-fun var451!val!0 () var451)\n  ;; cardinality constraint:\n  (forall ((x var451)) (or (= x var451!val!1) (= x var451!val!0)))\n  ;; -----------\n  (define-fun var2552 () String\n    (str.++ var2177!1\n        \"Failed to invoke constructor '\"\n        (var568_constructorToString/1631520055 (constructor/-339183035 var429))\n        \"' with args \"))\n  (define-fun var429 () var1250\n    var1250!val!0)\n  (define-fun null-var1250 () var1250\n    var1250!val!1)\n  (define-fun var2892 () String\n    (str.++ var2177!1\n        \"Failed to invoke constructor '\"\n        (var568_constructorToString/1631520055 (constructor/-339183035 var429))))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2177 () String\n    String-init)\n  (define-fun null-__Array__Int__var3044__ () (Array Int var3044)\n    ((as const (Array Int var3044)) var3044!val!1))\n  (define-fun var2301 () String\n    (str.++ var2177!1 \"Failed to invoke constructor '\"))\n  (define-fun null-var451 () var451\n    var451!val!1)\n  (define-fun var3372 () var2871\n    var2871-init)\n  (define-fun var2462 () String\n    (str.++ var2177!1\n        \"Failed to invoke constructor '\"\n        (var568_constructorToString/1631520055 (constructor/-339183035 var429))\n        \"' with args \"\n        (var3159_toString/-575966009 var1326)))\n  (define-fun var1989 () var1470\n    (constructor/-339183035 var429))\n  (define-fun var1602 () var1470\n    (constructor/-339183035 var429))\n  (define-fun var2036 () var451\n    var451!val!0)\n  (define-fun var17 () String\n    (var3159_toString/-575966009 var1326))\n  (define-fun var1953 () String\n    (var568_constructorToString/1631520055 (constructor/-339183035 var429)))\n  (define-fun var1326 () (Array Int var3044)\n    ((as const (Array Int var3044)) var3044!val!0))\n  (define-fun var2135 () String\n    (str.++ var2177!1\n        \"Failed to invoke constructor '\"\n        (var568_constructorToString/1631520055 (constructor/-339183035 var429))\n        \"' with args \"\n        (var3159_toString/-575966009 var1326)))\n  (define-fun var2552!1 () String\n    \"Failed to invoke constructor '' with args \")\n  (define-fun var2177!1 () String\n    \"\")\n  (define-fun var2177!2 () String\n    \"Failed to invoke constructor '\")\n  (define-fun var2301!1 () String\n    \"Failed to invoke constructor '\")\n  (define-fun var2892!1 () String\n    \"Failed to invoke constructor '' with args \")\n  (define-fun var2871-init () var2871\n    var2871!val!0)\n  (define-fun var3372!1 () var2871\n    var2871!val!0)\n  (define-fun var2036!1 () var451\n    var451!val!1)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2135!1 () String\n    \"\")\n  (define-fun constructor/-339183035 ((x!0 var1250)) var1470\n    var1470!val!0)\n  (define-fun var568_constructorToString/1631520055 ((x!0 var1470)) String\n    \"\")\n  (define-fun var3159_toString/-575966009 ((x!0 (Array Int var3044))) String\n    \"\")\n  (define-fun cast-from-var451-to-var1905 ((x!0 var451)) var1905\n    var1905!val!0)\n  (define-fun <init>/1642269841 ((x!0 var2871) (x!1 String) (x!2 var1905)) void\n    void!val!0)\n)\n(error \"line 72 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 183697408,
            "run_time": 2.3026742935180664,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1250/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter__finalize__1242099278\\530.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2552!1 =\r\n     concat(all_39_5, all_39_4)\r\n   var2892!1 =\r\n     concat(all_36_3, \"\\u{0}27 with args \")\r\n   var2301!1 =\r\n     concat(\"Failed to invoke constructor \\u{0}27\", all_33_2)\r\n   all_39_5 =\r\n     concat(all_39_6, \"\\u{0}27 with args \")\r\n   all_36_3 =\r\n     concat(\"Failed to invoke constructor \\u{0}27\", all_33_2)\r\n   all_39_6 =\r\n     concat(\"Failed to invoke constructor \\u{0}27\", all_33_2)\r\n\r\n1700ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.util.Arrays: java.lang.String toString(java.lang.Object[])>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter",
            "r1 := @parameter0: java.lang.Object[]",
            "$r2 = r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter: java.lang.reflect.Constructor constructor>",
            "$r16 := @caughtexception",
            "$r17 = new java.lang.RuntimeException",
            "$r18 = new java.lang.StringBuilder",
            "specialinvoke $r18.<java.lang.StringBuilder: void <init>()>()",
            "$r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to invoke constructor \\'\")",
            "$r19 = r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter: java.lang.reflect.Constructor constructor>",
            "$r20 = staticinvoke <com.google.gson.internal.reflect.ReflectionHelper: java.lang.String constructorToString(java.lang.reflect.Constructor)>($r19)",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20)",
            "$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' with args \")",
            "$r23 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r1)",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r23)",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r17.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r26, $r16)",
            "throw $r17"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.FieldNamingPolicy$6__translateName__967738005\\5.smt2",
        "z3": {
            "memory": 32321536,
            "run_time": 0.10414862632751465,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1189:\r\n  ;;   var1189!val!0 var1189!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1189!val!0 () var1189)\r\n  (declare-fun var1189!val!1 () var1189)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1189)) (or (= x var1189!val!0) (= x var1189!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2930:\r\n  ;;   var2930!val!1 var2930!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2930!val!1 () var2930)\r\n  (declare-fun var2930!val!0 () var2930)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2930)) (or (= x var2930!val!1) (= x var2930!val!0)))\r\n  ;; -----------\r\n  (define-fun var2788 () String\r\n    (toLowerCase/1946809429\r\n  (var3082_separateCamelCase/1260369589 (getName/1618348824 var1823) 45)\r\n  var3695-ENGLISH))\r\n  (define-fun null-var2930 () var2930\r\n    var2930!val!1)\r\n  (define-fun var3848 () String\r\n    (getName/1618348824 var1823))\r\n  (define-fun var1343 () var3695\r\n    var3695-ENGLISH)\r\n  (define-fun null-var1189 () var1189\r\n    var1189!val!1)\r\n  (define-fun var551 () var2930\r\n    var2930!val!0)\r\n  (define-fun var1823 () var1189\r\n    var1189!val!0)\r\n  (define-fun var2741 () String\r\n    (var3082_separateCamelCase/1260369589 (getName/1618348824 var1823) 45))\r\n  (define-fun var3695-ENGLISH () var3695\r\n    var3695!val!0)\r\n  (define-fun var3082_separateCamelCase/1260369589 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n  (define-fun getName/1618348824 ((x!0 var1189)) String\r\n    \"\")\r\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var3695)) String\r\n    \"\")\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10125312,
            "run_time": 0.06093120574951172,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2930 is 2\r\n; rep: (as @var2930_0 var2930)\r\n; rep: (as @var2930_1 var2930)\r\n; cardinality of var1189 is 2\r\n; rep: (as @var1189_0 var1189)\r\n; rep: (as @var1189_1 var1189)\r\n; cardinality of var3082 is 1\r\n; rep: (as @var3082_0 var3082)\r\n; cardinality of var3695 is 1\r\n; rep: (as @var3695_0 var3695)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getName/1618348824 ((BOUND_VARIABLE_448 var1189)) String \"\")\r\n(define-fun var3082_separateCamelCase/1260369589 ((BOUND_VARIABLE_451 String) (BOUND_VARIABLE_452 Int)) String \"\")\r\n(define-fun toLowerCase/1946809429 ((BOUND_VARIABLE_455 String) (BOUND_VARIABLE_456 var3695)) String \"\")\r\n(define-fun null-var2930 () var2930 (as @var2930_0 var2930))\r\n(define-fun null-var1189 () var1189 (as @var1189_0 var1189))\r\n(define-fun var3695-ENGLISH () var3695 (as @var3695_0 var3695))\r\n(define-fun var551 () var2930 (as @var2930_1 var2930))\r\n(define-fun var1823 () var1189 (as @var1189_1 var1189))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33120256,
            "run_time": 0.13838934898376465,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1189:\n  ;;   var1189!val!0 var1189!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1189!val!0 () var1189)\n  (declare-fun var1189!val!1 () var1189)\n  ;; cardinality constraint:\n  (forall ((x var1189)) (or (= x var1189!val!0) (= x var1189!val!1)))\n  ;; -----------\n  ;; universe for var2930:\n  ;;   var2930!val!1 var2930!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2930!val!1 () var2930)\n  (declare-fun var2930!val!0 () var2930)\n  ;; cardinality constraint:\n  (forall ((x var2930)) (or (= x var2930!val!1) (= x var2930!val!0)))\n  ;; -----------\n  (define-fun null-var2930 () var2930\n    var2930!val!1)\n  (define-fun var3848 () String\n    (getName/1618348824 var1823))\n  (define-fun null-var1189 () var1189\n    var1189!val!1)\n  (define-fun var2741 () String\n    (var3082_separateCamelCase/1260369589 (getName/1618348824 var1823) 45))\n  (define-fun var551 () var2930\n    var2930!val!0)\n  (define-fun var1823 () var1189\n    var1189!val!0)\n  (define-fun var1343 () var3695\n    var3695-ENGLISH)\n  (define-fun var2788 () String\n    (toLowerCase/1946809429\n  (var3082_separateCamelCase/1260369589 (getName/1618348824 var1823) 45)\n  var3695-ENGLISH))\n  (define-fun var3695-ENGLISH () var3695\n    var3695!val!0)\n  (define-fun var3082_separateCamelCase/1260369589 ((x!0 String) (x!1 Int)) String\n    \"\")\n  (define-fun getName/1618348824 ((x!0 var1189)) String\n    \"\")\n  (define-fun toLowerCase/1946809429 ((x!0 String) (x!1 var3695)) String\n    \"\")\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140152832,
            "run_time": 1.5045559406280518,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1823 () var1189 var1189!8)\r\n  (define-fun var551 () var2930 var2930!6)\r\n  (define-fun null-var1189 () var1189 var1189!4)\r\n  (define-fun null-var2930 () var2930 var2930!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>": 1
        },
        "jimple_statements": [
            "r5 := @this: com.google.gson.FieldNamingPolicy$6",
            "r0 := @parameter0: java.lang.reflect.Field",
            "$r1 = virtualinvoke r0.<java.lang.reflect.Field: java.lang.String getName()>()",
            "$r3 = staticinvoke <com.google.gson.FieldNamingPolicy$6: java.lang.String separateCamelCase(java.lang.String,char)>($r1, 45)",
            "$r2 = <java.util.Locale: java.util.Locale ENGLISH>",
            "$r4 = virtualinvoke $r3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>($r2)",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.GsonBuilder__addTypeAdaptersForDate__-725157487\\1527.smt2",
        "z3": {
            "memory": 32018432,
            "run_time": 0.11623454093933105,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 73 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12914688,
            "run_time": 0.04644346237182617,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33423360,
            "run_time": 0.1381990909576416,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 73 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179417088,
            "run_time": 1.90537428855896,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>",
            "<java.lang.String: boolean isEmpty()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 1,
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r9 := @this: com.google.gson.GsonBuilder",
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "r2 := @parameter3: java.util.List",
            "z0 = <com.google.gson.internal.sql.SqlTypesSupport: boolean SUPPORTS_SQL_TYPES>",
            "r10 = null",
            "r11 = null",
            "if r0 == null goto (branch)",
            "$r5 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()",
            "$z1 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>()",
            "if $z1 != 0 goto (branch)",
            "$r6 = <com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE>",
            "r12 = virtualinvoke $r6.<com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.TypeAdapterFactory createAdapterFactory(java.lang.String)>(r0)",
            "if z0 == 0 goto interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)",
            "$r7 = <com.google.gson.internal.sql.SqlTypesSupport: com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType TIMESTAMP_DATE_TYPE>",
            "r10 = virtualinvoke $r7.<com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.TypeAdapterFactory createAdapterFactory(java.lang.String)>(r0)",
            "$r8 = <com.google.gson.internal.sql.SqlTypesSupport: com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE_DATE_TYPE>",
            "r11 = virtualinvoke $r8.<com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.TypeAdapterFactory createAdapterFactory(java.lang.String)>(r0)",
            "goto [?= interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)]",
            "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)",
            "if z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter__keyToString__864022817\\972.smt2",
        "z3": {
            "memory": 32276480,
            "run_time": 0.10257840156555176,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3975:\r\n  ;;   var3975!val!1 var3975!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3975!val!1 () var3975)\r\n  (declare-fun var3975!val!0 () var3975)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3975)) (or (= x var3975!val!1) (= x var3975!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1190:\r\n  ;;   var1190!val!1 var1190!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1190!val!1 () var1190)\r\n  (declare-fun var1190!val!0 () var1190)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1190)) (or (= x var1190!val!1) (= x var1190!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var3975 () var3975\r\n    var3975!val!1)\r\n  (define-fun null-var1190 () var1190\r\n    var1190!val!1)\r\n  (define-fun var1990 () var3975\r\n    var3975!val!0)\r\n  (define-fun var447 () Bool\r\n    (isJsonPrimitive/2003092387 var3904))\r\n  (define-fun var3655 () Bool\r\n    (isJsonNull/138558921 var3904))\r\n  (define-fun var3904 () var1190\r\n    var1190!val!0)\r\n  (define-fun isJsonNull/138558921 ((x!0 var1190)) Bool\r\n    true)\r\n  (define-fun isJsonPrimitive/2003092387 ((x!0 var1190)) Bool\r\n    false)\r\n)\r\n(error \"line 28 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10129408,
            "run_time": 0.028813838958740234,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3975 is 2\r\n; rep: (as @var3975_0 var3975)\r\n; rep: (as @var3975_1 var3975)\r\n; cardinality of var1190 is 2\r\n; rep: (as @var1190_0 var1190)\r\n; rep: (as @var1190_1 var1190)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun isJsonPrimitive/2003092387 ((_arg_1 var1190)) Bool false)\r\n(define-fun isJsonNull/138558921 ((_arg_1 var1190)) Bool true)\r\n(define-fun null-var3975 () var3975 (as @var3975_0 var3975))\r\n(define-fun null-var1190 () var1190 (as @var1190_0 var1190))\r\n(define-fun var1990 () var3975 (as @var3975_1 var3975))\r\n(define-fun var3904 () var1190 (as @var1190_1 var1190))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34861056,
            "run_time": 0.12563085556030273,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3975:\n  ;;   var3975!val!1 var3975!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3975!val!1 () var3975)\n  (declare-fun var3975!val!0 () var3975)\n  ;; cardinality constraint:\n  (forall ((x var3975)) (or (= x var3975!val!1) (= x var3975!val!0)))\n  ;; -----------\n  ;; universe for var1190:\n  ;;   var1190!val!1 var1190!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1190!val!1 () var1190)\n  (declare-fun var1190!val!0 () var1190)\n  ;; cardinality constraint:\n  (forall ((x var1190)) (or (= x var1190!val!1) (= x var1190!val!0)))\n  ;; -----------\n  (define-fun null-var3975 () var3975\n    var3975!val!1)\n  (define-fun null-var1190 () var1190\n    var1190!val!1)\n  (define-fun var1990 () var3975\n    var3975!val!0)\n  (define-fun var3655 () Bool\n    (isJsonNull/138558921 var3904))\n  (define-fun var3904 () var1190\n    var1190!val!0)\n  (define-fun var447 () Bool\n    (isJsonPrimitive/2003092387 var3904))\n  (define-fun isJsonNull/138558921 ((x!0 var1190)) Bool\n    true)\n  (define-fun isJsonPrimitive/2003092387 ((x!0 var1190)) Bool\n    false)\n)\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 139218944,
            "run_time": 1.5152616500854492,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3904 () var1190 var1190!8)\r\n  (define-fun var1990 () var3975 var3975!6)\r\n  (define-fun null-var1190 () var1190 var1190!4)\r\n  (define-fun null-var3975 () var3975 var3975!2)\r\n  (define-fun isJsonNull/138558921 ((x!0 var1190)) Bool (ite (= x!0 var1190!8) true true))\r\n  (define-fun isJsonPrimitive/2003092387 ((x!0 var1190)) Bool (ite (= x!0 var1190!8) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 6,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r8 := @this: com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter",
            "r0 := @parameter0: com.google.gson.JsonElement",
            "$z0 = virtualinvoke r0.<com.google.gson.JsonElement: boolean isJsonPrimitive()>()",
            "if $z0 == 0 goto $z1 = virtualinvoke r0.<com.google.gson.JsonElement: boolean isJsonNull()>()",
            "$z1 = virtualinvoke r0.<com.google.gson.JsonElement: boolean isJsonNull()>()",
            "if $z1 == 0 goto $r1 = new java.lang.AssertionError",
            "return \"null\""
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.FieldNamingPolicy__upperCaseFirstLetter__430917350\\1275.smt2",
        "z3": {
            "memory": 32477184,
            "run_time": 0.10438299179077148,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2381 () String\r\n    \"\")\r\n  (define-fun var1194 () Int\r\n    (str.len var2381))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1338 () Int\r\n    0)\r\n)\r\n(error \"line 21 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10125312,
            "run_time": 0.03073573112487793,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var933 is 1\r\n; rep: (as @var933_0 var933)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2381 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37376000,
            "run_time": 0.1389317512512207,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var2381 () String\n    \"\")\n  (define-fun var1338 () Int\n    0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1194 () Int\n    (str.len var2381))\n)\n(error \"line 21 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 143712256,
            "run_time": 1.6253328323364258,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2381 () String \"\")\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "i4 = 0",
            "if i4 >= i0 goto return r0",
            "return r0"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.ReflectiveTypeAdapterFactory__checkAccessible__-1516662337\\933.smt2",
        "z3": {
            "memory": 32481280,
            "run_time": 0.10109543800354004,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1791:\r\n  ;;   var1791!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1791!val!0 () var1791)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1791)) (= x var1791!val!0))\r\n  ;; -----------\r\n  ;; universe for var791:\r\n  ;;   var791!val!1 var791!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var791!val!1 () var791)\r\n  (declare-fun var791!val!0 () var791)\r\n  ;; cardinality constraint:\r\n  (forall ((x var791)) (or (= x var791!val!1) (= x var791!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1702:\r\n  ;;   var1702!val!1 var1702!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1702!val!1 () var1702)\r\n  (declare-fun var1702!val!0 () var1702)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1702)) (or (= x var1702!val!1) (= x var1702!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var791 () var791\r\n    var791!val!1)\r\n  (define-fun var1639 () var1702\r\n    var1702!val!0)\r\n  (define-fun var1397 () Bool\r\n    (var438_canAccess/24921369 var1639 var3744))\r\n  (define-fun var3550 () Bool\r\n    (var1671_isStatic/379715466\r\n  (var1791_getModifiers/622745125 (cast-from-var1702-to-var1791 var1639))))\r\n  (define-fun var3744 () var791\r\n    var791!val!0)\r\n  (define-fun null-var1702 () var1702\r\n    var1702!val!1)\r\n  (define-fun var402 () var1791\r\n    (cast-from-var1702-to-var1791 var1639))\r\n  (define-fun var2819 () Int\r\n    (var1791_getModifiers/622745125 (cast-from-var1702-to-var1791 var1639)))\r\n  (define-fun var884 () var791\r\n    var3744)\r\n  (define-fun cast-from-var1702-to-var1791 ((x!0 var1702)) var1791\r\n    var1791!val!0)\r\n  (define-fun var1791_getModifiers/622745125 ((x!0 var1791)) Int\r\n    0)\r\n  (define-fun var1671_isStatic/379715466 ((x!0 Int)) Bool\r\n    false)\r\n  (define-fun var438_canAccess/24921369 ((x!0 var1702) (x!1 var791)) Bool\r\n    true)\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10199040,
            "run_time": 0.03090643882751465,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var791 is 2\r\n; rep: (as @var791_0 var791)\r\n; rep: (as @var791_1 var791)\r\n; cardinality of var1702 is 2\r\n; rep: (as @var1702_0 var1702)\r\n; rep: (as @var1702_1 var1702)\r\n; cardinality of var1791 is 1\r\n; rep: (as @var1791_0 var1791)\r\n; cardinality of var1671 is 1\r\n; rep: (as @var1671_0 var1671)\r\n; cardinality of var438 is 1\r\n; rep: (as @var438_0 var438)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var1702-to-var1791 ((_arg_1 var1702)) var1791 (as @var1791_0 var1791))\r\n(define-fun var1791_getModifiers/622745125 ((_arg_1 var1791)) Int (- 1))\r\n(define-fun var1671_isStatic/379715466 ((_arg_1 Int)) Bool false)\r\n(define-fun var438_canAccess/24921369 ((_arg_1 var1702) (_arg_2 var791)) Bool true)\r\n(define-fun null-var791 () var791 (as @var791_0 var791))\r\n(define-fun null-var1702 () var1702 (as @var1702_0 var1702))\r\n(define-fun var3744 () var791 (as @var791_1 var791))\r\n(define-fun var1639 () var1702 (as @var1702_1 var1702))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37339136,
            "run_time": 0.14028549194335938,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1791:\n  ;;   var1791!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1791!val!0 () var1791)\n  ;; cardinality constraint:\n  (forall ((x var1791)) (= x var1791!val!0))\n  ;; -----------\n  ;; universe for var791:\n  ;;   var791!val!1 var791!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var791!val!1 () var791)\n  (declare-fun var791!val!0 () var791)\n  ;; cardinality constraint:\n  (forall ((x var791)) (or (= x var791!val!1) (= x var791!val!0)))\n  ;; -----------\n  ;; universe for var1702:\n  ;;   var1702!val!1 var1702!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1702!val!1 () var1702)\n  (declare-fun var1702!val!0 () var1702)\n  ;; cardinality constraint:\n  (forall ((x var1702)) (or (= x var1702!val!1) (= x var1702!val!0)))\n  ;; -----------\n  (define-fun null-var791 () var791\n    var791!val!1)\n  (define-fun var884 () var791\n    var3744)\n  (define-fun var1639 () var1702\n    var1702!val!0)\n  (define-fun var1397 () Bool\n    (var438_canAccess/24921369 var1639 var3744))\n  (define-fun var3744 () var791\n    var791!val!0)\n  (define-fun null-var1702 () var1702\n    var1702!val!1)\n  (define-fun var3550 () Bool\n    (var1671_isStatic/379715466\n  (var1791_getModifiers/622745125 (cast-from-var1702-to-var1791 var1639))))\n  (define-fun var402 () var1791\n    (cast-from-var1702-to-var1791 var1639))\n  (define-fun var2819 () Int\n    (var1791_getModifiers/622745125 (cast-from-var1702-to-var1791 var1639)))\n  (define-fun cast-from-var1702-to-var1791 ((x!0 var1702)) var1791\n    var1791!val!0)\n  (define-fun var1791_getModifiers/622745125 ((x!0 var1791)) Int\n    0)\n  (define-fun var1671_isStatic/379715466 ((x!0 Int)) Bool\n    false)\n  (define-fun var438_canAccess/24921369 ((x!0 var1702) (x!1 var791)) Bool\n    true)\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 149299200,
            "run_time": 1.4352800846099854,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1639 () var1702 var1702!8)\r\n  (define-fun var3744 () var791 var791!6)\r\n  (define-fun null-var1702 () var1702 var1702!4)\r\n  (define-fun null-var791 () var791 var791!2)\r\n  (define-fun var1791!26 () var1791 (cast-from-var1702-to-var1791 var1702!8))\r\n  (define-fun var438_canAccess/24921369 ((x!0 var1702) (x!1 var791)) Bool (ite (and (= x!0 var1702!8) (= x!1 var791!6)) true true))\r\n  (define-fun var1671_isStatic/379715466 ((x!0 Int)) Bool (ite (= x!0 14) false true))\r\n  (define-fun var1791_getModifiers/622745125 ((x!0 var1791)) Int (ite (= x!0 var1791!26) 14 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 5,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r2 := @parameter0: java.lang.Object",
            "r0 := @parameter1: java.lang.reflect.AccessibleObject",
            "$r1 = (java.lang.reflect.Member) r0",
            "$i0 = interfaceinvoke $r1.<java.lang.reflect.Member: int getModifiers()>()",
            "$z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0)",
            "if $z0 == 0 goto $r9 = r2",
            "$r9 = r2",
            "$z1 = staticinvoke <com.google.gson.internal.ReflectionAccessFilterHelper: boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object)>(r0, $r9)",
            "if $z1 != 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.DefaultDateTypeAdapter__toString__-1342888359\\871.smt2",
        "z3": {
            "memory": 31993856,
            "run_time": 0.10139131546020508,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 55 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10137600,
            "run_time": 0.030678510665893555,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36659200,
            "run_time": 0.15612435340881348,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 55 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151441408,
            "run_time": 1.5623948574066162,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.DefaultDateTypeAdapter",
            "$r1 = r0.<com.google.gson.internal.bind.DefaultDateTypeAdapter: java.util.List dateFormats>",
            "$r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0)",
            "r3 = (java.text.DateFormat) $r2",
            "$z0 = r3 instanceof java.text.SimpleDateFormat",
            "if $z0 == 0 goto $r4 = new java.lang.StringBuilder",
            "$r11 = new java.lang.StringBuilder",
            "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()",
            "$r14 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"DefaultDateTypeAdapter(\")",
            "$r12 = (java.text.SimpleDateFormat) r3",
            "$r13 = virtualinvoke $r12.<java.text.SimpleDateFormat: java.lang.String toPattern()>()",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r17"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.JsonTreeWriter__get__1016882660\\968.smt2",
        "z3": {
            "memory": 32428032,
            "run_time": 0.10360550880432129,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3043:\r\n  ;;   var3043!val!1 var3043!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3043!val!1 () var3043)\r\n  (declare-fun var3043!val!0 () var3043)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3043)) (or (= x var3043!val!1) (= x var3043!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3931:\r\n  ;;   var3931!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3931!val!0 () var3931)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3931)) (= x var3931!val!0))\r\n  ;; -----------\r\n  (define-fun var2155 () String\r\n    (append/-1031950772\r\n  (str.++ var1861!1 \"Expected one JSON element but was \")\r\n  (cast-from-var3931-to-var2433 (stack/-996497260 var3860))))\r\n  (define-fun var3697!1 () String\r\n    \"Expected one JSON element but was \")\r\n  (define-fun var1306 () var1134\r\n    var1134-init)\r\n  (define-fun var3697 () String\r\n    (str.++ var1861!1 \"Expected one JSON element but was \"))\r\n  (define-fun var2527 () String\r\n    (append/-1031950772\r\n  (str.++ var1861!1 \"Expected one JSON element but was \")\r\n  (cast-from-var3931-to-var2433 (stack/-996497260 var3860))))\r\n  (define-fun null-var3043 () var3043\r\n    var3043!val!1)\r\n  (define-fun var1861 () String\r\n    String-init)\r\n  (define-fun var3860 () var3043\r\n    var3043!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2973 () var3931\r\n    (stack/-996497260 var3860))\r\n  (define-fun var3411 () Bool\r\n    (var3931_isEmpty/-153543822 (stack/-996497260 var3860)))\r\n  (define-fun var2459 () var3931\r\n    (stack/-996497260 var3860))\r\n  (define-fun var1861!1 () String\r\n    \"\")\r\n  (define-fun var1861!2 () String\r\n    \"Expected one JSON element but was \")\r\n  (define-fun var1306!1 () var1134\r\n    var1134!val!0)\r\n  (define-fun var1134-init () var1134\r\n    var1134!val!0)\r\n  (define-fun var2527!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun stack/-996497260 ((x!0 var3043)) var3931\r\n    var3931!val!0)\r\n  (define-fun var3931_isEmpty/-153543822 ((x!0 var3931)) Bool\r\n    false)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2433)) String\r\n    \"\")\r\n  (define-fun cast-from-var3931-to-var2433 ((x!0 var3931)) var2433\r\n    var2433!val!0)\r\n  (define-fun <init>/-1092629202 ((x!0 var1134) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 53 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10166272,
            "run_time": 0.031084537506103516,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3043 is 2\r\n; rep: (as @var3043_0 var3043)\r\n; rep: (as @var3043_1 var3043)\r\n; cardinality of var3931 is 1\r\n; rep: (as @var3931_0 var3931)\r\n; cardinality of var1134 is 1\r\n; rep: (as @var1134_0 var1134)\r\n; cardinality of var2433 is 1\r\n; rep: (as @var2433_0 var2433)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun stack/-996497260 ((_arg_1 var3043)) var3931 (as @var3931_0 var3931))\r\n(define-fun var3931_isEmpty/-153543822 ((_arg_1 var3931)) Bool false)\r\n(define-fun var1134-init () var1134 (as @var1134_0 var1134))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_962 String) (BOUND_VARIABLE_963 var2433)) String \"\")\r\n(define-fun cast-from-var3931-to-var2433 ((BOUND_VARIABLE_966 var3931)) var2433 (as @var2433_0 var2433))\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_969 var1134) (BOUND_VARIABLE_970 String)) void (as @void_0 void))\r\n(define-fun null-var3043 () var3043 (as @var3043_0 var3043))\r\n(define-fun var3860 () var3043 (as @var3043_1 var3043))\r\n(define-fun var1861!1 () String \"\")\r\n(define-fun var1861!2 () String \"Expected one JSON element but was \")\r\n(define-fun var3697!1 () String \"Expected one JSON element but was \")\r\n(define-fun var1306!1 () var1134 (as @var1134_0 var1134))\r\n(define-fun var2527!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37842944,
            "run_time": 0.13746333122253418,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3043:\n  ;;   var3043!val!1 var3043!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3043!val!1 () var3043)\n  (declare-fun var3043!val!0 () var3043)\n  ;; cardinality constraint:\n  (forall ((x var3043)) (or (= x var3043!val!1) (= x var3043!val!0)))\n  ;; -----------\n  ;; universe for var3931:\n  ;;   var3931!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3931!val!0 () var3931)\n  ;; cardinality constraint:\n  (forall ((x var3931)) (= x var3931!val!0))\n  ;; -----------\n  (define-fun var3697 () String\n    (str.++ var1861!1 \"Expected one JSON element but was \"))\n  (define-fun var2527 () String\n    (append/-1031950772\n  (str.++ var1861!1 \"Expected one JSON element but was \")\n  (cast-from-var3931-to-var2433 (stack/-996497260 var3860))))\n  (define-fun var2459 () var3931\n    (stack/-996497260 var3860))\n  (define-fun var1861!2 () String\n    \"Expected one JSON element but was \")\n  (define-fun var1861 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var3043 () var3043\n    var3043!val!1)\n  (define-fun var1306 () var1134\n    var1134-init)\n  (define-fun var3860 () var3043\n    var3043!val!0)\n  (define-fun var3697!1 () String\n    \"Expected one JSON element but was \")\n  (define-fun var2973 () var3931\n    (stack/-996497260 var3860))\n  (define-fun var2155 () String\n    (append/-1031950772\n  (str.++ var1861!1 \"Expected one JSON element but was \")\n  (cast-from-var3931-to-var2433 (stack/-996497260 var3860))))\n  (define-fun var3411 () Bool\n    (var3931_isEmpty/-153543822 (stack/-996497260 var3860)))\n  (define-fun var1861!1 () String\n    \"\")\n  (define-fun var1306!1 () var1134\n    var1134!val!0)\n  (define-fun var1134-init () var1134\n    var1134!val!0)\n  (define-fun var2527!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun stack/-996497260 ((x!0 var3043)) var3931\n    var3931!val!0)\n  (define-fun var3931_isEmpty/-153543822 ((x!0 var3931)) Bool\n    false)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2433)) String\n    \"\")\n  (define-fun cast-from-var3931-to-var2433 ((x!0 var3931)) var2433\n    var2433!val!0)\n  (define-fun <init>/-1092629202 ((x!0 var1134) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 53 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 192688128,
            "run_time": 2.0122063159942627,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3697!1 () String \"Expected one JSON element but was \")\r\n  (define-fun var1861!2 () String \"Expected one JSON element but was \")\r\n  (define-fun var1861!1 () String \"\")\r\n  (define-fun var3860 () var3043 var3043!72)\r\n  (define-fun null-var3043 () var3043 var3043!70)\r\n  (define-fun var3931!88 () var3931 (stack/-996497260 var3043!72))\r\n  (define-fun abbrev_112 ((x!0 Int)) String (ite (= x!0 0) \"Expected one JSON element but was \" \"\"))\r\n  (define-fun var3931_isEmpty/-153543822 ((x!0 var3931)) Bool (ite (= x!0 var3931!88) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.JsonTreeWriter",
            "$r1 = r0.<com.google.gson.internal.bind.JsonTreeWriter: java.util.List stack>",
            "$z0 = interfaceinvoke $r1.<java.util.List: boolean isEmpty()>()",
            "if $z0 != 0 goto $r2 = r0.<com.google.gson.internal.bind.JsonTreeWriter: com.google.gson.JsonElement product>",
            "$r3 = new java.lang.IllegalStateException",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected one JSON element but was \")",
            "$r5 = r0.<com.google.gson.internal.bind.JsonTreeWriter: java.util.List stack>",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8)",
            "throw $r3"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.TypeAdapters$19__read__-780613560\\990.smt2",
        "z3": {
            "memory": 32321536,
            "run_time": 0.10166144371032715,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var571:\r\n  ;;   var571!val!0 var571!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var571!val!0 () var571)\r\n  (declare-fun var571!val!1 () var571)\r\n  ;; cardinality constraint:\r\n  (forall ((x var571)) (or (= x var571!val!0) (= x var571!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3109:\r\n  ;;   var3109!val!0 var3109!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3109!val!0 () var3109)\r\n  (declare-fun var3109!val!1 () var3109)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3109)) (or (= x var3109!val!0) (= x var3109!val!1)))\r\n  ;; -----------\r\n  ;; universe for var956:\r\n  ;;   var956!val!0 var956!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var956!val!0 () var956)\r\n  (declare-fun var956!val!1 () var956)\r\n  ;; cardinality constraint:\r\n  (forall ((x var956)) (or (= x var956!val!0) (= x var956!val!1)))\r\n  ;; -----------\r\n  (define-fun var910 () var571\r\n    var571!val!0)\r\n  (define-fun var956-NULL () var956\r\n    var956!val!1)\r\n  (define-fun var2424 () String\r\n    String-init)\r\n  (define-fun var316 () var956\r\n    var956-NULL)\r\n  (define-fun var1159 () String\r\n    (nextString/1391460550 var910))\r\n  (define-fun null-var3109 () var3109\r\n    var3109!val!1)\r\n  (define-fun var3371 () var956\r\n    (peek/-699404472 var910))\r\n  (define-fun var3780 () var3109\r\n    var3109!val!0)\r\n  (define-fun null-var571 () var571\r\n    var571!val!1)\r\n  (define-fun var2424!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun peek/-699404472 ((x!0 var571)) var956\r\n    var956!val!0)\r\n  (define-fun nextString/1391460550 ((x!0 var571)) String\r\n    \"\")\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10166272,
            "run_time": 0.030442237854003906,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3109 is 2\r\n; rep: (as @var3109_0 var3109)\r\n; rep: (as @var3109_1 var3109)\r\n; cardinality of var571 is 2\r\n; rep: (as @var571_0 var571)\r\n; rep: (as @var571_1 var571)\r\n; cardinality of var956 is 2\r\n; rep: (as @var956_0 var956)\r\n; rep: (as @var956_1 var956)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-699404472 ((_arg_1 var571)) var956 (as @var956_1 var956))\r\n(define-fun String-init () String \"\")\r\n(define-fun nextString/1391460550 ((BOUND_VARIABLE_470 var571)) String \"\")\r\n(define-fun null-var3109 () var3109 (as @var3109_0 var3109))\r\n(define-fun null-var571 () var571 (as @var571_0 var571))\r\n(define-fun var956-NULL () var956 (as @var956_0 var956))\r\n(define-fun var3780 () var3109 (as @var3109_1 var3109))\r\n(define-fun var910 () var571 (as @var571_1 var571))\r\n(define-fun var2424!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34623488,
            "run_time": 0.1405777931213379,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var571:\n  ;;   var571!val!0 var571!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var571!val!0 () var571)\n  (declare-fun var571!val!1 () var571)\n  ;; cardinality constraint:\n  (forall ((x var571)) (or (= x var571!val!0) (= x var571!val!1)))\n  ;; -----------\n  ;; universe for var3109:\n  ;;   var3109!val!0 var3109!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3109!val!0 () var3109)\n  (declare-fun var3109!val!1 () var3109)\n  ;; cardinality constraint:\n  (forall ((x var3109)) (or (= x var3109!val!0) (= x var3109!val!1)))\n  ;; -----------\n  ;; universe for var956:\n  ;;   var956!val!0 var956!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var956!val!0 () var956)\n  (declare-fun var956!val!1 () var956)\n  ;; cardinality constraint:\n  (forall ((x var956)) (or (= x var956!val!0) (= x var956!val!1)))\n  ;; -----------\n  (define-fun var910 () var571\n    var571!val!0)\n  (define-fun var956-NULL () var956\n    var956!val!1)\n  (define-fun var3371 () var956\n    (peek/-699404472 var910))\n  (define-fun null-var3109 () var3109\n    var3109!val!1)\n  (define-fun var316 () var956\n    var956-NULL)\n  (define-fun var1159 () String\n    (nextString/1391460550 var910))\n  (define-fun var2424 () String\n    String-init)\n  (define-fun var3780 () var3109\n    var3109!val!0)\n  (define-fun null-var571 () var571\n    var571!val!1)\n  (define-fun var2424!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun peek/-699404472 ((x!0 var571)) var956\n    var956!val!0)\n  (define-fun nextString/1391460550 ((x!0 var571)) String\n    \"\")\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163532800,
            "run_time": 1.4694817066192627,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2424!1 () String \"\\u{0}\")\r\n  (define-fun var910 () var571 var571!10)\r\n  (define-fun var3780 () var3109 var3109!8)\r\n  (define-fun var956-NULL () var956 var956!6)\r\n  (define-fun null-var571 () var571 var571!4)\r\n  (define-fun null-var3109 () var3109 var3109!2)\r\n  (define-fun var956!26 () var956 (peek/-699404472 var571!10))\r\n  (define-fun nextString/1391460550 ((x!0 var571)) String (ite (= x!0 var571!10) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r5 := @this: com.google.gson.internal.bind.TypeAdapters$19",
            "r0 := @parameter0: com.google.gson.stream.JsonReader",
            "$r2 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>()",
            "$r1 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL>",
            "if $r2 != $r1 goto $r3 = new java.lang.StringBuilder",
            "$r3 = new java.lang.StringBuilder",
            "$r4 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String nextString()>()",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>(java.lang.String)>($r4)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.TypeAdapters$20__read__-1608865303\\1032.smt2",
        "z3": {
            "memory": 31907840,
            "run_time": 0.12017512321472168,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var605:\r\n  ;;   var605!val!1 var605!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var605!val!1 () var605)\r\n  (declare-fun var605!val!0 () var605)\r\n  ;; cardinality constraint:\r\n  (forall ((x var605)) (or (= x var605!val!1) (= x var605!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2470:\r\n  ;;   var2470!val!0 var2470!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2470!val!0 () var2470)\r\n  (declare-fun var2470!val!1 () var2470)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2470)) (or (= x var2470!val!0) (= x var2470!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3945:\r\n  ;;   var3945!val!1 var3945!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3945!val!1 () var3945)\r\n  (declare-fun var3945!val!0 () var3945)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3945)) (or (= x var3945!val!1) (= x var3945!val!0)))\r\n  ;; -----------\r\n  (define-fun var2477 () var2470\r\n    (peek/-699404472 var1213))\r\n  (define-fun var1213 () var3945\r\n    var3945!val!0)\r\n  (define-fun null-var3945 () var3945\r\n    var3945!val!1)\r\n  (define-fun var991 () String\r\n    String-init)\r\n  (define-fun var3670 () var2470\r\n    var2470-NULL)\r\n  (define-fun var1532 () var605\r\n    var605!val!0)\r\n  (define-fun var2470-NULL () var2470\r\n    var2470!val!1)\r\n  (define-fun null-var605 () var605\r\n    var605!val!1)\r\n  (define-fun var2905 () String\r\n    (nextString/1391460550 var1213))\r\n  (define-fun var991!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2905!1 () String\r\n    \"\")\r\n  (define-fun peek/-699404472 ((x!0 var3945)) var2470\r\n    var2470!val!0)\r\n  (define-fun nextString/1391460550 ((x!0 var3945)) String\r\n    \"\")\r\n  (define-fun <init>/2110755883 ((x!0 String) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10158080,
            "run_time": 0.030910491943359375,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var605 is 2\r\n; rep: (as @var605_0 var605)\r\n; rep: (as @var605_1 var605)\r\n; cardinality of var3945 is 2\r\n; rep: (as @var3945_0 var3945)\r\n; rep: (as @var3945_1 var3945)\r\n; cardinality of var2470 is 2\r\n; rep: (as @var2470_0 var2470)\r\n; rep: (as @var2470_1 var2470)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-699404472 ((_arg_1 var3945)) var2470 (as @var2470_1 var2470))\r\n(define-fun String-init () String \"\")\r\n(define-fun nextString/1391460550 ((BOUND_VARIABLE_458 var3945)) String \"\")\r\n(define-fun <init>/2110755883 ((BOUND_VARIABLE_461 String) (BOUND_VARIABLE_462 String)) void (as @void_0 void))\r\n(define-fun null-var605 () var605 (as @var605_0 var605))\r\n(define-fun null-var3945 () var3945 (as @var3945_0 var3945))\r\n(define-fun var2470-NULL () var2470 (as @var2470_0 var2470))\r\n(define-fun var1532 () var605 (as @var605_1 var605))\r\n(define-fun var1213 () var3945 (as @var3945_1 var3945))\r\n(define-fun var991!1 () String \"\")\r\n(define-fun var2905!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35254272,
            "run_time": 0.13775849342346191,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var605:\n  ;;   var605!val!1 var605!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var605!val!1 () var605)\n  (declare-fun var605!val!0 () var605)\n  ;; cardinality constraint:\n  (forall ((x var605)) (or (= x var605!val!1) (= x var605!val!0)))\n  ;; -----------\n  ;; universe for var2470:\n  ;;   var2470!val!0 var2470!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2470!val!0 () var2470)\n  (declare-fun var2470!val!1 () var2470)\n  ;; cardinality constraint:\n  (forall ((x var2470)) (or (= x var2470!val!0) (= x var2470!val!1)))\n  ;; -----------\n  ;; universe for var3945:\n  ;;   var3945!val!1 var3945!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3945!val!1 () var3945)\n  (declare-fun var3945!val!0 () var3945)\n  ;; cardinality constraint:\n  (forall ((x var3945)) (or (= x var3945!val!1) (= x var3945!val!0)))\n  ;; -----------\n  (define-fun var1213 () var3945\n    var3945!val!0)\n  (define-fun null-var3945 () var3945\n    var3945!val!1)\n  (define-fun var2477 () var2470\n    (peek/-699404472 var1213))\n  (define-fun var991 () String\n    String-init)\n  (define-fun var1532 () var605\n    var605!val!0)\n  (define-fun var2470-NULL () var2470\n    var2470!val!1)\n  (define-fun var3670 () var2470\n    var2470-NULL)\n  (define-fun null-var605 () var605\n    var605!val!1)\n  (define-fun var2905 () String\n    (nextString/1391460550 var1213))\n  (define-fun var991!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2905!1 () String\n    \"\")\n  (define-fun peek/-699404472 ((x!0 var3945)) var2470\n    var2470!val!0)\n  (define-fun nextString/1391460550 ((x!0 var3945)) String\n    \"\")\n  (define-fun <init>/2110755883 ((x!0 String) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163819520,
            "run_time": 1.4692158699035645,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1213 () var3945 var3945!10)\r\n  (define-fun var1532 () var605 var605!8)\r\n  (define-fun var2470-NULL () var2470 var2470!6)\r\n  (define-fun null-var3945 () var3945 var3945!4)\r\n  (define-fun null-var605 () var605 var605!2)\r\n  (define-fun var2470!24 () var2470 (peek/-699404472 var3945!10))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuffer: void <init>(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: void <init>(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r5 := @this: com.google.gson.internal.bind.TypeAdapters$20",
            "r0 := @parameter0: com.google.gson.stream.JsonReader",
            "$r2 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>()",
            "$r1 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL>",
            "if $r2 != $r1 goto $r3 = new java.lang.StringBuffer",
            "$r3 = new java.lang.StringBuffer",
            "$r4 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String nextString()>()",
            "specialinvoke $r3.<java.lang.StringBuffer: void <init>(java.lang.String)>($r4)",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter__finalize__1242099278\\559.smt2",
        "z3": {
            "memory": 32100352,
            "run_time": 0.07113838195800781,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3434:\r\n  ;;   var3434!val!1 var3434!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3434!val!1 () var3434)\r\n  (declare-fun var3434!val!0 () var3434)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3434)) (or (= x var3434!val!1) (= x var3434!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2896:\r\n  ;;   var2896!val!0 var2896!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2896!val!0 () var2896)\r\n  (declare-fun var2896!val!1 () var2896)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2896)) (or (= x var2896!val!0) (= x var2896!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1458:\r\n  ;;   var1458!val!0 var1458!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1458!val!0 () var1458)\r\n  (declare-fun var1458!val!1 () var1458)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1458)) (or (= x var1458!val!0) (= x var1458!val!1)))\r\n  ;; -----------\r\n  (define-fun null-__Array__Int__var2896__ () (Array Int var2896)\r\n    ((as const (Array Int var2896)) var2896!val!0))\r\n  (define-fun var578 () String\r\n    String-init)\r\n  (define-fun var282 () String\r\n    (var906_toString/-575966009 var3814))\r\n  (define-fun var823 () var1794\r\n    (constructor/-339183035 var826))\r\n  (define-fun var1162 () String\r\n    (var1770_constructorToString/1631520055 (constructor/-339183035 var826)))\r\n  (define-fun var602 () String\r\n    (str.++ var578!1\r\n        \"Failed to invoke constructor '\"\r\n        (var1770_constructorToString/1631520055 (constructor/-339183035 var826))\r\n        \"' with args \"\r\n        (var906_toString/-575966009 var3814)))\r\n  (define-fun var465 () String\r\n    (str.++ var578!1 \"Failed to invoke constructor '\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3814 () (Array Int var2896)\r\n    ((as const (Array Int var2896)) var2896!val!1))\r\n  (define-fun var377 () var1458\r\n    var1458!val!0)\r\n  (define-fun var3792 () String\r\n    (str.++ var578!1\r\n        \"Failed to invoke constructor '\"\r\n        (var1770_constructorToString/1631520055 (constructor/-339183035 var826))\r\n        \"' with args \"\r\n        (var906_toString/-575966009 var3814)))\r\n  (define-fun var2595 () var1794\r\n    (constructor/-339183035 var826))\r\n  (define-fun var2167 () var3021\r\n    (getCause/20745027 var377))\r\n  (define-fun null-var3434 () var3434\r\n    var3434!val!1)\r\n  (define-fun var3887 () var2768\r\n    var2768-init)\r\n  (define-fun var1457 () String\r\n    (str.++ var578!1\r\n        \"Failed to invoke constructor '\"\r\n        (var1770_constructorToString/1631520055 (constructor/-339183035 var826))))\r\n  (define-fun var567 () String\r\n    (str.++ var578!1\r\n        \"Failed to invoke constructor '\"\r\n        (var1770_constructorToString/1631520055 (constructor/-339183035 var826))\r\n        \"' with args \"))\r\n  (define-fun null-var1458 () var1458\r\n    var1458!val!1)\r\n  (define-fun var826 () var3434\r\n    var3434!val!0)\r\n  (define-fun var567!1 () String\r\n    \"Failed to invoke constructor '' with args \")\r\n  (define-fun var1457!1 () String\r\n    \"Failed to invoke constructor '' with args \")\r\n  (define-fun var578!1 () String\r\n    \"\")\r\n  (define-fun var465!1 () String\r\n    \"Failed to invoke constructor '\")\r\n  (define-fun var578!2 () String\r\n    \"Failed to invoke constructor '\")\r\n  (define-fun var2167!1 () var3021\r\n    var3021!val!0)\r\n  (define-fun var2768-init () var2768\r\n    var2768!val!0)\r\n  (define-fun var3792!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3887!1 () var2768\r\n    var2768!val!0)\r\n  (define-fun constructor/-339183035 ((x!0 var3434)) var1794\r\n    var1794!val!0)\r\n  (define-fun var1770_constructorToString/1631520055 ((x!0 var1794)) String\r\n    \"\")\r\n  (define-fun var906_toString/-575966009 ((x!0 (Array Int var2896))) String\r\n    \"\")\r\n  (define-fun getCause/20745027 ((x!0 var1458)) var3021\r\n    var3021!val!0)\r\n  (define-fun <init>/1642269841 ((x!0 var2768) (x!1 String) (x!2 var3021)) void\r\n    void!val!0)\r\n)\r\n(error \"line 74 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10166272,
            "run_time": 0.029871463775634766,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3434 is 2\r\n; rep: (as @var3434_0 var3434)\r\n; rep: (as @var3434_1 var3434)\r\n; cardinality of var2896 is 2\r\n; rep: (as @var2896_0 var2896)\r\n; rep: (as @var2896_1 var2896)\r\n; cardinality of var1794 is 1\r\n; rep: (as @var1794_0 var1794)\r\n; cardinality of var1458 is 2\r\n; rep: (as @var1458_0 var1458)\r\n; rep: (as @var1458_1 var1458)\r\n; cardinality of var2768 is 1\r\n; rep: (as @var2768_0 var2768)\r\n; cardinality of var1770 is 1\r\n; rep: (as @var1770_0 var1770)\r\n; cardinality of var906 is 1\r\n; rep: (as @var906_0 var906)\r\n; cardinality of var3021 is 1\r\n; rep: (as @var3021_0 var3021)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun constructor/-339183035 ((BOUND_VARIABLE_646 var3434)) var1794 (as @var1794_0 var1794))\r\n(define-fun var2768-init () var2768 (as @var2768_0 var2768))\r\n(define-fun String-init () String \"\")\r\n(define-fun var1770_constructorToString/1631520055 ((BOUND_VARIABLE_649 var1794)) String \"\")\r\n(define-fun var906_toString/-575966009 ((BOUND_VARIABLE_652 (Array Int var2896))) String \"\")\r\n(define-fun getCause/20745027 ((BOUND_VARIABLE_655 var1458)) var3021 (as @var3021_0 var3021))\r\n(define-fun <init>/1642269841 ((BOUND_VARIABLE_658 var2768) (BOUND_VARIABLE_659 String) (BOUND_VARIABLE_660 var3021)) void (as @void_0 void))\r\n(define-fun null-var3434 () var3434 (as @var3434_0 var3434))\r\n(define-fun null-__Array__Int__var2896__ () (Array Int var2896) (store ((as const (Array Int var2896)) (as @var2896_1 var2896)) 0 (as @var2896_0 var2896)))\r\n(define-fun null-var1458 () var1458 (as @var1458_0 var1458))\r\n(define-fun var826 () var3434 (as @var3434_1 var3434))\r\n(define-fun var3814 () (Array Int var2896) (store ((as const (Array Int var2896)) (as @var2896_0 var2896)) 0 (as @var2896_1 var2896)))\r\n(define-fun var377 () var1458 (as @var1458_1 var1458))\r\n(define-fun var578!1 () String \"\")\r\n(define-fun var578!2 () String \"Failed to invoke constructor '\")\r\n(define-fun var465!1 () String \"Failed to invoke constructor '\")\r\n(define-fun var1457!1 () String \"Failed to invoke constructor '' with args \")\r\n(define-fun var567!1 () String \"Failed to invoke constructor '' with args \")\r\n(define-fun var3887!1 () var2768 (as @var2768_0 var2768))\r\n(define-fun var3792!1 () String \"\")\r\n(define-fun var2167!1 () var3021 (as @var3021_0 var3021))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35627008,
            "run_time": 0.10717630386352539,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3434:\n  ;;   var3434!val!1 var3434!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3434!val!1 () var3434)\n  (declare-fun var3434!val!0 () var3434)\n  ;; cardinality constraint:\n  (forall ((x var3434)) (or (= x var3434!val!1) (= x var3434!val!0)))\n  ;; -----------\n  ;; universe for var2896:\n  ;;   var2896!val!0 var2896!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2896!val!0 () var2896)\n  (declare-fun var2896!val!1 () var2896)\n  ;; cardinality constraint:\n  (forall ((x var2896)) (or (= x var2896!val!0) (= x var2896!val!1)))\n  ;; -----------\n  ;; universe for var1458:\n  ;;   var1458!val!0 var1458!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1458!val!0 () var1458)\n  (declare-fun var1458!val!1 () var1458)\n  ;; cardinality constraint:\n  (forall ((x var1458)) (or (= x var1458!val!0) (= x var1458!val!1)))\n  ;; -----------\n  (define-fun var1162 () String\n    (var1770_constructorToString/1631520055 (constructor/-339183035 var826)))\n  (define-fun var578 () String\n    String-init)\n  (define-fun var602 () String\n    (str.++ var578!1\n        \"Failed to invoke constructor '\"\n        (var1770_constructorToString/1631520055 (constructor/-339183035 var826))\n        \"' with args \"\n        (var906_toString/-575966009 var3814)))\n  (define-fun var465 () String\n    (str.++ var578!1 \"Failed to invoke constructor '\"))\n  (define-fun null-__Array__Int__var2896__ () (Array Int var2896)\n    ((as const (Array Int var2896)) var2896!val!1))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3792 () String\n    (str.++ var578!1\n        \"Failed to invoke constructor '\"\n        (var1770_constructorToString/1631520055 (constructor/-339183035 var826))\n        \"' with args \"\n        (var906_toString/-575966009 var3814)))\n  (define-fun var3887 () var2768\n    var2768-init)\n  (define-fun var2595 () var1794\n    (constructor/-339183035 var826))\n  (define-fun var377 () var1458\n    var1458!val!0)\n  (define-fun var3814 () (Array Int var2896)\n    ((as const (Array Int var2896)) var2896!val!0))\n  (define-fun null-var3434 () var3434\n    var3434!val!1)\n  (define-fun var1457 () String\n    (str.++ var578!1\n        \"Failed to invoke constructor '\"\n        (var1770_constructorToString/1631520055 (constructor/-339183035 var826))))\n  (define-fun var567 () String\n    (str.++ var578!1\n        \"Failed to invoke constructor '\"\n        (var1770_constructorToString/1631520055 (constructor/-339183035 var826))\n        \"' with args \"))\n  (define-fun var823 () var1794\n    (constructor/-339183035 var826))\n  (define-fun var2167 () var3021\n    (getCause/20745027 var377))\n  (define-fun var282 () String\n    (var906_toString/-575966009 var3814))\n  (define-fun null-var1458 () var1458\n    var1458!val!1)\n  (define-fun var826 () var3434\n    var3434!val!0)\n  (define-fun var567!1 () String\n    \"Failed to invoke constructor '' with args \")\n  (define-fun var1457!1 () String\n    \"Failed to invoke constructor '' with args \")\n  (define-fun var578!1 () String\n    \"\")\n  (define-fun var465!1 () String\n    \"Failed to invoke constructor '\")\n  (define-fun var578!2 () String\n    \"Failed to invoke constructor '\")\n  (define-fun var2167!1 () var3021\n    var3021!val!0)\n  (define-fun var2768-init () var2768\n    var2768!val!0)\n  (define-fun var3792!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3887!1 () var2768\n    var2768!val!0)\n  (define-fun constructor/-339183035 ((x!0 var3434)) var1794\n    var1794!val!0)\n  (define-fun var1770_constructorToString/1631520055 ((x!0 var1794)) String\n    \"\")\n  (define-fun var906_toString/-575966009 ((x!0 (Array Int var2896))) String\n    \"\")\n  (define-fun getCause/20745027 ((x!0 var1458)) var3021\n    var3021!val!0)\n  (define-fun <init>/1642269841 ((x!0 var2768) (x!1 String) (x!2 var3021)) void\n    void!val!0)\n)\n(error \"line 74 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182931456,
            "run_time": 1.9170091152191162,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3434/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter__finalize__1242099278\\559.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var567!1 =\r\n     concat(all_39_5, all_39_4)\r\n   var1457!1 =\r\n     concat(all_36_3, \"\\u{0}27 with args \")\r\n   var465!1 =\r\n     concat(\"Failed to invoke constructor \\u{0}27\", all_33_2)\r\n   all_39_5 =\r\n     concat(all_39_6, \"\\u{0}27 with args \")\r\n   all_36_3 =\r\n     concat(\"Failed to invoke constructor \\u{0}27\", all_33_2)\r\n   all_39_6 =\r\n     concat(\"Failed to invoke constructor \\u{0}27\", all_33_2)\r\n\r\n1470ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.util.Arrays: java.lang.String toString(java.lang.Object[])>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter",
            "r1 := @parameter0: java.lang.Object[]",
            "$r2 = r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter: java.lang.reflect.Constructor constructor>",
            "$r4 := @caughtexception",
            "$r5 = new java.lang.RuntimeException",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to invoke constructor \\'\")",
            "$r7 = r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter: java.lang.reflect.Constructor constructor>",
            "$r8 = staticinvoke <com.google.gson.internal.reflect.ReflectionHelper: java.lang.String constructorToString(java.lang.reflect.Constructor)>($r7)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)",
            "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' with args \")",
            "$r11 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(r1)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)",
            "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r14 = virtualinvoke $r4.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>()",
            "specialinvoke $r5.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r15, $r14)",
            "throw $r5"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.GsonBuilder__addTypeAdaptersForDate__-725157487\\1528.smt2",
        "z3": {
            "memory": 31993856,
            "run_time": 0.22596311569213867,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 72 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10084352,
            "run_time": 0.030521869659423828,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33370112,
            "run_time": 0.15494942665100098,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 72 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180658176,
            "run_time": 1.8205010890960693,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>",
            "<java.lang.String: boolean isEmpty()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 1,
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r9 := @this: com.google.gson.GsonBuilder",
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "r2 := @parameter3: java.util.List",
            "z0 = <com.google.gson.internal.sql.SqlTypesSupport: boolean SUPPORTS_SQL_TYPES>",
            "r10 = null",
            "r11 = null",
            "if r0 == null goto (branch)",
            "$r5 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()",
            "$z1 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>()",
            "if $z1 != 0 goto (branch)",
            "$r6 = <com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE>",
            "r12 = virtualinvoke $r6.<com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.TypeAdapterFactory createAdapterFactory(java.lang.String)>(r0)",
            "if z0 == 0 goto interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)",
            "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)",
            "if z0 == 0 goto return",
            "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r10)",
            "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r11)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.TypeAdapters$28__readTerminal__-858849963\\649.smt2",
        "z3": {
            "memory": 32493568,
            "run_time": 0.09599757194519043,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var497:\r\n  ;;   var497!val!0 var497!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var497!val!0 () var497)\r\n  (declare-fun var497!val!1 () var497)\r\n  ;; cardinality constraint:\r\n  (forall ((x var497)) (or (= x var497!val!0) (= x var497!val!1)))\r\n  ;; -----------\r\n  ;; universe for var55:\r\n  ;;   var55!val!1 var55!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var55!val!1 () var55)\r\n  (declare-fun var55!val!0 () var55)\r\n  ;; cardinality constraint:\r\n  (forall ((x var55)) (or (= x var55!val!1) (= x var55!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2336:\r\n  ;;   var2336!val!0 var2336!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2336!val!0 () var2336)\r\n  (declare-fun var2336!val!1 () var2336)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2336)) (or (= x var2336!val!0) (= x var2336!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var497 () var497\r\n    var497!val!1)\r\n  (define-fun var1933 () String\r\n    String-init)\r\n  (define-fun var1431 () var1619\r\n    var1619-init)\r\n  (define-fun var2087 () String\r\n    (str.++ var1933!1 \"Unexpected token: \"))\r\n  (define-fun var3153-$SwitchMap$com$google$gson$stream$JsonToken () (Array Int Int)\r\n    ((as const (Array Int Int)) 4))\r\n  (define-fun var3250 () (Array Int Int)\r\n    var3153-$SwitchMap$com$google$gson$stream$JsonToken)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3519 () String\r\n    (append/-1031950772\r\n  (str.++ var1933!1 \"Unexpected token: \")\r\n  (cast-from-var497-to-var2404 var356)))\r\n  (define-fun var709 () var2336\r\n    var2336!val!0)\r\n  (define-fun var394 () String\r\n    (append/-1031950772\r\n  (str.++ var1933!1 \"Unexpected token: \")\r\n  (cast-from-var497-to-var2404 var356)))\r\n  (define-fun var1058 () var55\r\n    var55!val!0)\r\n  (define-fun var356 () var497\r\n    var497!val!0)\r\n  (define-fun var942 () Int\r\n    (ordinal/-291641772 (cast-from-var497-to-var3839 var356)))\r\n  (define-fun var2101 () Int\r\n    (select var3153-$SwitchMap$com$google$gson$stream$JsonToken\r\n        (ordinal/-291641772 (cast-from-var497-to-var3839 var356))))\r\n  (define-fun null-var55 () var55\r\n    var55!val!1)\r\n  (define-fun null-var2336 () var2336\r\n    var2336!val!1)\r\n  (define-fun var2087!1 () String\r\n    \"Unexpected token: \")\r\n  (define-fun var1933!2 () String\r\n    \"Unexpected token: \")\r\n  (define-fun var1933!1 () String\r\n    \"\")\r\n  (define-fun var1619-init () var1619\r\n    var1619!val!0)\r\n  (define-fun var1431!1 () var1619\r\n    var1619!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3519!1 () String\r\n    \"\")\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2404)) String\r\n    \"\")\r\n  (define-fun cast-from-var497-to-var3839 ((x!0 var497)) var3839\r\n    var3839!val!0)\r\n  (define-fun cast-from-var497-to-var2404 ((x!0 var497)) var2404\r\n    var2404!val!0)\r\n  (define-fun ordinal/-291641772 ((x!0 var3839)) Int\r\n    0)\r\n  (define-fun <init>/-1092629202 ((x!0 var1619) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 64 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10096640,
            "run_time": 0.030328989028930664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var55 is 2\r\n; rep: (as @var55_0 var55)\r\n; rep: (as @var55_1 var55)\r\n; cardinality of var2336 is 2\r\n; rep: (as @var2336_0 var2336)\r\n; rep: (as @var2336_1 var2336)\r\n; cardinality of var497 is 2\r\n; rep: (as @var497_0 var497)\r\n; rep: (as @var497_1 var497)\r\n; cardinality of var3153 is 1\r\n; rep: (as @var3153_0 var3153)\r\n; cardinality of var3839 is 1\r\n; rep: (as @var3839_0 var3839)\r\n; cardinality of var1619 is 1\r\n; rep: (as @var1619_0 var1619)\r\n; cardinality of var2404 is 1\r\n; rep: (as @var2404_0 var2404)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun ordinal/-291641772 ((_arg_1 var3839)) Int 0)\r\n(define-fun cast-from-var497-to-var3839 ((_arg_1 var497)) var3839 (as @var3839_0 var3839))\r\n(define-fun var1619-init () var1619 (as @var1619_0 var1619))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_999 String) (BOUND_VARIABLE_1000 var2404)) String \"\")\r\n(define-fun cast-from-var497-to-var2404 ((BOUND_VARIABLE_1003 var497)) var2404 (as @var2404_0 var2404))\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_1006 var1619) (BOUND_VARIABLE_1007 String)) void (as @void_0 void))\r\n(define-fun null-var55 () var55 (as @var55_0 var55))\r\n(define-fun null-var2336 () var2336 (as @var2336_0 var2336))\r\n(define-fun null-var497 () var497 (as @var497_0 var497))\r\n(define-fun var3153-$SwitchMap$com$google$gson$stream$JsonToken () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1058 () var55 (as @var55_1 var55))\r\n(define-fun var709 () var2336 (as @var2336_1 var2336))\r\n(define-fun var356 () var497 (as @var497_1 var497))\r\n(define-fun var1933!1 () String \"\")\r\n(define-fun var1933!2 () String \"Unexpected token: \")\r\n(define-fun var2087!1 () String \"Unexpected token: \")\r\n(define-fun var1431!1 () var1619 (as @var1619_0 var1619))\r\n(define-fun var3519!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36798464,
            "run_time": 0.15306568145751953,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var497:\n  ;;   var497!val!0 var497!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var497!val!0 () var497)\n  (declare-fun var497!val!1 () var497)\n  ;; cardinality constraint:\n  (forall ((x var497)) (or (= x var497!val!0) (= x var497!val!1)))\n  ;; -----------\n  ;; universe for var55:\n  ;;   var55!val!1 var55!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var55!val!1 () var55)\n  (declare-fun var55!val!0 () var55)\n  ;; cardinality constraint:\n  (forall ((x var55)) (or (= x var55!val!1) (= x var55!val!0)))\n  ;; -----------\n  ;; universe for var2336:\n  ;;   var2336!val!0 var2336!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2336!val!0 () var2336)\n  (declare-fun var2336!val!1 () var2336)\n  ;; cardinality constraint:\n  (forall ((x var2336)) (or (= x var2336!val!0) (= x var2336!val!1)))\n  ;; -----------\n  (define-fun null-var497 () var497\n    var497!val!1)\n  (define-fun var2087!1 () String\n    \"Unexpected token: \")\n  (define-fun var3153-$SwitchMap$com$google$gson$stream$JsonToken () (Array Int Int)\n    ((as const (Array Int Int)) 4))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var394 () String\n    (append/-1031950772\n  (str.++ var1933!1 \"Unexpected token: \")\n  (cast-from-var497-to-var2404 var356)))\n  (define-fun var3519 () String\n    (append/-1031950772\n  (str.++ var1933!1 \"Unexpected token: \")\n  (cast-from-var497-to-var2404 var356)))\n  (define-fun var942 () Int\n    (ordinal/-291641772 (cast-from-var497-to-var3839 var356)))\n  (define-fun var709 () var2336\n    var2336!val!0)\n  (define-fun var2101 () Int\n    (select var3153-$SwitchMap$com$google$gson$stream$JsonToken\n        (ordinal/-291641772 (cast-from-var497-to-var3839 var356))))\n  (define-fun var1933!1 () String\n    \"\")\n  (define-fun var3250 () (Array Int Int)\n    var3153-$SwitchMap$com$google$gson$stream$JsonToken)\n  (define-fun var1058 () var55\n    var55!val!0)\n  (define-fun var356 () var497\n    var497!val!0)\n  (define-fun var1431 () var1619\n    var1619-init)\n  (define-fun null-var55 () var55\n    var55!val!1)\n  (define-fun null-var2336 () var2336\n    var2336!val!1)\n  (define-fun var1933 () String\n    String-init)\n  (define-fun var2087 () String\n    (str.++ var1933!1 \"Unexpected token: \"))\n  (define-fun var1933!2 () String\n    \"Unexpected token: \")\n  (define-fun var1619-init () var1619\n    var1619!val!0)\n  (define-fun var1431!1 () var1619\n    var1619!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3519!1 () String\n    \"\")\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2404)) String\n    \"\")\n  (define-fun cast-from-var497-to-var3839 ((x!0 var497)) var3839\n    var3839!val!0)\n  (define-fun cast-from-var497-to-var2404 ((x!0 var497)) var2404\n    var2404!val!0)\n  (define-fun ordinal/-291641772 ((x!0 var3839)) Int\n    0)\n  (define-fun <init>/-1092629202 ((x!0 var1619) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 64 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 191713280,
            "run_time": 2.0768344402313232,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2087!1 () String \"Unexpected token: \")\r\n  (define-fun var1933!2 () String \"Unexpected token: \")\r\n  (define-fun var1933!1 () String \"\")\r\n  (define-fun var356 () var497 var497!18)\r\n  (define-fun var709 () var2336 var2336!16)\r\n  (define-fun var1058 () var55 var55!14)\r\n  (define-fun var3153-$SwitchMap$com$google$gson$stream$JsonToken () (Array Int Int) (store ((as const (Array Int Int)) 23) 21 22))\r\n  (define-fun null-var497 () var497 var497!12)\r\n  (define-fun null-var2336 () var2336 var2336!10)\r\n  (define-fun null-var55 () var55 var55!8)\r\n  (define-fun var3839!40 () var3839 (cast-from-var497-to-var3839 var497!18))\r\n  (define-fun ordinal/-291641772 ((x!0 var3839)) Int (ite (= x!0 var3839!40) 21 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r16 := @this: com.google.gson.internal.bind.TypeAdapters$28",
            "r2 := @parameter0: com.google.gson.stream.JsonReader",
            "r0 := @parameter1: com.google.gson.stream.JsonToken",
            "$r1 = <com.google.gson.internal.bind.TypeAdapters$35: int[] $SwitchMap$com$google$gson$stream$JsonToken>",
            "$i0 = virtualinvoke r0.<com.google.gson.stream.JsonToken: int ordinal()>()",
            "$i1 = $r1[$i0]",
            "tableswitch($i1) {     case 1: goto r8 = virtualinvoke r2.<com.google.gson.stream.JsonReader: java.lang.String nextString()>();     case 2: goto $r6 = new com.google.gson.JsonPrimitive;     case 3: goto $r4 = new com.google.gson.JsonPrimitive;     case 4: goto $r11 = new java.lang.IllegalStateException;     case 5: goto $r11 = new java.lang.IllegalStateException;     case 6: goto virtualinvoke r2.<com.google.gson.stream.JsonReader: void nextNull()>();     default: goto $r11 = new java.lang.IllegalStateException; }",
            "$r11 = new java.lang.IllegalStateException",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected token: \")",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r11.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r15)",
            "throw $r11"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__format__-1868536622\\873.smt2",
        "z3": {
            "memory": 32038912,
            "run_time": 0.09573817253112793,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 174 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10166272,
            "run_time": 0.030271291732788086,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33107968,
            "run_time": 0.13959980010986328,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 174 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 185364480,
            "run_time": 1.677128553390503,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 12,
        "assertion_count": 44,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 9,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @parameter0: java.util.Date",
            "z0 := @parameter1: boolean",
            "r1 := @parameter2: java.util.TimeZone",
            "$r19 = new java.util.GregorianCalendar",
            "$r2 = <java.util.Locale: java.util.Locale US>",
            "specialinvoke $r19.<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>(r1, $r2)",
            "virtualinvoke $r19.<java.util.Calendar: void setTime(java.util.Date)>(r3)",
            "$r4 = \"yyyy-MM-ddThh:mm:ss\"",
            "i28 = virtualinvoke $r4.<java.lang.String: int length()>()",
            "if z0 == 0 goto $i29 = 0",
            "$r18 = \".sss\"",
            "$i29 = virtualinvoke $r18.<java.lang.String: int length()>()",
            "goto [?= $i27 = i28 + $i29]",
            "$i27 = i28 + $i29",
            "$i0 = virtualinvoke r1.<java.util.TimeZone: int getRawOffset()>()",
            "if $i0 != 0 goto $r5 = \"+hh:mm\"",
            "$r5 = \"+hh:mm\"",
            "$i30 = virtualinvoke $r5.<java.lang.String: int length()>()",
            "$i26 = $i27 + $i30",
            "$r20 = new java.lang.StringBuilder",
            "specialinvoke $r20.<java.lang.StringBuilder: void <init>(int)>($i26)",
            "$i2 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(1)",
            "$r7 = \"yyyy\"",
            "$i1 = virtualinvoke $r7.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i2, $i1)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45)",
            "$i3 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(2)",
            "$i5 = $i3 + 1",
            "$r8 = \"MM\"",
            "$i4 = virtualinvoke $r8.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i5, $i4)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45)",
            "$i7 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(5)",
            "$r9 = \"dd\"",
            "$i6 = virtualinvoke $r9.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i7, $i6)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(84)",
            "$i9 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(11)",
            "$r10 = \"hh\"",
            "$i8 = virtualinvoke $r10.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i9, $i8)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)",
            "$i11 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(12)",
            "$r11 = \"mm\"",
            "$i10 = virtualinvoke $r11.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i11, $i10)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)",
            "$i13 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(13)",
            "$r12 = \"ss\"",
            "$i12 = virtualinvoke $r12.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i13, $i12)",
            "if z0 == 0 goto $l14 = virtualinvoke $r19.<java.util.Calendar: long getTimeInMillis()>()",
            "$l14 = virtualinvoke $r19.<java.util.Calendar: long getTimeInMillis()>()",
            "$i25 = virtualinvoke r1.<java.util.TimeZone: int getOffset(long)>($l14)",
            "if $i25 == 0 goto virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90)",
            "$r13 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r13"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.TypeAdapters$19__write__-2010452139\\1042.smt2",
        "z3": {
            "memory": 32043008,
            "run_time": 0.0903012752532959,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1819:\r\n  ;;   var1819!val!1 var1819!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1819!val!1 () var1819)\r\n  (declare-fun var1819!val!0 () var1819)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1819)) (or (= x var1819!val!1) (= x var1819!val!0)))\r\n  ;; -----------\r\n  ;; universe for var963:\r\n  ;;   var963!val!1 var963!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var963!val!1 () var963)\r\n  (declare-fun var963!val!0 () var963)\r\n  ;; cardinality constraint:\r\n  (forall ((x var963)) (or (= x var963!val!1) (= x var963!val!0)))\r\n  ;; -----------\r\n  (define-fun var2543 () String\r\n    \"!0!\")\r\n  (define-fun var3531 () String\r\n    var2543)\r\n  (define-fun var2757 () var1819\r\n    var1819!val!0)\r\n  (define-fun var3273 () var963\r\n    var963!val!0)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun null-var963 () var963\r\n    var963!val!1)\r\n  (define-fun null-var1819 () var1819\r\n    var1819!val!1)\r\n  (define-fun var3531!1 () String\r\n    \"\")\r\n  (define-fun var2757!1 () var1819\r\n    var1819!val!1)\r\n  (define-fun value/-601914565 ((x!0 var1819) (x!1 String)) var1819\r\n    var1819!val!1)\r\n)\r\n(error \"line 33 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10166272,
            "run_time": 0.09274744987487793,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var963 is 2\r\n; rep: (as @var963_0 var963)\r\n; rep: (as @var963_1 var963)\r\n; cardinality of var1819 is 2\r\n; rep: (as @var1819_0 var1819)\r\n; rep: (as @var1819_1 var1819)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun value/-601914565 ((BOUND_VARIABLE_518 var1819) (BOUND_VARIABLE_519 String)) var1819 (as @var1819_0 var1819))\r\n(define-fun null-var963 () var963 (as @var963_0 var963))\r\n(define-fun null-var1819 () var1819 (as @var1819_0 var1819))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3273 () var963 (as @var963_1 var963))\r\n(define-fun var2757 () var1819 (as @var1819_1 var1819))\r\n(define-fun var2543 () String \"\")\r\n(define-fun var2757!1 () var1819 (as @var1819_0 var1819))\r\n(define-fun var3531!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37117952,
            "run_time": 0.1532144546508789,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1819:\n  ;;   var1819!val!1 var1819!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1819!val!1 () var1819)\n  (declare-fun var1819!val!0 () var1819)\n  ;; cardinality constraint:\n  (forall ((x var1819)) (or (= x var1819!val!1) (= x var1819!val!0)))\n  ;; -----------\n  ;; universe for var963:\n  ;;   var963!val!1 var963!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var963!val!1 () var963)\n  (declare-fun var963!val!0 () var963)\n  ;; cardinality constraint:\n  (forall ((x var963)) (or (= x var963!val!1) (= x var963!val!0)))\n  ;; -----------\n  (define-fun var2543 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var963 () var963\n    var963!val!1)\n  (define-fun var2757 () var1819\n    var1819!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3531 () String\n    var2543)\n  (define-fun null-var1819 () var1819\n    var1819!val!1)\n  (define-fun var3273 () var963\n    var963!val!0)\n  (define-fun var3531!1 () String\n    \"\")\n  (define-fun var2757!1 () var1819\n    var1819!val!1)\n  (define-fun value/-601914565 ((x!0 var1819) (x!1 String)) var1819\n    var1819!val!1)\n)\n(error \"line 33 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140673024,
            "run_time": 1.5424168109893799,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2543 () String \"\\u{0}\")\r\n  (define-fun var2757 () var1819 var1819!8)\r\n  (define-fun var3273 () var963 var963!6)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var1819 () var1819 var1819!4)\r\n  (define-fun null-var963 () var963 var963!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @this: com.google.gson.internal.bind.TypeAdapters$19",
            "r0 := @parameter0: com.google.gson.stream.JsonWriter",
            "r1 := @parameter1: java.lang.StringBuilder",
            "if r1 != null goto $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)>($r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__indexOfNonDigit__874745429\\1194.smt2",
        "z3": {
            "memory": 32485376,
            "run_time": 0.08289575576782227,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var2448 () Int\r\n    1)\r\n  (define-fun var3093 () Int\r\n    (str.len var509))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var509 () String\r\n    \"A\")\r\n  (define-fun var1260 () Int\r\n    (str.len var509))\r\n  (define-fun var3410 () Int\r\n    var2448)\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10166272,
            "run_time": 0.03102278709411621,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3324 is 1\r\n; rep: (as @var3324_0 var3324)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var509 () String \"\")\r\n(define-fun var2448 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37597184,
            "run_time": 0.13838982582092285,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-Int () Int\n    3)\n  (define-fun var2448 () Int\n    2)\n  (define-fun var3093 () Int\n    (str.len var509))\n  (define-fun var1260 () Int\n    (str.len var509))\n  (define-fun var3410 () Int\n    var2448)\n  (define-fun var509 () String\n    \"\\u{0}\\u{0}\")\n)\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 157642752,
            "run_time": 1.8082170486450195,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2448 () Int 0)\r\n  (define-fun var509 () String \"\")\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 2
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i4 = i0",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i4 >= $i1 goto $i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "return $i2"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.TypeAdapters$20__write__-1665637702\\1080.smt2",
        "z3": {
            "memory": 32477184,
            "run_time": 0.0748283863067627,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3416:\r\n  ;;   var3416!val!0 var3416!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3416!val!0 () var3416)\r\n  (declare-fun var3416!val!1 () var3416)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3416)) (or (= x var3416!val!0) (= x var3416!val!1)))\r\n  ;; -----------\r\n  ;; universe for var427:\r\n  ;;   var427!val!1 var427!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var427!val!1 () var427)\r\n  (declare-fun var427!val!0 () var427)\r\n  ;; cardinality constraint:\r\n  (forall ((x var427)) (or (= x var427!val!1) (= x var427!val!0)))\r\n  ;; -----------\r\n  (define-fun var3841 () var3416\r\n    var3416!val!0)\r\n  (define-fun var3318 () var427\r\n    var427!val!0)\r\n  (define-fun null-var427 () var427\r\n    var427!val!1)\r\n  (define-fun null-var3416 () var3416\r\n    var3416!val!1)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var2789 () String\r\n    var3605)\r\n  (define-fun var3605 () String\r\n    \"!0!\")\r\n  (define-fun var2789!1 () String\r\n    \"\")\r\n  (define-fun var3318!1 () var427\r\n    var427!val!1)\r\n  (define-fun value/-601914565 ((x!0 var427) (x!1 String)) var427\r\n    var427!val!1)\r\n)\r\n(error \"line 33 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10158080,
            "run_time": 0.030434846878051758,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3416 is 2\r\n; rep: (as @var3416_0 var3416)\r\n; rep: (as @var3416_1 var3416)\r\n; cardinality of var427 is 2\r\n; rep: (as @var427_0 var427)\r\n; rep: (as @var427_1 var427)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun value/-601914565 ((BOUND_VARIABLE_518 var427) (BOUND_VARIABLE_519 String)) var427 (as @var427_0 var427))\r\n(define-fun null-var3416 () var3416 (as @var3416_0 var3416))\r\n(define-fun null-var427 () var427 (as @var427_0 var427))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3841 () var3416 (as @var3416_1 var3416))\r\n(define-fun var3318 () var427 (as @var427_1 var427))\r\n(define-fun var3605 () String \"\")\r\n(define-fun var3318!1 () var427 (as @var427_0 var427))\r\n(define-fun var2789!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37580800,
            "run_time": 0.1405043601989746,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3416:\n  ;;   var3416!val!0 var3416!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3416!val!0 () var3416)\n  (declare-fun var3416!val!1 () var3416)\n  ;; cardinality constraint:\n  (forall ((x var3416)) (or (= x var3416!val!0) (= x var3416!val!1)))\n  ;; -----------\n  ;; universe for var427:\n  ;;   var427!val!1 var427!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var427!val!1 () var427)\n  (declare-fun var427!val!0 () var427)\n  ;; cardinality constraint:\n  (forall ((x var427)) (or (= x var427!val!1) (= x var427!val!0)))\n  ;; -----------\n  (define-fun var3841 () var3416\n    var3416!val!0)\n  (define-fun null-var3416 () var3416\n    var3416!val!1)\n  (define-fun var2789 () String\n    var3605)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-var427 () var427\n    var427!val!1)\n  (define-fun var3318 () var427\n    var427!val!0)\n  (define-fun var3605 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2789!1 () String\n    \"\")\n  (define-fun var3318!1 () var427\n    var427!val!1)\n  (define-fun value/-601914565 ((x!0 var427) (x!1 String)) var427\n    var427!val!1)\n)\n(error \"line 33 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140988416,
            "run_time": 1.5005760192871094,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3605 () String \"\\u{0}\")\r\n  (define-fun var3318 () var427 var427!8)\r\n  (define-fun var3841 () var3416 var3416!6)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var427 () var427 var427!4)\r\n  (define-fun null-var3416 () var3416 var3416!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @this: com.google.gson.internal.bind.TypeAdapters$20",
            "r0 := @parameter0: com.google.gson.stream.JsonWriter",
            "r1 := @parameter1: java.lang.StringBuffer",
            "if r1 != null goto $r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()",
            "$r3 = virtualinvoke r1.<java.lang.StringBuffer: java.lang.String toString()>()",
            "virtualinvoke r0.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)>($r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.TypeAdapters$5__read__737026552\\825.smt2",
        "z3": {
            "memory": 32321536,
            "run_time": 0.09897804260253906,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var272:\r\n  ;;   var272!val!0 var272!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var272!val!0 () var272)\r\n  (declare-fun var272!val!1 () var272)\r\n  ;; cardinality constraint:\r\n  (forall ((x var272)) (or (= x var272!val!0) (= x var272!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1537:\r\n  ;;   var1537!val!0 var1537!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1537!val!0 () var1537)\r\n  (declare-fun var1537!val!1 () var1537)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1537)) (or (= x var1537!val!0) (= x var1537!val!1)))\r\n  ;; -----------\r\n  ;; universe for var360:\r\n  ;;   var360!val!0 var360!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var360!val!0 () var360)\r\n  (declare-fun var360!val!1 () var360)\r\n  ;; cardinality constraint:\r\n  (forall ((x var360)) (or (= x var360!val!0) (= x var360!val!1)))\r\n  ;; -----------\r\n  (define-fun var676 () String\r\n    (str.++ var2432!1\r\n        \"Lossy conversion from \"\r\n        (str.from_int (nextInt/-1874079238 var1345))\r\n        \" to byte; at path \"))\r\n  (define-fun null-var1537 () var1537\r\n    var1537!val!1)\r\n  (define-fun var2347 () var360\r\n    var360-NULL)\r\n  (define-fun var360-NULL () var360\r\n    var360!val!1)\r\n  (define-fun var176!1 () String\r\n    \"Lossy conversion from \")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3446 () var360\r\n    (peek/-699404472 var1345))\r\n  (define-fun var831 () String\r\n    (str.++ var2432!1\r\n        \"Lossy conversion from \"\r\n        (str.from_int (nextInt/-1874079238 var1345))\r\n        \" to byte; at path \"\r\n        (getPreviousPath/455305022 var1345)))\r\n  (define-fun var2356 () String\r\n    (str.++ var2432!1\r\n        \"Lossy conversion from \"\r\n        (str.from_int (nextInt/-1874079238 var1345))))\r\n  (define-fun var970 () var272\r\n    var272!val!0)\r\n  (define-fun var1631 () Int\r\n    (nextInt/-1874079238 var1345))\r\n  (define-fun var846 () var2400\r\n    var2400-init)\r\n  (define-fun null-var272 () var272\r\n    var272!val!1)\r\n  (define-fun var2432 () String\r\n    String-init)\r\n  (define-fun var176 () String\r\n    (str.++ var2432!1 \"Lossy conversion from \"))\r\n  (define-fun var3074 () String\r\n    (str.++ var2432!1\r\n        \"Lossy conversion from \"\r\n        (str.from_int (nextInt/-1874079238 var1345))\r\n        \" to byte; at path \"\r\n        (getPreviousPath/455305022 var1345)))\r\n  (define-fun var1345 () var1537\r\n    var1537!val!0)\r\n  (define-fun var1482 () String\r\n    (getPreviousPath/455305022 var1345))\r\n  (define-fun var2432!1 () String\r\n    \"\")\r\n  (define-fun var2356!1 () String\r\n    \"Lossy conversion from 256 to byte; at path \")\r\n  (define-fun var2432!2 () String\r\n    \"Lossy conversion from \")\r\n  (define-fun var676!1 () String\r\n    \"Lossy conversion from 256 to byte; at path \")\r\n  (define-fun var846!1 () var2400\r\n    var2400!val!0)\r\n  (define-fun var2400-init () var2400\r\n    var2400!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3074!1 () String\r\n    \"\")\r\n  (define-fun peek/-699404472 ((x!0 var1537)) var360\r\n    var360!val!0)\r\n  (define-fun nextInt/-1874079238 ((x!0 var1537)) Int\r\n    256)\r\n  (define-fun getPreviousPath/455305022 ((x!0 var1537)) String\r\n    \"\")\r\n  (define-fun <init>/303326391 ((x!0 var2400) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 74 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10141696,
            "run_time": 0.030115604400634766,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var272 is 2\r\n; rep: (as @var272_0 var272)\r\n; rep: (as @var272_1 var272)\r\n; cardinality of var1537 is 2\r\n; rep: (as @var1537_0 var1537)\r\n; rep: (as @var1537_1 var1537)\r\n; cardinality of var360 is 2\r\n; rep: (as @var360_0 var360)\r\n; rep: (as @var360_1 var360)\r\n; cardinality of var2400 is 1\r\n; rep: (as @var2400_0 var2400)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-699404472 ((_arg_1 var1537)) var360 (as @var360_1 var360))\r\n(define-fun nextInt/-1874079238 ((_arg_1 var1537)) Int 256)\r\n(define-fun var2400-init () var2400 (as @var2400_0 var2400))\r\n(define-fun String-init () String \"\")\r\n(define-fun getPreviousPath/455305022 ((BOUND_VARIABLE_1029 var1537)) String \"\")\r\n(define-fun <init>/303326391 ((BOUND_VARIABLE_1032 var2400) (BOUND_VARIABLE_1033 String)) void (as @void_0 void))\r\n(define-fun null-var272 () var272 (as @var272_0 var272))\r\n(define-fun null-var1537 () var1537 (as @var1537_0 var1537))\r\n(define-fun var360-NULL () var360 (as @var360_0 var360))\r\n(define-fun var970 () var272 (as @var272_1 var272))\r\n(define-fun var1345 () var1537 (as @var1537_1 var1537))\r\n(define-fun var2432!1 () String \"\")\r\n(define-fun var2432!2 () String \"Lossy conversion from \")\r\n(define-fun var176!1 () String \"Lossy conversion from \")\r\n(define-fun var2356!1 () String \"Lossy conversion from 256 to byte; at path \")\r\n(define-fun var676!1 () String \"Lossy conversion from 256 to byte; at path \")\r\n(define-fun var846!1 () var2400 (as @var2400_0 var2400))\r\n(define-fun var3074!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37023744,
            "run_time": 0.13954639434814453,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var272:\n  ;;   var272!val!0 var272!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var272!val!0 () var272)\n  (declare-fun var272!val!1 () var272)\n  ;; cardinality constraint:\n  (forall ((x var272)) (or (= x var272!val!0) (= x var272!val!1)))\n  ;; -----------\n  ;; universe for var1537:\n  ;;   var1537!val!0 var1537!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1537!val!0 () var1537)\n  (declare-fun var1537!val!1 () var1537)\n  ;; cardinality constraint:\n  (forall ((x var1537)) (or (= x var1537!val!0) (= x var1537!val!1)))\n  ;; -----------\n  ;; universe for var360:\n  ;;   var360!val!0 var360!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var360!val!0 () var360)\n  (declare-fun var360!val!1 () var360)\n  ;; cardinality constraint:\n  (forall ((x var360)) (or (= x var360!val!0) (= x var360!val!1)))\n  ;; -----------\n  (define-fun null-var1537 () var1537\n    var1537!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var360-NULL () var360\n    var360!val!1)\n  (define-fun var1631 () Int\n    (nextInt/-1874079238 var1345))\n  (define-fun var846 () var2400\n    var2400-init)\n  (define-fun var2356 () String\n    (str.++ var2432!1\n        \"Lossy conversion from \"\n        (str.from_int (nextInt/-1874079238 var1345))))\n  (define-fun var831 () String\n    (str.++ var2432!1\n        \"Lossy conversion from \"\n        (str.from_int (nextInt/-1874079238 var1345))\n        \" to byte; at path \"\n        (getPreviousPath/455305022 var1345)))\n  (define-fun var176!1 () String\n    \"Lossy conversion from \")\n  (define-fun var970 () var272\n    var272!val!0)\n  (define-fun var676!1 () String\n    \"Lossy conversion from 256 to byte; at path \")\n  (define-fun var2432 () String\n    String-init)\n  (define-fun var176 () String\n    (str.++ var2432!1 \"Lossy conversion from \"))\n  (define-fun null-var272 () var272\n    var272!val!1)\n  (define-fun var3074 () String\n    (str.++ var2432!1\n        \"Lossy conversion from \"\n        (str.from_int (nextInt/-1874079238 var1345))\n        \" to byte; at path \"\n        (getPreviousPath/455305022 var1345)))\n  (define-fun var2347 () var360\n    var360-NULL)\n  (define-fun var1482 () String\n    (getPreviousPath/455305022 var1345))\n  (define-fun var1345 () var1537\n    var1537!val!0)\n  (define-fun var3446 () var360\n    (peek/-699404472 var1345))\n  (define-fun var676 () String\n    (str.++ var2432!1\n        \"Lossy conversion from \"\n        (str.from_int (nextInt/-1874079238 var1345))\n        \" to byte; at path \"))\n  (define-fun var2432!1 () String\n    \"\")\n  (define-fun var2356!1 () String\n    \"Lossy conversion from 256 to byte; at path \")\n  (define-fun var2432!2 () String\n    \"Lossy conversion from \")\n  (define-fun var846!1 () var2400\n    var2400!val!0)\n  (define-fun var2400-init () var2400\n    var2400!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3074!1 () String\n    \"\")\n  (define-fun peek/-699404472 ((x!0 var1537)) var360\n    var360!val!0)\n  (define-fun nextInt/-1874079238 ((x!0 var1537)) Int\n    256)\n  (define-fun getPreviousPath/455305022 ((x!0 var1537)) String\n    \"\")\n  (define-fun <init>/303326391 ((x!0 var2400) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 74 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 206131200,
            "run_time": 2.4754154682159424,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var360/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.TypeAdapters$5__read__737026552\\825.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var676!1 =\r\n     concat(\"Lossy conversion from 256 to byte; at path \", all_35_4)\r\n\r\n1993ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r14 := @this: com.google.gson.internal.bind.TypeAdapters$5",
            "r0 := @parameter0: com.google.gson.stream.JsonReader",
            "$r2 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>()",
            "$r1 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL>",
            "if $r2 != $r1 goto i0 = virtualinvoke r0.<com.google.gson.stream.JsonReader: int nextInt()>()",
            "i0 = virtualinvoke r0.<com.google.gson.stream.JsonReader: int nextInt()>()",
            "goto [?= (branch)]",
            "if i0 > 255 goto $r17 = new com.google.gson.JsonSyntaxException",
            "$r17 = new com.google.gson.JsonSyntaxException",
            "$r16 = new java.lang.StringBuilder",
            "specialinvoke $r16.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Lossy conversion from \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to byte; at path \")",
            "$r7 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String getPreviousPath()>()",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r17.<com.google.gson.JsonSyntaxException: void <init>(java.lang.String)>($r10)",
            "throw $r17"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.GsonBuilder__addTypeAdaptersForDate__-725157487\\1530.smt2",
        "z3": {
            "memory": 33099776,
            "run_time": 0.24659466743469238,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3309:\r\n  ;;   var3309!val!1 var3309!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3309!val!1 () var3309)\r\n  (declare-fun var3309!val!0 () var3309)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3309)) (or (= x var3309!val!1) (= x var3309!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2835:\r\n  ;;   var2835!val!0 var2835!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2835!val!0 () var2835)\r\n  (declare-fun var2835!val!1 () var2835)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2835)) (or (= x var2835!val!0) (= x var2835!val!1)))\r\n  ;; -----------\r\n  (define-fun var3504 () var3309\r\n    var3309!val!0)\r\n  (define-fun null-var3309 () var3309\r\n    var3309!val!1)\r\n  (define-fun var1829 () String\r\n    \"\\u{1bcf2}\")\r\n  (define-fun var3298 () var2835\r\n    var2835!val!0)\r\n  (define-fun var2551 () var2996\r\n    var1207-TIMESTAMP_DATE_TYPE)\r\n  (define-fun var3715 () var859\r\n    null-var859)\r\n  (define-fun var2081!1 () var859\r\n    (createAdapterFactory/1468715664 var1207-TIMESTAMP_DATE_TYPE var1829))\r\n  (define-fun var3478 () Bool\r\n    var1207-SUPPORTS_SQL_TYPES)\r\n  (define-fun var722 () Bool\r\n    (= (str.len (trim-right (trim-left var1829))) 0))\r\n  (define-fun var3715!1 () var859\r\n    (createAdapterFactory/1468715664 var1207-DATE_DATE_TYPE var1829))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3913 () var2996\r\n    var2996-DATE)\r\n  (define-fun var2703 () var859\r\n    (createAdapterFactory/1468715664 var2996-DATE var1829))\r\n  (define-fun var2594 () Int\r\n    6)\r\n  (define-fun null-Int () Int\r\n    5)\r\n  (define-fun null-var2835 () var2835\r\n    var2835!val!1)\r\n  (define-fun var17 () String\r\n    (trim-right (trim-left var1829)))\r\n  (define-fun var2081 () var859\r\n    null-var859)\r\n  (define-fun var3439 () var2996\r\n    var1207-DATE_DATE_TYPE)\r\n  (define-fun var922 () Int\r\n    3)\r\n  (define-fun var1207-SUPPORTS_SQL_TYPES () Bool\r\n    true)\r\n  (define-fun var2081!2 () var859\r\n    var859!val!0)\r\n  (define-fun var3298!3 () var2835\r\n    var2835!val!0)\r\n  (define-fun var1207-DATE_DATE_TYPE () var2996\r\n    var2996!val!0)\r\n  (define-fun var3298!1 () var2835\r\n    var2835!val!0)\r\n  (define-fun var2703!1 () var859\r\n    var859!val!0)\r\n  (define-fun null-var859 () var859\r\n    var859!val!0)\r\n  (define-fun var1207-TIMESTAMP_DATE_TYPE () var2996\r\n    var2996!val!0)\r\n  (define-fun var3298!2 () var2835\r\n    var2835!val!0)\r\n  (define-fun var3715!2 () var859\r\n    var859!val!0)\r\n  (define-fun var2996-DATE () var2996\r\n    var2996!val!0)\r\n  (define-fun var2835_add/328494887 ((x!0 var2835) (x!1 var3611)) Bool\r\n    false)\r\n  (define-fun createAdapterFactory/1468715664 ((x!0 var2996) (x!1 String)) var859\r\n    var859!val!0)\r\n  (define-fun cast-from-var859-to-var3611 ((x!0 var859)) var3611\r\n    var3611!val!0)\r\n)\r\n(error \"line 83 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 32120832,
            "run_time": 4.360942602157593,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(\r\n; cardinality of var3309 is 2\r\n; rep: (as @var3309_0 var3309)\r\n; rep: (as @var3309_1 var3309)\r\n; cardinality of var1042 is 1\r\n; rep: (as @var1042_0 var1042)\r\n; cardinality of var2835 is 2\r\n; rep: (as @var2835_0 var2835)\r\n; rep: (as @var2835_1 var2835)\r\n; cardinality of var1207 is 1\r\n; rep: (as @var1207_0 var1207)\r\n; cardinality of var859 is 1\r\n; rep: (as @var859_0 var859)\r\n; cardinality of var2996 is 1\r\n; rep: (as @var2996_0 var2996)\r\n; cardinality of var3611 is 1\r\n; rep: (as @var3611_0 var3611)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun createAdapterFactory/1468715664 ((BOUND_VARIABLE_21931 var2996) (BOUND_VARIABLE_21932 String)) var859 (as @var859_0 var859))\r\n(define-fun var2835_add/328494887 ((BOUND_VARIABLE_21935 var2835) (BOUND_VARIABLE_21936 var3611)) Bool false)\r\n(define-fun cast-from-var859-to-var3611 ((BOUND_VARIABLE_21939 var859)) var3611 (as @var3611_0 var3611))\r\n(define-fun null-var3309 () var3309 (as @var3309_0 var3309))\r\n(define-fun null-String () String \"\")\r\n(define-fun null-Int () Int 0)\r\n(define-fun null-var2835 () var2835 (as @var2835_0 var2835))\r\n(define-fun var1207-SUPPORTS_SQL_TYPES () Bool true)\r\n(define-fun null-var859 () var859 (as @var859_0 var859))\r\n(define-fun var2996-DATE () var2996 (as @var2996_0 var2996))\r\n(define-fun var1207-TIMESTAMP_DATE_TYPE () var2996 (as @var2996_0 var2996))\r\n(define-fun var1207-DATE_DATE_TYPE () var2996 (as @var2996_0 var2996))\r\n(define-fun var3504 () var3309 (as @var3309_1 var3309))\r\n(define-fun var1829 () String \"!\")\r\n(define-fun var922 () Int 1)\r\n(define-fun var2594 () Int 1)\r\n(define-fun var3298 () var2835 (as @var2835_1 var2835))\r\n(define-fun var3298!1 () var2835 (as @var2835_0 var2835))\r\n(define-fun var2703!1 () var859 (as @var859_0 var859))\r\n(define-fun var3298!2 () var2835 (as @var2835_0 var2835))\r\n(define-fun var2081!2 () var859 (as @var859_0 var859))\r\n(define-fun var3298!3 () var2835 (as @var2835_0 var2835))\r\n(define-fun var3715!2 () var859 (as @var859_0 var859))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34959360,
            "run_time": 0.15255427360534668,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 82 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 83 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 275066880,
            "run_time": 3.0933494567871094,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_223_2, all_223_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.GsonBuilder__addTypeAdaptersForDate__-725157487\\1530.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming that recursive function trim-left is partial\r\nWarning: assuming that recursive function trim-right is partial\r\nAssuming all_70_4 = \"\"\r\nAssuming all_261_4 = \"\"\r\nAssuming all_100_5 = \"\"\r\nAssuming all_57_5 = \"\"\r\nAssuming all_261_5 = \"\"\r\nAssuming all_54_2 = \"\"\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n2605ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>",
            "<java.lang.String: boolean isEmpty()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 1,
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r9 := @this: com.google.gson.GsonBuilder",
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "r2 := @parameter3: java.util.List",
            "z0 = <com.google.gson.internal.sql.SqlTypesSupport: boolean SUPPORTS_SQL_TYPES>",
            "r10 = null",
            "r11 = null",
            "if r0 == null goto (branch)",
            "$r5 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()",
            "$z1 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>()",
            "if $z1 != 0 goto (branch)",
            "$r6 = <com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE>",
            "r12 = virtualinvoke $r6.<com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.TypeAdapterFactory createAdapterFactory(java.lang.String)>(r0)",
            "if z0 == 0 goto interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)",
            "$r7 = <com.google.gson.internal.sql.SqlTypesSupport: com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType TIMESTAMP_DATE_TYPE>",
            "r10 = virtualinvoke $r7.<com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.TypeAdapterFactory createAdapterFactory(java.lang.String)>(r0)",
            "$r8 = <com.google.gson.internal.sql.SqlTypesSupport: com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE_DATE_TYPE>",
            "r11 = virtualinvoke $r8.<com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.TypeAdapterFactory createAdapterFactory(java.lang.String)>(r0)",
            "goto [?= interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)]",
            "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)",
            "if z0 == 0 goto return",
            "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r10)",
            "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r11)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\1055.smt2",
        "z3": {
            "memory": 31989760,
            "run_time": 0.09149670600891113,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 115 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10166272,
            "run_time": 0.030589818954467773,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33206272,
            "run_time": 0.18525362014770508,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 115 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167264256,
            "run_time": 1.5694401264190674,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 12,
        "assertion_count": 35,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.text.ParsePosition",
            "$r32 := @caughtexception",
            "r49 = $r32",
            "if r1 != null goto $r69 = new java.lang.StringBuilder",
            "$r50 = null",
            "goto [?= r51 = $r50]",
            "r51 = $r50",
            "$r43 = virtualinvoke r49.<java.lang.Exception: java.lang.String getMessage()>()",
            "r52 = $r43",
            "if $r43 == null goto $r70 = new java.lang.StringBuilder",
            "$r70 = new java.lang.StringBuilder",
            "specialinvoke $r70.<java.lang.StringBuilder: void <init>()>()",
            "$r40 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$r38 = virtualinvoke r49.<java.lang.Object: java.lang.Class getClass()>()",
            "$r39 = virtualinvoke $r38.<java.lang.Class: java.lang.String getName()>()",
            "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39)",
            "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "r52 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r72 = new java.text.ParseException",
            "$r71 = new java.lang.StringBuilder",
            "specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()",
            "$r55 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to parse date [\")",
            "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51)",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: \")",
            "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52)",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i31 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "specialinvoke $r72.<java.text.ParseException: void <init>(java.lang.String,int)>($r59, $i31)",
            "virtualinvoke $r72.<java.text.ParseException: java.lang.Throwable initCause(java.lang.Throwable)>(r49)",
            "throw $r72"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.TypeAdapters$28__readTerminal__-858849963\\878.smt2",
        "z3": {
            "memory": 32178176,
            "run_time": 0.15745878219604492,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2184:\r\n  ;;   var2184!val!0 var2184!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2184!val!0 () var2184)\r\n  (declare-fun var2184!val!1 () var2184)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2184)) (or (= x var2184!val!0) (= x var2184!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3672:\r\n  ;;   var3672!val!0 var3672!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3672!val!0 () var3672)\r\n  (declare-fun var3672!val!1 () var3672)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3672)) (or (= x var3672!val!0) (= x var3672!val!1)))\r\n  ;; -----------\r\n  ;; universe for var266:\r\n  ;;   var266!val!0 var266!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var266!val!0 () var266)\r\n  (declare-fun var266!val!1 () var266)\r\n  ;; cardinality constraint:\r\n  (forall ((x var266)) (or (= x var266!val!0) (= x var266!val!1)))\r\n  ;; -----------\r\n  (define-fun var3533 () var2184\r\n    var2184!val!0)\r\n  (define-fun null-var266 () var266\r\n    var266!val!1)\r\n  (define-fun var171 () var3672\r\n    var3672!val!0)\r\n  (define-fun var1413 () var266\r\n    var266!val!0)\r\n  (define-fun var344 () (Array Int Int)\r\n    var486-$SwitchMap$com$google$gson$stream$JsonToken)\r\n  (define-fun var486-$SwitchMap$com$google$gson$stream$JsonToken () (Array Int Int)\r\n    ((as const (Array Int Int)) 6))\r\n  (define-fun var2187 () Int\r\n    (select var486-$SwitchMap$com$google$gson$stream$JsonToken\r\n        (ordinal/-291641772 (cast-from-var3672-to-var3540 var171))))\r\n  (define-fun var456 () var2493\r\n    var2493-INSTANCE)\r\n  (define-fun var548 () Int\r\n    (ordinal/-291641772 (cast-from-var3672-to-var3540 var171)))\r\n  (define-fun null-var2184 () var2184\r\n    var2184!val!1)\r\n  (define-fun null-var3672 () var3672\r\n    var3672!val!1)\r\n  (define-fun var3533!1 () var2184\r\n    var2184!val!0)\r\n  (define-fun var2493-INSTANCE () var2493\r\n    var2493!val!0)\r\n  (define-fun nextNull/273520319 ((x!0 var2184)) void\r\n    void!val!0)\r\n  (define-fun ordinal/-291641772 ((x!0 var3540)) Int\r\n    0)\r\n  (define-fun cast-from-var3672-to-var3540 ((x!0 var3672)) var3540\r\n    var3540!val!0)\r\n)\r\n(error \"line 41 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10096640,
            "run_time": 0.06182742118835449,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var266 is 2\r\n; rep: (as @var266_0 var266)\r\n; rep: (as @var266_1 var266)\r\n; cardinality of var2184 is 2\r\n; rep: (as @var2184_0 var2184)\r\n; rep: (as @var2184_1 var2184)\r\n; cardinality of var3672 is 2\r\n; rep: (as @var3672_0 var3672)\r\n; rep: (as @var3672_1 var3672)\r\n; cardinality of var486 is 1\r\n; rep: (as @var486_0 var486)\r\n; cardinality of var3540 is 1\r\n; rep: (as @var3540_0 var3540)\r\n; cardinality of var2493 is 1\r\n; rep: (as @var2493_0 var2493)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun ordinal/-291641772 ((_arg_1 var3540)) Int 0)\r\n(define-fun cast-from-var3672-to-var3540 ((_arg_1 var3672)) var3540 (as @var3540_0 var3540))\r\n(define-fun nextNull/273520319 ((BOUND_VARIABLE_544 var2184)) void (as @void_0 void))\r\n(define-fun null-var266 () var266 (as @var266_0 var266))\r\n(define-fun null-var2184 () var2184 (as @var2184_0 var2184))\r\n(define-fun null-var3672 () var3672 (as @var3672_0 var3672))\r\n(define-fun var486-$SwitchMap$com$google$gson$stream$JsonToken () (Array Int Int) (store ((as const (Array Int Int)) 0) 0 6))\r\n(define-fun var2493-INSTANCE () var2493 (as @var2493_0 var2493))\r\n(define-fun var1413 () var266 (as @var266_1 var266))\r\n(define-fun var3533 () var2184 (as @var2184_1 var2184))\r\n(define-fun var171 () var3672 (as @var3672_1 var3672))\r\n(define-fun var3533!1 () var2184 (as @var2184_0 var2184))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35442688,
            "run_time": 0.33002495765686035,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2184:\n  ;;   var2184!val!0 var2184!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2184!val!0 () var2184)\n  (declare-fun var2184!val!1 () var2184)\n  ;; cardinality constraint:\n  (forall ((x var2184)) (or (= x var2184!val!0) (= x var2184!val!1)))\n  ;; -----------\n  ;; universe for var3672:\n  ;;   var3672!val!0 var3672!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3672!val!0 () var3672)\n  (declare-fun var3672!val!1 () var3672)\n  ;; cardinality constraint:\n  (forall ((x var3672)) (or (= x var3672!val!0) (= x var3672!val!1)))\n  ;; -----------\n  ;; universe for var266:\n  ;;   var266!val!0 var266!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var266!val!0 () var266)\n  (declare-fun var266!val!1 () var266)\n  ;; cardinality constraint:\n  (forall ((x var266)) (or (= x var266!val!0) (= x var266!val!1)))\n  ;; -----------\n  (define-fun var548 () Int\n    (ordinal/-291641772 (cast-from-var3672-to-var3540 var171)))\n  (define-fun var456 () var2493\n    var2493-INSTANCE)\n  (define-fun var3533 () var2184\n    var2184!val!0)\n  (define-fun null-var266 () var266\n    var266!val!1)\n  (define-fun var171 () var3672\n    var3672!val!0)\n  (define-fun var1413 () var266\n    var266!val!0)\n  (define-fun var486-$SwitchMap$com$google$gson$stream$JsonToken () (Array Int Int)\n    ((as const (Array Int Int)) 6))\n  (define-fun var2187 () Int\n    (select var486-$SwitchMap$com$google$gson$stream$JsonToken\n        (ordinal/-291641772 (cast-from-var3672-to-var3540 var171))))\n  (define-fun null-var2184 () var2184\n    var2184!val!1)\n  (define-fun var344 () (Array Int Int)\n    var486-$SwitchMap$com$google$gson$stream$JsonToken)\n  (define-fun null-var3672 () var3672\n    var3672!val!1)\n  (define-fun var3533!1 () var2184\n    var2184!val!0)\n  (define-fun var2493-INSTANCE () var2493\n    var2493!val!0)\n  (define-fun nextNull/273520319 ((x!0 var2184)) void\n    void!val!0)\n  (define-fun ordinal/-291641772 ((x!0 var3540)) Int\n    0)\n  (define-fun cast-from-var3672-to-var3540 ((x!0 var3672)) var3540\n    var3540!val!0)\n)\n(error \"line 41 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168013824,
            "run_time": 1.3397505283355713,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var171 () var3672 var3672!24)\r\n  (define-fun var3533 () var2184 var2184!22)\r\n  (define-fun var1413 () var266 var266!20)\r\n  (define-fun var486-$SwitchMap$com$google$gson$stream$JsonToken () (Array Int Int) (store ((as const (Array Int Int)) 24) 23 6))\r\n  (define-fun null-var3672 () var3672 var3672!18)\r\n  (define-fun null-var2184 () var2184 var2184!16)\r\n  (define-fun null-var266 () var266 var266!14)\r\n  (define-fun var3540!44 () var3540 (cast-from-var3672-to-var3540 var3672!24))\r\n  (define-fun ordinal/-291641772 ((x!0 var3540)) Int (ite (= x!0 var3540!44) 23 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 6,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r16 := @this: com.google.gson.internal.bind.TypeAdapters$28",
            "r2 := @parameter0: com.google.gson.stream.JsonReader",
            "r0 := @parameter1: com.google.gson.stream.JsonToken",
            "$r1 = <com.google.gson.internal.bind.TypeAdapters$35: int[] $SwitchMap$com$google$gson$stream$JsonToken>",
            "$i0 = virtualinvoke r0.<com.google.gson.stream.JsonToken: int ordinal()>()",
            "$i1 = $r1[$i0]",
            "tableswitch($i1) {     case 1: goto r8 = virtualinvoke r2.<com.google.gson.stream.JsonReader: java.lang.String nextString()>();     case 2: goto $r6 = new com.google.gson.JsonPrimitive;     case 3: goto $r4 = new com.google.gson.JsonPrimitive;     case 4: goto $r11 = new java.lang.IllegalStateException;     case 5: goto $r11 = new java.lang.IllegalStateException;     case 6: goto virtualinvoke r2.<com.google.gson.stream.JsonReader: void nextNull()>();     default: goto $r11 = new java.lang.IllegalStateException; }",
            "virtualinvoke r2.<com.google.gson.stream.JsonReader: void nextNull()>()",
            "$r3 = <com.google.gson.JsonNull: com.google.gson.JsonNull INSTANCE>",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.TypeAdapters$1__write__675749774\\779.smt2",
        "z3": {
            "memory": 31920128,
            "run_time": 0.16987943649291992,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2309:\r\n  ;;   var2309!val!1 var2309!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2309!val!1 () var2309)\r\n  (declare-fun var2309!val!0 () var2309)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2309)) (or (= x var2309!val!1) (= x var2309!val!0)))\r\n  ;; -----------\r\n  ;; universe for var270:\r\n  ;;   var270!val!1 var270!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var270!val!1 () var270)\r\n  (declare-fun var270!val!0 () var270)\r\n  ;; cardinality constraint:\r\n  (forall ((x var270)) (or (= x var270!val!1) (= x var270!val!0)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var633 () var270\r\n    var270!val!0)\r\n  (define-fun null-var270 () var270\r\n    var270!val!1)\r\n  (define-fun var3433 () String\r\n    (str.++ var1107!1 \"Attempted to serialize java.lang.Class: \"))\r\n  (define-fun var3465 () String\r\n    (str.++ var1107!1\r\n        \"Attempted to serialize java.lang.Class: \"\r\n        (getName/-1958580599 var2221)\r\n        \". Forgot to register a type adapter?\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var2309 () var2309\r\n    var2309!val!1)\r\n  (define-fun var2890 () String\r\n    (getName/-1958580599 var2221))\r\n  (define-fun var1585 () String\r\n    (str.++ var1107!1\r\n        \"Attempted to serialize java.lang.Class: \"\r\n        (getName/-1958580599 var2221)\r\n        \". Forgot to register a type adapter?\"))\r\n  (define-fun var2221 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var366 () var3354\r\n    var3354-init)\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var1259 () var2309\r\n    var2309!val!0)\r\n  (define-fun var1107 () String\r\n    String-init)\r\n  (define-fun var2425 () String\r\n    (str.++ var1107!1\r\n        \"Attempted to serialize java.lang.Class: \"\r\n        (getName/-1958580599 var2221)))\r\n  (define-fun var1107!1 () String\r\n    \"\")\r\n  (define-fun var2425!1 () String\r\n    \"Attempted to serialize java.lang.Class: . Forgot to register a type adapter?\")\r\n  (define-fun var3433!1 () String\r\n    \"Attempted to serialize java.lang.Class: \")\r\n  (define-fun var1107!2 () String\r\n    \"Attempted to serialize java.lang.Class: \")\r\n  (define-fun var1585!1 () String\r\n    \"\")\r\n  (define-fun var366!1 () var3354\r\n    var3354!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3354-init () var3354\r\n    var3354!val!0)\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun <init>/-630064361 ((x!0 var3354) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 56 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10166272,
            "run_time": 0.030764102935791016,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var270 is 2\r\n; rep: (as @var270_0 var270)\r\n; rep: (as @var270_1 var270)\r\n; cardinality of var2309 is 2\r\n; rep: (as @var2309_0 var2309)\r\n; rep: (as @var2309_1 var2309)\r\n; cardinality of var3354 is 1\r\n; rep: (as @var3354_0 var3354)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var3354-init () var3354 (as @var3354_0 var3354))\r\n(define-fun String-init () String \"\")\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_558 ClassObject)) String \"\")\r\n(define-fun <init>/-630064361 ((BOUND_VARIABLE_561 var3354) (BOUND_VARIABLE_562 String)) void (as @void_0 void))\r\n(define-fun null-var270 () var270 (as @var270_0 var270))\r\n(define-fun null-var2309 () var2309 (as @var2309_0 var2309))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var633 () var270 (as @var270_1 var270))\r\n(define-fun var1259 () var2309 (as @var2309_1 var2309))\r\n(define-fun var2221 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var1107!1 () String \"\")\r\n(define-fun var1107!2 () String \"Attempted to serialize java.lang.Class: \")\r\n(define-fun var3433!1 () String \"Attempted to serialize java.lang.Class: \")\r\n(define-fun var2425!1 () String \"Attempted to serialize java.lang.Class: . Forgot to register a type adapter?\")\r\n(define-fun var366!1 () var3354 (as @var3354_0 var3354))\r\n(define-fun var1585!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35487744,
            "run_time": 0.156541109085083,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2309:\n  ;;   var2309!val!1 var2309!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2309!val!1 () var2309)\n  (declare-fun var2309!val!0 () var2309)\n  ;; cardinality constraint:\n  (forall ((x var2309)) (or (= x var2309!val!1) (= x var2309!val!0)))\n  ;; -----------\n  ;; universe for var270:\n  ;;   var270!val!1 var270!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var270!val!1 () var270)\n  (declare-fun var270!val!0 () var270)\n  ;; cardinality constraint:\n  (forall ((x var270)) (or (= x var270!val!1) (= x var270!val!0)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  (define-fun var3433 () String\n    (str.++ var1107!1 \"Attempted to serialize java.lang.Class: \"))\n  (define-fun var3465 () String\n    (str.++ var1107!1\n        \"Attempted to serialize java.lang.Class: \"\n        (getName/-1958580599 var2221)\n        \". Forgot to register a type adapter?\"))\n  (define-fun var633 () var270\n    var270!val!0)\n  (define-fun null-var270 () var270\n    var270!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2890 () String\n    (getName/-1958580599 var2221))\n  (define-fun var366 () var3354\n    var3354-init)\n  (define-fun null-var2309 () var2309\n    var2309!val!1)\n  (define-fun var1585 () String\n    (str.++ var1107!1\n        \"Attempted to serialize java.lang.Class: \"\n        (getName/-1958580599 var2221)\n        \". Forgot to register a type adapter?\"))\n  (define-fun var2221 () ClassObject\n    ClassObject!val!0)\n  (define-fun var1107 () String\n    String-init)\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var1259 () var2309\n    var2309!val!0)\n  (define-fun var2425 () String\n    (str.++ var1107!1\n        \"Attempted to serialize java.lang.Class: \"\n        (getName/-1958580599 var2221)))\n  (define-fun var1107!1 () String\n    \"\")\n  (define-fun var2425!1 () String\n    \"Attempted to serialize java.lang.Class: . Forgot to register a type adapter?\")\n  (define-fun var3433!1 () String\n    \"Attempted to serialize java.lang.Class: \")\n  (define-fun var1107!2 () String\n    \"Attempted to serialize java.lang.Class: \")\n  (define-fun var1585!1 () String\n    \"\")\n  (define-fun var366!1 () var3354\n    var3354!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3354-init () var3354\n    var3354!val!0)\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n  (define-fun <init>/-630064361 ((x!0 var3354) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 56 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181710848,
            "run_time": 1.509857177734375,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2309/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.TypeAdapters$1__write__675749774\\779.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2425!1 =\r\n     concat(all_26_3, \". Forgot to register a type adapter?\")\r\n   var3433!1 =\r\n     concat(\"Attempted to serialize java.lang.Class: \", all_19_2)\r\n   all_26_3 =\r\n     concat(\"Attempted to serialize java.lang.Class: \", all_19_2)\r\n\r\n1095ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r8 := @this: com.google.gson.internal.bind.TypeAdapters$1",
            "r9 := @parameter0: com.google.gson.stream.JsonWriter",
            "r2 := @parameter1: java.lang.Class",
            "$r0 = new java.lang.UnsupportedOperationException",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Attempted to serialize java.lang.Class: \")",
            "$r3 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\". Forgot to register a type adapter?\")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r7)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__checkOffset__-1502165822\\1113.smt2",
        "z3": {
            "memory": 32477184,
            "run_time": 0.08685111999511719,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1559 () Int\r\n    (str.len var2734))\r\n  (define-fun var277 () Int\r\n    3)\r\n  (define-fun null-Int () Int\r\n    2)\r\n  (define-fun var3610 () Int\r\n    1)\r\n  (define-fun var2734 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var471 () Bool\r\n    (ite (= 1 0) true false))\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10199040,
            "run_time": 0.030340194702148438,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3863 is 1\r\n; rep: (as @var3863_0 var3863)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var2734 () String \"\")\r\n(define-fun var3610 () Int 0)\r\n(define-fun var277 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36671488,
            "run_time": 0.10673069953918457,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var471 () Bool\n    (ite (= 1 0) true false))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var277 () Int\n    4)\n  (define-fun var1559 () Int\n    (str.len var2734))\n  (define-fun var2734 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3610 () Int\n    2)\n  (define-fun null-Int () Int\n    3)\n)\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 161402880,
            "run_time": 1.2819278240203857,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var277 () Int 0)\r\n  (define-fun var3610 () Int 0)\r\n  (define-fun var2734 () String \"\")\r\n  (define-fun null-Int () Int 1)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "c2 := @parameter2: char",
            "$i1 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if i0 >= $i1 goto $z0 = 0",
            "$z0 = 0",
            "return $z0"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__padInt__-157990007\\1168.smt2",
        "z3": {
            "memory": 32059392,
            "run_time": 0.09059619903564453,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2594 () Int\r\n    2)\r\n  (define-fun var2825 () String\r\n    (Int_toString/1350422511 var2594))\r\n  (define-fun var657 () Int\r\n    (str.len (Int_toString/1350422511 var2594)))\r\n  (define-fun var2408 () Int\r\n    (- var80 (str.len (Int_toString/1350422511 var2594))))\r\n  (define-fun var1422 () String\r\n    \"A\")\r\n  (define-fun null-Int () Int\r\n    3)\r\n  (define-fun var80 () Int\r\n    0)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1422!1 () String\r\n    \"A\")\r\n  (define-fun Int_toString/1350422511 ((x!0 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10162176,
            "run_time": 0.030884742736816406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun Int_toString/1350422511 ((_arg_1 Int)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var1422 () String \"\")\r\n(define-fun var2594 () Int 0)\r\n(define-fun var80 () Int 0)\r\n(define-fun var1422!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35237888,
            "run_time": 0.13831782341003418,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 31 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164003840,
            "run_time": 1.5742340087890625,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1422!1 () String \"\")\r\n  (define-fun var80 () Int 0)\r\n  (define-fun var2594 () Int 1)\r\n  (define-fun var1422 () String \"\")\r\n  (define-fun null-Int () Int 2)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun Int_toString/1350422511 ((x!0 Int)) String (ite (= x!0 1) \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.Integer: java.lang.String toString(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.StringBuilder",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "r0 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(i0)",
            "$i2 = virtualinvoke r0.<java.lang.String: int length()>()",
            "i3 = i1 - $i2",
            "if i3 <= 0 goto virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "virtualinvoke r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r0)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.TypeAdapters$25__read__-1704744648\\741.smt2",
        "z3": {
            "memory": 31567872,
            "run_time": 0.08671402931213379,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2887:\r\n  ;;   var2887!val!1 var2887!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2887!val!1 () var2887)\r\n  (declare-fun var2887!val!0 () var2887)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2887)) (or (= x var2887!val!1) (= x var2887!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1390:\r\n  ;;   var1390!val!0 var1390!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1390!val!0 () var1390)\r\n  (declare-fun var1390!val!1 () var1390)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1390)) (or (= x var1390!val!0) (= x var1390!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2148:\r\n  ;;   var2148!val!1 var2148!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2148!val!1 () var2148)\r\n  (declare-fun var2148!val!0 () var2148)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2148)) (or (= x var2148!val!1) (= x var2148!val!0)))\r\n  ;; -----------\r\n  (define-fun var1578 () String\r\n    String-init)\r\n  (define-fun var2448 () var1390\r\n    var1390!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var1390 () var1390\r\n    var1390!val!1)\r\n  (define-fun var2421 () String\r\n    (str.++ var1578!1\r\n        \"Failed parsing '\"\r\n        (nextString/1391460550 var2281)\r\n        \"' as Currency; at path \"))\r\n  (define-fun var2712 () var2887\r\n    var2887!val!0)\r\n  (define-fun var1112 () String\r\n    (nextString/1391460550 var2281))\r\n  (define-fun var2176 () String\r\n    (str.++ var1578!1 \"Failed parsing '\"))\r\n  (define-fun null-var2887 () var2887\r\n    var2887!val!1)\r\n  (define-fun var271 () String\r\n    (str.++ var1578!1\r\n        \"Failed parsing '\"\r\n        (nextString/1391460550 var2281)\r\n        \"' as Currency; at path \"\r\n        (getPreviousPath/455305022 var2281)))\r\n  (define-fun var2281 () var2148\r\n    var2148!val!0)\r\n  (define-fun var485 () String\r\n    (str.++ var1578!1\r\n        \"Failed parsing '\"\r\n        (nextString/1391460550 var2281)\r\n        \"' as Currency; at path \"\r\n        (getPreviousPath/455305022 var2281)))\r\n  (define-fun var3844 () String\r\n    (str.++ var1578!1 \"Failed parsing '\" (nextString/1391460550 var2281)))\r\n  (define-fun var273 () String\r\n    (getPreviousPath/455305022 var2281))\r\n  (define-fun var2378 () var2543\r\n    var2543-init)\r\n  (define-fun null-var2148 () var2148\r\n    var2148!val!1)\r\n  (define-fun var2176!1 () String\r\n    \"Failed parsing '\")\r\n  (define-fun var2421!1 () String\r\n    \"Failed parsing '' as Currency; at path \")\r\n  (define-fun var3844!1 () String\r\n    \"Failed parsing '' as Currency; at path \")\r\n  (define-fun var1578!2 () String\r\n    \"Failed parsing '\")\r\n  (define-fun var1578!1 () String\r\n    \"\")\r\n  (define-fun var2448!1 () var1390\r\n    var1390!val!0)\r\n  (define-fun var2543-init () var2543\r\n    var2543!val!0)\r\n  (define-fun var2378!1 () var2543\r\n    var2543!val!0)\r\n  (define-fun var271!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun nextString/1391460550 ((x!0 var2148)) String\r\n    \"\")\r\n  (define-fun getPreviousPath/455305022 ((x!0 var2148)) String\r\n    \"\")\r\n  (define-fun cast-from-var1390-to-var3406 ((x!0 var1390)) var3406\r\n    var3406!val!0)\r\n  (define-fun <init>/1368500855 ((x!0 var2543) (x!1 String) (x!2 var3406)) void\r\n    void!val!0)\r\n)\r\n(error \"line 68 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10166272,
            "run_time": 0.029327869415283203,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2887 is 2\r\n; rep: (as @var2887_0 var2887)\r\n; rep: (as @var2887_1 var2887)\r\n; cardinality of var2148 is 2\r\n; rep: (as @var2148_0 var2148)\r\n; rep: (as @var2148_1 var2148)\r\n; cardinality of var1390 is 2\r\n; rep: (as @var1390_0 var1390)\r\n; rep: (as @var1390_1 var1390)\r\n; cardinality of var2543 is 1\r\n; rep: (as @var2543_0 var2543)\r\n; cardinality of var3406 is 1\r\n; rep: (as @var3406_0 var3406)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun nextString/1391460550 ((BOUND_VARIABLE_598 var2148)) String \"\")\r\n(define-fun var2543-init () var2543 (as @var2543_0 var2543))\r\n(define-fun String-init () String \"\")\r\n(define-fun getPreviousPath/455305022 ((BOUND_VARIABLE_601 var2148)) String \"\")\r\n(define-fun <init>/1368500855 ((BOUND_VARIABLE_604 var2543) (BOUND_VARIABLE_605 String) (BOUND_VARIABLE_606 var3406)) void (as @void_0 void))\r\n(define-fun cast-from-var1390-to-var3406 ((BOUND_VARIABLE_609 var1390)) var3406 (as @var3406_0 var3406))\r\n(define-fun null-var2887 () var2887 (as @var2887_0 var2887))\r\n(define-fun null-var2148 () var2148 (as @var2148_0 var2148))\r\n(define-fun null-var1390 () var1390 (as @var1390_0 var1390))\r\n(define-fun var2712 () var2887 (as @var2887_1 var2887))\r\n(define-fun var2281 () var2148 (as @var2148_1 var2148))\r\n(define-fun var2448 () var1390 (as @var1390_1 var1390))\r\n(define-fun var1578!1 () String \"\")\r\n(define-fun var1578!2 () String \"Failed parsing '\")\r\n(define-fun var2176!1 () String \"Failed parsing '\")\r\n(define-fun var3844!1 () String \"Failed parsing '' as Currency; at path \")\r\n(define-fun var2421!1 () String \"Failed parsing '' as Currency; at path \")\r\n(define-fun var2378!1 () var2543 (as @var2543_0 var2543))\r\n(define-fun var271!1 () String \"\")\r\n(define-fun var2448!1 () var1390 (as @var1390_0 var1390))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35463168,
            "run_time": 0.13721036911010742,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2887:\n  ;;   var2887!val!1 var2887!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2887!val!1 () var2887)\n  (declare-fun var2887!val!0 () var2887)\n  ;; cardinality constraint:\n  (forall ((x var2887)) (or (= x var2887!val!1) (= x var2887!val!0)))\n  ;; -----------\n  ;; universe for var1390:\n  ;;   var1390!val!0 var1390!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1390!val!0 () var1390)\n  (declare-fun var1390!val!1 () var1390)\n  ;; cardinality constraint:\n  (forall ((x var1390)) (or (= x var1390!val!0) (= x var1390!val!1)))\n  ;; -----------\n  ;; universe for var2148:\n  ;;   var2148!val!1 var2148!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2148!val!1 () var2148)\n  (declare-fun var2148!val!0 () var2148)\n  ;; cardinality constraint:\n  (forall ((x var2148)) (or (= x var2148!val!1) (= x var2148!val!0)))\n  ;; -----------\n  (define-fun var2448 () var1390\n    var1390!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2421 () String\n    (str.++ var1578!1\n        \"Failed parsing '\"\n        (nextString/1391460550 var2281)\n        \"' as Currency; at path \"))\n  (define-fun null-var1390 () var1390\n    var1390!val!1)\n  (define-fun var1112 () String\n    (nextString/1391460550 var2281))\n  (define-fun var2176 () String\n    (str.++ var1578!1 \"Failed parsing '\"))\n  (define-fun var2712 () var2887\n    var2887!val!0)\n  (define-fun var271 () String\n    (str.++ var1578!1\n        \"Failed parsing '\"\n        (nextString/1391460550 var2281)\n        \"' as Currency; at path \"\n        (getPreviousPath/455305022 var2281)))\n  (define-fun var2378 () var2543\n    var2543-init)\n  (define-fun null-var2887 () var2887\n    var2887!val!1)\n  (define-fun var485 () String\n    (str.++ var1578!1\n        \"Failed parsing '\"\n        (nextString/1391460550 var2281)\n        \"' as Currency; at path \"\n        (getPreviousPath/455305022 var2281)))\n  (define-fun var3844 () String\n    (str.++ var1578!1 \"Failed parsing '\" (nextString/1391460550 var2281)))\n  (define-fun var2281 () var2148\n    var2148!val!0)\n  (define-fun var273 () String\n    (getPreviousPath/455305022 var2281))\n  (define-fun var1578 () String\n    String-init)\n  (define-fun null-var2148 () var2148\n    var2148!val!1)\n  (define-fun var2176!1 () String\n    \"Failed parsing '\")\n  (define-fun var2421!1 () String\n    \"Failed parsing '' as Currency; at path \")\n  (define-fun var3844!1 () String\n    \"Failed parsing '' as Currency; at path \")\n  (define-fun var1578!2 () String\n    \"Failed parsing '\")\n  (define-fun var1578!1 () String\n    \"\")\n  (define-fun var2448!1 () var1390\n    var1390!val!0)\n  (define-fun var2543-init () var2543\n    var2543!val!0)\n  (define-fun var2378!1 () var2543\n    var2543!val!0)\n  (define-fun var271!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun nextString/1391460550 ((x!0 var2148)) String\n    \"\")\n  (define-fun getPreviousPath/455305022 ((x!0 var2148)) String\n    \"\")\n  (define-fun cast-from-var1390-to-var3406 ((x!0 var1390)) var3406\n    var3406!val!0)\n  (define-fun <init>/1368500855 ((x!0 var2543) (x!1 String) (x!2 var3406)) void\n    void!val!0)\n)\n(error \"line 68 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167297024,
            "run_time": 1.4986991882324219,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1390/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.TypeAdapters$25__read__-1704744648\\741.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3844!1 =\r\n     concat(all_29_4, \"\\u{0}27 as Currency; at path \")\r\n   var2421!1 =\r\n     concat(all_23_3, all_23_2)\r\n   var2176!1 =\r\n     concat(\"Failed parsing \\u{0}27\", all_26_3)\r\n   all_23_3 =\r\n     concat(all_32_5, \"\\u{0}27 as Currency; at path \")\r\n   all_29_4 =\r\n     concat(\"Failed parsing \\u{0}27\", all_26_3)\r\n   all_32_5 =\r\n     concat(\"Failed parsing \\u{0}27\", all_26_3)\r\n\r\n1136ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r12 := @this: com.google.gson.internal.bind.TypeAdapters$25",
            "r0 := @parameter0: com.google.gson.stream.JsonReader",
            "r1 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String nextString()>()",
            "$r3 := @caughtexception",
            "$r4 = new com.google.gson.JsonSyntaxException",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed parsing \\'\")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' as Currency; at path \")",
            "$r8 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String getPreviousPath()>()",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r4.<com.google.gson.JsonSyntaxException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r3)",
            "throw $r4"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.GsonBuilder__addTypeAdaptersForDate__-725157487\\1525.smt2",
        "z3": {
            "memory": 33087488,
            "run_time": 0.12130498886108398,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2922:\r\n  ;;   var2922!val!1 var2922!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2922!val!1 () var2922)\r\n  (declare-fun var2922!val!0 () var2922)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2922)) (or (= x var2922!val!1) (= x var2922!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3084:\r\n  ;;   var3084!val!1 var3084!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3084!val!1 () var3084)\r\n  (declare-fun var3084!val!0 () var3084)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3084)) (or (= x var3084!val!1) (= x var3084!val!0)))\r\n  ;; -----------\r\n  (define-fun var3569 () Bool\r\n    (= (str.len (trim-right (trim-left var641))) 0))\r\n  (define-fun var2173 () Bool\r\n    var2431-SUPPORTS_SQL_TYPES)\r\n  (define-fun var3637 () var2922\r\n    var2922!val!0)\r\n  (define-fun var1485 () var3084\r\n    var3084!val!0)\r\n  (define-fun null-var2922 () var2922\r\n    var2922!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1318 () Int\r\n    6)\r\n  (define-fun var758 () var1504\r\n    var1504-DATE)\r\n  (define-fun var641 () String\r\n    \"\\u{1bcf2}\")\r\n  (define-fun var869 () var3024\r\n    (createAdapterFactory/1468715664 var1504-DATE var641))\r\n  (define-fun null-Int () Int\r\n    5)\r\n  (define-fun null-var3084 () var3084\r\n    var3084!val!1)\r\n  (define-fun var221 () Int\r\n    3)\r\n  (define-fun var3133 () var3024\r\n    null-var3024)\r\n  (define-fun var41 () var3024\r\n    null-var3024)\r\n  (define-fun var3470 () String\r\n    (trim-right (trim-left var641)))\r\n  (define-fun var2431-SUPPORTS_SQL_TYPES () Bool\r\n    false)\r\n  (define-fun var1504-DATE () var1504\r\n    var1504!val!0)\r\n  (define-fun var3637!1 () var2922\r\n    var2922!val!1)\r\n  (define-fun null-var3024 () var3024\r\n    var3024!val!0)\r\n  (define-fun var869!1 () var3024\r\n    var3024!val!0)\r\n  (define-fun cast-from-var3024-to-var3098 ((x!0 var3024)) var3098\r\n    var3098!val!0)\r\n  (define-fun createAdapterFactory/1468715664 ((x!0 var1504) (x!1 String)) var3024\r\n    var3024!val!0)\r\n  (define-fun var2922_add/328494887 ((x!0 var2922) (x!1 var3098)) Bool\r\n    false)\r\n)\r\n(error \"line 64 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 32280576,
            "run_time": 4.019848823547363,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(\r\n; cardinality of var3084 is 2\r\n; rep: (as @var3084_0 var3084)\r\n; rep: (as @var3084_1 var3084)\r\n; cardinality of var1760 is 1\r\n; rep: (as @var1760_0 var1760)\r\n; cardinality of var2922 is 2\r\n; rep: (as @var2922_0 var2922)\r\n; rep: (as @var2922_1 var2922)\r\n; cardinality of var2431 is 1\r\n; rep: (as @var2431_0 var2431)\r\n; cardinality of var3024 is 1\r\n; rep: (as @var3024_0 var3024)\r\n; cardinality of var1504 is 1\r\n; rep: (as @var1504_0 var1504)\r\n; cardinality of var3098 is 1\r\n; rep: (as @var3098_0 var3098)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun createAdapterFactory/1468715664 ((BOUND_VARIABLE_21931 var1504) (BOUND_VARIABLE_21932 String)) var3024 (as @var3024_0 var3024))\r\n(define-fun var2922_add/328494887 ((BOUND_VARIABLE_21935 var2922) (BOUND_VARIABLE_21936 var3098)) Bool false)\r\n(define-fun cast-from-var3024-to-var3098 ((BOUND_VARIABLE_21939 var3024)) var3098 (as @var3098_0 var3098))\r\n(define-fun null-var3084 () var3084 (as @var3084_0 var3084))\r\n(define-fun null-String () String \"\")\r\n(define-fun null-Int () Int 0)\r\n(define-fun null-var2922 () var2922 (as @var2922_0 var2922))\r\n(define-fun var2431-SUPPORTS_SQL_TYPES () Bool false)\r\n(define-fun null-var3024 () var3024 (as @var3024_0 var3024))\r\n(define-fun var1504-DATE () var1504 (as @var1504_0 var1504))\r\n(define-fun var1485 () var3084 (as @var3084_1 var3084))\r\n(define-fun var641 () String \"!\")\r\n(define-fun var221 () Int 1)\r\n(define-fun var1318 () Int 1)\r\n(define-fun var3637 () var2922 (as @var2922_1 var2922))\r\n(define-fun var3637!1 () var2922 (as @var2922_0 var2922))\r\n(define-fun var869!1 () var3024 (as @var3024_0 var3024))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37298176,
            "run_time": 0.09102797508239746,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 63 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 64 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 273666048,
            "run_time": 2.6446149349212646,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_223_2, all_223_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.GsonBuilder__addTypeAdaptersForDate__-725157487\\1525.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming that recursive function trim-left is partial\r\nWarning: assuming that recursive function trim-right is partial\r\nAssuming all_70_4 = \"\"\r\nAssuming all_261_4 = \"\"\r\nAssuming all_100_5 = \"\"\r\nAssuming all_57_5 = \"\"\r\nAssuming all_261_5 = \"\"\r\nAssuming all_54_2 = \"\"\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n2274ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>",
            "<java.lang.String: boolean isEmpty()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 1,
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r9 := @this: com.google.gson.GsonBuilder",
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "r2 := @parameter3: java.util.List",
            "z0 = <com.google.gson.internal.sql.SqlTypesSupport: boolean SUPPORTS_SQL_TYPES>",
            "r10 = null",
            "r11 = null",
            "if r0 == null goto (branch)",
            "$r5 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()",
            "$z1 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>()",
            "if $z1 != 0 goto (branch)",
            "$r6 = <com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE>",
            "r12 = virtualinvoke $r6.<com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.TypeAdapterFactory createAdapterFactory(java.lang.String)>(r0)",
            "if z0 == 0 goto interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)",
            "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)",
            "if z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.GsonBuilder__addTypeAdaptersForDate__-725157487\\1531.smt2",
        "z3": {
            "memory": 32964608,
            "run_time": 0.0871119499206543,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1511:\r\n  ;;   var1511!val!1 var1511!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1511!val!1 () var1511)\r\n  (declare-fun var1511!val!0 () var1511)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1511)) (or (= x var1511!val!1) (= x var1511!val!0)))\r\n  ;; -----------\r\n  ;; universe for var386:\r\n  ;;   var386!val!1 var386!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var386!val!1 () var386)\r\n  (declare-fun var386!val!0 () var386)\r\n  ;; cardinality constraint:\r\n  (forall ((x var386)) (or (= x var386!val!1) (= x var386!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var1511 () var1511\r\n    var1511!val!1)\r\n  (define-fun var898 () Int\r\n    3)\r\n  (define-fun var842 () Int\r\n    6)\r\n  (define-fun var278 () var3940\r\n    (createAdapterFactory/-190254991 var2002-DATE var898 var842))\r\n  (define-fun var1315 () var1511\r\n    var1511!val!0)\r\n  (define-fun var1647 () var2002\r\n    var2002-DATE)\r\n  (define-fun var3485 () Bool\r\n    var1438-SUPPORTS_SQL_TYPES)\r\n  (define-fun var321 () String\r\n    (trim-right (trim-left var2640)))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3777 () Bool\r\n    (= (str.len (trim-right (trim-left var2640))) 0))\r\n  (define-fun var2640 () String\r\n    \"\")\r\n  (define-fun null-var386 () var386\r\n    var386!val!1)\r\n  (define-fun var677 () var3940\r\n    null-var3940)\r\n  (define-fun null-Int () Int\r\n    5)\r\n  (define-fun var253 () var3940\r\n    null-var3940)\r\n  (define-fun var2262 () var386\r\n    var386!val!0)\r\n  (define-fun var1438-SUPPORTS_SQL_TYPES () Bool\r\n    false)\r\n  (define-fun null-var3940 () var3940\r\n    var3940!val!0)\r\n  (define-fun var1315!1 () var1511\r\n    var1511!val!1)\r\n  (define-fun var2002-DATE () var2002\r\n    var2002!val!0)\r\n  (define-fun var278!1 () var3940\r\n    var3940!val!0)\r\n  (define-fun var1511_add/328494887 ((x!0 var1511) (x!1 var474)) Bool\r\n    false)\r\n  (define-fun createAdapterFactory/-190254991 ((x!0 var2002) (x!1 Int) (x!2 Int)) var3940\r\n    var3940!val!0)\r\n  (define-fun cast-from-var3940-to-var474 ((x!0 var3940)) var474\r\n    var474!val!0)\r\n)\r\n(error \"line 68 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 22110208,
            "run_time": 0.5134501457214355,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(\r\n; cardinality of var386 is 2\r\n; rep: (as @var386_0 var386)\r\n; rep: (as @var386_1 var386)\r\n; cardinality of var659 is 1\r\n; rep: (as @var659_0 var659)\r\n; cardinality of var1511 is 2\r\n; rep: (as @var1511_0 var1511)\r\n; rep: (as @var1511_1 var1511)\r\n; cardinality of var1438 is 1\r\n; rep: (as @var1438_0 var1438)\r\n; cardinality of var3940 is 1\r\n; rep: (as @var3940_0 var3940)\r\n; cardinality of var2002 is 1\r\n; rep: (as @var2002_0 var2002)\r\n; cardinality of var474 is 1\r\n; rep: (as @var474_0 var474)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun createAdapterFactory/-190254991 ((BOUND_VARIABLE_9262 var2002) (BOUND_VARIABLE_9263 Int) (BOUND_VARIABLE_9264 Int)) var3940 (as @var3940_0 var3940))\r\n(define-fun var1511_add/328494887 ((BOUND_VARIABLE_9267 var1511) (BOUND_VARIABLE_9268 var474)) Bool false)\r\n(define-fun cast-from-var3940-to-var474 ((BOUND_VARIABLE_9271 var3940)) var474 (as @var474_0 var474))\r\n(define-fun null-var386 () var386 (as @var386_0 var386))\r\n(define-fun null-String () String \"!\")\r\n(define-fun null-Int () Int 0)\r\n(define-fun null-var1511 () var1511 (as @var1511_0 var1511))\r\n(define-fun var1438-SUPPORTS_SQL_TYPES () Bool false)\r\n(define-fun null-var3940 () var3940 (as @var3940_0 var3940))\r\n(define-fun var2002-DATE () var2002 (as @var2002_0 var2002))\r\n(define-fun var2262 () var386 (as @var386_1 var386))\r\n(define-fun var2640 () String \"\")\r\n(define-fun var898 () Int 1)\r\n(define-fun var842 () Int 1)\r\n(define-fun var1315 () var1511 (as @var1511_1 var1511))\r\n(define-fun var1315!1 () var1511 (as @var1511_0 var1511))\r\n(define-fun var278!1 () var3940 (as @var3940_0 var3940))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35725312,
            "run_time": 0.08675885200500488,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 67 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 68 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 205672448,
            "run_time": 1.9836478233337402,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle literal str_to_code(all_52_2, all_52_0)\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.GsonBuilder__addTypeAdaptersForDate__-725157487\\1531.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming that recursive function trim-left is partial\r\nWarning: assuming that recursive function trim-right is partial\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n1626ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>",
            "<java.lang.String: boolean isEmpty()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 1,
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r9 := @this: com.google.gson.GsonBuilder",
            "r0 := @parameter0: java.lang.String",
            "i0 := @parameter1: int",
            "i1 := @parameter2: int",
            "r2 := @parameter3: java.util.List",
            "z0 = <com.google.gson.internal.sql.SqlTypesSupport: boolean SUPPORTS_SQL_TYPES>",
            "r10 = null",
            "r11 = null",
            "if r0 == null goto (branch)",
            "$r5 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()",
            "$z1 = virtualinvoke $r5.<java.lang.String: boolean isEmpty()>()",
            "if $z1 != 0 goto (branch)",
            "if i0 == 2 goto return",
            "if i1 == 2 goto return",
            "$r1 = <com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType DATE>",
            "r12 = virtualinvoke $r1.<com.google.gson.internal.bind.DefaultDateTypeAdapter$DateType: com.google.gson.TypeAdapterFactory createAdapterFactory(int,int)>(i0, i1)",
            "if z0 == 0 goto interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)",
            "interfaceinvoke r2.<java.util.List: boolean add(java.lang.Object)>(r12)",
            "if z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__format__-1868536622\\621.smt2",
        "z3": {
            "memory": 32026624,
            "run_time": 0.07479381561279297,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 175 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6803456,
            "run_time": 0.03075408935546875,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33173504,
            "run_time": 0.0773615837097168,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 175 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 185085952,
            "run_time": 1.440481424331665,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 12,
        "assertion_count": 44,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 9,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @parameter0: java.util.Date",
            "z0 := @parameter1: boolean",
            "r1 := @parameter2: java.util.TimeZone",
            "$r19 = new java.util.GregorianCalendar",
            "$r2 = <java.util.Locale: java.util.Locale US>",
            "specialinvoke $r19.<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>(r1, $r2)",
            "virtualinvoke $r19.<java.util.Calendar: void setTime(java.util.Date)>(r3)",
            "$r4 = \"yyyy-MM-ddThh:mm:ss\"",
            "i28 = virtualinvoke $r4.<java.lang.String: int length()>()",
            "if z0 == 0 goto $i29 = 0",
            "$r18 = \".sss\"",
            "$i29 = virtualinvoke $r18.<java.lang.String: int length()>()",
            "goto [?= $i27 = i28 + $i29]",
            "$i27 = i28 + $i29",
            "$i0 = virtualinvoke r1.<java.util.TimeZone: int getRawOffset()>()",
            "if $i0 != 0 goto $r5 = \"+hh:mm\"",
            "$r17 = \"Z\"",
            "$i30 = virtualinvoke $r17.<java.lang.String: int length()>()",
            "goto [?= $i26 = $i27 + $i30]",
            "$i26 = $i27 + $i30",
            "$r20 = new java.lang.StringBuilder",
            "specialinvoke $r20.<java.lang.StringBuilder: void <init>(int)>($i26)",
            "$i2 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(1)",
            "$r7 = \"yyyy\"",
            "$i1 = virtualinvoke $r7.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i2, $i1)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45)",
            "$i3 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(2)",
            "$i5 = $i3 + 1",
            "$r8 = \"MM\"",
            "$i4 = virtualinvoke $r8.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i5, $i4)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45)",
            "$i7 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(5)",
            "$r9 = \"dd\"",
            "$i6 = virtualinvoke $r9.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i7, $i6)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(84)",
            "$i9 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(11)",
            "$r10 = \"hh\"",
            "$i8 = virtualinvoke $r10.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i9, $i8)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)",
            "$i11 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(12)",
            "$r11 = \"mm\"",
            "$i10 = virtualinvoke $r11.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i11, $i10)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)",
            "$i13 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(13)",
            "$r12 = \"ss\"",
            "$i12 = virtualinvoke $r12.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i13, $i12)",
            "if z0 == 0 goto $l14 = virtualinvoke $r19.<java.util.Calendar: long getTimeInMillis()>()",
            "$l14 = virtualinvoke $r19.<java.util.Calendar: long getTimeInMillis()>()",
            "$i25 = virtualinvoke r1.<java.util.TimeZone: int getOffset(long)>($l14)",
            "if $i25 == 0 goto virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90)",
            "$r13 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r13"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\937.smt2",
        "z3": {
            "memory": 32043008,
            "run_time": 0.0967864990234375,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 93 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1695744,
            "run_time": 0.029761791229248047,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33349632,
            "run_time": 0.09335851669311523,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 93 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165797888,
            "run_time": 1.4872524738311768,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 25,
        "api_sequence": [
            "<java.lang.String: boolean isEmpty()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.text.ParsePosition",
            "$r45 := @caughtexception",
            "r49 = $r45",
            "goto [?= (branch)]",
            "if r1 != null goto $r69 = new java.lang.StringBuilder",
            "$r50 = null",
            "goto [?= r51 = $r50]",
            "r51 = $r50",
            "$r43 = virtualinvoke r49.<java.lang.Exception: java.lang.String getMessage()>()",
            "r52 = $r43",
            "if $r43 == null goto $r70 = new java.lang.StringBuilder",
            "$z9 = virtualinvoke $r43.<java.lang.String: boolean isEmpty()>()",
            "if $z9 == 0 goto $r72 = new java.text.ParseException",
            "$r72 = new java.text.ParseException",
            "$r71 = new java.lang.StringBuilder",
            "specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()",
            "$r55 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to parse date [\")",
            "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51)",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: \")",
            "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52)",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i31 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "specialinvoke $r72.<java.text.ParseException: void <init>(java.lang.String,int)>($r59, $i31)",
            "virtualinvoke $r72.<java.text.ParseException: java.lang.Throwable initCause(java.lang.Throwable)>(r49)",
            "throw $r72"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.TypeAdapters$31__toString__-1956642103\\561.smt2",
        "z3": {
            "memory": 32063488,
            "run_time": 0.10674023628234863,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3640:\r\n  ;;   var3640!val!0 var3640!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3640!val!0 () var3640)\r\n  (declare-fun var3640!val!1 () var3640)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3640)) (or (= x var3640!val!0) (= x var3640!val!1)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  (define-fun var840 () ClassObject\r\n    (val$type/-356231191 var430))\r\n  (define-fun var3630 () String\r\n    (append/-1031950772\r\n  (str.++ var3958!1\r\n          \"Factory[type=\"\r\n          (getName/-1958580599 (val$type/-356231191 var430))\r\n          \",adapter=\")\r\n  (cast-from-var498-to-var125 (val$typeAdapter/-356231191 var430))))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var41!1 () String\r\n    \"Factory[type=,adapter=\")\r\n  (define-fun var1160 () String\r\n    (str.++ var3958!1\r\n        \"Factory[type=\"\r\n        (getName/-1958580599 (val$type/-356231191 var430))))\r\n  (define-fun var2326 () var498\r\n    (val$typeAdapter/-356231191 var430))\r\n  (define-fun var430 () var3640\r\n    var3640!val!0)\r\n  (define-fun var1887 () String\r\n    (let ((a!1 (append/-1031950772\r\n             (str.++ var3958!1\r\n                     \"Factory[type=\"\r\n                     (getName/-1958580599 (val$type/-356231191 var430))\r\n                     \",adapter=\")\r\n             (cast-from-var498-to-var125 (val$typeAdapter/-356231191 var430)))))\r\n  (str.++ a!1 \"]\")))\r\n  (define-fun var3958 () String\r\n    String-init)\r\n  (define-fun var41 () String\r\n    (str.++ var3958!1\r\n        \"Factory[type=\"\r\n        (getName/-1958580599 (val$type/-356231191 var430))\r\n        \",adapter=\"))\r\n  (define-fun var2178 () String\r\n    (let ((a!1 (append/-1031950772\r\n             (str.++ var3958!1\r\n                     \"Factory[type=\"\r\n                     (getName/-1958580599 (val$type/-356231191 var430))\r\n                     \",adapter=\")\r\n             (cast-from-var498-to-var125 (val$typeAdapter/-356231191 var430)))))\r\n  (str.++ a!1 \"]\")))\r\n  (define-fun var1467 () String\r\n    (getName/-1958580599 (val$type/-356231191 var430)))\r\n  (define-fun var2015 () String\r\n    (str.++ var3958!1 \"Factory[type=\"))\r\n  (define-fun null-var3640 () var3640\r\n    var3640!val!1)\r\n  (define-fun var3958!2 () String\r\n    \"Factory[type=\")\r\n  (define-fun var1160!1 () String\r\n    \"Factory[type=,adapter=\")\r\n  (define-fun var3958!1 () String\r\n    \"\")\r\n  (define-fun var3630!1 () String\r\n    \"]\")\r\n  (define-fun var2015!1 () String\r\n    \"Factory[type=\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun val$type/-356231191 ((x!0 var3640)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun val$typeAdapter/-356231191 ((x!0 var3640)) var498\r\n    var498!val!0)\r\n  (define-fun cast-from-var498-to-var125 ((x!0 var498)) var125\r\n    var125!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var125)) String\r\n    \"\")\r\n)\r\n(error \"line 56 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1638400,
            "run_time": 0.031105756759643555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3640 is 2\r\n; rep: (as @var3640_0 var3640)\r\n; rep: (as @var3640_1 var3640)\r\n; cardinality of var498 is 1\r\n; rep: (as @var498_0 var498)\r\n; cardinality of var125 is 1\r\n; rep: (as @var125_0 var125)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun val$type/-356231191 ((_arg_1 var3640)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun val$typeAdapter/-356231191 ((BOUND_VARIABLE_1189 var3640)) var498 (as @var498_0 var498))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1192 String) (BOUND_VARIABLE_1193 var125)) String \"\")\r\n(define-fun cast-from-var498-to-var125 ((BOUND_VARIABLE_1196 var498)) var125 (as @var125_0 var125))\r\n(define-fun null-var3640 () var3640 (as @var3640_0 var3640))\r\n(define-fun var430 () var3640 (as @var3640_1 var3640))\r\n(define-fun var3958!1 () String \"\")\r\n(define-fun var3958!2 () String \"Factory[type=\")\r\n(define-fun var2015!1 () String \"Factory[type=\")\r\n(define-fun var1160!1 () String \"Factory[type=,adapter=\")\r\n(define-fun var41!1 () String \"Factory[type=,adapter=\")\r\n(define-fun var3630!1 () String \"]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35106816,
            "run_time": 0.09356212615966797,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 55 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 56 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167837696,
            "run_time": 1.73470139503479,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3640/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.TypeAdapters$31__toString__-1956642103\\561.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1160!1 =\r\n     concat(all_27_4, \",adapter=\")\r\n   var3630!1 =\r\n     concat(all_21_2, \"]\")\r\n   var2015!1 =\r\n     concat(\"Factory[type=\", all_24_3)\r\n   var41!1 =\r\n     concat(all_16_0, rhs)\r\n   all_16_0 =\r\n     concat(all_30_5, \",adapter=\")\r\n   all_27_4 =\r\n     concat(\"Factory[type=\", all_24_3)\r\n   all_30_5 =\r\n     concat(\"Factory[type=\", all_24_3)\r\n\r\n1380ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: com.google.gson.internal.bind.TypeAdapters$31",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Factory[type=\")",
            "$r2 = r1.<com.google.gson.internal.bind.TypeAdapters$31: java.lang.Class val$type>",
            "$r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",adapter=\")",
            "$r6 = r1.<com.google.gson.internal.bind.TypeAdapters$31: com.google.gson.TypeAdapter val$typeAdapter>",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r10"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\1024.smt2",
        "z3": {
            "memory": 32022528,
            "run_time": 0.05914568901062012,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 116 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.030768156051635742,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34033664,
            "run_time": 0.12360334396362305,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 116 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 172666880,
            "run_time": 1.547677755355835,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 12,
        "assertion_count": 35,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.text.ParsePosition",
            "$r44 := @caughtexception",
            "r49 = $r44",
            "goto [?= (branch)]",
            "if r1 != null goto $r69 = new java.lang.StringBuilder",
            "$r50 = null",
            "goto [?= r51 = $r50]",
            "r51 = $r50",
            "$r43 = virtualinvoke r49.<java.lang.Exception: java.lang.String getMessage()>()",
            "r52 = $r43",
            "if $r43 == null goto $r70 = new java.lang.StringBuilder",
            "$r70 = new java.lang.StringBuilder",
            "specialinvoke $r70.<java.lang.StringBuilder: void <init>()>()",
            "$r40 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$r38 = virtualinvoke r49.<java.lang.Object: java.lang.Class getClass()>()",
            "$r39 = virtualinvoke $r38.<java.lang.Class: java.lang.String getName()>()",
            "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39)",
            "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "r52 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r72 = new java.text.ParseException",
            "$r71 = new java.lang.StringBuilder",
            "specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()",
            "$r55 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to parse date [\")",
            "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51)",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: \")",
            "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52)",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i31 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "specialinvoke $r72.<java.text.ParseException: void <init>(java.lang.String,int)>($r59, $i31)",
            "virtualinvoke $r72.<java.text.ParseException: java.lang.Throwable initCause(java.lang.Throwable)>(r49)",
            "throw $r72"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.ConstructorConstructor$5__construct__-2067547422\\110.smt2",
        "z3": {
            "memory": 31531008,
            "run_time": 0.07841706275939941,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 52 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.047167062759399414,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33165312,
            "run_time": 0.0780038833618164,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 52 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164810752,
            "run_time": 1.0199506282806396,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.Object: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.ConstructorConstructor$5",
            "$r1 = r0.<com.google.gson.internal.ConstructorConstructor$5: java.lang.reflect.Type val$type>",
            "$z0 = $r1 instanceof java.lang.reflect.ParameterizedType",
            "if $z0 == 0 goto $r2 = new com.google.gson.JsonIOException",
            "$r2 = new com.google.gson.JsonIOException",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid EnumSet type: \")",
            "$r4 = r0.<com.google.gson.internal.ConstructorConstructor$5: java.lang.reflect.Type val$type>",
            "$r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r2.<com.google.gson.JsonIOException: void <init>(java.lang.String)>($r8)",
            "throw $r2"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\964.smt2",
        "z3": {
            "memory": 32038912,
            "run_time": 0.05924868583679199,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 116 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1740800,
            "run_time": 0.014973163604736328,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33996800,
            "run_time": 0.07667899131774902,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 116 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168652800,
            "run_time": 1.1643271446228027,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 12,
        "assertion_count": 35,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.text.ParsePosition",
            "$r45 := @caughtexception",
            "r49 = $r45",
            "goto [?= (branch)]",
            "if r1 != null goto $r69 = new java.lang.StringBuilder",
            "$r50 = null",
            "goto [?= r51 = $r50]",
            "r51 = $r50",
            "$r43 = virtualinvoke r49.<java.lang.Exception: java.lang.String getMessage()>()",
            "r52 = $r43",
            "if $r43 == null goto $r70 = new java.lang.StringBuilder",
            "$r70 = new java.lang.StringBuilder",
            "specialinvoke $r70.<java.lang.StringBuilder: void <init>()>()",
            "$r40 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$r38 = virtualinvoke r49.<java.lang.Object: java.lang.Class getClass()>()",
            "$r39 = virtualinvoke $r38.<java.lang.Class: java.lang.String getName()>()",
            "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39)",
            "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "r52 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r72 = new java.text.ParseException",
            "$r71 = new java.lang.StringBuilder",
            "specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()",
            "$r55 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to parse date [\")",
            "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51)",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: \")",
            "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52)",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i31 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "specialinvoke $r72.<java.text.ParseException: void <init>(java.lang.String,int)>($r59, $i31)",
            "virtualinvoke $r72.<java.text.ParseException: java.lang.Throwable initCause(java.lang.Throwable)>(r49)",
            "throw $r72"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.ConstructorConstructor__newUnsafeAllocator__1119955185\\269.smt2",
        "z3": {
            "memory": 32051200,
            "run_time": 0.06792330741882324,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2525:\r\n  ;;   var2525!val!0 var2525!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2525!val!0 () var2525)\r\n  (declare-fun var2525!val!1 () var2525)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2525)) (or (= x var2525!val!0) (= x var2525!val!1)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var2738 () String\r\n    (str.++ var83!1 \"Unable to create instance of \"))\r\n  (define-fun var3657 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var83!1 \"Unable to create instance of \")\r\n          (cast-from-ClassObject-to-var2061 var615))\r\n        \"; usage of JDK Unsafe is disabled. Registering an InstanceCreator or a TypeAdapter for this type, adding a no-args constructor, or enabling usage of JDK Unsafe may fix this problem.\"))\r\n  (define-fun var615 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var1892 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var83!1 \"Unable to create instance of \")\r\n          (cast-from-ClassObject-to-var2061 var615))\r\n        \"; usage of JDK Unsafe is disabled. Registering an InstanceCreator or a TypeAdapter for this type, adding a no-args constructor, or enabling usage of JDK Unsafe may fix this problem.\"))\r\n  (define-fun var83 () String\r\n    String-init)\r\n  (define-fun var2105 () var2741\r\n    var2741-init)\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var489 () String\r\n    (append/-1031950772\r\n  (str.++ var83!1 \"Unable to create instance of \")\r\n  (cast-from-ClassObject-to-var2061 var615)))\r\n  (define-fun var2738!1 () String\r\n    \"Unable to create instance of \")\r\n  (define-fun null-var2525 () var2525\r\n    var2525!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2831 () var2525\r\n    var2525!val!0)\r\n  (define-fun var3283 () Bool\r\n    (useJdkUnsafe/877806998 var2831))\r\n  (define-fun var489!1 () String\r\n    \"; usage of JDK Unsafe is disabled. Registering an InstanceCreator or a TypeAdapter for this type, adding a no-args constructor, or enabling usage of JDK Unsafe may fix this problem.\")\r\n  (define-fun var83!1 () String\r\n    \"\")\r\n  (define-fun var83!2 () String\r\n    \"Unable to create instance of \")\r\n  (define-fun var3657!1 () String\r\n    \"\")\r\n  (define-fun var2831!1 () var2525\r\n    var2525!val!0)\r\n  (define-fun var2105!1 () var2741\r\n    var2741!val!0)\r\n  (define-fun var2741-init () var2741\r\n    var2741!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun useJdkUnsafe/877806998 ((x!0 var2525)) Bool\r\n    false)\r\n  (define-fun cast-from-ClassObject-to-var2061 ((x!0 ClassObject)) var2061\r\n    var2061!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2061)) String\r\n    \"\")\r\n  (define-fun <init>/-654476536 ((x!0 var2741) (x!1 var2525) (x!2 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 57 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11587584,
            "run_time": 0.03183436393737793,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2525 is 2\r\n; rep: (as @var2525_0 var2525)\r\n; rep: (as @var2525_1 var2525)\r\n; cardinality of var2061 is 1\r\n; rep: (as @var2061_0 var2061)\r\n; cardinality of var2741 is 1\r\n; rep: (as @var2741_0 var2741)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun useJdkUnsafe/877806998 ((_arg_1 var2525)) Bool false)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_969 String) (BOUND_VARIABLE_970 var2061)) String \"\")\r\n(define-fun cast-from-ClassObject-to-var2061 ((BOUND_VARIABLE_973 ClassObject)) var2061 (as @var2061_0 var2061))\r\n(define-fun var2741-init () var2741 (as @var2741_0 var2741))\r\n(define-fun <init>/-654476536 ((BOUND_VARIABLE_976 var2741) (BOUND_VARIABLE_977 var2525) (BOUND_VARIABLE_978 String)) void (as @void_0 void))\r\n(define-fun null-var2525 () var2525 (as @var2525_0 var2525))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var2831 () var2525 (as @var2525_1 var2525))\r\n(define-fun var615 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var83!1 () String \"\")\r\n(define-fun var83!2 () String \"Unable to create instance of \")\r\n(define-fun var2738!1 () String \"Unable to create instance of \")\r\n(define-fun var489!1 () String \"; usage of JDK Unsafe is disabled. Registering an InstanceCreator or a TypeAdapter for this type, adding a no-args constructor, or enabling usage of JDK Unsafe may fix this problem.\")\r\n(define-fun var2105!1 () var2741 (as @var2741_0 var2741))\r\n(define-fun var2831!1 () var2525 (as @var2525_0 var2525))\r\n(define-fun var3657!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36827136,
            "run_time": 0.10710859298706055,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2525:\n  ;;   var2525!val!0 var2525!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2525!val!0 () var2525)\n  (declare-fun var2525!val!1 () var2525)\n  ;; cardinality constraint:\n  (forall ((x var2525)) (or (= x var2525!val!0) (= x var2525!val!1)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  (define-fun var615 () ClassObject\n    ClassObject!val!0)\n  (define-fun var489 () String\n    (append/-1031950772\n  (str.++ var83!1 \"Unable to create instance of \")\n  (cast-from-ClassObject-to-var2061 var615)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2105 () var2741\n    var2741-init)\n  (define-fun null-var2525 () var2525\n    var2525!val!1)\n  (define-fun var2831 () var2525\n    var2525!val!0)\n  (define-fun var2738 () String\n    (str.++ var83!1 \"Unable to create instance of \"))\n  (define-fun var3283 () Bool\n    (useJdkUnsafe/877806998 var2831))\n  (define-fun var1892 () String\n    (str.++ (append/-1031950772\n          (str.++ var83!1 \"Unable to create instance of \")\n          (cast-from-ClassObject-to-var2061 var615))\n        \"; usage of JDK Unsafe is disabled. Registering an InstanceCreator or a TypeAdapter for this type, adding a no-args constructor, or enabling usage of JDK Unsafe may fix this problem.\"))\n  (define-fun var83 () String\n    String-init)\n  (define-fun var2738!1 () String\n    \"Unable to create instance of \")\n  (define-fun var83!2 () String\n    \"Unable to create instance of \")\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var3657 () String\n    (str.++ (append/-1031950772\n          (str.++ var83!1 \"Unable to create instance of \")\n          (cast-from-ClassObject-to-var2061 var615))\n        \"; usage of JDK Unsafe is disabled. Registering an InstanceCreator or a TypeAdapter for this type, adding a no-args constructor, or enabling usage of JDK Unsafe may fix this problem.\"))\n  (define-fun var489!1 () String\n    \"; usage of JDK Unsafe is disabled. Registering an InstanceCreator or a TypeAdapter for this type, adding a no-args constructor, or enabling usage of JDK Unsafe may fix this problem.\")\n  (define-fun var83!1 () String\n    \"\")\n  (define-fun var3657!1 () String\n    \"\")\n  (define-fun var2831!1 () var2525\n    var2525!val!0)\n  (define-fun var2105!1 () var2741\n    var2741!val!0)\n  (define-fun var2741-init () var2741\n    var2741!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun useJdkUnsafe/877806998 ((x!0 var2525)) Bool\n    false)\n  (define-fun cast-from-ClassObject-to-var2061 ((x!0 ClassObject)) var2061\n    var2061!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2061)) String\n    \"\")\n  (define-fun <init>/-654476536 ((x!0 var2741) (x!1 var2525) (x!2 String)) void\n    void!val!0)\n)\n(error \"line 57 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182607872,
            "run_time": 1.242114782333374,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2525/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.ConstructorConstructor__newUnsafeAllocator__1119955185\\269.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var489!1 =\r\n     concat(all_27_2, \"; usage of JDK Unsafe is disabled. Registering an InstanceCreator or a TypeAdapter for this type, adding a no-args constructor, or enabling usage of JDK Unsafe may fix this problem.\")\r\n\r\n966ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.ConstructorConstructor",
            "r2 := @parameter0: java.lang.Class",
            "$z0 = r0.<com.google.gson.internal.ConstructorConstructor: boolean useJdkUnsafe>",
            "if $z0 == 0 goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unable to create instance of \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; usage of JDK Unsafe is disabled. Registering an InstanceCreator or a TypeAdapter for this type, adding a no-args constructor, or enabling usage of JDK Unsafe may fix this problem.\")",
            "r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r7 = new com.google.gson.internal.ConstructorConstructor$20",
            "specialinvoke $r7.<com.google.gson.internal.ConstructorConstructor$20: void <init>(com.google.gson.internal.ConstructorConstructor,java.lang.String)>(r0, r6)",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.ConstructorConstructor$9__construct__-1518028194\\405.smt2",
        "z3": {
            "memory": 31584256,
            "run_time": 0.11304068565368652,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1457:\r\n  ;;   var1457!val!1 var1457!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1457!val!1 () var1457)\r\n  (declare-fun var1457!val!0 () var1457)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1457)) (or (= x var1457!val!1) (= x var1457!val!0)))\r\n  ;; -----------\r\n  ;; universe for var759:\r\n  ;;   var759!val!0 var759!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var759!val!0 () var759)\r\n  (declare-fun var759!val!1 () var759)\r\n  ;; cardinality constraint:\r\n  (forall ((x var759)) (or (= x var759!val!0) (= x var759!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var759 () var759\r\n    var759!val!1)\r\n  (define-fun var655 () String\r\n    (str.++ var3432!1 \"Failed to invoke constructor '\"))\r\n  (define-fun var1242 () String\r\n    (str.++ var3432!1\r\n        \"Failed to invoke constructor '\"\r\n        (var2051_constructorToString/1631520055\r\n          (val$constructor/1758936235 var1045))\r\n        \"' with no args\"))\r\n  (define-fun var456 () String\r\n    (var2051_constructorToString/1631520055 (val$constructor/1758936235 var1045)))\r\n  (define-fun null-var1457 () var1457\r\n    var1457!val!1)\r\n  (define-fun var1192 () var1180\r\n    (val$constructor/1758936235 var1045))\r\n  (define-fun var2944 () var1457\r\n    var1457!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3720 () String\r\n    (str.++ var3432!1\r\n        \"Failed to invoke constructor '\"\r\n        (var2051_constructorToString/1631520055\r\n          (val$constructor/1758936235 var1045))))\r\n  (define-fun var1321 () var3769\r\n    var3769-init)\r\n  (define-fun var1045 () var759\r\n    var759!val!0)\r\n  (define-fun var277 () var1180\r\n    (val$constructor/1758936235 var1045))\r\n  (define-fun var2125 () String\r\n    (str.++ var3432!1\r\n        \"Failed to invoke constructor '\"\r\n        (var2051_constructorToString/1631520055\r\n          (val$constructor/1758936235 var1045))\r\n        \"' with no args\"))\r\n  (define-fun var3617 () var749\r\n    (getCause/20745027 var2944))\r\n  (define-fun var3432 () String\r\n    String-init)\r\n  (define-fun var1249 () (Array Int var2540)\r\n    arr-var2540-init)\r\n  (define-fun var3432!2 () String\r\n    \"Failed to invoke constructor '\")\r\n  (define-fun var3720!1 () String\r\n    \"Failed to invoke constructor '' with no args\")\r\n  (define-fun var655!1 () String\r\n    \"Failed to invoke constructor '\")\r\n  (define-fun var3432!1 () String\r\n    \"\")\r\n  (define-fun var3617!1 () var749\r\n    var749!val!0)\r\n  (define-fun var2125!1 () String\r\n    \"\")\r\n  (define-fun var3769-init () var3769\r\n    var3769!val!0)\r\n  (define-fun arr-var2540-init () (Array Int var2540)\r\n    ((as const (Array Int var2540)) var2540!val!0))\r\n  (define-fun var1321!1 () var3769\r\n    var3769!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun val$constructor/1758936235 ((x!0 var759)) var1180\r\n    var1180!val!0)\r\n  (define-fun var2051_constructorToString/1631520055 ((x!0 var1180)) String\r\n    \"\")\r\n  (define-fun getCause/20745027 ((x!0 var1457)) var749\r\n    var749!val!0)\r\n  (define-fun <init>/1642269841 ((x!0 var3769) (x!1 String) (x!2 var749)) void\r\n    void!val!0)\r\n)\r\n(error \"line 66 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.04623222351074219,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var759 is 2\r\n; rep: (as @var759_0 var759)\r\n; rep: (as @var759_1 var759)\r\n; cardinality of var1180 is 1\r\n; rep: (as @var1180_0 var1180)\r\n; cardinality of var2540 is 1\r\n; rep: (as @var2540_0 var2540)\r\n; cardinality of var1457 is 2\r\n; rep: (as @var1457_0 var1457)\r\n; rep: (as @var1457_1 var1457)\r\n; cardinality of var3769 is 1\r\n; rep: (as @var3769_0 var3769)\r\n; cardinality of var2051 is 1\r\n; rep: (as @var2051_0 var2051)\r\n; cardinality of var749 is 1\r\n; rep: (as @var749_0 var749)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun val$constructor/1758936235 ((BOUND_VARIABLE_586 var759)) var1180 (as @var1180_0 var1180))\r\n(define-fun arr-var2540-init () (Array Int var2540) ((as const (Array Int var2540)) (as @var2540_0 var2540)))\r\n(define-fun var3769-init () var3769 (as @var3769_0 var3769))\r\n(define-fun String-init () String \"\")\r\n(define-fun var2051_constructorToString/1631520055 ((BOUND_VARIABLE_591 var1180)) String \"\")\r\n(define-fun getCause/20745027 ((BOUND_VARIABLE_594 var1457)) var749 (as @var749_0 var749))\r\n(define-fun <init>/1642269841 ((BOUND_VARIABLE_597 var3769) (BOUND_VARIABLE_598 String) (BOUND_VARIABLE_599 var749)) void (as @void_0 void))\r\n(define-fun null-var759 () var759 (as @var759_0 var759))\r\n(define-fun null-var1457 () var1457 (as @var1457_0 var1457))\r\n(define-fun var1045 () var759 (as @var759_1 var759))\r\n(define-fun var2944 () var1457 (as @var1457_1 var1457))\r\n(define-fun var3432!1 () String \"\")\r\n(define-fun var3432!2 () String \"Failed to invoke constructor '\")\r\n(define-fun var655!1 () String \"Failed to invoke constructor '\")\r\n(define-fun var3720!1 () String \"Failed to invoke constructor '' with no args\")\r\n(define-fun var1321!1 () var3769 (as @var3769_0 var3769))\r\n(define-fun var2125!1 () String \"\")\r\n(define-fun var3617!1 () var749 (as @var749_0 var749))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34021376,
            "run_time": 0.12299203872680664,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1457:\n  ;;   var1457!val!1 var1457!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1457!val!1 () var1457)\n  (declare-fun var1457!val!0 () var1457)\n  ;; cardinality constraint:\n  (forall ((x var1457)) (or (= x var1457!val!1) (= x var1457!val!0)))\n  ;; -----------\n  ;; universe for var759:\n  ;;   var759!val!0 var759!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var759!val!0 () var759)\n  (declare-fun var759!val!1 () var759)\n  ;; cardinality constraint:\n  (forall ((x var759)) (or (= x var759!val!0) (= x var759!val!1)))\n  ;; -----------\n  (define-fun null-var759 () var759\n    var759!val!1)\n  (define-fun var1321 () var3769\n    var3769-init)\n  (define-fun var277 () var1180\n    (val$constructor/1758936235 var1045))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var1457 () var1457\n    var1457!val!1)\n  (define-fun var3720 () String\n    (str.++ var3432!1\n        \"Failed to invoke constructor '\"\n        (var2051_constructorToString/1631520055\n          (val$constructor/1758936235 var1045))))\n  (define-fun var2944 () var1457\n    var1457!val!0)\n  (define-fun var3617 () var749\n    (getCause/20745027 var2944))\n  (define-fun var1045 () var759\n    var759!val!0)\n  (define-fun var1249 () (Array Int var2540)\n    arr-var2540-init)\n  (define-fun var2125 () String\n    (str.++ var3432!1\n        \"Failed to invoke constructor '\"\n        (var2051_constructorToString/1631520055\n          (val$constructor/1758936235 var1045))\n        \"' with no args\"))\n  (define-fun var3432 () String\n    String-init)\n  (define-fun var1192 () var1180\n    (val$constructor/1758936235 var1045))\n  (define-fun var655 () String\n    (str.++ var3432!1 \"Failed to invoke constructor '\"))\n  (define-fun var1242 () String\n    (str.++ var3432!1\n        \"Failed to invoke constructor '\"\n        (var2051_constructorToString/1631520055\n          (val$constructor/1758936235 var1045))\n        \"' with no args\"))\n  (define-fun var456 () String\n    (var2051_constructorToString/1631520055 (val$constructor/1758936235 var1045)))\n  (define-fun var3432!2 () String\n    \"Failed to invoke constructor '\")\n  (define-fun var3720!1 () String\n    \"Failed to invoke constructor '' with no args\")\n  (define-fun var655!1 () String\n    \"Failed to invoke constructor '\")\n  (define-fun var3432!1 () String\n    \"\")\n  (define-fun var3617!1 () var749\n    var749!val!0)\n  (define-fun var2125!1 () String\n    \"\")\n  (define-fun var3769-init () var3769\n    var3769!val!0)\n  (define-fun arr-var2540-init () (Array Int var2540)\n    ((as const (Array Int var2540)) var2540!val!0))\n  (define-fun var1321!1 () var3769\n    var3769!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun val$constructor/1758936235 ((x!0 var759)) var1180\n    var1180!val!0)\n  (define-fun var2051_constructorToString/1631520055 ((x!0 var1180)) String\n    \"\")\n  (define-fun getCause/20745027 ((x!0 var1457)) var749\n    var749!val!0)\n  (define-fun <init>/1642269841 ((x!0 var3769) (x!1 String) (x!2 var749)) void\n    void!val!0)\n)\n(error \"line 66 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175247360,
            "run_time": 1.2881181240081787,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1457/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.ConstructorConstructor$9__construct__-1518028194\\405.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3720!1 =\r\n     concat(all_34_3, \"\\u{0}27 with no args\")\r\n   var655!1 =\r\n     concat(\"Failed to invoke constructor \\u{0}27\", all_31_2)\r\n   all_34_3 =\r\n     concat(\"Failed to invoke constructor \\u{0}27\", all_31_2)\r\n\r\n999ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.ConstructorConstructor$9",
            "$r2 = r0.<com.google.gson.internal.ConstructorConstructor$9: java.lang.reflect.Constructor val$constructor>",
            "$r1 = newarray (java.lang.Object)[0]",
            "$r5 := @caughtexception",
            "$r6 = new java.lang.RuntimeException",
            "$r7 = new java.lang.StringBuilder",
            "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()",
            "$r10 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to invoke constructor \\'\")",
            "$r8 = r0.<com.google.gson.internal.ConstructorConstructor$9: java.lang.reflect.Constructor val$constructor>",
            "$r9 = staticinvoke <com.google.gson.internal.reflect.ReflectionHelper: java.lang.String constructorToString(java.lang.reflect.Constructor)>($r8)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' with no args\")",
            "$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r13 = virtualinvoke $r5.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>()",
            "specialinvoke $r6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r14, $r13)",
            "throw $r6"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.PreJava9DateFormatProvider__getDateFormatPattern__-1378106782\\331.smt2",
        "z3": {
            "memory": 31289344,
            "run_time": 0.05114006996154785,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var690 () var711\r\n    var711-init)\r\n  (define-fun var3586!1 () String\r\n    \"Unknown DateFormat style: \")\r\n  (define-fun var753 () String\r\n    String-init)\r\n  (define-fun var3721 () String\r\n    (str.++ var753!1 \"Unknown DateFormat style: \" (str.from_int var3456)))\r\n  (define-fun var3586 () String\r\n    (str.++ var753!1 \"Unknown DateFormat style: \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    5)\r\n  (define-fun var3456 () Int\r\n    4)\r\n  (define-fun var1592 () String\r\n    (str.++ var753!1 \"Unknown DateFormat style: \" (str.from_int var3456)))\r\n  (define-fun var753!1 () String\r\n    \"\")\r\n  (define-fun var753!2 () String\r\n    \"Unknown DateFormat style: \")\r\n  (define-fun var711-init () var711\r\n    var711!val!0)\r\n  (define-fun var690!1 () var711\r\n    var711!val!0)\r\n  (define-fun var1592!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var711) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 44 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.06110525131225586,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var711 is 1\r\n; rep: (as @var711_0 var711)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var711-init () var711 (as @var711_0 var711))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_972 var711) (BOUND_VARIABLE_973 String)) void (as @void_0 void))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var3456 () Int (- 1))\r\n(define-fun var753!1 () String \"\")\r\n(define-fun var753!2 () String \"Unknown DateFormat style: \")\r\n(define-fun var3586!1 () String \"Unknown DateFormat style: \")\r\n(define-fun var690!1 () var711 (as @var711_0 var711))\r\n(define-fun var1592!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36585472,
            "run_time": 0.1072845458984375,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var753 () String\n    String-init)\n  (define-fun var3721 () String\n    (str.++ var753!1 \"Unknown DateFormat style: \" (str.from_int var3456)))\n  (define-fun var3586 () String\n    (str.++ var753!1 \"Unknown DateFormat style: \"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var690 () var711\n    var711-init)\n  (define-fun var1592 () String\n    (str.++ var753!1 \"Unknown DateFormat style: \" (str.from_int var3456)))\n  (define-fun null-Int () Int\n    5)\n  (define-fun var3456 () Int\n    4)\n  (define-fun var3586!1 () String\n    \"Unknown DateFormat style: \")\n  (define-fun var753!2 () String\n    \"Unknown DateFormat style: \")\n  (define-fun var753!1 () String\n    \"\")\n  (define-fun var711-init () var711\n    var711!val!0)\n  (define-fun var690!1 () var711\n    var711!val!0)\n  (define-fun var1592!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var711) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 44 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 178475008,
            "run_time": 1.2588777542114258,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3586!1 () String \"Unknown DateFormat style: \")\r\n  (define-fun var753!2 () String \"Unknown DateFormat style: \")\r\n  (define-fun var753!1 () String \"\")\r\n  (define-fun var3456 () Int 4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun abbrev_105 ((x!0 Int)) String (ite (= x!0 0) \"Unknown DateFormat style: \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "i0 := @parameter0: int",
            "tableswitch(i0) {     case 0: goto return \"EEEE, MMMM d, y\";     case 1: goto return \"MMMM d, y\";     case 2: goto return \"MMM d, y\";     case 3: goto return \"M/d/yy\";     default: goto $r0 = new java.lang.IllegalArgumentException; }",
            "$r0 = new java.lang.IllegalArgumentException",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unknown DateFormat style: \")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.PreJava9DateFormatProvider__getUSDateTimeFormat__-905336087\\230.smt2",
        "z3": {
            "memory": 31330304,
            "run_time": 0.05358433723449707,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1874 () String\r\n    (str.++ var1508!1 (var2309_getDatePartOfDateTimePattern/-1994372812 var3402)))\r\n  (define-fun var3402 () Int\r\n    1)\r\n  (define-fun var662 () String\r\n    (str.++ var1508!1\r\n        (var2309_getDatePartOfDateTimePattern/-1994372812 var3402)\r\n        \" \"\r\n        (var2309_getTimePartOfDateTimePattern/-1142756683 var1919)))\r\n  (define-fun var3996 () String\r\n    (str.++ var1508!1\r\n        (var2309_getDatePartOfDateTimePattern/-1994372812 var3402)\r\n        \" \"\r\n        (var2309_getTimePartOfDateTimePattern/-1142756683 var1919)))\r\n  (define-fun var52 () String\r\n    (str.++ var1508!1\r\n        (var2309_getDatePartOfDateTimePattern/-1994372812 var3402)\r\n        \" \"))\r\n  (define-fun var3381 () var3101\r\n    var3101-init)\r\n  (define-fun var863 () var549\r\n    var549-US)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1987 () String\r\n    (var2309_getTimePartOfDateTimePattern/-1142756683 var1919))\r\n  (define-fun var1919 () Int\r\n    1)\r\n  (define-fun var1508 () String\r\n    String-init)\r\n  (define-fun var1911 () String\r\n    (var2309_getDatePartOfDateTimePattern/-1994372812 var3402))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var1508!2 () String\r\n    \"\")\r\n  (define-fun var1874!1 () String\r\n    \" \")\r\n  (define-fun var52!1 () String\r\n    \" \")\r\n  (define-fun var1508!1 () String\r\n    \"\")\r\n  (define-fun var549-US () var549\r\n    var549!val!0)\r\n  (define-fun var662!1 () String\r\n    \"\")\r\n  (define-fun var3101-init () var3101\r\n    var3101!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3381!1 () var3101\r\n    var3101!val!0)\r\n  (define-fun var863!1 () var549\r\n    var549!val!0)\r\n  (define-fun var2309_getDatePartOfDateTimePattern/-1994372812 ((x!0 Int)) String\r\n    \"\")\r\n  (define-fun var2309_getTimePartOfDateTimePattern/-1142756683 ((x!0 Int)) String\r\n    \"\")\r\n  (define-fun <init>/-1907538146 ((x!0 var3101) (x!1 String) (x!2 var549)) void\r\n    void!val!0)\r\n)\r\n(error \"line 56 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.01453399658203125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2309 is 1\r\n; rep: (as @var2309_0 var2309)\r\n; cardinality of var3101 is 1\r\n; rep: (as @var3101_0 var3101)\r\n; cardinality of var549 is 1\r\n; rep: (as @var549_0 var549)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2309_getDatePartOfDateTimePattern/-1994372812 ((BOUND_VARIABLE_597 Int)) String \"\")\r\n(define-fun var2309_getTimePartOfDateTimePattern/-1142756683 ((BOUND_VARIABLE_600 Int)) String \"\")\r\n(define-fun var3101-init () var3101 (as @var3101_0 var3101))\r\n(define-fun <init>/-1907538146 ((BOUND_VARIABLE_603 var3101) (BOUND_VARIABLE_604 String) (BOUND_VARIABLE_605 var549)) void (as @void_0 void))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var549-US () var549 (as @var549_0 var549))\r\n(define-fun var3402 () Int 1)\r\n(define-fun var1919 () Int 1)\r\n(define-fun var1508!1 () String \"\")\r\n(define-fun var1508!2 () String \"\")\r\n(define-fun var1874!1 () String \" \")\r\n(define-fun var52!1 () String \" \")\r\n(define-fun var3381!1 () var3101 (as @var3101_0 var3101))\r\n(define-fun var662!1 () String \"\")\r\n(define-fun var863!1 () var549 (as @var549_0 var549))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34779136,
            "run_time": 0.0773921012878418,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var52 () String\n    (str.++ var1508!1\n        (var2309_getDatePartOfDateTimePattern/-1994372812 var3402)\n        \" \"))\n  (define-fun var3402 () Int\n    1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1987 () String\n    (var2309_getTimePartOfDateTimePattern/-1142756683 var1919))\n  (define-fun var1508 () String\n    String-init)\n  (define-fun var1911 () String\n    (var2309_getDatePartOfDateTimePattern/-1994372812 var3402))\n  (define-fun var3381 () var3101\n    var3101-init)\n  (define-fun var1919 () Int\n    1)\n  (define-fun var863 () var549\n    var549-US)\n  (define-fun var1874 () String\n    (str.++ var1508!1 (var2309_getDatePartOfDateTimePattern/-1994372812 var3402)))\n  (define-fun var662 () String\n    (str.++ var1508!1\n        (var2309_getDatePartOfDateTimePattern/-1994372812 var3402)\n        \" \"\n        (var2309_getTimePartOfDateTimePattern/-1142756683 var1919)))\n  (define-fun var3996 () String\n    (str.++ var1508!1\n        (var2309_getDatePartOfDateTimePattern/-1994372812 var3402)\n        \" \"\n        (var2309_getTimePartOfDateTimePattern/-1142756683 var1919)))\n  (define-fun null-Int () Int\n    0)\n  (define-fun var1508!2 () String\n    \"\")\n  (define-fun var1874!1 () String\n    \" \")\n  (define-fun var52!1 () String\n    \" \")\n  (define-fun var1508!1 () String\n    \"\")\n  (define-fun var549-US () var549\n    var549!val!0)\n  (define-fun var662!1 () String\n    \"\")\n  (define-fun var3101-init () var3101\n    var3101!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3381!1 () var3101\n    var3101!val!0)\n  (define-fun var863!1 () var549\n    var549!val!0)\n  (define-fun var2309_getDatePartOfDateTimePattern/-1994372812 ((x!0 Int)) String\n    \"\")\n  (define-fun var2309_getTimePartOfDateTimePattern/-1142756683 ((x!0 Int)) String\n    \"\")\n  (define-fun <init>/-1907538146 ((x!0 var3101) (x!1 String) (x!2 var549)) void\n    void!val!0)\n)\n(error \"line 56 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 204070912,
            "run_time": 1.5058064460754395,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var52!1 () String \" \")\r\n  (define-fun var1874!1 () String \" \")\r\n  (define-fun var1508!2 () String \"\")\r\n  (define-fun var1508!1 () String \"\")\r\n  (define-fun var1919 () Int 2)\r\n  (define-fun var3402 () Int 1)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun var2309_getTimePartOfDateTimePattern/-1142756683 ((x!0 Int)) String (ite (= x!0 2) \"\" \"\"))\r\n  (define-fun var2309_getDatePartOfDateTimePattern/-1994372812 ((x!0 Int)) String (ite (= x!0 1) \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "i0 := @parameter0: int",
            "i1 := @parameter1: int",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r1 = staticinvoke <com.google.gson.internal.PreJava9DateFormatProvider: java.lang.String getDatePartOfDateTimePattern(int)>(i0)",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r1)",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" \")",
            "$r3 = staticinvoke <com.google.gson.internal.PreJava9DateFormatProvider: java.lang.String getTimePartOfDateTimePattern(int)>(i1)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r7 = new java.text.SimpleDateFormat",
            "$r8 = <java.util.Locale: java.util.Locale US>",
            "specialinvoke $r7.<java.text.SimpleDateFormat: void <init>(java.lang.String,java.util.Locale)>(r6, $r8)",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.ConstructorConstructor$6__construct__217316033\\232.smt2",
        "z3": {
            "memory": 32010240,
            "run_time": 0.0605771541595459,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 52 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.03032374382019043,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32825344,
            "run_time": 0.09336376190185547,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 52 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165269504,
            "run_time": 0.9347691535949707,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.Object: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.ConstructorConstructor$6",
            "$r1 = r0.<com.google.gson.internal.ConstructorConstructor$6: java.lang.reflect.Type val$type>",
            "$z0 = $r1 instanceof java.lang.reflect.ParameterizedType",
            "if $z0 == 0 goto $r2 = new com.google.gson.JsonIOException",
            "$r2 = new com.google.gson.JsonIOException",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Invalid EnumMap type: \")",
            "$r4 = r0.<com.google.gson.internal.ConstructorConstructor$6: java.lang.reflect.Type val$type>",
            "$r5 = virtualinvoke $r4.<java.lang.Object: java.lang.String toString()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r2.<com.google.gson.JsonIOException: void <init>(java.lang.String)>($r8)",
            "throw $r2"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.LazilyParsedNumber__hashCode__584398054\\310.smt2",
        "z3": {
            "memory": 30855168,
            "run_time": 0.04143977165222168,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3476:\r\n  ;;   var3476!val!0 var3476!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3476!val!0 () var3476)\r\n  (declare-fun var3476!val!1 () var3476)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3476)) (or (= x var3476!val!0) (= x var3476!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var3476 () var3476\r\n    var3476!val!1)\r\n  (define-fun var32 () Int\r\n    (hashCode/-467973558 (value/-33675711 var22)))\r\n  (define-fun var521 () String\r\n    (value/-33675711 var22))\r\n  (define-fun var22 () var3476\r\n    var3476!val!0)\r\n  (define-fun value/-33675711 ((x!0 var3476)) String\r\n    \"\")\r\n  (define-fun hashCode/-467973558 ((x!0 String)) Int\r\n    0)\r\n)\r\n(error \"line 19 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1634304,
            "run_time": 0.07839608192443848,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3476 is 2\r\n; rep: (as @var3476_0 var3476)\r\n; rep: (as @var3476_1 var3476)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun value/-33675711 ((BOUND_VARIABLE_417 var3476)) String \"\")\r\n(define-fun hashCode/-467973558 ((BOUND_VARIABLE_420 String)) Int 0)\r\n(define-fun null-var3476 () var3476 (as @var3476_0 var3476))\r\n(define-fun var22 () var3476 (as @var3476_1 var3476))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34455552,
            "run_time": 0.09085965156555176,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3476:\n  ;;   var3476!val!0 var3476!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3476!val!0 () var3476)\n  (declare-fun var3476!val!1 () var3476)\n  ;; cardinality constraint:\n  (forall ((x var3476)) (or (= x var3476!val!0) (= x var3476!val!1)))\n  ;; -----------\n  (define-fun null-var3476 () var3476\n    var3476!val!1)\n  (define-fun var521 () String\n    (value/-33675711 var22))\n  (define-fun var32 () Int\n    (hashCode/-467973558 (value/-33675711 var22)))\n  (define-fun var22 () var3476\n    var3476!val!0)\n  (define-fun value/-33675711 ((x!0 var3476)) String\n    \"\")\n  (define-fun hashCode/-467973558 ((x!0 String)) Int\n    0)\n)\n(error \"line 19 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 130158592,
            "run_time": 0.823840856552124,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var22 () var3476 var3476!4)\r\n  (define-fun null-var3476 () var3476 var3476!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: int hashCode()>"
        ],
        "api_count": {
            "<java.lang.String: int hashCode()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.LazilyParsedNumber",
            "$r1 = r0.<com.google.gson.internal.LazilyParsedNumber: java.lang.String value>",
            "$i0 = virtualinvoke $r1.<java.lang.String: int hashCode()>()",
            "return $i0"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.ConstructorConstructor$9__construct__-1518028194\\412.smt2",
        "z3": {
            "memory": 31485952,
            "run_time": 0.046114206314086914,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3622:\r\n  ;;   var3622!val!0 var3622!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3622!val!0 () var3622)\r\n  (declare-fun var3622!val!1 () var3622)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3622)) (or (= x var3622!val!0) (= x var3622!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3482:\r\n  ;;   var3482!val!1 var3482!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3482!val!1 () var3482)\r\n  (declare-fun var3482!val!0 () var3482)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3482)) (or (= x var3482!val!1) (= x var3482!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var3622 () var3622\r\n    var3622!val!1)\r\n  (define-fun var36 () var1282\r\n    (val$constructor/1758936235 var805))\r\n  (define-fun var3445 () (Array Int var2004)\r\n    arr-var2004-init)\r\n  (define-fun var460 () var3622\r\n    var3622!val!0)\r\n  (define-fun var3929 () var3339\r\n    (var2621_createExceptionForUnexpectedIllegalAccess/41780030 var460))\r\n  (define-fun null-var3482 () var3482\r\n    var3482!val!1)\r\n  (define-fun var805 () var3482\r\n    var3482!val!0)\r\n  (define-fun arr-var2004-init () (Array Int var2004)\r\n    ((as const (Array Int var2004)) var2004!val!0))\r\n  (define-fun val$constructor/1758936235 ((x!0 var3482)) var1282\r\n    var1282!val!0)\r\n  (define-fun var2621_createExceptionForUnexpectedIllegalAccess/41780030 ((x!0\r\n    var3622)) var3339\r\n    var3339!val!0)\r\n)\r\n(error \"line 29 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1744896,
            "run_time": 0.07684731483459473,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3482 is 2\r\n; rep: (as @var3482_0 var3482)\r\n; rep: (as @var3482_1 var3482)\r\n; cardinality of var1282 is 1\r\n; rep: (as @var1282_0 var1282)\r\n; cardinality of var2004 is 1\r\n; rep: (as @var2004_0 var2004)\r\n; cardinality of var3622 is 2\r\n; rep: (as @var3622_0 var3622)\r\n; rep: (as @var3622_1 var3622)\r\n; cardinality of var3339 is 1\r\n; rep: (as @var3339_0 var3339)\r\n; cardinality of var2621 is 1\r\n; rep: (as @var2621_0 var2621)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun val$constructor/1758936235 ((BOUND_VARIABLE_442 var3482)) var1282 (as @var1282_0 var1282))\r\n(define-fun arr-var2004-init () (Array Int var2004) ((as const (Array Int var2004)) (as @var2004_0 var2004)))\r\n(define-fun var2621_createExceptionForUnexpectedIllegalAccess/41780030 ((BOUND_VARIABLE_447 var3622)) var3339 (as @var3339_0 var3339))\r\n(define-fun null-var3482 () var3482 (as @var3482_0 var3482))\r\n(define-fun null-var3622 () var3622 (as @var3622_0 var3622))\r\n(define-fun var805 () var3482 (as @var3482_1 var3482))\r\n(define-fun var460 () var3622 (as @var3622_1 var3622))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34365440,
            "run_time": 0.06074404716491699,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3622:\n  ;;   var3622!val!0 var3622!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3622!val!0 () var3622)\n  (declare-fun var3622!val!1 () var3622)\n  ;; cardinality constraint:\n  (forall ((x var3622)) (or (= x var3622!val!0) (= x var3622!val!1)))\n  ;; -----------\n  ;; universe for var3482:\n  ;;   var3482!val!1 var3482!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3482!val!1 () var3482)\n  (declare-fun var3482!val!0 () var3482)\n  ;; cardinality constraint:\n  (forall ((x var3482)) (or (= x var3482!val!1) (= x var3482!val!0)))\n  ;; -----------\n  (define-fun null-var3622 () var3622\n    var3622!val!1)\n  (define-fun var3445 () (Array Int var2004)\n    arr-var2004-init)\n  (define-fun var460 () var3622\n    var3622!val!0)\n  (define-fun var36 () var1282\n    (val$constructor/1758936235 var805))\n  (define-fun null-var3482 () var3482\n    var3482!val!1)\n  (define-fun var3929 () var3339\n    (var2621_createExceptionForUnexpectedIllegalAccess/41780030 var460))\n  (define-fun var805 () var3482\n    var3482!val!0)\n  (define-fun arr-var2004-init () (Array Int var2004)\n    ((as const (Array Int var2004)) var2004!val!0))\n  (define-fun val$constructor/1758936235 ((x!0 var3482)) var1282\n    var1282!val!0)\n  (define-fun var2621_createExceptionForUnexpectedIllegalAccess/41780030 ((x!0\n    var3622)) var3339\n    var3339!val!0)\n)\n(error \"line 29 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140865536,
            "run_time": 0.8397905826568604,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var460 () var3622 var3622!8)\r\n  (define-fun var805 () var3482 var3482!6)\r\n  (define-fun null-var3622 () var3622 var3622!4)\r\n  (define-fun null-var3482 () var3482 var3482!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 3,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.ConstructorConstructor$9",
            "$r2 = r0.<com.google.gson.internal.ConstructorConstructor$9: java.lang.reflect.Constructor val$constructor>",
            "$r1 = newarray (java.lang.Object)[0]",
            "$r3 := @caughtexception",
            "$r4 = staticinvoke <com.google.gson.internal.reflect.ReflectionHelper: java.lang.RuntimeException createExceptionForUnexpectedIllegalAccess(java.lang.IllegalAccessException)>($r3)",
            "throw $r4"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.PreJava9DateFormatProvider__getDatePartOfDateTimePattern__-1994372812\\436.smt2",
        "z3": {
            "memory": 32436224,
            "run_time": 0.060805559158325195,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3444 () String\r\n    (str.++ var472!1 \"Unknown DateFormat style: \" (str.from_int var3616)))\r\n  (define-fun var627 () String\r\n    (str.++ var472!1 \"Unknown DateFormat style: \"))\r\n  (define-fun var664 () var1125\r\n    var1125-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    5)\r\n  (define-fun var627!1 () String\r\n    \"Unknown DateFormat style: \")\r\n  (define-fun var472 () String\r\n    String-init)\r\n  (define-fun var2477 () String\r\n    (str.++ var472!1 \"Unknown DateFormat style: \" (str.from_int var3616)))\r\n  (define-fun var3616 () Int\r\n    4)\r\n  (define-fun var472!2 () String\r\n    \"Unknown DateFormat style: \")\r\n  (define-fun var472!1 () String\r\n    \"\")\r\n  (define-fun var2477!1 () String\r\n    \"\")\r\n  (define-fun var1125-init () var1125\r\n    var1125!val!0)\r\n  (define-fun var664!1 () var1125\r\n    var1125!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var1125) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 44 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1728512,
            "run_time": 0.029563188552856445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1125 is 1\r\n; rep: (as @var1125_0 var1125)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1125-init () var1125 (as @var1125_0 var1125))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_972 var1125) (BOUND_VARIABLE_973 String)) void (as @void_0 void))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var3616 () Int (- 1))\r\n(define-fun var472!1 () String \"\")\r\n(define-fun var472!2 () String \"Unknown DateFormat style: \")\r\n(define-fun var627!1 () String \"Unknown DateFormat style: \")\r\n(define-fun var664!1 () var1125 (as @var1125_0 var1125))\r\n(define-fun var2477!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36122624,
            "run_time": 0.13817119598388672,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3444 () String\n    (str.++ var472!1 \"Unknown DateFormat style: \" (str.from_int var3616)))\n  (define-fun var627!1 () String\n    \"Unknown DateFormat style: \")\n  (define-fun var627 () String\n    (str.++ var472!1 \"Unknown DateFormat style: \"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var472 () String\n    String-init)\n  (define-fun var2477 () String\n    (str.++ var472!1 \"Unknown DateFormat style: \" (str.from_int var3616)))\n  (define-fun null-Int () Int\n    5)\n  (define-fun var664 () var1125\n    var1125-init)\n  (define-fun var472!1 () String\n    \"\")\n  (define-fun var3616 () Int\n    4)\n  (define-fun var472!2 () String\n    \"Unknown DateFormat style: \")\n  (define-fun var2477!1 () String\n    \"\")\n  (define-fun var1125-init () var1125\n    var1125!val!0)\n  (define-fun var664!1 () var1125\n    var1125!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var1125) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 44 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179838976,
            "run_time": 1.0735459327697754,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var627!1 () String \"Unknown DateFormat style: \")\r\n  (define-fun var472!2 () String \"Unknown DateFormat style: \")\r\n  (define-fun var472!1 () String \"\")\r\n  (define-fun var3616 () Int 4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun abbrev_105 ((x!0 Int)) String (ite (= x!0 0) \"Unknown DateFormat style: \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "i0 := @parameter0: int",
            "tableswitch(i0) {     case 0: goto return \"EEEE, MMMM d, yyyy\";     case 1: goto return \"MMMM d, yyyy\";     case 2: goto return \"MMM d, yyyy\";     case 3: goto return \"M/d/yy\";     default: goto $r0 = new java.lang.IllegalArgumentException; }",
            "$r0 = new java.lang.IllegalArgumentException",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unknown DateFormat style: \")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.reflect.ReflectionHelper__appendExecutableParameters__855155441\\282.smt2",
        "z3": {
            "memory": 30662656,
            "run_time": 0.07631134986877441,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 43 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.01604914665222168,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32837632,
            "run_time": 0.07758808135986328,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 43 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 142749696,
            "run_time": 0.8398542404174805,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 2
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.reflect.AccessibleObject",
            "r0 := @parameter1: java.lang.StringBuilder",
            "virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40)",
            "$z0 = r1 instanceof java.lang.reflect.Method",
            "if $z0 == 0 goto $r2 = (java.lang.reflect.Constructor) r1",
            "$r6 = (java.lang.reflect.Method) r1",
            "$r7 = virtualinvoke $r6.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>()",
            "goto [?= r3 = $r7]",
            "r3 = $r7",
            "i0 = 0",
            "$i1 = lengthof r3",
            "if i0 >= $i1 goto virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)",
            "virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.ConstructorConstructor$9__construct__-1518028194\\372.smt2",
        "z3": {
            "memory": 31924224,
            "run_time": 0.06081080436706543,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var39:\r\n  ;;   var39!val!1 var39!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var39!val!1 () var39)\r\n  (declare-fun var39!val!0 () var39)\r\n  ;; cardinality constraint:\r\n  (forall ((x var39)) (or (= x var39!val!1) (= x var39!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1785:\r\n  ;;   var1785!val!0 var1785!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1785!val!0 () var1785)\r\n  (declare-fun var1785!val!1 () var1785)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1785)) (or (= x var1785!val!0) (= x var1785!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var39 () var39\r\n    var39!val!1)\r\n  (define-fun var2815 () var1785\r\n    var1785!val!0)\r\n  (define-fun var2505 () var3128\r\n    var3128-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2777 () String\r\n    String-init)\r\n  (define-fun var3922 () String\r\n    (str.++ var2777!1 \"Failed to invoke constructor '\"))\r\n  (define-fun var2430 () var1774\r\n    (val$constructor/1758936235 var538))\r\n  (define-fun var2973 () var1774\r\n    (val$constructor/1758936235 var538))\r\n  (define-fun var1695 () String\r\n    (var403_constructorToString/1631520055 (val$constructor/1758936235 var538)))\r\n  (define-fun var2755 () String\r\n    (str.++ var2777!1\r\n        \"Failed to invoke constructor '\"\r\n        (var403_constructorToString/1631520055\r\n          (val$constructor/1758936235 var538))))\r\n  (define-fun var3614 () String\r\n    (str.++ var2777!1\r\n        \"Failed to invoke constructor '\"\r\n        (var403_constructorToString/1631520055\r\n          (val$constructor/1758936235 var538))\r\n        \"' with no args\"))\r\n  (define-fun null-var1785 () var1785\r\n    var1785!val!1)\r\n  (define-fun var1336 () (Array Int var610)\r\n    arr-var610-init)\r\n  (define-fun var886 () String\r\n    (str.++ var2777!1\r\n        \"Failed to invoke constructor '\"\r\n        (var403_constructorToString/1631520055\r\n          (val$constructor/1758936235 var538))\r\n        \"' with no args\"))\r\n  (define-fun var538 () var39\r\n    var39!val!0)\r\n  (define-fun var2755!1 () String\r\n    \"Failed to invoke constructor '' with no args\")\r\n  (define-fun var2777!1 () String\r\n    \"\")\r\n  (define-fun var3922!1 () String\r\n    \"Failed to invoke constructor '\")\r\n  (define-fun var2777!2 () String\r\n    \"Failed to invoke constructor '\")\r\n  (define-fun var3128-init () var3128\r\n    var3128!val!0)\r\n  (define-fun arr-var610-init () (Array Int var610)\r\n    ((as const (Array Int var610)) var610!val!0))\r\n  (define-fun var886!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2505!1 () var3128\r\n    var3128!val!0)\r\n  (define-fun var2815!1 () var1785\r\n    var1785!val!0)\r\n  (define-fun val$constructor/1758936235 ((x!0 var39)) var1774\r\n    var1774!val!0)\r\n  (define-fun var403_constructorToString/1631520055 ((x!0 var1774)) String\r\n    \"\")\r\n  (define-fun cast-from-var1785-to-var1650 ((x!0 var1785)) var1650\r\n    var1650!val!0)\r\n  (define-fun <init>/1642269841 ((x!0 var3128) (x!1 String) (x!2 var1650)) void\r\n    void!val!0)\r\n)\r\n(error \"line 64 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11530240,
            "run_time": 0.03075385093688965,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var39 is 2\r\n; rep: (as @var39_0 var39)\r\n; rep: (as @var39_1 var39)\r\n; cardinality of var1774 is 1\r\n; rep: (as @var1774_0 var1774)\r\n; cardinality of var610 is 1\r\n; rep: (as @var610_0 var610)\r\n; cardinality of var1785 is 2\r\n; rep: (as @var1785_0 var1785)\r\n; rep: (as @var1785_1 var1785)\r\n; cardinality of var3128 is 1\r\n; rep: (as @var3128_0 var3128)\r\n; cardinality of var403 is 1\r\n; rep: (as @var403_0 var403)\r\n; cardinality of var1650 is 1\r\n; rep: (as @var1650_0 var1650)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun val$constructor/1758936235 ((BOUND_VARIABLE_580 var39)) var1774 (as @var1774_0 var1774))\r\n(define-fun arr-var610-init () (Array Int var610) ((as const (Array Int var610)) (as @var610_0 var610)))\r\n(define-fun var3128-init () var3128 (as @var3128_0 var3128))\r\n(define-fun String-init () String \"\")\r\n(define-fun var403_constructorToString/1631520055 ((BOUND_VARIABLE_585 var1774)) String \"\")\r\n(define-fun <init>/1642269841 ((BOUND_VARIABLE_588 var3128) (BOUND_VARIABLE_589 String) (BOUND_VARIABLE_590 var1650)) void (as @void_0 void))\r\n(define-fun cast-from-var1785-to-var1650 ((BOUND_VARIABLE_593 var1785)) var1650 (as @var1650_0 var1650))\r\n(define-fun null-var39 () var39 (as @var39_0 var39))\r\n(define-fun null-var1785 () var1785 (as @var1785_0 var1785))\r\n(define-fun var538 () var39 (as @var39_1 var39))\r\n(define-fun var2815 () var1785 (as @var1785_1 var1785))\r\n(define-fun var2777!1 () String \"\")\r\n(define-fun var2777!2 () String \"Failed to invoke constructor '\")\r\n(define-fun var3922!1 () String \"Failed to invoke constructor '\")\r\n(define-fun var2755!1 () String \"Failed to invoke constructor '' with no args\")\r\n(define-fun var2505!1 () var3128 (as @var3128_0 var3128))\r\n(define-fun var886!1 () String \"\")\r\n(define-fun var2815!1 () var1785 (as @var1785_0 var1785))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34754560,
            "run_time": 0.07675647735595703,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var39:\n  ;;   var39!val!1 var39!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var39!val!1 () var39)\n  (declare-fun var39!val!0 () var39)\n  ;; cardinality constraint:\n  (forall ((x var39)) (or (= x var39!val!1) (= x var39!val!0)))\n  ;; -----------\n  ;; universe for var1785:\n  ;;   var1785!val!0 var1785!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1785!val!0 () var1785)\n  (declare-fun var1785!val!1 () var1785)\n  ;; cardinality constraint:\n  (forall ((x var1785)) (or (= x var1785!val!0) (= x var1785!val!1)))\n  ;; -----------\n  (define-fun null-var39 () var39\n    var39!val!1)\n  (define-fun var2815 () var1785\n    var1785!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2777 () String\n    String-init)\n  (define-fun var3922 () String\n    (str.++ var2777!1 \"Failed to invoke constructor '\"))\n  (define-fun var1695 () String\n    (var403_constructorToString/1631520055 (val$constructor/1758936235 var538)))\n  (define-fun var2755 () String\n    (str.++ var2777!1\n        \"Failed to invoke constructor '\"\n        (var403_constructorToString/1631520055\n          (val$constructor/1758936235 var538))))\n  (define-fun var3614 () String\n    (str.++ var2777!1\n        \"Failed to invoke constructor '\"\n        (var403_constructorToString/1631520055\n          (val$constructor/1758936235 var538))\n        \"' with no args\"))\n  (define-fun null-var1785 () var1785\n    var1785!val!1)\n  (define-fun var886 () String\n    (str.++ var2777!1\n        \"Failed to invoke constructor '\"\n        (var403_constructorToString/1631520055\n          (val$constructor/1758936235 var538))\n        \"' with no args\"))\n  (define-fun var1336 () (Array Int var610)\n    arr-var610-init)\n  (define-fun var2505 () var3128\n    var3128-init)\n  (define-fun var2973 () var1774\n    (val$constructor/1758936235 var538))\n  (define-fun var538 () var39\n    var39!val!0)\n  (define-fun var2430 () var1774\n    (val$constructor/1758936235 var538))\n  (define-fun var2755!1 () String\n    \"Failed to invoke constructor '' with no args\")\n  (define-fun var2777!1 () String\n    \"\")\n  (define-fun var3922!1 () String\n    \"Failed to invoke constructor '\")\n  (define-fun var2777!2 () String\n    \"Failed to invoke constructor '\")\n  (define-fun var3128-init () var3128\n    var3128!val!0)\n  (define-fun arr-var610-init () (Array Int var610)\n    ((as const (Array Int var610)) var610!val!0))\n  (define-fun var886!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2505!1 () var3128\n    var3128!val!0)\n  (define-fun var2815!1 () var1785\n    var1785!val!0)\n  (define-fun val$constructor/1758936235 ((x!0 var39)) var1774\n    var1774!val!0)\n  (define-fun var403_constructorToString/1631520055 ((x!0 var1774)) String\n    \"\")\n  (define-fun cast-from-var1785-to-var1650 ((x!0 var1785)) var1650\n    var1650!val!0)\n  (define-fun <init>/1642269841 ((x!0 var3128) (x!1 String) (x!2 var1650)) void\n    void!val!0)\n)\n(error \"line 64 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173617152,
            "run_time": 1.1013665199279785,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1785/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.ConstructorConstructor$9__construct__-1518028194\\372.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2755!1 =\r\n     concat(all_34_3, \"\\u{0}27 with no args\")\r\n   var3922!1 =\r\n     concat(\"Failed to invoke constructor \\u{0}27\", all_31_2)\r\n   all_34_3 =\r\n     concat(\"Failed to invoke constructor \\u{0}27\", all_31_2)\r\n\r\n813ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.ConstructorConstructor$9",
            "$r2 = r0.<com.google.gson.internal.ConstructorConstructor$9: java.lang.reflect.Constructor val$constructor>",
            "$r1 = newarray (java.lang.Object)[0]",
            "$r15 := @caughtexception",
            "$r16 = new java.lang.RuntimeException",
            "$r17 = new java.lang.StringBuilder",
            "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()",
            "$r20 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to invoke constructor \\'\")",
            "$r18 = r0.<com.google.gson.internal.ConstructorConstructor$9: java.lang.reflect.Constructor val$constructor>",
            "$r19 = staticinvoke <com.google.gson.internal.reflect.ReflectionHelper: java.lang.String constructorToString(java.lang.reflect.Constructor)>($r18)",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' with no args\")",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r16.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r23, $r15)",
            "throw $r16"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.LinkedTreeMap$Node__toString__831126327\\1283.smt2",
        "z3": {
            "memory": 31436800,
            "run_time": 0.04454541206359863,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1186:\r\n  ;;   var1186!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1186!val!0 () var1186)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1186)) (= x var1186!val!0))\r\n  ;; -----------\r\n  ;; universe for var3100:\r\n  ;;   var3100!val!0 var3100!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3100!val!0 () var3100)\r\n  (declare-fun var3100!val!1 () var3100)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3100)) (or (= x var3100!val!0) (= x var3100!val!1)))\r\n  ;; -----------\r\n  (define-fun var2741 () var1186\r\n    (value/1049469911 var2406))\r\n  (define-fun var3826 () String\r\n    (append/-1031950772\r\n  (str.++ (append/-1031950772 var2113!1 (key/1049469911 var2406)) \"=\")\r\n  (value/1049469911 var2406)))\r\n  (define-fun var2691 () String\r\n    (append/-1031950772\r\n  (str.++ (append/-1031950772 var2113!1 (key/1049469911 var2406)) \"=\")\r\n  (value/1049469911 var2406)))\r\n  (define-fun var3539 () String\r\n    (str.++ (append/-1031950772 var2113!1 (key/1049469911 var2406)) \"=\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1903 () var1186\r\n    (key/1049469911 var2406))\r\n  (define-fun var3111 () String\r\n    (append/-1031950772 var2113!1 (key/1049469911 var2406)))\r\n  (define-fun var2113 () String\r\n    String-init)\r\n  (define-fun var2406 () var3100\r\n    var3100!val!0)\r\n  (define-fun null-var3100 () var3100\r\n    var3100!val!1)\r\n  (define-fun var3539!1 () String\r\n    \"=\")\r\n  (define-fun var2113!1 () String\r\n    \"\")\r\n  (define-fun var3111!1 () String\r\n    \"=\")\r\n  (define-fun var2113!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun key/1049469911 ((x!0 var3100)) var1186\r\n    var1186!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1186)) String\r\n    \"\")\r\n  (define-fun value/1049469911 ((x!0 var3100)) var1186\r\n    var1186!val!0)\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12271616,
            "run_time": 0.03206157684326172,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3100 is 2\r\n; rep: (as @var3100_0 var3100)\r\n; rep: (as @var3100_1 var3100)\r\n; cardinality of var1186 is 1\r\n; rep: (as @var1186_0 var1186)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun key/1049469911 ((_arg_1 var3100)) var1186 (as @var1186_0 var1186))\r\n(define-fun append/-1031950772 ((_arg_1 String) (_arg_2 var1186)) String \"\")\r\n(define-fun value/1049469911 ((BOUND_VARIABLE_1055 var3100)) var1186 (as @var1186_0 var1186))\r\n(define-fun null-var3100 () var3100 (as @var3100_0 var3100))\r\n(define-fun var2406 () var3100 (as @var3100_1 var3100))\r\n(define-fun var2113!1 () String \"\")\r\n(define-fun var2113!2 () String \"\")\r\n(define-fun var3111!1 () String \"=\")\r\n(define-fun var3539!1 () String \"=\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34906112,
            "run_time": 0.09454655647277832,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 42 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165208064,
            "run_time": 1.0243356227874756,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3100/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.LinkedTreeMap$Node__toString__831126327\\1283.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3111!1 =\r\n     concat(all_14_2, \"=\")\r\n   var3539!1 =\r\n     concat(all_17_2, rhs)\r\n   all_17_2 =\r\n     concat(all_14_2, \"=\")\r\n\r\n730ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: com.google.gson.internal.LinkedTreeMap$Node",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = r1.<com.google.gson.internal.LinkedTreeMap$Node: java.lang.Object key>",
            "$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2)",
            "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"=\")",
            "$r4 = r1.<com.google.gson.internal.LinkedTreeMap$Node: java.lang.Object value>",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.ConstructorConstructor__checkInstantiable__789342880\\114.smt2",
        "z3": {
            "memory": 31580160,
            "run_time": 0.06144547462463379,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var2341 () String\r\n    (str.++ var306!1\r\n        \"Interfaces can't be instantiated! Register an InstanceCreator or a TypeAdapter for this type. Interface name: \"\r\n        (getName/-1958580599 var532)))\r\n  (define-fun var172 () Bool\r\n    (var1208_isInterface/-1826253995 (getModifiers/698981592 var532)))\r\n  (define-fun var306 () String\r\n    String-init)\r\n  (define-fun var573 () String\r\n    (str.++ var306!1\r\n        \"Interfaces can't be instantiated! Register an InstanceCreator or a TypeAdapter for this type. Interface name: \"))\r\n  (define-fun var532 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var3343 () String\r\n    (getName/-1958580599 var532))\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var238 () String\r\n    (str.++ var306!1\r\n        \"Interfaces can't be instantiated! Register an InstanceCreator or a TypeAdapter for this type. Interface name: \"\r\n        (getName/-1958580599 var532)))\r\n  (define-fun var739 () Int\r\n    (getModifiers/698981592 var532))\r\n  (define-fun var306!2 () String\r\n    \"Interfaces can't be instantiated! Register an InstanceCreator or a TypeAdapter for this type. Interface name: \")\r\n  (define-fun var573!1 () String\r\n    \"Interfaces can't be instantiated! Register an InstanceCreator or a TypeAdapter for this type. Interface name: \")\r\n  (define-fun var306!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getModifiers/698981592 ((x!0 ClassObject)) Int\r\n    0)\r\n  (define-fun var1208_isInterface/-1826253995 ((x!0 Int)) Bool\r\n    true)\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.047064781188964844,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1208 is 1\r\n; rep: (as @var1208_0 var1208)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun getModifiers/698981592 ((_arg_1 ClassObject)) Int 0)\r\n(define-fun var1208_isInterface/-1826253995 ((_arg_1 Int)) Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_561 ClassObject)) String \"\")\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var532 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var306!1 () String \"\")\r\n(define-fun var306!2 () String \"Interfaces can't be instantiated! Register an InstanceCreator or a TypeAdapter for this type. Interface name: \")\r\n(define-fun var573!1 () String \"Interfaces can't be instantiated! Register an InstanceCreator or a TypeAdapter for this type. Interface name: \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36032512,
            "run_time": 0.07815670967102051,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  (define-fun var306 () String\n    String-init)\n  (define-fun var739 () Int\n    (getModifiers/698981592 var532))\n  (define-fun var3343 () String\n    (getName/-1958580599 var532))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var238 () String\n    (str.++ var306!1\n        \"Interfaces can't be instantiated! Register an InstanceCreator or a TypeAdapter for this type. Interface name: \"\n        (getName/-1958580599 var532)))\n  (define-fun var172 () Bool\n    (var1208_isInterface/-1826253995 (getModifiers/698981592 var532)))\n  (define-fun var532 () ClassObject\n    ClassObject!val!0)\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var2341 () String\n    (str.++ var306!1\n        \"Interfaces can't be instantiated! Register an InstanceCreator or a TypeAdapter for this type. Interface name: \"\n        (getName/-1958580599 var532)))\n  (define-fun var573 () String\n    (str.++ var306!1\n        \"Interfaces can't be instantiated! Register an InstanceCreator or a TypeAdapter for this type. Interface name: \"))\n  (define-fun var306!2 () String\n    \"Interfaces can't be instantiated! Register an InstanceCreator or a TypeAdapter for this type. Interface name: \")\n  (define-fun var573!1 () String\n    \"Interfaces can't be instantiated! Register an InstanceCreator or a TypeAdapter for this type. Interface name: \")\n  (define-fun var306!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun getModifiers/698981592 ((x!0 ClassObject)) Int\n    0)\n  (define-fun var1208_isInterface/-1826253995 ((x!0 Int)) Bool\n    true)\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n)\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167350272,
            "run_time": 1.1181857585906982,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: ClassObject/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.ConstructorConstructor__checkInstantiable__789342880\\114.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var573!1 =\r\n     concat(\"Interfaces can\\u{0}27t be instantiated! Register an InstanceCreator or a TypeAdapter for this type. Interface name: \", all_21_2)\r\n\r\n815ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Class",
            "i0 = virtualinvoke r0.<java.lang.Class: int getModifiers()>()",
            "$z0 = staticinvoke <java.lang.reflect.Modifier: boolean isInterface(int)>(i0)",
            "if $z0 == 0 goto $z1 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>(i0)",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Interfaces can\\'t be instantiated! Register an InstanceCreator or a TypeAdapter for this type. Interface name: \")",
            "$r7 = virtualinvoke r0.<java.lang.Class: java.lang.String getName()>()",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r10"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.PreJava9DateFormatProvider__getTimePartOfDateTimePattern__-1142756683\\524.smt2",
        "z3": {
            "memory": 32403456,
            "run_time": 0.05930304527282715,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2389 () String\r\n    (str.++ var2477!1 \"Unknown DateFormat style: \" (str.from_int var245)))\r\n  (define-fun var1717 () String\r\n    (str.++ var2477!1 \"Unknown DateFormat style: \"))\r\n  (define-fun var2105 () String\r\n    (str.++ var2477!1 \"Unknown DateFormat style: \" (str.from_int var245)))\r\n  (define-fun var1717!1 () String\r\n    \"Unknown DateFormat style: \")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-Int () Int\r\n    5)\r\n  (define-fun var1139 () var2994\r\n    var2994-init)\r\n  (define-fun var2477 () String\r\n    String-init)\r\n  (define-fun var245 () Int\r\n    4)\r\n  (define-fun var2477!2 () String\r\n    \"Unknown DateFormat style: \")\r\n  (define-fun var2477!1 () String\r\n    \"\")\r\n  (define-fun var2994-init () var2994\r\n    var2994!val!0)\r\n  (define-fun var1139!1 () var2994\r\n    var2994!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2389!1 () String\r\n    \"\")\r\n  (define-fun <init>/875830710 ((x!0 var2994) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 44 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12013568,
            "run_time": 0.02946329116821289,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2994 is 1\r\n; rep: (as @var2994_0 var2994)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2994-init () var2994 (as @var2994_0 var2994))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_972 var2994) (BOUND_VARIABLE_973 String)) void (as @void_0 void))\r\n(define-fun null-Int () Int (- 2))\r\n(define-fun var245 () Int (- 1))\r\n(define-fun var2477!1 () String \"\")\r\n(define-fun var2477!2 () String \"Unknown DateFormat style: \")\r\n(define-fun var1717!1 () String \"Unknown DateFormat style: \")\r\n(define-fun var1139!1 () var2994 (as @var2994_0 var2994))\r\n(define-fun var2389!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36126720,
            "run_time": 0.12258553504943848,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var1139 () var2994\n    var2994-init)\n  (define-fun var1717 () String\n    (str.++ var2477!1 \"Unknown DateFormat style: \"))\n  (define-fun var2105 () String\n    (str.++ var2477!1 \"Unknown DateFormat style: \" (str.from_int var245)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2477 () String\n    String-init)\n  (define-fun null-Int () Int\n    5)\n  (define-fun var2477!1 () String\n    \"\")\n  (define-fun var2389 () String\n    (str.++ var2477!1 \"Unknown DateFormat style: \" (str.from_int var245)))\n  (define-fun var1717!1 () String\n    \"Unknown DateFormat style: \")\n  (define-fun var245 () Int\n    4)\n  (define-fun var2477!2 () String\n    \"Unknown DateFormat style: \")\n  (define-fun var2994-init () var2994\n    var2994!val!0)\n  (define-fun var1139!1 () var2994\n    var2994!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2389!1 () String\n    \"\")\n  (define-fun <init>/875830710 ((x!0 var2994) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 44 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180113408,
            "run_time": 1.1826536655426025,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1717!1 () String \"Unknown DateFormat style: \")\r\n  (define-fun var2477!2 () String \"Unknown DateFormat style: \")\r\n  (define-fun var2477!1 () String \"\")\r\n  (define-fun var245 () Int 4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun abbrev_105 ((x!0 Int)) String (ite (= x!0 0) \"Unknown DateFormat style: \" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "i0 := @parameter0: int",
            "tableswitch(i0) {     case 0: goto return \"h:mm:ss a z\";     case 1: goto return \"h:mm:ss a z\";     case 2: goto return \"h:mm:ss a\";     case 3: goto return \"h:mm a\";     default: goto $r0 = new java.lang.IllegalArgumentException; }",
            "$r0 = new java.lang.IllegalArgumentException",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unknown DateFormat style: \")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r4)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.reflect.ReflectionHelper__appendExecutableParameters__855155441\\310.smt2",
        "z3": {
            "memory": 32112640,
            "run_time": 0.058080196380615234,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  ;; universe for var1024:\r\n  ;;   var1024!val!0 var1024!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1024!val!0 () var1024)\r\n  (declare-fun var1024!val!1 () var1024)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1024)) (or (= x var1024!val!0) (= x var1024!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1825:\r\n  ;;   var1825!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1825!val!0 () var1825)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1825)) (= x var1825!val!0))\r\n  ;; -----------\r\n  (define-fun var2858 () Bool\r\n    false)\r\n  (define-fun var1255!1 () String\r\n    \"\")\r\n  (define-fun var1255!2 () String\r\n    \"\")\r\n  (define-fun var3533 () var1024\r\n    var1024!val!0)\r\n  (define-fun null-var1024 () var1024\r\n    var1024!val!1)\r\n  (define-fun var1255 () String\r\n    \"\")\r\n  (define-fun var2096 () (Array Int ClassObject)\r\n    (getParameterTypes/938597008 (cast-from-var1024-to-var1825 var3533)))\r\n  (define-fun var1997 () Int\r\n    (getLength-Arr-ClassObject-1\r\n  (getParameterTypes/938597008 (cast-from-var1024-to-var1825 var3533))))\r\n  (define-fun var254 () var1825\r\n    (cast-from-var1024-to-var1825 var3533))\r\n  (define-fun var3186 () (Array Int ClassObject)\r\n    (getParameterTypes/938597008 (cast-from-var1024-to-var1825 var3533)))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1451 () Int\r\n    0)\r\n  (define-fun getParameterTypes/938597008 ((x!0 var1825)) (Array Int ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\r\n  (define-fun cast-from-var1024-to-var1825 ((x!0 var1024)) var1825\r\n    var1825!val!0)\r\n  (define-fun getLength-Arr-ClassObject-1 ((x!0 (Array Int ClassObject))) Int\r\n    0)\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.030720233917236328,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1024 is 2\r\n; rep: (as @var1024_0 var1024)\r\n; rep: (as @var1024_1 var1024)\r\n; cardinality of var1825 is 1\r\n; rep: (as @var1825_0 var1825)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_750 String) (BOUND_VARIABLE_751 Int)) String \"\")\r\n(define-fun cast-from-var1024-to-var1825 ((_arg_1 var1024)) var1825 (as @var1825_0 var1825))\r\n(define-fun getParameterTypes/938597008 ((_arg_1 var1825)) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun getLength-Arr-ClassObject-1 ((_arg_1 (Array Int ClassObject))) Int 0)\r\n(define-fun null-var1024 () var1024 (as @var1024_0 var1024))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var3533 () var1024 (as @var1024_1 var1024))\r\n(define-fun var1255 () String \"\")\r\n(define-fun var1255!1 () String \"\")\r\n(define-fun var1255!2 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38064128,
            "run_time": 0.15613222122192383,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 42 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164593664,
            "run_time": 1.088068962097168,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.reflect.ReflectionHelper__appendExecutableParameters__855155441\\310.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1255!2 =\r\n     concat(var1255!1, rhs)\r\n   var1255!1 =\r\n     concat(var1255, rhs)\r\n   ... sat\r\n\r\n791ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 2
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.reflect.AccessibleObject",
            "r0 := @parameter1: java.lang.StringBuilder",
            "virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40)",
            "$z0 = r1 instanceof java.lang.reflect.Method",
            "if $z0 == 0 goto $r2 = (java.lang.reflect.Constructor) r1",
            "$r2 = (java.lang.reflect.Constructor) r1",
            "$r7 = virtualinvoke $r2.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>()",
            "r3 = $r7",
            "i0 = 0",
            "$i1 = lengthof r3",
            "if i0 >= $i1 goto virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)",
            "virtualinvoke r0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.reflect.ReflectionHelper__constructorToString__1631520055\\251.smt2",
        "z3": {
            "memory": 31846400,
            "run_time": 0.05293440818786621,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var201:\r\n  ;;   var201!val!1 var201!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var201!val!1 () var201)\r\n  (declare-fun var201!val!0 () var201)\r\n  ;; cardinality constraint:\r\n  (forall ((x var201)) (or (= x var201!val!1) (= x var201!val!0)))\r\n  ;; -----------\r\n  (define-fun var2738 () var201\r\n    var201!val!0)\r\n  (define-fun var2303 () String\r\n    var1315!2)\r\n  (define-fun null-var201 () var201\r\n    var201!val!1)\r\n  (define-fun var3567 () String\r\n    (getName/-1958580599 (getDeclaringClass/729915409 var2738)))\r\n  (define-fun var3252 () ClassObject\r\n    (getDeclaringClass/729915409 var2738))\r\n  (define-fun var1315 () String\r\n    String-init)\r\n  (define-fun var1315!1 () String\r\n    \"\")\r\n  (define-fun var2738!1 () var201\r\n    var201!val!1)\r\n  (define-fun var1315!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getDeclaringClass/729915409 ((x!0 var201)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun var1158_appendExecutableParameters/855155441 ((x!0 var2849)\r\n   (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var201-to-var2849 ((x!0 var201)) var2849\r\n    var2849!val!0)\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.03113269805908203,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var201 is 2\r\n; rep: (as @var201_0 var201)\r\n; rep: (as @var201_1 var201)\r\n; cardinality of var1158 is 1\r\n; rep: (as @var1158_0 var1158)\r\n; cardinality of var2849 is 1\r\n; rep: (as @var2849_0 var2849)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getDeclaringClass/729915409 ((BOUND_VARIABLE_464 var201)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_467 ClassObject)) String \"\")\r\n(define-fun var1158_appendExecutableParameters/855155441 ((BOUND_VARIABLE_470 var2849) (BOUND_VARIABLE_471 String)) void (as @void_0 void))\r\n(define-fun cast-from-var201-to-var2849 ((BOUND_VARIABLE_474 var201)) var2849 (as @var2849_0 var2849))\r\n(define-fun null-var201 () var201 (as @var201_0 var201))\r\n(define-fun var2738 () var201 (as @var201_1 var201))\r\n(define-fun var1315!1 () String \"\")\r\n(define-fun var2738!1 () var201 (as @var201_0 var201))\r\n(define-fun var1315!2 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34705408,
            "run_time": 0.07890176773071289,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var201:\n  ;;   var201!val!1 var201!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var201!val!1 () var201)\n  (declare-fun var201!val!0 () var201)\n  ;; cardinality constraint:\n  (forall ((x var201)) (or (= x var201!val!1) (= x var201!val!0)))\n  ;; -----------\n  (define-fun var2738 () var201\n    var201!val!0)\n  (define-fun var3252 () ClassObject\n    (getDeclaringClass/729915409 var2738))\n  (define-fun null-var201 () var201\n    var201!val!1)\n  (define-fun var1315 () String\n    String-init)\n  (define-fun var2303 () String\n    var1315!2)\n  (define-fun var3567 () String\n    (getName/-1958580599 (getDeclaringClass/729915409 var2738)))\n  (define-fun var1315!1 () String\n    \"\")\n  (define-fun var2738!1 () var201\n    var201!val!1)\n  (define-fun var1315!2 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun getDeclaringClass/729915409 ((x!0 var201)) ClassObject\n    ClassObject!val!0)\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n  (define-fun var1158_appendExecutableParameters/855155441 ((x!0 var2849)\n   (x!1 String)) void\n    void!val!0)\n  (define-fun cast-from-var201-to-var2849 ((x!0 var201)) var2849\n    var2849!val!0)\n)\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 157458432,
            "run_time": 0.9164447784423828,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1315!1 () String \"\\u{0}\")\r\n  (define-fun var2738 () var201 var201!4)\r\n  (define-fun null-var201 () var201 var201!2)\r\n  (define-fun ClassObject!20 () ClassObject (getDeclaringClass/729915409 var201!4))\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String (ite (= x!0 ClassObject!20) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.reflect.Constructor",
            "$r0 = new java.lang.StringBuilder",
            "$r2 = virtualinvoke r1.<java.lang.reflect.Constructor: java.lang.Class getDeclaringClass()>()",
            "$r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>()",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>($r3)",
            "staticinvoke <com.google.gson.internal.reflect.ReflectionHelper: void appendExecutableParameters(java.lang.reflect.AccessibleObject,java.lang.StringBuilder)>(r1, $r0)",
            "$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.ReflectionAccessFilterHelper__isJavaType__1515530159\\264.smt2",
        "z3": {
            "memory": 32141312,
            "run_time": 0.06760001182556152,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1498 () String\r\n    \"java.\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3094 () Bool\r\n    (str.prefixof \"java.\" var1498))\r\n  (define-fun var2761 () Bool\r\n    (ite (= 1 1) true false))\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12062720,
            "run_time": 0.03063201904296875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3508 is 1\r\n; rep: (as @var3508_0 var3508)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"\")\r\n(define-fun var1498 () String \"java.\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37380096,
            "run_time": 0.07800006866455078,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1498 () String\n    \"java.\\u{0}\")\n  (define-fun var3094 () Bool\n    (str.prefixof \"java.\" var1498))\n  (define-fun var2761 () Bool\n    (ite (= 1 1) true false))\n)\n(error \"line 22 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 144453632,
            "run_time": 0.9318513870239258,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1498 () String \"java.\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"java.\")",
            "if $z0 != 0 goto $z2 = 1",
            "$z2 = 1",
            "goto [?= return $z2]",
            "return $z2"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.reflect.ReflectionHelper__makeAccessible__-682759631\\163.smt2",
        "z3": {
            "memory": 31924224,
            "run_time": 0.08003973960876465,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3018:\r\n  ;;   var3018!val!1 var3018!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3018!val!1 () var3018)\r\n  (declare-fun var3018!val!0 () var3018)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3018)) (or (= x var3018!val!1) (= x var3018!val!0)))\r\n  ;; -----------\r\n  ;; universe for var785:\r\n  ;;   var785!val!0 var785!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var785!val!0 () var785)\r\n  (declare-fun var785!val!1 () var785)\r\n  ;; cardinality constraint:\r\n  (forall ((x var785)) (or (= x var785!val!0) (= x var785!val!1)))\r\n  ;; -----------\r\n  (define-fun var3661 () var785\r\n    var785!val!0)\r\n  (define-fun var3580 () String\r\n    (str.++ var1911!1\r\n        \"Failed making \"\r\n        (var1938_getAccessibleObjectDescription/-550785423\r\n          var371\r\n          (ite (= 1 0) true false))\r\n        \" accessible; either increase its visibility or write a custom TypeAdapter for its declaring type.\"))\r\n  (define-fun var371 () var3018\r\n    var3018!val!0)\r\n  (define-fun var849 () String\r\n    (str.++ var1911!1 \"Failed making \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1052 () String\r\n    (str.++ var1911!1\r\n        \"Failed making \"\r\n        (var1938_getAccessibleObjectDescription/-550785423\r\n          var371\r\n          (ite (= 1 0) true false))))\r\n  (define-fun var867 () String\r\n    (str.++ var1911!1\r\n        \"Failed making \"\r\n        (var1938_getAccessibleObjectDescription/-550785423\r\n          var371\r\n          (ite (= 1 0) true false))\r\n        \" accessible; either increase its visibility or write a custom TypeAdapter for its declaring type.\"))\r\n  (define-fun var850 () var1901\r\n    var1901-init)\r\n  (define-fun null-var3018 () var3018\r\n    var3018!val!1)\r\n  (define-fun var1911 () String\r\n    String-init)\r\n  (define-fun null-var785 () var785\r\n    var785!val!1)\r\n  (define-fun var3426 () String\r\n    (var1938_getAccessibleObjectDescription/-550785423\r\n  var371\r\n  (ite (= 1 0) true false)))\r\n  (define-fun var849!1 () String\r\n    \"Failed making \")\r\n  (define-fun var1911!1 () String\r\n    \"\")\r\n  (define-fun var1911!2 () String\r\n    \"Failed making \")\r\n  (define-fun var1052!1 () String\r\n    \"Failed making  accessible; either increase its visibility or write a custom TypeAdapter for its declaring type.\")\r\n  (define-fun var1901-init () var1901\r\n    var1901!val!0)\r\n  (define-fun var867!1 () String\r\n    \"\")\r\n  (define-fun var3661!1 () var785\r\n    var785!val!0)\r\n  (define-fun var850!1 () var1901\r\n    var1901!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1938_getAccessibleObjectDescription/-550785423 ((x!0 var3018)\r\n   (x!1 Bool)) String\r\n    \"\")\r\n  (define-fun <init>/37495988 ((x!0 var1901) (x!1 String) (x!2 var2343)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var785-to-var2343 ((x!0 var785)) var2343\r\n    var2343!val!0)\r\n)\r\n(error \"line 57 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.06138443946838379,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3018 is 2\r\n; rep: (as @var3018_0 var3018)\r\n; rep: (as @var3018_1 var3018)\r\n; cardinality of var785 is 2\r\n; rep: (as @var785_0 var785)\r\n; rep: (as @var785_1 var785)\r\n; cardinality of var1938 is 1\r\n; rep: (as @var1938_0 var1938)\r\n; cardinality of var1901 is 1\r\n; rep: (as @var1901_0 var1901)\r\n; cardinality of var2343 is 1\r\n; rep: (as @var2343_0 var2343)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1938_getAccessibleObjectDescription/-550785423 ((BOUND_VARIABLE_560 var3018) (BOUND_VARIABLE_561 Bool)) String \"\")\r\n(define-fun var1901-init () var1901 (as @var1901_0 var1901))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/37495988 ((BOUND_VARIABLE_564 var1901) (BOUND_VARIABLE_565 String) (BOUND_VARIABLE_566 var2343)) void (as @void_0 void))\r\n(define-fun cast-from-var785-to-var2343 ((BOUND_VARIABLE_569 var785)) var2343 (as @var2343_0 var2343))\r\n(define-fun null-var3018 () var3018 (as @var3018_0 var3018))\r\n(define-fun null-var785 () var785 (as @var785_0 var785))\r\n(define-fun var371 () var3018 (as @var3018_1 var3018))\r\n(define-fun var3661 () var785 (as @var785_1 var785))\r\n(define-fun var1911!1 () String \"\")\r\n(define-fun var1911!2 () String \"Failed making \")\r\n(define-fun var849!1 () String \"Failed making \")\r\n(define-fun var1052!1 () String \"Failed making  accessible; either increase its visibility or write a custom TypeAdapter for its declaring type.\")\r\n(define-fun var850!1 () var1901 (as @var1901_0 var1901))\r\n(define-fun var867!1 () String \"\")\r\n(define-fun var3661!1 () var785 (as @var785_0 var785))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35041280,
            "run_time": 0.09166145324707031,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3018:\n  ;;   var3018!val!1 var3018!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3018!val!1 () var3018)\n  (declare-fun var3018!val!0 () var3018)\n  ;; cardinality constraint:\n  (forall ((x var3018)) (or (= x var3018!val!1) (= x var3018!val!0)))\n  ;; -----------\n  ;; universe for var785:\n  ;;   var785!val!0 var785!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var785!val!0 () var785)\n  (declare-fun var785!val!1 () var785)\n  ;; cardinality constraint:\n  (forall ((x var785)) (or (= x var785!val!0) (= x var785!val!1)))\n  ;; -----------\n  (define-fun var850 () var1901\n    var1901-init)\n  (define-fun var3661 () var785\n    var785!val!0)\n  (define-fun var849 () String\n    (str.++ var1911!1 \"Failed making \"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var371 () var3018\n    var3018!val!0)\n  (define-fun var1052 () String\n    (str.++ var1911!1\n        \"Failed making \"\n        (var1938_getAccessibleObjectDescription/-550785423\n          var371\n          (ite (= 1 0) true false))))\n  (define-fun var867 () String\n    (str.++ var1911!1\n        \"Failed making \"\n        (var1938_getAccessibleObjectDescription/-550785423\n          var371\n          (ite (= 1 0) true false))\n        \" accessible; either increase its visibility or write a custom TypeAdapter for its declaring type.\"))\n  (define-fun var1911 () String\n    String-init)\n  (define-fun var3426 () String\n    (var1938_getAccessibleObjectDescription/-550785423\n  var371\n  (ite (= 1 0) true false)))\n  (define-fun null-var3018 () var3018\n    var3018!val!1)\n  (define-fun null-var785 () var785\n    var785!val!1)\n  (define-fun var3580 () String\n    (str.++ var1911!1\n        \"Failed making \"\n        (var1938_getAccessibleObjectDescription/-550785423\n          var371\n          (ite (= 1 0) true false))\n        \" accessible; either increase its visibility or write a custom TypeAdapter for its declaring type.\"))\n  (define-fun var849!1 () String\n    \"Failed making \")\n  (define-fun var1911!1 () String\n    \"\")\n  (define-fun var1911!2 () String\n    \"Failed making \")\n  (define-fun var1052!1 () String\n    \"Failed making  accessible; either increase its visibility or write a custom TypeAdapter for its declaring type.\")\n  (define-fun var1901-init () var1901\n    var1901!val!0)\n  (define-fun var867!1 () String\n    \"\")\n  (define-fun var3661!1 () var785\n    var785!val!0)\n  (define-fun var850!1 () var1901\n    var1901!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1938_getAccessibleObjectDescription/-550785423 ((x!0 var3018)\n   (x!1 Bool)) String\n    \"\")\n  (define-fun <init>/37495988 ((x!0 var1901) (x!1 String) (x!2 var2343)) void\n    void!val!0)\n  (define-fun cast-from-var785-to-var2343 ((x!0 var785)) var2343\n    var2343!val!0)\n)\n(error \"line 57 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180785152,
            "run_time": 1.0729639530181885,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var785/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.reflect.ReflectionHelper__makeAccessible__-682759631\\163.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_29_4 =\r\n     concat(all_29_5, \" accessible; either increase its visibility or write a custom TypeAdapter for its declaring type.\")\r\n   var1052!1 =\r\n     concat(all_26_4, \" accessible; either increase its visibility or write a custom TypeAdapter for its declaring type.\")\r\n   var849!1 =\r\n     concat(\"Failed making \", all_23_3)\r\n   all_29_5 =\r\n     concat(\"Failed making \", all_23_3)\r\n   all_26_4 =\r\n     concat(\"Failed making \", all_23_3)\r\n\r\n772ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.reflect.AccessibleObject",
            "$r1 := @caughtexception",
            "r2 = staticinvoke <com.google.gson.internal.reflect.ReflectionHelper: java.lang.String getAccessibleObjectDescription(java.lang.reflect.AccessibleObject,boolean)>(r0, 0)",
            "$r3 = new com.google.gson.JsonIOException",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed making \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" accessible; either increase its visibility or write a custom TypeAdapter for its declaring type.\")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r3.<com.google.gson.JsonIOException: void <init>(java.lang.String,java.lang.Throwable)>($r8, $r1)",
            "throw $r3"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.UnsafeAllocator__assertInstantiable__-1092597292\\281.smt2",
        "z3": {
            "memory": 31580160,
            "run_time": 0.05116629600524902,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var1799 () var1433\r\n    var1433-init)\r\n  (define-fun var550 () String\r\n    (str.++ var2959!1 \"UnsafeAllocator is used for non-instantiable type: \"))\r\n  (define-fun var70 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var595 () String\r\n    (str.++ var2959!1\r\n        \"UnsafeAllocator is used for non-instantiable type: \"\r\n        (var210_checkInstantiable/789342880 var70)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var2069 () String\r\n    (var210_checkInstantiable/789342880 var70))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2959 () String\r\n    String-init)\r\n  (define-fun var2404 () String\r\n    (str.++ var2959!1\r\n        \"UnsafeAllocator is used for non-instantiable type: \"\r\n        (var210_checkInstantiable/789342880 var70)))\r\n  (define-fun var550!1 () String\r\n    \"UnsafeAllocator is used for non-instantiable type: A\")\r\n  (define-fun var2959!1 () String\r\n    \"\")\r\n  (define-fun var2959!2 () String\r\n    \"UnsafeAllocator is used for non-instantiable type: \")\r\n  (define-fun var2404!1 () String\r\n    \"\")\r\n  (define-fun var1799!1 () var1433\r\n    var1433!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1433-init () var1433\r\n    var1433!val!0)\r\n  (define-fun var210_checkInstantiable/789342880 ((x!0 ClassObject)) String\r\n    \"A\")\r\n  (define-fun <init>/582965326 ((x!0 var1433) (x!1 var2061)) void\r\n    void!val!0)\r\n  (define-fun cast-from-String-to-var2061 ((x!0 String)) var2061\r\n    var2061!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015203475952148438,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var210 is 1\r\n; rep: (as @var210_0 var210)\r\n; cardinality of var1538 is 1\r\n; rep: (as @var1538_0 var1538)\r\n; cardinality of var1433 is 1\r\n; rep: (as @var1433_0 var1433)\r\n; cardinality of var2061 is 1\r\n; rep: (as @var2061_0 var2061)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var210_checkInstantiable/789342880 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun var1433-init () var1433 (as @var1433_0 var1433))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/582965326 ((BOUND_VARIABLE_607 var1433) (BOUND_VARIABLE_608 var2061)) void (as @void_0 void))\r\n(define-fun cast-from-String-to-var2061 ((BOUND_VARIABLE_611 String)) var2061 (as @var2061_0 var2061))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var70 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var2959!1 () String \"\")\r\n(define-fun var2959!2 () String \"UnsafeAllocator is used for non-instantiable type: \")\r\n(define-fun var550!1 () String \"UnsafeAllocator is used for non-instantiable type: \")\r\n(define-fun var1799!1 () var1433 (as @var1433_0 var1433))\r\n(define-fun var2404!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35217408,
            "run_time": 0.07801342010498047,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 49 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176803840,
            "run_time": 1.1029174327850342,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: ClassObject/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.UnsafeAllocator__assertInstantiable__-1092597292\\281.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var550!1 =\r\n     concat(\"UnsafeAllocator is used for non-instantiable type: \", all_18_0)\r\n\r\n814ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Class",
            "r1 = staticinvoke <com.google.gson.internal.ConstructorConstructor: java.lang.String checkInstantiable(java.lang.Class)>(r0)",
            "if r1 == null goto return",
            "$r2 = new java.lang.AssertionError",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"UnsafeAllocator is used for non-instantiable type: \")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r2.<java.lang.AssertionError: void <init>(java.lang.Object)>($r6)",
            "throw $r2"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.JsonElement__getAsJsonArray__31809703\\151.smt2",
        "z3": {
            "memory": 31535104,
            "run_time": 0.050165653228759766,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3632:\r\n  ;;   var3632!val!0 var3632!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3632!val!0 () var3632)\r\n  (declare-fun var3632!val!1 () var3632)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3632)) (or (= x var3632!val!0) (= x var3632!val!1)))\r\n  ;; -----------\r\n  (define-fun var1662 () var3632\r\n    var3632!val!0)\r\n  (define-fun var655 () String\r\n    (append/-1031950772\r\n  (str.++ var3552!1 \"Not a JSON Array: \")\r\n  (cast-from-var3632-to-var3694 var1662)))\r\n  (define-fun var2151 () String\r\n    (append/-1031950772\r\n  (str.++ var3552!1 \"Not a JSON Array: \")\r\n  (cast-from-var3632-to-var3694 var1662)))\r\n  (define-fun var323 () Bool\r\n    (isJsonArray/615145329 var1662))\r\n  (define-fun var1912!1 () String\r\n    \"Not a JSON Array: \")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3552 () String\r\n    String-init)\r\n  (define-fun var1817 () var1550\r\n    var1550-init)\r\n  (define-fun var1912 () String\r\n    (str.++ var3552!1 \"Not a JSON Array: \"))\r\n  (define-fun null-var3632 () var3632\r\n    var3632!val!1)\r\n  (define-fun var3552!2 () String\r\n    \"Not a JSON Array: \")\r\n  (define-fun var3552!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2151!1 () String\r\n    \"\")\r\n  (define-fun var1550-init () var1550\r\n    var1550!val!0)\r\n  (define-fun var1817!1 () var1550\r\n    var1550!val!0)\r\n  (define-fun isJsonArray/615145329 ((x!0 var3632)) Bool\r\n    false)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3694)) String\r\n    \"\")\r\n  (define-fun cast-from-var3632-to-var3694 ((x!0 var3632)) var3694\r\n    var3694!val!0)\r\n  (define-fun <init>/-1092629202 ((x!0 var1550) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.04716777801513672,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3632 is 2\r\n; rep: (as @var3632_0 var3632)\r\n; rep: (as @var3632_1 var3632)\r\n; cardinality of var1550 is 1\r\n; rep: (as @var1550_0 var1550)\r\n; cardinality of var3694 is 1\r\n; rep: (as @var3694_0 var3694)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun isJsonArray/615145329 ((_arg_1 var3632)) Bool false)\r\n(define-fun var1550-init () var1550 (as @var1550_0 var1550))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_929 String) (BOUND_VARIABLE_930 var3694)) String \"\")\r\n(define-fun cast-from-var3632-to-var3694 ((BOUND_VARIABLE_933 var3632)) var3694 (as @var3694_0 var3694))\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_936 var1550) (BOUND_VARIABLE_937 String)) void (as @void_0 void))\r\n(define-fun null-var3632 () var3632 (as @var3632_0 var3632))\r\n(define-fun var1662 () var3632 (as @var3632_1 var3632))\r\n(define-fun var3552!1 () String \"\")\r\n(define-fun var3552!2 () String \"Not a JSON Array: \")\r\n(define-fun var1912!1 () String \"Not a JSON Array: \")\r\n(define-fun var1817!1 () var1550 (as @var1550_0 var1550))\r\n(define-fun var2151!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35356672,
            "run_time": 0.07743668556213379,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3632:\n  ;;   var3632!val!0 var3632!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3632!val!0 () var3632)\n  (declare-fun var3632!val!1 () var3632)\n  ;; cardinality constraint:\n  (forall ((x var3632)) (or (= x var3632!val!0) (= x var3632!val!1)))\n  ;; -----------\n  (define-fun var1662 () var3632\n    var3632!val!0)\n  (define-fun var1817 () var1550\n    var1550-init)\n  (define-fun var3552!1 () String\n    \"\")\n  (define-fun var323 () Bool\n    (isJsonArray/615145329 var1662))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3552 () String\n    String-init)\n  (define-fun var1912 () String\n    (str.++ var3552!1 \"Not a JSON Array: \"))\n  (define-fun var655 () String\n    (append/-1031950772\n  (str.++ var3552!1 \"Not a JSON Array: \")\n  (cast-from-var3632-to-var3694 var1662)))\n  (define-fun var2151 () String\n    (append/-1031950772\n  (str.++ var3552!1 \"Not a JSON Array: \")\n  (cast-from-var3632-to-var3694 var1662)))\n  (define-fun var1912!1 () String\n    \"Not a JSON Array: \")\n  (define-fun null-var3632 () var3632\n    var3632!val!1)\n  (define-fun var3552!2 () String\n    \"Not a JSON Array: \")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2151!1 () String\n    \"\")\n  (define-fun var1550-init () var1550\n    var1550!val!0)\n  (define-fun var1817!1 () var1550\n    var1550!val!0)\n  (define-fun isJsonArray/615145329 ((x!0 var3632)) Bool\n    false)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3694)) String\n    \"\")\n  (define-fun cast-from-var3632-to-var3694 ((x!0 var3632)) var3694\n    var3694!val!0)\n  (define-fun <init>/-1092629202 ((x!0 var1550) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 178782208,
            "run_time": 1.1184980869293213,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1912!1 () String \"Not a JSON Array: \")\r\n  (define-fun var3552!2 () String \"Not a JSON Array: \")\r\n  (define-fun var3552!1 () String \"\")\r\n  (define-fun var1662 () var3632 var3632!4)\r\n  (define-fun null-var3632 () var3632 var3632!2)\r\n  (define-fun isJsonArray/615145329 ((x!0 var3632)) Bool (ite (= x!0 var3632!4) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.JsonElement",
            "$z0 = virtualinvoke r0.<com.google.gson.JsonElement: boolean isJsonArray()>()",
            "if $z0 == 0 goto $r1 = new java.lang.IllegalStateException",
            "$r1 = new java.lang.IllegalStateException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Not a JSON Array: \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.reflect.ReflectionHelper__fieldToString__1655737463\\224.smt2",
        "z3": {
            "memory": 31920128,
            "run_time": 0.060990095138549805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1772:\r\n  ;;   var1772!val!0 var1772!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1772!val!0 () var1772)\r\n  (declare-fun var1772!val!1 () var1772)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1772)) (or (= x var1772!val!0) (= x var1772!val!1)))\r\n  ;; -----------\r\n  (define-fun var2361 () String\r\n    String-init)\r\n  (define-fun var3884 () ClassObject\r\n    (getDeclaringClass/1477653585 var3068))\r\n  (define-fun var3150 () String\r\n    (str.++ var2361!1\r\n        (getName/-1958580599 (getDeclaringClass/1477653585 var3068))\r\n        \"#\"\r\n        (getName/1618348824 var3068)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var1772 () var1772\r\n    var1772!val!1)\r\n  (define-fun var377 () String\r\n    (getName/-1958580599 (getDeclaringClass/1477653585 var3068)))\r\n  (define-fun var1564 () String\r\n    (str.++ var2361!1\r\n        (getName/-1958580599 (getDeclaringClass/1477653585 var3068))\r\n        \"#\"))\r\n  (define-fun var3068 () var1772\r\n    var1772!val!0)\r\n  (define-fun var1814 () String\r\n    (str.++ var2361!1\r\n        (getName/-1958580599 (getDeclaringClass/1477653585 var3068))\r\n        \"#\"\r\n        (getName/1618348824 var3068)))\r\n  (define-fun var841 () String\r\n    (str.++ var2361!1 (getName/-1958580599 (getDeclaringClass/1477653585 var3068))))\r\n  (define-fun var2346 () String\r\n    (getName/1618348824 var3068))\r\n  (define-fun var1564!1 () String\r\n    \"#\")\r\n  (define-fun var2361!1 () String\r\n    \"\")\r\n  (define-fun var2361!2 () String\r\n    \"\")\r\n  (define-fun var841!1 () String\r\n    \"#\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getDeclaringClass/1477653585 ((x!0 var1772)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun getName/1618348824 ((x!0 var1772)) String\r\n    \"\")\r\n)\r\n(error \"line 46 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.016034603118896484,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1772 is 2\r\n; rep: (as @var1772_0 var1772)\r\n; rep: (as @var1772_1 var1772)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getDeclaringClass/1477653585 ((BOUND_VARIABLE_543 var1772)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_546 ClassObject)) String \"\")\r\n(define-fun getName/1618348824 ((BOUND_VARIABLE_549 var1772)) String \"\")\r\n(define-fun null-var1772 () var1772 (as @var1772_0 var1772))\r\n(define-fun var3068 () var1772 (as @var1772_1 var1772))\r\n(define-fun var2361!1 () String \"\")\r\n(define-fun var2361!2 () String \"\")\r\n(define-fun var841!1 () String \"#\")\r\n(define-fun var1564!1 () String \"#\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35364864,
            "run_time": 0.07790160179138184,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1772:\n  ;;   var1772!val!0 var1772!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1772!val!0 () var1772)\n  (declare-fun var1772!val!1 () var1772)\n  ;; cardinality constraint:\n  (forall ((x var1772)) (or (= x var1772!val!0) (= x var1772!val!1)))\n  ;; -----------\n  (define-fun var3150 () String\n    (str.++ var2361!1\n        (getName/-1958580599 (getDeclaringClass/1477653585 var3068))\n        \"#\"\n        (getName/1618348824 var3068)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var377 () String\n    (getName/-1958580599 (getDeclaringClass/1477653585 var3068)))\n  (define-fun var1564 () String\n    (str.++ var2361!1\n        (getName/-1958580599 (getDeclaringClass/1477653585 var3068))\n        \"#\"))\n  (define-fun var1814 () String\n    (str.++ var2361!1\n        (getName/-1958580599 (getDeclaringClass/1477653585 var3068))\n        \"#\"\n        (getName/1618348824 var3068)))\n  (define-fun var3884 () ClassObject\n    (getDeclaringClass/1477653585 var3068))\n  (define-fun null-var1772 () var1772\n    var1772!val!1)\n  (define-fun var841 () String\n    (str.++ var2361!1 (getName/-1958580599 (getDeclaringClass/1477653585 var3068))))\n  (define-fun var2346 () String\n    (getName/1618348824 var3068))\n  (define-fun var3068 () var1772\n    var1772!val!0)\n  (define-fun var2361 () String\n    String-init)\n  (define-fun var1564!1 () String\n    \"#\")\n  (define-fun var2361!1 () String\n    \"\")\n  (define-fun var2361!2 () String\n    \"\")\n  (define-fun var841!1 () String\n    \"#\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun getDeclaringClass/1477653585 ((x!0 var1772)) ClassObject\n    ClassObject!val!0)\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n  (define-fun getName/1618348824 ((x!0 var1772)) String\n    \"\")\n)\n(error \"line 46 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 178364416,
            "run_time": 1.0896270275115967,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1772/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.reflect.ReflectionHelper__fieldToString__1655737463\\224.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1564!1 =\r\n     concat(all_18_5, all_18_4)\r\n   var841!1 =\r\n     concat(var2361!2, \"#\")\r\n   all_18_5 =\r\n     concat(var2361!2, \"#\")\r\n\r\n813ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.reflect.Field",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.Class getDeclaringClass()>()",
            "$r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>()",
            "$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"#\")",
            "$r5 = virtualinvoke r1.<java.lang.reflect.Field: java.lang.String getName()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.Streams$AppendableWriter$CurrentWrite__subSequence__649711209\\154.smt2",
        "z3": {
            "memory": 32313344,
            "run_time": 0.060166120529174805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3182:\r\n  ;;   var3182!val!0 var3182!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3182!val!0 () var3182)\r\n  (declare-fun var3182!val!1 () var3182)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3182)) (or (= x var3182!val!0) (= x var3182!val!1)))\r\n  ;; -----------\r\n  (define-fun var1501 () Int\r\n    (- var1764 var1440))\r\n  (define-fun var1440 () Int\r\n    1)\r\n  (define-fun var1764 () Int\r\n    1)\r\n  (define-fun var1023 () (Array Int Int)\r\n    (chars/-1580565060 var3207))\r\n  (define-fun var701 () String\r\n    String-init)\r\n  (define-fun var3207 () var3182\r\n    var3182!val!0)\r\n  (define-fun null-var3182 () var3182\r\n    var3182!val!1)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var1501!1 () Int\r\n    0)\r\n  (define-fun var1023!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var1440!1 () Int\r\n    0)\r\n  (define-fun var701!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun chars/-1580565060 ((x!0 var3182)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 3571712,
            "run_time": 0.030604839324951172,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3182 is 2\r\n; rep: (as @var3182_0 var3182)\r\n; rep: (as @var3182_1 var3182)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun chars/-1580565060 ((BOUND_VARIABLE_478 var3182)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_483 String) (BOUND_VARIABLE_484 (Array Int Int)) (BOUND_VARIABLE_485 Int) (BOUND_VARIABLE_486 Int)) void (as @void_0 void))\r\n(define-fun null-var3182 () var3182 (as @var3182_0 var3182))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var3207 () var3182 (as @var3182_1 var3182))\r\n(define-fun var1440 () Int 1)\r\n(define-fun var1764 () Int 1)\r\n(define-fun var701!1 () String \"\")\r\n(define-fun var1023!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var1440!1 () Int 0)\r\n(define-fun var1501!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32866304,
            "run_time": 0.09133386611938477,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3182:\n  ;;   var3182!val!0 var3182!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3182!val!0 () var3182)\n  (declare-fun var3182!val!1 () var3182)\n  ;; cardinality constraint:\n  (forall ((x var3182)) (or (= x var3182!val!0) (= x var3182!val!1)))\n  ;; -----------\n  (define-fun var701 () String\n    String-init)\n  (define-fun var1501 () Int\n    (- var1764 var1440))\n  (define-fun var1440 () Int\n    1)\n  (define-fun var1764 () Int\n    1)\n  (define-fun var1023 () (Array Int Int)\n    (chars/-1580565060 var3207))\n  (define-fun var3207 () var3182\n    var3182!val!0)\n  (define-fun null-var3182 () var3182\n    var3182!val!1)\n  (define-fun null-Int () Int\n    0)\n  (define-fun var1501!1 () Int\n    0)\n  (define-fun var1023!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var1440!1 () Int\n    0)\n  (define-fun var701!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun chars/-1580565060 ((x!0 var3182)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150769664,
            "run_time": 0.9180572032928467,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1764 () Int 1)\r\n  (define-fun var1440 () Int 1)\r\n  (define-fun var3207 () var3182 var3182!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3182 () var3182 var3182!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: void <init>(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r1 := @this: com.google.gson.internal.Streams$AppendableWriter$CurrentWrite",
            "i0 := @parameter0: int",
            "i1 := @parameter1: int",
            "$r0 = new java.lang.String",
            "$r2 = r1.<com.google.gson.internal.Streams$AppendableWriter$CurrentWrite: char[] chars>",
            "$i2 = i1 - i0",
            "specialinvoke $r0.<java.lang.String: void <init>(char[],int,int)>($r2, i0, $i2)",
            "return $r0"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.reflect.ReflectionHelper__tryMakeAccessible__755684176\\320.smt2",
        "z3": {
            "memory": 31604736,
            "run_time": 0.08756113052368164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2046:\r\n  ;;   var2046!val!0 var2046!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2046!val!0 () var2046)\r\n  (declare-fun var2046!val!1 () var2046)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2046)) (or (= x var2046!val!0) (= x var2046!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1337:\r\n  ;;   var1337!val!1 var1337!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1337!val!1 () var1337)\r\n  (declare-fun var1337!val!0 () var1337)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1337)) (or (= x var1337!val!1) (= x var1337!val!0)))\r\n  ;; -----------\r\n  (define-fun var58 () String\r\n    String-init)\r\n  (define-fun var3655 () String\r\n    (var3494_constructorToString/1631520055 var1402))\r\n  (define-fun var1872 () String\r\n    (str.++ var58!1 \"Failed making constructor '\"))\r\n  (define-fun var3366 () String\r\n    (getMessage/849299655 (cast-from-var2046-to-var1637 var3184)))\r\n  (define-fun var1402 () var1337\r\n    var1337!val!0)\r\n  (define-fun var762 () String\r\n    (str.++ var58!1\r\n        \"Failed making constructor '\"\r\n        (var3494_constructorToString/1631520055 var1402)\r\n        \"' accessible; either increase its visibility or write a custom InstanceCreator or TypeAdapter for its declaring type: \"\r\n        (getMessage/849299655 (cast-from-var2046-to-var1637 var3184))))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3847 () String\r\n    (str.++ var58!1\r\n        \"Failed making constructor '\"\r\n        (var3494_constructorToString/1631520055 var1402)\r\n        \"' accessible; either increase its visibility or write a custom InstanceCreator or TypeAdapter for its declaring type: \"))\r\n  (define-fun var3289 () String\r\n    (str.++ var58!1\r\n        \"Failed making constructor '\"\r\n        (var3494_constructorToString/1631520055 var1402)))\r\n  (define-fun var1775 () String\r\n    (str.++ var58!1\r\n        \"Failed making constructor '\"\r\n        (var3494_constructorToString/1631520055 var1402)\r\n        \"' accessible; either increase its visibility or write a custom InstanceCreator or TypeAdapter for its declaring type: \"\r\n        (getMessage/849299655 (cast-from-var2046-to-var1637 var3184))))\r\n  (define-fun null-var2046 () var2046\r\n    var2046!val!1)\r\n  (define-fun null-var1337 () var1337\r\n    var1337!val!1)\r\n  (define-fun var3184 () var2046\r\n    var2046!val!0)\r\n  (define-fun var1872!1 () String\r\n    \"Failed making constructor '\")\r\n  (define-fun var3847!1 () String\r\n    \"Failed making constructor '' accessible; either increase its visibility or write a custom InstanceCreator or TypeAdapter for its declaring type: \")\r\n  (define-fun var3289!1 () String\r\n    \"Failed making constructor '' accessible; either increase its visibility or write a custom InstanceCreator or TypeAdapter for its declaring type: \")\r\n  (define-fun var58!1 () String\r\n    \"\")\r\n  (define-fun var58!2 () String\r\n    \"Failed making constructor '\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3494_constructorToString/1631520055 ((x!0 var1337)) String\r\n    \"\")\r\n  (define-fun cast-from-var2046-to-var1637 ((x!0 var2046)) var1637\r\n    var1637!val!0)\r\n  (define-fun getMessage/849299655 ((x!0 var1637)) String\r\n    \"\")\r\n)\r\n(error \"line 54 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11218944,
            "run_time": 0.029226064682006836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1337 is 2\r\n; rep: (as @var1337_0 var1337)\r\n; rep: (as @var1337_1 var1337)\r\n; cardinality of var2046 is 2\r\n; rep: (as @var2046_0 var2046)\r\n; rep: (as @var2046_1 var2046)\r\n; cardinality of var3494 is 1\r\n; rep: (as @var3494_0 var3494)\r\n; cardinality of var1637 is 1\r\n; rep: (as @var1637_0 var1637)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var3494_constructorToString/1631520055 ((BOUND_VARIABLE_578 var1337)) String \"\")\r\n(define-fun getMessage/849299655 ((BOUND_VARIABLE_581 var1637)) String \"\")\r\n(define-fun cast-from-var2046-to-var1637 ((BOUND_VARIABLE_584 var2046)) var1637 (as @var1637_0 var1637))\r\n(define-fun null-var1337 () var1337 (as @var1337_0 var1337))\r\n(define-fun null-var2046 () var2046 (as @var2046_0 var2046))\r\n(define-fun var1402 () var1337 (as @var1337_1 var1337))\r\n(define-fun var3184 () var2046 (as @var2046_1 var2046))\r\n(define-fun var58!1 () String \"\")\r\n(define-fun var58!2 () String \"Failed making constructor '\")\r\n(define-fun var1872!1 () String \"Failed making constructor '\")\r\n(define-fun var3289!1 () String \"Failed making constructor '' accessible; either increase its visibility or write a custom InstanceCreator or TypeAdapter for its declaring type: \")\r\n(define-fun var3847!1 () String \"Failed making constructor '' accessible; either increase its visibility or write a custom InstanceCreator or TypeAdapter for its declaring type: \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35491840,
            "run_time": 0.07634782791137695,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2046:\n  ;;   var2046!val!0 var2046!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2046!val!0 () var2046)\n  (declare-fun var2046!val!1 () var2046)\n  ;; cardinality constraint:\n  (forall ((x var2046)) (or (= x var2046!val!0) (= x var2046!val!1)))\n  ;; -----------\n  ;; universe for var1337:\n  ;;   var1337!val!1 var1337!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1337!val!1 () var1337)\n  (declare-fun var1337!val!0 () var1337)\n  ;; cardinality constraint:\n  (forall ((x var1337)) (or (= x var1337!val!1) (= x var1337!val!0)))\n  ;; -----------\n  (define-fun var1872 () String\n    (str.++ var58!1 \"Failed making constructor '\"))\n  (define-fun var3366 () String\n    (getMessage/849299655 (cast-from-var2046-to-var1637 var3184)))\n  (define-fun var762 () String\n    (str.++ var58!1\n        \"Failed making constructor '\"\n        (var3494_constructorToString/1631520055 var1402)\n        \"' accessible; either increase its visibility or write a custom InstanceCreator or TypeAdapter for its declaring type: \"\n        (getMessage/849299655 (cast-from-var2046-to-var1637 var3184))))\n  (define-fun var3655 () String\n    (var3494_constructorToString/1631520055 var1402))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3847 () String\n    (str.++ var58!1\n        \"Failed making constructor '\"\n        (var3494_constructorToString/1631520055 var1402)\n        \"' accessible; either increase its visibility or write a custom InstanceCreator or TypeAdapter for its declaring type: \"))\n  (define-fun var1402 () var1337\n    var1337!val!0)\n  (define-fun var3289 () String\n    (str.++ var58!1\n        \"Failed making constructor '\"\n        (var3494_constructorToString/1631520055 var1402)))\n  (define-fun var1775 () String\n    (str.++ var58!1\n        \"Failed making constructor '\"\n        (var3494_constructorToString/1631520055 var1402)\n        \"' accessible; either increase its visibility or write a custom InstanceCreator or TypeAdapter for its declaring type: \"\n        (getMessage/849299655 (cast-from-var2046-to-var1637 var3184))))\n  (define-fun var58 () String\n    String-init)\n  (define-fun null-var2046 () var2046\n    var2046!val!1)\n  (define-fun null-var1337 () var1337\n    var1337!val!1)\n  (define-fun var3184 () var2046\n    var2046!val!0)\n  (define-fun var1872!1 () String\n    \"Failed making constructor '\")\n  (define-fun var3847!1 () String\n    \"Failed making constructor '' accessible; either increase its visibility or write a custom InstanceCreator or TypeAdapter for its declaring type: \")\n  (define-fun var3289!1 () String\n    \"Failed making constructor '' accessible; either increase its visibility or write a custom InstanceCreator or TypeAdapter for its declaring type: \")\n  (define-fun var58!1 () String\n    \"\")\n  (define-fun var58!2 () String\n    \"Failed making constructor '\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3494_constructorToString/1631520055 ((x!0 var1337)) String\n    \"\")\n  (define-fun cast-from-var2046-to-var1637 ((x!0 var2046)) var1637\n    var1637!val!0)\n  (define-fun getMessage/849299655 ((x!0 var1637)) String\n    \"\")\n)\n(error \"line 54 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169824256,
            "run_time": 1.1533565521240234,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1337/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.reflect.ReflectionHelper__tryMakeAccessible__755684176\\320.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3289!1 =\r\n     concat(all_31_3, \"\\u{0}27 accessible; either increase its visibility or write a custom InstanceCreator or TypeAdapter for its declaring type: \")\r\n   var3847!1 =\r\n     concat(all_28_4, all_28_2)\r\n   var1872!1 =\r\n     concat(\"Failed making constructor \\u{0}27\", all_25_2)\r\n   all_28_4 =\r\n     concat(all_49_3, \"\\u{0}27 accessible; either increase its visibility or write a custom InstanceCreator or TypeAdapter for its declaring type: \")\r\n   all_31_3 =\r\n     concat(\"Failed making constructor \\u{0}27\", all_25_2)\r\n   all_49_3 =\r\n     concat(\"Failed making constructor \\u{0}27\", all_25_2)\r\n\r\n846ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.reflect.Constructor",
            "$r1 := @caughtexception",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed making constructor \\'\")",
            "$r3 = staticinvoke <com.google.gson.internal.reflect.ReflectionHelper: java.lang.String constructorToString(java.lang.reflect.Constructor)>(r0)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' accessible; either increase its visibility or write a custom InstanceCreator or TypeAdapter for its declaring type: \")",
            "$r6 = virtualinvoke $r1.<java.lang.Exception: java.lang.String getMessage()>()",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r9"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.UnsafeAllocator__assertInstantiable__-1092597292\\306.smt2",
        "z3": {
            "memory": 32010240,
            "run_time": 0.0435636043548584,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var260 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var1531 () String\r\n    (var381_checkInstantiable/789342880 var260))\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var381_checkInstantiable/789342880 ((x!0 ClassObject)) String\r\n    \"\")\r\n)\r\n(error \"line 20 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.047614097595214844,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var381 is 1\r\n; rep: (as @var381_0 var381)\r\n; cardinality of var3795 is 1\r\n; rep: (as @var3795_0 var3795)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var381_checkInstantiable/789342880 ((BOUND_VARIABLE_416 ClassObject)) String \"\")\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-String () String \"\")\r\n(define-fun var260 () ClassObject (as @ClassObject_1 ClassObject))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34660352,
            "run_time": 0.07635092735290527,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  (define-fun var260 () ClassObject\n    ClassObject!val!0)\n  (define-fun var1531 () String\n    (var381_checkInstantiable/789342880 var260))\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun null-String () String\n    \"\")\n  (define-fun var381_checkInstantiable/789342880 ((x!0 ClassObject)) String\n    \"\")\n)\n(error \"line 20 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 133038080,
            "run_time": 0.8727681636810303,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var260 () ClassObject ClassObject!6)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-ClassObject () ClassObject ClassObject!2)\r\n  (define-fun var381_checkInstantiable/789342880 ((x!0 ClassObject)) String (ite (= x!0 ClassObject!6) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 2,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Class",
            "r1 = staticinvoke <com.google.gson.internal.ConstructorConstructor: java.lang.String checkInstantiable(java.lang.Class)>(r0)",
            "if r1 == null goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.reflect.ReflectionHelper__getAccessibleObjectDescription__-550785423\\194.smt2",
        "z3": {
            "memory": 31989760,
            "run_time": 0.05805635452270508,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 52 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015051841735839844,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33980416,
            "run_time": 0.07797932624816895,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 52 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150523904,
            "run_time": 0.9312882423400879,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.reflect.AccessibleObject",
            "z3 := @parameter1: boolean",
            "$z0 = r0 instanceof java.lang.reflect.Field",
            "if $z0 == 0 goto $z1 = r0 instanceof java.lang.reflect.Method",
            "$r27 = new java.lang.StringBuilder",
            "specialinvoke $r27.<java.lang.StringBuilder: void <init>()>()",
            "$r30 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"field \\'\")",
            "$r28 = (java.lang.reflect.Field) r0",
            "$r29 = staticinvoke <com.google.gson.internal.reflect.ReflectionHelper: java.lang.String fieldToString(java.lang.reflect.Field)>($r28)",
            "$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)",
            "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\'\")",
            "r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.String toString()>()",
            "goto [?= (branch)]",
            "if z3 == 0 goto return r33",
            "return r33"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.JsonElement__getAsJsonNull__-1408478183\\238.smt2",
        "z3": {
            "memory": 32575488,
            "run_time": 0.059638261795043945,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3410:\r\n  ;;   var3410!val!1 var3410!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3410!val!1 () var3410)\r\n  (declare-fun var3410!val!0 () var3410)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3410)) (or (= x var3410!val!1) (= x var3410!val!0)))\r\n  ;; -----------\r\n  (define-fun var2544 () Bool\r\n    (isJsonNull/138558921 var2460))\r\n  (define-fun var2460 () var3410\r\n    var3410!val!0)\r\n  (define-fun var3468 () String\r\n    String-init)\r\n  (define-fun var3455 () String\r\n    (str.++ var3468!1 \"Not a JSON Null: \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var3410 () var3410\r\n    var3410!val!1)\r\n  (define-fun var576 () String\r\n    (append/-1031950772\r\n  (str.++ var3468!1 \"Not a JSON Null: \")\r\n  (cast-from-var3410-to-var793 var2460)))\r\n  (define-fun var3420 () var773\r\n    var773-init)\r\n  (define-fun var3455!1 () String\r\n    \"Not a JSON Null: \")\r\n  (define-fun var2599 () String\r\n    (append/-1031950772\r\n  (str.++ var3468!1 \"Not a JSON Null: \")\r\n  (cast-from-var3410-to-var793 var2460)))\r\n  (define-fun var3468!2 () String\r\n    \"Not a JSON Null: \")\r\n  (define-fun var3468!1 () String\r\n    \"\")\r\n  (define-fun var3420!1 () var773\r\n    var773!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2599!1 () String\r\n    \"\")\r\n  (define-fun var773-init () var773\r\n    var773!val!0)\r\n  (define-fun isJsonNull/138558921 ((x!0 var3410)) Bool\r\n    false)\r\n  (define-fun cast-from-var3410-to-var793 ((x!0 var3410)) var793\r\n    var793!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var793)) String\r\n    \"\")\r\n  (define-fun <init>/-1092629202 ((x!0 var773) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12201984,
            "run_time": 0.03080153465270996,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3410 is 2\r\n; rep: (as @var3410_0 var3410)\r\n; rep: (as @var3410_1 var3410)\r\n; cardinality of var773 is 1\r\n; rep: (as @var773_0 var773)\r\n; cardinality of var793 is 1\r\n; rep: (as @var793_0 var793)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun isJsonNull/138558921 ((_arg_1 var3410)) Bool false)\r\n(define-fun var773-init () var773 (as @var773_0 var773))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_928 String) (BOUND_VARIABLE_929 var793)) String \"\")\r\n(define-fun cast-from-var3410-to-var793 ((BOUND_VARIABLE_932 var3410)) var793 (as @var793_0 var793))\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_935 var773) (BOUND_VARIABLE_936 String)) void (as @void_0 void))\r\n(define-fun null-var3410 () var3410 (as @var3410_0 var3410))\r\n(define-fun var2460 () var3410 (as @var3410_1 var3410))\r\n(define-fun var3468!1 () String \"\")\r\n(define-fun var3468!2 () String \"Not a JSON Null: \")\r\n(define-fun var3455!1 () String \"Not a JSON Null: \")\r\n(define-fun var3420!1 () var773 (as @var773_0 var773))\r\n(define-fun var2599!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36556800,
            "run_time": 0.07720327377319336,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3410:\n  ;;   var3410!val!1 var3410!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3410!val!1 () var3410)\n  (declare-fun var3410!val!0 () var3410)\n  ;; cardinality constraint:\n  (forall ((x var3410)) (or (= x var3410!val!1) (= x var3410!val!0)))\n  ;; -----------\n  (define-fun var3420 () var773\n    var773-init)\n  (define-fun var3468 () String\n    String-init)\n  (define-fun var3468!1 () String\n    \"\")\n  (define-fun var3455 () String\n    (str.++ var3468!1 \"Not a JSON Null: \"))\n  (define-fun var2460 () var3410\n    var3410!val!0)\n  (define-fun var3455!1 () String\n    \"Not a JSON Null: \")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2544 () Bool\n    (isJsonNull/138558921 var2460))\n  (define-fun null-var3410 () var3410\n    var3410!val!1)\n  (define-fun var576 () String\n    (append/-1031950772\n  (str.++ var3468!1 \"Not a JSON Null: \")\n  (cast-from-var3410-to-var793 var2460)))\n  (define-fun var2599 () String\n    (append/-1031950772\n  (str.++ var3468!1 \"Not a JSON Null: \")\n  (cast-from-var3410-to-var793 var2460)))\n  (define-fun var3468!2 () String\n    \"Not a JSON Null: \")\n  (define-fun var3420!1 () var773\n    var773!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2599!1 () String\n    \"\")\n  (define-fun var773-init () var773\n    var773!val!0)\n  (define-fun isJsonNull/138558921 ((x!0 var3410)) Bool\n    false)\n  (define-fun cast-from-var3410-to-var793 ((x!0 var3410)) var793\n    var793!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var793)) String\n    \"\")\n  (define-fun <init>/-1092629202 ((x!0 var773) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182185984,
            "run_time": 1.1495440006256104,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3455!1 () String \"Not a JSON Null: \")\r\n  (define-fun var3468!2 () String \"Not a JSON Null: \")\r\n  (define-fun var3468!1 () String \"\")\r\n  (define-fun var2460 () var3410 var3410!4)\r\n  (define-fun null-var3410 () var3410 var3410!2)\r\n  (define-fun isJsonNull/138558921 ((x!0 var3410)) Bool (ite (= x!0 var3410!4) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.JsonElement",
            "$z0 = virtualinvoke r0.<com.google.gson.JsonElement: boolean isJsonNull()>()",
            "if $z0 == 0 goto $r1 = new java.lang.IllegalStateException",
            "$r1 = new java.lang.IllegalStateException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Not a JSON Null: \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.UnsafeAllocator$4__newInstance__1947063674\\294.smt2",
        "z3": {
            "memory": 32317440,
            "run_time": 0.059226274490356445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1286:\r\n  ;;   var1286!val!0 var1286!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1286!val!0 () var1286)\r\n  (declare-fun var1286!val!1 () var1286)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1286)) (or (= x var1286!val!0) (= x var1286!val!1)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var3240 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var1758 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var2871!1 \"Cannot allocate \")\r\n          (cast-from-ClassObject-to-var1770 var3240))\r\n        \". Usage of JDK sun.misc.Unsafe is enabled, but it could not be used. Make sure your runtime is configured correctly.\"))\r\n  (define-fun var612!1 () String\r\n    \"Cannot allocate \")\r\n  (define-fun var1005 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var2871!1 \"Cannot allocate \")\r\n          (cast-from-ClassObject-to-var1770 var3240))\r\n        \". Usage of JDK sun.misc.Unsafe is enabled, but it could not be used. Make sure your runtime is configured correctly.\"))\r\n  (define-fun null-var1286 () var1286\r\n    var1286!val!1)\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1999 () var1286\r\n    var1286!val!0)\r\n  (define-fun var612 () String\r\n    (str.++ var2871!1 \"Cannot allocate \"))\r\n  (define-fun var2871 () String\r\n    String-init)\r\n  (define-fun var1721 () String\r\n    (append/-1031950772\r\n  (str.++ var2871!1 \"Cannot allocate \")\r\n  (cast-from-ClassObject-to-var1770 var3240)))\r\n  (define-fun var3072 () var2236\r\n    var2236-init)\r\n  (define-fun var2871!2 () String\r\n    \"Cannot allocate \")\r\n  (define-fun var2871!1 () String\r\n    \"\")\r\n  (define-fun var1721!1 () String\r\n    \". Usage of JDK sun.misc.Unsafe is enabled, but it could not be used. Make sure your runtime is configured correctly.\")\r\n  (define-fun var1758!1 () String\r\n    \"\")\r\n  (define-fun var2236-init () var2236\r\n    var2236!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3072!1 () var2236\r\n    var2236!val!0)\r\n  (define-fun cast-from-ClassObject-to-var1770 ((x!0 ClassObject)) var1770\r\n    var1770!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1770)) String\r\n    \"\")\r\n  (define-fun <init>/-630064361 ((x!0 var2236) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 52 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12222464,
            "run_time": 0.030902624130249023,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1286 is 2\r\n; rep: (as @var1286_0 var1286)\r\n; rep: (as @var1286_1 var1286)\r\n; cardinality of var2236 is 1\r\n; rep: (as @var2236_0 var2236)\r\n; cardinality of var1770 is 1\r\n; rep: (as @var1770_0 var1770)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var2236-init () var2236 (as @var2236_0 var2236))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_928 String) (BOUND_VARIABLE_929 var1770)) String \"\")\r\n(define-fun cast-from-ClassObject-to-var1770 ((BOUND_VARIABLE_932 ClassObject)) var1770 (as @var1770_0 var1770))\r\n(define-fun <init>/-630064361 ((BOUND_VARIABLE_935 var2236) (BOUND_VARIABLE_936 String)) void (as @void_0 void))\r\n(define-fun null-var1286 () var1286 (as @var1286_0 var1286))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var1999 () var1286 (as @var1286_1 var1286))\r\n(define-fun var3240 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var2871!1 () String \"\")\r\n(define-fun var2871!2 () String \"Cannot allocate \")\r\n(define-fun var612!1 () String \"Cannot allocate \")\r\n(define-fun var1721!1 () String \". Usage of JDK sun.misc.Unsafe is enabled, but it could not be used. Make sure your runtime is configured correctly.\")\r\n(define-fun var3072!1 () var2236 (as @var2236_0 var2236))\r\n(define-fun var1758!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36827136,
            "run_time": 0.07817316055297852,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1286:\n  ;;   var1286!val!0 var1286!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1286!val!0 () var1286)\n  (declare-fun var1286!val!1 () var1286)\n  ;; cardinality constraint:\n  (forall ((x var1286)) (or (= x var1286!val!0) (= x var1286!val!1)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  (define-fun var3072 () var2236\n    var2236-init)\n  (define-fun var3240 () ClassObject\n    ClassObject!val!0)\n  (define-fun var1721!1 () String\n    \". Usage of JDK sun.misc.Unsafe is enabled, but it could not be used. Make sure your runtime is configured correctly.\")\n  (define-fun var1721 () String\n    (append/-1031950772\n  (str.++ var2871!1 \"Cannot allocate \")\n  (cast-from-ClassObject-to-var1770 var3240)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var612 () String\n    (str.++ var2871!1 \"Cannot allocate \"))\n  (define-fun null-var1286 () var1286\n    var1286!val!1)\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var2871 () String\n    String-init)\n  (define-fun var1999 () var1286\n    var1286!val!0)\n  (define-fun var612!1 () String\n    \"Cannot allocate \")\n  (define-fun var1758 () String\n    (str.++ (append/-1031950772\n          (str.++ var2871!1 \"Cannot allocate \")\n          (cast-from-ClassObject-to-var1770 var3240))\n        \". Usage of JDK sun.misc.Unsafe is enabled, but it could not be used. Make sure your runtime is configured correctly.\"))\n  (define-fun var1005 () String\n    (str.++ (append/-1031950772\n          (str.++ var2871!1 \"Cannot allocate \")\n          (cast-from-ClassObject-to-var1770 var3240))\n        \". Usage of JDK sun.misc.Unsafe is enabled, but it could not be used. Make sure your runtime is configured correctly.\"))\n  (define-fun var2871!2 () String\n    \"Cannot allocate \")\n  (define-fun var2871!1 () String\n    \"\")\n  (define-fun var1758!1 () String\n    \"\")\n  (define-fun var2236-init () var2236\n    var2236!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3072!1 () var2236\n    var2236!val!0)\n  (define-fun cast-from-ClassObject-to-var1770 ((x!0 ClassObject)) var1770\n    var1770!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1770)) String\n    \"\")\n  (define-fun <init>/-630064361 ((x!0 var2236) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 52 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179372032,
            "run_time": 1.114865779876709,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: ClassObject/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.UnsafeAllocator$4__newInstance__1947063674\\294.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_25_4 =\r\n     concat(all_22_4, \". Usage of JDK sun.misc.Unsafe is enabled, but it could not be used. Make sure your runtime is configured correctly.\")\r\n   var1721!1 =\r\n     concat(all_22_4, \". Usage of JDK sun.misc.Unsafe is enabled, but it could not be used. Make sure your runtime is configured correctly.\")\r\n\r\n825ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r7 := @this: com.google.gson.internal.UnsafeAllocator$4",
            "r2 := @parameter0: java.lang.Class",
            "$r0 = new java.lang.UnsupportedOperationException",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot allocate \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\". Usage of JDK sun.misc.Unsafe is enabled, but it could not be used. Make sure your runtime is configured correctly.\")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r6)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.ReflectionAccessFilterHelper__isAndroidType__-451029552\\310.smt2",
        "z3": {
            "memory": 32530432,
            "run_time": 0.05857968330383301,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var536 () String\r\n    \"android.\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2805 () Bool\r\n    (ite (= 1 1) true false))\r\n  (define-fun var534 () Bool\r\n    (str.prefixof \"android.\" var536))\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11894784,
            "run_time": 0.03042912483215332,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3629 is 1\r\n; rep: (as @var3629_0 var3629)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"\")\r\n(define-fun var536 () String \"android.\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37892096,
            "run_time": 0.1241769790649414,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var536 () String\n    \"android.\\u{0}\")\n  (define-fun var2805 () Bool\n    (ite (= 1 1) true false))\n  (define-fun var534 () Bool\n    (str.prefixof \"android.\" var536))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\\u{0}\")\n)\n(error \"line 22 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 144297984,
            "run_time": 0.9584918022155762,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var536 () String \"android.\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: boolean startsWith(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean startsWith(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean startsWith(java.lang.String)>(\"android.\")",
            "if $z0 != 0 goto $z3 = 1",
            "$z3 = 1",
            "goto [?= return $z3]",
            "return $z3"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.JsonArray__getAsSingleElement__144016426\\1455.smt2",
        "z3": {
            "memory": 32116736,
            "run_time": 0.060257673263549805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2264:\r\n  ;;   var2264!val!1 var2264!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2264!val!1 () var2264)\r\n  (declare-fun var2264!val!0 () var2264)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2264)) (or (= x var2264!val!1) (= x var2264!val!0)))\r\n  ;; -----------\r\n  ;; universe for var59:\r\n  ;;   var59!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var59!val!0 () var59)\r\n  ;; cardinality constraint:\r\n  (forall ((x var59)) (= x var59!val!0))\r\n  ;; -----------\r\n  (define-fun var2671 () String\r\n    (str.++ var1310!1\r\n        \"Array must have size 1, but has size \"\r\n        (str.from_int (size/-1863229846 (elements/-2042344586 var1738)))))\r\n  (define-fun var3847!1 () String\r\n    \"Array must have size 1, but has size \")\r\n  (define-fun var1310 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3847 () String\r\n    (str.++ var1310!1 \"Array must have size 1, but has size \"))\r\n  (define-fun var2783 () var59\r\n    (elements/-2042344586 var1738))\r\n  (define-fun var1738 () var2264\r\n    var2264!val!0)\r\n  (define-fun null-var2264 () var2264\r\n    var2264!val!1)\r\n  (define-fun var2714 () String\r\n    (str.++ var1310!1\r\n        \"Array must have size 1, but has size \"\r\n        (str.from_int (size/-1863229846 (elements/-2042344586 var1738)))))\r\n  (define-fun var1467 () var1216\r\n    var1216-init)\r\n  (define-fun var582 () Int\r\n    (size/-1863229846 (elements/-2042344586 var1738)))\r\n  (define-fun var1310!2 () String\r\n    \"Array must have size 1, but has size \")\r\n  (define-fun var1310!1 () String\r\n    \"\")\r\n  (define-fun var1216-init () var1216\r\n    var1216!val!0)\r\n  (define-fun var2671!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1467!1 () var1216\r\n    var1216!val!0)\r\n  (define-fun elements/-2042344586 ((x!0 var2264)) var59\r\n    var59!val!0)\r\n  (define-fun size/-1863229846 ((x!0 var59)) Int\r\n    2)\r\n  (define-fun <init>/-1092629202 ((x!0 var1216) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.04600667953491211,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2264 is 2\r\n; rep: (as @var2264_0 var2264)\r\n; rep: (as @var2264_1 var2264)\r\n; cardinality of var59 is 1\r\n; rep: (as @var59_0 var59)\r\n; cardinality of var1216 is 1\r\n; rep: (as @var1216_0 var1216)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun elements/-2042344586 ((_arg_1 var2264)) var59 (as @var59_0 var59))\r\n(define-fun size/-1863229846 ((_arg_1 var59)) Int 0)\r\n(define-fun var1216-init () var1216 (as @var1216_0 var1216))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_943 var1216) (BOUND_VARIABLE_944 String)) void (as @void_0 void))\r\n(define-fun null-var2264 () var2264 (as @var2264_0 var2264))\r\n(define-fun var1738 () var2264 (as @var2264_1 var2264))\r\n(define-fun var1310!1 () String \"\")\r\n(define-fun var1310!2 () String \"Array must have size 1, but has size \")\r\n(define-fun var3847!1 () String \"Array must have size 1, but has size \")\r\n(define-fun var1467!1 () var1216 (as @var1216_0 var1216))\r\n(define-fun var2671!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37117952,
            "run_time": 0.09231185913085938,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2264:\n  ;;   var2264!val!1 var2264!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2264!val!1 () var2264)\n  (declare-fun var2264!val!0 () var2264)\n  ;; cardinality constraint:\n  (forall ((x var2264)) (or (= x var2264!val!1) (= x var2264!val!0)))\n  ;; -----------\n  ;; universe for var59:\n  ;;   var59!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var59!val!0 () var59)\n  ;; cardinality constraint:\n  (forall ((x var59)) (= x var59!val!0))\n  ;; -----------\n  (define-fun var1467 () var1216\n    var1216-init)\n  (define-fun var582 () Int\n    (size/-1863229846 (elements/-2042344586 var1738)))\n  (define-fun var1310 () String\n    String-init)\n  (define-fun var1310!1 () String\n    \"\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3847 () String\n    (str.++ var1310!1 \"Array must have size 1, but has size \"))\n  (define-fun var2714 () String\n    (str.++ var1310!1\n        \"Array must have size 1, but has size \"\n        (str.from_int (size/-1863229846 (elements/-2042344586 var1738)))))\n  (define-fun var2671 () String\n    (str.++ var1310!1\n        \"Array must have size 1, but has size \"\n        (str.from_int (size/-1863229846 (elements/-2042344586 var1738)))))\n  (define-fun var3847!1 () String\n    \"Array must have size 1, but has size \")\n  (define-fun var1738 () var2264\n    var2264!val!0)\n  (define-fun null-var2264 () var2264\n    var2264!val!1)\n  (define-fun var2783 () var59\n    (elements/-2042344586 var1738))\n  (define-fun var1310!2 () String\n    \"Array must have size 1, but has size \")\n  (define-fun var1216-init () var1216\n    var1216!val!0)\n  (define-fun var2671!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1467!1 () var1216\n    var1216!val!0)\n  (define-fun elements/-2042344586 ((x!0 var2264)) var59\n    var59!val!0)\n  (define-fun size/-1863229846 ((x!0 var59)) Int\n    2)\n  (define-fun <init>/-1092629202 ((x!0 var1216) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169025536,
            "run_time": 1.1432170867919922,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3847!1 () String \"Array must have size 1, but has size \")\r\n  (define-fun var1310!2 () String \"Array must have size 1, but has size \")\r\n  (define-fun var1310!1 () String \"\")\r\n  (define-fun var1738 () var2264 var2264!78)\r\n  (define-fun null-var2264 () var2264 var2264!76)\r\n  (define-fun var59!92 () var59 (elements/-2042344586 var2264!78))\r\n  (define-fun abbrev_109 ((x!0 Int)) String (ite (= x!0 0) \"Array must have size 1, but has size \" \"\"))\r\n  (define-fun size/-1863229846 ((x!0 var59)) Int (ite (= x!0 var59!92) 47 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.JsonArray",
            "$r1 = r0.<com.google.gson.JsonArray: java.util.ArrayList elements>",
            "i0 = virtualinvoke $r1.<java.util.ArrayList: int size()>()",
            "if i0 != 1 goto $r2 = new java.lang.IllegalStateException",
            "$r2 = new java.lang.IllegalStateException",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Array must have size 1, but has size \")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i0)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r2.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r6)",
            "throw $r2"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.JsonElement__getAsJsonPrimitive__-449722137\\195.smt2",
        "z3": {
            "memory": 29048832,
            "run_time": 0.0692598819732666,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var44:\r\n  ;;   var44!val!1 var44!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var44!val!1 () var44)\r\n  (declare-fun var44!val!0 () var44)\r\n  ;; cardinality constraint:\r\n  (forall ((x var44)) (or (= x var44!val!1) (= x var44!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var44 () var44\r\n    var44!val!1)\r\n  (define-fun var2969 () var44\r\n    var44!val!0)\r\n  (define-fun var3070 () var1802\r\n    var1802-init)\r\n  (define-fun var736!1 () String\r\n    \"Not a JSON Primitive: \")\r\n  (define-fun var736 () String\r\n    (str.++ var2761!1 \"Not a JSON Primitive: \"))\r\n  (define-fun var2711 () String\r\n    (append/-1031950772\r\n  (str.++ var2761!1 \"Not a JSON Primitive: \")\r\n  (cast-from-var44-to-var3620 var2969)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1903 () Bool\r\n    (isJsonPrimitive/2003092387 var2969))\r\n  (define-fun var2761 () String\r\n    String-init)\r\n  (define-fun var3740 () String\r\n    (append/-1031950772\r\n  (str.++ var2761!1 \"Not a JSON Primitive: \")\r\n  (cast-from-var44-to-var3620 var2969)))\r\n  (define-fun var2761!2 () String\r\n    \"Not a JSON Primitive: \")\r\n  (define-fun var2761!1 () String\r\n    \"\")\r\n  (define-fun var3740!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1802-init () var1802\r\n    var1802!val!0)\r\n  (define-fun var3070!1 () var1802\r\n    var1802!val!0)\r\n  (define-fun isJsonPrimitive/2003092387 ((x!0 var44)) Bool\r\n    false)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3620)) String\r\n    \"\")\r\n  (define-fun cast-from-var44-to-var3620 ((x!0 var44)) var3620\r\n    var3620!val!0)\r\n  (define-fun <init>/-1092629202 ((x!0 var1802) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1695744,
            "run_time": 0.015865802764892578,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var44 is 2\r\n; rep: (as @var44_0 var44)\r\n; rep: (as @var44_1 var44)\r\n; cardinality of var1802 is 1\r\n; rep: (as @var1802_0 var1802)\r\n; cardinality of var3620 is 1\r\n; rep: (as @var3620_0 var3620)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun isJsonPrimitive/2003092387 ((_arg_1 var44)) Bool false)\r\n(define-fun var1802-init () var1802 (as @var1802_0 var1802))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_932 String) (BOUND_VARIABLE_933 var3620)) String \"\")\r\n(define-fun cast-from-var44-to-var3620 ((BOUND_VARIABLE_936 var44)) var3620 (as @var3620_0 var3620))\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_939 var1802) (BOUND_VARIABLE_940 String)) void (as @void_0 void))\r\n(define-fun null-var44 () var44 (as @var44_0 var44))\r\n(define-fun var2969 () var44 (as @var44_1 var44))\r\n(define-fun var2761!1 () String \"\")\r\n(define-fun var2761!2 () String \"Not a JSON Primitive: \")\r\n(define-fun var736!1 () String \"Not a JSON Primitive: \")\r\n(define-fun var3070!1 () var1802 (as @var1802_0 var1802))\r\n(define-fun var3740!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36995072,
            "run_time": 0.07779526710510254,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var44:\n  ;;   var44!val!1 var44!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var44!val!1 () var44)\n  (declare-fun var44!val!0 () var44)\n  ;; cardinality constraint:\n  (forall ((x var44)) (or (= x var44!val!1) (= x var44!val!0)))\n  ;; -----------\n  (define-fun null-var44 () var44\n    var44!val!1)\n  (define-fun var2969 () var44\n    var44!val!0)\n  (define-fun var736 () String\n    (str.++ var2761!1 \"Not a JSON Primitive: \"))\n  (define-fun var2761!1 () String\n    \"\")\n  (define-fun var2711 () String\n    (append/-1031950772\n  (str.++ var2761!1 \"Not a JSON Primitive: \")\n  (cast-from-var44-to-var3620 var2969)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3070 () var1802\n    var1802-init)\n  (define-fun var2761 () String\n    String-init)\n  (define-fun var3740 () String\n    (append/-1031950772\n  (str.++ var2761!1 \"Not a JSON Primitive: \")\n  (cast-from-var44-to-var3620 var2969)))\n  (define-fun var736!1 () String\n    \"Not a JSON Primitive: \")\n  (define-fun var1903 () Bool\n    (isJsonPrimitive/2003092387 var2969))\n  (define-fun var2761!2 () String\n    \"Not a JSON Primitive: \")\n  (define-fun var3740!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1802-init () var1802\n    var1802!val!0)\n  (define-fun var3070!1 () var1802\n    var1802!val!0)\n  (define-fun isJsonPrimitive/2003092387 ((x!0 var44)) Bool\n    false)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3620)) String\n    \"\")\n  (define-fun cast-from-var44-to-var3620 ((x!0 var44)) var3620\n    var3620!val!0)\n  (define-fun <init>/-1092629202 ((x!0 var1802) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179544064,
            "run_time": 1.1586217880249023,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var736!1 () String \"Not a JSON Primitive: \")\r\n  (define-fun var2761!2 () String \"Not a JSON Primitive: \")\r\n  (define-fun var2761!1 () String \"\")\r\n  (define-fun var2969 () var44 var44!48)\r\n  (define-fun null-var44 () var44 var44!46)\r\n  (define-fun abbrev_110 ((x!0 Int)) String (ite (= x!0 0) \"Not a JSON Primitive: \" \"\"))\r\n  (define-fun isJsonPrimitive/2003092387 ((x!0 var44)) Bool (ite (= x!0 var44!48) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.JsonElement",
            "$z0 = virtualinvoke r0.<com.google.gson.JsonElement: boolean isJsonPrimitive()>()",
            "if $z0 == 0 goto $r1 = new java.lang.IllegalStateException",
            "$r1 = new java.lang.IllegalStateException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Not a JSON Primitive: \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.JsonElement__getAsJsonObject__222650217\\105.smt2",
        "z3": {
            "memory": 32411648,
            "run_time": 0.044072628021240234,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2171:\r\n  ;;   var2171!val!1 var2171!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2171!val!1 () var2171)\r\n  (declare-fun var2171!val!0 () var2171)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2171)) (or (= x var2171!val!1) (= x var2171!val!0)))\r\n  ;; -----------\r\n  (define-fun var3528 () var2171\r\n    var2171!val!0)\r\n  (define-fun var3648 () String\r\n    (append/-1031950772\r\n  (str.++ var489!1 \"Not a JSON Object: \")\r\n  (cast-from-var2171-to-var3151 var3528)))\r\n  (define-fun var1550 () var2059\r\n    var2059-init)\r\n  (define-fun var2259 () Bool\r\n    (isJsonObject/1826282577 var3528))\r\n  (define-fun var965 () String\r\n    (str.++ var489!1 \"Not a JSON Object: \"))\r\n  (define-fun null-var2171 () var2171\r\n    var2171!val!1)\r\n  (define-fun var489 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var965!1 () String\r\n    \"Not a JSON Object: \")\r\n  (define-fun var126 () String\r\n    (append/-1031950772\r\n  (str.++ var489!1 \"Not a JSON Object: \")\r\n  (cast-from-var2171-to-var3151 var3528)))\r\n  (define-fun var489!2 () String\r\n    \"Not a JSON Object: \")\r\n  (define-fun var489!1 () String\r\n    \"\")\r\n  (define-fun var1550!1 () var2059\r\n    var2059!val!0)\r\n  (define-fun var2059-init () var2059\r\n    var2059!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var126!1 () String\r\n    \"\")\r\n  (define-fun isJsonObject/1826282577 ((x!0 var2171)) Bool\r\n    false)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3151)) String\r\n    \"\")\r\n  (define-fun cast-from-var2171-to-var3151 ((x!0 var2171)) var3151\r\n    var3151!val!0)\r\n  (define-fun <init>/-1092629202 ((x!0 var2059) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.04634213447570801,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2171 is 2\r\n; rep: (as @var2171_0 var2171)\r\n; rep: (as @var2171_1 var2171)\r\n; cardinality of var2059 is 1\r\n; rep: (as @var2059_0 var2059)\r\n; cardinality of var3151 is 1\r\n; rep: (as @var3151_0 var3151)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun isJsonObject/1826282577 ((_arg_1 var2171)) Bool false)\r\n(define-fun var2059-init () var2059 (as @var2059_0 var2059))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_930 String) (BOUND_VARIABLE_931 var3151)) String \"\")\r\n(define-fun cast-from-var2171-to-var3151 ((BOUND_VARIABLE_934 var2171)) var3151 (as @var3151_0 var3151))\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_937 var2059) (BOUND_VARIABLE_938 String)) void (as @void_0 void))\r\n(define-fun null-var2171 () var2171 (as @var2171_0 var2171))\r\n(define-fun var3528 () var2171 (as @var2171_1 var2171))\r\n(define-fun var489!1 () String \"\")\r\n(define-fun var489!2 () String \"Not a JSON Object: \")\r\n(define-fun var965!1 () String \"Not a JSON Object: \")\r\n(define-fun var1550!1 () var2059 (as @var2059_0 var2059))\r\n(define-fun var126!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37548032,
            "run_time": 0.07840585708618164,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2171:\n  ;;   var2171!val!1 var2171!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2171!val!1 () var2171)\n  (declare-fun var2171!val!0 () var2171)\n  ;; cardinality constraint:\n  (forall ((x var2171)) (or (= x var2171!val!1) (= x var2171!val!0)))\n  ;; -----------\n  (define-fun var3528 () var2171\n    var2171!val!0)\n  (define-fun var965!1 () String\n    \"Not a JSON Object: \")\n  (define-fun var489!1 () String\n    \"\")\n  (define-fun var489 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var2171 () var2171\n    var2171!val!1)\n  (define-fun var1550 () var2059\n    var2059-init)\n  (define-fun var2259 () Bool\n    (isJsonObject/1826282577 var3528))\n  (define-fun var126 () String\n    (append/-1031950772\n  (str.++ var489!1 \"Not a JSON Object: \")\n  (cast-from-var2171-to-var3151 var3528)))\n  (define-fun var3648 () String\n    (append/-1031950772\n  (str.++ var489!1 \"Not a JSON Object: \")\n  (cast-from-var2171-to-var3151 var3528)))\n  (define-fun var965 () String\n    (str.++ var489!1 \"Not a JSON Object: \"))\n  (define-fun var489!2 () String\n    \"Not a JSON Object: \")\n  (define-fun var1550!1 () var2059\n    var2059!val!0)\n  (define-fun var2059-init () var2059\n    var2059!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var126!1 () String\n    \"\")\n  (define-fun isJsonObject/1826282577 ((x!0 var2171)) Bool\n    false)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3151)) String\n    \"\")\n  (define-fun cast-from-var2171-to-var3151 ((x!0 var2171)) var3151\n    var3151!val!0)\n  (define-fun <init>/-1092629202 ((x!0 var2059) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181366784,
            "run_time": 1.1527185440063477,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var965!1 () String \"Not a JSON Object: \")\r\n  (define-fun var489!2 () String \"Not a JSON Object: \")\r\n  (define-fun var489!1 () String \"\")\r\n  (define-fun var3528 () var2171 var2171!42)\r\n  (define-fun null-var2171 () var2171 var2171!40)\r\n  (define-fun var3151!58 () var3151 (cast-from-var2171-to-var3151 var2171!42))\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3151)) String (ite (and (= x!0 \"Not a JSON Object: \") (= x!1 var3151!58)) \"\\u{0}\" \"\"))\r\n  (define-fun isJsonObject/1826282577 ((x!0 var2171)) Bool (ite (= x!0 var2171!42) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.JsonElement",
            "$z0 = virtualinvoke r0.<com.google.gson.JsonElement: boolean isJsonObject()>()",
            "if $z0 == 0 goto $r1 = new java.lang.IllegalStateException",
            "$r1 = new java.lang.IllegalStateException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Not a JSON Object: \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r5)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.JsonPrimitive__getAsCharacter__1297349376\\877.smt2",
        "z3": {
            "memory": 28479488,
            "run_time": 0.06969857215881348,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1479:\r\n  ;;   var1479!val!0 var1479!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1479!val!0 () var1479)\r\n  (declare-fun var1479!val!1 () var1479)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1479)) (or (= x var1479!val!0) (= x var1479!val!1)))\r\n  ;; -----------\r\n  (define-fun var263 () String\r\n    (getAsString/1431914449 var2380))\r\n  (define-fun var2380 () var1479\r\n    var1479!val!0)\r\n  (define-fun null-var1479 () var1479\r\n    var1479!val!1)\r\n  (define-fun var2783 () Bool\r\n    (= (str.len (getAsString/1431914449 var2380)) 0))\r\n  (define-fun var2551 () Int\r\n    (str.to_code (str.at (getAsString/1431914449 var2380) 0)))\r\n  (define-fun getAsString/1431914449 ((x!0 var1479)) String\r\n    \"A\")\r\n)\r\n(error \"line 25 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015562295913696289,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1479 is 2\r\n; rep: (as @var1479_0 var1479)\r\n; rep: (as @var1479_1 var1479)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getAsString/1431914449 ((_arg_1 var1479)) String \"A\")\r\n(define-fun null-var1479 () var1479 (as @var1479_0 var1479))\r\n(define-fun var2380 () var1479 (as @var1479_1 var1479))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 29884416,
            "run_time": 0.07710385322570801,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 24 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 25 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164061184,
            "run_time": 1.0452780723571777,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2380 () var1479 var1479!6)\r\n  (define-fun null-var1479 () var1479 var1479!4)\r\n  (define-fun getAsString/1431914449 ((x!0 var1479)) String (ite (= x!0 var1479!6) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: boolean isEmpty()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1,
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.JsonPrimitive",
            "r1 = virtualinvoke r0.<com.google.gson.JsonPrimitive: java.lang.String getAsString()>()",
            "$z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "if $z0 == 0 goto $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0)",
            "$c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0)",
            "return $c0"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__beginArray__1551982569\\58.smt2",
        "z3": {
            "memory": 32432128,
            "run_time": 0.0703730583190918,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3057:\r\n  ;;   var3057!val!1 var3057!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3057!val!1 () var3057)\r\n  (declare-fun var3057!val!0 () var3057)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3057)) (or (= x var3057!val!1) (= x var3057!val!0)))\r\n  ;; -----------\r\n  (define-fun var1949 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var1908!1 \"Expected BEGIN_ARRAY but was \")\r\n          (cast-from-var3393-to-var729 (peek/-699404472 var670)))\r\n        (locationString/1083242436 var670)))\r\n  (define-fun var3405 () Int\r\n    (peeked/1477480286 var670))\r\n  (define-fun var1034 () var3393\r\n    (peek/-699404472 var670))\r\n  (define-fun null-var3057 () var3057\r\n    var3057!val!1)\r\n  (define-fun var670 () var3057\r\n    var3057!val!0)\r\n  (define-fun var2354!1 () String\r\n    \"Expected BEGIN_ARRAY but was \")\r\n  (define-fun var2105 () String\r\n    (locationString/1083242436 var670))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1965 () String\r\n    (append/-1031950772\r\n  (str.++ var1908!1 \"Expected BEGIN_ARRAY but was \")\r\n  (cast-from-var3393-to-var729 (peek/-699404472 var670))))\r\n  (define-fun var3310 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var1908!1 \"Expected BEGIN_ARRAY but was \")\r\n          (cast-from-var3393-to-var729 (peek/-699404472 var670)))\r\n        (locationString/1083242436 var670)))\r\n  (define-fun var969 () var556\r\n    var556-init)\r\n  (define-fun var2354 () String\r\n    (str.++ var1908!1 \"Expected BEGIN_ARRAY but was \"))\r\n  (define-fun var1908 () String\r\n    String-init)\r\n  (define-fun var1908!1 () String\r\n    \"\")\r\n  (define-fun var1965!1 () String\r\n    \"\")\r\n  (define-fun var1908!2 () String\r\n    \"Expected BEGIN_ARRAY but was \")\r\n  (define-fun var969!1 () var556\r\n    var556!val!0)\r\n  (define-fun var1949!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var556-init () var556\r\n    var556!val!0)\r\n  (define-fun peeked/1477480286 ((x!0 var3057)) Int\r\n    2)\r\n  (define-fun peek/-699404472 ((x!0 var3057)) var3393\r\n    var3393!val!0)\r\n  (define-fun cast-from-var3393-to-var729 ((x!0 var3393)) var729\r\n    var729!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var729)) String\r\n    \"\")\r\n  (define-fun locationString/1083242436 ((x!0 var3057)) String\r\n    \"\")\r\n  (define-fun <init>/-1092629202 ((x!0 var556) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 62 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12050432,
            "run_time": 0.03142261505126953,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3057 is 2\r\n; rep: (as @var3057_0 var3057)\r\n; rep: (as @var3057_1 var3057)\r\n; cardinality of var556 is 1\r\n; rep: (as @var556_0 var556)\r\n; cardinality of var3393 is 1\r\n; rep: (as @var3393_0 var3393)\r\n; cardinality of var729 is 1\r\n; rep: (as @var729_0 var729)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peeked/1477480286 ((_arg_1 var3057)) Int (- 1))\r\n(define-fun var556-init () var556 (as @var556_0 var556))\r\n(define-fun String-init () String \"\")\r\n(define-fun peek/-699404472 ((BOUND_VARIABLE_991 var3057)) var3393 (as @var3393_0 var3393))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_994 String) (BOUND_VARIABLE_995 var729)) String \"\")\r\n(define-fun cast-from-var3393-to-var729 ((BOUND_VARIABLE_998 var3393)) var729 (as @var729_0 var729))\r\n(define-fun locationString/1083242436 ((BOUND_VARIABLE_1001 var3057)) String \"\")\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_1004 var556) (BOUND_VARIABLE_1005 String)) void (as @void_0 void))\r\n(define-fun null-var3057 () var3057 (as @var3057_0 var3057))\r\n(define-fun var670 () var3057 (as @var3057_1 var3057))\r\n(define-fun var1908!1 () String \"\")\r\n(define-fun var1908!2 () String \"Expected BEGIN_ARRAY but was \")\r\n(define-fun var2354!1 () String \"Expected BEGIN_ARRAY but was \")\r\n(define-fun var1965!1 () String \"\")\r\n(define-fun var969!1 () var556 (as @var556_0 var556))\r\n(define-fun var1949!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37048320,
            "run_time": 0.09337973594665527,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3057:\n  ;;   var3057!val!1 var3057!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3057!val!1 () var3057)\n  (declare-fun var3057!val!0 () var3057)\n  ;; cardinality constraint:\n  (forall ((x var3057)) (or (= x var3057!val!1) (= x var3057!val!0)))\n  ;; -----------\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var3057 () var3057\n    var3057!val!1)\n  (define-fun var1965 () String\n    (append/-1031950772\n  (str.++ var1908!1 \"Expected BEGIN_ARRAY but was \")\n  (cast-from-var3393-to-var729 (peek/-699404472 var670))))\n  (define-fun var2354 () String\n    (str.++ var1908!1 \"Expected BEGIN_ARRAY but was \"))\n  (define-fun var2354!1 () String\n    \"Expected BEGIN_ARRAY but was \")\n  (define-fun var1949 () String\n    (str.++ (append/-1031950772\n          (str.++ var1908!1 \"Expected BEGIN_ARRAY but was \")\n          (cast-from-var3393-to-var729 (peek/-699404472 var670)))\n        (locationString/1083242436 var670)))\n  (define-fun var969 () var556\n    var556-init)\n  (define-fun var1908!2 () String\n    \"Expected BEGIN_ARRAY but was \")\n  (define-fun var670 () var3057\n    var3057!val!0)\n  (define-fun var3405 () Int\n    (peeked/1477480286 var670))\n  (define-fun var1034 () var3393\n    (peek/-699404472 var670))\n  (define-fun var3310 () String\n    (str.++ (append/-1031950772\n          (str.++ var1908!1 \"Expected BEGIN_ARRAY but was \")\n          (cast-from-var3393-to-var729 (peek/-699404472 var670)))\n        (locationString/1083242436 var670)))\n  (define-fun var1908 () String\n    String-init)\n  (define-fun var2105 () String\n    (locationString/1083242436 var670))\n  (define-fun var1908!1 () String\n    \"\")\n  (define-fun var1965!1 () String\n    \"\")\n  (define-fun var969!1 () var556\n    var556!val!0)\n  (define-fun var1949!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var556-init () var556\n    var556!val!0)\n  (define-fun peeked/1477480286 ((x!0 var3057)) Int\n    2)\n  (define-fun peek/-699404472 ((x!0 var3057)) var3393\n    var3393!val!0)\n  (define-fun cast-from-var3393-to-var729 ((x!0 var3393)) var729\n    var729!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var729)) String\n    \"\")\n  (define-fun locationString/1083242436 ((x!0 var3057)) String\n    \"\")\n  (define-fun <init>/-1092629202 ((x!0 var556) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 62 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166039552,
            "run_time": 1.0754406452178955,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3057/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.stream.JsonReader__beginArray__1551982569\\58.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1965!1 =\r\n     concat(all_31_3, all_31_2)\r\n\r\n810ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "i2 = r0.<com.google.gson.stream.JsonReader: int peeked>",
            "if i2 != 0 goto (branch)",
            "if i2 != 3 goto $r1 = new java.lang.IllegalStateException",
            "$r1 = new java.lang.IllegalStateException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected BEGIN_ARRAY but was \")",
            "$r3 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>()",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3)",
            "$r5 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String locationString()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__endObject__938775527\\142.smt2",
        "z3": {
            "memory": 32522240,
            "run_time": 0.07195329666137695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1167:\r\n  ;;   var1167!val!1 var1167!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1167!val!1 () var1167)\r\n  (declare-fun var1167!val!0 () var1167)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1167)) (or (= x var1167!val!1) (= x var1167!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var1167 () var1167\r\n    var1167!val!1)\r\n  (define-fun var1572 () String\r\n    (str.++ var3314!1 \"Expected END_OBJECT but was \"))\r\n  (define-fun var2216 () var3232\r\n    (peek/-699404472 var2727))\r\n  (define-fun var2146 () String\r\n    (append/-1031950772\r\n  (str.++ var3314!1 \"Expected END_OBJECT but was \")\r\n  (cast-from-var3232-to-var2452 (peek/-699404472 var2727))))\r\n  (define-fun var3314 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2727 () var1167\r\n    var1167!val!0)\r\n  (define-fun var436 () Int\r\n    (peeked/1477480286 var2727))\r\n  (define-fun var2356 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var3314!1 \"Expected END_OBJECT but was \")\r\n          (cast-from-var3232-to-var2452 (peek/-699404472 var2727)))\r\n        (locationString/1083242436 var2727)))\r\n  (define-fun var1572!1 () String\r\n    \"Expected END_OBJECT but was \")\r\n  (define-fun var782 () var1004\r\n    var1004-init)\r\n  (define-fun var2976 () String\r\n    (locationString/1083242436 var2727))\r\n  (define-fun var3523 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var3314!1 \"Expected END_OBJECT but was \")\r\n          (cast-from-var3232-to-var2452 (peek/-699404472 var2727)))\r\n        (locationString/1083242436 var2727)))\r\n  (define-fun var3314!2 () String\r\n    \"Expected END_OBJECT but was \")\r\n  (define-fun var2146!1 () String\r\n    \"\")\r\n  (define-fun var3314!1 () String\r\n    \"\")\r\n  (define-fun var782!1 () var1004\r\n    var1004!val!0)\r\n  (define-fun var1004-init () var1004\r\n    var1004!val!0)\r\n  (define-fun var3523!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun peeked/1477480286 ((x!0 var1167)) Int\r\n    3)\r\n  (define-fun peek/-699404472 ((x!0 var1167)) var3232\r\n    var3232!val!0)\r\n  (define-fun cast-from-var3232-to-var2452 ((x!0 var3232)) var2452\r\n    var2452!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2452)) String\r\n    \"\")\r\n  (define-fun locationString/1083242436 ((x!0 var1167)) String\r\n    \"\")\r\n  (define-fun <init>/-1092629202 ((x!0 var1004) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 62 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10321920,
            "run_time": 0.0303499698638916,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1167 is 2\r\n; rep: (as @var1167_0 var1167)\r\n; rep: (as @var1167_1 var1167)\r\n; cardinality of var1004 is 1\r\n; rep: (as @var1004_0 var1004)\r\n; cardinality of var3232 is 1\r\n; rep: (as @var3232_0 var3232)\r\n; cardinality of var2452 is 1\r\n; rep: (as @var2452_0 var2452)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peeked/1477480286 ((_arg_1 var1167)) Int (- 1))\r\n(define-fun var1004-init () var1004 (as @var1004_0 var1004))\r\n(define-fun String-init () String \"\")\r\n(define-fun peek/-699404472 ((BOUND_VARIABLE_992 var1167)) var3232 (as @var3232_0 var3232))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_995 String) (BOUND_VARIABLE_996 var2452)) String \"\")\r\n(define-fun cast-from-var3232-to-var2452 ((BOUND_VARIABLE_999 var3232)) var2452 (as @var2452_0 var2452))\r\n(define-fun locationString/1083242436 ((BOUND_VARIABLE_1002 var1167)) String \"\")\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_1005 var1004) (BOUND_VARIABLE_1006 String)) void (as @void_0 void))\r\n(define-fun null-var1167 () var1167 (as @var1167_0 var1167))\r\n(define-fun var2727 () var1167 (as @var1167_1 var1167))\r\n(define-fun var3314!1 () String \"\")\r\n(define-fun var3314!2 () String \"Expected END_OBJECT but was \")\r\n(define-fun var1572!1 () String \"Expected END_OBJECT but was \")\r\n(define-fun var2146!1 () String \"\")\r\n(define-fun var782!1 () var1004 (as @var1004_0 var1004))\r\n(define-fun var3523!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37695488,
            "run_time": 0.12331914901733398,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1167:\n  ;;   var1167!val!1 var1167!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1167!val!1 () var1167)\n  (declare-fun var1167!val!0 () var1167)\n  ;; cardinality constraint:\n  (forall ((x var1167)) (or (= x var1167!val!1) (= x var1167!val!0)))\n  ;; -----------\n  (define-fun var2216 () var3232\n    (peek/-699404472 var2727))\n  (define-fun var1572!1 () String\n    \"Expected END_OBJECT but was \")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2356 () String\n    (str.++ (append/-1031950772\n          (str.++ var3314!1 \"Expected END_OBJECT but was \")\n          (cast-from-var3232-to-var2452 (peek/-699404472 var2727)))\n        (locationString/1083242436 var2727)))\n  (define-fun var2976 () String\n    (locationString/1083242436 var2727))\n  (define-fun var3523 () String\n    (str.++ (append/-1031950772\n          (str.++ var3314!1 \"Expected END_OBJECT but was \")\n          (cast-from-var3232-to-var2452 (peek/-699404472 var2727)))\n        (locationString/1083242436 var2727)))\n  (define-fun var436 () Int\n    (peeked/1477480286 var2727))\n  (define-fun var1572 () String\n    (str.++ var3314!1 \"Expected END_OBJECT but was \"))\n  (define-fun var782 () var1004\n    var1004-init)\n  (define-fun var2146 () String\n    (append/-1031950772\n  (str.++ var3314!1 \"Expected END_OBJECT but was \")\n  (cast-from-var3232-to-var2452 (peek/-699404472 var2727))))\n  (define-fun var3314 () String\n    String-init)\n  (define-fun var3314!1 () String\n    \"\")\n  (define-fun var2727 () var1167\n    var1167!val!0)\n  (define-fun null-var1167 () var1167\n    var1167!val!1)\n  (define-fun var3314!2 () String\n    \"Expected END_OBJECT but was \")\n  (define-fun var2146!1 () String\n    \"\")\n  (define-fun var782!1 () var1004\n    var1004!val!0)\n  (define-fun var1004-init () var1004\n    var1004!val!0)\n  (define-fun var3523!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun peeked/1477480286 ((x!0 var1167)) Int\n    3)\n  (define-fun peek/-699404472 ((x!0 var1167)) var3232\n    var3232!val!0)\n  (define-fun cast-from-var3232-to-var2452 ((x!0 var3232)) var2452\n    var2452!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2452)) String\n    \"\")\n  (define-fun locationString/1083242436 ((x!0 var1167)) String\n    \"\")\n  (define-fun <init>/-1092629202 ((x!0 var1004) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 62 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177610752,
            "run_time": 1.0603752136230469,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1167/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.stream.JsonReader__endObject__938775527\\142.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2146!1 =\r\n     concat(all_31_3, all_31_2)\r\n\r\n774ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "i7 = r0.<com.google.gson.stream.JsonReader: int peeked>",
            "if i7 != 0 goto (branch)",
            "if i7 != 2 goto $r1 = new java.lang.IllegalStateException",
            "$r1 = new java.lang.IllegalStateException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected END_OBJECT but was \")",
            "$r3 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>()",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3)",
            "$r5 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String locationString()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.JsonPrimitive__getAsCharacter__1297349376\\577.smt2",
        "z3": {
            "memory": 31514624,
            "run_time": 0.06940412521362305,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var782:\r\n  ;;   var782!val!0 var782!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var782!val!0 () var782)\r\n  (declare-fun var782!val!1 () var782)\r\n  ;; cardinality constraint:\r\n  (forall ((x var782)) (or (= x var782!val!0) (= x var782!val!1)))\r\n  ;; -----------\r\n  (define-fun var1206 () var782\r\n    var782!val!0)\r\n  (define-fun var3991 () String\r\n    (getAsString/1431914449 var1206))\r\n  (define-fun var33 () var2043\r\n    var2043-init)\r\n  (define-fun var3155 () Bool\r\n    (= (str.len (getAsString/1431914449 var1206)) 0))\r\n  (define-fun null-var782 () var782\r\n    var782!val!1)\r\n  (define-fun var33!1 () var2043\r\n    var2043!val!0)\r\n  (define-fun var2043-init () var2043\r\n    var2043!val!0)\r\n  (define-fun var3932 () String\r\n    \"\")\r\n  (define-fun getAsString/1431914449 ((x!0 var782)) String\r\n    \"\")\r\n  (define-fun <init>/-630064361 ((x!0 var2043) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 31 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015453100204467773,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var782 is 2\r\n; rep: (as @var782_0 var782)\r\n; rep: (as @var782_1 var782)\r\n; cardinality of var2043 is 1\r\n; rep: (as @var2043_0 var2043)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getAsString/1431914449 ((_arg_1 var782)) String \"\")\r\n(define-fun var2043-init () var2043 (as @var2043_0 var2043))\r\n(define-fun <init>/-630064361 ((BOUND_VARIABLE_519 var2043) (BOUND_VARIABLE_520 String)) void (as @void_0 void))\r\n(define-fun null-var782 () var782 (as @var782_0 var782))\r\n(define-fun var1206 () var782 (as @var782_1 var782))\r\n(define-fun var33!1 () var2043 (as @var2043_0 var2043))\r\n(define-fun var3932 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35262464,
            "run_time": 0.07724785804748535,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 30 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 31 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154038272,
            "run_time": 0.9144563674926758,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1206 () var782 var782!4)\r\n  (define-fun null-var782 () var782 var782!2)\r\n  (define-fun getAsString/1431914449 ((x!0 var782)) String (ite (= x!0 var782!4) \"\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: boolean isEmpty()>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.JsonPrimitive",
            "r1 = virtualinvoke r0.<com.google.gson.JsonPrimitive: java.lang.String getAsString()>()",
            "$z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "if $z0 == 0 goto $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0)",
            "$r2 = new java.lang.UnsupportedOperationException",
            "specialinvoke $r2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(\"String value is empty\")",
            "throw $r2"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__nextBoolean__229392328\\722.smt2",
        "z3": {
            "memory": 31531008,
            "run_time": 0.05545806884765625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1204:\r\n  ;;   var1204!val!0 var1204!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1204!val!0 () var1204)\r\n  (declare-fun var1204!val!1 () var1204)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1204)) (or (= x var1204!val!0) (= x var1204!val!1)))\r\n  ;; -----------\r\n  (define-fun var348 () var2706\r\n    var2706-init)\r\n  (define-fun var3525 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var641!1 \"Expected a boolean but was \")\r\n          (cast-from-var130-to-var1474 (peek/-699404472 var3535)))\r\n        (locationString/1083242436 var3535)))\r\n  (define-fun var3101 () String\r\n    (append/-1031950772\r\n  (str.++ var641!1 \"Expected a boolean but was \")\r\n  (cast-from-var130-to-var1474 (peek/-699404472 var3535))))\r\n  (define-fun null-var1204 () var1204\r\n    var1204!val!1)\r\n  (define-fun var1989 () Int\r\n    (peeked/1477480286 var3535))\r\n  (define-fun var2618!1 () String\r\n    \"Expected a boolean but was \")\r\n  (define-fun var2051 () String\r\n    (locationString/1083242436 var3535))\r\n  (define-fun var3319 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var641!1 \"Expected a boolean but was \")\r\n          (cast-from-var130-to-var1474 (peek/-699404472 var3535)))\r\n        (locationString/1083242436 var3535)))\r\n  (define-fun var2088 () var130\r\n    (peek/-699404472 var3535))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3535 () var1204\r\n    var1204!val!0)\r\n  (define-fun var641 () String\r\n    String-init)\r\n  (define-fun var2618 () String\r\n    (str.++ var641!1 \"Expected a boolean but was \"))\r\n  (define-fun var3101!1 () String\r\n    \"\")\r\n  (define-fun var641!2 () String\r\n    \"Expected a boolean but was \")\r\n  (define-fun var641!1 () String\r\n    \"\")\r\n  (define-fun var348!1 () var2706\r\n    var2706!val!0)\r\n  (define-fun var3319!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2706-init () var2706\r\n    var2706!val!0)\r\n  (define-fun peeked/1477480286 ((x!0 var1204)) Int\r\n    2)\r\n  (define-fun peek/-699404472 ((x!0 var1204)) var130\r\n    var130!val!0)\r\n  (define-fun cast-from-var130-to-var1474 ((x!0 var130)) var1474\r\n    var1474!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1474)) String\r\n    \"\")\r\n  (define-fun locationString/1083242436 ((x!0 var1204)) String\r\n    \"\")\r\n  (define-fun <init>/-1092629202 ((x!0 var2706) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 64 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12206080,
            "run_time": 0.030049800872802734,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1204 is 2\r\n; rep: (as @var1204_0 var1204)\r\n; rep: (as @var1204_1 var1204)\r\n; cardinality of var2706 is 1\r\n; rep: (as @var2706_0 var2706)\r\n; cardinality of var130 is 1\r\n; rep: (as @var130_0 var130)\r\n; cardinality of var1474 is 1\r\n; rep: (as @var1474_0 var1474)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peeked/1477480286 ((_arg_1 var1204)) Int (- 1))\r\n(define-fun var2706-init () var2706 (as @var2706_0 var2706))\r\n(define-fun String-init () String \"\")\r\n(define-fun peek/-699404472 ((BOUND_VARIABLE_997 var1204)) var130 (as @var130_0 var130))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1000 String) (BOUND_VARIABLE_1001 var1474)) String \"\")\r\n(define-fun cast-from-var130-to-var1474 ((BOUND_VARIABLE_1004 var130)) var1474 (as @var1474_0 var1474))\r\n(define-fun locationString/1083242436 ((BOUND_VARIABLE_1007 var1204)) String \"\")\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_1010 var2706) (BOUND_VARIABLE_1011 String)) void (as @void_0 void))\r\n(define-fun null-var1204 () var1204 (as @var1204_0 var1204))\r\n(define-fun var3535 () var1204 (as @var1204_1 var1204))\r\n(define-fun var641!1 () String \"\")\r\n(define-fun var641!2 () String \"Expected a boolean but was \")\r\n(define-fun var2618!1 () String \"Expected a boolean but was \")\r\n(define-fun var3101!1 () String \"\")\r\n(define-fun var348!1 () var2706 (as @var2706_0 var2706))\r\n(define-fun var3319!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37699584,
            "run_time": 0.07708859443664551,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1204:\n  ;;   var1204!val!0 var1204!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1204!val!0 () var1204)\n  (declare-fun var1204!val!1 () var1204)\n  ;; cardinality constraint:\n  (forall ((x var1204)) (or (= x var1204!val!0) (= x var1204!val!1)))\n  ;; -----------\n  (define-fun null-var1204 () var1204\n    var1204!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2618 () String\n    (str.++ var641!1 \"Expected a boolean but was \"))\n  (define-fun var1989 () Int\n    (peeked/1477480286 var3535))\n  (define-fun var3525 () String\n    (str.++ (append/-1031950772\n          (str.++ var641!1 \"Expected a boolean but was \")\n          (cast-from-var130-to-var1474 (peek/-699404472 var3535)))\n        (locationString/1083242436 var3535)))\n  (define-fun var2618!1 () String\n    \"Expected a boolean but was \")\n  (define-fun var3101 () String\n    (append/-1031950772\n  (str.++ var641!1 \"Expected a boolean but was \")\n  (cast-from-var130-to-var1474 (peek/-699404472 var3535))))\n  (define-fun var2051 () String\n    (locationString/1083242436 var3535))\n  (define-fun var3319 () String\n    (str.++ (append/-1031950772\n          (str.++ var641!1 \"Expected a boolean but was \")\n          (cast-from-var130-to-var1474 (peek/-699404472 var3535)))\n        (locationString/1083242436 var3535)))\n  (define-fun var641!1 () String\n    \"\")\n  (define-fun var348 () var2706\n    var2706-init)\n  (define-fun var641 () String\n    String-init)\n  (define-fun var3535 () var1204\n    var1204!val!0)\n  (define-fun var2088 () var130\n    (peek/-699404472 var3535))\n  (define-fun var3101!1 () String\n    \"\")\n  (define-fun var641!2 () String\n    \"Expected a boolean but was \")\n  (define-fun var348!1 () var2706\n    var2706!val!0)\n  (define-fun var3319!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2706-init () var2706\n    var2706!val!0)\n  (define-fun peeked/1477480286 ((x!0 var1204)) Int\n    2)\n  (define-fun peek/-699404472 ((x!0 var1204)) var130\n    var130!val!0)\n  (define-fun cast-from-var130-to-var1474 ((x!0 var130)) var1474\n    var1474!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1474)) String\n    \"\")\n  (define-fun locationString/1083242436 ((x!0 var1204)) String\n    \"\")\n  (define-fun <init>/-1092629202 ((x!0 var2706) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 64 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169390080,
            "run_time": 1.053135633468628,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1204/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.stream.JsonReader__nextBoolean__229392328\\722.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3101!1 =\r\n     concat(all_33_3, all_33_2)\r\n\r\n761ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "i8 = r0.<com.google.gson.stream.JsonReader: int peeked>",
            "if i8 != 0 goto (branch)",
            "if i8 != 5 goto (branch)",
            "if i8 != 6 goto $r1 = new java.lang.IllegalStateException",
            "$r1 = new java.lang.IllegalStateException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected a boolean but was \")",
            "$r3 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>()",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3)",
            "$r5 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String locationString()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__beginObject__803465945\\114.smt2",
        "z3": {
            "memory": 32583680,
            "run_time": 0.05760645866394043,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1070:\r\n  ;;   var1070!val!0 var1070!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1070!val!0 () var1070)\r\n  (declare-fun var1070!val!1 () var1070)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1070)) (or (= x var1070!val!0) (= x var1070!val!1)))\r\n  ;; -----------\r\n  (define-fun var2697 () String\r\n    String-init)\r\n  (define-fun var209 () String\r\n    (locationString/1083242436 var578))\r\n  (define-fun var2649 () var917\r\n    (peek/-699404472 var578))\r\n  (define-fun var20 () Int\r\n    (peeked/1477480286 var578))\r\n  (define-fun var1612 () String\r\n    (str.++ var2697!1 \"Expected BEGIN_OBJECT but was \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var578 () var1070\r\n    var1070!val!0)\r\n  (define-fun var1612!1 () String\r\n    \"Expected BEGIN_OBJECT but was \")\r\n  (define-fun var2299 () String\r\n    (append/-1031950772\r\n  (str.++ var2697!1 \"Expected BEGIN_OBJECT but was \")\r\n  (cast-from-var917-to-var1017 (peek/-699404472 var578))))\r\n  (define-fun var1109 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var2697!1 \"Expected BEGIN_OBJECT but was \")\r\n          (cast-from-var917-to-var1017 (peek/-699404472 var578)))\r\n        (locationString/1083242436 var578)))\r\n  (define-fun null-var1070 () var1070\r\n    var1070!val!1)\r\n  (define-fun var1813 () var3797\r\n    var3797-init)\r\n  (define-fun var1742 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var2697!1 \"Expected BEGIN_OBJECT but was \")\r\n          (cast-from-var917-to-var1017 (peek/-699404472 var578)))\r\n        (locationString/1083242436 var578)))\r\n  (define-fun var2697!2 () String\r\n    \"Expected BEGIN_OBJECT but was \")\r\n  (define-fun var2697!1 () String\r\n    \"\")\r\n  (define-fun var2299!1 () String\r\n    \"\")\r\n  (define-fun var3797-init () var3797\r\n    var3797!val!0)\r\n  (define-fun var1109!1 () String\r\n    \"\")\r\n  (define-fun var1813!1 () var3797\r\n    var3797!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun peeked/1477480286 ((x!0 var1070)) Int\r\n    2)\r\n  (define-fun peek/-699404472 ((x!0 var1070)) var917\r\n    var917!val!0)\r\n  (define-fun cast-from-var917-to-var1017 ((x!0 var917)) var1017\r\n    var1017!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1017)) String\r\n    \"\")\r\n  (define-fun locationString/1083242436 ((x!0 var1070)) String\r\n    \"\")\r\n  (define-fun <init>/-1092629202 ((x!0 var3797) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 62 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12247040,
            "run_time": 0.03159141540527344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1070 is 2\r\n; rep: (as @var1070_0 var1070)\r\n; rep: (as @var1070_1 var1070)\r\n; cardinality of var3797 is 1\r\n; rep: (as @var3797_0 var3797)\r\n; cardinality of var917 is 1\r\n; rep: (as @var917_0 var917)\r\n; cardinality of var1017 is 1\r\n; rep: (as @var1017_0 var1017)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peeked/1477480286 ((_arg_1 var1070)) Int (- 1))\r\n(define-fun var3797-init () var3797 (as @var3797_0 var3797))\r\n(define-fun String-init () String \"\")\r\n(define-fun peek/-699404472 ((BOUND_VARIABLE_993 var1070)) var917 (as @var917_0 var917))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_996 String) (BOUND_VARIABLE_997 var1017)) String \"\")\r\n(define-fun cast-from-var917-to-var1017 ((BOUND_VARIABLE_1000 var917)) var1017 (as @var1017_0 var1017))\r\n(define-fun locationString/1083242436 ((BOUND_VARIABLE_1003 var1070)) String \"\")\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_1006 var3797) (BOUND_VARIABLE_1007 String)) void (as @void_0 void))\r\n(define-fun null-var1070 () var1070 (as @var1070_0 var1070))\r\n(define-fun var578 () var1070 (as @var1070_1 var1070))\r\n(define-fun var2697!1 () String \"\")\r\n(define-fun var2697!2 () String \"Expected BEGIN_OBJECT but was \")\r\n(define-fun var1612!1 () String \"Expected BEGIN_OBJECT but was \")\r\n(define-fun var2299!1 () String \"\")\r\n(define-fun var1813!1 () var3797 (as @var3797_0 var3797))\r\n(define-fun var1109!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36642816,
            "run_time": 0.1237034797668457,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1070:\n  ;;   var1070!val!0 var1070!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1070!val!0 () var1070)\n  (declare-fun var1070!val!1 () var1070)\n  ;; cardinality constraint:\n  (forall ((x var1070)) (or (= x var1070!val!0) (= x var1070!val!1)))\n  ;; -----------\n  (define-fun var1813 () var3797\n    var3797-init)\n  (define-fun var1612 () String\n    (str.++ var2697!1 \"Expected BEGIN_OBJECT but was \"))\n  (define-fun var1109 () String\n    (str.++ (append/-1031950772\n          (str.++ var2697!1 \"Expected BEGIN_OBJECT but was \")\n          (cast-from-var917-to-var1017 (peek/-699404472 var578)))\n        (locationString/1083242436 var578)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var578 () var1070\n    var1070!val!0)\n  (define-fun var1742 () String\n    (str.++ (append/-1031950772\n          (str.++ var2697!1 \"Expected BEGIN_OBJECT but was \")\n          (cast-from-var917-to-var1017 (peek/-699404472 var578)))\n        (locationString/1083242436 var578)))\n  (define-fun var2697 () String\n    String-init)\n  (define-fun var209 () String\n    (locationString/1083242436 var578))\n  (define-fun var1612!1 () String\n    \"Expected BEGIN_OBJECT but was \")\n  (define-fun var2299 () String\n    (append/-1031950772\n  (str.++ var2697!1 \"Expected BEGIN_OBJECT but was \")\n  (cast-from-var917-to-var1017 (peek/-699404472 var578))))\n  (define-fun var2299!1 () String\n    \"\")\n  (define-fun var2649 () var917\n    (peek/-699404472 var578))\n  (define-fun var20 () Int\n    (peeked/1477480286 var578))\n  (define-fun null-var1070 () var1070\n    var1070!val!1)\n  (define-fun var2697!2 () String\n    \"Expected BEGIN_OBJECT but was \")\n  (define-fun var2697!1 () String\n    \"\")\n  (define-fun var3797-init () var3797\n    var3797!val!0)\n  (define-fun var1109!1 () String\n    \"\")\n  (define-fun var1813!1 () var3797\n    var3797!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun peeked/1477480286 ((x!0 var1070)) Int\n    2)\n  (define-fun peek/-699404472 ((x!0 var1070)) var917\n    var917!val!0)\n  (define-fun cast-from-var917-to-var1017 ((x!0 var917)) var1017\n    var1017!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1017)) String\n    \"\")\n  (define-fun locationString/1083242436 ((x!0 var1070)) String\n    \"\")\n  (define-fun <init>/-1092629202 ((x!0 var3797) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 62 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166608896,
            "run_time": 1.0090959072113037,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1070/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.stream.JsonReader__beginObject__803465945\\114.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2299!1 =\r\n     concat(all_31_3, all_31_2)\r\n\r\n722ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "i0 = r0.<com.google.gson.stream.JsonReader: int peeked>",
            "if i0 != 0 goto (branch)",
            "if i0 != 1 goto $r1 = new java.lang.IllegalStateException",
            "$r1 = new java.lang.IllegalStateException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected BEGIN_OBJECT but was \")",
            "$r3 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>()",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3)",
            "$r5 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String locationString()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.JsonPrimitive__getAsCharacter__1297349376\\877-deviant-0.smt2",
        "z3": {
            "memory": 28549120,
            "run_time": 0.05962991714477539,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 22 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1736704,
            "run_time": 0.015889883041381836,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35590144,
            "run_time": 0.07694387435913086,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 22 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150130688,
            "run_time": 0.8065664768218994,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: boolean isEmpty()>",
            "<java.lang.String: char charAt(int)>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1,
            "<java.lang.String: char charAt(int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.JsonPrimitive",
            "r1 = virtualinvoke r0.<com.google.gson.JsonPrimitive: java.lang.String getAsString()>()",
            "$z0 = virtualinvoke r1.<java.lang.String: boolean isEmpty()>()",
            "if $z0 == 0 goto $c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0)",
            "$c0 = virtualinvoke r1.<java.lang.String: char charAt(int)>(0)",
            "return $c0"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__getPath__-1501601443\\1430.smt2",
        "z3": {
            "memory": 32137216,
            "run_time": 0.07528877258300781,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var700:\r\n  ;;   var700!val!1 var700!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var700!val!1 () var700)\r\n  (declare-fun var700!val!0 () var700)\r\n  ;; cardinality constraint:\r\n  (forall ((x var700)) (or (= x var700!val!1) (= x var700!val!0)))\r\n  ;; -----------\r\n  (define-fun var1188 () String\r\n    (append/-1166366385 var1372!1 36))\r\n  (define-fun var223 () Int\r\n    0)\r\n  (define-fun var1372 () String\r\n    String-init)\r\n  (define-fun var893 () String\r\n    (append/-1166366385 var1372!1 36))\r\n  (define-fun null-var700 () var700\r\n    var700!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1017 () Bool\r\n    true)\r\n  (define-fun var3225 () Int\r\n    (stackSize/1477480286 var1225))\r\n  (define-fun var1225 () var700\r\n    var700!val!0)\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var1372!1 () String\r\n    \"\")\r\n  (define-fun var1372!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun stackSize/1477480286 ((x!0 var700)) Int\r\n    0)\r\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\r\n    \"\")\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015738487243652344,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var700 is 2\r\n; rep: (as @var700_0 var700)\r\n; rep: (as @var700_1 var700)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_539 String) (BOUND_VARIABLE_540 Int)) String \"\")\r\n(define-fun stackSize/1477480286 ((_arg_1 var700)) Int 0)\r\n(define-fun null-var700 () var700 (as @var700_0 var700))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var1225 () var700 (as @var700_1 var700))\r\n(define-fun var1017 () Bool false)\r\n(define-fun var1372!1 () String \"\")\r\n(define-fun var1372!2 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33005568,
            "run_time": 0.0775296688079834,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var700:\n  ;;   var700!val!1 var700!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var700!val!1 () var700)\n  (declare-fun var700!val!0 () var700)\n  ;; cardinality constraint:\n  (forall ((x var700)) (or (= x var700!val!1) (= x var700!val!0)))\n  ;; -----------\n  (define-fun var1372 () String\n    String-init)\n  (define-fun var893 () String\n    (append/-1166366385 var1372!1 36))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var700 () var700\n    var700!val!1)\n  (define-fun var223 () Int\n    0)\n  (define-fun var1017 () Bool\n    true)\n  (define-fun var1225 () var700\n    var700!val!0)\n  (define-fun var1188 () String\n    (append/-1166366385 var1372!1 36))\n  (define-fun var3225 () Int\n    (stackSize/1477480286 var1225))\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun var1372!1 () String\n    \"\")\n  (define-fun var1372!2 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun stackSize/1477480286 ((x!0 var700)) Int\n    0)\n  (define-fun append/-1166366385 ((x!0 String) (x!1 Int)) String\n    \"\")\n)\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 172523520,
            "run_time": 0.9453699588775635,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1372!2 () String \"\")\r\n  (define-fun var1372!1 () String \"\")\r\n  (define-fun var1225 () var700 var700!4)\r\n  (define-fun null-var700 () var700 var700!2)\r\n  (define-fun var1017 () Bool true)\r\n  (define-fun null-Bool () Bool false)\r\n  (define-fun stackSize/1477480286 ((x!0 var700)) Int (ite (= x!0 var700!4) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @this: com.google.gson.stream.JsonReader",
            "z0 := @parameter0: boolean",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "r1 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(36)",
            "i4 = 0",
            "$i0 = r2.<com.google.gson.stream.JsonReader: int stackSize>",
            "if i4 >= $i0 goto $r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r3 = virtualinvoke r1.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r3"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__nextInt__-1874079238\\1158.smt2",
        "z3": {
            "memory": 31518720,
            "run_time": 0.07478499412536621,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 65 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.030730009078979492,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33054720,
            "run_time": 0.07741618156433105,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 65 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152924160,
            "run_time": 0.8359949588775635,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(long)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(long)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "i20 = r0.<com.google.gson.stream.JsonReader: int peeked>",
            "if i20 != 0 goto (branch)",
            "if i20 != 15 goto (branch)",
            "$l10 = r0.<com.google.gson.stream.JsonReader: long peekedLong>",
            "i21 = (int) $l10",
            "$l12 = r0.<com.google.gson.stream.JsonReader: long peekedLong>",
            "$l11 = (long) i21",
            "$b13 = $l12 cmp $l11",
            "if $b13 == 0 goto r0.<com.google.gson.stream.JsonReader: int peeked> = 0",
            "$r24 = new java.lang.NumberFormatException",
            "$r25 = new java.lang.StringBuilder",
            "specialinvoke $r25.<java.lang.StringBuilder: void <init>()>()",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected an int but was \")",
            "$l18 = r0.<com.google.gson.stream.JsonReader: long peekedLong>",
            "$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l18)",
            "$r27 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String locationString()>()",
            "$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27)",
            "$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r24.<java.lang.NumberFormatException: void <init>(java.lang.String)>($r30)",
            "throw $r24"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__endArray__-1907335909\\85.smt2",
        "z3": {
            "memory": 28327936,
            "run_time": 0.07259368896484375,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var120:\r\n  ;;   var120!val!1 var120!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var120!val!1 () var120)\r\n  (declare-fun var120!val!0 () var120)\r\n  ;; cardinality constraint:\r\n  (forall ((x var120)) (or (= x var120!val!1) (= x var120!val!0)))\r\n  ;; -----------\r\n  (define-fun var690 () var2523\r\n    var2523-init)\r\n  (define-fun var2948 () String\r\n    (locationString/1083242436 var3139))\r\n  (define-fun var1919 () String\r\n    (append/-1031950772\r\n  (str.++ var1944!1 \"Expected END_ARRAY but was \")\r\n  (cast-from-var3582-to-var1065 (peek/-699404472 var3139))))\r\n  (define-fun null-var120 () var120\r\n    var120!val!1)\r\n  (define-fun var1944 () String\r\n    String-init)\r\n  (define-fun var3550 () String\r\n    (str.++ var1944!1 \"Expected END_ARRAY but was \"))\r\n  (define-fun var3550!1 () String\r\n    \"Expected END_ARRAY but was \")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3139 () var120\r\n    var120!val!0)\r\n  (define-fun var3790 () var3582\r\n    (peek/-699404472 var3139))\r\n  (define-fun var2122 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var1944!1 \"Expected END_ARRAY but was \")\r\n          (cast-from-var3582-to-var1065 (peek/-699404472 var3139)))\r\n        (locationString/1083242436 var3139)))\r\n  (define-fun var1098 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var1944!1 \"Expected END_ARRAY but was \")\r\n          (cast-from-var3582-to-var1065 (peek/-699404472 var3139)))\r\n        (locationString/1083242436 var3139)))\r\n  (define-fun var848 () Int\r\n    (peeked/1477480286 var3139))\r\n  (define-fun var1944!2 () String\r\n    \"Expected END_ARRAY but was \")\r\n  (define-fun var1919!1 () String\r\n    \"\")\r\n  (define-fun var1944!1 () String\r\n    \"\")\r\n  (define-fun var690!1 () var2523\r\n    var2523!val!0)\r\n  (define-fun var1098!1 () String\r\n    \"\")\r\n  (define-fun var2523-init () var2523\r\n    var2523!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun peeked/1477480286 ((x!0 var120)) Int\r\n    2)\r\n  (define-fun peek/-699404472 ((x!0 var120)) var3582\r\n    var3582!val!0)\r\n  (define-fun cast-from-var3582-to-var1065 ((x!0 var3582)) var1065\r\n    var1065!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1065)) String\r\n    \"\")\r\n  (define-fun locationString/1083242436 ((x!0 var120)) String\r\n    \"\")\r\n  (define-fun <init>/-1092629202 ((x!0 var2523) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 62 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.047181129455566406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var120 is 2\r\n; rep: (as @var120_0 var120)\r\n; rep: (as @var120_1 var120)\r\n; cardinality of var2523 is 1\r\n; rep: (as @var2523_0 var2523)\r\n; cardinality of var3582 is 1\r\n; rep: (as @var3582_0 var3582)\r\n; cardinality of var1065 is 1\r\n; rep: (as @var1065_0 var1065)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peeked/1477480286 ((_arg_1 var120)) Int (- 1))\r\n(define-fun var2523-init () var2523 (as @var2523_0 var2523))\r\n(define-fun String-init () String \"\")\r\n(define-fun peek/-699404472 ((BOUND_VARIABLE_989 var120)) var3582 (as @var3582_0 var3582))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_992 String) (BOUND_VARIABLE_993 var1065)) String \"\")\r\n(define-fun cast-from-var3582-to-var1065 ((BOUND_VARIABLE_996 var3582)) var1065 (as @var1065_0 var1065))\r\n(define-fun locationString/1083242436 ((BOUND_VARIABLE_999 var120)) String \"\")\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_1002 var2523) (BOUND_VARIABLE_1003 String)) void (as @void_0 void))\r\n(define-fun null-var120 () var120 (as @var120_0 var120))\r\n(define-fun var3139 () var120 (as @var120_1 var120))\r\n(define-fun var1944!1 () String \"\")\r\n(define-fun var1944!2 () String \"Expected END_ARRAY but was \")\r\n(define-fun var3550!1 () String \"Expected END_ARRAY but was \")\r\n(define-fun var1919!1 () String \"\")\r\n(define-fun var690!1 () var2523 (as @var2523_0 var2523))\r\n(define-fun var1098!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36573184,
            "run_time": 0.09392046928405762,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var120:\n  ;;   var120!val!1 var120!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var120!val!1 () var120)\n  (declare-fun var120!val!0 () var120)\n  ;; cardinality constraint:\n  (forall ((x var120)) (or (= x var120!val!1) (= x var120!val!0)))\n  ;; -----------\n  (define-fun var848 () Int\n    (peeked/1477480286 var3139))\n  (define-fun var690 () var2523\n    var2523-init)\n  (define-fun var1944 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var120 () var120\n    var120!val!1)\n  (define-fun var1919 () String\n    (append/-1031950772\n  (str.++ var1944!1 \"Expected END_ARRAY but was \")\n  (cast-from-var3582-to-var1065 (peek/-699404472 var3139))))\n  (define-fun var2122 () String\n    (str.++ (append/-1031950772\n          (str.++ var1944!1 \"Expected END_ARRAY but was \")\n          (cast-from-var3582-to-var1065 (peek/-699404472 var3139)))\n        (locationString/1083242436 var3139)))\n  (define-fun var1098 () String\n    (str.++ (append/-1031950772\n          (str.++ var1944!1 \"Expected END_ARRAY but was \")\n          (cast-from-var3582-to-var1065 (peek/-699404472 var3139)))\n        (locationString/1083242436 var3139)))\n  (define-fun var3139 () var120\n    var120!val!0)\n  (define-fun var3550 () String\n    (str.++ var1944!1 \"Expected END_ARRAY but was \"))\n  (define-fun var1944!1 () String\n    \"\")\n  (define-fun var3790 () var3582\n    (peek/-699404472 var3139))\n  (define-fun var2948 () String\n    (locationString/1083242436 var3139))\n  (define-fun var3550!1 () String\n    \"Expected END_ARRAY but was \")\n  (define-fun var1944!2 () String\n    \"Expected END_ARRAY but was \")\n  (define-fun var1919!1 () String\n    \"\")\n  (define-fun var690!1 () var2523\n    var2523!val!0)\n  (define-fun var1098!1 () String\n    \"\")\n  (define-fun var2523-init () var2523\n    var2523!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun peeked/1477480286 ((x!0 var120)) Int\n    2)\n  (define-fun peek/-699404472 ((x!0 var120)) var3582\n    var3582!val!0)\n  (define-fun cast-from-var3582-to-var1065 ((x!0 var3582)) var1065\n    var1065!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1065)) String\n    \"\")\n  (define-fun locationString/1083242436 ((x!0 var120)) String\n    \"\")\n  (define-fun <init>/-1092629202 ((x!0 var2523) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 62 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167813120,
            "run_time": 0.9865503311157227,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var120/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.stream.JsonReader__endArray__-1907335909\\85.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1919!1 =\r\n     concat(all_31_3, all_31_2)\r\n\r\n720ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "i6 = r0.<com.google.gson.stream.JsonReader: int peeked>",
            "if i6 != 0 goto (branch)",
            "if i6 != 4 goto $r1 = new java.lang.IllegalStateException",
            "$r1 = new java.lang.IllegalStateException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected END_ARRAY but was \")",
            "$r3 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>()",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3)",
            "$r5 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String locationString()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__nextNonWhitespace__219166067\\1308.smt2",
        "z3": {
            "memory": 32575488,
            "run_time": 0.05432939529418945,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1462:\r\n  ;;   var1462!val!2 var1462!val!0 var1462!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1462!val!2 () var1462)\r\n  (declare-fun var1462!val!0 () var1462)\r\n  (declare-fun var1462!val!1 () var1462)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1462))\r\n          (or (= x var1462!val!2) (= x var1462!val!0) (= x var1462!val!1)))\r\n  ;; -----------\r\n  (define-fun var3228 () (Array Int Int)\r\n    (buffer/1477480286 var362))\r\n  (define-fun null-var1462 () var1462\r\n    var1462!val!1)\r\n  (define-fun var2465 () Int\r\n    (pos/1477480286 var362))\r\n  (define-fun var362!1 () var1462\r\n    var1462!val!2)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var769 () var3225\r\n    var3225-init)\r\n  (define-fun var2837 () String\r\n    (str.++ var2833!1 \"End of input\"))\r\n  (define-fun var786 () String\r\n    (locationString/1083242436 var362!1))\r\n  (define-fun var2833 () String\r\n    String-init)\r\n  (define-fun var3147 () String\r\n    (str.++ var2833!1 \"End of input\" (locationString/1083242436 var362!1)))\r\n  (define-fun var3382 () Bool\r\n    (fillBuffer/548664799 var362!1 1))\r\n  (define-fun var362 () var1462\r\n    var1462!val!0)\r\n  (define-fun var2073 () Int\r\n    (limit/1477480286 var362))\r\n  (define-fun var1254 () String\r\n    (str.++ var2833!1 \"End of input\" (locationString/1083242436 var362!1)))\r\n  (define-fun var2833!2 () String\r\n    \"End of input\")\r\n  (define-fun null-Bool () Bool\r\n    false)\r\n  (define-fun var2833!1 () String\r\n    \"\")\r\n  (define-fun var172 () Bool\r\n    true)\r\n  (define-fun var2837!1 () String\r\n    \"End of input\")\r\n  (define-fun var769!1 () var3225\r\n    var3225!val!0)\r\n  (define-fun var3225-init () var3225\r\n    var3225!val!0)\r\n  (define-fun var3147!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun pos/1477480286 ((x!0 var1462)) Int\r\n    0)\r\n  (define-fun limit/1477480286 ((x!0 var1462)) Int\r\n    0)\r\n  (define-fun fillBuffer/548664799 ((x!0 var1462) (x!1 Int)) Bool\r\n    false)\r\n  (define-fun locationString/1083242436 ((x!0 var1462)) String\r\n    \"\")\r\n  (define-fun <init>/-1131757835 ((x!0 var3225) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun buffer/1477480286 ((x!0 var1462)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n)\r\n(error \"line 69 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.07667064666748047,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1462 is 3\r\n; rep: (as @var1462_0 var1462)\r\n; rep: (as @var1462_1 var1462)\r\n; rep: (as @var1462_2 var1462)\r\n; cardinality of var3225 is 1\r\n; rep: (as @var3225_0 var3225)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun buffer/1477480286 ((BOUND_VARIABLE_662 var1462)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun pos/1477480286 ((_arg_1 var1462)) Int 0)\r\n(define-fun limit/1477480286 ((_arg_1 var1462)) Int 0)\r\n(define-fun fillBuffer/548664799 ((_arg_1 var1462) (_arg_2 Int)) Bool false)\r\n(define-fun var3225-init () var3225 (as @var3225_0 var3225))\r\n(define-fun String-init () String \"\")\r\n(define-fun locationString/1083242436 ((BOUND_VARIABLE_667 var1462)) String \"\")\r\n(define-fun <init>/-1131757835 ((BOUND_VARIABLE_670 var3225) (BOUND_VARIABLE_671 String)) void (as @void_0 void))\r\n(define-fun null-var1462 () var1462 (as @var1462_0 var1462))\r\n(define-fun null-Bool () Bool false)\r\n(define-fun var362 () var1462 (as @var1462_1 var1462))\r\n(define-fun var172 () Bool true)\r\n(define-fun var362!1 () var1462 (as @var1462_2 var1462))\r\n(define-fun var2833!1 () String \"\")\r\n(define-fun var2833!2 () String \"End of input\")\r\n(define-fun var2837!1 () String \"End of input\")\r\n(define-fun var769!1 () var3225 (as @var3225_0 var3225))\r\n(define-fun var3147!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35684352,
            "run_time": 0.07597541809082031,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1462:\n  ;;   var1462!val!2 var1462!val!0 var1462!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1462!val!2 () var1462)\n  (declare-fun var1462!val!0 () var1462)\n  (declare-fun var1462!val!1 () var1462)\n  ;; cardinality constraint:\n  (forall ((x var1462))\n          (or (= x var1462!val!2) (= x var1462!val!0) (= x var1462!val!1)))\n  ;; -----------\n  (define-fun var769 () var3225\n    var3225-init)\n  (define-fun null-var1462 () var1462\n    var1462!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var362!1 () var1462\n    var1462!val!2)\n  (define-fun var3228 () (Array Int Int)\n    (buffer/1477480286 var362))\n  (define-fun var2837 () String\n    (str.++ var2833!1 \"End of input\"))\n  (define-fun var786 () String\n    (locationString/1083242436 var362!1))\n  (define-fun var2833 () String\n    String-init)\n  (define-fun var3382 () Bool\n    (fillBuffer/548664799 var362!1 1))\n  (define-fun var2073 () Int\n    (limit/1477480286 var362))\n  (define-fun var3147 () String\n    (str.++ var2833!1 \"End of input\" (locationString/1083242436 var362!1)))\n  (define-fun var2465 () Int\n    (pos/1477480286 var362))\n  (define-fun var1254 () String\n    (str.++ var2833!1 \"End of input\" (locationString/1083242436 var362!1)))\n  (define-fun var362 () var1462\n    var1462!val!0)\n  (define-fun var2833!2 () String\n    \"End of input\")\n  (define-fun null-Bool () Bool\n    false)\n  (define-fun var2833!1 () String\n    \"\")\n  (define-fun var172 () Bool\n    true)\n  (define-fun var2837!1 () String\n    \"End of input\")\n  (define-fun var769!1 () var3225\n    var3225!val!0)\n  (define-fun var3225-init () var3225\n    var3225!val!0)\n  (define-fun var3147!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun pos/1477480286 ((x!0 var1462)) Int\n    0)\n  (define-fun limit/1477480286 ((x!0 var1462)) Int\n    0)\n  (define-fun fillBuffer/548664799 ((x!0 var1462) (x!1 Int)) Bool\n    false)\n  (define-fun locationString/1083242436 ((x!0 var1462)) String\n    \"\")\n  (define-fun <init>/-1131757835 ((x!0 var3225) (x!1 String)) void\n    void!val!0)\n  (define-fun buffer/1477480286 ((x!0 var1462)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n)\n(error \"line 69 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169328640,
            "run_time": 1.047821044921875,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1462/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.stream.JsonReader__nextNonWhitespace__219166067\\1308.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2837!1 =\r\n     concat(\"End of input\", all_23_3)\r\n\r\n807ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 19,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "z2 := @parameter0: boolean",
            "r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "i15 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "i16 = r0.<com.google.gson.stream.JsonReader: int limit>",
            "if i15 != i16 goto $i0 = i15",
            "r0.<com.google.gson.stream.JsonReader: int pos> = i15",
            "$z1 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>(1)",
            "if $z1 != 0 goto i15 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "goto [?= (branch)]",
            "if z2 == 0 goto $i28 = (int) -1",
            "$r10 = new java.io.EOFException",
            "$r9 = new java.lang.StringBuilder",
            "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"End of input\")",
            "$r5 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String locationString()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r10.<java.io.EOFException: void <init>(java.lang.String)>($r8)",
            "throw $r10"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__nextInt__-1874079238\\1186.smt2",
        "z3": {
            "memory": 30478336,
            "run_time": 0.059981584548950195,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3455:\r\n  ;;   var3455!val!2 var3455!val!1 var3455!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3455!val!2 () var3455)\r\n  (declare-fun var3455!val!1 () var3455)\r\n  (declare-fun var3455!val!0 () var3455)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3455))\r\n          (or (= x var3455!val!2) (= x var3455!val!1) (= x var3455!val!0)))\r\n  ;; -----------\r\n  (define-fun var2147 () var3455\r\n    var3455!val!0)\r\n  (define-fun var2147!1 () var3455\r\n    var3455!val!2)\r\n  (define-fun var448 () Int\r\n    (peekedLong/1477480286 var2147))\r\n  (define-fun var77 () (Array Int Int)\r\n    (pathIndices/1477480286 var2147!1))\r\n  (define-fun var1636 () Int\r\n    (peekedLong/1477480286 var2147))\r\n  (define-fun var77!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 1))\r\n  (define-fun var608 () Int\r\n    (+ (select (pathIndices/1477480286 var2147!1)\r\n           (- (stackSize/1477480286 var2147!1) 1))\r\n   1))\r\n  (define-fun var3925 () Int\r\n    (peekedLong/1477480286 var2147))\r\n  (define-fun var3665 () Int\r\n    (ite (> (peekedLong/1477480286 var2147) (peekedLong/1477480286 var2147))\r\n     1\r\n     (ite (< (peekedLong/1477480286 var2147) (peekedLong/1477480286 var2147))\r\n          (- 1)\r\n          0)))\r\n  (define-fun var1937 () Int\r\n    (- (stackSize/1477480286 var2147!1) 1))\r\n  (define-fun var1997 () Int\r\n    (stackSize/1477480286 var2147!1))\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\r\n    (store ((as const (Array Int Int)) 1) 0 2))\r\n  (define-fun var16 () Int\r\n    (select (pathIndices/1477480286 var2147!1)\r\n        (- (stackSize/1477480286 var2147!1) 1)))\r\n  (define-fun var3719 () Int\r\n    (peekedLong/1477480286 var2147))\r\n  (define-fun null-var3455 () var3455\r\n    var3455!val!1)\r\n  (define-fun var1483 () Int\r\n    (peeked/1477480286 var2147))\r\n  (define-fun peeked/1477480286 ((x!0 var3455)) Int\r\n    (ite (= x!0 var3455!val!2) 0\r\n      15))\r\n  (define-fun pathIndices/1477480286 ((x!0 var3455)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun stackSize/1477480286 ((x!0 var3455)) Int\r\n    0)\r\n  (define-fun peekedLong/1477480286 ((x!0 var3455)) Int\r\n    0)\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1691648,
            "run_time": 0.0160672664642334,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3455 is 3\r\n; rep: (as @var3455_0 var3455)\r\n; rep: (as @var3455_1 var3455)\r\n; rep: (as @var3455_2 var3455)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peeked/1477480286 ((_arg_1 var3455)) Int (ite (= (as @var3455_1 var3455) _arg_1) 15 0))\r\n(define-fun peekedLong/1477480286 ((BOUND_VARIABLE_635 var3455)) Int 0)\r\n(define-fun pathIndices/1477480286 ((_arg_1 var3455)) (Array Int Int) (store ((as const (Array Int Int)) (- 1)) (- 1) 0))\r\n(define-fun stackSize/1477480286 ((_arg_1 var3455)) Int 0)\r\n(define-fun null-var3455 () var3455 (as @var3455_0 var3455))\r\n(define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 1) 0 (- 1)))\r\n(define-fun var2147 () var3455 (as @var3455_1 var3455))\r\n(define-fun var2147!1 () var3455 (as @var3455_2 var3455))\r\n(define-fun var77!1 () (Array Int Int) (store ((as const (Array Int Int)) 0) (- 1) 1))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 31576064,
            "run_time": 0.07615160942077637,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3455:\n  ;;   var3455!val!2 var3455!val!1 var3455!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3455!val!2 () var3455)\n  (declare-fun var3455!val!1 () var3455)\n  (declare-fun var3455!val!0 () var3455)\n  ;; cardinality constraint:\n  (forall ((x var3455))\n          (or (= x var3455!val!2) (= x var3455!val!1) (= x var3455!val!0)))\n  ;; -----------\n  (define-fun var3925 () Int\n    (peekedLong/1477480286 var2147))\n  (define-fun var3665 () Int\n    (ite (> (peekedLong/1477480286 var2147) (peekedLong/1477480286 var2147))\n     1\n     (ite (< (peekedLong/1477480286 var2147) (peekedLong/1477480286 var2147))\n          (- 1)\n          0)))\n  (define-fun var608 () Int\n    (+ (select (pathIndices/1477480286 var2147!1)\n           (- (stackSize/1477480286 var2147!1) 1))\n   1))\n  (define-fun var1937 () Int\n    (- (stackSize/1477480286 var2147!1) 1))\n  (define-fun var2147 () var3455\n    var3455!val!0)\n  (define-fun var2147!1 () var3455\n    var3455!val!2)\n  (define-fun var1997 () Int\n    (stackSize/1477480286 var2147!1))\n  (define-fun var77!1 () (Array Int Int)\n    ((as const (Array Int Int)) 1))\n  (define-fun var16 () Int\n    (select (pathIndices/1477480286 var2147!1)\n        (- (stackSize/1477480286 var2147!1) 1)))\n  (define-fun var3719 () Int\n    (peekedLong/1477480286 var2147))\n  (define-fun var77 () (Array Int Int)\n    (pathIndices/1477480286 var2147!1))\n  (define-fun var1483 () Int\n    (peeked/1477480286 var2147))\n  (define-fun null-__Array__Int__Int__ () (Array Int Int)\n    (store ((as const (Array Int Int)) 1) 0 2))\n  (define-fun var448 () Int\n    (peekedLong/1477480286 var2147))\n  (define-fun null-var3455 () var3455\n    var3455!val!1)\n  (define-fun var1636 () Int\n    (peekedLong/1477480286 var2147))\n  (define-fun peeked/1477480286 ((x!0 var3455)) Int\n    (ite (= x!0 var3455!val!2) 0\n      15))\n  (define-fun pathIndices/1477480286 ((x!0 var3455)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun stackSize/1477480286 ((x!0 var3455)) Int\n    0)\n  (define-fun peekedLong/1477480286 ((x!0 var3455)) Int\n    0)\n)\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179236864,
            "run_time": 1.0310862064361572,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var77!1 () (Array Int Int) (store ((as const (Array Int Int)) 28) 24 27))\r\n  (define-fun var2147!1 () var3455 var3455!36)\r\n  (define-fun var2147 () var3455 var3455!34)\r\n  (define-fun null-__Array__Int__Int__ () (Array Int Int) (store ((as const (Array Int Int)) 29) 24 26))\r\n  (define-fun null-var3455 () var3455 var3455!32)\r\n  (define-fun stackSize/1477480286 ((x!0 var3455)) Int (ite (= x!0 var3455!36) 25 0))\r\n  (define-fun pathIndices/1477480286 ((x!0 var3455)) (Array Int Int) (ite (= x!0 var3455!36) (store ((as const (Array Int Int)) 29) 24 26) ((as const (Array Int Int)) 0)))\r\n  (define-fun peekedLong/1477480286 ((x!0 var3455)) Int (ite (= x!0 var3455!34) 19 0))\r\n  (define-fun peeked/1477480286 ((x!0 var3455)) Int (ite (= x!0 var3455!34) 15 (ite (= x!0 var3455!36) 0 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 8,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "i20 = r0.<com.google.gson.stream.JsonReader: int peeked>",
            "if i20 != 0 goto (branch)",
            "if i20 != 15 goto (branch)",
            "$l10 = r0.<com.google.gson.stream.JsonReader: long peekedLong>",
            "i21 = (int) $l10",
            "$l12 = r0.<com.google.gson.stream.JsonReader: long peekedLong>",
            "$l11 = (long) i21",
            "$b13 = $l12 cmp $l11",
            "if $b13 == 0 goto r0.<com.google.gson.stream.JsonReader: int peeked> = 0",
            "r0.<com.google.gson.stream.JsonReader: int peeked> = 0",
            "$r23 = r0.<com.google.gson.stream.JsonReader: int[] pathIndices>",
            "$i14 = r0.<com.google.gson.stream.JsonReader: int stackSize>",
            "$i15 = $i14 - 1",
            "$i16 = $r23[$i15]",
            "$i17 = $i16 + 1",
            "$r23[$i15] = $i17",
            "return i21"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__locationString__1083242436\\1415.smt2",
        "z3": {
            "memory": 32649216,
            "run_time": 0.05995035171508789,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3923:\r\n  ;;   var3923!val!1 var3923!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3923!val!1 () var3923)\r\n  (declare-fun var3923!val!0 () var3923)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3923)) (or (= x var3923!val!1) (= x var3923!val!0)))\r\n  ;; -----------\r\n  (define-fun var1849 () String\r\n    (str.++ var2497!1 \" at line \"))\r\n  (define-fun var1576 () Int\r\n    (lineStart/1477480286 var320))\r\n  (define-fun null-var3923 () var3923\r\n    var3923!val!1)\r\n  (define-fun var1808 () String\r\n    (let ((a!1 (str.from_int (+ (- (pos/1477480286 var320)\r\n                               (lineStart/1477480286 var320))\r\n                            1))))\r\n  (str.++ var2497!1\r\n          \" at line \"\r\n          (str.from_int (+ (lineNumber/1477480286 var320) 1))\r\n          \" column \"\r\n          a!1\r\n          \" path \"\r\n          (getPath/876800821 var320))))\r\n  (define-fun var839 () Int\r\n    (- (pos/1477480286 var320) (lineStart/1477480286 var320)))\r\n  (define-fun var3140 () String\r\n    (getPath/876800821 var320))\r\n  (define-fun var2791 () Int\r\n    (pos/1477480286 var320))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2353 () Int\r\n    (+ (- (pos/1477480286 var320) (lineStart/1477480286 var320)) 1))\r\n  (define-fun var3842 () Int\r\n    (lineNumber/1477480286 var320))\r\n  (define-fun var3327 () String\r\n    (str.++ var2497!1\r\n        \" at line \"\r\n        (str.from_int (+ (lineNumber/1477480286 var320) 1))\r\n        \" column \"))\r\n  (define-fun var3327!1 () String\r\n    \" at line  column \")\r\n  (define-fun var2543 () String\r\n    (str.++ var2497!1\r\n        \" at line \"\r\n        (str.from_int (+ (lineNumber/1477480286 var320) 1))))\r\n  (define-fun var2497 () String\r\n    String-init)\r\n  (define-fun var1547 () Int\r\n    (+ (lineNumber/1477480286 var320) 1))\r\n  (define-fun var1849!1 () String\r\n    \" at line \")\r\n  (define-fun var604 () String\r\n    (let ((a!1 (str.from_int (+ (- (pos/1477480286 var320)\r\n                               (lineStart/1477480286 var320))\r\n                            1))))\r\n  (str.++ var2497!1\r\n          \" at line \"\r\n          (str.from_int (+ (lineNumber/1477480286 var320) 1))\r\n          \" column \"\r\n          a!1)))\r\n  (define-fun var320 () var3923\r\n    var3923!val!0)\r\n  (define-fun var1170 () String\r\n    (let ((a!1 (str.from_int (+ (- (pos/1477480286 var320)\r\n                               (lineStart/1477480286 var320))\r\n                            1))))\r\n  (str.++ var2497!1\r\n          \" at line \"\r\n          (str.from_int (+ (lineNumber/1477480286 var320) 1))\r\n          \" column \"\r\n          a!1\r\n          \" path \"\r\n          (getPath/876800821 var320))))\r\n  (define-fun var2314 () String\r\n    (let ((a!1 (str.from_int (+ (- (pos/1477480286 var320)\r\n                               (lineStart/1477480286 var320))\r\n                            1))))\r\n  (str.++ var2497!1\r\n          \" at line \"\r\n          (str.from_int (+ (lineNumber/1477480286 var320) 1))\r\n          \" column \"\r\n          a!1\r\n          \" path \")))\r\n  (define-fun var604!1 () String\r\n    \" at line  column 1 path \")\r\n  (define-fun var2543!1 () String\r\n    \" at line  column \")\r\n  (define-fun var2314!1 () String\r\n    \" at line  column 1 path \")\r\n  (define-fun var2497!1 () String\r\n    \"\")\r\n  (define-fun var2497!2 () String\r\n    \" at line \")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun lineNumber/1477480286 ((x!0 var3923)) Int\r\n    (- 2))\r\n  (define-fun pos/1477480286 ((x!0 var3923)) Int\r\n    0)\r\n  (define-fun lineStart/1477480286 ((x!0 var3923)) Int\r\n    0)\r\n  (define-fun getPath/876800821 ((x!0 var3923)) String\r\n    \"\")\r\n)\r\n(error \"line 62 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12619776,
            "run_time": 0.030359983444213867,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3923 is 2\r\n; rep: (as @var3923_0 var3923)\r\n; rep: (as @var3923_1 var3923)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun lineNumber/1477480286 ((_arg_1 var3923)) Int (- 2))\r\n(define-fun pos/1477480286 ((BOUND_VARIABLE_1788 var3923)) Int 0)\r\n(define-fun lineStart/1477480286 ((BOUND_VARIABLE_1791 var3923)) Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun getPath/876800821 ((BOUND_VARIABLE_1794 var3923)) String \"\")\r\n(define-fun null-var3923 () var3923 (as @var3923_0 var3923))\r\n(define-fun var320 () var3923 (as @var3923_1 var3923))\r\n(define-fun var2497!1 () String \"\")\r\n(define-fun var2497!2 () String \" at line \")\r\n(define-fun var1849!1 () String \" at line \")\r\n(define-fun var2543!1 () String \" at line  column \")\r\n(define-fun var3327!1 () String \" at line  column \")\r\n(define-fun var604!1 () String \" at line  column 1 path \")\r\n(define-fun var2314!1 () String \" at line  column 1 path \")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37355520,
            "run_time": 0.12214946746826172,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 61 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 62 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 217997312,
            "run_time": 1.2163431644439697,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3923/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.stream.JsonReader__locationString__1083242436\\1415.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2314!1 =\r\n     concat(\" at line  column  path \", all_21_3)\r\n\r\n926ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "$i0 = r0.<com.google.gson.stream.JsonReader: int lineNumber>",
            "i1 = $i0 + 1",
            "$i3 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i2 = r0.<com.google.gson.stream.JsonReader: int lineStart>",
            "$i4 = $i3 - $i2",
            "i5 = $i4 + 1",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" at line \")",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i1)",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" column \")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(i5)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" path \")",
            "$r6 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String getPath()>()",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r9"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__nextQuotedValue__-1176938928\\1005.smt2",
        "z3": {
            "memory": 30674944,
            "run_time": 0.05230355262756348,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 50 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.03188657760620117,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33579008,
            "run_time": 0.07515811920166016,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 50 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163958784,
            "run_time": 0.8329257965087891,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "c5 := @parameter0: char",
            "r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "r7 = null",
            "$i1 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "i15 = $i1",
            "i16 = r0.<com.google.gson.stream.JsonReader: int limit>",
            "i17 = $i1",
            "if i15 >= i16 goto (branch)",
            "if r7 != null goto $i0 = i15 - i17",
            "$i0 = i15 - i17",
            "virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r1, i17, $i0)",
            "r0.<com.google.gson.stream.JsonReader: int pos> = i15",
            "$z0 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>(1)",
            "if $z0 != 0 goto (branch)",
            "$r2 = specialinvoke r0.<com.google.gson.stream.JsonReader: java.io.IOException syntaxError(java.lang.String)>(\"Unterminated string\")",
            "throw $r2"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__nextNonWhitespace__219166067\\1330.smt2",
        "z3": {
            "memory": 32149504,
            "run_time": 0.07298588752746582,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3153:\r\n  ;;   var3153!val!1 var3153!val!2 var3153!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3153!val!1 () var3153)\r\n  (declare-fun var3153!val!2 () var3153)\r\n  (declare-fun var3153!val!0 () var3153)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3153))\r\n          (or (= x var3153!val!1) (= x var3153!val!2) (= x var3153!val!0)))\r\n  ;; -----------\r\n  (define-fun var198 () Int\r\n    (pos/1477480286 var2358))\r\n  (define-fun var2358 () var3153\r\n    var3153!val!0)\r\n  (define-fun var2358!1 () var3153\r\n    var3153!val!2)\r\n  (define-fun var1660 () Bool\r\n    (fillBuffer/548664799 var2358!1 1))\r\n  (define-fun var1333 () Int\r\n    (- 1))\r\n  (define-fun null-var3153 () var3153\r\n    var3153!val!1)\r\n  (define-fun var3416 () (Array Int Int)\r\n    (buffer/1477480286 var2358))\r\n  (define-fun var1693 () Int\r\n    (limit/1477480286 var2358))\r\n  (define-fun var1712 () Bool\r\n    false)\r\n  (define-fun null-Bool () Bool\r\n    true)\r\n  (define-fun limit/1477480286 ((x!0 var3153)) Int\r\n    0)\r\n  (define-fun fillBuffer/548664799 ((x!0 var3153) (x!1 Int)) Bool\r\n    false)\r\n  (define-fun pos/1477480286 ((x!0 var3153)) Int\r\n    0)\r\n  (define-fun buffer/1477480286 ((x!0 var3153)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n)\r\n(error \"line 40 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.029651403427124023,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3153 is 3\r\n; rep: (as @var3153_0 var3153)\r\n; rep: (as @var3153_1 var3153)\r\n; rep: (as @var3153_2 var3153)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun buffer/1477480286 ((BOUND_VARIABLE_556 var3153)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun pos/1477480286 ((_arg_1 var3153)) Int 0)\r\n(define-fun limit/1477480286 ((_arg_1 var3153)) Int 0)\r\n(define-fun fillBuffer/548664799 ((_arg_1 var3153) (_arg_2 Int)) Bool false)\r\n(define-fun null-var3153 () var3153 (as @var3153_0 var3153))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun var2358 () var3153 (as @var3153_1 var3153))\r\n(define-fun var1712 () Bool false)\r\n(define-fun var2358!1 () var3153 (as @var3153_2 var3153))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34926592,
            "run_time": 0.0909719467163086,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3153:\n  ;;   var3153!val!1 var3153!val!2 var3153!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3153!val!1 () var3153)\n  (declare-fun var3153!val!2 () var3153)\n  (declare-fun var3153!val!0 () var3153)\n  ;; cardinality constraint:\n  (forall ((x var3153))\n          (or (= x var3153!val!1) (= x var3153!val!2) (= x var3153!val!0)))\n  ;; -----------\n  (define-fun var1333 () Int\n    (- 1))\n  (define-fun var2358 () var3153\n    var3153!val!0)\n  (define-fun var198 () Int\n    (pos/1477480286 var2358))\n  (define-fun var2358!1 () var3153\n    var3153!val!2)\n  (define-fun var3416 () (Array Int Int)\n    (buffer/1477480286 var2358))\n  (define-fun var1693 () Int\n    (limit/1477480286 var2358))\n  (define-fun var1660 () Bool\n    (fillBuffer/548664799 var2358!1 1))\n  (define-fun null-var3153 () var3153\n    var3153!val!1)\n  (define-fun var1712 () Bool\n    false)\n  (define-fun null-Bool () Bool\n    true)\n  (define-fun limit/1477480286 ((x!0 var3153)) Int\n    0)\n  (define-fun fillBuffer/548664799 ((x!0 var3153) (x!1 Int)) Bool\n    false)\n  (define-fun pos/1477480286 ((x!0 var3153)) Int\n    0)\n  (define-fun buffer/1477480286 ((x!0 var3153)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n)\n(error \"line 40 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166367232,
            "run_time": 0.8676984310150146,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2358!1 () var3153 var3153!8)\r\n  (define-fun var2358 () var3153 var3153!6)\r\n  (define-fun null-var3153 () var3153 var3153!4)\r\n  (define-fun null-Bool () Bool true)\r\n  (define-fun var1712 () Bool false)\r\n  (define-fun fillBuffer/548664799 ((x!0 var3153) (x!1 Int)) Bool (ite (and (= x!0 var3153!8) (= x!1 1)) false true))\r\n  (define-fun limit/1477480286 ((x!0 var3153)) Int (ite (= x!0 var3153!6) 10 0))\r\n  (define-fun pos/1477480286 ((x!0 var3153)) Int (ite (= x!0 var3153!6) 10 (ite (= x!0 var3153!8) 10 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 10,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "z2 := @parameter0: boolean",
            "r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "i15 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "i16 = r0.<com.google.gson.stream.JsonReader: int limit>",
            "if i15 != i16 goto $i0 = i15",
            "r0.<com.google.gson.stream.JsonReader: int pos> = i15",
            "$z1 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>(1)",
            "if $z1 != 0 goto i15 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "goto [?= (branch)]",
            "if z2 == 0 goto $i28 = (int) -1",
            "$i28 = (int) -1",
            "return $i28"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__nextUnquotedValue__1263929427\\1061.smt2",
        "z3": {
            "memory": 27869184,
            "run_time": 0.06904721260070801,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 54 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1695744,
            "run_time": 0.014826297760009766,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35688448,
            "run_time": 0.07748818397521973,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 54 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 162738176,
            "run_time": 0.8218023777008057,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "r8 = null",
            "i13 = 0",
            "$i14 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i15 = $i14 + i13",
            "$i16 = r0.<com.google.gson.stream.JsonReader: int limit>",
            "if $i15 >= $i16 goto $r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$i0 = lengthof $r1",
            "if i13 >= $i0 goto (branch)",
            "$i9 = i13 + 1",
            "$z1 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>($i9)",
            "if $z1 == 0 goto (branch)",
            "if null != r8 goto $r3 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$r3 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$i4 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$r4 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r3, $i4, i13)",
            "$r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i5 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i6 = $i5 + i13",
            "r0.<com.google.gson.stream.JsonReader: int pos> = $i6",
            "return $r9"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__nextUnquotedValue__1263929427\\1018.smt2",
        "z3": {
            "memory": 31657984,
            "run_time": 0.056067466735839844,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2428:\r\n  ;;   var2428!val!2 var2428!val!0 var2428!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2428!val!2 () var2428)\r\n  (declare-fun var2428!val!0 () var2428)\r\n  (declare-fun var2428!val!1 () var2428)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2428))\r\n          (or (= x var2428!val!2) (= x var2428!val!0) (= x var2428!val!1)))\r\n  ;; -----------\r\n  (define-fun var2217 () Int\r\n    0)\r\n  (define-fun var3746 () Int\r\n    (limit/1477480286 var529))\r\n  (define-fun var2983 () String\r\n    null-String)\r\n  (define-fun var2847 () Int\r\n    (+ (pos/1477480286 var529) var2217!1))\r\n  (define-fun var448 () Int\r\n    (+ (pos/1477480286 var529) 0))\r\n  (define-fun var1281 () Int\r\n    (select (buffer/1477480286 var529) (+ (pos/1477480286 var529) 0)))\r\n  (define-fun var773 () String\r\n    String-init)\r\n  (define-fun null-var2428 () var2428\r\n    var2428!val!1)\r\n  (define-fun var2 () String\r\n    String-init)\r\n  (define-fun var529!1 () var2428\r\n    var2428!val!2)\r\n  (define-fun var3558 () Int\r\n    (pos/1477480286 var529))\r\n  (define-fun var2076 () (Array Int Int)\r\n    (buffer/1477480286 var529))\r\n  (define-fun var2780 () Int\r\n    (pos/1477480286 var529))\r\n  (define-fun var3884 () Int\r\n    (+ (pos/1477480286 var529) 0))\r\n  (define-fun var3017 () Int\r\n    (select (buffer/1477480286 var529) (+ (pos/1477480286 var529) 0)))\r\n  (define-fun var529 () var2428\r\n    var2428!val!0)\r\n  (define-fun var330 () Int\r\n    (pos/1477480286 var529))\r\n  (define-fun var170 () Int\r\n    (pos/1477480286 var529))\r\n  (define-fun var2973 () (Array Int Int)\r\n    (buffer/1477480286 var529))\r\n  (define-fun var2217!1 () Int\r\n    0)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var330!1 () Int\r\n    0)\r\n  (define-fun var2!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2973!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun buffer/1477480286 ((x!0 var2428)) (Array Int Int)\r\n    ((as const (Array Int Int)) 9))\r\n  (define-fun pos/1477480286 ((x!0 var2428)) Int\r\n    0)\r\n  (define-fun limit/1477480286 ((x!0 var2428)) Int\r\n    1)\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 58 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.014286041259765625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2428 is 3\r\n; rep: (as @var2428_0 var2428)\r\n; rep: (as @var2428_1 var2428)\r\n; rep: (as @var2428_2 var2428)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun pos/1477480286 ((_arg_1 var2428)) Int (- 1))\r\n(define-fun limit/1477480286 ((_arg_1 var2428)) Int 0)\r\n(define-fun buffer/1477480286 ((_arg_1 var2428)) (Array Int Int) (store ((as const (Array Int Int)) 0) (- 1) 9))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_579 String) (BOUND_VARIABLE_580 (Array Int Int)) (BOUND_VARIABLE_581 Int) (BOUND_VARIABLE_582 Int)) void (as @void_0 void))\r\n(define-fun null-var2428 () var2428 (as @var2428_0 var2428))\r\n(define-fun null-String () String \"\")\r\n(define-fun var529 () var2428 (as @var2428_1 var2428))\r\n(define-fun var2!1 () String \"\")\r\n(define-fun var2973!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var330!1 () Int 0)\r\n(define-fun var2217!1 () Int 0)\r\n(define-fun var529!1 () var2428 (as @var2428_2 var2428))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36470784,
            "run_time": 0.07716178894042969,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2428:\n  ;;   var2428!val!2 var2428!val!0 var2428!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2428!val!2 () var2428)\n  (declare-fun var2428!val!0 () var2428)\n  (declare-fun var2428!val!1 () var2428)\n  ;; cardinality constraint:\n  (forall ((x var2428))\n          (or (= x var2428!val!2) (= x var2428!val!0) (= x var2428!val!1)))\n  ;; -----------\n  (define-fun var2983 () String\n    null-String)\n  (define-fun var2973 () (Array Int Int)\n    (buffer/1477480286 var529))\n  (define-fun var773 () String\n    String-init)\n  (define-fun var3558 () Int\n    (pos/1477480286 var529))\n  (define-fun var2780 () Int\n    (pos/1477480286 var529))\n  (define-fun null-var2428 () var2428\n    var2428!val!1)\n  (define-fun var330 () Int\n    (pos/1477480286 var529))\n  (define-fun var3884 () Int\n    (+ (pos/1477480286 var529) 0))\n  (define-fun var2 () String\n    String-init)\n  (define-fun var3017 () Int\n    (select (buffer/1477480286 var529) (+ (pos/1477480286 var529) 0)))\n  (define-fun var529!1 () var2428\n    var2428!val!2)\n  (define-fun var170 () Int\n    (pos/1477480286 var529))\n  (define-fun var3746 () Int\n    (limit/1477480286 var529))\n  (define-fun var2217 () Int\n    0)\n  (define-fun var2847 () Int\n    (+ (pos/1477480286 var529) var2217!1))\n  (define-fun var529 () var2428\n    var2428!val!0)\n  (define-fun var448 () Int\n    (+ (pos/1477480286 var529) 0))\n  (define-fun var1281 () Int\n    (select (buffer/1477480286 var529) (+ (pos/1477480286 var529) 0)))\n  (define-fun var2076 () (Array Int Int)\n    (buffer/1477480286 var529))\n  (define-fun var2217!1 () Int\n    0)\n  (define-fun null-String () String\n    \"\")\n  (define-fun var330!1 () Int\n    0)\n  (define-fun var2!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2973!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun buffer/1477480286 ((x!0 var2428)) (Array Int Int)\n    ((as const (Array Int Int)) 9))\n  (define-fun pos/1477480286 ((x!0 var2428)) Int\n    (- 1))\n  (define-fun limit/1477480286 ((x!0 var2428)) Int\n    0)\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 58 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182665216,
            "run_time": 1.008300542831421,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var529!1 () var2428 var2428!24)\r\n  (define-fun var2217!1 () Int 2)\r\n  (define-fun var529 () var2428 var2428!22)\r\n  (define-fun null-var2428 () var2428 var2428!20)\r\n  (define-fun buffer/1477480286 ((x!0 var2428)) (Array Int Int) (ite (= x!0 var2428!22) (store ((as const (Array Int Int)) 20) 17 9) ((as const (Array Int Int)) 0)))\r\n  (define-fun limit/1477480286 ((x!0 var2428)) Int (ite (= x!0 var2428!22) 18 0))\r\n  (define-fun pos/1477480286 ((x!0 var2428)) Int (ite (= x!0 var2428!22) 17 (ite (= x!0 var2428!24) 19 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.String: void <init>(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "r8 = null",
            "i13 = 0",
            "$i14 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i15 = $i14 + i13",
            "$i16 = r0.<com.google.gson.stream.JsonReader: int limit>",
            "if $i15 >= $i16 goto $r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$r7 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$i10 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i11 = $i10 + i13",
            "$c12 = $r7[$i11]",
            "$i17 = (int) $c12",
            "lookupswitch($i17) {     case 9: goto goto [?= (branch)];     case 10: goto goto [?= (branch)];     case 12: goto goto [?= (branch)];     case 13: goto goto [?= (branch)];     case 32: goto goto [?= (branch)];     case 35: goto specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();     case 44: goto goto [?= (branch)];     case 47: goto specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();     case 58: goto goto [?= (branch)];     case 59: goto specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();     case 61: goto specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();     case 91: goto goto [?= (branch)];     case 92: goto specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();     case 93: goto goto [?= (branch)];     case 123: goto goto [?= (branch)];     case 125: goto goto [?= (branch)];     default: goto i13 = i13 + 1; }",
            "goto [?= (branch)]",
            "if null != r8 goto $r3 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$r11 = new java.lang.String",
            "$r9 = $r11",
            "$r5 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$i7 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r5, $i7, i13)",
            "goto [?= $i5 = r0.<com.google.gson.stream.JsonReader: int pos>]",
            "$i5 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i6 = $i5 + i13",
            "r0.<com.google.gson.stream.JsonReader: int pos> = $i6",
            "return $r9"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__nextQuotedValue__-1176938928\\968.smt2",
        "z3": {
            "memory": 30003200,
            "run_time": 0.07711553573608398,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var442:\r\n  ;;   var442!val!0 var442!val!1 var442!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var442!val!0 () var442)\r\n  (declare-fun var442!val!1 () var442)\r\n  (declare-fun var442!val!2 () var442)\r\n  ;; cardinality constraint:\r\n  (forall ((x var442))\r\n          (or (= x var442!val!0) (= x var442!val!1) (= x var442!val!2)))\r\n  ;; -----------\r\n  (define-fun var2651 () (Array Int Int)\r\n    (buffer/1477480286 var2757))\r\n  (define-fun var482 () Int\r\n    (select (buffer/1477480286 var2757) (pos/1477480286 var2757)))\r\n  (define-fun var2757!1 () var442\r\n    var442!val!2)\r\n  (define-fun var1017 () Int\r\n    (select (buffer/1477480286 var2757) (pos/1477480286 var2757)))\r\n  (define-fun var3583 () Int\r\n    (pos/1477480286 var2757))\r\n  (define-fun var1355 () Int\r\n    (pos/1477480286 var2757))\r\n  (define-fun var2356 () String\r\n    String-init)\r\n  (define-fun var1992 () Int\r\n    (pos/1477480286 var2757))\r\n  (define-fun var1427 () Int\r\n    (- (+ (pos/1477480286 var2757) 1) (pos/1477480286 var2757)))\r\n  (define-fun var1992!1 () Int\r\n    (+ (pos/1477480286 var2757) 1))\r\n  (define-fun null-var442 () var442\r\n    var442!val!1)\r\n  (define-fun var2797 () Int\r\n    var3312)\r\n  (define-fun var1997 () Int\r\n    (limit/1477480286 var2757))\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun var2676 () Int\r\n    (pos/1477480286 var2757))\r\n  (define-fun var3461 () Int\r\n    (- (- (+ (pos/1477480286 var2757) 1) (pos/1477480286 var2757)) 1))\r\n  (define-fun var2757 () var442\r\n    var442!val!0)\r\n  (define-fun var1994 () String\r\n    null-String)\r\n  (define-fun var3312 () Int\r\n    0)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3461!1 () Int\r\n    0)\r\n  (define-fun var2356!1 () String\r\n    \"\")\r\n  (define-fun var2651!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun var3583!1 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun pos/1477480286 ((x!0 var442)) Int\r\n    (ite (= x!0 var442!val!2) 1\r\n      0))\r\n  (define-fun limit/1477480286 ((x!0 var442)) Int\r\n    1)\r\n  (define-fun buffer/1477480286 ((x!0 var442)) (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 56 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.01510000228881836,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var442 is 3\r\n; rep: (as @var442_0 var442)\r\n; rep: (as @var442_1 var442)\r\n; rep: (as @var442_2 var442)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun buffer/1477480286 ((_arg_1 var442)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun pos/1477480286 ((_arg_1 var442)) Int (ite (= (as @var442_1 var442) _arg_1) 0 1))\r\n(define-fun limit/1477480286 ((_arg_1 var442)) Int 1)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_611 String) (BOUND_VARIABLE_612 (Array Int Int)) (BOUND_VARIABLE_613 Int) (BOUND_VARIABLE_614 Int)) void (as @void_0 void))\r\n(define-fun null-var442 () var442 (as @var442_0 var442))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-String () String \"\")\r\n(define-fun var2757 () var442 (as @var442_1 var442))\r\n(define-fun var3312 () Int 0)\r\n(define-fun var2757!1 () var442 (as @var442_2 var442))\r\n(define-fun var2356!1 () String \"\")\r\n(define-fun var2651!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var3583!1 () Int 0)\r\n(define-fun var3461!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 31768576,
            "run_time": 0.0763859748840332,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var442:\n  ;;   var442!val!0 var442!val!1 var442!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var442!val!0 () var442)\n  (declare-fun var442!val!1 () var442)\n  (declare-fun var442!val!2 () var442)\n  ;; cardinality constraint:\n  (forall ((x var442))\n          (or (= x var442!val!0) (= x var442!val!1) (= x var442!val!2)))\n  ;; -----------\n  (define-fun var1992 () Int\n    (pos/1477480286 var2757))\n  (define-fun var1427 () Int\n    (- (+ (pos/1477480286 var2757) 1) (pos/1477480286 var2757)))\n  (define-fun var1992!1 () Int\n    (+ (pos/1477480286 var2757) 1))\n  (define-fun var2797 () Int\n    var3312)\n  (define-fun var2356 () String\n    String-init)\n  (define-fun var2757!1 () var442\n    var442!val!2)\n  (define-fun var2651 () (Array Int Int)\n    (buffer/1477480286 var2757))\n  (define-fun var1997 () Int\n    (limit/1477480286 var2757))\n  (define-fun var2676 () Int\n    (pos/1477480286 var2757))\n  (define-fun var3461 () Int\n    (- (- (+ (pos/1477480286 var2757) 1) (pos/1477480286 var2757)) 1))\n  (define-fun null-var442 () var442\n    var442!val!1)\n  (define-fun null-Int () Int\n    1)\n  (define-fun var482 () Int\n    (select (buffer/1477480286 var2757) (pos/1477480286 var2757)))\n  (define-fun var1994 () String\n    null-String)\n  (define-fun var1017 () Int\n    (select (buffer/1477480286 var2757) (pos/1477480286 var2757)))\n  (define-fun var3583 () Int\n    (pos/1477480286 var2757))\n  (define-fun var2757 () var442\n    var442!val!0)\n  (define-fun var1355 () Int\n    (pos/1477480286 var2757))\n  (define-fun var3312 () Int\n    0)\n  (define-fun null-String () String\n    \"\")\n  (define-fun var3461!1 () Int\n    0)\n  (define-fun var2356!1 () String\n    \"\")\n  (define-fun var2651!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun var3583!1 () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun pos/1477480286 ((x!0 var442)) Int\n    (ite (= x!0 var442!val!2) 1\n      0))\n  (define-fun limit/1477480286 ((x!0 var442)) Int\n    1)\n  (define-fun buffer/1477480286 ((x!0 var442)) (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 56 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179572736,
            "run_time": 0.9934840202331543,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2757!1 () var442 var442!8)\r\n  (define-fun var3312 () Int 3)\r\n  (define-fun var2757 () var442 var442!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var442 () var442 var442!2)\r\n  (define-fun limit/1477480286 ((x!0 var442)) Int (ite (= x!0 var442!4) 10 0))\r\n  (define-fun pos/1477480286 ((x!0 var442)) Int (ite (= x!0 var442!4) 9 (ite (= x!0 var442!8) 10 0)))\r\n  (define-fun buffer/1477480286 ((x!0 var442)) (Array Int Int) (ite (= x!0 var442!4) (store ((as const (Array Int Int)) 11) 9 3) ((as const (Array Int Int)) 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.String: void <init>(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "c5 := @parameter0: char",
            "r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "r7 = null",
            "$i1 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "i15 = $i1",
            "i16 = r0.<com.google.gson.stream.JsonReader: int limit>",
            "i17 = $i1",
            "if i15 >= i16 goto (branch)",
            "$i4 = i15",
            "i15 = i15 + 1",
            "c18 = r1[$i4]",
            "$i22 = (int) c18",
            "$i23 = (int) c5",
            "if $i22 != $i23 goto $i24 = (int) c18",
            "r0.<com.google.gson.stream.JsonReader: int pos> = i15",
            "$i14 = i15 - i17",
            "i19 = $i14 - 1",
            "if r7 != null goto virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r1, i17, i19)",
            "$r8 = new java.lang.String",
            "specialinvoke $r8.<java.lang.String: void <init>(char[],int,int)>(r1, i17, i19)",
            "return $r8"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__nextNull__273520319\\891.smt2",
        "z3": {
            "memory": 32428032,
            "run_time": 0.05756950378417969,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2476:\r\n  ;;   var2476!val!1 var2476!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2476!val!1 () var2476)\r\n  (declare-fun var2476!val!0 () var2476)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2476)) (or (= x var2476!val!1) (= x var2476!val!0)))\r\n  ;; -----------\r\n  (define-fun var2383 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var898!1 \"Expected null but was \")\r\n          (cast-from-var82-to-var2091 (peek/-699404472 var1841)))\r\n        (locationString/1083242436 var1841)))\r\n  (define-fun var898 () String\r\n    String-init)\r\n  (define-fun var880 () String\r\n    (locationString/1083242436 var1841))\r\n  (define-fun var1686!1 () String\r\n    \"Expected null but was \")\r\n  (define-fun var1874 () Int\r\n    (peeked/1477480286 var1841))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1657 () var1679\r\n    var1679-init)\r\n  (define-fun var3709 () var82\r\n    (peek/-699404472 var1841))\r\n  (define-fun var1686 () String\r\n    (str.++ var898!1 \"Expected null but was \"))\r\n  (define-fun null-var2476 () var2476\r\n    var2476!val!1)\r\n  (define-fun var1841 () var2476\r\n    var2476!val!0)\r\n  (define-fun var228 () String\r\n    (append/-1031950772\r\n  (str.++ var898!1 \"Expected null but was \")\r\n  (cast-from-var82-to-var2091 (peek/-699404472 var1841))))\r\n  (define-fun var173 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var898!1 \"Expected null but was \")\r\n          (cast-from-var82-to-var2091 (peek/-699404472 var1841)))\r\n        (locationString/1083242436 var1841)))\r\n  (define-fun var898!1 () String\r\n    \"\")\r\n  (define-fun var228!1 () String\r\n    \"\")\r\n  (define-fun var898!2 () String\r\n    \"Expected null but was \")\r\n  (define-fun var1657!1 () var1679\r\n    var1679!val!0)\r\n  (define-fun var173!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1679-init () var1679\r\n    var1679!val!0)\r\n  (define-fun peeked/1477480286 ((x!0 var2476)) Int\r\n    2)\r\n  (define-fun peek/-699404472 ((x!0 var2476)) var82\r\n    var82!val!0)\r\n  (define-fun cast-from-var82-to-var2091 ((x!0 var82)) var2091\r\n    var2091!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2091)) String\r\n    \"\")\r\n  (define-fun locationString/1083242436 ((x!0 var2476)) String\r\n    \"\")\r\n  (define-fun <init>/-1092629202 ((x!0 var1679) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 62 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.04572772979736328,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2476 is 2\r\n; rep: (as @var2476_0 var2476)\r\n; rep: (as @var2476_1 var2476)\r\n; cardinality of var1679 is 1\r\n; rep: (as @var1679_0 var1679)\r\n; cardinality of var82 is 1\r\n; rep: (as @var82_0 var82)\r\n; cardinality of var2091 is 1\r\n; rep: (as @var2091_0 var2091)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peeked/1477480286 ((_arg_1 var2476)) Int (- 1))\r\n(define-fun var1679-init () var1679 (as @var1679_0 var1679))\r\n(define-fun String-init () String \"\")\r\n(define-fun peek/-699404472 ((BOUND_VARIABLE_985 var2476)) var82 (as @var82_0 var82))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_988 String) (BOUND_VARIABLE_989 var2091)) String \"\")\r\n(define-fun cast-from-var82-to-var2091 ((BOUND_VARIABLE_992 var82)) var2091 (as @var2091_0 var2091))\r\n(define-fun locationString/1083242436 ((BOUND_VARIABLE_995 var2476)) String \"\")\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_998 var1679) (BOUND_VARIABLE_999 String)) void (as @void_0 void))\r\n(define-fun null-var2476 () var2476 (as @var2476_0 var2476))\r\n(define-fun var1841 () var2476 (as @var2476_1 var2476))\r\n(define-fun var898!1 () String \"\")\r\n(define-fun var898!2 () String \"Expected null but was \")\r\n(define-fun var1686!1 () String \"Expected null but was \")\r\n(define-fun var228!1 () String \"\")\r\n(define-fun var1657!1 () var1679 (as @var1679_0 var1679))\r\n(define-fun var173!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36741120,
            "run_time": 0.0787351131439209,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2476:\n  ;;   var2476!val!1 var2476!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2476!val!1 () var2476)\n  (declare-fun var2476!val!0 () var2476)\n  ;; cardinality constraint:\n  (forall ((x var2476)) (or (= x var2476!val!1) (= x var2476!val!0)))\n  ;; -----------\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1686 () String\n    (str.++ var898!1 \"Expected null but was \"))\n  (define-fun var228 () String\n    (append/-1031950772\n  (str.++ var898!1 \"Expected null but was \")\n  (cast-from-var82-to-var2091 (peek/-699404472 var1841))))\n  (define-fun var2383 () String\n    (str.++ (append/-1031950772\n          (str.++ var898!1 \"Expected null but was \")\n          (cast-from-var82-to-var2091 (peek/-699404472 var1841)))\n        (locationString/1083242436 var1841)))\n  (define-fun var1874 () Int\n    (peeked/1477480286 var1841))\n  (define-fun var1841 () var2476\n    var2476!val!0)\n  (define-fun var1686!1 () String\n    \"Expected null but was \")\n  (define-fun var898!2 () String\n    \"Expected null but was \")\n  (define-fun var173 () String\n    (str.++ (append/-1031950772\n          (str.++ var898!1 \"Expected null but was \")\n          (cast-from-var82-to-var2091 (peek/-699404472 var1841)))\n        (locationString/1083242436 var1841)))\n  (define-fun var1657 () var1679\n    var1679-init)\n  (define-fun var880 () String\n    (locationString/1083242436 var1841))\n  (define-fun null-var2476 () var2476\n    var2476!val!1)\n  (define-fun var898 () String\n    String-init)\n  (define-fun var3709 () var82\n    (peek/-699404472 var1841))\n  (define-fun var898!1 () String\n    \"\")\n  (define-fun var228!1 () String\n    \"\")\n  (define-fun var1657!1 () var1679\n    var1679!val!0)\n  (define-fun var173!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1679-init () var1679\n    var1679!val!0)\n  (define-fun peeked/1477480286 ((x!0 var2476)) Int\n    2)\n  (define-fun peek/-699404472 ((x!0 var2476)) var82\n    var82!val!0)\n  (define-fun cast-from-var82-to-var2091 ((x!0 var82)) var2091\n    var2091!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2091)) String\n    \"\")\n  (define-fun locationString/1083242436 ((x!0 var2476)) String\n    \"\")\n  (define-fun <init>/-1092629202 ((x!0 var1679) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 62 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173780992,
            "run_time": 0.979276180267334,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2476/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.stream.JsonReader__nextNull__273520319\\891.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var228!1 =\r\n     concat(all_31_3, all_31_2)\r\n\r\n712ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "i4 = r0.<com.google.gson.stream.JsonReader: int peeked>",
            "if i4 != 0 goto (branch)",
            "if i4 != 7 goto $r1 = new java.lang.IllegalStateException",
            "$r1 = new java.lang.IllegalStateException",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected null but was \")",
            "$r3 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>()",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r3)",
            "$r5 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String locationString()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r1.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__nextUnquotedValue__1263929427\\1045.smt2",
        "z3": {
            "memory": 31531008,
            "run_time": 0.04584550857543945,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 53 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.016656875610351562,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34062336,
            "run_time": 0.07864189147949219,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 53 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165015552,
            "run_time": 0.8661837577819824,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "r8 = null",
            "i13 = 0",
            "$i14 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i15 = $i14 + i13",
            "$i16 = r0.<com.google.gson.stream.JsonReader: int limit>",
            "if $i15 >= $i16 goto $r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$r7 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$i10 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i11 = $i10 + i13",
            "$c12 = $r7[$i11]",
            "$i17 = (int) $c12",
            "lookupswitch($i17) {     case 9: goto goto [?= (branch)];     case 10: goto goto [?= (branch)];     case 12: goto goto [?= (branch)];     case 13: goto goto [?= (branch)];     case 32: goto goto [?= (branch)];     case 35: goto specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();     case 44: goto goto [?= (branch)];     case 47: goto specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();     case 58: goto goto [?= (branch)];     case 59: goto specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();     case 61: goto specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();     case 91: goto goto [?= (branch)];     case 92: goto specialinvoke r0.<com.google.gson.stream.JsonReader: void checkLenient()>();     case 93: goto goto [?= (branch)];     case 123: goto goto [?= (branch)];     case 125: goto goto [?= (branch)];     default: goto i13 = i13 + 1; }",
            "goto [?= (branch)]",
            "if null != r8 goto $r3 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$r3 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$i4 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$r4 = virtualinvoke r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>($r3, $i4, i13)",
            "$r9 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i5 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i6 = $i5 + i13",
            "r0.<com.google.gson.stream.JsonReader: int pos> = $i6",
            "return $r9"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__peekKeyword__2119925800\\526.smt2",
        "z3": {
            "memory": 32059392,
            "run_time": 0.059737443923950195,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2408:\r\n  ;;   var2408!val!0 var2408!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2408!val!0 () var2408)\r\n  (declare-fun var2408!val!1 () var2408)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2408)) (or (= x var2408!val!0) (= x var2408!val!1)))\r\n  ;; -----------\r\n  (define-fun var3958 () Int\r\n    (pos/1477480286 var571))\r\n  (define-fun var649 () Int\r\n    (select (buffer/1477480286 var571) (pos/1477480286 var571)))\r\n  (define-fun null-var2408 () var2408\r\n    var2408!val!1)\r\n  (define-fun var2604 () Int\r\n    (str.len \"true\"))\r\n  (define-fun var1301 () Int\r\n    5)\r\n  (define-fun var2435 () String\r\n    \"true\")\r\n  (define-fun var2295 () Int\r\n    (+ (pos/1477480286 var571) 1))\r\n  (define-fun var3610 () String\r\n    \"TRUE\")\r\n  (define-fun var3233 () Int\r\n    5)\r\n  (define-fun var366 () String\r\n    \"true\")\r\n  (define-fun var2788 () String\r\n    \"true\")\r\n  (define-fun var553 () Int\r\n    (select (buffer/1477480286 var571) (pos/1477480286 var571)))\r\n  (define-fun var571 () var2408\r\n    var2408!val!0)\r\n  (define-fun var2471 () Int\r\n    (limit/1477480286 var571))\r\n  (define-fun var1475 () Int\r\n    5)\r\n  (define-fun var3566 () Int\r\n    (pos/1477480286 var571))\r\n  (define-fun var1233 () Int\r\n    (+ 1 1))\r\n  (define-fun var2685 () Int\r\n    1)\r\n  (define-fun var3109 () Bool\r\n    (fillBuffer/548664799 var571 (+ 1 1)))\r\n  (define-fun var2562 () (Array Int Int)\r\n    (buffer/1477480286 var571))\r\n  (define-fun buffer/1477480286 ((x!0 var2408)) (Array Int Int)\r\n    ((as const (Array Int Int)) 116))\r\n  (define-fun pos/1477480286 ((x!0 var2408)) Int\r\n    0)\r\n  (define-fun fillBuffer/548664799 ((x!0 var2408) (x!1 Int)) Bool\r\n    false)\r\n  (define-fun limit/1477480286 ((x!0 var2408)) Int\r\n    0)\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015963077545166016,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2408 is 2\r\n; rep: (as @var2408_0 var2408)\r\n; rep: (as @var2408_1 var2408)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun buffer/1477480286 ((_arg_1 var2408)) (Array Int Int) (store ((as const (Array Int Int)) 0) 0 116))\r\n(define-fun pos/1477480286 ((_arg_1 var2408)) Int 0)\r\n(define-fun limit/1477480286 ((_arg_1 var2408)) Int 0)\r\n(define-fun fillBuffer/548664799 ((_arg_1 var2408) (_arg_2 Int)) Bool false)\r\n(define-fun null-var2408 () var2408 (as @var2408_0 var2408))\r\n(define-fun var571 () var2408 (as @var2408_1 var2408))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36360192,
            "run_time": 0.07774496078491211,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2408:\n  ;;   var2408!val!0 var2408!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2408!val!0 () var2408)\n  (declare-fun var2408!val!1 () var2408)\n  ;; cardinality constraint:\n  (forall ((x var2408)) (or (= x var2408!val!0) (= x var2408!val!1)))\n  ;; -----------\n  (define-fun var3233 () Int\n    5)\n  (define-fun null-var2408 () var2408\n    var2408!val!1)\n  (define-fun var2435 () String\n    \"true\")\n  (define-fun var2471 () Int\n    (limit/1477480286 var571))\n  (define-fun var553 () Int\n    (select (buffer/1477480286 var571) (pos/1477480286 var571)))\n  (define-fun var2562 () (Array Int Int)\n    (buffer/1477480286 var571))\n  (define-fun var3610 () String\n    \"TRUE\")\n  (define-fun var1475 () Int\n    5)\n  (define-fun var3566 () Int\n    (pos/1477480286 var571))\n  (define-fun var1233 () Int\n    (+ 1 1))\n  (define-fun var366 () String\n    \"true\")\n  (define-fun var2788 () String\n    \"true\")\n  (define-fun var2685 () Int\n    1)\n  (define-fun var3109 () Bool\n    (fillBuffer/548664799 var571 (+ 1 1)))\n  (define-fun var571 () var2408\n    var2408!val!0)\n  (define-fun var3958 () Int\n    (pos/1477480286 var571))\n  (define-fun var649 () Int\n    (select (buffer/1477480286 var571) (pos/1477480286 var571)))\n  (define-fun var2604 () Int\n    (str.len \"true\"))\n  (define-fun var1301 () Int\n    5)\n  (define-fun var2295 () Int\n    (+ (pos/1477480286 var571) 1))\n  (define-fun buffer/1477480286 ((x!0 var2408)) (Array Int Int)\n    ((as const (Array Int Int)) 116))\n  (define-fun pos/1477480286 ((x!0 var2408)) Int\n    0)\n  (define-fun fillBuffer/548664799 ((x!0 var2408) (x!1 Int)) Bool\n    false)\n  (define-fun limit/1477480286 ((x!0 var2408)) Int\n    0)\n)\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 171343872,
            "run_time": 1.0854830741882324,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var571 () var2408 var2408!236)\r\n  (define-fun null-var2408 () var2408 var2408!234)\r\n  (define-fun fillBuffer/548664799 ((x!0 var2408) (x!1 Int)) Bool (ite (and (= x!0 var2408!236) (= x!1 2)) false true))\r\n  (define-fun limit/1477480286 ((x!0 var2408)) Int (ite (= x!0 var2408!236) 125 0))\r\n  (define-fun pos/1477480286 ((x!0 var2408)) Int (ite (= x!0 var2408!236) 124 0))\r\n  (define-fun buffer/1477480286 ((x!0 var2408)) (Array Int Int) (ite (= x!0 var2408!236) (store ((as const (Array Int Int)) 126) 124 116) ((as const (Array Int Int)) 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "$r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$i0 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "c19 = $r1[$i0]",
            "$i25 = (int) c19",
            "if $i25 == 116 goto r4 = \"true\"",
            "r4 = \"true\"",
            "r7 = \"true\"",
            "r6 = \"true\"",
            "r5 = \"TRUE\"",
            "b20 = 5",
            "b24 = 5",
            "b23 = 5",
            "goto [?= $i21 = virtualinvoke r7.<java.lang.String: int length()>()]",
            "$i21 = virtualinvoke r7.<java.lang.String: int length()>()",
            "i22 = 1",
            "if i22 >= $i21 goto $i1 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i10 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i12 = $i10 + i22",
            "$i11 = r0.<com.google.gson.stream.JsonReader: int limit>",
            "if $i12 < $i11 goto $r3 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$i17 = i22 + 1",
            "$z2 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>($i17)",
            "if $z2 != 0 goto $r3 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__nextQuotedValue__-1176938928\\996.smt2",
        "z3": {
            "memory": 31461376,
            "run_time": 0.044695138931274414,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 53 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.03037405014038086,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34119680,
            "run_time": 0.07639956474304199,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 53 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 158674944,
            "run_time": 0.806006908416748,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "c5 := @parameter0: char",
            "r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "r7 = null",
            "$i1 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "i15 = $i1",
            "i16 = r0.<com.google.gson.stream.JsonReader: int limit>",
            "i17 = $i1",
            "if i15 >= i16 goto (branch)",
            "$i4 = i15",
            "i15 = i15 + 1",
            "c18 = r1[$i4]",
            "$i22 = (int) c18",
            "$i23 = (int) c5",
            "if $i22 != $i23 goto $i24 = (int) c18",
            "r0.<com.google.gson.stream.JsonReader: int pos> = i15",
            "$i14 = i15 - i17",
            "i19 = $i14 - 1",
            "if r7 != null goto virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r1, i17, i19)",
            "virtualinvoke r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(r1, i17, i19)",
            "$r5 = virtualinvoke r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__peekKeyword__2119925800\\563.smt2",
        "z3": {
            "memory": 31195136,
            "run_time": 0.06563329696655273,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 53 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.09154772758483887,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 31248384,
            "run_time": 0.07740998268127441,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 53 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165367808,
            "run_time": 0.8352091312408447,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "$r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$i0 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "c19 = $r1[$i0]",
            "$i25 = (int) c19",
            "if $i25 == 116 goto r4 = \"true\"",
            "r4 = \"true\"",
            "r7 = \"true\"",
            "r6 = \"true\"",
            "r5 = \"TRUE\"",
            "b20 = 5",
            "b24 = 5",
            "b23 = 5",
            "goto [?= $i21 = virtualinvoke r7.<java.lang.String: int length()>()]",
            "$i21 = virtualinvoke r7.<java.lang.String: int length()>()",
            "i22 = 1",
            "if i22 >= $i21 goto $i1 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i1 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i3 = $i1 + $i21",
            "$i2 = r0.<com.google.gson.stream.JsonReader: int limit>",
            "if $i3 < $i2 goto $r2 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$r2 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$i4 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i5 = $i4 + $i21",
            "$c6 = $r2[$i5]",
            "$z0 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean isLiteral(char)>($c6)",
            "if $z0 == 0 goto $i7 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__nextUnquotedValue__1263929427\\1052.smt2",
        "z3": {
            "memory": 30724096,
            "run_time": 0.05865597724914551,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1124:\r\n  ;;   var1124!val!0 var1124!val!2 var1124!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1124!val!0 () var1124)\r\n  (declare-fun var1124!val!2 () var1124)\r\n  (declare-fun var1124!val!1 () var1124)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1124))\r\n          (or (= x var1124!val!0) (= x var1124!val!2) (= x var1124!val!1)))\r\n  ;; -----------\r\n  (define-fun var2528 () Int\r\n    (getLength-Arr-Int-1 (buffer/1477480286 var1330)))\r\n  (define-fun var54 () Int\r\n    (+ 0 1))\r\n  (define-fun var1330!1 () var1124\r\n    var1124!val!2)\r\n  (define-fun var1465 () (Array Int Int)\r\n    (buffer/1477480286 var1330))\r\n  (define-fun var608 () Int\r\n    (+ (pos/1477480286 var1330) var577!1))\r\n  (define-fun var3283 () Int\r\n    (pos/1477480286 var1330))\r\n  (define-fun var2276 () String\r\n    String-init)\r\n  (define-fun var935 () Int\r\n    (pos/1477480286 var1330))\r\n  (define-fun var2559 () String\r\n    null-String)\r\n  (define-fun var1017 () (Array Int Int)\r\n    (buffer/1477480286 var1330))\r\n  (define-fun var1811 () Bool\r\n    (fillBuffer/548664799 var1330 (+ 0 1)))\r\n  (define-fun null-var1124 () var1124\r\n    var1124!val!1)\r\n  (define-fun var2439 () Int\r\n    (limit/1477480286 var1330))\r\n  (define-fun var1907 () Int\r\n    (pos/1477480286 var1330))\r\n  (define-fun var577 () Int\r\n    0)\r\n  (define-fun var1330 () var1124\r\n    var1124!val!0)\r\n  (define-fun var839 () String\r\n    String-init)\r\n  (define-fun var1659 () Int\r\n    (+ (pos/1477480286 var1330) 0))\r\n  (define-fun var577!1 () Int\r\n    0)\r\n  (define-fun var839!1 () String\r\n    \"\")\r\n  (define-fun var935!1 () Int\r\n    0)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1465!1 () (Array Int Int)\r\n    ((as const (Array Int Int)) 0))\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun pos/1477480286 ((x!0 var1124)) Int\r\n    0)\r\n  (define-fun limit/1477480286 ((x!0 var1124)) Int\r\n    0)\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\r\n    1)\r\n  (define-fun fillBuffer/548664799 ((x!0 var1124) (x!1 Int)) Bool\r\n    false)\r\n  (define-fun buffer/1477480286 ((x!0 var1124)) (Array Int Int)\r\n    ((as const (Array Int Int)) (- 1)))\r\n  (define-fun <init>/-253222812 ((x!0 String)\r\n   (x!1 (Array Int Int))\r\n   (x!2 Int)\r\n   (x!3 Int)) void\r\n    void!val!0)\r\n)\r\n(error \"line 59 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015941381454467773,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1124 is 3\r\n; rep: (as @var1124_0 var1124)\r\n; rep: (as @var1124_1 var1124)\r\n; rep: (as @var1124_2 var1124)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun pos/1477480286 ((_arg_1 var1124)) Int 0)\r\n(define-fun limit/1477480286 ((_arg_1 var1124)) Int 0)\r\n(define-fun buffer/1477480286 ((_arg_1 var1124)) (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun getLength-Arr-Int-1 ((_arg_1 (Array Int Int))) Int 1)\r\n(define-fun fillBuffer/548664799 ((_arg_1 var1124) (_arg_2 Int)) Bool false)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-253222812 ((BOUND_VARIABLE_597 String) (BOUND_VARIABLE_598 (Array Int Int)) (BOUND_VARIABLE_599 Int) (BOUND_VARIABLE_600 Int)) void (as @void_0 void))\r\n(define-fun null-var1124 () var1124 (as @var1124_0 var1124))\r\n(define-fun null-String () String \"\")\r\n(define-fun var1330 () var1124 (as @var1124_1 var1124))\r\n(define-fun var839!1 () String \"\")\r\n(define-fun var1465!1 () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var935!1 () Int 0)\r\n(define-fun var577!1 () Int 0)\r\n(define-fun var1330!1 () var1124 (as @var1124_2 var1124))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33505280,
            "run_time": 0.04711270332336426,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1124:\n  ;;   var1124!val!0 var1124!val!2 var1124!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1124!val!0 () var1124)\n  (declare-fun var1124!val!2 () var1124)\n  (declare-fun var1124!val!1 () var1124)\n  ;; cardinality constraint:\n  (forall ((x var1124))\n          (or (= x var1124!val!0) (= x var1124!val!2) (= x var1124!val!1)))\n  ;; -----------\n  (define-fun var608 () Int\n    (+ (pos/1477480286 var1330) var577!1))\n  (define-fun var3283 () Int\n    (pos/1477480286 var1330))\n  (define-fun var2439 () Int\n    (limit/1477480286 var1330))\n  (define-fun var935 () Int\n    (pos/1477480286 var1330))\n  (define-fun var1811 () Bool\n    (fillBuffer/548664799 var1330 (+ 0 1)))\n  (define-fun var1330!1 () var1124\n    var1124!val!2)\n  (define-fun var1907 () Int\n    (pos/1477480286 var1330))\n  (define-fun var2276 () String\n    String-init)\n  (define-fun var2559 () String\n    null-String)\n  (define-fun null-var1124 () var1124\n    var1124!val!1)\n  (define-fun var577 () Int\n    0)\n  (define-fun var1659 () Int\n    (+ (pos/1477480286 var1330) 0))\n  (define-fun var1465 () (Array Int Int)\n    (buffer/1477480286 var1330))\n  (define-fun var2528 () Int\n    (getLength-Arr-Int-1 (buffer/1477480286 var1330)))\n  (define-fun var54 () Int\n    (+ 0 1))\n  (define-fun var1017 () (Array Int Int)\n    (buffer/1477480286 var1330))\n  (define-fun var839 () String\n    String-init)\n  (define-fun var1330 () var1124\n    var1124!val!0)\n  (define-fun var577!1 () Int\n    0)\n  (define-fun var839!1 () String\n    \"\")\n  (define-fun var935!1 () Int\n    0)\n  (define-fun null-String () String\n    \"\")\n  (define-fun var1465!1 () (Array Int Int)\n    ((as const (Array Int Int)) 0))\n  (define-fun String-init () String\n    \"\")\n  (define-fun pos/1477480286 ((x!0 var1124)) Int\n    0)\n  (define-fun limit/1477480286 ((x!0 var1124)) Int\n    0)\n  (define-fun fillBuffer/548664799 ((x!0 var1124) (x!1 Int)) Bool\n    false)\n  (define-fun buffer/1477480286 ((x!0 var1124)) (Array Int Int)\n    ((as const (Array Int Int)) (- 1)))\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int\n    1)\n  (define-fun <init>/-253222812 ((x!0 String)\n   (x!1 (Array Int Int))\n   (x!2 Int)\n   (x!3 Int)) void\n    void!val!0)\n)\n(error \"line 59 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 183005184,
            "run_time": 0.975273847579956,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1330!1 () var1124 var1124!8)\r\n  (define-fun var577!1 () Int 1)\r\n  (define-fun var1330 () var1124 var1124!6)\r\n  (define-fun null-var1124 () var1124 var1124!4)\r\n  (define-fun fillBuffer/548664799 ((x!0 var1124) (x!1 Int)) Bool (ite (and (= x!0 var1124!6) (= x!1 1)) false true))\r\n  (define-fun getLength-Arr-Int-1 ((x!0 (Array Int Int))) Int (ite (= x!0 ((as const (Array Int Int)) 0)) 1 0))\r\n  (define-fun buffer/1477480286 ((x!0 var1124)) (Array Int Int) (ite (= x!0 var1124!6) ((as const (Array Int Int)) 0) ((as const (Array Int Int)) 0)))\r\n  (define-fun limit/1477480286 ((x!0 var1124)) Int (ite (= x!0 var1124!6) 9 0))\r\n  (define-fun pos/1477480286 ((x!0 var1124)) Int (ite (= x!0 var1124!6) 9 (ite (= x!0 var1124!8) 10 0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: void <init>(char[],int,int)>"
        ],
        "api_count": {
            "<java.lang.String: void <init>(char[],int,int)>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "r8 = null",
            "i13 = 0",
            "$i14 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i15 = $i14 + i13",
            "$i16 = r0.<com.google.gson.stream.JsonReader: int limit>",
            "if $i15 >= $i16 goto $r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$i0 = lengthof $r1",
            "if i13 >= $i0 goto (branch)",
            "$i9 = i13 + 1",
            "$z1 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>($i9)",
            "if $z1 == 0 goto (branch)",
            "if null != r8 goto $r3 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$r11 = new java.lang.String",
            "$r9 = $r11",
            "$r5 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$i7 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "specialinvoke $r11.<java.lang.String: void <init>(char[],int,int)>($r5, $i7, i13)",
            "goto [?= $i5 = r0.<com.google.gson.stream.JsonReader: int pos>]",
            "$i5 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i6 = $i5 + i13",
            "r0.<com.google.gson.stream.JsonReader: int pos> = $i6",
            "return $r9"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__peekKeyword__2119925800\\552.smt2",
        "z3": {
            "memory": 20680704,
            "run_time": 0.0458219051361084,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 59 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1720320,
            "run_time": 0.015024900436401367,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33050624,
            "run_time": 0.07711935043334961,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 59 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 161107968,
            "run_time": 0.8507137298583984,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "$r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$i0 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "c19 = $r1[$i0]",
            "$i25 = (int) c19",
            "if $i25 == 116 goto r4 = \"true\"",
            "r4 = \"true\"",
            "r7 = \"true\"",
            "r6 = \"true\"",
            "r5 = \"TRUE\"",
            "b20 = 5",
            "b24 = 5",
            "b23 = 5",
            "goto [?= $i21 = virtualinvoke r7.<java.lang.String: int length()>()]",
            "$i21 = virtualinvoke r7.<java.lang.String: int length()>()",
            "i22 = 1",
            "if i22 >= $i21 goto $i1 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i1 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i3 = $i1 + $i21",
            "$i2 = r0.<com.google.gson.stream.JsonReader: int limit>",
            "if $i3 < $i2 goto $r2 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$i9 = $i21 + 1",
            "$z1 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>($i9)",
            "if $z1 == 0 goto $i7 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i7 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i8 = $i7 + $i21",
            "r0.<com.google.gson.stream.JsonReader: int pos> = $i8",
            "r0.<com.google.gson.stream.JsonReader: int peeked> = b23",
            "return b24"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__syntaxError__-1937863688\\1485.smt2",
        "z3": {
            "memory": 32088064,
            "run_time": 0.0560297966003418,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var550:\r\n  ;;   var550!val!1 var550!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var550!val!1 () var550)\r\n  (declare-fun var550!val!0 () var550)\r\n  ;; cardinality constraint:\r\n  (forall ((x var550)) (or (= x var550!val!1) (= x var550!val!0)))\r\n  ;; -----------\r\n  (define-fun var2823 () String\r\n    String-init)\r\n  (define-fun var1385 () String\r\n    (str.++ var2823!1 var3001 (locationString/1083242436 var2933)))\r\n  (define-fun null-var550 () var550\r\n    var550!val!1)\r\n  (define-fun var2933 () var550\r\n    var550!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var650 () String\r\n    (locationString/1083242436 var2933))\r\n  (define-fun var2616 () var915\r\n    var915-init)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var910 () String\r\n    (str.++ var2823!1 var3001 (locationString/1083242436 var2933)))\r\n  (define-fun var3001 () String\r\n    \"A\")\r\n  (define-fun var520 () String\r\n    (str.++ var2823!1 var3001))\r\n  (define-fun var520!1 () String\r\n    \"A\")\r\n  (define-fun var2823!2 () String\r\n    \"A\")\r\n  (define-fun var2823!1 () String\r\n    \"\")\r\n  (define-fun var2616!1 () var915\r\n    var915!val!0)\r\n  (define-fun var910!1 () String\r\n    \"\")\r\n  (define-fun var915-init () var915\r\n    var915!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun locationString/1083242436 ((x!0 var550)) String\r\n    \"\")\r\n  (define-fun <init>/910050957 ((x!0 var915) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 49 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.014707565307617188,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var550 is 2\r\n; rep: (as @var550_0 var550)\r\n; rep: (as @var550_1 var550)\r\n; cardinality of var2924 is 1\r\n; rep: (as @var2924_0 var2924)\r\n; cardinality of var915 is 1\r\n; rep: (as @var915_0 var915)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var915-init () var915 (as @var915_0 var915))\r\n(define-fun String-init () String \"\")\r\n(define-fun locationString/1083242436 ((BOUND_VARIABLE_601 var550)) String \"\")\r\n(define-fun <init>/910050957 ((BOUND_VARIABLE_604 var915) (BOUND_VARIABLE_605 String)) void (as @void_0 void))\r\n(define-fun null-var550 () var550 (as @var550_0 var550))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2933 () var550 (as @var550_1 var550))\r\n(define-fun var3001 () String \"\")\r\n(define-fun var2823!1 () String \"\")\r\n(define-fun var2823!2 () String \"\")\r\n(define-fun var520!1 () String \"\")\r\n(define-fun var2616!1 () var915 (as @var915_0 var915))\r\n(define-fun var910!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37646336,
            "run_time": 0.09237527847290039,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var550:\n  ;;   var550!val!1 var550!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var550!val!1 () var550)\n  (declare-fun var550!val!0 () var550)\n  ;; cardinality constraint:\n  (forall ((x var550)) (or (= x var550!val!1) (= x var550!val!0)))\n  ;; -----------\n  (define-fun var2823!1 () String\n    \"\")\n  (define-fun var2823!2 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var520!1 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2616 () var915\n    var915-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var910 () String\n    (str.++ var2823!1 var3001 (locationString/1083242436 var2933)))\n  (define-fun var3001 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2823 () String\n    String-init)\n  (define-fun var2933 () var550\n    var550!val!0)\n  (define-fun var1385 () String\n    (str.++ var2823!1 var3001 (locationString/1083242436 var2933)))\n  (define-fun var520 () String\n    (str.++ var2823!1 var3001))\n  (define-fun null-var550 () var550\n    var550!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var650 () String\n    (locationString/1083242436 var2933))\n  (define-fun var2616!1 () var915\n    var915!val!0)\n  (define-fun var910!1 () String\n    \"\")\n  (define-fun var915-init () var915\n    var915!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun locationString/1083242436 ((x!0 var550)) String\n    \"\")\n  (define-fun <init>/910050957 ((x!0 var915) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 49 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164311040,
            "run_time": 0.9313886165618896,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var550/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.stream.JsonReader__syntaxError__-1937863688\\1485.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var520!1 =\r\n     concat(var3001, all_19_3)\r\n\r\n643ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @this: com.google.gson.stream.JsonReader",
            "r2 := @parameter0: java.lang.String",
            "$r0 = new com.google.gson.stream.MalformedJsonException",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r4 = virtualinvoke r3.<com.google.gson.stream.JsonReader: java.lang.String locationString()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r0.<com.google.gson.stream.MalformedJsonException: void <init>(java.lang.String)>($r7)",
            "throw $r0"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__peekKeyword__2119925800\\569.smt2",
        "z3": {
            "memory": 28950528,
            "run_time": 0.05871391296386719,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 62 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.015558719635009766,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33292288,
            "run_time": 0.07883977890014648,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 62 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 159645696,
            "run_time": 0.8554530143737793,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonReader",
            "$r1 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$i0 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "c19 = $r1[$i0]",
            "$i25 = (int) c19",
            "if $i25 == 116 goto r4 = \"true\"",
            "r4 = \"true\"",
            "r7 = \"true\"",
            "r6 = \"true\"",
            "r5 = \"TRUE\"",
            "b20 = 5",
            "b24 = 5",
            "b23 = 5",
            "goto [?= $i21 = virtualinvoke r7.<java.lang.String: int length()>()]",
            "$i21 = virtualinvoke r7.<java.lang.String: int length()>()",
            "i22 = 1",
            "if i22 >= $i21 goto $i1 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i1 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i3 = $i1 + $i21",
            "$i2 = r0.<com.google.gson.stream.JsonReader: int limit>",
            "if $i3 < $i2 goto $r2 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$r2 = r0.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$i4 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i5 = $i4 + $i21",
            "$c6 = $r2[$i5]",
            "$z0 = specialinvoke r0.<com.google.gson.stream.JsonReader: boolean isLiteral(char)>($c6)",
            "if $z0 == 0 goto $i7 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i7 = r0.<com.google.gson.stream.JsonReader: int pos>",
            "$i8 = $i7 + $i21",
            "r0.<com.google.gson.stream.JsonReader: int pos> = $i8",
            "r0.<com.google.gson.stream.JsonReader: int peeked> = b23",
            "return b24"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonWriter__setIndent__-501574872\\27.smt2",
        "z3": {
            "memory": 31924224,
            "run_time": 0.0415949821472168,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1547:\r\n  ;;   var1547!val!1 var1547!val!2 var1547!val!0 var1547!val!3 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1547!val!1 () var1547)\r\n  (declare-fun var1547!val!2 () var1547)\r\n  (declare-fun var1547!val!0 () var1547)\r\n  (declare-fun var1547!val!3 () var1547)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1547))\r\n          (or (= x var1547!val!1)\r\n              (= x var1547!val!2)\r\n              (= x var1547!val!0)\r\n              (= x var1547!val!3)))\r\n  ;; -----------\r\n  (define-fun null-var1547 () var1547\r\n    var1547!val!1)\r\n  (define-fun var866 () Int\r\n    (str.len var1250))\r\n  (define-fun var3916 () var1547\r\n    var1547!val!0)\r\n  (define-fun var3916!1 () var1547\r\n    var1547!val!2)\r\n  (define-fun var3916!2 () var1547\r\n    var1547!val!3)\r\n  (define-fun var1250 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun separator/1632885518 ((x!0 var1547)) String\r\n    (ite (= x!0 var1547!val!3) \":\"\r\n      \":\"))\r\n  (define-fun indent/1632885518 ((x!0 var1547)) String\r\n    \"A\")\r\n)\r\n(error \"line 33 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.015618324279785156,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1547 is 4\r\n; rep: (as @var1547_0 var1547)\r\n; rep: (as @var1547_1 var1547)\r\n; rep: (as @var1547_2 var1547)\r\n; rep: (as @var1547_3 var1547)\r\n; cardinality of var1941 is 1\r\n; rep: (as @var1941_0 var1941)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun indent/1632885518 ((_arg_1 var1547)) String \":\")\r\n(define-fun separator/1632885518 ((_arg_1 var1547)) String \":\")\r\n(define-fun null-var1547 () var1547 (as @var1547_0 var1547))\r\n(define-fun null-String () String \":\")\r\n(define-fun var3916 () var1547 (as @var1547_1 var1547))\r\n(define-fun var1250 () String \"\")\r\n(define-fun var3916!1 () var1547 (as @var1547_2 var1547))\r\n(define-fun var3916!2 () var1547 (as @var1547_3 var1547))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35569664,
            "run_time": 0.07762956619262695,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 32 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 33 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167723008,
            "run_time": 0.9021031856536865,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3916!2 () var1547 var1547!12)\r\n  (define-fun var3916!1 () var1547 var1547!10)\r\n  (define-fun var1250 () String \"\")\r\n  (define-fun var3916 () var1547 var1547!8)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var1547 () var1547 var1547!4)\r\n  (define-fun separator/1632885518 ((x!0 var1547)) String (ite (= x!0 var1547!12) \":\" \"\"))\r\n  (define-fun indent/1632885518 ((x!0 var1547)) String (ite (= x!0 var1547!10) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @this: com.google.gson.stream.JsonWriter",
            "r0 := @parameter0: java.lang.String",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if $i0 != 0 goto r1.<com.google.gson.stream.JsonWriter: java.lang.String indent> = r0",
            "r1.<com.google.gson.stream.JsonWriter: java.lang.String indent> = null",
            "r1.<com.google.gson.stream.JsonWriter: java.lang.String separator> = \":\"",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonWriter__string__-1237120963\\880.smt2",
        "z3": {
            "memory": 31690752,
            "run_time": 0.05608773231506348,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var369:\r\n  ;;   var369!val!0 var369!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var369!val!0 () var369)\r\n  (declare-fun var369!val!1 () var369)\r\n  ;; cardinality constraint:\r\n  (forall ((x var369)) (or (= x var369!val!0) (= x var369!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var369 () var369\r\n    var369!val!1)\r\n  (define-fun var2922 () var2005\r\n    (out/1632885518 var3871))\r\n  (define-fun var3502 () var2005\r\n    (out/1632885518 var3871))\r\n  (define-fun var3871 () var369\r\n    var369!val!0)\r\n  (define-fun var13 () String\r\n    \"\")\r\n  (define-fun var1608 () (Array Int String)\r\n    var369-REPLACEMENT_CHARS)\r\n  (define-fun var1565 () (Array Int String)\r\n    var369-REPLACEMENT_CHARS)\r\n  (define-fun var1282 () Int\r\n    0)\r\n  (define-fun var2884 () Int\r\n    (str.len var13))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1185 () Int\r\n    0)\r\n  (define-fun var1173 () Bool\r\n    (htmlSafe/1632885518 var3871))\r\n  (define-fun var2319!1 () Int\r\n    0)\r\n  (define-fun var2922!1 () var2005\r\n    var2005!val!0)\r\n  (define-fun var3502!1 () var2005\r\n    var2005!val!0)\r\n  (define-fun var369-REPLACEMENT_CHARS () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun var2319 () Int\r\n    0)\r\n  (define-fun htmlSafe/1632885518 ((x!0 var369)) Bool\r\n    false)\r\n  (define-fun write/33947008 ((x!0 var2005) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun out/1632885518 ((x!0 var369)) var2005\r\n    var2005!val!0)\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.01602482795715332,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var369 is 2\r\n; rep: (as @var369_0 var369)\r\n; rep: (as @var369_1 var369)\r\n; cardinality of var1172 is 1\r\n; rep: (as @var1172_0 var1172)\r\n; cardinality of var2005 is 1\r\n; rep: (as @var2005_0 var2005)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun htmlSafe/1632885518 ((_arg_1 var369)) Bool false)\r\n(define-fun out/1632885518 ((BOUND_VARIABLE_587 var369)) var2005 (as @var2005_0 var2005))\r\n(define-fun write/33947008 ((BOUND_VARIABLE_590 var2005) (BOUND_VARIABLE_591 Int)) void (as @void_0 void))\r\n(define-fun null-var369 () var369 (as @var369_0 var369))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var369-REPLACEMENT_CHARS () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var3871 () var369 (as @var369_1 var369))\r\n(define-fun var13 () String \"\")\r\n(define-fun var2922!1 () var2005 (as @var2005_0 var2005))\r\n(define-fun var2319 () Int 0)\r\n(define-fun var3502!1 () var2005 (as @var2005_0 var2005))\r\n(define-fun var2319!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37163008,
            "run_time": 0.07691335678100586,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var369:\n  ;;   var369!val!0 var369!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var369!val!0 () var369)\n  (declare-fun var369!val!1 () var369)\n  ;; cardinality constraint:\n  (forall ((x var369)) (or (= x var369!val!0) (= x var369!val!1)))\n  ;; -----------\n  (define-fun var1608 () (Array Int String)\n    var369-REPLACEMENT_CHARS)\n  (define-fun null-var369 () var369\n    var369!val!1)\n  (define-fun var1185 () Int\n    0)\n  (define-fun var1173 () Bool\n    (htmlSafe/1632885518 var3871))\n  (define-fun var3871 () var369\n    var369!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1565 () (Array Int String)\n    var369-REPLACEMENT_CHARS)\n  (define-fun var2922 () var2005\n    (out/1632885518 var3871))\n  (define-fun var3502 () var2005\n    (out/1632885518 var3871))\n  (define-fun var1282 () Int\n    0)\n  (define-fun var13 () String\n    \"\")\n  (define-fun var2884 () Int\n    (str.len var13))\n  (define-fun var2319!1 () Int\n    0)\n  (define-fun var2922!1 () var2005\n    var2005!val!0)\n  (define-fun var3502!1 () var2005\n    var2005!val!0)\n  (define-fun var369-REPLACEMENT_CHARS () (Array Int String)\n    ((as const (Array Int String)) \"\"))\n  (define-fun var2319 () Int\n    0)\n  (define-fun htmlSafe/1632885518 ((x!0 var369)) Bool\n    false)\n  (define-fun write/33947008 ((x!0 var2005) (x!1 Int)) void\n    void!val!0)\n  (define-fun out/1632885518 ((x!0 var369)) var2005\n    var2005!val!0)\n)\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175415296,
            "run_time": 0.9308478832244873,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var13 () String \"\")\r\n  (define-fun var3871 () var369 var369!4)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var369 () var369 var369!2)\r\n  (define-fun htmlSafe/1632885518 ((x!0 var369)) Bool (ite (= x!0 var369!4) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonWriter",
            "r3 := @parameter0: java.lang.String",
            "$z0 = r0.<com.google.gson.stream.JsonWriter: boolean htmlSafe>",
            "if $z0 == 0 goto $r8 = <com.google.gson.stream.JsonWriter: java.lang.String[] REPLACEMENT_CHARS>",
            "$r8 = <com.google.gson.stream.JsonWriter: java.lang.String[] REPLACEMENT_CHARS>",
            "r1 = $r8",
            "$r2 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>",
            "virtualinvoke $r2.<java.io.Writer: void write(int)>(34)",
            "i4 = 0",
            "$i3 = virtualinvoke r3.<java.lang.String: int length()>()",
            "i5 = 0",
            "if i5 >= $i3 goto (branch)",
            "if i4 >= $i3 goto $r4 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>",
            "$r4 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>",
            "virtualinvoke $r4.<java.io.Writer: void write(int)>(34)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__toString__1583596926\\1403.smt2",
        "z3": {
            "memory": 31891456,
            "run_time": 0.05862021446228027,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var398:\r\n  ;;   var398!val!0 var398!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var398!val!0 () var398)\r\n  (declare-fun var398!val!1 () var398)\r\n  ;; cardinality constraint:\r\n  (forall ((x var398)) (or (= x var398!val!0) (= x var398!val!1)))\r\n  ;; -----------\r\n  (define-fun var2564 () String\r\n    (getSimpleName/-390194377\r\n  (getClass/1258963082 (cast-from-var398-to-var654 var2940))))\r\n  (define-fun var2538 () String\r\n    (str.++ var1417!1\r\n        (getSimpleName/-390194377\r\n          (getClass/1258963082 (cast-from-var398-to-var654 var2940)))))\r\n  (define-fun var503 () String\r\n    (str.++ var1417!1\r\n        (getSimpleName/-390194377\r\n          (getClass/1258963082 (cast-from-var398-to-var654 var2940)))\r\n        (locationString/1083242436 var2940)))\r\n  (define-fun null-var398 () var398\r\n    var398!val!1)\r\n  (define-fun var2510 () ClassObject\r\n    (getClass/1258963082 (cast-from-var398-to-var654 var2940)))\r\n  (define-fun var2940 () var398\r\n    var398!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var549 () String\r\n    (locationString/1083242436 var2940))\r\n  (define-fun var1417 () String\r\n    String-init)\r\n  (define-fun var2003 () String\r\n    (str.++ var1417!1\r\n        (getSimpleName/-390194377\r\n          (getClass/1258963082 (cast-from-var398-to-var654 var2940)))\r\n        (locationString/1083242436 var2940)))\r\n  (define-fun var1417!2 () String\r\n    \"\")\r\n  (define-fun var2538!1 () String\r\n    \"\")\r\n  (define-fun var1417!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var398-to-var654 ((x!0 var398)) var654\r\n    var654!val!0)\r\n  (define-fun getClass/1258963082 ((x!0 var654)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun getSimpleName/-390194377 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun locationString/1083242436 ((x!0 var398)) String\r\n    \"\")\r\n)\r\n(error \"line 44 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.014896154403686523,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var398 is 2\r\n; rep: (as @var398_0 var398)\r\n; rep: (as @var398_1 var398)\r\n; cardinality of var654 is 1\r\n; rep: (as @var654_0 var654)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_521 var654)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var398-to-var654 ((BOUND_VARIABLE_524 var398)) var654 (as @var654_0 var654))\r\n(define-fun getSimpleName/-390194377 ((BOUND_VARIABLE_527 ClassObject)) String \"\")\r\n(define-fun locationString/1083242436 ((BOUND_VARIABLE_530 var398)) String \"\")\r\n(define-fun null-var398 () var398 (as @var398_0 var398))\r\n(define-fun var2940 () var398 (as @var398_1 var398))\r\n(define-fun var1417!1 () String \"\")\r\n(define-fun var1417!2 () String \"\")\r\n(define-fun var2538!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35319808,
            "run_time": 0.07846379280090332,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var398:\n  ;;   var398!val!0 var398!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var398!val!0 () var398)\n  (declare-fun var398!val!1 () var398)\n  ;; cardinality constraint:\n  (forall ((x var398)) (or (= x var398!val!0) (= x var398!val!1)))\n  ;; -----------\n  (define-fun var2003 () String\n    (str.++ var1417!1\n        (getSimpleName/-390194377\n          (getClass/1258963082 (cast-from-var398-to-var654 var2940)))\n        (locationString/1083242436 var2940)))\n  (define-fun null-var398 () var398\n    var398!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var549 () String\n    (locationString/1083242436 var2940))\n  (define-fun var2940 () var398\n    var398!val!0)\n  (define-fun var1417 () String\n    String-init)\n  (define-fun var2510 () ClassObject\n    (getClass/1258963082 (cast-from-var398-to-var654 var2940)))\n  (define-fun var2564 () String\n    (getSimpleName/-390194377\n  (getClass/1258963082 (cast-from-var398-to-var654 var2940))))\n  (define-fun var2538 () String\n    (str.++ var1417!1\n        (getSimpleName/-390194377\n          (getClass/1258963082 (cast-from-var398-to-var654 var2940)))))\n  (define-fun var503 () String\n    (str.++ var1417!1\n        (getSimpleName/-390194377\n          (getClass/1258963082 (cast-from-var398-to-var654 var2940)))\n        (locationString/1083242436 var2940)))\n  (define-fun var1417!2 () String\n    \"\")\n  (define-fun var2538!1 () String\n    \"\")\n  (define-fun var1417!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun cast-from-var398-to-var654 ((x!0 var398)) var654\n    var654!val!0)\n  (define-fun getClass/1258963082 ((x!0 var654)) ClassObject\n    ClassObject!val!0)\n  (define-fun getSimpleName/-390194377 ((x!0 ClassObject)) String\n    \"\")\n  (define-fun locationString/1083242436 ((x!0 var398)) String\n    \"\")\n)\n(error \"line 44 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167624704,
            "run_time": 0.929985523223877,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var398/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.stream.JsonReader__toString__1583596926\\1403.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2538!1 =\r\n     concat(var1417!2, all_17_3)\r\n\r\n661ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: com.google.gson.stream.JsonReader",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke r1.<java.lang.Object: java.lang.Class getClass()>()",
            "$r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getSimpleName()>()",
            "$r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r4 = virtualinvoke r1.<com.google.gson.stream.JsonReader: java.lang.String locationString()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonReader__skipTo__-863004760\\1385.smt2",
        "z3": {
            "memory": 30892032,
            "run_time": 0.060944318771362305,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2550:\r\n  ;;   var2550!val!0 var2550!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2550!val!0 () var2550)\r\n  (declare-fun var2550!val!1 () var2550)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2550)) (or (= x var2550!val!0) (= x var2550!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2550 () var2550\r\n    var2550!val!1)\r\n  (define-fun var3122 () Int\r\n    (pos/1477480286 var2117))\r\n  (define-fun var518 () Bool\r\n    (fillBuffer/548664799 var2117 (str.len var856)))\r\n  (define-fun var2117 () var2550\r\n    var2550!val!0)\r\n  (define-fun var856 () String\r\n    \"\")\r\n  (define-fun var916 () Int\r\n    (+ (pos/1477480286 var2117) (str.len var856)))\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1629 () Int\r\n    (str.len var856))\r\n  (define-fun var3532 () Int\r\n    (limit/1477480286 var2117))\r\n  (define-fun limit/1477480286 ((x!0 var2550)) Int\r\n    (- 1))\r\n  (define-fun fillBuffer/548664799 ((x!0 var2550) (x!1 Int)) Bool\r\n    false)\r\n  (define-fun pos/1477480286 ((x!0 var2550)) Int\r\n    0)\r\n)\r\n(error \"line 34 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1695744,
            "run_time": 0.015819072723388672,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2550 is 2\r\n; rep: (as @var2550_0 var2550)\r\n; rep: (as @var2550_1 var2550)\r\n; cardinality of var3452 is 1\r\n; rep: (as @var3452_0 var3452)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun pos/1477480286 ((_arg_1 var2550)) Int 1)\r\n(define-fun limit/1477480286 ((_arg_1 var2550)) Int 0)\r\n(define-fun fillBuffer/548664799 ((_arg_1 var2550) (_arg_2 Int)) Bool false)\r\n(define-fun null-var2550 () var2550 (as @var2550_0 var2550))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var2117 () var2550 (as @var2550_1 var2550))\r\n(define-fun var856 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37531648,
            "run_time": 0.0772554874420166,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2550:\n  ;;   var2550!val!0 var2550!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2550!val!0 () var2550)\n  (declare-fun var2550!val!1 () var2550)\n  ;; cardinality constraint:\n  (forall ((x var2550)) (or (= x var2550!val!0) (= x var2550!val!1)))\n  ;; -----------\n  (define-fun null-var2550 () var2550\n    var2550!val!1)\n  (define-fun var916 () Int\n    (+ (pos/1477480286 var2117) (str.len var856)))\n  (define-fun var2117 () var2550\n    var2550!val!0)\n  (define-fun var518 () Bool\n    (fillBuffer/548664799 var2117 (str.len var856)))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3122 () Int\n    (pos/1477480286 var2117))\n  (define-fun var856 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3532 () Int\n    (limit/1477480286 var2117))\n  (define-fun var1629 () Int\n    (str.len var856))\n  (define-fun limit/1477480286 ((x!0 var2550)) Int\n    0)\n  (define-fun fillBuffer/548664799 ((x!0 var2550) (x!1 Int)) Bool\n    false)\n  (define-fun pos/1477480286 ((x!0 var2550)) Int\n    (- 1))\n)\n(error \"line 34 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153169920,
            "run_time": 0.8355057239532471,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2550/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.stream.JsonReader__skipTo__-863004760\\1385.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n\r\n558ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @this: com.google.gson.stream.JsonReader",
            "r0 := @parameter0: java.lang.String",
            "i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "$i1 = r1.<com.google.gson.stream.JsonReader: int pos>",
            "$i3 = $i1 + i0",
            "$i2 = r1.<com.google.gson.stream.JsonReader: int limit>",
            "if $i3 <= $i2 goto $r2 = r1.<com.google.gson.stream.JsonReader: char[] buffer>",
            "$z0 = specialinvoke r1.<com.google.gson.stream.JsonReader: boolean fillBuffer(int)>(i0)",
            "if $z0 == 0 goto return 0",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonWriter__setIndent__-501574872\\57.smt2",
        "z3": {
            "memory": 30580736,
            "run_time": 0.05839657783508301,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3001:\r\n  ;;   var3001!val!2 var3001!val!3 var3001!val!0 var3001!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3001!val!2 () var3001)\r\n  (declare-fun var3001!val!3 () var3001)\r\n  (declare-fun var3001!val!0 () var3001)\r\n  (declare-fun var3001!val!1 () var3001)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3001))\r\n          (or (= x var3001!val!2)\r\n              (= x var3001!val!3)\r\n              (= x var3001!val!0)\r\n              (= x var3001!val!1)))\r\n  ;; -----------\r\n  (define-fun var3014!1 () var3001\r\n    var3001!val!2)\r\n  (define-fun null-var3001 () var3001\r\n    var3001!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3014!2 () var3001\r\n    var3001!val!3)\r\n  (define-fun var1485 () Int\r\n    (str.len var3567))\r\n  (define-fun var3014 () var3001\r\n    var3001!val!0)\r\n  (define-fun var3567 () String\r\n    \"A\")\r\n  (define-fun separator/1632885518 ((x!0 var3001)) String\r\n    (ite (= x!0 var3001!val!3) \": \"\r\n      \": \"))\r\n  (define-fun indent/1632885518 ((x!0 var3001)) String\r\n    \"A\")\r\n)\r\n(error \"line 32 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.014802932739257812,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3001 is 4\r\n; rep: (as @var3001_0 var3001)\r\n; rep: (as @var3001_1 var3001)\r\n; rep: (as @var3001_2 var3001)\r\n; rep: (as @var3001_3 var3001)\r\n; cardinality of var3497 is 1\r\n; rep: (as @var3497_0 var3497)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun indent/1632885518 ((_arg_1 var3001)) String \": \")\r\n(define-fun separator/1632885518 ((_arg_1 var3001)) String \": \")\r\n(define-fun null-var3001 () var3001 (as @var3001_0 var3001))\r\n(define-fun null-String () String \"\")\r\n(define-fun var3014 () var3001 (as @var3001_1 var3001))\r\n(define-fun var3567 () String \": \")\r\n(define-fun var3014!1 () var3001 (as @var3001_2 var3001))\r\n(define-fun var3014!2 () var3001 (as @var3001_3 var3001))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 31576064,
            "run_time": 0.07668375968933105,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 31 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 172765184,
            "run_time": 0.9155375957489014,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3014!2 () var3001 var3001!14)\r\n  (define-fun var3014!1 () var3001 var3001!12)\r\n  (define-fun var3567 () String \"\\u{0}\")\r\n  (define-fun var3014 () var3001 var3001!10)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3001 () var3001 var3001!8)\r\n  (define-fun separator/1632885518 ((x!0 var3001)) String (ite (= x!0 var3001!14) \": \" \"\"))\r\n  (define-fun indent/1632885518 ((x!0 var3001)) String (ite (= x!0 var3001!12) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r1 := @this: com.google.gson.stream.JsonWriter",
            "r0 := @parameter0: java.lang.String",
            "$i0 = virtualinvoke r0.<java.lang.String: int length()>()",
            "if $i0 != 0 goto r1.<com.google.gson.stream.JsonWriter: java.lang.String indent> = r0",
            "r1.<com.google.gson.stream.JsonWriter: java.lang.String indent> = r0",
            "r1.<com.google.gson.stream.JsonWriter: java.lang.String separator> = \": \"",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.ToNumberPolicy$3__readNumber__1098688235\\1283.smt2",
        "z3": {
            "memory": 31899648,
            "run_time": 0.04446244239807129,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2833:\r\n  ;;   var2833!val!0 var2833!val!1 var2833!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2833!val!0 () var2833)\r\n  (declare-fun var2833!val!1 () var2833)\r\n  (declare-fun var2833!val!2 () var2833)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2833))\r\n          (or (= x var2833!val!0) (= x var2833!val!1) (= x var2833!val!2)))\r\n  ;; -----------\r\n  ;; universe for var2490:\r\n  ;;   var2490!val!0 var2490!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2490!val!0 () var2490)\r\n  (declare-fun var2490!val!1 () var2490)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2490)) (or (= x var2490!val!0) (= x var2490!val!1)))\r\n  ;; -----------\r\n  ;; universe for var214:\r\n  ;;   var214!val!0 var214!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var214!val!0 () var214)\r\n  (declare-fun var214!val!1 () var214)\r\n  ;; cardinality constraint:\r\n  (forall ((x var214)) (or (= x var214!val!0) (= x var214!val!1)))\r\n  ;; -----------\r\n  (define-fun var2377 () var2833\r\n    var2833!val!0)\r\n  (define-fun null-var214 () var214\r\n    var214!val!1)\r\n  (define-fun var305 () String\r\n    (nextString/1391460550 var2809))\r\n  (define-fun var1563 () String\r\n    (getPreviousPath/455305022 var2809))\r\n  (define-fun var3368 () String\r\n    (str.++ var1217!1\r\n        \"Cannot parse \"\r\n        (nextString/1391460550 var2809)\r\n        \"; at path \"\r\n        (getPreviousPath/455305022 var2809)))\r\n  (define-fun var1217 () String\r\n    String-init)\r\n  (define-fun null-var2490 () var2490\r\n    var2490!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3546 () String\r\n    (str.++ var1217!1\r\n        \"Cannot parse \"\r\n        (nextString/1391460550 var2809)\r\n        \"; at path \"\r\n        (getPreviousPath/455305022 var2809)))\r\n  (define-fun var910 () var214\r\n    var214!val!0)\r\n  (define-fun var3915 () String\r\n    (str.++ var1217!1 \"Cannot parse \"))\r\n  (define-fun var664 () String\r\n    (str.++ var1217!1 \"Cannot parse \" (nextString/1391460550 var2809)))\r\n  (define-fun var634 () String\r\n    (str.++ var1217!1 \"Cannot parse \" (nextString/1391460550 var2809) \"; at path \"))\r\n  (define-fun var280 () var2833\r\n    var2833!val!2)\r\n  (define-fun var3231 () var547\r\n    var547-init)\r\n  (define-fun var2809 () var2490\r\n    var2490!val!0)\r\n  (define-fun null-var2833 () var2833\r\n    var2833!val!1)\r\n  (define-fun var3915!1 () String\r\n    \"Cannot parse \")\r\n  (define-fun var1217!2 () String\r\n    \"Cannot parse \")\r\n  (define-fun var1217!1 () String\r\n    \"\")\r\n  (define-fun var634!1 () String\r\n    \"Cannot parse ; at path \")\r\n  (define-fun var664!1 () String\r\n    \"Cannot parse ; at path \")\r\n  (define-fun var3368!1 () String\r\n    \"\")\r\n  (define-fun var547-init () var547\r\n    var547!val!0)\r\n  (define-fun var280!1 () var2833\r\n    var2833!val!0)\r\n  (define-fun var3231!1 () var547\r\n    var547!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun nextString/1391460550 ((x!0 var2490)) String\r\n    \"\")\r\n  (define-fun getPreviousPath/455305022 ((x!0 var2490)) String\r\n    \"\")\r\n  (define-fun <init>/-1580649403 ((x!0 var547) (x!1 String) (x!2 var2361)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var2833-to-var2361 ((x!0 var2833)) var2361\r\n    var2361!val!0)\r\n)\r\n(error \"line 71 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1695744,
            "run_time": 0.015517711639404297,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var214 is 2\r\n; rep: (as @var214_0 var214)\r\n; rep: (as @var214_1 var214)\r\n; cardinality of var2490 is 2\r\n; rep: (as @var2490_0 var2490)\r\n; rep: (as @var2490_1 var2490)\r\n; cardinality of var2833 is 3\r\n; rep: (as @var2833_0 var2833)\r\n; rep: (as @var2833_1 var2833)\r\n; rep: (as @var2833_2 var2833)\r\n; cardinality of var547 is 1\r\n; rep: (as @var547_0 var547)\r\n; cardinality of var2361 is 1\r\n; rep: (as @var2361_0 var2361)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun nextString/1391460550 ((BOUND_VARIABLE_606 var2490)) String \"\")\r\n(define-fun var547-init () var547 (as @var547_0 var547))\r\n(define-fun String-init () String \"\")\r\n(define-fun getPreviousPath/455305022 ((BOUND_VARIABLE_609 var2490)) String \"\")\r\n(define-fun <init>/-1580649403 ((BOUND_VARIABLE_612 var547) (BOUND_VARIABLE_613 String) (BOUND_VARIABLE_614 var2361)) void (as @void_0 void))\r\n(define-fun cast-from-var2833-to-var2361 ((BOUND_VARIABLE_617 var2833)) var2361 (as @var2361_0 var2361))\r\n(define-fun null-var214 () var214 (as @var214_0 var214))\r\n(define-fun null-var2490 () var2490 (as @var2490_0 var2490))\r\n(define-fun null-var2833 () var2833 (as @var2833_0 var2833))\r\n(define-fun var910 () var214 (as @var214_1 var214))\r\n(define-fun var2809 () var2490 (as @var2490_1 var2490))\r\n(define-fun var2377 () var2833 (as @var2833_1 var2833))\r\n(define-fun var280 () var2833 (as @var2833_2 var2833))\r\n(define-fun var1217!1 () String \"\")\r\n(define-fun var1217!2 () String \"Cannot parse \")\r\n(define-fun var3915!1 () String \"Cannot parse \")\r\n(define-fun var664!1 () String \"Cannot parse ; at path \")\r\n(define-fun var634!1 () String \"Cannot parse ; at path \")\r\n(define-fun var3231!1 () var547 (as @var547_0 var547))\r\n(define-fun var3368!1 () String \"\")\r\n(define-fun var280!1 () var2833 (as @var2833_0 var2833))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32153600,
            "run_time": 0.0772099494934082,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2833:\n  ;;   var2833!val!0 var2833!val!1 var2833!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2833!val!0 () var2833)\n  (declare-fun var2833!val!1 () var2833)\n  (declare-fun var2833!val!2 () var2833)\n  ;; cardinality constraint:\n  (forall ((x var2833))\n          (or (= x var2833!val!0) (= x var2833!val!1) (= x var2833!val!2)))\n  ;; -----------\n  ;; universe for var2490:\n  ;;   var2490!val!0 var2490!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2490!val!0 () var2490)\n  (declare-fun var2490!val!1 () var2490)\n  ;; cardinality constraint:\n  (forall ((x var2490)) (or (= x var2490!val!0) (= x var2490!val!1)))\n  ;; -----------\n  ;; universe for var214:\n  ;;   var214!val!0 var214!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var214!val!0 () var214)\n  (declare-fun var214!val!1 () var214)\n  ;; cardinality constraint:\n  (forall ((x var214)) (or (= x var214!val!0) (= x var214!val!1)))\n  ;; -----------\n  (define-fun var2377 () var2833\n    var2833!val!0)\n  (define-fun null-var214 () var214\n    var214!val!1)\n  (define-fun var1217 () String\n    String-init)\n  (define-fun var3368 () String\n    (str.++ var1217!1\n        \"Cannot parse \"\n        (nextString/1391460550 var2809)\n        \"; at path \"\n        (getPreviousPath/455305022 var2809)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3546 () String\n    (str.++ var1217!1\n        \"Cannot parse \"\n        (nextString/1391460550 var2809)\n        \"; at path \"\n        (getPreviousPath/455305022 var2809)))\n  (define-fun null-var2490 () var2490\n    var2490!val!1)\n  (define-fun var910 () var214\n    var214!val!0)\n  (define-fun var634 () String\n    (str.++ var1217!1 \"Cannot parse \" (nextString/1391460550 var2809) \"; at path \"))\n  (define-fun var3915 () String\n    (str.++ var1217!1 \"Cannot parse \"))\n  (define-fun var3231 () var547\n    var547-init)\n  (define-fun var664 () String\n    (str.++ var1217!1 \"Cannot parse \" (nextString/1391460550 var2809)))\n  (define-fun var280 () var2833\n    var2833!val!2)\n  (define-fun var1563 () String\n    (getPreviousPath/455305022 var2809))\n  (define-fun var2809 () var2490\n    var2490!val!0)\n  (define-fun var305 () String\n    (nextString/1391460550 var2809))\n  (define-fun null-var2833 () var2833\n    var2833!val!1)\n  (define-fun var3915!1 () String\n    \"Cannot parse \")\n  (define-fun var1217!2 () String\n    \"Cannot parse \")\n  (define-fun var1217!1 () String\n    \"\")\n  (define-fun var634!1 () String\n    \"Cannot parse ; at path \")\n  (define-fun var664!1 () String\n    \"Cannot parse ; at path \")\n  (define-fun var3368!1 () String\n    \"\")\n  (define-fun var547-init () var547\n    var547!val!0)\n  (define-fun var280!1 () var2833\n    var2833!val!0)\n  (define-fun var3231!1 () var547\n    var547!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun nextString/1391460550 ((x!0 var2490)) String\n    \"\")\n  (define-fun getPreviousPath/455305022 ((x!0 var2490)) String\n    \"\")\n  (define-fun <init>/-1580649403 ((x!0 var547) (x!1 String) (x!2 var2361)) void\n    void!val!0)\n  (define-fun cast-from-var2833-to-var2361 ((x!0 var2833)) var2361\n    var2361!val!0)\n)\n(error \"line 71 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 170565632,
            "run_time": 0.9937214851379395,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2833/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.ToNumberPolicy$3__readNumber__1098688235\\1283.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var664!1 =\r\n     concat(all_29_4, \"; at path \")\r\n   var634!1 =\r\n     concat(all_23_3, all_23_2)\r\n   var3915!1 =\r\n     concat(\"Cannot parse \", all_26_3)\r\n   all_23_3 =\r\n     concat(all_32_5, \"; at path \")\r\n   all_29_4 =\r\n     concat(\"Cannot parse \", all_26_3)\r\n   all_32_5 =\r\n     concat(\"Cannot parse \", all_26_3)\r\n\r\n737ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r21 := @this: com.google.gson.ToNumberPolicy$3",
            "r0 := @parameter0: com.google.gson.stream.JsonReader",
            "r1 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String nextString()>()",
            "$r12 := @caughtexception",
            "$r3 := @caughtexception",
            "$r4 = new com.google.gson.JsonParseException",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot parse \")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; at path \")",
            "$r8 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String getPreviousPath()>()",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r4.<com.google.gson.JsonParseException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r3)",
            "throw $r4"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonWriter__close__1827993407\\281.smt2",
        "z3": {
            "memory": 30683136,
            "run_time": 0.07465577125549316,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2835:\r\n  ;;   var2835!val!0 var2835!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2835!val!0 () var2835)\r\n  (declare-fun var2835!val!1 () var2835)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2835)) (or (= x var2835!val!0) (= x var2835!val!1)))\r\n  ;; -----------\r\n  (define-fun var3324 () Int\r\n    2)\r\n  (define-fun var2758 () String\r\n    (deferredName/1632885518 var1977))\r\n  (define-fun var3414 () String\r\n    (str.++ var2081!1 \"Dangling name: \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var512 () Int\r\n    (peek/1191568633 var1977))\r\n  (define-fun null-var2835 () var2835\r\n    var2835!val!1)\r\n  (define-fun var3646 () String\r\n    (str.++ var2081!1 \"Dangling name: \" (deferredName/1632885518 var1977)))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1672 () String\r\n    (str.++ var2081!1 \"Dangling name: \" (deferredName/1632885518 var1977)))\r\n  (define-fun var915 () var1348\r\n    var1348-init)\r\n  (define-fun var1120 () Int\r\n    2)\r\n  (define-fun var3623 () String\r\n    (deferredName/1632885518 var1977))\r\n  (define-fun var2081 () String\r\n    String-init)\r\n  (define-fun var1977 () var2835\r\n    var2835!val!0)\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun var2081!2 () String\r\n    \"Dangling name: \")\r\n  (define-fun var2081!1 () String\r\n    \"\")\r\n  (define-fun var1215 () Int\r\n    0)\r\n  (define-fun var3414!1 () String\r\n    \"Dangling name: A\")\r\n  (define-fun var3646!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1348-init () var1348\r\n    var1348!val!0)\r\n  (define-fun var915!1 () var1348\r\n    var1348!val!0)\r\n  (define-fun deferredName/1632885518 ((x!0 var2835)) String\r\n    \"A\")\r\n  (define-fun peek/1191568633 ((x!0 var2835)) Int\r\n    0)\r\n  (define-fun <init>/-1092629202 ((x!0 var1348) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 61 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1691648,
            "run_time": 0.015545368194580078,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2835 is 2\r\n; rep: (as @var2835_0 var2835)\r\n; rep: (as @var2835_1 var2835)\r\n; cardinality of var1591 is 1\r\n; rep: (as @var1591_0 var1591)\r\n; cardinality of var1348 is 1\r\n; rep: (as @var1348_0 var1348)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/1191568633 ((_arg_1 var2835)) Int 1)\r\n(define-fun deferredName/1632885518 ((_arg_1 var2835)) String \"\")\r\n(define-fun var1348-init () var1348 (as @var1348_0 var1348))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_701 var1348) (BOUND_VARIABLE_702 String)) void (as @void_0 void))\r\n(define-fun null-var2835 () var2835 (as @var2835_0 var2835))\r\n(define-fun null-Int () Int 0)\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1977 () var2835 (as @var2835_1 var2835))\r\n(define-fun var3324 () Int 1)\r\n(define-fun var1215 () Int 1)\r\n(define-fun var1120 () Int 1)\r\n(define-fun var2081!1 () String \"\")\r\n(define-fun var2081!2 () String \"Dangling name: \")\r\n(define-fun var3414!1 () String \"Dangling name: \")\r\n(define-fun var915!1 () var1348 (as @var1348_0 var1348))\r\n(define-fun var3646!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35663872,
            "run_time": 0.07763385772705078,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 60 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 61 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 179478528,
            "run_time": 0.9001965522766113,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2835/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.stream.JsonWriter__close__1827993407\\281.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3414!1 =\r\n     concat(\"Dangling name: \", all_16_0)\r\n\r\n632ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonWriter",
            "i5 := @parameter0: int",
            "i1 := @parameter1: int",
            "c4 := @parameter2: char",
            "i0 = specialinvoke r0.<com.google.gson.stream.JsonWriter: int peek()>()",
            "if i0 == i1 goto $r1 = r0.<com.google.gson.stream.JsonWriter: java.lang.String deferredName>",
            "$r1 = r0.<com.google.gson.stream.JsonWriter: java.lang.String deferredName>",
            "if $r1 == null goto $i2 = r0.<com.google.gson.stream.JsonWriter: int stackSize>",
            "$r12 = new java.lang.IllegalStateException",
            "$r11 = new java.lang.StringBuilder",
            "specialinvoke $r11.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Dangling name: \")",
            "$r5 = r0.<com.google.gson.stream.JsonWriter: java.lang.String deferredName>",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r8)",
            "throw $r12"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.stream.JsonWriter__string__-1237120963\\698.smt2",
        "z3": {
            "memory": 31531008,
            "run_time": 0.04522871971130371,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1870:\r\n  ;;   var1870!val!1 var1870!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1870!val!1 () var1870)\r\n  (declare-fun var1870!val!0 () var1870)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1870)) (or (= x var1870!val!1) (= x var1870!val!0)))\r\n  ;; -----------\r\n  (define-fun var1254 () var769\r\n    (out/1632885518 var1393))\r\n  (define-fun var761 () Bool\r\n    (htmlSafe/1632885518 var1393))\r\n  (define-fun var1393 () var1870\r\n    var1870!val!0)\r\n  (define-fun var129 () Int\r\n    0)\r\n  (define-fun var3648 () (Array Int String)\r\n    var1870-HTML_SAFE_REPLACEMENT_CHARS)\r\n  (define-fun var2138 () (Array Int String)\r\n    var1870-HTML_SAFE_REPLACEMENT_CHARS)\r\n  (define-fun var753 () Int\r\n    0)\r\n  (define-fun var2416 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3558 () var769\r\n    (out/1632885518 var1393))\r\n  (define-fun var2913 () Int\r\n    (str.len var2416))\r\n  (define-fun null-var1870 () var1870\r\n    var1870!val!1)\r\n  (define-fun var1870-HTML_SAFE_REPLACEMENT_CHARS () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun var2378 () Int\r\n    0)\r\n  (define-fun var1254!1 () var769\r\n    var769!val!0)\r\n  (define-fun var3558!1 () var769\r\n    var769!val!0)\r\n  (define-fun var2378!1 () Int\r\n    0)\r\n  (define-fun htmlSafe/1632885518 ((x!0 var1870)) Bool\r\n    true)\r\n  (define-fun write/33947008 ((x!0 var769) (x!1 Int)) void\r\n    void!val!0)\r\n  (define-fun out/1632885518 ((x!0 var1870)) var769\r\n    var769!val!0)\r\n)\r\n(error \"line 52 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1736704,
            "run_time": 0.04656672477722168,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1870 is 2\r\n; rep: (as @var1870_0 var1870)\r\n; rep: (as @var1870_1 var1870)\r\n; cardinality of var2918 is 1\r\n; rep: (as @var2918_0 var2918)\r\n; cardinality of var769 is 1\r\n; rep: (as @var769_0 var769)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun htmlSafe/1632885518 ((_arg_1 var1870)) Bool true)\r\n(define-fun out/1632885518 ((BOUND_VARIABLE_600 var1870)) var769 (as @var769_0 var769))\r\n(define-fun write/33947008 ((BOUND_VARIABLE_603 var769) (BOUND_VARIABLE_604 Int)) void (as @void_0 void))\r\n(define-fun null-var1870 () var1870 (as @var1870_0 var1870))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1870-HTML_SAFE_REPLACEMENT_CHARS () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun var1393 () var1870 (as @var1870_1 var1870))\r\n(define-fun var2416 () String \"\")\r\n(define-fun var1254!1 () var769 (as @var769_0 var769))\r\n(define-fun var2378 () Int 0)\r\n(define-fun var3558!1 () var769 (as @var769_0 var769))\r\n(define-fun var2378!1 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37388288,
            "run_time": 0.07679438591003418,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1870:\n  ;;   var1870!val!1 var1870!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1870!val!1 () var1870)\n  (declare-fun var1870!val!0 () var1870)\n  ;; cardinality constraint:\n  (forall ((x var1870)) (or (= x var1870!val!1) (= x var1870!val!0)))\n  ;; -----------\n  (define-fun var3558 () var769\n    (out/1632885518 var1393))\n  (define-fun var2913 () Int\n    (str.len var2416))\n  (define-fun var1393 () var1870\n    var1870!val!0)\n  (define-fun var2416 () String\n    \"\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2138 () (Array Int String)\n    var1870-HTML_SAFE_REPLACEMENT_CHARS)\n  (define-fun var3648 () (Array Int String)\n    var1870-HTML_SAFE_REPLACEMENT_CHARS)\n  (define-fun var761 () Bool\n    (htmlSafe/1632885518 var1393))\n  (define-fun var1254 () var769\n    (out/1632885518 var1393))\n  (define-fun var129 () Int\n    0)\n  (define-fun null-var1870 () var1870\n    var1870!val!1)\n  (define-fun var753 () Int\n    0)\n  (define-fun var1870-HTML_SAFE_REPLACEMENT_CHARS () (Array Int String)\n    ((as const (Array Int String)) \"\"))\n  (define-fun var2378 () Int\n    0)\n  (define-fun var1254!1 () var769\n    var769!val!0)\n  (define-fun var3558!1 () var769\n    var769!val!0)\n  (define-fun var2378!1 () Int\n    0)\n  (define-fun htmlSafe/1632885518 ((x!0 var1870)) Bool\n    true)\n  (define-fun write/33947008 ((x!0 var769) (x!1 Int)) void\n    void!val!0)\n  (define-fun out/1632885518 ((x!0 var1870)) var769\n    var769!val!0)\n)\n(error \"line 52 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 178823168,
            "run_time": 0.8513338565826416,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2416 () String \"\")\r\n  (define-fun var1393 () var1870 var1870!4)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var1870 () var1870 var1870!2)\r\n  (define-fun htmlSafe/1632885518 ((x!0 var1870)) Bool (ite (= x!0 var1870!4) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.stream.JsonWriter",
            "r3 := @parameter0: java.lang.String",
            "$z0 = r0.<com.google.gson.stream.JsonWriter: boolean htmlSafe>",
            "if $z0 == 0 goto $r8 = <com.google.gson.stream.JsonWriter: java.lang.String[] REPLACEMENT_CHARS>",
            "$r8 = <com.google.gson.stream.JsonWriter: java.lang.String[] HTML_SAFE_REPLACEMENT_CHARS>",
            "goto [?= r1 = $r8]",
            "r1 = $r8",
            "$r2 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>",
            "virtualinvoke $r2.<java.io.Writer: void write(int)>(34)",
            "i4 = 0",
            "$i3 = virtualinvoke r3.<java.lang.String: int length()>()",
            "i5 = 0",
            "if i5 >= $i3 goto (branch)",
            "if i4 >= $i3 goto $r4 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>",
            "$r4 = r0.<com.google.gson.stream.JsonWriter: java.io.Writer out>",
            "virtualinvoke $r4.<java.io.Writer: void write(int)>(34)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.ToNumberPolicy$4__readNumber__-1520266436\\1186.smt2",
        "z3": {
            "memory": 31551488,
            "run_time": 0.05694746971130371,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var822:\r\n  ;;   var822!val!1 var822!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var822!val!1 () var822)\r\n  (declare-fun var822!val!0 () var822)\r\n  ;; cardinality constraint:\r\n  (forall ((x var822)) (or (= x var822!val!1) (= x var822!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3879:\r\n  ;;   var3879!val!0 var3879!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3879!val!0 () var3879)\r\n  (declare-fun var3879!val!1 () var3879)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3879)) (or (= x var3879!val!0) (= x var3879!val!1)))\r\n  ;; -----------\r\n  ;; universe for var256:\r\n  ;;   var256!val!1 var256!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var256!val!1 () var256)\r\n  (declare-fun var256!val!0 () var256)\r\n  ;; cardinality constraint:\r\n  (forall ((x var256)) (or (= x var256!val!1) (= x var256!val!0)))\r\n  ;; -----------\r\n  (define-fun var3527 () String\r\n    (getPreviousPath/455305022 var752))\r\n  (define-fun var1726 () var3077\r\n    var3077-init)\r\n  (define-fun var2512 () var564\r\n    var564-init)\r\n  (define-fun var752 () var256\r\n    var256!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var822 () var822\r\n    var822!val!1)\r\n  (define-fun var3456 () String\r\n    (str.++ var3169!1 \"Cannot parse \" (nextString/1391460550 var752) \"; at path \"))\r\n  (define-fun var3370 () var3879\r\n    var3879!val!0)\r\n  (define-fun var2982 () String\r\n    (str.++ var3169!1\r\n        \"Cannot parse \"\r\n        (nextString/1391460550 var752)\r\n        \"; at path \"\r\n        (getPreviousPath/455305022 var752)))\r\n  (define-fun var3769 () var822\r\n    var822!val!0)\r\n  (define-fun var3169 () String\r\n    String-init)\r\n  (define-fun null-var3879 () var3879\r\n    var3879!val!1)\r\n  (define-fun var291 () String\r\n    (nextString/1391460550 var752))\r\n  (define-fun var3719 () String\r\n    (str.++ var3169!1 \"Cannot parse \" (nextString/1391460550 var752)))\r\n  (define-fun var2114 () String\r\n    (str.++ var3169!1 \"Cannot parse \"))\r\n  (define-fun var1687 () String\r\n    (str.++ var3169!1\r\n        \"Cannot parse \"\r\n        (nextString/1391460550 var752)\r\n        \"; at path \"\r\n        (getPreviousPath/455305022 var752)))\r\n  (define-fun null-var256 () var256\r\n    var256!val!1)\r\n  (define-fun var2114!1 () String\r\n    \"Cannot parse \")\r\n  (define-fun var3169!1 () String\r\n    \"\")\r\n  (define-fun var3456!1 () String\r\n    \"Cannot parse ; at path \")\r\n  (define-fun var3719!1 () String\r\n    \"Cannot parse ; at path \")\r\n  (define-fun var3169!2 () String\r\n    \"Cannot parse \")\r\n  (define-fun var564-init () var564\r\n    var564!val!0)\r\n  (define-fun var2512!1 () var564\r\n    var564!val!0)\r\n  (define-fun var3077-init () var3077\r\n    var3077!val!0)\r\n  (define-fun var2982!1 () String\r\n    \"\")\r\n  (define-fun var3370!1 () var3879\r\n    var3879!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun nextString/1391460550 ((x!0 var256)) String\r\n    \"\")\r\n  (define-fun getPreviousPath/455305022 ((x!0 var256)) String\r\n    \"\")\r\n  (define-fun cast-from-var3879-to-var2399 ((x!0 var3879)) var2399\r\n    var2399!val!0)\r\n  (define-fun <init>/-1580649403 ((x!0 var564) (x!1 String) (x!2 var2399)) void\r\n    void!val!0)\r\n)\r\n(error \"line 71 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.014999628067016602,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var822 is 2\r\n; rep: (as @var822_0 var822)\r\n; rep: (as @var822_1 var822)\r\n; cardinality of var256 is 2\r\n; rep: (as @var256_0 var256)\r\n; rep: (as @var256_1 var256)\r\n; cardinality of var3077 is 1\r\n; rep: (as @var3077_0 var3077)\r\n; cardinality of var3879 is 2\r\n; rep: (as @var3879_0 var3879)\r\n; rep: (as @var3879_1 var3879)\r\n; cardinality of var564 is 1\r\n; rep: (as @var564_0 var564)\r\n; cardinality of var2399 is 1\r\n; rep: (as @var2399_0 var2399)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun nextString/1391460550 ((BOUND_VARIABLE_606 var256)) String \"\")\r\n(define-fun var3077-init () var3077 (as @var3077_0 var3077))\r\n(define-fun var564-init () var564 (as @var564_0 var564))\r\n(define-fun String-init () String \"\")\r\n(define-fun getPreviousPath/455305022 ((BOUND_VARIABLE_609 var256)) String \"\")\r\n(define-fun <init>/-1580649403 ((BOUND_VARIABLE_612 var564) (BOUND_VARIABLE_613 String) (BOUND_VARIABLE_614 var2399)) void (as @void_0 void))\r\n(define-fun cast-from-var3879-to-var2399 ((BOUND_VARIABLE_617 var3879)) var2399 (as @var2399_0 var2399))\r\n(define-fun null-var822 () var822 (as @var822_0 var822))\r\n(define-fun null-var256 () var256 (as @var256_0 var256))\r\n(define-fun null-var3879 () var3879 (as @var3879_0 var3879))\r\n(define-fun var3769 () var822 (as @var822_1 var822))\r\n(define-fun var752 () var256 (as @var256_1 var256))\r\n(define-fun var3370 () var3879 (as @var3879_1 var3879))\r\n(define-fun var3169!1 () String \"\")\r\n(define-fun var3169!2 () String \"Cannot parse \")\r\n(define-fun var2114!1 () String \"Cannot parse \")\r\n(define-fun var3719!1 () String \"Cannot parse ; at path \")\r\n(define-fun var3456!1 () String \"Cannot parse ; at path \")\r\n(define-fun var2512!1 () var564 (as @var564_0 var564))\r\n(define-fun var2982!1 () String \"\")\r\n(define-fun var3370!1 () var3879 (as @var3879_0 var3879))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32952320,
            "run_time": 0.07782173156738281,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var822:\n  ;;   var822!val!1 var822!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var822!val!1 () var822)\n  (declare-fun var822!val!0 () var822)\n  ;; cardinality constraint:\n  (forall ((x var822)) (or (= x var822!val!1) (= x var822!val!0)))\n  ;; -----------\n  ;; universe for var3879:\n  ;;   var3879!val!0 var3879!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3879!val!0 () var3879)\n  (declare-fun var3879!val!1 () var3879)\n  ;; cardinality constraint:\n  (forall ((x var3879)) (or (= x var3879!val!0) (= x var3879!val!1)))\n  ;; -----------\n  ;; universe for var256:\n  ;;   var256!val!1 var256!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var256!val!1 () var256)\n  (declare-fun var256!val!0 () var256)\n  ;; cardinality constraint:\n  (forall ((x var256)) (or (= x var256!val!1) (= x var256!val!0)))\n  ;; -----------\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3456 () String\n    (str.++ var3169!1 \"Cannot parse \" (nextString/1391460550 var752) \"; at path \"))\n  (define-fun var752 () var256\n    var256!val!0)\n  (define-fun null-var822 () var822\n    var822!val!1)\n  (define-fun var2982 () String\n    (str.++ var3169!1\n        \"Cannot parse \"\n        (nextString/1391460550 var752)\n        \"; at path \"\n        (getPreviousPath/455305022 var752)))\n  (define-fun var3370 () var3879\n    var3879!val!0)\n  (define-fun var3169 () String\n    String-init)\n  (define-fun var291 () String\n    (nextString/1391460550 var752))\n  (define-fun var3769 () var822\n    var822!val!0)\n  (define-fun var3719 () String\n    (str.++ var3169!1 \"Cannot parse \" (nextString/1391460550 var752)))\n  (define-fun null-var3879 () var3879\n    var3879!val!1)\n  (define-fun var2114 () String\n    (str.++ var3169!1 \"Cannot parse \"))\n  (define-fun var1726 () var3077\n    var3077-init)\n  (define-fun var2512 () var564\n    var564-init)\n  (define-fun var1687 () String\n    (str.++ var3169!1\n        \"Cannot parse \"\n        (nextString/1391460550 var752)\n        \"; at path \"\n        (getPreviousPath/455305022 var752)))\n  (define-fun var3527 () String\n    (getPreviousPath/455305022 var752))\n  (define-fun null-var256 () var256\n    var256!val!1)\n  (define-fun var2114!1 () String\n    \"Cannot parse \")\n  (define-fun var3169!1 () String\n    \"\")\n  (define-fun var3456!1 () String\n    \"Cannot parse ; at path \")\n  (define-fun var3719!1 () String\n    \"Cannot parse ; at path \")\n  (define-fun var3169!2 () String\n    \"Cannot parse \")\n  (define-fun var564-init () var564\n    var564!val!0)\n  (define-fun var2512!1 () var564\n    var564!val!0)\n  (define-fun var3077-init () var3077\n    var3077!val!0)\n  (define-fun var2982!1 () String\n    \"\")\n  (define-fun var3370!1 () var3879\n    var3879!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun nextString/1391460550 ((x!0 var256)) String\n    \"\")\n  (define-fun getPreviousPath/455305022 ((x!0 var256)) String\n    \"\")\n  (define-fun cast-from-var3879-to-var2399 ((x!0 var3879)) var2399\n    var2399!val!0)\n  (define-fun <init>/-1580649403 ((x!0 var564) (x!1 String) (x!2 var2399)) void\n    void!val!0)\n)\n(error \"line 71 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167632896,
            "run_time": 0.8962135314941406,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var822/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.ToNumberPolicy$4__readNumber__-1520266436\\1186.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3719!1 =\r\n     concat(all_31_4, \"; at path \")\r\n   var3456!1 =\r\n     concat(all_25_3, all_25_2)\r\n   var2114!1 =\r\n     concat(\"Cannot parse \", all_28_3)\r\n   all_25_3 =\r\n     concat(all_34_5, \"; at path \")\r\n   all_31_4 =\r\n     concat(\"Cannot parse \", all_28_3)\r\n   all_34_5 =\r\n     concat(\"Cannot parse \", all_28_3)\r\n\r\n652ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r12 := @this: com.google.gson.ToNumberPolicy$4",
            "r0 := @parameter0: com.google.gson.stream.JsonReader",
            "r1 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String nextString()>()",
            "$r2 = new java.math.BigDecimal",
            "$r3 := @caughtexception",
            "$r4 = new com.google.gson.JsonParseException",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Cannot parse \")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; at path \")",
            "$r8 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String getPreviousPath()>()",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r4.<com.google.gson.JsonParseException: void <init>(java.lang.String,java.lang.Throwable)>($r11, $r3)",
            "throw $r4"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.DefaultDateTypeAdapter__toString__-1342888359\\887.smt2",
        "z3": {
            "memory": 32014336,
            "run_time": 60.002602100372314,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13053952,
            "run_time": 0.029135942459106445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1707 is 2\r\n; rep: (as @var1707_0 var1707)\r\n; rep: (as @var1707_1 var1707)\r\n; cardinality of var1068 is 1\r\n; rep: (as @var1068_0 var1068)\r\n; cardinality of var641 is 2\r\n; rep: (as @var641_0 var641)\r\n; rep: (as @var641_1 var641)\r\n; cardinality of var3698 is 1\r\n; rep: (as @var3698_0 var3698)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun dateFormats/-834359679 ((_arg_1 var1707)) var1068 (as @var1068_0 var1068))\r\n(define-fun var1068_get/-1216255739 ((_arg_1 var1068) (_arg_2 Int)) var641 (as @var641_0 var641))\r\n(define-fun cast-from-var641-to-var3698 ((_arg_1 var641)) var3698 (as @var3698_0 var3698))\r\n(define-fun String-init () String \"\")\r\n(define-fun getClass/1258963082 ((_arg_1 var641)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var3698-to-var641 ((_arg_1 var3698)) var641 (as @var641_1 var641))\r\n(define-fun getSimpleName/-390194377 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_1133 String) (BOUND_VARIABLE_1134 Int)) String \"\")\r\n(define-fun null-var1707 () var1707 (as @var1707_0 var1707))\r\n(define-fun var2326 () var1707 (as @var1707_1 var1707))\r\n(define-fun var1533!1 () String \"\")\r\n(define-fun var1533!2 () String \"DefaultDateTypeAdapter(\")\r\n(define-fun var1025!1 () String \"DefaultDateTypeAdapter(\")\r\n(define-fun var3459!1 () String \"DefaultDateTypeAdapter(\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35188736,
            "run_time": 0.12270617485046387,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 56 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 57 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167280640,
            "run_time": 0.9455807209014893,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1707/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.DefaultDateTypeAdapter__toString__-1342888359\\887.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1025!1 =\r\n     concat(\"DefaultDateTypeAdapter(\", all_25_2)\r\n   var3459!1 =\r\n     concat(all_28_2, rhs)\r\n   all_28_2 =\r\n     concat(\"DefaultDateTypeAdapter(\", all_25_2)\r\n\r\n700ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.DefaultDateTypeAdapter",
            "$r1 = r0.<com.google.gson.internal.bind.DefaultDateTypeAdapter: java.util.List dateFormats>",
            "$r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0)",
            "r3 = (java.text.DateFormat) $r2",
            "$z0 = r3 instanceof java.text.SimpleDateFormat",
            "if $z0 == 0 goto $r4 = new java.lang.StringBuilder",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"DefaultDateTypeAdapter(\")",
            "$r5 = virtualinvoke r3.<java.lang.Object: java.lang.Class getClass()>()",
            "$r6 = virtualinvoke $r5.<java.lang.Class: java.lang.String getSimpleName()>()",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r10"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.JsonTreeReader__nextLong__-844834928\\1076.smt2",
        "z3": {
            "memory": 32120832,
            "run_time": 60.00393867492676,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12759040,
            "run_time": 0.04561877250671387,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2731 is 2\r\n; rep: (as @var2731_0 var2731)\r\n; rep: (as @var2731_1 var2731)\r\n; cardinality of var2942 is 3\r\n; rep: (as @var2942_0 var2942)\r\n; rep: (as @var2942_1 var2942)\r\n; rep: (as @var2942_2 var2942)\r\n; cardinality of var1656 is 1\r\n; rep: (as @var1656_0 var1656)\r\n; cardinality of var1797 is 1\r\n; rep: (as @var1797_0 var1797)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-1841308090 ((_arg_1 var2731)) var2942 (as @var2942_2 var2942))\r\n(define-fun var1656-init () var1656 (as @var1656_0 var1656))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((_arg_1 String) (_arg_2 var1797)) String \"\")\r\n(define-fun cast-from-var2942-to-var1797 ((_arg_1 var2942)) var1797 (as @var1797_0 var1797))\r\n(define-fun locationString/-286819006 ((BOUND_VARIABLE_1516 var2731)) String \"\")\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_1519 var1656) (BOUND_VARIABLE_1520 String)) void (as @void_0 void))\r\n(define-fun null-var2731 () var2731 (as @var2731_0 var2731))\r\n(define-fun var2942-NUMBER () var2942 (as @var2942_0 var2942))\r\n(define-fun var2942-STRING () var2942 (as @var2942_1 var2942))\r\n(define-fun var3095 () var2731 (as @var2731_1 var2731))\r\n(define-fun var2587!1 () String \"\")\r\n(define-fun var2587!2 () String \"Expected \")\r\n(define-fun var2137!1 () String \"Expected \")\r\n(define-fun var472!1 () String \" but was \")\r\n(define-fun var2911!1 () String \" but was \")\r\n(define-fun var2052!1 () String \"\")\r\n(define-fun var3368!1 () var1656 (as @var1656_0 var1656))\r\n(define-fun var2361!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35061760,
            "run_time": 0.060076236724853516,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 72 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 73 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176099328,
            "run_time": 0.9924707412719727,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2942/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.JsonTreeReader__nextLong__-844834928\\1076.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_37_7 =\r\n     concat(all_31_4, \" but was \")\r\n   var472!1 =\r\n     concat(all_31_4, \" but was \")\r\n   var2052!1 =\r\n     concat(all_28_3, all_28_2)\r\n   var2911!1 =\r\n     concat(all_34_4, rhs)\r\n   all_34_4 =\r\n     concat(all_31_4, \" but was \")\r\n\r\n751ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 19,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.JsonTreeReader",
            "r1 = virtualinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>()",
            "$r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER>",
            "if r1 == $r2 goto $r3 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>()",
            "$r6 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING>",
            "if r1 == $r6 goto $r3 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>()",
            "$r7 = new java.lang.IllegalStateException",
            "$r8 = new java.lang.StringBuilder",
            "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected \")",
            "$r9 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER>",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" but was \")",
            "$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)",
            "$r13 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.String locationString()>()",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16)",
            "throw $r7"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.JsonTreeReader__nextInt__-149847432\\1136.smt2",
        "z3": {
            "memory": 32346112,
            "run_time": 60.01492762565613,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12754944,
            "run_time": 0.04561877250671387,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3238 is 2\r\n; rep: (as @var3238_0 var3238)\r\n; rep: (as @var3238_1 var3238)\r\n; cardinality of var1882 is 3\r\n; rep: (as @var1882_0 var1882)\r\n; rep: (as @var1882_1 var1882)\r\n; rep: (as @var1882_2 var1882)\r\n; cardinality of var1818 is 1\r\n; rep: (as @var1818_0 var1818)\r\n; cardinality of var1597 is 1\r\n; rep: (as @var1597_0 var1597)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-1841308090 ((_arg_1 var3238)) var1882 (as @var1882_2 var1882))\r\n(define-fun var1818-init () var1818 (as @var1818_0 var1818))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((_arg_1 String) (_arg_2 var1597)) String \"\")\r\n(define-fun cast-from-var1882-to-var1597 ((_arg_1 var1882)) var1597 (as @var1597_0 var1597))\r\n(define-fun locationString/-286819006 ((BOUND_VARIABLE_1516 var3238)) String \"\")\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_1519 var1818) (BOUND_VARIABLE_1520 String)) void (as @void_0 void))\r\n(define-fun null-var3238 () var3238 (as @var3238_0 var3238))\r\n(define-fun var1882-NUMBER () var1882 (as @var1882_0 var1882))\r\n(define-fun var1882-STRING () var1882 (as @var1882_1 var1882))\r\n(define-fun var306 () var3238 (as @var3238_1 var3238))\r\n(define-fun var1674!1 () String \"\")\r\n(define-fun var1674!2 () String \"Expected \")\r\n(define-fun var1118!1 () String \"Expected \")\r\n(define-fun var1145!1 () String \" but was \")\r\n(define-fun var3003!1 () String \" but was \")\r\n(define-fun var663!1 () String \"\")\r\n(define-fun var2249!1 () var1818 (as @var1818_0 var1818))\r\n(define-fun var2327!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35049472,
            "run_time": 0.060210466384887695,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 72 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 73 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169291776,
            "run_time": 0.9924707412719727,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1882/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.JsonTreeReader__nextInt__-149847432\\1136.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_37_7 =\r\n     concat(all_31_4, \" but was \")\r\n   var1145!1 =\r\n     concat(all_31_4, \" but was \")\r\n   var663!1 =\r\n     concat(all_28_3, all_28_2)\r\n   var3003!1 =\r\n     concat(all_34_4, rhs)\r\n   all_34_4 =\r\n     concat(all_31_4, \" but was \")\r\n\r\n750ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 19,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.JsonTreeReader",
            "r1 = virtualinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>()",
            "$r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER>",
            "if r1 == $r2 goto $r3 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>()",
            "$r6 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING>",
            "if r1 == $r6 goto $r3 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>()",
            "$r7 = new java.lang.IllegalStateException",
            "$r8 = new java.lang.StringBuilder",
            "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected \")",
            "$r9 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER>",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" but was \")",
            "$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)",
            "$r13 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.String locationString()>()",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13)",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r7.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r16)",
            "throw $r7"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.JsonTreeReader__nextLong__-844834928\\1124.smt2",
        "z3": {
            "memory": 30408704,
            "run_time": 0.07403039932250977,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var816:\r\n  ;;   var816!val!1 var816!val!0 var816!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var816!val!1 () var816)\r\n  (declare-fun var816!val!0 () var816)\r\n  (declare-fun var816!val!2 () var816)\r\n  ;; cardinality constraint:\r\n  (forall ((x var816))\r\n          (or (= x var816!val!1) (= x var816!val!0) (= x var816!val!2)))\r\n  ;; -----------\r\n  (define-fun null-var816 () var816\r\n    var816!val!1)\r\n  (define-fun var182 () var1244\r\n    (peek/-1841308090 var2429))\r\n  (define-fun var3674 () var1244\r\n    var1244-NUMBER)\r\n  (define-fun var2429!1 () var816\r\n    var816!val!2)\r\n  (define-fun var2429 () var816\r\n    var816!val!0)\r\n  (define-fun var1464 () Int\r\n    (getAsLong/1185596175\r\n  (cast-from-var611-to-var869 (peekStack/2092691255 var2429))))\r\n  (define-fun var892 () var611\r\n    (peekStack/2092691255 var2429))\r\n  (define-fun var3832 () Int\r\n    (stackSize/-1151902492 var2429!1))\r\n  (define-fun var1347 () var869\r\n    (cast-from-var611-to-var869 (peekStack/2092691255 var2429)))\r\n  (define-fun var1244-NUMBER () var1244\r\n    var1244!val!0)\r\n  (define-fun stackSize/-1151902492 ((x!0 var816)) Int\r\n    0)\r\n  (define-fun peek/-1841308090 ((x!0 var816)) var1244\r\n    var1244!val!0)\r\n  (define-fun cast-from-var611-to-var869 ((x!0 var611)) var869\r\n    var869!val!0)\r\n  (define-fun getAsLong/1185596175 ((x!0 var869)) Int\r\n    0)\r\n  (define-fun popStack/-1055838337 ((x!0 var816)) var611\r\n    var611!val!0)\r\n  (define-fun peekStack/2092691255 ((x!0 var816)) var611\r\n    var611!val!0)\r\n)\r\n(error \"line 41 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1728512,
            "run_time": 0.029518604278564453,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var816 is 3\r\n; rep: (as @var816_0 var816)\r\n; rep: (as @var816_1 var816)\r\n; rep: (as @var816_2 var816)\r\n; cardinality of var1244 is 1\r\n; rep: (as @var1244_0 var1244)\r\n; cardinality of var611 is 1\r\n; rep: (as @var611_0 var611)\r\n; cardinality of var869 is 1\r\n; rep: (as @var869_0 var869)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-1841308090 ((BOUND_VARIABLE_473 var816)) var1244 (as @var1244_0 var1244))\r\n(define-fun peekStack/2092691255 ((BOUND_VARIABLE_476 var816)) var611 (as @var611_0 var611))\r\n(define-fun cast-from-var611-to-var869 ((BOUND_VARIABLE_479 var611)) var869 (as @var869_0 var869))\r\n(define-fun getAsLong/1185596175 ((BOUND_VARIABLE_482 var869)) Int 0)\r\n(define-fun popStack/-1055838337 ((BOUND_VARIABLE_485 var816)) var611 (as @var611_0 var611))\r\n(define-fun stackSize/-1151902492 ((_arg_1 var816)) Int 0)\r\n(define-fun null-var816 () var816 (as @var816_0 var816))\r\n(define-fun var1244-NUMBER () var1244 (as @var1244_0 var1244))\r\n(define-fun var2429 () var816 (as @var816_1 var816))\r\n(define-fun var2429!1 () var816 (as @var816_2 var816))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35840000,
            "run_time": 0.060785770416259766,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var816:\n  ;;   var816!val!1 var816!val!0 var816!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var816!val!1 () var816)\n  (declare-fun var816!val!0 () var816)\n  (declare-fun var816!val!2 () var816)\n  ;; cardinality constraint:\n  (forall ((x var816))\n          (or (= x var816!val!1) (= x var816!val!0) (= x var816!val!2)))\n  ;; -----------\n  ;; universe for var1244:\n  ;;   var1244!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1244!val!0 () var1244)\n  ;; cardinality constraint:\n  (forall ((x var1244)) (= x var1244!val!0))\n  ;; -----------\n  (define-fun var892 () var611\n    (peekStack/2092691255 var2429))\n  (define-fun null-var816 () var816\n    var816!val!1)\n  (define-fun var3832 () Int\n    (stackSize/-1151902492 var2429!1))\n  (define-fun var1347 () var869\n    (cast-from-var611-to-var869 (peekStack/2092691255 var2429)))\n  (define-fun var2429!1 () var816\n    var816!val!2)\n  (define-fun var182 () var1244\n    (peek/-1841308090 var2429))\n  (define-fun var3674 () var1244\n    var1244-NUMBER)\n  (define-fun var2429 () var816\n    var816!val!0)\n  (define-fun var1464 () Int\n    (getAsLong/1185596175\n  (cast-from-var611-to-var869 (peekStack/2092691255 var2429))))\n  (define-fun var1244-NUMBER () var1244\n    var1244!val!0)\n  (define-fun stackSize/-1151902492 ((x!0 var816)) Int\n    0)\n  (define-fun peek/-1841308090 ((x!0 var816)) var1244\n    var1244!val!0)\n  (define-fun cast-from-var611-to-var869 ((x!0 var611)) var869\n    var869!val!0)\n  (define-fun getAsLong/1185596175 ((x!0 var869)) Int\n    0)\n  (define-fun popStack/-1055838337 ((x!0 var816)) var611\n    var611!val!0)\n  (define-fun peekStack/2092691255 ((x!0 var816)) var611\n    var611!val!0)\n)\n(error \"line 41 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153300992,
            "run_time": 0.6924915313720703,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2429!1 () var816 var816!8)\r\n  (define-fun var2429 () var816 var816!6)\r\n  (define-fun var1244-NUMBER () var1244 var1244!4)\r\n  (define-fun null-var816 () var816 var816!2)\r\n  (define-fun var1244!4 () var1244 (peek/-1841308090 var816!6))\r\n  (define-fun stackSize/-1151902492 ((x!0 var816)) Int (ite (= x!0 var816!8) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 7,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.JsonTreeReader",
            "r1 = virtualinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>()",
            "$r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER>",
            "if r1 == $r2 goto $r3 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>()",
            "$r3 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>()",
            "$r4 = (com.google.gson.JsonPrimitive) $r3",
            "$l5 = virtualinvoke $r4.<com.google.gson.JsonPrimitive: long getAsLong()>()",
            "specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object popStack()>()",
            "$i0 = r0.<com.google.gson.internal.bind.JsonTreeReader: int stackSize>",
            "if $i0 <= 0 goto return $l5",
            "return $l5"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.JsonTreeReader__nextInt__-149847432\\1165.smt2",
        "z3": {
            "memory": 32534528,
            "run_time": 0.044776201248168945,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3062:\r\n  ;;   var3062!val!1 var3062!val!0 var3062!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3062!val!1 () var3062)\r\n  (declare-fun var3062!val!0 () var3062)\r\n  (declare-fun var3062!val!2 () var3062)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3062))\r\n          (or (= x var3062!val!1) (= x var3062!val!0) (= x var3062!val!2)))\r\n  ;; -----------\r\n  (define-fun var95 () var3062\r\n    var3062!val!0)\r\n  (define-fun var930 () var2095\r\n    (peekStack/2092691255 var95))\r\n  (define-fun var95!1 () var3062\r\n    var3062!val!2)\r\n  (define-fun var3279 () var2627\r\n    (peek/-1841308090 var95))\r\n  (define-fun var947 () var1297\r\n    (cast-from-var2095-to-var1297 (peekStack/2092691255 var95)))\r\n  (define-fun var1753 () Int\r\n    (stackSize/-1151902492 var95!1))\r\n  (define-fun null-var3062 () var3062\r\n    var3062!val!1)\r\n  (define-fun var3447 () Int\r\n    (getAsInt/1872711415\r\n  (cast-from-var2095-to-var1297 (peekStack/2092691255 var95))))\r\n  (define-fun var700 () var2627\r\n    var2627-NUMBER)\r\n  (define-fun var2627-NUMBER () var2627\r\n    var2627!val!0)\r\n  (define-fun stackSize/-1151902492 ((x!0 var3062)) Int\r\n    0)\r\n  (define-fun peek/-1841308090 ((x!0 var3062)) var2627\r\n    var2627!val!0)\r\n  (define-fun popStack/-1055838337 ((x!0 var3062)) var2095\r\n    var2095!val!0)\r\n  (define-fun peekStack/2092691255 ((x!0 var3062)) var2095\r\n    var2095!val!0)\r\n  (define-fun cast-from-var2095-to-var1297 ((x!0 var2095)) var1297\r\n    var1297!val!0)\r\n  (define-fun getAsInt/1872711415 ((x!0 var1297)) Int\r\n    0)\r\n)\r\n(error \"line 41 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1744896,
            "run_time": 0.014565706253051758,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3062 is 3\r\n; rep: (as @var3062_0 var3062)\r\n; rep: (as @var3062_1 var3062)\r\n; rep: (as @var3062_2 var3062)\r\n; cardinality of var2627 is 1\r\n; rep: (as @var2627_0 var2627)\r\n; cardinality of var2095 is 1\r\n; rep: (as @var2095_0 var2095)\r\n; cardinality of var1297 is 1\r\n; rep: (as @var1297_0 var1297)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-1841308090 ((BOUND_VARIABLE_473 var3062)) var2627 (as @var2627_0 var2627))\r\n(define-fun peekStack/2092691255 ((BOUND_VARIABLE_476 var3062)) var2095 (as @var2095_0 var2095))\r\n(define-fun cast-from-var2095-to-var1297 ((BOUND_VARIABLE_479 var2095)) var1297 (as @var1297_0 var1297))\r\n(define-fun getAsInt/1872711415 ((BOUND_VARIABLE_482 var1297)) Int 0)\r\n(define-fun popStack/-1055838337 ((BOUND_VARIABLE_485 var3062)) var2095 (as @var2095_0 var2095))\r\n(define-fun stackSize/-1151902492 ((_arg_1 var3062)) Int 0)\r\n(define-fun null-var3062 () var3062 (as @var3062_0 var3062))\r\n(define-fun var2627-NUMBER () var2627 (as @var2627_0 var2627))\r\n(define-fun var95 () var3062 (as @var3062_1 var3062))\r\n(define-fun var95!1 () var3062 (as @var3062_2 var3062))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35844096,
            "run_time": 0.06102323532104492,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3062:\n  ;;   var3062!val!1 var3062!val!0 var3062!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3062!val!1 () var3062)\n  (declare-fun var3062!val!0 () var3062)\n  (declare-fun var3062!val!2 () var3062)\n  ;; cardinality constraint:\n  (forall ((x var3062))\n          (or (= x var3062!val!1) (= x var3062!val!0) (= x var3062!val!2)))\n  ;; -----------\n  ;; universe for var2627:\n  ;;   var2627!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2627!val!0 () var2627)\n  ;; cardinality constraint:\n  (forall ((x var2627)) (= x var2627!val!0))\n  ;; -----------\n  (define-fun var95 () var3062\n    var3062!val!0)\n  (define-fun var700 () var2627\n    var2627-NUMBER)\n  (define-fun var95!1 () var3062\n    var3062!val!2)\n  (define-fun var930 () var2095\n    (peekStack/2092691255 var95))\n  (define-fun null-var3062 () var3062\n    var3062!val!1)\n  (define-fun var947 () var1297\n    (cast-from-var2095-to-var1297 (peekStack/2092691255 var95)))\n  (define-fun var3279 () var2627\n    (peek/-1841308090 var95))\n  (define-fun var1753 () Int\n    (stackSize/-1151902492 var95!1))\n  (define-fun var3447 () Int\n    (getAsInt/1872711415\n  (cast-from-var2095-to-var1297 (peekStack/2092691255 var95))))\n  (define-fun var2627-NUMBER () var2627\n    var2627!val!0)\n  (define-fun stackSize/-1151902492 ((x!0 var3062)) Int\n    0)\n  (define-fun peek/-1841308090 ((x!0 var3062)) var2627\n    var2627!val!0)\n  (define-fun popStack/-1055838337 ((x!0 var3062)) var2095\n    var2095!val!0)\n  (define-fun peekStack/2092691255 ((x!0 var3062)) var2095\n    var2095!val!0)\n  (define-fun cast-from-var2095-to-var1297 ((x!0 var2095)) var1297\n    var1297!val!0)\n  (define-fun getAsInt/1872711415 ((x!0 var1297)) Int\n    0)\n)\n(error \"line 41 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154140672,
            "run_time": 0.693314790725708,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var95!1 () var3062 var3062!8)\r\n  (define-fun var95 () var3062 var3062!6)\r\n  (define-fun var2627-NUMBER () var2627 var2627!4)\r\n  (define-fun null-var3062 () var3062 var3062!2)\r\n  (define-fun var2627!4 () var2627 (peek/-1841308090 var3062!6))\r\n  (define-fun stackSize/-1151902492 ((x!0 var3062)) Int (ite (= x!0 var3062!8) 0 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 7,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.JsonTreeReader",
            "r1 = virtualinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>()",
            "$r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER>",
            "if r1 == $r2 goto $r3 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>()",
            "$r3 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>()",
            "$r4 = (com.google.gson.JsonPrimitive) $r3",
            "$i5 = virtualinvoke $r4.<com.google.gson.JsonPrimitive: int getAsInt()>()",
            "specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object popStack()>()",
            "$i0 = r0.<com.google.gson.internal.bind.JsonTreeReader: int stackSize>",
            "if $i0 <= 0 goto return $i5",
            "return $i5"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.JsonTreeReader__expect__-777762532\\663.smt2",
        "z3": {
            "memory": 32378880,
            "run_time": 0.058196067810058594,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var330:\r\n  ;;   var330!val!2 var330!val!1 var330!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var330!val!2 () var330)\r\n  (declare-fun var330!val!1 () var330)\r\n  (declare-fun var330!val!0 () var330)\r\n  ;; cardinality constraint:\r\n  (forall ((x var330))\r\n          (or (= x var330!val!2) (= x var330!val!1) (= x var330!val!0)))\r\n  ;; -----------\r\n  ;; universe for var194:\r\n  ;;   var194!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var194!val!0 () var194)\r\n  ;; cardinality constraint:\r\n  (forall ((x var194)) (= x var194!val!0))\r\n  ;; -----------\r\n  ;; universe for var3948:\r\n  ;;   var3948!val!1 var3948!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3948!val!1 () var3948)\r\n  (declare-fun var3948!val!0 () var3948)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3948)) (or (= x var3948!val!1) (= x var3948!val!0)))\r\n  ;; -----------\r\n  (define-fun var3290 () String\r\n    (str.++ var3379!1 \"Expected \"))\r\n  (define-fun var3379 () String\r\n    String-init)\r\n  (define-fun null-var330 () var330\r\n    var330!val!1)\r\n  (define-fun var1276 () var330\r\n    (peek/-1841308090 var946))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3727 () String\r\n    (let ((a!1 (append/-1031950772\r\n             (str.++ (append/-1031950772\r\n                       (str.++ var3379!1 \"Expected \")\r\n                       (cast-from-var330-to-var194 var1927))\r\n                     \" but was \")\r\n             (cast-from-var330-to-var194 (peek/-1841308090 var946)))))\r\n  (str.++ a!1 (locationString/-286819006 var946))))\r\n  (define-fun var1927 () var330\r\n    var330!val!0)\r\n  (define-fun var3146 () var493\r\n    var493-init)\r\n  (define-fun var1921 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var3379!1 \"Expected \")\r\n          (cast-from-var330-to-var194 var1927))\r\n        \" but was \"))\r\n  (define-fun null-var3948 () var3948\r\n    var3948!val!1)\r\n  (define-fun var1901 () String\r\n    (append/-1031950772\r\n  (str.++ (append/-1031950772\r\n            (str.++ var3379!1 \"Expected \")\r\n            (cast-from-var330-to-var194 var1927))\r\n          \" but was \")\r\n  (cast-from-var330-to-var194 (peek/-1841308090 var946))))\r\n  (define-fun var3290!1 () String\r\n    \"Expected \")\r\n  (define-fun var1856 () String\r\n    (append/-1031950772\r\n  (str.++ var3379!1 \"Expected \")\r\n  (cast-from-var330-to-var194 var1927)))\r\n  (define-fun var1655 () var330\r\n    (peek/-1841308090 var946))\r\n  (define-fun var2342 () String\r\n    (locationString/-286819006 var946))\r\n  (define-fun var2449 () String\r\n    (let ((a!1 (append/-1031950772\r\n             (str.++ (append/-1031950772\r\n                       (str.++ var3379!1 \"Expected \")\r\n                       (cast-from-var330-to-var194 var1927))\r\n                     \" but was \")\r\n             (cast-from-var330-to-var194 (peek/-1841308090 var946)))))\r\n  (str.++ a!1 (locationString/-286819006 var946))))\r\n  (define-fun var1921!1 () String\r\n    \" but was \")\r\n  (define-fun var946 () var3948\r\n    var3948!val!0)\r\n  (define-fun var3379!1 () String\r\n    \"\")\r\n  (define-fun var1856!1 () String\r\n    \" but was \")\r\n  (define-fun var1901!1 () String\r\n    \"\")\r\n  (define-fun var3379!2 () String\r\n    \"Expected \")\r\n  (define-fun var3146!1 () var493\r\n    var493!val!0)\r\n  (define-fun var2449!1 () String\r\n    \"\")\r\n  (define-fun var493-init () var493\r\n    var493!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var330-to-var194 ((x!0 var330)) var194\r\n    var194!val!0)\r\n  (define-fun peek/-1841308090 ((x!0 var3948)) var330\r\n    var330!val!2)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var194)) String\r\n    \"\")\r\n  (define-fun locationString/-286819006 ((x!0 var3948)) String\r\n    \"\")\r\n  (define-fun <init>/-1092629202 ((x!0 var493) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 71 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11796480,
            "run_time": 0.030254602432250977,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3948 is 2\r\n; rep: (as @var3948_0 var3948)\r\n; rep: (as @var3948_1 var3948)\r\n; cardinality of var330 is 3\r\n; rep: (as @var330_0 var330)\r\n; rep: (as @var330_1 var330)\r\n; rep: (as @var330_2 var330)\r\n; cardinality of var493 is 1\r\n; rep: (as @var493_0 var493)\r\n; cardinality of var194 is 1\r\n; rep: (as @var194_0 var194)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-1841308090 ((_arg_1 var3948)) var330 (as @var330_2 var330))\r\n(define-fun var493-init () var493 (as @var493_0 var493))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((_arg_1 String) (_arg_2 var194)) String \"\")\r\n(define-fun cast-from-var330-to-var194 ((_arg_1 var330)) var194 (as @var194_0 var194))\r\n(define-fun locationString/-286819006 ((BOUND_VARIABLE_1503 var3948)) String \"\")\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_1506 var493) (BOUND_VARIABLE_1507 String)) void (as @void_0 void))\r\n(define-fun null-var3948 () var3948 (as @var3948_0 var3948))\r\n(define-fun null-var330 () var330 (as @var330_0 var330))\r\n(define-fun var946 () var3948 (as @var3948_1 var3948))\r\n(define-fun var1927 () var330 (as @var330_1 var330))\r\n(define-fun var3379!1 () String \"\")\r\n(define-fun var3379!2 () String \"Expected \")\r\n(define-fun var3290!1 () String \"Expected \")\r\n(define-fun var1856!1 () String \" but was \")\r\n(define-fun var1921!1 () String \" but was \")\r\n(define-fun var1901!1 () String \"\")\r\n(define-fun var3146!1 () var493 (as @var493_0 var493))\r\n(define-fun var2449!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35225600,
            "run_time": 0.06134486198425293,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 70 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 71 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169127936,
            "run_time": 0.9402360916137695,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3948/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.JsonTreeReader__expect__-777762532\\663.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_35_7 =\r\n     concat(all_29_4, \" but was \")\r\n   var1856!1 =\r\n     concat(all_29_4, \" but was \")\r\n   var1901!1 =\r\n     concat(all_26_3, all_26_2)\r\n   var1921!1 =\r\n     concat(all_32_4, rhs)\r\n   all_32_4 =\r\n     concat(all_29_4, \" but was \")\r\n\r\n682ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.JsonTreeReader",
            "r1 := @parameter0: com.google.gson.stream.JsonToken",
            "$r2 = virtualinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>()",
            "if $r2 == r1 goto return",
            "$r3 = new java.lang.IllegalStateException",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)",
            "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" but was \")",
            "$r7 = virtualinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>()",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7)",
            "$r9 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.String locationString()>()",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r3.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r12)",
            "throw $r3"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.JsonTreeReader__expect__-777762532\\872.smt2",
        "z3": {
            "memory": 32329728,
            "run_time": 0.06116080284118652,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2572:\r\n  ;;   var2572!val!0 var2572!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2572!val!0 () var2572)\r\n  (declare-fun var2572!val!1 () var2572)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2572)) (or (= x var2572!val!0) (= x var2572!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2253:\r\n  ;;   var2253!val!1 var2253!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2253!val!1 () var2253)\r\n  (declare-fun var2253!val!0 () var2253)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2253)) (or (= x var2253!val!1) (= x var2253!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var2572 () var2572\r\n    var2572!val!1)\r\n  (define-fun var1614 () var2572\r\n    (peek/-1841308090 var163))\r\n  (define-fun var163 () var2253\r\n    var2253!val!0)\r\n  (define-fun null-var2253 () var2253\r\n    var2253!val!1)\r\n  (define-fun var3741 () var2572\r\n    var2572!val!0)\r\n  (define-fun peek/-1841308090 ((x!0 var2253)) var2572\r\n    var2572!val!0)\r\n)\r\n(error \"line 23 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.014868497848510742,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2253 is 2\r\n; rep: (as @var2253_0 var2253)\r\n; rep: (as @var2253_1 var2253)\r\n; cardinality of var2572 is 2\r\n; rep: (as @var2572_0 var2572)\r\n; rep: (as @var2572_1 var2572)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-1841308090 ((_arg_1 var2253)) var2572 (as @var2572_1 var2572))\r\n(define-fun null-var2253 () var2253 (as @var2253_0 var2253))\r\n(define-fun null-var2572 () var2572 (as @var2572_0 var2572))\r\n(define-fun var163 () var2253 (as @var2253_1 var2253))\r\n(define-fun var3741 () var2572 (as @var2572_1 var2572))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36474880,
            "run_time": 0.04568052291870117,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2572:\n  ;;   var2572!val!0 var2572!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2572!val!0 () var2572)\n  (declare-fun var2572!val!1 () var2572)\n  ;; cardinality constraint:\n  (forall ((x var2572)) (or (= x var2572!val!0) (= x var2572!val!1)))\n  ;; -----------\n  ;; universe for var2253:\n  ;;   var2253!val!1 var2253!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2253!val!1 () var2253)\n  (declare-fun var2253!val!0 () var2253)\n  ;; cardinality constraint:\n  (forall ((x var2253)) (or (= x var2253!val!1) (= x var2253!val!0)))\n  ;; -----------\n  (define-fun null-var2572 () var2572\n    var2572!val!1)\n  (define-fun var163 () var2253\n    var2253!val!0)\n  (define-fun var1614 () var2572\n    (peek/-1841308090 var163))\n  (define-fun null-var2253 () var2253\n    var2253!val!1)\n  (define-fun var3741 () var2572\n    var2572!val!0)\n  (define-fun peek/-1841308090 ((x!0 var2253)) var2572\n    var2572!val!0)\n)\n(error \"line 23 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 127684608,
            "run_time": 0.6233608722686768,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3741 () var2572 var2572!8)\r\n  (define-fun var163 () var2253 var2253!6)\r\n  (define-fun null-var2572 () var2572 var2572!4)\r\n  (define-fun null-var2253 () var2253 var2253!2)\r\n  (define-fun var2572!8 () var2572 (peek/-1841308090 var2253!6))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.JsonTreeReader",
            "r1 := @parameter0: com.google.gson.stream.JsonToken",
            "$r2 = virtualinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>()",
            "if $r2 == r1 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.JsonTreeReader__nextJsonElement__-160188887\\1174.smt2",
        "z3": {
            "memory": 31510528,
            "run_time": 0.04447007179260254,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2649:\r\n  ;;   var2649!val!0 var2649!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2649!val!0 () var2649)\r\n  (declare-fun var2649!val!1 () var2649)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2649)) (or (= x var2649!val!0) (= x var2649!val!1)))\r\n  ;; -----------\r\n  (define-fun var3139!1 () String\r\n    \"Unexpected \")\r\n  (define-fun var2960 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var647!1 \"Unexpected \")\r\n          (cast-from-var3604-to-var1330 (peek/-1841308090 var3056)))\r\n        \" when reading a JsonElement.\"))\r\n  (define-fun var1779 () var3604\r\n    var3604-NAME)\r\n  (define-fun var3056 () var2649\r\n    var2649!val!0)\r\n  (define-fun var3139 () String\r\n    (str.++ var647!1 \"Unexpected \"))\r\n  (define-fun var647 () String\r\n    String-init)\r\n  (define-fun var2171 () var3604\r\n    (peek/-1841308090 var3056))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1940 () String\r\n    (append/-1031950772\r\n  (str.++ var647!1 \"Unexpected \")\r\n  (cast-from-var3604-to-var1330 (peek/-1841308090 var3056))))\r\n  (define-fun var2703 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var647!1 \"Unexpected \")\r\n          (cast-from-var3604-to-var1330 (peek/-1841308090 var3056)))\r\n        \" when reading a JsonElement.\"))\r\n  (define-fun null-var2649 () var2649\r\n    var2649!val!1)\r\n  (define-fun var2274 () var3331\r\n    var3331-init)\r\n  (define-fun var3604-NAME () var3604\r\n    var3604!val!0)\r\n  (define-fun var1940!1 () String\r\n    \" when reading a JsonElement.\")\r\n  (define-fun var647!1 () String\r\n    \"\")\r\n  (define-fun var647!2 () String\r\n    \"Unexpected \")\r\n  (define-fun var2960!1 () String\r\n    \"\")\r\n  (define-fun var3331-init () var3331\r\n    var3331!val!0)\r\n  (define-fun var2274!1 () var3331\r\n    var3331!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun peek/-1841308090 ((x!0 var2649)) var3604\r\n    var3604!val!0)\r\n  (define-fun cast-from-var3604-to-var1330 ((x!0 var3604)) var1330\r\n    var1330!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1330)) String\r\n    \"\")\r\n  (define-fun <init>/-1092629202 ((x!0 var3331) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 57 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.04603004455566406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2649 is 2\r\n; rep: (as @var2649_0 var2649)\r\n; rep: (as @var2649_1 var2649)\r\n; cardinality of var3604 is 1\r\n; rep: (as @var3604_0 var3604)\r\n; cardinality of var3331 is 1\r\n; rep: (as @var3331_0 var3331)\r\n; cardinality of var1330 is 1\r\n; rep: (as @var1330_0 var1330)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-1841308090 ((BOUND_VARIABLE_940 var2649)) var3604 (as @var3604_0 var3604))\r\n(define-fun var3331-init () var3331 (as @var3331_0 var3331))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_943 String) (BOUND_VARIABLE_944 var1330)) String \"\")\r\n(define-fun cast-from-var3604-to-var1330 ((BOUND_VARIABLE_947 var3604)) var1330 (as @var1330_0 var1330))\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_950 var3331) (BOUND_VARIABLE_951 String)) void (as @void_0 void))\r\n(define-fun null-var2649 () var2649 (as @var2649_0 var2649))\r\n(define-fun var3604-NAME () var3604 (as @var3604_0 var3604))\r\n(define-fun var3056 () var2649 (as @var2649_1 var2649))\r\n(define-fun var647!1 () String \"\")\r\n(define-fun var647!2 () String \"Unexpected \")\r\n(define-fun var3139!1 () String \"Unexpected \")\r\n(define-fun var1940!1 () String \" when reading a JsonElement.\")\r\n(define-fun var2274!1 () var3331 (as @var3331_0 var3331))\r\n(define-fun var2960!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36487168,
            "run_time": 0.07792925834655762,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2649:\n  ;;   var2649!val!0 var2649!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2649!val!0 () var2649)\n  (declare-fun var2649!val!1 () var2649)\n  ;; cardinality constraint:\n  (forall ((x var2649)) (or (= x var2649!val!0) (= x var2649!val!1)))\n  ;; -----------\n  ;; universe for var3604:\n  ;;   var3604!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3604!val!0 () var3604)\n  ;; cardinality constraint:\n  (forall ((x var3604)) (= x var3604!val!0))\n  ;; -----------\n  (define-fun var3139 () String\n    (str.++ var647!1 \"Unexpected \"))\n  (define-fun var647 () String\n    String-init)\n  (define-fun var647!2 () String\n    \"Unexpected \")\n  (define-fun var3056 () var2649\n    var2649!val!0)\n  (define-fun var2274 () var3331\n    var3331-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2703 () String\n    (str.++ (append/-1031950772\n          (str.++ var647!1 \"Unexpected \")\n          (cast-from-var3604-to-var1330 (peek/-1841308090 var3056)))\n        \" when reading a JsonElement.\"))\n  (define-fun var3139!1 () String\n    \"Unexpected \")\n  (define-fun var1779 () var3604\n    var3604-NAME)\n  (define-fun null-var2649 () var2649\n    var2649!val!1)\n  (define-fun var2171 () var3604\n    (peek/-1841308090 var3056))\n  (define-fun var2960 () String\n    (str.++ (append/-1031950772\n          (str.++ var647!1 \"Unexpected \")\n          (cast-from-var3604-to-var1330 (peek/-1841308090 var3056)))\n        \" when reading a JsonElement.\"))\n  (define-fun var1940 () String\n    (append/-1031950772\n  (str.++ var647!1 \"Unexpected \")\n  (cast-from-var3604-to-var1330 (peek/-1841308090 var3056))))\n  (define-fun var3604-NAME () var3604\n    var3604!val!0)\n  (define-fun var1940!1 () String\n    \" when reading a JsonElement.\")\n  (define-fun var647!1 () String\n    \"\")\n  (define-fun var2960!1 () String\n    \"\")\n  (define-fun var3331-init () var3331\n    var3331!val!0)\n  (define-fun var2274!1 () var3331\n    var3331!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun peek/-1841308090 ((x!0 var2649)) var3604\n    var3604!val!0)\n  (define-fun cast-from-var3604-to-var1330 ((x!0 var3604)) var1330\n    var1330!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1330)) String\n    \"\")\n  (define-fun <init>/-1092629202 ((x!0 var3331) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 57 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181370880,
            "run_time": 0.8864188194274902,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2649/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.JsonTreeReader__nextJsonElement__-160188887\\1174.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_27_4 =\r\n     concat(all_24_4, \" when reading a JsonElement.\")\r\n   var1940!1 =\r\n     concat(all_24_4, \" when reading a JsonElement.\")\r\n\r\n640ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.JsonTreeReader",
            "r1 = virtualinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>()",
            "$r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NAME>",
            "if r1 == $r2 goto $r8 = new java.lang.IllegalStateException",
            "$r8 = new java.lang.IllegalStateException",
            "$r9 = new java.lang.StringBuilder",
            "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unexpected \")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" when reading a JsonElement.\")",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r13)",
            "throw $r8"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.JsonTreeReader__nextDouble__-2013496976\\1041.smt2",
        "z3": {
            "memory": 32649216,
            "run_time": 60.01581072807312,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12627968,
            "run_time": 0.02885746955871582,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1969 is 2\r\n; rep: (as @var1969_0 var1969)\r\n; rep: (as @var1969_1 var1969)\r\n; cardinality of var2833 is 3\r\n; rep: (as @var2833_0 var2833)\r\n; rep: (as @var2833_1 var2833)\r\n; rep: (as @var2833_2 var2833)\r\n; cardinality of var2991 is 1\r\n; rep: (as @var2991_0 var2991)\r\n; cardinality of var128 is 1\r\n; rep: (as @var128_0 var128)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-1841308090 ((_arg_1 var1969)) var2833 (as @var2833_2 var2833))\r\n(define-fun var2991-init () var2991 (as @var2991_0 var2991))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((_arg_1 String) (_arg_2 var128)) String \"\")\r\n(define-fun cast-from-var2833-to-var128 ((_arg_1 var2833)) var128 (as @var128_0 var128))\r\n(define-fun locationString/-286819006 ((BOUND_VARIABLE_1516 var1969)) String \"\")\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_1519 var2991) (BOUND_VARIABLE_1520 String)) void (as @void_0 void))\r\n(define-fun null-var1969 () var1969 (as @var1969_0 var1969))\r\n(define-fun var2833-NUMBER () var2833 (as @var2833_0 var2833))\r\n(define-fun var2833-STRING () var2833 (as @var2833_1 var2833))\r\n(define-fun var1138 () var1969 (as @var1969_1 var1969))\r\n(define-fun var3506!1 () String \"\")\r\n(define-fun var3506!2 () String \"Expected \")\r\n(define-fun var731!1 () String \"Expected \")\r\n(define-fun var3324!1 () String \" but was \")\r\n(define-fun var1977!1 () String \" but was \")\r\n(define-fun var3135!1 () String \"\")\r\n(define-fun var3180!1 () var2991 (as @var2991_0 var2991))\r\n(define-fun var433!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36544512,
            "run_time": 0.046199798583984375,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 72 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 73 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169320448,
            "run_time": 0.9124917984008789,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2833/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.JsonTreeReader__nextDouble__-2013496976\\1041.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_37_7 =\r\n     concat(all_31_4, \" but was \")\r\n   var3324!1 =\r\n     concat(all_31_4, \" but was \")\r\n   var3135!1 =\r\n     concat(all_28_3, all_28_2)\r\n   var1977!1 =\r\n     concat(all_34_4, rhs)\r\n   all_34_4 =\r\n     concat(all_31_4, \" but was \")\r\n\r\n680ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 19,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.JsonTreeReader",
            "r1 = virtualinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>()",
            "$r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER>",
            "if r1 == $r2 goto $r3 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>()",
            "$r11 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING>",
            "if r1 == $r11 goto $r3 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object peekStack()>()",
            "$r12 = new java.lang.IllegalStateException",
            "$r13 = new java.lang.StringBuilder",
            "specialinvoke $r13.<java.lang.StringBuilder: void <init>()>()",
            "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected \")",
            "$r14 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER>",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14)",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" but was \")",
            "$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)",
            "$r18 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.String locationString()>()",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r12.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r21)",
            "throw $r12"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.TypeAdapters$32__toString__-1605842166\\731.smt2",
        "z3": {
            "memory": 32477184,
            "run_time": 60.00817584991455,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1654784,
            "run_time": 0.06237459182739258,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var185 is 2\r\n; rep: (as @var185_0 var185)\r\n; rep: (as @var185_1 var185)\r\n; cardinality of var3942 is 1\r\n; rep: (as @var3942_0 var3942)\r\n; cardinality of var922 is 1\r\n; rep: (as @var922_0 var922)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun val$boxed/-356231190 ((_arg_1 var185)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun val$unboxed/-356231190 ((_arg_1 var185)) ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun val$typeAdapter/-356231190 ((BOUND_VARIABLE_1343 var185)) var3942 (as @var3942_0 var3942))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1346 String) (BOUND_VARIABLE_1347 var922)) String \"\")\r\n(define-fun cast-from-var3942-to-var922 ((BOUND_VARIABLE_1350 var3942)) var922 (as @var922_0 var922))\r\n(define-fun null-var185 () var185 (as @var185_0 var185))\r\n(define-fun var1531 () var185 (as @var185_1 var185))\r\n(define-fun var2282!1 () String \"\")\r\n(define-fun var2282!2 () String \"Factory[type=\")\r\n(define-fun var2187!1 () String \"Factory[type=\")\r\n(define-fun var2761!1 () String \"Factory[type=+\")\r\n(define-fun var3530!1 () String \"Factory[type=+\")\r\n(define-fun var1954!1 () String \"Factory[type=+,adapter=\")\r\n(define-fun var2636!1 () String \"Factory[type=+,adapter=\")\r\n(define-fun var290!1 () String \"]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36499456,
            "run_time": 0.0455784797668457,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 67 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 68 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 196694016,
            "run_time": 0.9278125762939453,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var185/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.TypeAdapters$32__toString__-1605842166\\731.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1954!1 =\r\n     concat(all_33_6, \",adapter=\")\r\n   var3530!1 =\r\n     concat(all_30_7, all_30_5)\r\n   var2761!1 =\r\n     concat(all_27_4, \"+\")\r\n   var290!1 =\r\n     concat(all_21_2, \"]\")\r\n   var2187!1 =\r\n     concat(\"Factory[type=\", all_24_3)\r\n   var2636!1 =\r\n     concat(all_16_0, rhs)\r\n   all_16_0 =\r\n     concat(all_36_7, \",adapter=\")\r\n   all_33_6 =\r\n     concat(all_33_9, all_30_5)\r\n   all_30_7 =\r\n     concat(all_30_8, \"+\")\r\n   all_27_4 =\r\n     concat(\"Factory[type=\", all_24_3)\r\n   all_36_7 =\r\n     concat(all_36_10, all_30_5)\r\n   all_33_9 =\r\n     concat(all_33_10, \"+\")\r\n   all_30_8 =\r\n     concat(\"Factory[type=\", all_24_3)\r\n   all_36_10 =\r\n     concat(all_36_11, \"+\")\r\n   all_33_10 =\r\n     concat(\"Factory[type=\", all_24_3)\r\n   all_36_11 =\r\n     concat(\"Factory[type=\", all_24_3)\r\n\r\n699ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: com.google.gson.internal.bind.TypeAdapters$32",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Factory[type=\")",
            "$r2 = r1.<com.google.gson.internal.bind.TypeAdapters$32: java.lang.Class val$boxed>",
            "$r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"+\")",
            "$r6 = r1.<com.google.gson.internal.bind.TypeAdapters$32: java.lang.Class val$unboxed>",
            "$r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>()",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",adapter=\")",
            "$r10 = r1.<com.google.gson.internal.bind.TypeAdapters$32: com.google.gson.TypeAdapter val$typeAdapter>",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r14"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\1029.smt2",
        "z3": {
            "memory": 32616448,
            "run_time": 60.00471496582031,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12304384,
            "run_time": 0.030098676681518555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3233 is 1\r\n; rep: (as @var3233_0 var3233)\r\n; cardinality of var2862 is 2\r\n; rep: (as @var2862_0 var2862)\r\n; rep: (as @var2862_1 var2862)\r\n; cardinality of var1963 is 2\r\n; rep: (as @var1963_0 var1963)\r\n; rep: (as @var1963_1 var1963)\r\n; cardinality of var3230 is 1\r\n; rep: (as @var3230_0 var3230)\r\n; cardinality of var1447 is 1\r\n; rep: (as @var1447_0 var1447)\r\n; cardinality of var2630 is 1\r\n; rep: (as @var2630_0 var2630)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var1963-to-var3230 ((_arg_1 var1963)) var3230 (as @var3230_0 var3230))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((_arg_1 String) (_arg_2 Int)) String \"\")\r\n(define-fun getMessage/849299655 ((_arg_1 var1447)) String \"A\")\r\n(define-fun cast-from-var3230-to-var1447 ((_arg_1 var3230)) var1447 (as @var1447_0 var1447))\r\n(define-fun var2630-init () var2630 (as @var2630_0 var2630))\r\n(define-fun getIndex/-2136393185 ((BOUND_VARIABLE_1216 var2862)) Int 0)\r\n(define-fun <init>/1495607482 ((BOUND_VARIABLE_1219 var2630) (BOUND_VARIABLE_1220 String) (BOUND_VARIABLE_1221 Int)) void (as @void_0 void))\r\n(define-fun initCause/2003336360 ((BOUND_VARIABLE_1224 var1447) (BOUND_VARIABLE_1225 var1447)) var1447 (as @var1447_0 var1447))\r\n(define-fun cast-from-var2630-to-var1447 ((BOUND_VARIABLE_1228 var2630)) var1447 (as @var1447_0 var1447))\r\n(define-fun null-String () String \"B\")\r\n(define-fun null-var2862 () var2862 (as @var2862_0 var2862))\r\n(define-fun null-var1963 () var1963 (as @var1963_0 var1963))\r\n(define-fun var3522 () String \"\")\r\n(define-fun var3657 () var2862 (as @var2862_1 var2862))\r\n(define-fun var337 () var1963 (as @var1963_1 var1963))\r\n(define-fun var90!1 () String \"\")\r\n(define-fun var90!2 () String \"\")\r\n(define-fun var2464!1 () String \"\")\r\n(define-fun var31!1 () String \"\")\r\n(define-fun var1290!1 () String \"\")\r\n(define-fun var1290!2 () String \"Failed to parse date [\")\r\n(define-fun var2908!1 () String \"Failed to parse date [\")\r\n(define-fun var134!1 () String \"Failed to parse date []: \")\r\n(define-fun var653!1 () String \"Failed to parse date []: A\")\r\n(define-fun var2461!1 () var2630 (as @var2630_0 var2630))\r\n(define-fun var291!1 () String \"\")\r\n(define-fun var3840!1 () Int 0)\r\n(define-fun var2461!2 () var2630 (as @var2630_0 var2630))\r\n(define-fun var2641!1 () var3230 (as @var3230_0 var3230))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36548608,
            "run_time": 0.04664278030395508,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 111 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 112 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 214089728,
            "run_time": 0.9282448291778564,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2862/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\1029.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var653!1 =\r\n     concat(all_46_9, all_22_0)\r\n   var134!1 =\r\n     concat(all_43_5, \"]: \")\r\n   all_46_12 =\r\n     concat(all_27_2, var3522)\r\n   all_43_7 =\r\n     concat(all_27_2, var3522)\r\n   all_40_5 =\r\n     concat(all_27_2, var3522)\r\n   var2464!1 =\r\n     concat(all_27_2, var3522)\r\n   var2908!1 =\r\n     concat(\"Failed to parse date [\", all_40_4)\r\n   var31!1 =\r\n     concat(all_37_2, rhs)\r\n   all_46_9 =\r\n     concat(all_46_10, \"]: \")\r\n   all_37_2 =\r\n     concat(all_27_2, var3522)\r\n   all_43_5 =\r\n     concat(\"Failed to parse date [\", all_43_6)\r\n   all_46_10 =\r\n     concat(\"Failed to parse date [\", all_46_11)\r\n\r\n700ms\r\n"
        },
        "undefined_function_count": 10,
        "assertion_count": 34,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: boolean isEmpty()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 5,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2,
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.text.ParsePosition",
            "$r44 := @caughtexception",
            "r49 = $r44",
            "goto [?= (branch)]",
            "if r1 != null goto $r69 = new java.lang.StringBuilder",
            "$r69 = new java.lang.StringBuilder",
            "specialinvoke $r69.<java.lang.StringBuilder: void <init>()>()",
            "$r34 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34)",
            "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34)",
            "$r50 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()",
            "r51 = $r50",
            "$r43 = virtualinvoke r49.<java.lang.Exception: java.lang.String getMessage()>()",
            "r52 = $r43",
            "if $r43 == null goto $r70 = new java.lang.StringBuilder",
            "$z9 = virtualinvoke $r43.<java.lang.String: boolean isEmpty()>()",
            "if $z9 == 0 goto $r72 = new java.text.ParseException",
            "$r72 = new java.text.ParseException",
            "$r71 = new java.lang.StringBuilder",
            "specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()",
            "$r55 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to parse date [\")",
            "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51)",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: \")",
            "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52)",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i31 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "specialinvoke $r72.<java.text.ParseException: void <init>(java.lang.String,int)>($r59, $i31)",
            "virtualinvoke $r72.<java.text.ParseException: java.lang.Throwable initCause(java.lang.Throwable)>(r49)",
            "throw $r72"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__format__-1868536622\\893.smt2",
        "z3": {
            "memory": 32342016,
            "run_time": 60.008243560791016,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1646592,
            "run_time": 0.046578407287597656,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2654 is 2\r\n; rep: (as @var2654_0 var2654)\r\n; rep: (as @var2654_1 var2654)\r\n; cardinality of var116 is 3\r\n; rep: (as @var116_0 var116)\r\n; rep: (as @var116_1 var116)\r\n; rep: (as @var116_2 var116)\r\n; cardinality of var3237 is 1\r\n; rep: (as @var3237_0 var3237)\r\n; cardinality of var1306 is 1\r\n; rep: (as @var1306_0 var1306)\r\n; cardinality of var2825 is 1\r\n; rep: (as @var2825_0 var2825)\r\n; cardinality of var38 is 1\r\n; rep: (as @var38_0 var38)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3237-init () var3237 (as @var3237_0 var3237))\r\n(define-fun <init>/-843876822 ((BOUND_VARIABLE_1538 var3237) (BOUND_VARIABLE_1539 var116) (BOUND_VARIABLE_1540 var1306)) void (as @void_0 void))\r\n(define-fun setTime/-1821537528 ((BOUND_VARIABLE_1543 var2825) (BOUND_VARIABLE_1544 var2654)) void (as @void_0 void))\r\n(define-fun cast-from-var3237-to-var2825 ((_arg_1 var3237)) var2825 (as @var2825_0 var2825))\r\n(define-fun getRawOffset/793408012 ((_arg_1 var116)) Int 0)\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/543593434 ((BOUND_VARIABLE_1547 String) (BOUND_VARIABLE_1548 Int)) void (as @void_0 void))\r\n(define-fun get/335439681 ((BOUND_VARIABLE_1551 var2825) (BOUND_VARIABLE_1552 Int)) Int 0)\r\n(define-fun var38_padInt/-157990007 ((BOUND_VARIABLE_1555 String) (BOUND_VARIABLE_1556 Int) (BOUND_VARIABLE_1557 Int)) void (as @void_0 void))\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_1560 String) (BOUND_VARIABLE_1561 Int)) String \"\")\r\n(define-fun getTimeInMillis/-1265389133 ((_arg_1 var2825)) Int 1)\r\n(define-fun getOffset/846977212 ((_arg_1 var116) (_arg_2 Int)) Int 0)\r\n(define-fun null-var2654 () var2654 (as @var2654_0 var2654))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun null-var116 () var116 (as @var116_0 var116))\r\n(define-fun var1306-US () var1306 (as @var1306_0 var1306))\r\n(define-fun var1154 () var2654 (as @var2654_1 var2654))\r\n(define-fun var3758 () Bool false)\r\n(define-fun var3899 () var116 (as @var116_1 var116))\r\n(define-fun var494!1 () var3237 (as @var3237_0 var3237))\r\n(define-fun var3899!1 () var116 (as @var116_2 var116))\r\n(define-fun var3458!1 () var1306 (as @var1306_0 var1306))\r\n(define-fun var494!2 () var3237 (as @var3237_0 var3237))\r\n(define-fun var1154!1 () var2654 (as @var2654_0 var2654))\r\n(define-fun var1262!1 () String \"\")\r\n(define-fun var912!1 () Int 0)\r\n(define-fun var1262!2 () String \"\")\r\n(define-fun var2062!1 () Int 0)\r\n(define-fun var3683!1 () Int 0)\r\n(define-fun var1262!3 () String \"\")\r\n(define-fun var1262!4 () String \"\")\r\n(define-fun var1123!1 () Int 0)\r\n(define-fun var1778!1 () Int 0)\r\n(define-fun var1262!5 () String \"\")\r\n(define-fun var1262!6 () String \"\")\r\n(define-fun var1367!1 () Int 0)\r\n(define-fun var2588!1 () Int 0)\r\n(define-fun var1262!7 () String \"\")\r\n(define-fun var1262!8 () String \"\")\r\n(define-fun var515!1 () Int 0)\r\n(define-fun var1243!1 () Int 0)\r\n(define-fun var1262!9 () String \"\")\r\n(define-fun var1262!10 () String \"\")\r\n(define-fun var1792!1 () Int 0)\r\n(define-fun var1744!1 () Int 0)\r\n(define-fun var1262!11 () String \"\")\r\n(define-fun var1262!12 () String \"\")\r\n(define-fun var1352!1 () Int 0)\r\n(define-fun var1946!1 () Int 0)\r\n(define-fun var1262!13 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39374848,
            "run_time": 0.06396031379699707,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 172 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 173 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 200822784,
            "run_time": 0.804785966873169,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__format__-1868536622\\893.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1262!13 =\r\n     concat(var1262!12, rhs)\r\n   var1262!11 =\r\n     concat(var1262!10, rhs)\r\n   var1262!9 =\r\n     concat(var1262!8, rhs)\r\n   var1262!7 =\r\n     concat(var1262!6, rhs)\r\n   var1262!5 =\r\n     concat(var1262!4, rhs)\r\n   var1262!3 =\r\n     concat(var1262!2, rhs)\r\n   ... sat\r\n\r\n565ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 12,
        "assertion_count": 43,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 8,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @parameter0: java.util.Date",
            "z0 := @parameter1: boolean",
            "r1 := @parameter2: java.util.TimeZone",
            "$r19 = new java.util.GregorianCalendar",
            "$r2 = <java.util.Locale: java.util.Locale US>",
            "specialinvoke $r19.<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>(r1, $r2)",
            "virtualinvoke $r19.<java.util.Calendar: void setTime(java.util.Date)>(r3)",
            "$r4 = \"yyyy-MM-ddThh:mm:ss\"",
            "i28 = virtualinvoke $r4.<java.lang.String: int length()>()",
            "if z0 == 0 goto $i29 = 0",
            "$i29 = 0",
            "$i27 = i28 + $i29",
            "$i0 = virtualinvoke r1.<java.util.TimeZone: int getRawOffset()>()",
            "if $i0 != 0 goto $r5 = \"+hh:mm\"",
            "$r17 = \"Z\"",
            "$i30 = virtualinvoke $r17.<java.lang.String: int length()>()",
            "goto [?= $i26 = $i27 + $i30]",
            "$i26 = $i27 + $i30",
            "$r20 = new java.lang.StringBuilder",
            "specialinvoke $r20.<java.lang.StringBuilder: void <init>(int)>($i26)",
            "$i2 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(1)",
            "$r7 = \"yyyy\"",
            "$i1 = virtualinvoke $r7.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i2, $i1)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45)",
            "$i3 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(2)",
            "$i5 = $i3 + 1",
            "$r8 = \"MM\"",
            "$i4 = virtualinvoke $r8.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i5, $i4)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45)",
            "$i7 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(5)",
            "$r9 = \"dd\"",
            "$i6 = virtualinvoke $r9.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i7, $i6)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(84)",
            "$i9 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(11)",
            "$r10 = \"hh\"",
            "$i8 = virtualinvoke $r10.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i9, $i8)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)",
            "$i11 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(12)",
            "$r11 = \"mm\"",
            "$i10 = virtualinvoke $r11.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i11, $i10)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)",
            "$i13 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(13)",
            "$r12 = \"ss\"",
            "$i12 = virtualinvoke $r12.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i13, $i12)",
            "if z0 == 0 goto $l14 = virtualinvoke $r19.<java.util.Calendar: long getTimeInMillis()>()",
            "$l14 = virtualinvoke $r19.<java.util.Calendar: long getTimeInMillis()>()",
            "$i25 = virtualinvoke r1.<java.util.TimeZone: int getOffset(long)>($l14)",
            "if $i25 == 0 goto virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90)",
            "$r13 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r13"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\1067.smt2",
        "z3": {
            "memory": 32464896,
            "run_time": 60.002044439315796,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1654784,
            "run_time": 0.044809818267822266,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2642 is 1\r\n; rep: (as @var2642_0 var2642)\r\n; cardinality of var3506 is 2\r\n; rep: (as @var3506_0 var3506)\r\n; rep: (as @var3506_1 var3506)\r\n; cardinality of var656 is 2\r\n; rep: (as @var656_0 var656)\r\n; rep: (as @var656_1 var656)\r\n; cardinality of var156 is 1\r\n; rep: (as @var156_0 var156)\r\n; cardinality of var2644 is 1\r\n; rep: (as @var2644_0 var2644)\r\n; cardinality of var2522 is 1\r\n; rep: (as @var2522_0 var2522)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var656-to-var156 ((_arg_1 var656)) var156 (as @var156_0 var156))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((_arg_1 String) (_arg_2 Int)) String \"\")\r\n(define-fun getMessage/849299655 ((_arg_1 var2644)) String \"A\")\r\n(define-fun cast-from-var156-to-var2644 ((_arg_1 var156)) var2644 (as @var2644_0 var2644))\r\n(define-fun var2522-init () var2522 (as @var2522_0 var2522))\r\n(define-fun getIndex/-2136393185 ((BOUND_VARIABLE_1216 var3506)) Int 0)\r\n(define-fun <init>/1495607482 ((BOUND_VARIABLE_1219 var2522) (BOUND_VARIABLE_1220 String) (BOUND_VARIABLE_1221 Int)) void (as @void_0 void))\r\n(define-fun initCause/2003336360 ((BOUND_VARIABLE_1224 var2644) (BOUND_VARIABLE_1225 var2644)) var2644 (as @var2644_0 var2644))\r\n(define-fun cast-from-var2522-to-var2644 ((BOUND_VARIABLE_1228 var2522)) var2644 (as @var2644_0 var2644))\r\n(define-fun null-String () String \"B\")\r\n(define-fun null-var3506 () var3506 (as @var3506_0 var3506))\r\n(define-fun null-var656 () var656 (as @var656_0 var656))\r\n(define-fun var32 () String \"\")\r\n(define-fun var1379 () var3506 (as @var3506_1 var3506))\r\n(define-fun var1488 () var656 (as @var656_1 var656))\r\n(define-fun var1276!1 () String \"\")\r\n(define-fun var1276!2 () String \"\")\r\n(define-fun var3898!1 () String \"\")\r\n(define-fun var902!1 () String \"\")\r\n(define-fun var2593!1 () String \"\")\r\n(define-fun var2593!2 () String \"Failed to parse date [\")\r\n(define-fun var932!1 () String \"Failed to parse date [\")\r\n(define-fun var2075!1 () String \"Failed to parse date []: \")\r\n(define-fun var2504!1 () String \"Failed to parse date []: A\")\r\n(define-fun var984!1 () var2522 (as @var2522_0 var2522))\r\n(define-fun var1984!1 () String \"\")\r\n(define-fun var3275!1 () Int 0)\r\n(define-fun var984!2 () var2522 (as @var2522_0 var2522))\r\n(define-fun var52!1 () var156 (as @var156_0 var156))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36560896,
            "run_time": 0.04559445381164551,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 110 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 111 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 214417408,
            "run_time": 0.9153456687927246,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3506/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\1067.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2504!1 =\r\n     concat(all_46_9, all_22_0)\r\n   var2075!1 =\r\n     concat(all_43_5, \"]: \")\r\n   all_46_12 =\r\n     concat(all_27_2, var32)\r\n   all_43_7 =\r\n     concat(all_27_2, var32)\r\n   all_40_5 =\r\n     concat(all_27_2, var32)\r\n   var3898!1 =\r\n     concat(all_27_2, var32)\r\n   var932!1 =\r\n     concat(\"Failed to parse date [\", all_40_4)\r\n   var902!1 =\r\n     concat(all_37_2, rhs)\r\n   all_46_9 =\r\n     concat(all_46_10, \"]: \")\r\n   all_37_2 =\r\n     concat(all_27_2, var32)\r\n   all_43_5 =\r\n     concat(\"Failed to parse date [\", all_43_6)\r\n   all_46_10 =\r\n     concat(\"Failed to parse date [\", all_46_11)\r\n\r\n687ms\r\n"
        },
        "undefined_function_count": 10,
        "assertion_count": 34,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: boolean isEmpty()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 5,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2,
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.text.ParsePosition",
            "$r32 := @caughtexception",
            "r49 = $r32",
            "if r1 != null goto $r69 = new java.lang.StringBuilder",
            "$r69 = new java.lang.StringBuilder",
            "specialinvoke $r69.<java.lang.StringBuilder: void <init>()>()",
            "$r34 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34)",
            "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34)",
            "$r50 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()",
            "r51 = $r50",
            "$r43 = virtualinvoke r49.<java.lang.Exception: java.lang.String getMessage()>()",
            "r52 = $r43",
            "if $r43 == null goto $r70 = new java.lang.StringBuilder",
            "$z9 = virtualinvoke $r43.<java.lang.String: boolean isEmpty()>()",
            "if $z9 == 0 goto $r72 = new java.text.ParseException",
            "$r72 = new java.text.ParseException",
            "$r71 = new java.lang.StringBuilder",
            "specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()",
            "$r55 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to parse date [\")",
            "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51)",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: \")",
            "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52)",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i31 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "specialinvoke $r72.<java.text.ParseException: void <init>(java.lang.String,int)>($r59, $i31)",
            "virtualinvoke $r72.<java.text.ParseException: java.lang.Throwable initCause(java.lang.Throwable)>(r49)",
            "throw $r72"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\983.smt2",
        "z3": {
            "memory": 32268288,
            "run_time": 60.015496492385864,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.03013753890991211,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3558 is 1\r\n; rep: (as @var3558_0 var3558)\r\n; cardinality of var2644 is 2\r\n; rep: (as @var2644_0 var2644)\r\n; rep: (as @var2644_1 var2644)\r\n; cardinality of var2195 is 2\r\n; rep: (as @var2195_0 var2195)\r\n; rep: (as @var2195_1 var2195)\r\n; cardinality of var2651 is 1\r\n; rep: (as @var2651_0 var2651)\r\n; cardinality of var126 is 1\r\n; rep: (as @var126_0 var126)\r\n; cardinality of var3383 is 1\r\n; rep: (as @var3383_0 var3383)\r\n; cardinality of var1165 is 1\r\n; rep: (as @var1165_0 var1165)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var2195-to-var2651 ((_arg_1 var2195)) var2651 (as @var2651_0 var2651))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((_arg_1 String) (_arg_2 Int)) String \"\")\r\n(define-fun getMessage/849299655 ((_arg_1 var126)) String \"\")\r\n(define-fun cast-from-var2651-to-var126 ((_arg_1 var2651)) var126 (as @var126_0 var126))\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_1447 var3383)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var2651-to-var3383 ((BOUND_VARIABLE_1450 var2651)) var3383 (as @var3383_0 var3383))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_1453 ClassObject)) String \"\")\r\n(define-fun var1165-init () var1165 (as @var1165_0 var1165))\r\n(define-fun getIndex/-2136393185 ((BOUND_VARIABLE_1456 var2644)) Int 0)\r\n(define-fun <init>/1495607482 ((BOUND_VARIABLE_1459 var1165) (BOUND_VARIABLE_1460 String) (BOUND_VARIABLE_1461 Int)) void (as @void_0 void))\r\n(define-fun initCause/2003336360 ((BOUND_VARIABLE_1464 var126) (BOUND_VARIABLE_1465 var126)) var126 (as @var126_0 var126))\r\n(define-fun cast-from-var1165-to-var126 ((BOUND_VARIABLE_1468 var1165)) var126 (as @var126_0 var126))\r\n(define-fun null-String () String \"\")\r\n(define-fun null-var2644 () var2644 (as @var2644_0 var2644))\r\n(define-fun null-var2195 () var2195 (as @var2195_0 var2195))\r\n(define-fun var1200 () String \"A\")\r\n(define-fun var1832 () var2644 (as @var2644_1 var2644))\r\n(define-fun var3005 () var2195 (as @var2195_1 var2195))\r\n(define-fun var478!1 () String \"\")\r\n(define-fun var478!2 () String \"\")\r\n(define-fun var1139!1 () String \"A\")\r\n(define-fun var1281!1 () String \"A\")\r\n(define-fun var1973!1 () String \"\")\r\n(define-fun var1973!2 () String \"(\")\r\n(define-fun var1932!1 () String \"(\")\r\n(define-fun var3478!1 () String \"()\")\r\n(define-fun var1840!1 () String \"\")\r\n(define-fun var1840!2 () String \"Failed to parse date [\")\r\n(define-fun var2738!1 () String \"Failed to parse date [\")\r\n(define-fun var2268!1 () String \"Failed to parse date []: \")\r\n(define-fun var329!1 () String \"Failed to parse date []: ()\")\r\n(define-fun var3917!1 () var1165 (as @var1165_0 var1165))\r\n(define-fun var1225!1 () String \"\")\r\n(define-fun var3939!1 () Int 0)\r\n(define-fun var3917!2 () var1165 (as @var1165_0 var1165))\r\n(define-fun var3988!1 () var2651 (as @var2651_0 var2651))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35835904,
            "run_time": 0.047089576721191406,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 134 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 135 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 209231872,
            "run_time": 0.974168062210083,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle negative string equation var1200 + -1*null-String != 0\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\983.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n719ms\r\n"
        },
        "undefined_function_count": 13,
        "assertion_count": 44,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 8,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.text.ParsePosition",
            "$r45 := @caughtexception",
            "r49 = $r45",
            "goto [?= (branch)]",
            "if r1 != null goto $r69 = new java.lang.StringBuilder",
            "$r69 = new java.lang.StringBuilder",
            "specialinvoke $r69.<java.lang.StringBuilder: void <init>()>()",
            "$r34 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34)",
            "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34)",
            "$r50 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()",
            "r51 = $r50",
            "$r43 = virtualinvoke r49.<java.lang.Exception: java.lang.String getMessage()>()",
            "r52 = $r43",
            "if $r43 == null goto $r70 = new java.lang.StringBuilder",
            "$r70 = new java.lang.StringBuilder",
            "specialinvoke $r70.<java.lang.StringBuilder: void <init>()>()",
            "$r40 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$r38 = virtualinvoke r49.<java.lang.Object: java.lang.Class getClass()>()",
            "$r39 = virtualinvoke $r38.<java.lang.Class: java.lang.String getName()>()",
            "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39)",
            "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "r52 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r72 = new java.text.ParseException",
            "$r71 = new java.lang.StringBuilder",
            "specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()",
            "$r55 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to parse date [\")",
            "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51)",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: \")",
            "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52)",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i31 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "specialinvoke $r72.<java.text.ParseException: void <init>(java.lang.String,int)>($r59, $i31)",
            "virtualinvoke $r72.<java.text.ParseException: java.lang.Throwable initCause(java.lang.Throwable)>(r49)",
            "throw $r72"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\999.smt2",
        "z3": {
            "memory": 30863360,
            "run_time": 0.04416775703430176,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 93 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015529870986938477,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36003840,
            "run_time": 0.04645729064941406,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 93 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153243648,
            "run_time": 0.7011916637420654,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 25,
        "api_sequence": [
            "<java.lang.String: boolean isEmpty()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.text.ParsePosition",
            "$r44 := @caughtexception",
            "r49 = $r44",
            "goto [?= (branch)]",
            "if r1 != null goto $r69 = new java.lang.StringBuilder",
            "$r50 = null",
            "goto [?= r51 = $r50]",
            "r51 = $r50",
            "$r43 = virtualinvoke r49.<java.lang.Exception: java.lang.String getMessage()>()",
            "r52 = $r43",
            "if $r43 == null goto $r70 = new java.lang.StringBuilder",
            "$z9 = virtualinvoke $r43.<java.lang.String: boolean isEmpty()>()",
            "if $z9 == 0 goto $r72 = new java.text.ParseException",
            "$r72 = new java.text.ParseException",
            "$r71 = new java.lang.StringBuilder",
            "specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()",
            "$r55 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to parse date [\")",
            "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51)",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: \")",
            "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52)",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i31 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "specialinvoke $r72.<java.text.ParseException: void <init>(java.lang.String,int)>($r59, $i31)",
            "virtualinvoke $r72.<java.text.ParseException: java.lang.Throwable initCause(java.lang.Throwable)>(r49)",
            "throw $r72"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.ConstructorConstructor$19__construct__-953176901\\71.smt2",
        "z3": {
            "memory": 32346112,
            "run_time": 0.04361748695373535,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var890:\r\n  ;;   var890!val!1 var890!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var890!val!1 () var890)\r\n  (declare-fun var890!val!0 () var890)\r\n  ;; cardinality constraint:\r\n  (forall ((x var890)) (or (= x var890!val!1) (= x var890!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3842:\r\n  ;;   var3842!val!1 var3842!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3842!val!1 () var3842)\r\n  (declare-fun var3842!val!0 () var3842)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3842)) (or (= x var3842!val!1) (= x var3842!val!0)))\r\n  ;; -----------\r\n  (define-fun var1441 () var3280\r\n    var3280-INSTANCE)\r\n  (define-fun var1736 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var2468!1 \"Unable to create instance of \")\r\n          (cast-from-ClassObject-to-var482 (val$rawType/-1307551754 var3247)))\r\n        \". Registering an InstanceCreator or a TypeAdapter for this type, or adding a no-args constructor may fix this problem.\"))\r\n  (define-fun var623 () String\r\n    (append/-1031950772\r\n  (str.++ var2468!1 \"Unable to create instance of \")\r\n  (cast-from-ClassObject-to-var482 (val$rawType/-1307551754 var3247))))\r\n  (define-fun null-var3842 () var3842\r\n    var3842!val!1)\r\n  (define-fun null-var890 () var890\r\n    var890!val!1)\r\n  (define-fun var2062 () var890\r\n    var890!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2750 () ClassObject\r\n    (val$rawType/-1307551754 var3247))\r\n  (define-fun var2169 () String\r\n    (str.++ var2468!1 \"Unable to create instance of \"))\r\n  (define-fun var2169!1 () String\r\n    \"Unable to create instance of \")\r\n  (define-fun var3247 () var3842\r\n    var3842!val!0)\r\n  (define-fun var2096 () var1952\r\n    var1952-init)\r\n  (define-fun var2116 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var2468!1 \"Unable to create instance of \")\r\n          (cast-from-ClassObject-to-var482 (val$rawType/-1307551754 var3247)))\r\n        \". Registering an InstanceCreator or a TypeAdapter for this type, or adding a no-args constructor may fix this problem.\"))\r\n  (define-fun var2468 () String\r\n    String-init)\r\n  (define-fun var2468!2 () String\r\n    \"Unable to create instance of \")\r\n  (define-fun var2468!1 () String\r\n    \"\")\r\n  (define-fun var623!1 () String\r\n    \". Registering an InstanceCreator or a TypeAdapter for this type, or adding a no-args constructor may fix this problem.\")\r\n  (define-fun var2116!1 () String\r\n    \"\")\r\n  (define-fun var2062!1 () var890\r\n    var890!val!1)\r\n  (define-fun var1952-init () var1952\r\n    var1952!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3280-INSTANCE () var3280\r\n    var3280!val!0)\r\n  (define-fun var2096!1 () var1952\r\n    var1952!val!0)\r\n  (define-fun val$rawType/-1307551754 ((x!0 var3842)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun cast-from-ClassObject-to-var482 ((x!0 ClassObject)) var482\r\n    var482!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var482)) String\r\n    \"\")\r\n  (define-fun cast-from-var890-to-var3673 ((x!0 var890)) var3673\r\n    var3673!val!0)\r\n  (define-fun <init>/1642269841 ((x!0 var1952) (x!1 String) (x!2 var3673)) void\r\n    void!val!0)\r\n)\r\n(error \"line 62 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1667072,
            "run_time": 0.0300443172454834,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3842 is 2\r\n; rep: (as @var3842_0 var3842)\r\n; rep: (as @var3842_1 var3842)\r\n; cardinality of var3280 is 1\r\n; rep: (as @var3280_0 var3280)\r\n; cardinality of var890 is 2\r\n; rep: (as @var890_0 var890)\r\n; rep: (as @var890_1 var890)\r\n; cardinality of var1952 is 1\r\n; rep: (as @var1952_0 var1952)\r\n; cardinality of var482 is 1\r\n; rep: (as @var482_0 var482)\r\n; cardinality of var3673 is 1\r\n; rep: (as @var3673_0 var3673)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1952-init () var1952 (as @var1952_0 var1952))\r\n(define-fun String-init () String \"\")\r\n(define-fun val$rawType/-1307551754 ((BOUND_VARIABLE_957 var3842)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_960 String) (BOUND_VARIABLE_961 var482)) String \"\")\r\n(define-fun cast-from-ClassObject-to-var482 ((BOUND_VARIABLE_964 ClassObject)) var482 (as @var482_0 var482))\r\n(define-fun <init>/1642269841 ((BOUND_VARIABLE_967 var1952) (BOUND_VARIABLE_968 String) (BOUND_VARIABLE_969 var3673)) void (as @void_0 void))\r\n(define-fun cast-from-var890-to-var3673 ((BOUND_VARIABLE_972 var890)) var3673 (as @var3673_0 var3673))\r\n(define-fun null-var3842 () var3842 (as @var3842_0 var3842))\r\n(define-fun var3280-INSTANCE () var3280 (as @var3280_0 var3280))\r\n(define-fun null-var890 () var890 (as @var890_0 var890))\r\n(define-fun var3247 () var3842 (as @var3842_1 var3842))\r\n(define-fun var2062 () var890 (as @var890_1 var890))\r\n(define-fun var2468!1 () String \"\")\r\n(define-fun var2468!2 () String \"Unable to create instance of \")\r\n(define-fun var2169!1 () String \"Unable to create instance of \")\r\n(define-fun var623!1 () String \". Registering an InstanceCreator or a TypeAdapter for this type, or adding a no-args constructor may fix this problem.\")\r\n(define-fun var2096!1 () var1952 (as @var1952_0 var1952))\r\n(define-fun var2116!1 () String \"\")\r\n(define-fun var2062!1 () var890 (as @var890_0 var890))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36950016,
            "run_time": 0.048413991928100586,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var890:\n  ;;   var890!val!1 var890!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var890!val!1 () var890)\n  (declare-fun var890!val!0 () var890)\n  ;; cardinality constraint:\n  (forall ((x var890)) (or (= x var890!val!1) (= x var890!val!0)))\n  ;; -----------\n  ;; universe for var3842:\n  ;;   var3842!val!1 var3842!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3842!val!1 () var3842)\n  (declare-fun var3842!val!0 () var3842)\n  ;; cardinality constraint:\n  (forall ((x var3842)) (or (= x var3842!val!1) (= x var3842!val!0)))\n  ;; -----------\n  (define-fun var623 () String\n    (append/-1031950772\n  (str.++ var2468!1 \"Unable to create instance of \")\n  (cast-from-ClassObject-to-var482 (val$rawType/-1307551754 var3247))))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var3842 () var3842\n    var3842!val!1)\n  (define-fun null-var890 () var890\n    var890!val!1)\n  (define-fun var2062 () var890\n    var890!val!0)\n  (define-fun var2169 () String\n    (str.++ var2468!1 \"Unable to create instance of \"))\n  (define-fun var2096 () var1952\n    var1952-init)\n  (define-fun var623!1 () String\n    \". Registering an InstanceCreator or a TypeAdapter for this type, or adding a no-args constructor may fix this problem.\")\n  (define-fun var3247 () var3842\n    var3842!val!0)\n  (define-fun var1441 () var3280\n    var3280-INSTANCE)\n  (define-fun var2116 () String\n    (str.++ (append/-1031950772\n          (str.++ var2468!1 \"Unable to create instance of \")\n          (cast-from-ClassObject-to-var482 (val$rawType/-1307551754 var3247)))\n        \". Registering an InstanceCreator or a TypeAdapter for this type, or adding a no-args constructor may fix this problem.\"))\n  (define-fun var2169!1 () String\n    \"Unable to create instance of \")\n  (define-fun var2468 () String\n    String-init)\n  (define-fun var2750 () ClassObject\n    (val$rawType/-1307551754 var3247))\n  (define-fun var1736 () String\n    (str.++ (append/-1031950772\n          (str.++ var2468!1 \"Unable to create instance of \")\n          (cast-from-ClassObject-to-var482 (val$rawType/-1307551754 var3247)))\n        \". Registering an InstanceCreator or a TypeAdapter for this type, or adding a no-args constructor may fix this problem.\"))\n  (define-fun var2468!2 () String\n    \"Unable to create instance of \")\n  (define-fun var2468!1 () String\n    \"\")\n  (define-fun var2116!1 () String\n    \"\")\n  (define-fun var2062!1 () var890\n    var890!val!1)\n  (define-fun var1952-init () var1952\n    var1952!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3280-INSTANCE () var3280\n    var3280!val!0)\n  (define-fun var2096!1 () var1952\n    var1952!val!0)\n  (define-fun val$rawType/-1307551754 ((x!0 var3842)) ClassObject\n    ClassObject!val!0)\n  (define-fun cast-from-ClassObject-to-var482 ((x!0 ClassObject)) var482\n    var482!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var482)) String\n    \"\")\n  (define-fun cast-from-var890-to-var3673 ((x!0 var890)) var3673\n    var3673!val!0)\n  (define-fun <init>/1642269841 ((x!0 var1952) (x!1 String) (x!2 var3673)) void\n    void!val!0)\n)\n(error \"line 62 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168550400,
            "run_time": 0.8222320079803467,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var890/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.ConstructorConstructor$19__construct__-953176901\\71.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var623!1 =\r\n     concat(all_31_2, \". Registering an InstanceCreator or a TypeAdapter for this type, or adding a no-args constructor may fix this problem.\")\r\n\r\n604ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.ConstructorConstructor$19",
            "$r2 = <com.google.gson.internal.UnsafeAllocator: com.google.gson.internal.UnsafeAllocator INSTANCE>",
            "$r3 := @caughtexception",
            "$r4 = new java.lang.RuntimeException",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unable to create instance of \")",
            "$r6 = r0.<com.google.gson.internal.ConstructorConstructor$19: java.lang.Class val$rawType>",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\". Registering an InstanceCreator or a TypeAdapter for this type, or adding a no-args constructor may fix this problem.\")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>($r10, $r3)",
            "throw $r4"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\975.smt2",
        "z3": {
            "memory": 32591872,
            "run_time": 60.01322555541992,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1638400,
            "run_time": 0.0459141731262207,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var307 is 1\r\n; rep: (as @var307_0 var307)\r\n; cardinality of var3255 is 2\r\n; rep: (as @var3255_0 var3255)\r\n; rep: (as @var3255_1 var3255)\r\n; cardinality of var2469 is 2\r\n; rep: (as @var2469_0 var2469)\r\n; rep: (as @var2469_1 var2469)\r\n; cardinality of var2930 is 1\r\n; rep: (as @var2930_0 var2930)\r\n; cardinality of var3837 is 1\r\n; rep: (as @var3837_0 var3837)\r\n; cardinality of var3174 is 1\r\n; rep: (as @var3174_0 var3174)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var2469-to-var2930 ((_arg_1 var2469)) var2930 (as @var2930_0 var2930))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((_arg_1 String) (_arg_2 Int)) String \"\")\r\n(define-fun getMessage/849299655 ((_arg_1 var3837)) String \"A\")\r\n(define-fun cast-from-var2930-to-var3837 ((_arg_1 var2930)) var3837 (as @var3837_0 var3837))\r\n(define-fun var3174-init () var3174 (as @var3174_0 var3174))\r\n(define-fun getIndex/-2136393185 ((BOUND_VARIABLE_1216 var3255)) Int 0)\r\n(define-fun <init>/1495607482 ((BOUND_VARIABLE_1219 var3174) (BOUND_VARIABLE_1220 String) (BOUND_VARIABLE_1221 Int)) void (as @void_0 void))\r\n(define-fun initCause/2003336360 ((BOUND_VARIABLE_1224 var3837) (BOUND_VARIABLE_1225 var3837)) var3837 (as @var3837_0 var3837))\r\n(define-fun cast-from-var3174-to-var3837 ((BOUND_VARIABLE_1228 var3174)) var3837 (as @var3837_0 var3837))\r\n(define-fun null-String () String \"B\")\r\n(define-fun null-var3255 () var3255 (as @var3255_0 var3255))\r\n(define-fun null-var2469 () var2469 (as @var2469_0 var2469))\r\n(define-fun var1704 () String \"\")\r\n(define-fun var2028 () var3255 (as @var3255_1 var3255))\r\n(define-fun var1938 () var2469 (as @var2469_1 var2469))\r\n(define-fun var2870!1 () String \"\")\r\n(define-fun var2870!2 () String \"\")\r\n(define-fun var675!1 () String \"\")\r\n(define-fun var423!1 () String \"\")\r\n(define-fun var3011!1 () String \"\")\r\n(define-fun var3011!2 () String \"Failed to parse date [\")\r\n(define-fun var2434!1 () String \"Failed to parse date [\")\r\n(define-fun var2942!1 () String \"Failed to parse date []: \")\r\n(define-fun var3112!1 () String \"Failed to parse date []: A\")\r\n(define-fun var3816!1 () var3174 (as @var3174_0 var3174))\r\n(define-fun var184!1 () String \"\")\r\n(define-fun var43!1 () Int 0)\r\n(define-fun var3816!2 () var3174 (as @var3174_0 var3174))\r\n(define-fun var2895!1 () var2930 (as @var2930_0 var2930))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36581376,
            "run_time": 0.04727911949157715,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 111 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 112 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 201560064,
            "run_time": 0.9435844421386719,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3255/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\975.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3112!1 =\r\n     concat(all_46_9, all_22_0)\r\n   var2942!1 =\r\n     concat(all_43_5, \"]: \")\r\n   all_46_12 =\r\n     concat(all_27_2, var1704)\r\n   all_43_7 =\r\n     concat(all_27_2, var1704)\r\n   all_40_5 =\r\n     concat(all_27_2, var1704)\r\n   var675!1 =\r\n     concat(all_27_2, var1704)\r\n   var2434!1 =\r\n     concat(\"Failed to parse date [\", all_40_4)\r\n   var423!1 =\r\n     concat(all_37_2, rhs)\r\n   all_46_9 =\r\n     concat(all_46_10, \"]: \")\r\n   all_37_2 =\r\n     concat(all_27_2, var1704)\r\n   all_43_5 =\r\n     concat(\"Failed to parse date [\", all_43_6)\r\n   all_46_10 =\r\n     concat(\"Failed to parse date [\", all_46_11)\r\n\r\n711ms\r\n"
        },
        "undefined_function_count": 10,
        "assertion_count": 34,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: boolean isEmpty()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 5,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2,
            "<java.lang.String: boolean isEmpty()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.text.ParsePosition",
            "$r45 := @caughtexception",
            "r49 = $r45",
            "goto [?= (branch)]",
            "if r1 != null goto $r69 = new java.lang.StringBuilder",
            "$r69 = new java.lang.StringBuilder",
            "specialinvoke $r69.<java.lang.StringBuilder: void <init>()>()",
            "$r34 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34)",
            "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34)",
            "$r50 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()",
            "r51 = $r50",
            "$r43 = virtualinvoke r49.<java.lang.Exception: java.lang.String getMessage()>()",
            "r52 = $r43",
            "if $r43 == null goto $r70 = new java.lang.StringBuilder",
            "$z9 = virtualinvoke $r43.<java.lang.String: boolean isEmpty()>()",
            "if $z9 == 0 goto $r72 = new java.text.ParseException",
            "$r72 = new java.text.ParseException",
            "$r71 = new java.lang.StringBuilder",
            "specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()",
            "$r55 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to parse date [\")",
            "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51)",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: \")",
            "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52)",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i31 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "specialinvoke $r72.<java.text.ParseException: void <init>(java.lang.String,int)>($r59, $i31)",
            "virtualinvoke $r72.<java.text.ParseException: java.lang.Throwable initCause(java.lang.Throwable)>(r49)",
            "throw $r72"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.reflect.TypeToken__buildUnexpectedTypeError__1965280446\\294.smt2",
        "z3": {
            "memory": 32722944,
            "run_time": 60.00830554962158,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12423168,
            "run_time": 0.029469966888427734,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2542 is 1\r\n; rep: (as @var2542_0 var2542)\r\n; cardinality of var2690 is 1\r\n; rep: (as @var2690_0 var2690)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 5\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n; rep: (as @ClassObject_2 ClassObject)\r\n; rep: (as @ClassObject_3 ClassObject)\r\n; rep: (as @ClassObject_4 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getLength-Arr-ClassObject-1 ((_arg_1 (Array Int ClassObject))) Int 0)\r\n(define-fun getClass/1258963082 ((_arg_1 var2542)) ClassObject (as @ClassObject_2 ClassObject))\r\n(define-fun cast-from-ClassObject-to-var2542 ((_arg_1 ClassObject)) var2542 (as @var2542_0 var2542))\r\n(define-fun getName/-1958580599 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun toString/-522406933 ((_arg_1 var2542)) String \"\")\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_1330 String) (BOUND_VARIABLE_1331 Int)) String \"\")\r\n(define-fun var2690-init () var2690 (as @var2690_0 var2690))\r\n(define-fun <init>/582965326 ((BOUND_VARIABLE_1334 var2690) (BOUND_VARIABLE_1335 var2542)) void (as @void_0 void))\r\n(define-fun cast-from-String-to-var2542 ((BOUND_VARIABLE_1338 String)) var2542 (as @var2542_0 var2542))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-__Array__Int__ClassObject__ () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_1 ClassObject)) 0 (as @ClassObject_3 ClassObject)))\r\n(define-fun var2555 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var3057 () (Array Int ClassObject) (store ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)) 0 (as @ClassObject_4 ClassObject)))\r\n(define-fun var3!1 () String \"Unexpected type. Expected one of: \")\r\n(define-fun var3!2 () String \"Unexpected type. Expected one of: but got: \")\r\n(define-fun var3325!1 () String \"Unexpected type. Expected one of: but got: \")\r\n(define-fun var311!1 () String \"Unexpected type. Expected one of: but got: , for type token: \")\r\n(define-fun var328!1 () String \"Unexpected type. Expected one of: but got: , for type token: \")\r\n(define-fun var1220!1 () String \"Unexpected type. Expected one of: but got: , for type token: \")\r\n(define-fun var861!1 () var2690 (as @var2690_0 var2690))\r\n(define-fun var2984!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36532224,
            "run_time": 0.04662942886352539,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 74 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 75 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175616000,
            "run_time": 0.9299674034118652,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: ClassObject/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.reflect.TypeToken__buildUnexpectedTypeError__1965280446\\294.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var311!1 =\r\n     concat(all_29_4, \", for type token: \")\r\n   var328!1 =\r\n     concat(all_20_4, all_20_2)\r\n   var3325!1 =\r\n     concat(\"Unexpected type. Expected one of: but got: \", all_26_3)\r\n   var1220!1 =\r\n     concat(all_23_2, rhs)\r\n   all_23_2 =\r\n     concat(all_20_4, all_20_2)\r\n   all_29_4 =\r\n     concat(\"Unexpected type. Expected one of: but got: \", all_26_3)\r\n   all_20_4 =\r\n     concat(all_32_5, \", for type token: \")\r\n   all_32_5 =\r\n     concat(\"Unexpected type. Expected one of: but got: \", all_26_3)\r\n\r\n697ms\r\n"
        },
        "undefined_function_count": 10,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.Object: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.reflect.Type",
            "r1 := @parameter1: java.lang.Class[]",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"Unexpected type. Expected one of: \")",
            "i0 = lengthof r1",
            "i1 = 0",
            "if i1 >= i0 goto $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"but got: \")",
            "$r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"but got: \")",
            "$r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>()",
            "$r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4)",
            "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\", for type token: \")",
            "$r7 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46)",
            "$r10 = new java.lang.AssertionError",
            "$r11 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r10.<java.lang.AssertionError: void <init>(java.lang.Object)>($r11)",
            "return $r10"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.reflect.TypeToken__getParameterized__846833384\\446.smt2",
        "z3": {
            "memory": 9306112,
            "run_time": 0.07424139976501465,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 58 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.015156984329223633,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35917824,
            "run_time": 0.04680776596069336,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 58 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 151855104,
            "run_time": 0.7129421234130859,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.reflect.Type",
            "r1 := @parameter1: java.lang.reflect.Type[]",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r0)",
            "staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(r1)",
            "$z0 = r0 instanceof java.lang.Class",
            "if $z0 != 0 goto r2 = (java.lang.Class) r0",
            "$r30 = new java.lang.IllegalArgumentException",
            "$r31 = new java.lang.StringBuilder",
            "specialinvoke $r31.<java.lang.StringBuilder: void <init>()>()",
            "$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"rawType must be of type Class, but was \")",
            "$r33 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)",
            "$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r30.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r34)",
            "throw $r30"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter__read__-1970280496\\895.smt2",
        "z3": {
            "memory": 32129024,
            "run_time": 60.01098346710205,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12607488,
            "run_time": 0.02909374237060547,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2295 is 2\r\n; rep: (as @var2295_0 var2295)\r\n; rep: (as @var2295_1 var2295)\r\n; cardinality of var197 is 4\r\n; rep: (as @var197_0 var197)\r\n; rep: (as @var197_1 var197)\r\n; rep: (as @var197_2 var197)\r\n; rep: (as @var197_3 var197)\r\n; cardinality of var2271 is 3\r\n; rep: (as @var2271_0 var2271)\r\n; rep: (as @var2271_1 var2271)\r\n; rep: (as @var2271_2 var2271)\r\n; cardinality of var3658 is 1\r\n; rep: (as @var3658_0 var3658)\r\n; cardinality of var3165 is 5\r\n; rep: (as @var3165_0 var3165)\r\n; rep: (as @var3165_1 var3165)\r\n; rep: (as @var3165_2 var3165)\r\n; rep: (as @var3165_3 var3165)\r\n; rep: (as @var3165_4 var3165)\r\n; cardinality of var2781 is 1\r\n; rep: (as @var2781_0 var2781)\r\n; cardinality of var1957 is 1\r\n; rep: (as @var1957_0 var1957)\r\n; cardinality of var1629 is 2\r\n; rep: (as @var1629_0 var1629)\r\n; rep: (as @var1629_1 var1629)\r\n; cardinality of var1687 is 1\r\n; rep: (as @var1687_0 var1687)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-699404472 ((_arg_1 var197)) var2271 (as @var2271_2 var2271))\r\n(define-fun constructor/220257121 ((_arg_1 var2295)) var3658 (as @var3658_0 var3658))\r\n(define-fun var3658_construct/786007884 ((_arg_1 var3658)) var3165 (as @var3165_1 var3165))\r\n(define-fun cast-from-var3165-to-var2781 ((_arg_1 var3165)) var2781 (as @var2781_0 var2781))\r\n(define-fun beginObject/803465945 ((BOUND_VARIABLE_1138 var197)) void (as @void_0 void))\r\n(define-fun hasNext/1315043792 ((_arg_1 var197)) Bool true)\r\n(define-fun promoteNameToValue/836481334 ((BOUND_VARIABLE_1141 var1957) (BOUND_VARIABLE_1142 var197)) void (as @void_0 void))\r\n(define-fun keyTypeAdapter/220257121 ((_arg_1 var2295)) var1629 (as @var1629_0 var1629))\r\n(define-fun read/91428458 ((_arg_1 var1629) (_arg_2 var197)) var3165 (ite (= (as @var1629_1 var1629) _arg_1) (ite (= (as @var197_3 var197) _arg_2) (as @var3165_3 var3165) (as @var3165_2 var3165)) (as @var3165_2 var3165)))\r\n(define-fun valueTypeAdapter/220257121 ((_arg_1 var2295)) var1629 (as @var1629_1 var1629))\r\n(define-fun var2781_put/1464166817 ((_arg_1 var2781) (_arg_2 var3165) (_arg_3 var3165)) var3165 (as @var3165_4 var3165))\r\n(define-fun var1687-init () var1687 (as @var1687_0 var1687))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1145 String) (BOUND_VARIABLE_1146 var3165)) String \"\")\r\n(define-fun <init>/303326391 ((BOUND_VARIABLE_1149 var1687) (BOUND_VARIABLE_1150 String)) void (as @void_0 void))\r\n(define-fun null-var2295 () var2295 (as @var2295_0 var2295))\r\n(define-fun null-var197 () var197 (as @var197_0 var197))\r\n(define-fun var2271-NULL () var2271 (as @var2271_0 var2271))\r\n(define-fun var2271-BEGIN_ARRAY () var2271 (as @var2271_1 var2271))\r\n(define-fun var1957-INSTANCE () var1957 (as @var1957_0 var1957))\r\n(define-fun null-var3165 () var3165 (as @var3165_0 var3165))\r\n(define-fun var1804 () var2295 (as @var2295_1 var2295))\r\n(define-fun var269 () var197 (as @var197_1 var197))\r\n(define-fun var269!1 () var197 (as @var197_2 var197))\r\n(define-fun var3300!1 () var1957 (as @var1957_0 var1957))\r\n(define-fun var269!2 () var197 (as @var197_3 var197))\r\n(define-fun var3243!1 () String \"\")\r\n(define-fun var3243!2 () String \"duplicate key: \")\r\n(define-fun var3847!1 () String \"duplicate key: \")\r\n(define-fun var213!1 () var1687 (as @var1687_0 var1687))\r\n(define-fun var3115!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36884480,
            "run_time": 60.009827613830566,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 195149824,
            "run_time": 1.0572092533111572,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3847!1 () String \"duplicate key: \")\r\n  (define-fun var3243!2 () String \"duplicate key: \")\r\n  (define-fun var3243!1 () String \"\")\r\n  (define-fun var269!2 () var197 var197!18)\r\n  (define-fun var269!1 () var197 var197!16)\r\n  (define-fun var269 () var197 var197!14)\r\n  (define-fun var1804 () var2295 var2295!12)\r\n  (define-fun null-var3165 () var3165 var3165!10)\r\n  (define-fun var2271-BEGIN_ARRAY () var2271 var2271!8)\r\n  (define-fun var2271-NULL () var2271 var2271!6)\r\n  (define-fun null-var197 () var197 var197!4)\r\n  (define-fun null-var2295 () var2295 var2295!2)\r\n  (define-fun var3165!60 () var3165 (var2781_put/1464166817 var2781!50 var3165!54 var3165!58))\r\n  (define-fun var1629!56 () var1629 (valueTypeAdapter/220257121 var2295!12))\r\n  (define-fun var3165!58 () var3165 (read/91428458 var1629!56 var197!18))\r\n  (define-fun var3165!54 () var3165 (read/91428458 var1629!52 var197!18))\r\n  (define-fun var1629!52 () var1629 (keyTypeAdapter/220257121 var2295!12))\r\n  (define-fun var2781!50 () var2781 (cast-from-var3165-to-var2781 var3165!48))\r\n  (define-fun var3165!48 () var3165 (var3658_construct/786007884 var3658!46))\r\n  (define-fun var3658!46 () var3658 (constructor/220257121 var2295!12))\r\n  (define-fun var2271!44 () var2271 (peek/-699404472 var197!14))\r\n  (define-fun hasNext/1315043792 ((x!0 var197)) Bool (ite (= x!0 var197!16) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 15,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @this: com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter",
            "r0 := @parameter0: com.google.gson.stream.JsonReader",
            "r1 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>()",
            "$r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL>",
            "if r1 != $r2 goto $r4 = r3.<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.internal.ObjectConstructor constructor>",
            "$r4 = r3.<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.internal.ObjectConstructor constructor>",
            "$r5 = interfaceinvoke $r4.<com.google.gson.internal.ObjectConstructor: java.lang.Object construct()>()",
            "r6 = (java.util.Map) $r5",
            "$r7 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_ARRAY>",
            "if r1 != $r7 goto virtualinvoke r0.<com.google.gson.stream.JsonReader: void beginObject()>()",
            "virtualinvoke r0.<com.google.gson.stream.JsonReader: void beginObject()>()",
            "$z0 = virtualinvoke r0.<com.google.gson.stream.JsonReader: boolean hasNext()>()",
            "if $z0 == 0 goto virtualinvoke r0.<com.google.gson.stream.JsonReader: void endObject()>()",
            "$r8 = <com.google.gson.internal.JsonReaderInternalAccess: com.google.gson.internal.JsonReaderInternalAccess INSTANCE>",
            "virtualinvoke $r8.<com.google.gson.internal.JsonReaderInternalAccess: void promoteNameToValue(com.google.gson.stream.JsonReader)>(r0)",
            "$r9 = r3.<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.TypeAdapter keyTypeAdapter>",
            "r26 = virtualinvoke $r9.<com.google.gson.TypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>(r0)",
            "$r10 = r3.<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.TypeAdapter valueTypeAdapter>",
            "r27 = virtualinvoke $r10.<com.google.gson.TypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>(r0)",
            "r28 = interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r26, r27)",
            "if r28 == null goto (branch)",
            "$r11 = new com.google.gson.JsonSyntaxException",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"duplicate key: \")",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r26)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r11.<com.google.gson.JsonSyntaxException: void <init>(java.lang.String)>($r15)",
            "throw $r11"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.ReflectiveTypeAdapterFactory__create__759398203\\786.smt2",
        "z3": {
            "memory": 32657408,
            "run_time": 60.00582838058472,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9560064,
            "run_time": 0.0469968318939209,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3636 is 2\r\n; rep: (as @var3636_0 var3636)\r\n; rep: (as @var3636_1 var3636)\r\n; cardinality of var3232 is 2\r\n; rep: (as @var3232_0 var3232)\r\n; rep: (as @var3232_1 var3232)\r\n; cardinality of var888 is 2\r\n; rep: (as @var888_0 var888)\r\n; rep: (as @var888_1 var888)\r\n; cardinality of var3625 is 1\r\n; rep: (as @var3625_0 var3625)\r\n; cardinality of var1052 is 1\r\n; rep: (as @var1052_0 var1052)\r\n; cardinality of var2161 is 1\r\n; rep: (as @var2161_0 var2161)\r\n; cardinality of var2512 is 1\r\n; rep: (as @var2512_0 var2512)\r\n; cardinality of var2465 is 1\r\n; rep: (as @var2465_0 var2465)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var3625!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getRawType/-1972956808 ((_arg_1 var888)) ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun isAssignableFrom/-1028998700 ((_arg_1 ClassObject) (_arg_2 ClassObject)) Bool true)\r\n(define-fun reflectionFilters/-1188528757 ((BOUND_VARIABLE_1059 var3636)) var1052 (as @var1052_0 var1052))\r\n(define-fun var2512_getFilterResult/1273822438 ((BOUND_VARIABLE_1062 var1052) (BOUND_VARIABLE_1063 ClassObject)) var2161 (as @var2161_0 var2161))\r\n(define-fun var2465-init () var2465 (as @var2465_0 var2465))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1066 String) (BOUND_VARIABLE_1067 var3625)) String \"\")\r\n(define-fun cast-from-ClassObject-to-var3625 ((BOUND_VARIABLE_1070 ClassObject)) var3625 (as @var3625_0 var3625))\r\n(define-fun <init>/-1993171084 ((BOUND_VARIABLE_1073 var2465) (BOUND_VARIABLE_1074 String)) void (as @void_0 void))\r\n(define-fun null-var3636 () var3636 (as @var3636_0 var3636))\r\n(define-fun null-var3232 () var3232 (as @var3232_0 var3232))\r\n(define-fun null-var888 () var888 (as @var888_0 var888))\r\n(define-fun var2161-BLOCK_ALL () var2161 (as @var2161_0 var2161))\r\n(define-fun var2672 () var3636 (as @var3636_1 var3636))\r\n(define-fun var884 () var3232 (as @var3232_1 var3232))\r\n(define-fun var1820 () var888 (as @var888_1 var888))\r\n(define-fun var2615!1 () String \"\")\r\n(define-fun var2615!2 () String \"ReflectionAccessFilter does not permit using reflection for \")\r\n(define-fun var306!1 () String \"ReflectionAccessFilter does not permit using reflection for \")\r\n(define-fun var2767!1 () String \". Register a TypeAdapter for this type or adjust the access filter.\")\r\n(define-fun var1569!1 () var2465 (as @var2465_0 var2465))\r\n(define-fun var1225!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37433344,
            "run_time": 60.00878572463989,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182824960,
            "run_time": 1.0114803314208984,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3232/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.ReflectiveTypeAdapterFactory__create__759398203\\786.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2767!1 =\r\n     concat(all_39_2, \". Register a TypeAdapter for this type or adjust the access filter.\")\r\n\r\n778ms\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @this: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory",
            "r10 := @parameter0: com.google.gson.Gson",
            "r0 := @parameter1: com.google.gson.reflect.TypeToken",
            "r1 = virtualinvoke r0.<com.google.gson.reflect.TypeToken: java.lang.Class getRawType()>()",
            "$r2 = class \"Ljava/lang/Object;\"",
            "$z0 = virtualinvoke $r2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r1)",
            "if $z0 != 0 goto $r4 = r3.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: java.util.List reflectionFilters>",
            "$r4 = r3.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory: java.util.List reflectionFilters>",
            "r5 = staticinvoke <com.google.gson.internal.ReflectionAccessFilterHelper: com.google.gson.ReflectionAccessFilter$FilterResult getFilterResult(java.util.List,java.lang.Class)>($r4, r1)",
            "$r6 = <com.google.gson.ReflectionAccessFilter$FilterResult: com.google.gson.ReflectionAccessFilter$FilterResult BLOCK_ALL>",
            "if r5 != $r6 goto $r7 = <com.google.gson.ReflectionAccessFilter$FilterResult: com.google.gson.ReflectionAccessFilter$FilterResult BLOCK_INACCESSIBLE>",
            "$r14 = new com.google.gson.JsonIOException",
            "$r15 = new java.lang.StringBuilder",
            "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"ReflectionAccessFilter does not permit using reflection for \")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\". Register a TypeAdapter for this type or adjust the access filter.\")",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r14.<com.google.gson.JsonIOException: void <init>(java.lang.String)>($r19)",
            "throw $r14"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter__readField__-1763930162\\468.smt2",
        "z3": {
            "memory": 32104448,
            "run_time": 60.004074811935425,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9445376,
            "run_time": 0.030649185180664062,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1243 is 2\r\n; rep: (as @var1243_0 var1243)\r\n; rep: (as @var1243_1 var1243)\r\n; cardinality of var2080 is 2\r\n; rep: (as @var2080_0 var2080)\r\n; rep: (as @var2080_1 var2080)\r\n; cardinality of var502 is 2\r\n; rep: (as @var502_0 var502)\r\n; rep: (as @var502_1 var502)\r\n; cardinality of var707 is 2\r\n; rep: (as @var707_0 var707)\r\n; rep: (as @var707_1 var707)\r\n; cardinality of var3171 is 1\r\n; rep: (as @var3171_0 var3171)\r\n; cardinality of var2198 is 1\r\n; rep: (as @var2198_0 var2198)\r\n; cardinality of var1963 is 1\r\n; rep: (as @var1963_0 var1963)\r\n; cardinality of var3738 is 1\r\n; rep: (as @var3738_0 var3738)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun componentIndices/-339183035 ((BOUND_VARIABLE_713 var1243)) var3171 (as @var3171_0 var3171))\r\n(define-fun fieldName/-2124946699 ((BOUND_VARIABLE_716 var707)) String \"\")\r\n(define-fun var3171_get/1088891777 ((BOUND_VARIABLE_719 var3171) (BOUND_VARIABLE_720 var2080)) var2080 (as @var2080_0 var2080))\r\n(define-fun cast-from-String-to-var2080 ((BOUND_VARIABLE_723 String)) var2080 (as @var2080_0 var2080))\r\n(define-fun cast-from-var2080-to-Int ((BOUND_VARIABLE_726 var2080)) Int 0)\r\n(define-fun var2198-init () var2198 (as @var2198_0 var2198))\r\n(define-fun String-init () String \"\")\r\n(define-fun constructor/-339183035 ((BOUND_VARIABLE_729 var1243)) var1963 (as @var1963_0 var1963))\r\n(define-fun var3738_constructorToString/1631520055 ((BOUND_VARIABLE_732 var1963)) String \"\")\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_735 var2198) (BOUND_VARIABLE_736 String)) void (as @void_0 void))\r\n(define-fun null-var1243 () var1243 (as @var1243_0 var1243))\r\n(define-fun null-__Array__Int__var2080__ () (Array Int var2080) (store ((as const (Array Int var2080)) (as @var2080_1 var2080)) 0 (as @var2080_0 var2080)))\r\n(define-fun null-var502 () var502 (as @var502_0 var502))\r\n(define-fun null-var707 () var707 (as @var707_0 var707))\r\n(define-fun null-Int () Int 0)\r\n(define-fun var2779 () var1243 (as @var1243_1 var1243))\r\n(define-fun var3817 () (Array Int var2080) (store ((as const (Array Int var2080)) (as @var2080_0 var2080)) 0 (as @var2080_1 var2080)))\r\n(define-fun var954 () var502 (as @var502_1 var502))\r\n(define-fun var1355 () var707 (as @var707_1 var707))\r\n(define-fun var383!1 () String \"\")\r\n(define-fun var383!2 () String \"Could not find the index in the constructor '\")\r\n(define-fun var1787!1 () String \"Could not find the index in the constructor '\")\r\n(define-fun var2817!1 () String \"Could not find the index in the constructor '' for field with name '\")\r\n(define-fun var2456!1 () String \"Could not find the index in the constructor '' for field with name '\")\r\n(define-fun var354!1 () String \"Could not find the index in the constructor '' for field with name '', unable to determine which argument in the constructor the field corresponds to. This is unexpected behavior, as we expect the RecordComponents to have the same names as the fields in the Java class, and that the order of the RecordComponents is the same as the order of the canonical constructor parameters.\")\r\n(define-fun var2193!1 () var2198 (as @var2198_0 var2198))\r\n(define-fun var1759!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35819520,
            "run_time": 60.00862646102905,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 222720000,
            "run_time": 1.1355648040771484,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var707/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter__readField__-1763930162\\468.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2817!1 =\r\n     concat(all_47_3, \"\\u{0}27 for field with name \\u{0}27\")\r\n   var354!1 =\r\n     concat(all_41_3, \"\\u{0}27, unable to determine which argument in the constructor the field corresponds to. This is unexpected behavior, as we expect the RecordComponents to have the same names as the fields in the Java class, and that the order of the RecordComponents is the same as the order of the canonical constructor parameters.\")\r\n   var2456!1 =\r\n     concat(all_35_3, all_29_2)\r\n   var1787!1 =\r\n     concat(\"Could not find the index in the constructor \\u{0}27\", all_38_2)\r\n   all_35_3 =\r\n     concat(all_73_3, \"\\u{0}27 for field with name \\u{0}27\")\r\n   all_41_3 =\r\n     concat(all_41_5, all_29_2)\r\n   all_47_3 =\r\n     concat(\"Could not find the index in the constructor \\u{0}27\", all_38_2)\r\n   all_41_5 =\r\n     concat(all_70_3, \"\\u{0}27 for field with name \\u{0}27\")\r\n   all_73_3 =\r\n     concat(\"Could not find the index in the constructor \\u{0}27\", all_38_2)\r\n   all_70_3 =\r\n     concat(\"Could not find the index in the constructor \\u{0}27\", all_38_2)\r\n\r\n893ms\r\n"
        },
        "undefined_function_count": 10,
        "assertion_count": 19,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 5,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter",
            "r7 := @parameter0: java.lang.Object[]",
            "r6 := @parameter1: com.google.gson.stream.JsonReader",
            "r1 := @parameter2: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField",
            "$r3 = r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter: java.util.Map componentIndices>",
            "$r2 = r1.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField: java.lang.String fieldName>",
            "$r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2)",
            "r5 = (java.lang.Integer) $r4",
            "if r5 != null goto $i0 = virtualinvoke r5.<java.lang.Integer: int intValue()>()",
            "$r8 = new java.lang.IllegalStateException",
            "$r9 = new java.lang.StringBuilder",
            "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()",
            "$r12 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not find the index in the constructor \\'\")",
            "$r10 = r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter: java.lang.reflect.Constructor constructor>",
            "$r11 = staticinvoke <com.google.gson.internal.reflect.ReflectionHelper: java.lang.String constructorToString(java.lang.reflect.Constructor)>($r10)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)",
            "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' for field with name \\'\")",
            "$r14 = r1.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField: java.lang.String fieldName>",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\', unable to determine which argument in the constructor the field corresponds to. This is unexpected behavior, as we expect the RecordComponents to have the same names as the fields in the Java class, and that the order of the RecordComponents is the same as the order of the canonical constructor parameters.\")",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r18)",
            "throw $r8"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.TypeAdapters$14__write__1404017135\\741.smt2",
        "z3": {
            "memory": 30855168,
            "run_time": 0.058939218521118164,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2860:\r\n  ;;   var2860!val!0 var2860!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2860!val!0 () var2860)\r\n  (declare-fun var2860!val!1 () var2860)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2860)) (or (= x var2860!val!0) (= x var2860!val!1)))\r\n  ;; -----------\r\n  ;; universe for var218:\r\n  ;;   var218!val!0 var218!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var218!val!0 () var218)\r\n  (declare-fun var218!val!1 () var218)\r\n  ;; cardinality constraint:\r\n  (forall ((x var218)) (or (= x var218!val!0) (= x var218!val!1)))\r\n  ;; -----------\r\n  ;; universe for var759:\r\n  ;;   var759!val!0 var759!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var759!val!0 () var759)\r\n  (declare-fun var759!val!1 () var759)\r\n  ;; cardinality constraint:\r\n  (forall ((x var759)) (or (= x var759!val!0) (= x var759!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var759 () var759\r\n    var759!val!1)\r\n  (define-fun var96 () var2860\r\n    var2860!val!0)\r\n  (define-fun null-var2860 () var2860\r\n    var2860!val!1)\r\n  (define-fun var2956 () String\r\n    (String_valueOf/-333372740 (cast-from-var2860-to-var3940 var96)))\r\n  (define-fun var3749 () var759\r\n    var759!val!0)\r\n  (define-fun var1344 () var218\r\n    var218!val!0)\r\n  (define-fun null-var218 () var218\r\n    var218!val!1)\r\n  (define-fun var3749!1 () var759\r\n    var759!val!0)\r\n  (define-fun var2956!1 () String\r\n    \"\")\r\n  (define-fun String_valueOf/-333372740 ((x!0 var3940)) String\r\n    \"\")\r\n  (define-fun value/-601914565 ((x!0 var759) (x!1 String)) var759\r\n    var759!val!0)\r\n  (define-fun cast-from-var2860-to-var3940 ((x!0 var2860)) var3940\r\n    var3940!val!0)\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.046158552169799805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var218 is 2\r\n; rep: (as @var218_0 var218)\r\n; rep: (as @var218_1 var218)\r\n; cardinality of var759 is 2\r\n; rep: (as @var759_0 var759)\r\n; rep: (as @var759_1 var759)\r\n; cardinality of var2860 is 2\r\n; rep: (as @var2860_0 var2860)\r\n; rep: (as @var2860_1 var2860)\r\n; cardinality of var3940 is 1\r\n; rep: (as @var3940_0 var3940)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_439 var3940)) String \"\")\r\n(define-fun cast-from-var2860-to-var3940 ((BOUND_VARIABLE_442 var2860)) var3940 (as @var3940_0 var3940))\r\n(define-fun value/-601914565 ((BOUND_VARIABLE_445 var759) (BOUND_VARIABLE_446 String)) var759 (as @var759_0 var759))\r\n(define-fun null-var218 () var218 (as @var218_0 var218))\r\n(define-fun null-var759 () var759 (as @var759_0 var759))\r\n(define-fun null-var2860 () var2860 (as @var2860_0 var2860))\r\n(define-fun var1344 () var218 (as @var218_1 var218))\r\n(define-fun var3749 () var759 (as @var759_1 var759))\r\n(define-fun var96 () var2860 (as @var2860_1 var2860))\r\n(define-fun var3749!1 () var759 (as @var759_0 var759))\r\n(define-fun var2956!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35397632,
            "run_time": 0.062163352966308594,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2860:\n  ;;   var2860!val!0 var2860!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2860!val!0 () var2860)\n  (declare-fun var2860!val!1 () var2860)\n  ;; cardinality constraint:\n  (forall ((x var2860)) (or (= x var2860!val!0) (= x var2860!val!1)))\n  ;; -----------\n  ;; universe for var218:\n  ;;   var218!val!0 var218!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var218!val!0 () var218)\n  (declare-fun var218!val!1 () var218)\n  ;; cardinality constraint:\n  (forall ((x var218)) (or (= x var218!val!0) (= x var218!val!1)))\n  ;; -----------\n  ;; universe for var759:\n  ;;   var759!val!0 var759!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var759!val!0 () var759)\n  (declare-fun var759!val!1 () var759)\n  ;; cardinality constraint:\n  (forall ((x var759)) (or (= x var759!val!0) (= x var759!val!1)))\n  ;; -----------\n  (define-fun null-var759 () var759\n    var759!val!1)\n  (define-fun var96 () var2860\n    var2860!val!0)\n  (define-fun null-var2860 () var2860\n    var2860!val!1)\n  (define-fun var2956 () String\n    (String_valueOf/-333372740 (cast-from-var2860-to-var3940 var96)))\n  (define-fun var3749 () var759\n    var759!val!0)\n  (define-fun var1344 () var218\n    var218!val!0)\n  (define-fun null-var218 () var218\n    var218!val!1)\n  (define-fun var3749!1 () var759\n    var759!val!0)\n  (define-fun var2956!1 () String\n    \"\")\n  (define-fun String_valueOf/-333372740 ((x!0 var3940)) String\n    \"\")\n  (define-fun value/-601914565 ((x!0 var759) (x!1 String)) var759\n    var759!val!0)\n  (define-fun cast-from-var2860-to-var3940 ((x!0 var2860)) var3940\n    var3940!val!0)\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140464128,
            "run_time": 0.7747879028320312,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var96 () var2860 var2860!12)\r\n  (define-fun var3749 () var759 var759!10)\r\n  (define-fun var1344 () var218 var218!8)\r\n  (define-fun null-var2860 () var2860 var2860!6)\r\n  (define-fun null-var759 () var759 var759!4)\r\n  (define-fun null-var218 () var218 var218!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r2 := @this: com.google.gson.internal.bind.TypeAdapters$14",
            "r0 := @parameter0: com.google.gson.stream.JsonWriter",
            "r1 := @parameter1: java.lang.Character",
            "if r1 != null goto $r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "virtualinvoke r0.<com.google.gson.stream.JsonWriter: com.google.gson.stream.JsonWriter value(java.lang.String)>($r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter__read__-1970280496\\906.smt2",
        "z3": {
            "memory": 32309248,
            "run_time": 0.07549405097961426,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3495:\r\n  ;;   var3495!val!1 var3495!val!0 var3495!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3495!val!1 () var3495)\r\n  (declare-fun var3495!val!0 () var3495)\r\n  (declare-fun var3495!val!2 () var3495)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3495))\r\n          (or (= x var3495!val!1) (= x var3495!val!0) (= x var3495!val!2)))\r\n  ;; -----------\r\n  ;; universe for var1005:\r\n  ;;   var1005!val!0 var1005!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1005!val!0 () var1005)\r\n  (declare-fun var1005!val!1 () var1005)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1005)) (or (= x var1005!val!0) (= x var1005!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2226:\r\n  ;;   var2226!val!2 var2226!val!0 var2226!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2226!val!2 () var2226)\r\n  (declare-fun var2226!val!0 () var2226)\r\n  (declare-fun var2226!val!1 () var2226)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2226))\r\n          (or (= x var2226!val!2) (= x var2226!val!0) (= x var2226!val!1)))\r\n  ;; -----------\r\n  (define-fun var1180 () var2226\r\n    var2226!val!0)\r\n  (define-fun null-var2226 () var2226\r\n    var2226!val!1)\r\n  (define-fun var3495-NULL () var3495\r\n    var3495!val!1)\r\n  (define-fun var892 () var1331\r\n    (constructor/220257121 var2821))\r\n  (define-fun var3214 () var3495\r\n    (peek/-699404472 var1180))\r\n  (define-fun var2821 () var1005\r\n    var1005!val!0)\r\n  (define-fun var3856 () Bool\r\n    (hasNext/1315043792 var1180!1))\r\n  (define-fun var160 () var2314\r\n    (cast-from-var961-to-var2314\r\n  (var1331_construct/786007884 (constructor/220257121 var2821))))\r\n  (define-fun var2648 () var3495\r\n    var3495-NULL)\r\n  (define-fun var65 () var3495\r\n    var3495-BEGIN_ARRAY)\r\n  (define-fun var3495-BEGIN_ARRAY () var3495\r\n    var3495!val!2)\r\n  (define-fun var1180!1 () var2226\r\n    var2226!val!2)\r\n  (define-fun null-var1005 () var1005\r\n    var1005!val!1)\r\n  (define-fun var3831 () var961\r\n    (var1331_construct/786007884 (constructor/220257121 var2821)))\r\n  (define-fun var1180!2 () var2226\r\n    var2226!val!2)\r\n  (define-fun peek/-699404472 ((x!0 var2226)) var3495\r\n    var3495!val!0)\r\n  (define-fun hasNext/1315043792 ((x!0 var2226)) Bool\r\n    false)\r\n  (define-fun constructor/220257121 ((x!0 var1005)) var1331\r\n    var1331!val!0)\r\n  (define-fun cast-from-var961-to-var2314 ((x!0 var961)) var2314\r\n    var2314!val!0)\r\n  (define-fun var1331_construct/786007884 ((x!0 var1331)) var961\r\n    var961!val!0)\r\n  (define-fun beginObject/803465945 ((x!0 var2226)) void\r\n    void!val!0)\r\n  (define-fun endObject/938775527 ((x!0 var2226)) void\r\n    void!val!0)\r\n)\r\n(error \"line 56 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.015062093734741211,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1005 is 2\r\n; rep: (as @var1005_0 var1005)\r\n; rep: (as @var1005_1 var1005)\r\n; cardinality of var2226 is 3\r\n; rep: (as @var2226_0 var2226)\r\n; rep: (as @var2226_1 var2226)\r\n; rep: (as @var2226_2 var2226)\r\n; cardinality of var3495 is 3\r\n; rep: (as @var3495_0 var3495)\r\n; rep: (as @var3495_1 var3495)\r\n; rep: (as @var3495_2 var3495)\r\n; cardinality of var1331 is 1\r\n; rep: (as @var1331_0 var1331)\r\n; cardinality of var961 is 1\r\n; rep: (as @var961_0 var961)\r\n; cardinality of var2314 is 1\r\n; rep: (as @var2314_0 var2314)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-699404472 ((_arg_1 var2226)) var3495 (as @var3495_2 var3495))\r\n(define-fun constructor/220257121 ((BOUND_VARIABLE_529 var1005)) var1331 (as @var1331_0 var1331))\r\n(define-fun var1331_construct/786007884 ((BOUND_VARIABLE_532 var1331)) var961 (as @var961_0 var961))\r\n(define-fun cast-from-var961-to-var2314 ((BOUND_VARIABLE_535 var961)) var2314 (as @var2314_0 var2314))\r\n(define-fun beginObject/803465945 ((BOUND_VARIABLE_538 var2226)) void (as @void_0 void))\r\n(define-fun hasNext/1315043792 ((_arg_1 var2226)) Bool false)\r\n(define-fun endObject/938775527 ((BOUND_VARIABLE_541 var2226)) void (as @void_0 void))\r\n(define-fun null-var1005 () var1005 (as @var1005_0 var1005))\r\n(define-fun null-var2226 () var2226 (as @var2226_0 var2226))\r\n(define-fun var3495-NULL () var3495 (as @var3495_0 var3495))\r\n(define-fun var3495-BEGIN_ARRAY () var3495 (as @var3495_1 var3495))\r\n(define-fun var2821 () var1005 (as @var1005_1 var1005))\r\n(define-fun var1180 () var2226 (as @var2226_1 var2226))\r\n(define-fun var1180!1 () var2226 (as @var2226_2 var2226))\r\n(define-fun var1180!2 () var2226 (as @var2226_0 var2226))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35876864,
            "run_time": 0.07770633697509766,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3495:\n  ;;   var3495!val!1 var3495!val!0 var3495!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3495!val!1 () var3495)\n  (declare-fun var3495!val!0 () var3495)\n  (declare-fun var3495!val!2 () var3495)\n  ;; cardinality constraint:\n  (forall ((x var3495))\n          (or (= x var3495!val!1) (= x var3495!val!0) (= x var3495!val!2)))\n  ;; -----------\n  ;; universe for var1005:\n  ;;   var1005!val!0 var1005!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1005!val!0 () var1005)\n  (declare-fun var1005!val!1 () var1005)\n  ;; cardinality constraint:\n  (forall ((x var1005)) (or (= x var1005!val!0) (= x var1005!val!1)))\n  ;; -----------\n  ;; universe for var2226:\n  ;;   var2226!val!2 var2226!val!0 var2226!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2226!val!2 () var2226)\n  (declare-fun var2226!val!0 () var2226)\n  (declare-fun var2226!val!1 () var2226)\n  ;; cardinality constraint:\n  (forall ((x var2226))\n          (or (= x var2226!val!2) (= x var2226!val!0) (= x var2226!val!1)))\n  ;; -----------\n  (define-fun var1180 () var2226\n    var2226!val!0)\n  (define-fun null-var2226 () var2226\n    var2226!val!1)\n  (define-fun var160 () var2314\n    (cast-from-var961-to-var2314\n  (var1331_construct/786007884 (constructor/220257121 var2821))))\n  (define-fun var3856 () Bool\n    (hasNext/1315043792 var1180!1))\n  (define-fun var3495-NULL () var3495\n    var3495!val!1)\n  (define-fun var2648 () var3495\n    var3495-NULL)\n  (define-fun var65 () var3495\n    var3495-BEGIN_ARRAY)\n  (define-fun var2821 () var1005\n    var1005!val!0)\n  (define-fun var3831 () var961\n    (var1331_construct/786007884 (constructor/220257121 var2821)))\n  (define-fun var3495-BEGIN_ARRAY () var3495\n    var3495!val!2)\n  (define-fun var1180!1 () var2226\n    var2226!val!2)\n  (define-fun null-var1005 () var1005\n    var1005!val!1)\n  (define-fun var892 () var1331\n    (constructor/220257121 var2821))\n  (define-fun var3214 () var3495\n    (peek/-699404472 var1180))\n  (define-fun var1180!2 () var2226\n    var2226!val!2)\n  (define-fun peek/-699404472 ((x!0 var2226)) var3495\n    var3495!val!0)\n  (define-fun hasNext/1315043792 ((x!0 var2226)) Bool\n    false)\n  (define-fun constructor/220257121 ((x!0 var1005)) var1331\n    var1331!val!0)\n  (define-fun cast-from-var961-to-var2314 ((x!0 var961)) var2314\n    var2314!val!0)\n  (define-fun var1331_construct/786007884 ((x!0 var1331)) var961\n    var961!val!0)\n  (define-fun beginObject/803465945 ((x!0 var2226)) void\n    void!val!0)\n  (define-fun endObject/938775527 ((x!0 var2226)) void\n    void!val!0)\n)\n(error \"line 56 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 157216768,
            "run_time": 0.8208122253417969,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1180!1 () var2226 var2226!14)\r\n  (define-fun var1180 () var2226 var2226!12)\r\n  (define-fun var2821 () var1005 var1005!10)\r\n  (define-fun var3495-BEGIN_ARRAY () var3495 var3495!8)\r\n  (define-fun var3495-NULL () var3495 var3495!6)\r\n  (define-fun null-var2226 () var2226 var2226!4)\r\n  (define-fun null-var1005 () var1005 var1005!2)\r\n  (define-fun var3495!36 () var3495 (peek/-699404472 var2226!12))\r\n  (define-fun hasNext/1315043792 ((x!0 var2226)) Bool (ite (= x!0 var2226!14) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 11,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r3 := @this: com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter",
            "r0 := @parameter0: com.google.gson.stream.JsonReader",
            "r1 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>()",
            "$r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL>",
            "if r1 != $r2 goto $r4 = r3.<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.internal.ObjectConstructor constructor>",
            "$r4 = r3.<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.internal.ObjectConstructor constructor>",
            "$r5 = interfaceinvoke $r4.<com.google.gson.internal.ObjectConstructor: java.lang.Object construct()>()",
            "r6 = (java.util.Map) $r5",
            "$r7 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_ARRAY>",
            "if r1 != $r7 goto virtualinvoke r0.<com.google.gson.stream.JsonReader: void beginObject()>()",
            "virtualinvoke r0.<com.google.gson.stream.JsonReader: void beginObject()>()",
            "$z0 = virtualinvoke r0.<com.google.gson.stream.JsonReader: boolean hasNext()>()",
            "if $z0 == 0 goto virtualinvoke r0.<com.google.gson.stream.JsonReader: void endObject()>()",
            "virtualinvoke r0.<com.google.gson.stream.JsonReader: void endObject()>()",
            "return r6"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter__readField__-1763930162\\500.smt2",
        "z3": {
            "memory": 31465472,
            "run_time": 0.04285836219787598,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3921:\r\n  ;;   var3921!val!0 var3921!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3921!val!0 () var3921)\r\n  (declare-fun var3921!val!1 () var3921)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3921)) (or (= x var3921!val!0) (= x var3921!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2934:\r\n  ;;   var2934!val!1 var2934!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2934!val!1 () var2934)\r\n  (declare-fun var2934!val!0 () var2934)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2934)) (or (= x var2934!val!1) (= x var2934!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3794:\r\n  ;;   var3794!val!1 var3794!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3794!val!1 () var3794)\r\n  (declare-fun var3794!val!0 () var3794)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3794)) (or (= x var3794!val!1) (= x var3794!val!0)))\r\n  ;; -----------\r\n  ;; universe for var813:\r\n  ;;   var813!val!1 var813!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var813!val!1 () var813)\r\n  (declare-fun var813!val!0 () var813)\r\n  ;; cardinality constraint:\r\n  (forall ((x var813)) (or (= x var813!val!1) (= x var813!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var2934 () var2934\r\n    var2934!val!1)\r\n  (define-fun var1088 () var813\r\n    (var727_get/1088891777\r\n  (componentIndices/-339183035 var3510)\r\n  (cast-from-String-to-var813 (fieldName/-2124946699 var1914))))\r\n  (define-fun var1914 () var2934\r\n    var2934!val!0)\r\n  (define-fun var3582 () Int\r\n    (cast-from-var813-to-Int\r\n  (var727_get/1088891777\r\n    (componentIndices/-339183035 var3510)\r\n    (cast-from-String-to-var813 (fieldName/-2124946699 var1914)))))\r\n  (define-fun var3643 () var727\r\n    (componentIndices/-339183035 var3510))\r\n  (define-fun null-var3921 () var3921\r\n    var3921!val!1)\r\n  (define-fun var3510 () var3921\r\n    var3921!val!0)\r\n  (define-fun var2039 () String\r\n    (fieldName/-2124946699 var1914))\r\n  (define-fun var3520 () var3794\r\n    var3794!val!0)\r\n  (define-fun var2211 () (Array Int var813)\r\n    ((as const (Array Int var813)) var813!val!0))\r\n  (define-fun null-__Array__Int__var813__ () (Array Int var813)\r\n    ((as const (Array Int var813)) var813!val!1))\r\n  (define-fun null-Int () Int\r\n    1)\r\n  (define-fun var3822 () Int\r\n    (let ((a!1 (cast-from-var813-to-Int\r\n             (var727_get/1088891777\r\n               (componentIndices/-339183035 var3510)\r\n               (cast-from-String-to-var813 (fieldName/-2124946699 var1914))))))\r\n  (intValue/-1815674922 a!1)))\r\n  (define-fun null-var3794 () var3794\r\n    var3794!val!1)\r\n  (define-fun var3822!1 () Int\r\n    0)\r\n  (define-fun var2211!1 () (Array Int var813)\r\n    ((as const (Array Int var813)) var813!val!0))\r\n  (define-fun var1914!1 () var2934\r\n    var2934!val!1)\r\n  (define-fun var3520!1 () var3794\r\n    var3794!val!1)\r\n  (define-fun componentIndices/-339183035 ((x!0 var3921)) var727\r\n    var727!val!0)\r\n  (define-fun fieldName/-2124946699 ((x!0 var2934)) String\r\n    \"\")\r\n  (define-fun cast-from-String-to-var813 ((x!0 String)) var813\r\n    var813!val!1)\r\n  (define-fun var727_get/1088891777 ((x!0 var727) (x!1 var813)) var813\r\n    var813!val!1)\r\n  (define-fun cast-from-var813-to-Int ((x!0 var813)) Int\r\n    0)\r\n  (define-fun intValue/-1815674922 ((x!0 Int)) Int\r\n    0)\r\n  (define-fun readIntoArray/1014833159 ((x!0 var2934)\r\n   (x!1 var3794)\r\n   (x!2 Int)\r\n   (x!3 (Array Int var813))) void\r\n    void!val!0)\r\n)\r\n(error \"line 50 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.047042131423950195,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3921 is 2\r\n; rep: (as @var3921_0 var3921)\r\n; rep: (as @var3921_1 var3921)\r\n; cardinality of var813 is 4\r\n; rep: (as @var813_0 var813)\r\n; rep: (as @var813_1 var813)\r\n; rep: (as @var813_2 var813)\r\n; rep: (as @var813_3 var813)\r\n; cardinality of var3794 is 2\r\n; rep: (as @var3794_0 var3794)\r\n; rep: (as @var3794_1 var3794)\r\n; cardinality of var2934 is 2\r\n; rep: (as @var2934_0 var2934)\r\n; rep: (as @var2934_1 var2934)\r\n; cardinality of var727 is 1\r\n; rep: (as @var727_0 var727)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun componentIndices/-339183035 ((_arg_1 var3921)) var727 (as @var727_0 var727))\r\n(define-fun fieldName/-2124946699 ((_arg_1 var2934)) String \"\")\r\n(define-fun var727_get/1088891777 ((_arg_1 var727) (_arg_2 var813)) var813 (as @var813_1 var813))\r\n(define-fun cast-from-String-to-var813 ((_arg_1 String)) var813 (as @var813_0 var813))\r\n(define-fun cast-from-var813-to-Int ((_arg_1 var813)) Int 0)\r\n(define-fun intValue/-1815674922 ((BOUND_VARIABLE_562 Int)) Int 0)\r\n(define-fun readIntoArray/1014833159 ((BOUND_VARIABLE_565 var2934) (BOUND_VARIABLE_566 var3794) (BOUND_VARIABLE_567 Int) (BOUND_VARIABLE_568 (Array Int var813))) void (as @void_0 void))\r\n(define-fun null-var3921 () var3921 (as @var3921_0 var3921))\r\n(define-fun null-__Array__Int__var813__ () (Array Int var813) (store ((as const (Array Int var813)) (as @var813_1 var813)) 0 (as @var813_2 var813)))\r\n(define-fun null-var3794 () var3794 (as @var3794_0 var3794))\r\n(define-fun null-var2934 () var2934 (as @var2934_0 var2934))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun var3510 () var3921 (as @var3921_1 var3921))\r\n(define-fun var2211 () (Array Int var813) (store ((as const (Array Int var813)) (as @var813_0 var813)) 0 (as @var813_3 var813)))\r\n(define-fun var3520 () var3794 (as @var3794_1 var3794))\r\n(define-fun var1914 () var2934 (as @var2934_1 var2934))\r\n(define-fun var1914!1 () var2934 (as @var2934_0 var2934))\r\n(define-fun var3520!1 () var3794 (as @var3794_0 var3794))\r\n(define-fun var3822!1 () Int 0)\r\n(define-fun var2211!1 () (Array Int var813) ((as const (Array Int var813)) (as @var813_0 var813)))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35844096,
            "run_time": 0.07827425003051758,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3921:\n  ;;   var3921!val!0 var3921!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3921!val!0 () var3921)\n  (declare-fun var3921!val!1 () var3921)\n  ;; cardinality constraint:\n  (forall ((x var3921)) (or (= x var3921!val!0) (= x var3921!val!1)))\n  ;; -----------\n  ;; universe for var2934:\n  ;;   var2934!val!1 var2934!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2934!val!1 () var2934)\n  (declare-fun var2934!val!0 () var2934)\n  ;; cardinality constraint:\n  (forall ((x var2934)) (or (= x var2934!val!1) (= x var2934!val!0)))\n  ;; -----------\n  ;; universe for var3794:\n  ;;   var3794!val!1 var3794!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3794!val!1 () var3794)\n  (declare-fun var3794!val!0 () var3794)\n  ;; cardinality constraint:\n  (forall ((x var3794)) (or (= x var3794!val!1) (= x var3794!val!0)))\n  ;; -----------\n  ;; universe for var813:\n  ;;   var813!val!1 var813!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var813!val!1 () var813)\n  (declare-fun var813!val!0 () var813)\n  ;; cardinality constraint:\n  (forall ((x var813)) (or (= x var813!val!1) (= x var813!val!0)))\n  ;; -----------\n  (define-fun null-var2934 () var2934\n    var2934!val!1)\n  (define-fun var1914 () var2934\n    var2934!val!0)\n  (define-fun null-var3921 () var3921\n    var3921!val!1)\n  (define-fun var2211 () (Array Int var813)\n    ((as const (Array Int var813)) var813!val!0))\n  (define-fun var3822 () Int\n    (let ((a!1 (cast-from-var813-to-Int\n             (var727_get/1088891777\n               (componentIndices/-339183035 var3510)\n               (cast-from-String-to-var813 (fieldName/-2124946699 var1914))))))\n  (intValue/-1815674922 a!1)))\n  (define-fun var3510 () var3921\n    var3921!val!0)\n  (define-fun null-__Array__Int__var813__ () (Array Int var813)\n    ((as const (Array Int var813)) var813!val!1))\n  (define-fun var2039 () String\n    (fieldName/-2124946699 var1914))\n  (define-fun var3520 () var3794\n    var3794!val!0)\n  (define-fun var1088 () var813\n    (var727_get/1088891777\n  (componentIndices/-339183035 var3510)\n  (cast-from-String-to-var813 (fieldName/-2124946699 var1914))))\n  (define-fun var3582 () Int\n    (cast-from-var813-to-Int\n  (var727_get/1088891777\n    (componentIndices/-339183035 var3510)\n    (cast-from-String-to-var813 (fieldName/-2124946699 var1914)))))\n  (define-fun null-Int () Int\n    1)\n  (define-fun var3643 () var727\n    (componentIndices/-339183035 var3510))\n  (define-fun null-var3794 () var3794\n    var3794!val!1)\n  (define-fun var3822!1 () Int\n    0)\n  (define-fun var2211!1 () (Array Int var813)\n    ((as const (Array Int var813)) var813!val!0))\n  (define-fun var1914!1 () var2934\n    var2934!val!1)\n  (define-fun var3520!1 () var3794\n    var3794!val!1)\n  (define-fun componentIndices/-339183035 ((x!0 var3921)) var727\n    var727!val!0)\n  (define-fun fieldName/-2124946699 ((x!0 var2934)) String\n    \"\")\n  (define-fun cast-from-String-to-var813 ((x!0 String)) var813\n    var813!val!1)\n  (define-fun var727_get/1088891777 ((x!0 var727) (x!1 var813)) var813\n    var813!val!1)\n  (define-fun cast-from-var813-to-Int ((x!0 var813)) Int\n    0)\n  (define-fun intValue/-1815674922 ((x!0 Int)) Int\n    0)\n  (define-fun readIntoArray/1014833159 ((x!0 var2934)\n   (x!1 var3794)\n   (x!2 Int)\n   (x!3 (Array Int var813))) void\n    void!val!0)\n)\n(error \"line 50 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154238976,
            "run_time": 0.9140963554382324,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1914 () var2934 var2934!12)\r\n  (define-fun var3520 () var3794 var3794!10)\r\n  (define-fun var2211 () (Array Int var813) ((as const (Array Int var813)) var813!0))\r\n  (define-fun var3510 () var3921 var3921!8)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var2934 () var2934 var2934!6)\r\n  (define-fun null-var3794 () var3794 var3794!4)\r\n  (define-fun null-__Array__Int__var813__ () (Array Int var813) (store ((as const (Array Int var813)) var813!0) 0 var813!1))\r\n  (define-fun null-var3921 () var3921 var3921!2)\r\n  (define-fun var813!34 () var813 (cast-from-String-to-var813 \"\\u{0}\"))\r\n  (define-fun var813!36 () var813 (var727_get/1088891777 var727!30 var813!34))\r\n  (define-fun var727!30 () var727 (componentIndices/-339183035 var3921!8))\r\n  (define-fun cast-from-var813-to-Int ((x!0 var813)) Int (ite (= x!0 var813!36) 19 0))\r\n  (define-fun fieldName/-2124946699 ((x!0 var2934)) String (ite (= x!0 var2934!12) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 7,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter",
            "r7 := @parameter0: java.lang.Object[]",
            "r6 := @parameter1: com.google.gson.stream.JsonReader",
            "r1 := @parameter2: com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField",
            "$r3 = r0.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$RecordAdapter: java.util.Map componentIndices>",
            "$r2 = r1.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField: java.lang.String fieldName>",
            "$r4 = interfaceinvoke $r3.<java.util.Map: java.lang.Object get(java.lang.Object)>($r2)",
            "r5 = (java.lang.Integer) $r4",
            "if r5 != null goto $i0 = virtualinvoke r5.<java.lang.Integer: int intValue()>()",
            "$i0 = virtualinvoke r5.<java.lang.Integer: int intValue()>()",
            "virtualinvoke r1.<com.google.gson.internal.bind.ReflectiveTypeAdapterFactory$BoundField: void readIntoArray(com.google.gson.stream.JsonReader,int,java.lang.Object[])>(r6, $i0, r7)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.Gson__getDelegateAdapter__1405423954\\342.smt2",
        "z3": {
            "memory": 32440320,
            "run_time": 60.01162624359131,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12787712,
            "run_time": 0.030225276947021484,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3379 is 2\r\n; rep: (as @var3379_0 var3379)\r\n; rep: (as @var3379_1 var3379)\r\n; cardinality of var2965 is 2\r\n; rep: (as @var2965_0 var2965)\r\n; rep: (as @var2965_1 var2965)\r\n; cardinality of var1167 is 2\r\n; rep: (as @var1167_0 var1167)\r\n; rep: (as @var1167_1 var1167)\r\n; cardinality of var2485 is 1\r\n; rep: (as @var2485_0 var2485)\r\n; cardinality of var2554 is 1\r\n; rep: (as @var2554_0 var2554)\r\n; cardinality of var3023 is 1\r\n; rep: (as @var3023_0 var3023)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun factories/1896892294 ((_arg_1 var3379)) var2485 (as @var2485_0 var2485))\r\n(define-fun var2485_contains/-441121415 ((_arg_1 var2485) (_arg_2 var2554)) Bool true)\r\n(define-fun cast-from-var2965-to-var2554 ((_arg_1 var2965)) var2554 (as @var2554_0 var2554))\r\n(define-fun var2485_iterator/-912451715 ((_arg_1 var2485)) Iterator (as @Iterator_0 Iterator))\r\n(define-fun Iterator_hasNext/-1669924200 ((_arg_1 Iterator)) Bool false)\r\n(define-fun var3023-init () var3023 (as @var3023_0 var3023))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1051 String) (BOUND_VARIABLE_1052 var2554)) String \"\")\r\n(define-fun cast-from-var1167-to-var2554 ((BOUND_VARIABLE_1055 var1167)) var2554 (as @var2554_0 var2554))\r\n(define-fun <init>/875830710 ((BOUND_VARIABLE_1058 var3023) (BOUND_VARIABLE_1059 String)) void (as @void_0 void))\r\n(define-fun null-var3379 () var3379 (as @var3379_0 var3379))\r\n(define-fun null-var2965 () var2965 (as @var2965_0 var2965))\r\n(define-fun null-var1167 () var1167 (as @var1167_0 var1167))\r\n(define-fun var1327 () var3379 (as @var3379_1 var3379))\r\n(define-fun var1703 () var2965 (as @var2965_1 var2965))\r\n(define-fun var734 () var1167 (as @var1167_1 var1167))\r\n(define-fun var165!1 () String \"\")\r\n(define-fun var165!2 () String \"GSON cannot serialize \")\r\n(define-fun var682!1 () String \"GSON cannot serialize \")\r\n(define-fun var2824!1 () var3023 (as @var3023_0 var3023))\r\n(define-fun var3354!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36982784,
            "run_time": 60.000208139419556,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 188076032,
            "run_time": 1.1179382801055908,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var682!1 () String \"GSON cannot serialize \")\r\n  (define-fun var165!2 () String \"GSON cannot serialize \")\r\n  (define-fun var165!1 () String \"\")\r\n  (define-fun var734 () var1167 var1167!56)\r\n  (define-fun var1703 () var2965 var2965!54)\r\n  (define-fun var1327 () var3379 var3379!52)\r\n  (define-fun null-var1167 () var1167 var1167!50)\r\n  (define-fun null-var2965 () var2965 var2965!48)\r\n  (define-fun null-var3379 () var3379 var3379!46)\r\n  (define-fun Iterator!80 () Iterator (var2485_iterator/-912451715 var2485!76))\r\n  (define-fun var2554!78 () var2554 (cast-from-var2965-to-var2554 var2965!54))\r\n  (define-fun var2485!76 () var2485 (factories/1896892294 var3379!52))\r\n  (define-fun abbrev_117 ((x!0 Int)) String (ite (= x!0 0) \"GSON cannot serialize \" \"\"))\r\n  (define-fun Iterator_hasNext/-1669924200 ((x!0 Iterator)) Bool (ite (= x!0 Iterator!80) false true))\r\n  (define-fun var2485_contains/-441121415 ((x!0 var2485) (x!1 var2554)) Bool (ite (and (= x!0 var2485!76) (= x!1 var2554!78)) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 10,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.Gson",
            "r13 := @parameter0: com.google.gson.TypeAdapterFactory",
            "r5 := @parameter1: com.google.gson.reflect.TypeToken",
            "$r1 = r0.<com.google.gson.Gson: java.util.List factories>",
            "$z0 = interfaceinvoke $r1.<java.util.List: boolean contains(java.lang.Object)>(r13)",
            "if $z0 != 0 goto z1 = 0",
            "z1 = 0",
            "$r2 = r0.<com.google.gson.Gson: java.util.List factories>",
            "$r12 = interfaceinvoke $r2.<java.util.List: java.util.Iterator iterator()>()",
            "$z2 = interfaceinvoke $r12.<java.util.Iterator: boolean hasNext()>()",
            "if $z2 == 0 goto $r3 = new java.lang.IllegalArgumentException",
            "$r3 = new java.lang.IllegalArgumentException",
            "$r4 = new java.lang.StringBuilder",
            "specialinvoke $r4.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"GSON cannot serialize \")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r5)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r8)",
            "throw $r3"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.JsonTreeReader__nextString__200340804\\955.smt2",
        "z3": {
            "memory": 32403456,
            "run_time": 60.003841400146484,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.03064584732055664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3580 is 2\r\n; rep: (as @var3580_0 var3580)\r\n; rep: (as @var3580_1 var3580)\r\n; cardinality of var3019 is 3\r\n; rep: (as @var3019_0 var3019)\r\n; rep: (as @var3019_1 var3019)\r\n; rep: (as @var3019_2 var3019)\r\n; cardinality of var481 is 1\r\n; rep: (as @var481_0 var481)\r\n; cardinality of var1582 is 1\r\n; rep: (as @var1582_0 var1582)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-1841308090 ((_arg_1 var3580)) var3019 (as @var3019_2 var3019))\r\n(define-fun var481-init () var481 (as @var481_0 var481))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((_arg_1 String) (_arg_2 var1582)) String \"\")\r\n(define-fun cast-from-var3019-to-var1582 ((_arg_1 var3019)) var1582 (as @var1582_0 var1582))\r\n(define-fun locationString/-286819006 ((BOUND_VARIABLE_1516 var3580)) String \"\")\r\n(define-fun <init>/-1092629202 ((BOUND_VARIABLE_1519 var481) (BOUND_VARIABLE_1520 String)) void (as @void_0 void))\r\n(define-fun null-var3580 () var3580 (as @var3580_0 var3580))\r\n(define-fun var3019-STRING () var3019 (as @var3019_0 var3019))\r\n(define-fun var3019-NUMBER () var3019 (as @var3019_1 var3019))\r\n(define-fun var2085 () var3580 (as @var3580_1 var3580))\r\n(define-fun var1594!1 () String \"\")\r\n(define-fun var1594!2 () String \"Expected \")\r\n(define-fun var659!1 () String \"Expected \")\r\n(define-fun var3999!1 () String \" but was \")\r\n(define-fun var1832!1 () String \" but was \")\r\n(define-fun var3059!1 () String \"\")\r\n(define-fun var1046!1 () var481 (as @var481_0 var481))\r\n(define-fun var2470!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36732928,
            "run_time": 0.07643771171569824,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 72 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 73 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169807872,
            "run_time": 1.2399728298187256,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3019/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.JsonTreeReader__nextString__200340804\\955.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_37_7 =\r\n     concat(all_31_4, \" but was \")\r\n   var3999!1 =\r\n     concat(all_31_4, \" but was \")\r\n   var3059!1 =\r\n     concat(all_28_3, all_28_2)\r\n   var1832!1 =\r\n     concat(all_34_4, rhs)\r\n   all_34_4 =\r\n     concat(all_31_4, \" but was \")\r\n\r\n953ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 19,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: com.google.gson.internal.bind.JsonTreeReader",
            "r1 = virtualinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: com.google.gson.stream.JsonToken peek()>()",
            "$r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING>",
            "if r1 == $r2 goto $r3 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object popStack()>()",
            "$r6 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NUMBER>",
            "if r1 == $r6 goto $r3 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.Object popStack()>()",
            "$r8 = new java.lang.IllegalStateException",
            "$r9 = new java.lang.StringBuilder",
            "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()",
            "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expected \")",
            "$r10 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken STRING>",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" but was \")",
            "$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)",
            "$r14 = specialinvoke r0.<com.google.gson.internal.bind.JsonTreeReader: java.lang.String locationString()>()",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r8.<java.lang.IllegalStateException: void <init>(java.lang.String)>($r17)",
            "throw $r8"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.TypeAdapters$16__read__946272508\\703.smt2",
        "z3": {
            "memory": 32415744,
            "run_time": 0.06014704704284668,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var346:\r\n  ;;   var346!val!1 var346!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var346!val!1 () var346)\r\n  (declare-fun var346!val!0 () var346)\r\n  ;; cardinality constraint:\r\n  (forall ((x var346)) (or (= x var346!val!1) (= x var346!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3383:\r\n  ;;   var3383!val!0 var3383!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3383!val!0 () var3383)\r\n  (declare-fun var3383!val!1 () var3383)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3383)) (or (= x var3383!val!0) (= x var3383!val!1)))\r\n  ;; -----------\r\n  ;; universe for var575:\r\n  ;;   var575!val!1 var575!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var575!val!1 () var575)\r\n  (declare-fun var575!val!0 () var575)\r\n  ;; cardinality constraint:\r\n  (forall ((x var575)) (or (= x var575!val!1) (= x var575!val!0)))\r\n  ;; -----------\r\n  ;; universe for var425:\r\n  ;;   var425!val!1 var425!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var425!val!1 () var425)\r\n  (declare-fun var425!val!0 () var425)\r\n  ;; cardinality constraint:\r\n  (forall ((x var425)) (or (= x var425!val!1) (= x var425!val!0)))\r\n  ;; -----------\r\n  (define-fun var3383-NULL () var3383\r\n    var3383!val!1)\r\n  (define-fun var1841 () var3155\r\n    var3155-init)\r\n  (define-fun var2377 () var575\r\n    var575!val!0)\r\n  (define-fun null-var575 () var575\r\n    var575!val!1)\r\n  (define-fun var2566 () String\r\n    (nextString/1391460550 var2377))\r\n  (define-fun var1049 () var3383\r\n    (peek/-699404472 var2377))\r\n  (define-fun var999 () String\r\n    (str.++ var2159!1\r\n        \"Failed parsing '\"\r\n        (nextString/1391460550 var2377)\r\n        \"' as BigDecimal; at path \"\r\n        (getPreviousPath/455305022 var2377)))\r\n  (define-fun var977 () String\r\n    (str.++ var2159!1\r\n        \"Failed parsing '\"\r\n        (nextString/1391460550 var2377)\r\n        \"' as BigDecimal; at path \"\r\n        (getPreviousPath/455305022 var2377)))\r\n  (define-fun null-var425 () var425\r\n    var425!val!1)\r\n  (define-fun null-var346 () var346\r\n    var346!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2024 () var346\r\n    var346!val!0)\r\n  (define-fun var1624 () String\r\n    (str.++ var2159!1 \"Failed parsing '\"))\r\n  (define-fun var2037 () String\r\n    (str.++ var2159!1\r\n        \"Failed parsing '\"\r\n        (nextString/1391460550 var2377)\r\n        \"' as BigDecimal; at path \"))\r\n  (define-fun var3092 () var3739\r\n    var3739-init)\r\n  (define-fun var2159 () String\r\n    String-init)\r\n  (define-fun var1797 () var3383\r\n    var3383-NULL)\r\n  (define-fun var3275 () String\r\n    (str.++ var2159!1 \"Failed parsing '\" (nextString/1391460550 var2377)))\r\n  (define-fun var2378 () String\r\n    (getPreviousPath/455305022 var2377))\r\n  (define-fun var2133 () var425\r\n    var425!val!0)\r\n  (define-fun var3275!1 () String\r\n    \"Failed parsing '' as BigDecimal; at path \")\r\n  (define-fun var2037!1 () String\r\n    \"Failed parsing '' as BigDecimal; at path \")\r\n  (define-fun var1624!1 () String\r\n    \"Failed parsing '\")\r\n  (define-fun var2159!1 () String\r\n    \"\")\r\n  (define-fun var2159!2 () String\r\n    \"Failed parsing '\")\r\n  (define-fun var3092!1 () var3739\r\n    var3739!val!0)\r\n  (define-fun var3155-init () var3155\r\n    var3155!val!0)\r\n  (define-fun var999!1 () String\r\n    \"\")\r\n  (define-fun var3739-init () var3739\r\n    var3739!val!0)\r\n  (define-fun var2024!1 () var346\r\n    var346!val!1)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun peek/-699404472 ((x!0 var575)) var3383\r\n    var3383!val!0)\r\n  (define-fun nextString/1391460550 ((x!0 var575)) String\r\n    \"\")\r\n  (define-fun getPreviousPath/455305022 ((x!0 var575)) String\r\n    \"\")\r\n  (define-fun cast-from-var346-to-var2028 ((x!0 var346)) var2028\r\n    var2028!val!0)\r\n  (define-fun <init>/1368500855 ((x!0 var3739) (x!1 String) (x!2 var2028)) void\r\n    void!val!0)\r\n)\r\n(error \"line 79 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.046762943267822266,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var425 is 2\r\n; rep: (as @var425_0 var425)\r\n; rep: (as @var425_1 var425)\r\n; cardinality of var575 is 2\r\n; rep: (as @var575_0 var575)\r\n; rep: (as @var575_1 var575)\r\n; cardinality of var3383 is 2\r\n; rep: (as @var3383_0 var3383)\r\n; rep: (as @var3383_1 var3383)\r\n; cardinality of var3155 is 1\r\n; rep: (as @var3155_0 var3155)\r\n; cardinality of var346 is 2\r\n; rep: (as @var346_0 var346)\r\n; rep: (as @var346_1 var346)\r\n; cardinality of var3739 is 1\r\n; rep: (as @var3739_0 var3739)\r\n; cardinality of var2028 is 1\r\n; rep: (as @var2028_0 var2028)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-699404472 ((_arg_1 var575)) var3383 (as @var3383_1 var3383))\r\n(define-fun nextString/1391460550 ((BOUND_VARIABLE_635 var575)) String \"\")\r\n(define-fun var3155-init () var3155 (as @var3155_0 var3155))\r\n(define-fun var3739-init () var3739 (as @var3739_0 var3739))\r\n(define-fun String-init () String \"\")\r\n(define-fun getPreviousPath/455305022 ((BOUND_VARIABLE_638 var575)) String \"\")\r\n(define-fun <init>/1368500855 ((BOUND_VARIABLE_641 var3739) (BOUND_VARIABLE_642 String) (BOUND_VARIABLE_643 var2028)) void (as @void_0 void))\r\n(define-fun cast-from-var346-to-var2028 ((BOUND_VARIABLE_646 var346)) var2028 (as @var2028_0 var2028))\r\n(define-fun null-var425 () var425 (as @var425_0 var425))\r\n(define-fun null-var575 () var575 (as @var575_0 var575))\r\n(define-fun var3383-NULL () var3383 (as @var3383_0 var3383))\r\n(define-fun null-var346 () var346 (as @var346_0 var346))\r\n(define-fun var2133 () var425 (as @var425_1 var425))\r\n(define-fun var2377 () var575 (as @var575_1 var575))\r\n(define-fun var2024 () var346 (as @var346_1 var346))\r\n(define-fun var2159!1 () String \"\")\r\n(define-fun var2159!2 () String \"Failed parsing '\")\r\n(define-fun var1624!1 () String \"Failed parsing '\")\r\n(define-fun var3275!1 () String \"Failed parsing '' as BigDecimal; at path \")\r\n(define-fun var2037!1 () String \"Failed parsing '' as BigDecimal; at path \")\r\n(define-fun var3092!1 () var3739 (as @var3739_0 var3739))\r\n(define-fun var999!1 () String \"\")\r\n(define-fun var2024!1 () var346 (as @var346_0 var346))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36622336,
            "run_time": 0.0779268741607666,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var346:\n  ;;   var346!val!1 var346!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var346!val!1 () var346)\n  (declare-fun var346!val!0 () var346)\n  ;; cardinality constraint:\n  (forall ((x var346)) (or (= x var346!val!1) (= x var346!val!0)))\n  ;; -----------\n  ;; universe for var3383:\n  ;;   var3383!val!0 var3383!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3383!val!0 () var3383)\n  (declare-fun var3383!val!1 () var3383)\n  ;; cardinality constraint:\n  (forall ((x var3383)) (or (= x var3383!val!0) (= x var3383!val!1)))\n  ;; -----------\n  ;; universe for var575:\n  ;;   var575!val!1 var575!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var575!val!1 () var575)\n  (declare-fun var575!val!0 () var575)\n  ;; cardinality constraint:\n  (forall ((x var575)) (or (= x var575!val!1) (= x var575!val!0)))\n  ;; -----------\n  ;; universe for var425:\n  ;;   var425!val!1 var425!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var425!val!1 () var425)\n  (declare-fun var425!val!0 () var425)\n  ;; cardinality constraint:\n  (forall ((x var425)) (or (= x var425!val!1) (= x var425!val!0)))\n  ;; -----------\n  (define-fun var3383-NULL () var3383\n    var3383!val!1)\n  (define-fun var999 () String\n    (str.++ var2159!1\n        \"Failed parsing '\"\n        (nextString/1391460550 var2377)\n        \"' as BigDecimal; at path \"\n        (getPreviousPath/455305022 var2377)))\n  (define-fun var2377 () var575\n    var575!val!0)\n  (define-fun null-var575 () var575\n    var575!val!1)\n  (define-fun var1797 () var3383\n    var3383-NULL)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3092 () var3739\n    var3739-init)\n  (define-fun var977 () String\n    (str.++ var2159!1\n        \"Failed parsing '\"\n        (nextString/1391460550 var2377)\n        \"' as BigDecimal; at path \"\n        (getPreviousPath/455305022 var2377)))\n  (define-fun null-var425 () var425\n    var425!val!1)\n  (define-fun null-var346 () var346\n    var346!val!1)\n  (define-fun var2159 () String\n    String-init)\n  (define-fun var2024 () var346\n    var346!val!0)\n  (define-fun var1624 () String\n    (str.++ var2159!1 \"Failed parsing '\"))\n  (define-fun var2037 () String\n    (str.++ var2159!1\n        \"Failed parsing '\"\n        (nextString/1391460550 var2377)\n        \"' as BigDecimal; at path \"))\n  (define-fun var3275 () String\n    (str.++ var2159!1 \"Failed parsing '\" (nextString/1391460550 var2377)))\n  (define-fun var2378 () String\n    (getPreviousPath/455305022 var2377))\n  (define-fun var1841 () var3155\n    var3155-init)\n  (define-fun var1049 () var3383\n    (peek/-699404472 var2377))\n  (define-fun var2133 () var425\n    var425!val!0)\n  (define-fun var2566 () String\n    (nextString/1391460550 var2377))\n  (define-fun var3275!1 () String\n    \"Failed parsing '' as BigDecimal; at path \")\n  (define-fun var2037!1 () String\n    \"Failed parsing '' as BigDecimal; at path \")\n  (define-fun var1624!1 () String\n    \"Failed parsing '\")\n  (define-fun var2159!1 () String\n    \"\")\n  (define-fun var2159!2 () String\n    \"Failed parsing '\")\n  (define-fun var3092!1 () var3739\n    var3739!val!0)\n  (define-fun var3155-init () var3155\n    var3155!val!0)\n  (define-fun var999!1 () String\n    \"\")\n  (define-fun var3739-init () var3739\n    var3739!val!0)\n  (define-fun var2024!1 () var346\n    var346!val!1)\n  (define-fun String-init () String\n    \"\")\n  (define-fun peek/-699404472 ((x!0 var575)) var3383\n    var3383!val!0)\n  (define-fun nextString/1391460550 ((x!0 var575)) String\n    \"\")\n  (define-fun getPreviousPath/455305022 ((x!0 var575)) String\n    \"\")\n  (define-fun cast-from-var346-to-var2028 ((x!0 var346)) var2028\n    var2028!val!0)\n  (define-fun <init>/1368500855 ((x!0 var3739) (x!1 String) (x!2 var2028)) void\n    void!val!0)\n)\n(error \"line 79 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181477376,
            "run_time": 1.2225933074951172,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var575/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.TypeAdapters$16__read__946272508\\703.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3275!1 =\r\n     concat(all_35_4, \"\\u{0}27 as BigDecimal; at path \")\r\n   var2037!1 =\r\n     concat(all_29_3, all_29_2)\r\n   var1624!1 =\r\n     concat(\"Failed parsing \\u{0}27\", all_32_3)\r\n   all_29_3 =\r\n     concat(all_38_5, \"\\u{0}27 as BigDecimal; at path \")\r\n   all_35_4 =\r\n     concat(\"Failed parsing \\u{0}27\", all_32_3)\r\n   all_38_5 =\r\n     concat(\"Failed parsing \\u{0}27\", all_32_3)\r\n\r\n936ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r14 := @this: com.google.gson.internal.bind.TypeAdapters$16",
            "r0 := @parameter0: com.google.gson.stream.JsonReader",
            "$r2 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>()",
            "$r1 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL>",
            "if $r2 != $r1 goto r3 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String nextString()>()",
            "r3 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String nextString()>()",
            "$r4 = new java.math.BigDecimal",
            "$r5 := @caughtexception",
            "$r6 = new com.google.gson.JsonSyntaxException",
            "$r7 = new java.lang.StringBuilder",
            "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed parsing \\'\")",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' as BigDecimal; at path \")",
            "$r10 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String getPreviousPath()>()",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r6.<com.google.gson.JsonSyntaxException: void <init>(java.lang.String,java.lang.Throwable)>($r13, $r5)",
            "throw $r6"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.NumberTypeAdapter__read__-1568034327\\659.smt2",
        "z3": {
            "memory": 32428032,
            "run_time": 0.060968875885009766,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1275:\r\n  ;;   var1275!val!1 var1275!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1275!val!1 () var1275)\r\n  (declare-fun var1275!val!0 () var1275)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1275)) (or (= x var1275!val!1) (= x var1275!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3134:\r\n  ;;   var3134!val!0 var3134!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3134!val!0 () var3134)\r\n  (declare-fun var3134!val!1 () var3134)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3134)) (or (= x var3134!val!0) (= x var3134!val!1)))\r\n  ;; -----------\r\n  (define-fun var2436-$SwitchMap$com$google$gson$stream$JsonToken () (Array Int Int)\r\n    ((as const (Array Int Int)) 4))\r\n  (define-fun var1691 () String\r\n    (append/-1031950772\r\n  (str.++ var2950!1 \"Expecting number, got: \")\r\n  (cast-from-var3881-to-var130 (peek/-699404472 var2365))))\r\n  (define-fun var532 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var2950!1 \"Expecting number, got: \")\r\n          (cast-from-var3881-to-var130 (peek/-699404472 var2365)))\r\n        \"; at path \"\r\n        (getPath/876800821 var2365)))\r\n  (define-fun var580!1 () String\r\n    \"Expecting number, got: \")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3048 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var2950!1 \"Expecting number, got: \")\r\n          (cast-from-var3881-to-var130 (peek/-699404472 var2365)))\r\n        \"; at path \"))\r\n  (define-fun null-var3134 () var3134\r\n    var3134!val!1)\r\n  (define-fun var165 () String\r\n    (getPath/876800821 var2365))\r\n  (define-fun null-var1275 () var1275\r\n    var1275!val!1)\r\n  (define-fun var2248 () (Array Int Int)\r\n    var2436-$SwitchMap$com$google$gson$stream$JsonToken)\r\n  (define-fun var2105 () var590\r\n    var590-init)\r\n  (define-fun var2950 () String\r\n    String-init)\r\n  (define-fun var580 () String\r\n    (str.++ var2950!1 \"Expecting number, got: \"))\r\n  (define-fun var2374 () String\r\n    (str.++ (append/-1031950772\r\n          (str.++ var2950!1 \"Expecting number, got: \")\r\n          (cast-from-var3881-to-var130 (peek/-699404472 var2365)))\r\n        \"; at path \"\r\n        (getPath/876800821 var2365)))\r\n  (define-fun var253 () Int\r\n    (ordinal/-291641772 (cast-from-var3881-to-var1601 (peek/-699404472 var2365))))\r\n  (define-fun var1340 () var3881\r\n    (peek/-699404472 var2365))\r\n  (define-fun var2915 () Int\r\n    (select var2436-$SwitchMap$com$google$gson$stream$JsonToken\r\n        (ordinal/-291641772\r\n          (cast-from-var3881-to-var1601 (peek/-699404472 var2365)))))\r\n  (define-fun var2365 () var3134\r\n    var3134!val!0)\r\n  (define-fun var881 () var1275\r\n    var1275!val!0)\r\n  (define-fun var2950!1 () String\r\n    \"\")\r\n  (define-fun var1691!1 () String\r\n    \"; at path \")\r\n  (define-fun var3048!1 () String\r\n    \"; at path \")\r\n  (define-fun var2950!2 () String\r\n    \"Expecting number, got: \")\r\n  (define-fun var2374!1 () String\r\n    \"\")\r\n  (define-fun var2105!1 () var590\r\n    var590!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var590-init () var590\r\n    var590!val!0)\r\n  (define-fun peek/-699404472 ((x!0 var3134)) var3881\r\n    var3881!val!0)\r\n  (define-fun cast-from-var3881-to-var130 ((x!0 var3881)) var130\r\n    var130!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var130)) String\r\n    \"\")\r\n  (define-fun getPath/876800821 ((x!0 var3134)) String\r\n    \"\")\r\n  (define-fun <init>/303326391 ((x!0 var590) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var3881-to-var1601 ((x!0 var3881)) var1601\r\n    var1601!val!0)\r\n  (define-fun ordinal/-291641772 ((x!0 var1601)) Int\r\n    0)\r\n)\r\n(error \"line 75 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12234752,
            "run_time": 0.030686616897583008,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1275 is 2\r\n; rep: (as @var1275_0 var1275)\r\n; rep: (as @var1275_1 var1275)\r\n; cardinality of var3134 is 2\r\n; rep: (as @var3134_0 var3134)\r\n; rep: (as @var3134_1 var3134)\r\n; cardinality of var3881 is 1\r\n; rep: (as @var3881_0 var3881)\r\n; cardinality of var2436 is 1\r\n; rep: (as @var2436_0 var2436)\r\n; cardinality of var1601 is 1\r\n; rep: (as @var1601_0 var1601)\r\n; cardinality of var590 is 1\r\n; rep: (as @var590_0 var590)\r\n; cardinality of var130 is 1\r\n; rep: (as @var130_0 var130)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-699404472 ((_arg_1 var3134)) var3881 (as @var3881_0 var3881))\r\n(define-fun ordinal/-291641772 ((_arg_1 var1601)) Int 0)\r\n(define-fun cast-from-var3881-to-var1601 ((_arg_1 var3881)) var1601 (as @var1601_0 var1601))\r\n(define-fun var590-init () var590 (as @var590_0 var590))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1072 String) (BOUND_VARIABLE_1073 var130)) String \"\")\r\n(define-fun cast-from-var3881-to-var130 ((BOUND_VARIABLE_1076 var3881)) var130 (as @var130_0 var130))\r\n(define-fun getPath/876800821 ((BOUND_VARIABLE_1079 var3134)) String \"\")\r\n(define-fun <init>/303326391 ((BOUND_VARIABLE_1082 var590) (BOUND_VARIABLE_1083 String)) void (as @void_0 void))\r\n(define-fun null-var1275 () var1275 (as @var1275_0 var1275))\r\n(define-fun null-var3134 () var3134 (as @var3134_0 var3134))\r\n(define-fun var2436-$SwitchMap$com$google$gson$stream$JsonToken () (Array Int Int) ((as const (Array Int Int)) 0))\r\n(define-fun var881 () var1275 (as @var1275_1 var1275))\r\n(define-fun var2365 () var3134 (as @var3134_1 var3134))\r\n(define-fun var2950!1 () String \"\")\r\n(define-fun var2950!2 () String \"Expecting number, got: \")\r\n(define-fun var580!1 () String \"Expecting number, got: \")\r\n(define-fun var1691!1 () String \"; at path \")\r\n(define-fun var3048!1 () String \"; at path \")\r\n(define-fun var2105!1 () var590 (as @var590_0 var590))\r\n(define-fun var2374!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36970496,
            "run_time": 0.06329655647277832,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1275:\n  ;;   var1275!val!1 var1275!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1275!val!1 () var1275)\n  (declare-fun var1275!val!0 () var1275)\n  ;; cardinality constraint:\n  (forall ((x var1275)) (or (= x var1275!val!1) (= x var1275!val!0)))\n  ;; -----------\n  ;; universe for var3134:\n  ;;   var3134!val!0 var3134!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3134!val!0 () var3134)\n  (declare-fun var3134!val!1 () var3134)\n  ;; cardinality constraint:\n  (forall ((x var3134)) (or (= x var3134!val!0) (= x var3134!val!1)))\n  ;; -----------\n  (define-fun var1691 () String\n    (append/-1031950772\n  (str.++ var2950!1 \"Expecting number, got: \")\n  (cast-from-var3881-to-var130 (peek/-699404472 var2365))))\n  (define-fun var532 () String\n    (str.++ (append/-1031950772\n          (str.++ var2950!1 \"Expecting number, got: \")\n          (cast-from-var3881-to-var130 (peek/-699404472 var2365)))\n        \"; at path \"\n        (getPath/876800821 var2365)))\n  (define-fun var2436-$SwitchMap$com$google$gson$stream$JsonToken () (Array Int Int)\n    ((as const (Array Int Int)) 4))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2105 () var590\n    var590-init)\n  (define-fun var3048 () String\n    (str.++ (append/-1031950772\n          (str.++ var2950!1 \"Expecting number, got: \")\n          (cast-from-var3881-to-var130 (peek/-699404472 var2365)))\n        \"; at path \"))\n  (define-fun var165 () String\n    (getPath/876800821 var2365))\n  (define-fun null-var3134 () var3134\n    var3134!val!1)\n  (define-fun var2950 () String\n    String-init)\n  (define-fun null-var1275 () var1275\n    var1275!val!1)\n  (define-fun var2950!2 () String\n    \"Expecting number, got: \")\n  (define-fun var580!1 () String\n    \"Expecting number, got: \")\n  (define-fun var580 () String\n    (str.++ var2950!1 \"Expecting number, got: \"))\n  (define-fun var253 () Int\n    (ordinal/-291641772 (cast-from-var3881-to-var1601 (peek/-699404472 var2365))))\n  (define-fun var1340 () var3881\n    (peek/-699404472 var2365))\n  (define-fun var2915 () Int\n    (select var2436-$SwitchMap$com$google$gson$stream$JsonToken\n        (ordinal/-291641772\n          (cast-from-var3881-to-var1601 (peek/-699404472 var2365)))))\n  (define-fun var2374 () String\n    (str.++ (append/-1031950772\n          (str.++ var2950!1 \"Expecting number, got: \")\n          (cast-from-var3881-to-var130 (peek/-699404472 var2365)))\n        \"; at path \"\n        (getPath/876800821 var2365)))\n  (define-fun var2248 () (Array Int Int)\n    var2436-$SwitchMap$com$google$gson$stream$JsonToken)\n  (define-fun var2365 () var3134\n    var3134!val!0)\n  (define-fun var881 () var1275\n    var1275!val!0)\n  (define-fun var2950!1 () String\n    \"\")\n  (define-fun var1691!1 () String\n    \"; at path \")\n  (define-fun var3048!1 () String\n    \"; at path \")\n  (define-fun var2374!1 () String\n    \"\")\n  (define-fun var2105!1 () var590\n    var590!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var590-init () var590\n    var590!val!0)\n  (define-fun peek/-699404472 ((x!0 var3134)) var3881\n    var3881!val!0)\n  (define-fun cast-from-var3881-to-var130 ((x!0 var3881)) var130\n    var130!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var130)) String\n    \"\")\n  (define-fun getPath/876800821 ((x!0 var3134)) String\n    \"\")\n  (define-fun <init>/303326391 ((x!0 var590) (x!1 String)) void\n    void!val!0)\n  (define-fun cast-from-var3881-to-var1601 ((x!0 var3881)) var1601\n    var1601!val!0)\n  (define-fun ordinal/-291641772 ((x!0 var1601)) Int\n    0)\n)\n(error \"line 75 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175779840,
            "run_time": 1.2852888107299805,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3134/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.NumberTypeAdapter__read__-1568034327\\659.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3048!1 =\r\n     concat(all_39_4, all_39_3)\r\n   var1691!1 =\r\n     concat(all_36_2, \"; at path \")\r\n   all_39_4 =\r\n     concat(all_36_2, \"; at path \")\r\n\r\n982ms\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @this: com.google.gson.internal.bind.NumberTypeAdapter",
            "r0 := @parameter0: com.google.gson.stream.JsonReader",
            "r1 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>()",
            "$r2 = <com.google.gson.internal.bind.NumberTypeAdapter$2: int[] $SwitchMap$com$google$gson$stream$JsonToken>",
            "$i0 = virtualinvoke r1.<com.google.gson.stream.JsonToken: int ordinal()>()",
            "$i1 = $r2[$i0]",
            "tableswitch($i1) {     case 1: goto virtualinvoke r0.<com.google.gson.stream.JsonReader: void nextNull()>();     case 2: goto $r4 = r3.<com.google.gson.internal.bind.NumberTypeAdapter: com.google.gson.ToNumberStrategy toNumberStrategy>;     case 3: goto $r4 = r3.<com.google.gson.internal.bind.NumberTypeAdapter: com.google.gson.ToNumberStrategy toNumberStrategy>;     default: goto $r6 = new com.google.gson.JsonSyntaxException; }",
            "$r6 = new com.google.gson.JsonSyntaxException",
            "$r7 = new java.lang.StringBuilder",
            "specialinvoke $r7.<java.lang.StringBuilder: void <init>()>()",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Expecting number, got: \")",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r1)",
            "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"; at path \")",
            "$r10 = virtualinvoke r0.<com.google.gson.stream.JsonReader: java.lang.String getPath()>()",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r6.<com.google.gson.JsonSyntaxException: void <init>(java.lang.String)>($r13)",
            "throw $r6"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter__read__-1970280496\\801.smt2",
        "z3": {
            "memory": 32362496,
            "run_time": 60.00884771347046,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1695744,
            "run_time": 0.04501152038574219,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var454 is 2\r\n; rep: (as @var454_0 var454)\r\n; rep: (as @var454_1 var454)\r\n; cardinality of var1510 is 4\r\n; rep: (as @var1510_0 var1510)\r\n; rep: (as @var1510_1 var1510)\r\n; rep: (as @var1510_2 var1510)\r\n; rep: (as @var1510_3 var1510)\r\n; cardinality of var2289 is 2\r\n; rep: (as @var2289_0 var2289)\r\n; rep: (as @var2289_1 var2289)\r\n; cardinality of var908 is 1\r\n; rep: (as @var908_0 var908)\r\n; cardinality of var1544 is 5\r\n; rep: (as @var1544_0 var1544)\r\n; rep: (as @var1544_1 var1544)\r\n; rep: (as @var1544_2 var1544)\r\n; rep: (as @var1544_3 var1544)\r\n; rep: (as @var1544_4 var1544)\r\n; cardinality of var3175 is 1\r\n; rep: (as @var3175_0 var3175)\r\n; cardinality of var1590 is 2\r\n; rep: (as @var1590_0 var1590)\r\n; rep: (as @var1590_1 var1590)\r\n; cardinality of var3551 is 1\r\n; rep: (as @var3551_0 var3551)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-699404472 ((_arg_1 var1510)) var2289 (as @var2289_1 var2289))\r\n(define-fun constructor/220257121 ((_arg_1 var454)) var908 (as @var908_0 var908))\r\n(define-fun var908_construct/786007884 ((_arg_1 var908)) var1544 (as @var1544_1 var1544))\r\n(define-fun cast-from-var1544-to-var3175 ((_arg_1 var1544)) var3175 (as @var3175_0 var3175))\r\n(define-fun beginArray/1551982569 ((BOUND_VARIABLE_1127 var1510)) void (as @void_0 void))\r\n(define-fun hasNext/1315043792 ((_arg_1 var1510)) Bool true)\r\n(define-fun keyTypeAdapter/220257121 ((_arg_1 var454)) var1590 (as @var1590_0 var1590))\r\n(define-fun read/91428458 ((_arg_1 var1590) (_arg_2 var1510)) var1544 (ite (= (as @var1590_1 var1590) _arg_1) (ite (= (as @var1510_3 var1510) _arg_2) (as @var1544_3 var1544) (as @var1544_2 var1544)) (as @var1544_2 var1544)))\r\n(define-fun valueTypeAdapter/220257121 ((_arg_1 var454)) var1590 (as @var1590_1 var1590))\r\n(define-fun var3175_put/1464166817 ((_arg_1 var3175) (_arg_2 var1544) (_arg_3 var1544)) var1544 (as @var1544_4 var1544))\r\n(define-fun var3551-init () var3551 (as @var3551_0 var3551))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1130 String) (BOUND_VARIABLE_1131 var1544)) String \"\")\r\n(define-fun <init>/303326391 ((BOUND_VARIABLE_1134 var3551) (BOUND_VARIABLE_1135 String)) void (as @void_0 void))\r\n(define-fun null-var454 () var454 (as @var454_0 var454))\r\n(define-fun null-var1510 () var1510 (as @var1510_0 var1510))\r\n(define-fun var2289-NULL () var2289 (as @var2289_0 var2289))\r\n(define-fun var2289-BEGIN_ARRAY () var2289 (as @var2289_1 var2289))\r\n(define-fun null-var1544 () var1544 (as @var1544_0 var1544))\r\n(define-fun var3415 () var454 (as @var454_1 var454))\r\n(define-fun var2995 () var1510 (as @var1510_1 var1510))\r\n(define-fun var2995!1 () var1510 (as @var1510_2 var1510))\r\n(define-fun var2995!2 () var1510 (as @var1510_3 var1510))\r\n(define-fun var511!1 () String \"\")\r\n(define-fun var511!2 () String \"duplicate key: \")\r\n(define-fun var3708!1 () String \"duplicate key: \")\r\n(define-fun var3891!1 () var3551 (as @var3551_0 var3551))\r\n(define-fun var2353!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36913152,
            "run_time": 60.00434875488281,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 188178432,
            "run_time": 1.3169310092926025,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3708!1 () String \"duplicate key: \")\r\n  (define-fun var511!2 () String \"duplicate key: \")\r\n  (define-fun var511!1 () String \"\")\r\n  (define-fun var2995!2 () var1510 var1510!18)\r\n  (define-fun var2995!1 () var1510 var1510!16)\r\n  (define-fun var2995 () var1510 var1510!14)\r\n  (define-fun var3415 () var454 var454!12)\r\n  (define-fun null-var1544 () var1544 var1544!10)\r\n  (define-fun var2289-BEGIN_ARRAY () var2289 var2289!8)\r\n  (define-fun var2289-NULL () var2289 var2289!6)\r\n  (define-fun null-var1510 () var1510 var1510!4)\r\n  (define-fun null-var454 () var454 var454!2)\r\n  (define-fun var1544!56 () var1544 (var3175_put/1464166817 var3175!46 var1544!50 var1544!54))\r\n  (define-fun var1590!52 () var1590 (valueTypeAdapter/220257121 var454!12))\r\n  (define-fun var1544!54 () var1544 (read/91428458 var1590!52 var1510!18))\r\n  (define-fun var1544!50 () var1544 (read/91428458 var1590!48 var1510!18))\r\n  (define-fun var1590!48 () var1590 (keyTypeAdapter/220257121 var454!12))\r\n  (define-fun var3175!46 () var3175 (cast-from-var1544-to-var3175 var1544!44))\r\n  (define-fun var1544!44 () var1544 (var908_construct/786007884 var908!42))\r\n  (define-fun var908!42 () var908 (constructor/220257121 var454!12))\r\n  (define-fun var2289!8 () var2289 (peek/-699404472 var1510!14))\r\n  (define-fun hasNext/1315043792 ((x!0 var1510)) Bool (ite (= x!0 var1510!16) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 14,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @this: com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter",
            "r0 := @parameter0: com.google.gson.stream.JsonReader",
            "r1 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>()",
            "$r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL>",
            "if r1 != $r2 goto $r4 = r3.<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.internal.ObjectConstructor constructor>",
            "$r4 = r3.<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.internal.ObjectConstructor constructor>",
            "$r5 = interfaceinvoke $r4.<com.google.gson.internal.ObjectConstructor: java.lang.Object construct()>()",
            "r6 = (java.util.Map) $r5",
            "$r7 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_ARRAY>",
            "if r1 != $r7 goto virtualinvoke r0.<com.google.gson.stream.JsonReader: void beginObject()>()",
            "virtualinvoke r0.<com.google.gson.stream.JsonReader: void beginArray()>()",
            "$z1 = virtualinvoke r0.<com.google.gson.stream.JsonReader: boolean hasNext()>()",
            "if $z1 == 0 goto virtualinvoke r0.<com.google.gson.stream.JsonReader: void endArray()>()",
            "virtualinvoke r0.<com.google.gson.stream.JsonReader: void beginArray()>()",
            "$r16 = r3.<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.TypeAdapter keyTypeAdapter>",
            "r23 = virtualinvoke $r16.<com.google.gson.TypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>(r0)",
            "$r17 = r3.<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.TypeAdapter valueTypeAdapter>",
            "r24 = virtualinvoke $r17.<com.google.gson.TypeAdapter: java.lang.Object read(com.google.gson.stream.JsonReader)>(r0)",
            "r25 = interfaceinvoke r6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(r23, r24)",
            "if r25 == null goto virtualinvoke r0.<com.google.gson.stream.JsonReader: void endArray()>()",
            "$r18 = new com.google.gson.JsonSyntaxException",
            "$r19 = new java.lang.StringBuilder",
            "specialinvoke $r19.<java.lang.StringBuilder: void <init>()>()",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"duplicate key: \")",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r23)",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r18.<com.google.gson.JsonSyntaxException: void <init>(java.lang.String)>($r22)",
            "throw $r18"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.ReflectiveTypeAdapterFactory__checkAccessible__-1516662337\\891.smt2",
        "z3": {
            "memory": 32223232,
            "run_time": 0.06013846397399902,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1546:\r\n  ;;   var1546!val!0 var1546!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1546!val!0 () var1546)\r\n  (declare-fun var1546!val!1 () var1546)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1546)) (or (= x var1546!val!0) (= x var1546!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1545:\r\n  ;;   var1545!val!0 var1545!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1545!val!0 () var1545)\r\n  (declare-fun var1545!val!1 () var1545)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1545)) (or (= x var1545!val!0) (= x var1545!val!1)))\r\n  ;; -----------\r\n  ;; universe for var539:\r\n  ;;   var539!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var539!val!0 () var539)\r\n  ;; cardinality constraint:\r\n  (forall ((x var539)) (= x var539!val!0))\r\n  ;; -----------\r\n  (define-fun var3817 () String\r\n    (var234_getAccessibleObjectDescription/-550785423\r\n  var1032\r\n  (ite (= 1 1) true false)))\r\n  (define-fun null-var1546 () var1546\r\n    var1546!val!1)\r\n  (define-fun var905 () String\r\n    String-init)\r\n  (define-fun var1566 () Int\r\n    (var539_getModifiers/622745125 (cast-from-var1546-to-var539 var1032)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2456 () Bool\r\n    (var1958_isStatic/379715466\r\n  (var539_getModifiers/622745125 (cast-from-var1546-to-var539 var1032))))\r\n  (define-fun var2322 () var539\r\n    (cast-from-var1546-to-var539 var1032))\r\n  (define-fun var3612 () var1545\r\n    var1545!val!0)\r\n  (define-fun var108 () String\r\n    (str.++ var905!1\r\n        (var234_getAccessibleObjectDescription/-550785423\r\n          var1032\r\n          (ite (= 1 1) true false))\r\n        \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\"))\r\n  (define-fun var1734 () String\r\n    (str.++ var905!1\r\n        (var234_getAccessibleObjectDescription/-550785423\r\n          var1032\r\n          (ite (= 1 1) true false))))\r\n  (define-fun var2305 () String\r\n    (str.++ var905!1\r\n        (var234_getAccessibleObjectDescription/-550785423\r\n          var1032\r\n          (ite (= 1 1) true false))\r\n        \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\"))\r\n  (define-fun var1032 () var1546\r\n    var1546!val!0)\r\n  (define-fun var1231 () var1545\r\n    null-var1545)\r\n  (define-fun var3567 () Bool\r\n    (var1243_canAccess/24921369 var1032 null-var1545))\r\n  (define-fun null-var1545 () var1545\r\n    var1545!val!1)\r\n  (define-fun var1019 () var2971\r\n    var2971-init)\r\n  (define-fun var905!1 () String\r\n    \"\")\r\n  (define-fun var1734!1 () String\r\n    \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\")\r\n  (define-fun var905!2 () String\r\n    \"\")\r\n  (define-fun var1019!1 () var2971\r\n    var2971!val!0)\r\n  (define-fun var2971-init () var2971\r\n    var2971!val!0)\r\n  (define-fun var2305!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1243_canAccess/24921369 ((x!0 var1546) (x!1 var1545)) Bool\r\n    false)\r\n  (define-fun var1958_isStatic/379715466 ((x!0 Int)) Bool\r\n    true)\r\n  (define-fun cast-from-var1546-to-var539 ((x!0 var1546)) var539\r\n    var539!val!0)\r\n  (define-fun var539_getModifiers/622745125 ((x!0 var539)) Int\r\n    0)\r\n  (define-fun var234_getAccessibleObjectDescription/-550785423 ((x!0 var1546)\r\n   (x!1 Bool)) String\r\n    \"\")\r\n  (define-fun <init>/-1993171084 ((x!0 var2971) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 67 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.04715299606323242,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1545 is 2\r\n; rep: (as @var1545_0 var1545)\r\n; rep: (as @var1545_1 var1545)\r\n; cardinality of var1546 is 2\r\n; rep: (as @var1546_0 var1546)\r\n; rep: (as @var1546_1 var1546)\r\n; cardinality of var539 is 1\r\n; rep: (as @var539_0 var539)\r\n; cardinality of var1958 is 1\r\n; rep: (as @var1958_0 var1958)\r\n; cardinality of var1243 is 1\r\n; rep: (as @var1243_0 var1243)\r\n; cardinality of var234 is 1\r\n; rep: (as @var234_0 var234)\r\n; cardinality of var2971 is 1\r\n; rep: (as @var2971_0 var2971)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var1546-to-var539 ((_arg_1 var1546)) var539 (as @var539_0 var539))\r\n(define-fun var539_getModifiers/622745125 ((_arg_1 var539)) Int (- 1))\r\n(define-fun var1958_isStatic/379715466 ((_arg_1 Int)) Bool true)\r\n(define-fun var1243_canAccess/24921369 ((_arg_1 var1546) (_arg_2 var1545)) Bool false)\r\n(define-fun var234_getAccessibleObjectDescription/-550785423 ((BOUND_VARIABLE_660 var1546) (BOUND_VARIABLE_661 Bool)) String \"\")\r\n(define-fun var2971-init () var2971 (as @var2971_0 var2971))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/-1993171084 ((BOUND_VARIABLE_664 var2971) (BOUND_VARIABLE_665 String)) void (as @void_0 void))\r\n(define-fun null-var1545 () var1545 (as @var1545_0 var1545))\r\n(define-fun null-var1546 () var1546 (as @var1546_0 var1546))\r\n(define-fun var3612 () var1545 (as @var1545_1 var1545))\r\n(define-fun var1032 () var1546 (as @var1546_1 var1546))\r\n(define-fun var905!1 () String \"\")\r\n(define-fun var905!2 () String \"\")\r\n(define-fun var1734!1 () String \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\")\r\n(define-fun var1019!1 () var2971 (as @var2971_0 var2971))\r\n(define-fun var2305!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34959360,
            "run_time": 0.09300971031188965,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1546:\n  ;;   var1546!val!0 var1546!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1546!val!0 () var1546)\n  (declare-fun var1546!val!1 () var1546)\n  ;; cardinality constraint:\n  (forall ((x var1546)) (or (= x var1546!val!0) (= x var1546!val!1)))\n  ;; -----------\n  ;; universe for var1545:\n  ;;   var1545!val!0 var1545!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1545!val!0 () var1545)\n  (declare-fun var1545!val!1 () var1545)\n  ;; cardinality constraint:\n  (forall ((x var1545)) (or (= x var1545!val!0) (= x var1545!val!1)))\n  ;; -----------\n  ;; universe for var539:\n  ;;   var539!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var539!val!0 () var539)\n  ;; cardinality constraint:\n  (forall ((x var539)) (= x var539!val!0))\n  ;; -----------\n  (define-fun var2456 () Bool\n    (var1958_isStatic/379715466\n  (var539_getModifiers/622745125 (cast-from-var1546-to-var539 var1032))))\n  (define-fun null-var1546 () var1546\n    var1546!val!1)\n  (define-fun var2322 () var539\n    (cast-from-var1546-to-var539 var1032))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3612 () var1545\n    var1545!val!0)\n  (define-fun var1231 () var1545\n    null-var1545)\n  (define-fun var108 () String\n    (str.++ var905!1\n        (var234_getAccessibleObjectDescription/-550785423\n          var1032\n          (ite (= 1 1) true false))\n        \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\"))\n  (define-fun var3567 () Bool\n    (var1243_canAccess/24921369 var1032 null-var1545))\n  (define-fun var1019 () var2971\n    var2971-init)\n  (define-fun var1734 () String\n    (str.++ var905!1\n        (var234_getAccessibleObjectDescription/-550785423\n          var1032\n          (ite (= 1 1) true false))))\n  (define-fun var2305 () String\n    (str.++ var905!1\n        (var234_getAccessibleObjectDescription/-550785423\n          var1032\n          (ite (= 1 1) true false))\n        \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\"))\n  (define-fun var1032 () var1546\n    var1546!val!0)\n  (define-fun var1566 () Int\n    (var539_getModifiers/622745125 (cast-from-var1546-to-var539 var1032)))\n  (define-fun var3817 () String\n    (var234_getAccessibleObjectDescription/-550785423\n  var1032\n  (ite (= 1 1) true false)))\n  (define-fun null-var1545 () var1545\n    var1545!val!1)\n  (define-fun var905 () String\n    String-init)\n  (define-fun var905!1 () String\n    \"\")\n  (define-fun var1734!1 () String\n    \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\")\n  (define-fun var905!2 () String\n    \"\")\n  (define-fun var1019!1 () var2971\n    var2971!val!0)\n  (define-fun var2971-init () var2971\n    var2971!val!0)\n  (define-fun var2305!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1243_canAccess/24921369 ((x!0 var1546) (x!1 var1545)) Bool\n    false)\n  (define-fun var1958_isStatic/379715466 ((x!0 Int)) Bool\n    true)\n  (define-fun cast-from-var1546-to-var539 ((x!0 var1546)) var539\n    var539!val!0)\n  (define-fun var539_getModifiers/622745125 ((x!0 var539)) Int\n    0)\n  (define-fun var234_getAccessibleObjectDescription/-550785423 ((x!0 var1546)\n   (x!1 Bool)) String\n    \"\")\n  (define-fun <init>/-1993171084 ((x!0 var2971) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 67 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168988672,
            "run_time": 1.192087173461914,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1545/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.ReflectiveTypeAdapterFactory__checkAccessible__-1516662337\\891.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_34_3 =\r\n     concat(var905!2, \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\")\r\n   var1734!1 =\r\n     concat(var905!2, \" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\")\r\n\r\n882ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.Object",
            "r0 := @parameter1: java.lang.reflect.AccessibleObject",
            "$r1 = (java.lang.reflect.Member) r0",
            "$i0 = interfaceinvoke $r1.<java.lang.reflect.Member: int getModifiers()>()",
            "$z0 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>($i0)",
            "if $z0 == 0 goto $r9 = r2",
            "$r9 = null",
            "goto [?= $z1 = staticinvoke <com.google.gson.internal.ReflectionAccessFilterHelper: boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object)>(r0, $r9)]",
            "$z1 = staticinvoke <com.google.gson.internal.ReflectionAccessFilterHelper: boolean canAccess(java.lang.reflect.AccessibleObject,java.lang.Object)>(r0, $r9)",
            "if $z1 != 0 goto return",
            "r3 = staticinvoke <com.google.gson.internal.reflect.ReflectionHelper: java.lang.String getAccessibleObjectDescription(java.lang.reflect.AccessibleObject,boolean)>(r0, 1)",
            "$r4 = new com.google.gson.JsonIOException",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" is not accessible and ReflectionAccessFilter does not permit making it accessible. Register a TypeAdapter for the declaring type, adjust the access filter or increase the visibility of the element and its declaring type.\")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r4.<com.google.gson.JsonIOException: void <init>(java.lang.String)>($r8)",
            "throw $r4"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter__read__-1970280496\\879.smt2",
        "z3": {
            "memory": 31948800,
            "run_time": 0.04526019096374512,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1359:\r\n  ;;   var1359!val!2 var1359!val!0 var1359!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1359!val!2 () var1359)\r\n  (declare-fun var1359!val!0 () var1359)\r\n  (declare-fun var1359!val!1 () var1359)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1359))\r\n          (or (= x var1359!val!2) (= x var1359!val!0) (= x var1359!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2024:\r\n  ;;   var2024!val!0 var2024!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2024!val!0 () var2024)\r\n  (declare-fun var2024!val!1 () var2024)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2024)) (or (= x var2024!val!0) (= x var2024!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3134:\r\n  ;;   var3134!val!0 var3134!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3134!val!0 () var3134)\r\n  (declare-fun var3134!val!1 () var3134)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3134)) (or (= x var3134!val!0) (= x var3134!val!1)))\r\n  ;; -----------\r\n  (define-fun var3278!1 () var1359\r\n    var1359!val!2)\r\n  (define-fun var3278 () var1359\r\n    var1359!val!0)\r\n  (define-fun var1125 () var3930\r\n    (constructor/220257121 var16))\r\n  (define-fun var16 () var3134\r\n    var3134!val!0)\r\n  (define-fun var1599 () var1814\r\n    (cast-from-var341-to-var1814\r\n  (var3930_construct/786007884 (constructor/220257121 var16))))\r\n  (define-fun var903 () var341\r\n    (var3930_construct/786007884 (constructor/220257121 var16)))\r\n  (define-fun var2265 () var2024\r\n    var2024-BEGIN_ARRAY)\r\n  (define-fun null-var3134 () var3134\r\n    var3134!val!1)\r\n  (define-fun var2024-NULL () var2024\r\n    var2024!val!1)\r\n  (define-fun var3613 () Bool\r\n    (hasNext/1315043792 var3278!1))\r\n  (define-fun var3943 () var2024\r\n    (peek/-699404472 var3278))\r\n  (define-fun var1450 () var2024\r\n    var2024-NULL)\r\n  (define-fun null-var1359 () var1359\r\n    var1359!val!1)\r\n  (define-fun var2024-BEGIN_ARRAY () var2024\r\n    var2024!val!0)\r\n  (define-fun var3278!2 () var1359\r\n    var1359!val!2)\r\n  (define-fun peek/-699404472 ((x!0 var1359)) var2024\r\n    var2024!val!0)\r\n  (define-fun hasNext/1315043792 ((x!0 var1359)) Bool\r\n    false)\r\n  (define-fun constructor/220257121 ((x!0 var3134)) var3930\r\n    var3930!val!0)\r\n  (define-fun cast-from-var341-to-var1814 ((x!0 var341)) var1814\r\n    var1814!val!0)\r\n  (define-fun endArray/-1907335909 ((x!0 var1359)) void\r\n    void!val!0)\r\n  (define-fun var3930_construct/786007884 ((x!0 var3930)) var341\r\n    var341!val!0)\r\n  (define-fun beginArray/1551982569 ((x!0 var1359)) void\r\n    void!val!0)\r\n)\r\n(error \"line 57 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.031017541885375977,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3134 is 2\r\n; rep: (as @var3134_0 var3134)\r\n; rep: (as @var3134_1 var3134)\r\n; cardinality of var1359 is 3\r\n; rep: (as @var1359_0 var1359)\r\n; rep: (as @var1359_1 var1359)\r\n; rep: (as @var1359_2 var1359)\r\n; cardinality of var2024 is 2\r\n; rep: (as @var2024_0 var2024)\r\n; rep: (as @var2024_1 var2024)\r\n; cardinality of var3930 is 1\r\n; rep: (as @var3930_0 var3930)\r\n; cardinality of var341 is 1\r\n; rep: (as @var341_0 var341)\r\n; cardinality of var1814 is 1\r\n; rep: (as @var1814_0 var1814)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun peek/-699404472 ((_arg_1 var1359)) var2024 (as @var2024_1 var2024))\r\n(define-fun constructor/220257121 ((BOUND_VARIABLE_529 var3134)) var3930 (as @var3930_0 var3930))\r\n(define-fun var3930_construct/786007884 ((BOUND_VARIABLE_532 var3930)) var341 (as @var341_0 var341))\r\n(define-fun cast-from-var341-to-var1814 ((BOUND_VARIABLE_535 var341)) var1814 (as @var1814_0 var1814))\r\n(define-fun beginArray/1551982569 ((BOUND_VARIABLE_538 var1359)) void (as @void_0 void))\r\n(define-fun hasNext/1315043792 ((_arg_1 var1359)) Bool false)\r\n(define-fun endArray/-1907335909 ((BOUND_VARIABLE_541 var1359)) void (as @void_0 void))\r\n(define-fun null-var3134 () var3134 (as @var3134_0 var3134))\r\n(define-fun null-var1359 () var1359 (as @var1359_0 var1359))\r\n(define-fun var2024-NULL () var2024 (as @var2024_0 var2024))\r\n(define-fun var2024-BEGIN_ARRAY () var2024 (as @var2024_1 var2024))\r\n(define-fun var16 () var3134 (as @var3134_1 var3134))\r\n(define-fun var3278 () var1359 (as @var1359_1 var1359))\r\n(define-fun var3278!1 () var1359 (as @var1359_2 var1359))\r\n(define-fun var3278!2 () var1359 (as @var1359_0 var1359))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32808960,
            "run_time": 0.07749152183532715,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1359:\n  ;;   var1359!val!2 var1359!val!0 var1359!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1359!val!2 () var1359)\n  (declare-fun var1359!val!0 () var1359)\n  (declare-fun var1359!val!1 () var1359)\n  ;; cardinality constraint:\n  (forall ((x var1359))\n          (or (= x var1359!val!2) (= x var1359!val!0) (= x var1359!val!1)))\n  ;; -----------\n  ;; universe for var2024:\n  ;;   var2024!val!0 var2024!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2024!val!0 () var2024)\n  (declare-fun var2024!val!1 () var2024)\n  ;; cardinality constraint:\n  (forall ((x var2024)) (or (= x var2024!val!0) (= x var2024!val!1)))\n  ;; -----------\n  ;; universe for var3134:\n  ;;   var3134!val!0 var3134!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3134!val!0 () var3134)\n  (declare-fun var3134!val!1 () var3134)\n  ;; cardinality constraint:\n  (forall ((x var3134)) (or (= x var3134!val!0) (= x var3134!val!1)))\n  ;; -----------\n  (define-fun var3278!1 () var1359\n    var1359!val!2)\n  (define-fun var3278 () var1359\n    var1359!val!0)\n  (define-fun var1450 () var2024\n    var2024-NULL)\n  (define-fun var2265 () var2024\n    var2024-BEGIN_ARRAY)\n  (define-fun var3613 () Bool\n    (hasNext/1315043792 var3278!1))\n  (define-fun var16 () var3134\n    var3134!val!0)\n  (define-fun var1125 () var3930\n    (constructor/220257121 var16))\n  (define-fun null-var3134 () var3134\n    var3134!val!1)\n  (define-fun var2024-NULL () var2024\n    var2024!val!1)\n  (define-fun var3943 () var2024\n    (peek/-699404472 var3278))\n  (define-fun var903 () var341\n    (var3930_construct/786007884 (constructor/220257121 var16)))\n  (define-fun var1599 () var1814\n    (cast-from-var341-to-var1814\n  (var3930_construct/786007884 (constructor/220257121 var16))))\n  (define-fun null-var1359 () var1359\n    var1359!val!1)\n  (define-fun var2024-BEGIN_ARRAY () var2024\n    var2024!val!0)\n  (define-fun var3278!2 () var1359\n    var1359!val!2)\n  (define-fun peek/-699404472 ((x!0 var1359)) var2024\n    var2024!val!0)\n  (define-fun hasNext/1315043792 ((x!0 var1359)) Bool\n    false)\n  (define-fun constructor/220257121 ((x!0 var3134)) var3930\n    var3930!val!0)\n  (define-fun cast-from-var341-to-var1814 ((x!0 var341)) var1814\n    var1814!val!0)\n  (define-fun endArray/-1907335909 ((x!0 var1359)) void\n    void!val!0)\n  (define-fun var3930_construct/786007884 ((x!0 var3930)) var341\n    var341!val!0)\n  (define-fun beginArray/1551982569 ((x!0 var1359)) void\n    void!val!0)\n)\n(error \"line 57 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155668480,
            "run_time": 0.6789898872375488,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3278!1 () var1359 var1359!14)\r\n  (define-fun var3278 () var1359 var1359!12)\r\n  (define-fun var16 () var3134 var3134!10)\r\n  (define-fun var2024-BEGIN_ARRAY () var2024 var2024!8)\r\n  (define-fun var2024-NULL () var2024 var2024!6)\r\n  (define-fun null-var1359 () var1359 var1359!4)\r\n  (define-fun null-var3134 () var3134 var3134!2)\r\n  (define-fun var2024!8 () var2024 (peek/-699404472 var1359!12))\r\n  (define-fun hasNext/1315043792 ((x!0 var1359)) Bool (ite (= x!0 var1359!14) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 11,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r3 := @this: com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter",
            "r0 := @parameter0: com.google.gson.stream.JsonReader",
            "r1 = virtualinvoke r0.<com.google.gson.stream.JsonReader: com.google.gson.stream.JsonToken peek()>()",
            "$r2 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken NULL>",
            "if r1 != $r2 goto $r4 = r3.<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.internal.ObjectConstructor constructor>",
            "$r4 = r3.<com.google.gson.internal.bind.MapTypeAdapterFactory$Adapter: com.google.gson.internal.ObjectConstructor constructor>",
            "$r5 = interfaceinvoke $r4.<com.google.gson.internal.ObjectConstructor: java.lang.Object construct()>()",
            "r6 = (java.util.Map) $r5",
            "$r7 = <com.google.gson.stream.JsonToken: com.google.gson.stream.JsonToken BEGIN_ARRAY>",
            "if r1 != $r7 goto virtualinvoke r0.<com.google.gson.stream.JsonReader: void beginObject()>()",
            "virtualinvoke r0.<com.google.gson.stream.JsonReader: void beginArray()>()",
            "$z1 = virtualinvoke r0.<com.google.gson.stream.JsonReader: boolean hasNext()>()",
            "if $z1 == 0 goto virtualinvoke r0.<com.google.gson.stream.JsonReader: void endArray()>()",
            "virtualinvoke r0.<com.google.gson.stream.JsonReader: void endArray()>()",
            "goto [?= return r6]",
            "return r6"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.TypeAdapters$33__toString__-1255042229\\625.smt2",
        "z3": {
            "memory": 32522240,
            "run_time": 60.00523018836975,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12365824,
            "run_time": 0.07820010185241699,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1469 is 2\r\n; rep: (as @var1469_0 var1469)\r\n; rep: (as @var1469_1 var1469)\r\n; cardinality of var520 is 1\r\n; rep: (as @var520_0 var520)\r\n; cardinality of var1870 is 1\r\n; rep: (as @var1870_0 var1870)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun val$base/-356231189 ((_arg_1 var1469)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun val$sub/-356231189 ((_arg_1 var1469)) ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun val$typeAdapter/-356231189 ((BOUND_VARIABLE_1343 var1469)) var520 (as @var520_0 var520))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1346 String) (BOUND_VARIABLE_1347 var1870)) String \"\")\r\n(define-fun cast-from-var520-to-var1870 ((BOUND_VARIABLE_1350 var520)) var1870 (as @var1870_0 var1870))\r\n(define-fun null-var1469 () var1469 (as @var1469_0 var1469))\r\n(define-fun var1550 () var1469 (as @var1469_1 var1469))\r\n(define-fun var3318!1 () String \"\")\r\n(define-fun var3318!2 () String \"Factory[type=\")\r\n(define-fun var2002!1 () String \"Factory[type=\")\r\n(define-fun var1660!1 () String \"Factory[type=+\")\r\n(define-fun var1897!1 () String \"Factory[type=+\")\r\n(define-fun var1522!1 () String \"Factory[type=+,adapter=\")\r\n(define-fun var2766!1 () String \"Factory[type=+,adapter=\")\r\n(define-fun var1585!1 () String \"]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33120256,
            "run_time": 0.09221005439758301,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 67 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 68 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 197292032,
            "run_time": 1.4396333694458008,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1469/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.TypeAdapters$33__toString__-1255042229\\625.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1522!1 =\r\n     concat(all_33_6, \",adapter=\")\r\n   var1897!1 =\r\n     concat(all_30_7, all_30_5)\r\n   var1660!1 =\r\n     concat(all_27_4, \"+\")\r\n   var1585!1 =\r\n     concat(all_21_2, \"]\")\r\n   var2002!1 =\r\n     concat(\"Factory[type=\", all_24_3)\r\n   var2766!1 =\r\n     concat(all_16_0, rhs)\r\n   all_16_0 =\r\n     concat(all_36_7, \",adapter=\")\r\n   all_33_6 =\r\n     concat(all_33_9, all_30_5)\r\n   all_30_7 =\r\n     concat(all_30_8, \"+\")\r\n   all_27_4 =\r\n     concat(\"Factory[type=\", all_24_3)\r\n   all_36_7 =\r\n     concat(all_36_10, all_30_5)\r\n   all_33_9 =\r\n     concat(all_33_10, \"+\")\r\n   all_30_8 =\r\n     concat(\"Factory[type=\", all_24_3)\r\n   all_36_10 =\r\n     concat(all_36_11, \"+\")\r\n   all_33_10 =\r\n     concat(\"Factory[type=\", all_24_3)\r\n   all_36_11 =\r\n     concat(\"Factory[type=\", all_24_3)\r\n\r\n674ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: com.google.gson.internal.bind.TypeAdapters$33",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Factory[type=\")",
            "$r2 = r1.<com.google.gson.internal.bind.TypeAdapters$33: java.lang.Class val$base>",
            "$r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"+\")",
            "$r6 = r1.<com.google.gson.internal.bind.TypeAdapters$33: java.lang.Class val$sub>",
            "$r7 = virtualinvoke $r6.<java.lang.Class: java.lang.String getName()>()",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7)",
            "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",adapter=\")",
            "$r10 = r1.<com.google.gson.internal.bind.TypeAdapters$33: com.google.gson.TypeAdapter val$typeAdapter>",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r10)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r14"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.TypeAdapters$34__toString__-904242292\\686.smt2",
        "z3": {
            "memory": 32055296,
            "run_time": 0.08631372451782227,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1660:\r\n  ;;   var1660!val!0 var1660!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1660!val!0 () var1660)\r\n  (declare-fun var1660!val!1 () var1660)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1660)) (or (= x var1660!val!0) (= x var1660!val!1)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  (define-fun var2937 () String\r\n    (let ((a!1 (append/-1031950772\r\n             (str.++ var912!1\r\n                     \"Factory[typeHierarchy=\"\r\n                     (getName/-1958580599 (val$clazz/-356231188 var459))\r\n                     \",adapter=\")\r\n             (cast-from-var1101-to-var2275 (val$typeAdapter/-356231188 var459)))))\r\n  (str.++ a!1 \"]\")))\r\n  (define-fun var3948 () var1101\r\n    (val$typeAdapter/-356231188 var459))\r\n  (define-fun var459 () var1660\r\n    var1660!val!0)\r\n  (define-fun var69 () String\r\n    (append/-1031950772\r\n  (str.++ var912!1\r\n          \"Factory[typeHierarchy=\"\r\n          (getName/-1958580599 (val$clazz/-356231188 var459))\r\n          \",adapter=\")\r\n  (cast-from-var1101-to-var2275 (val$typeAdapter/-356231188 var459))))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var912 () String\r\n    String-init)\r\n  (define-fun null-var1660 () var1660\r\n    var1660!val!1)\r\n  (define-fun var2243 () ClassObject\r\n    (val$clazz/-356231188 var459))\r\n  (define-fun var730!1 () String\r\n    \"Factory[typeHierarchy=,adapter=\")\r\n  (define-fun var730 () String\r\n    (str.++ var912!1\r\n        \"Factory[typeHierarchy=\"\r\n        (getName/-1958580599 (val$clazz/-356231188 var459))\r\n        \",adapter=\"))\r\n  (define-fun var2027 () String\r\n    (getName/-1958580599 (val$clazz/-356231188 var459)))\r\n  (define-fun var336 () String\r\n    (let ((a!1 (append/-1031950772\r\n             (str.++ var912!1\r\n                     \"Factory[typeHierarchy=\"\r\n                     (getName/-1958580599 (val$clazz/-356231188 var459))\r\n                     \",adapter=\")\r\n             (cast-from-var1101-to-var2275 (val$typeAdapter/-356231188 var459)))))\r\n  (str.++ a!1 \"]\")))\r\n  (define-fun var2856 () String\r\n    (str.++ var912!1 \"Factory[typeHierarchy=\"))\r\n  (define-fun var1627 () String\r\n    (str.++ var912!1\r\n        \"Factory[typeHierarchy=\"\r\n        (getName/-1958580599 (val$clazz/-356231188 var459))))\r\n  (define-fun var912!1 () String\r\n    \"\")\r\n  (define-fun var912!2 () String\r\n    \"Factory[typeHierarchy=\")\r\n  (define-fun var69!1 () String\r\n    \"]\")\r\n  (define-fun var2856!1 () String\r\n    \"Factory[typeHierarchy=\")\r\n  (define-fun var1627!1 () String\r\n    \"Factory[typeHierarchy=,adapter=\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun val$clazz/-356231188 ((x!0 var1660)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun val$typeAdapter/-356231188 ((x!0 var1660)) var1101\r\n    var1101!val!0)\r\n  (define-fun cast-from-var1101-to-var2275 ((x!0 var1101)) var2275\r\n    var2275!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2275)) String\r\n    \"\")\r\n)\r\n(error \"line 56 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.04680490493774414,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1660 is 2\r\n; rep: (as @var1660_0 var1660)\r\n; rep: (as @var1660_1 var1660)\r\n; cardinality of var1101 is 1\r\n; rep: (as @var1101_0 var1101)\r\n; cardinality of var2275 is 1\r\n; rep: (as @var2275_0 var2275)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun val$clazz/-356231188 ((_arg_1 var1660)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun val$typeAdapter/-356231188 ((BOUND_VARIABLE_1192 var1660)) var1101 (as @var1101_0 var1101))\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_1195 String) (BOUND_VARIABLE_1196 var2275)) String \"\")\r\n(define-fun cast-from-var1101-to-var2275 ((BOUND_VARIABLE_1199 var1101)) var2275 (as @var2275_0 var2275))\r\n(define-fun null-var1660 () var1660 (as @var1660_0 var1660))\r\n(define-fun var459 () var1660 (as @var1660_1 var1660))\r\n(define-fun var912!1 () String \"\")\r\n(define-fun var912!2 () String \"Factory[typeHierarchy=\")\r\n(define-fun var2856!1 () String \"Factory[typeHierarchy=\")\r\n(define-fun var1627!1 () String \"Factory[typeHierarchy=,adapter=\")\r\n(define-fun var730!1 () String \"Factory[typeHierarchy=,adapter=\")\r\n(define-fun var69!1 () String \"]\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34922496,
            "run_time": 0.1382617950439453,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 55 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 56 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169611264,
            "run_time": 0.9718461036682129,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1660/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.TypeAdapters$34__toString__-904242292\\686.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var69!1 =\r\n     concat(all_32_5, \"]\")\r\n   all_32_8 =\r\n     concat(all_32_9, \",adapter=\")\r\n   var1627!1 =\r\n     concat(all_26_3, \",adapter=\")\r\n   var2856!1 =\r\n     concat(\"Factory[typeHierarchy=\", all_23_2)\r\n   var730!1 =\r\n     concat(all_29_3, rhs)\r\n   all_29_3 =\r\n     concat(all_29_4, \",adapter=\")\r\n   all_32_9 =\r\n     concat(\"Factory[typeHierarchy=\", all_23_2)\r\n   all_26_3 =\r\n     concat(\"Factory[typeHierarchy=\", all_23_2)\r\n   all_29_4 =\r\n     concat(\"Factory[typeHierarchy=\", all_23_2)\r\n\r\n733ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: com.google.gson.internal.bind.TypeAdapters$34",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Factory[typeHierarchy=\")",
            "$r2 = r1.<com.google.gson.internal.bind.TypeAdapters$34: java.lang.Class val$clazz>",
            "$r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>()",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",adapter=\")",
            "$r6 = r1.<com.google.gson.internal.bind.TypeAdapters$34: com.google.gson.TypeAdapter val$typeAdapter>",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]\")",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r10"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\1040.smt2",
        "z3": {
            "memory": 32256000,
            "run_time": 60.010262966156006,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13688832,
            "run_time": 0.4450836181640625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2538 is 1\r\n; rep: (as @var2538_0 var2538)\r\n; cardinality of var3406 is 2\r\n; rep: (as @var3406_0 var3406)\r\n; rep: (as @var3406_1 var3406)\r\n; cardinality of var2934 is 2\r\n; rep: (as @var2934_0 var2934)\r\n; rep: (as @var2934_1 var2934)\r\n; cardinality of var2902 is 1\r\n; rep: (as @var2902_0 var2902)\r\n; cardinality of var1965 is 1\r\n; rep: (as @var1965_0 var1965)\r\n; cardinality of var17 is 1\r\n; rep: (as @var17_0 var17)\r\n; cardinality of var831 is 1\r\n; rep: (as @var831_0 var831)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var2934-to-var2902 ((_arg_1 var2934)) var2902 (as @var2902_0 var2902))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((_arg_1 String) (_arg_2 Int)) String \"\")\r\n(define-fun getMessage/849299655 ((_arg_1 var1965)) String \"\")\r\n(define-fun cast-from-var2902-to-var1965 ((_arg_1 var2902)) var1965 (as @var1965_0 var1965))\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_1447 var17)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var2902-to-var17 ((BOUND_VARIABLE_1450 var2902)) var17 (as @var17_0 var17))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_1453 ClassObject)) String \"\")\r\n(define-fun var831-init () var831 (as @var831_0 var831))\r\n(define-fun getIndex/-2136393185 ((BOUND_VARIABLE_1456 var3406)) Int 0)\r\n(define-fun <init>/1495607482 ((BOUND_VARIABLE_1459 var831) (BOUND_VARIABLE_1460 String) (BOUND_VARIABLE_1461 Int)) void (as @void_0 void))\r\n(define-fun initCause/2003336360 ((BOUND_VARIABLE_1464 var1965) (BOUND_VARIABLE_1465 var1965)) var1965 (as @var1965_0 var1965))\r\n(define-fun cast-from-var831-to-var1965 ((BOUND_VARIABLE_1468 var831)) var1965 (as @var1965_0 var1965))\r\n(define-fun null-String () String \"\")\r\n(define-fun null-var3406 () var3406 (as @var3406_0 var3406))\r\n(define-fun null-var2934 () var2934 (as @var2934_0 var2934))\r\n(define-fun var209 () String \"A\")\r\n(define-fun var2506 () var3406 (as @var3406_1 var3406))\r\n(define-fun var2411 () var2934 (as @var2934_1 var2934))\r\n(define-fun var1378!1 () String \"\")\r\n(define-fun var1378!2 () String \"\")\r\n(define-fun var1510!1 () String \"A\")\r\n(define-fun var504!1 () String \"A\")\r\n(define-fun var2853!1 () String \"\")\r\n(define-fun var2853!2 () String \"(\")\r\n(define-fun var788!1 () String \"(\")\r\n(define-fun var1315!1 () String \"()\")\r\n(define-fun var662!1 () String \"\")\r\n(define-fun var662!2 () String \"Failed to parse date [\")\r\n(define-fun var2933!1 () String \"Failed to parse date [\")\r\n(define-fun var2981!1 () String \"Failed to parse date []: \")\r\n(define-fun var3935!1 () String \"Failed to parse date []: ()\")\r\n(define-fun var834!1 () var831 (as @var831_0 var831))\r\n(define-fun var626!1 () String \"\")\r\n(define-fun var1332!1 () Int 0)\r\n(define-fun var834!2 () var831 (as @var831_0 var831))\r\n(define-fun var2726!1 () var2902 (as @var2902_0 var2902))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32481280,
            "run_time": 0.1401975154876709,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 134 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 135 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 201838592,
            "run_time": 1.0638916492462158,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle negative string equation var209 + -1*null-String != 0\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\1040.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n830ms\r\n"
        },
        "undefined_function_count": 13,
        "assertion_count": 44,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 8,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.text.ParsePosition",
            "$r44 := @caughtexception",
            "r49 = $r44",
            "goto [?= (branch)]",
            "if r1 != null goto $r69 = new java.lang.StringBuilder",
            "$r69 = new java.lang.StringBuilder",
            "specialinvoke $r69.<java.lang.StringBuilder: void <init>()>()",
            "$r34 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34)",
            "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34)",
            "$r50 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()",
            "r51 = $r50",
            "$r43 = virtualinvoke r49.<java.lang.Exception: java.lang.String getMessage()>()",
            "r52 = $r43",
            "if $r43 == null goto $r70 = new java.lang.StringBuilder",
            "$r70 = new java.lang.StringBuilder",
            "specialinvoke $r70.<java.lang.StringBuilder: void <init>()>()",
            "$r40 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$r38 = virtualinvoke r49.<java.lang.Object: java.lang.Class getClass()>()",
            "$r39 = virtualinvoke $r38.<java.lang.Class: java.lang.String getName()>()",
            "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39)",
            "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "r52 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r72 = new java.text.ParseException",
            "$r71 = new java.lang.StringBuilder",
            "specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()",
            "$r55 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to parse date [\")",
            "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51)",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: \")",
            "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52)",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i31 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "specialinvoke $r72.<java.text.ParseException: void <init>(java.lang.String,int)>($r59, $i31)",
            "virtualinvoke $r72.<java.text.ParseException: java.lang.Throwable initCause(java.lang.Throwable)>(r49)",
            "throw $r72"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__format__-1868536622\\903.smt2",
        "z3": {
            "memory": 32239616,
            "run_time": 60.00482487678528,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12460032,
            "run_time": 0.03482198715209961,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2167 is 2\r\n; rep: (as @var2167_0 var2167)\r\n; rep: (as @var2167_1 var2167)\r\n; cardinality of var3293 is 3\r\n; rep: (as @var3293_0 var3293)\r\n; rep: (as @var3293_1 var3293)\r\n; rep: (as @var3293_2 var3293)\r\n; cardinality of var2351 is 1\r\n; rep: (as @var2351_0 var2351)\r\n; cardinality of var301 is 1\r\n; rep: (as @var301_0 var301)\r\n; cardinality of var2329 is 1\r\n; rep: (as @var2329_0 var2329)\r\n; cardinality of var2913 is 1\r\n; rep: (as @var2913_0 var2913)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2351-init () var2351 (as @var2351_0 var2351))\r\n(define-fun <init>/-843876822 ((BOUND_VARIABLE_1549 var2351) (BOUND_VARIABLE_1550 var3293) (BOUND_VARIABLE_1551 var301)) void (as @void_0 void))\r\n(define-fun setTime/-1821537528 ((BOUND_VARIABLE_1554 var2329) (BOUND_VARIABLE_1555 var2167)) void (as @void_0 void))\r\n(define-fun cast-from-var2351-to-var2329 ((_arg_1 var2351)) var2329 (as @var2329_0 var2329))\r\n(define-fun getRawOffset/793408012 ((_arg_1 var3293)) Int (- 1))\r\n(define-fun String-init () String \"\")\r\n(define-fun <init>/543593434 ((BOUND_VARIABLE_1558 String) (BOUND_VARIABLE_1559 Int)) void (as @void_0 void))\r\n(define-fun get/335439681 ((BOUND_VARIABLE_1562 var2329) (BOUND_VARIABLE_1563 Int)) Int 0)\r\n(define-fun var2913_padInt/-157990007 ((BOUND_VARIABLE_1566 String) (BOUND_VARIABLE_1567 Int) (BOUND_VARIABLE_1568 Int)) void (as @void_0 void))\r\n(define-fun append/-1166366385 ((BOUND_VARIABLE_1571 String) (BOUND_VARIABLE_1572 Int)) String \"\")\r\n(define-fun getTimeInMillis/-1265389133 ((_arg_1 var2329)) Int 1)\r\n(define-fun getOffset/846977212 ((_arg_1 var3293) (_arg_2 Int)) Int 0)\r\n(define-fun null-var2167 () var2167 (as @var2167_0 var2167))\r\n(define-fun null-Bool () Bool true)\r\n(define-fun null-var3293 () var3293 (as @var3293_0 var3293))\r\n(define-fun var301-US () var301 (as @var301_0 var301))\r\n(define-fun var1344 () var2167 (as @var2167_1 var2167))\r\n(define-fun var2866 () Bool false)\r\n(define-fun var3795 () var3293 (as @var3293_1 var3293))\r\n(define-fun var220!1 () var2351 (as @var2351_0 var2351))\r\n(define-fun var3795!1 () var3293 (as @var3293_2 var3293))\r\n(define-fun var2845!1 () var301 (as @var301_0 var301))\r\n(define-fun var220!2 () var2351 (as @var2351_0 var2351))\r\n(define-fun var1344!1 () var2167 (as @var2167_0 var2167))\r\n(define-fun var2645!1 () String \"\")\r\n(define-fun var3202!1 () Int 0)\r\n(define-fun var2645!2 () String \"\")\r\n(define-fun var3422!1 () Int 0)\r\n(define-fun var3641!1 () Int 0)\r\n(define-fun var2645!3 () String \"\")\r\n(define-fun var2645!4 () String \"\")\r\n(define-fun var2096!1 () Int 0)\r\n(define-fun var3675!1 () Int 0)\r\n(define-fun var2645!5 () String \"\")\r\n(define-fun var2645!6 () String \"\")\r\n(define-fun var2176!1 () Int 0)\r\n(define-fun var2101!1 () Int 0)\r\n(define-fun var2645!7 () String \"\")\r\n(define-fun var2645!8 () String \"\")\r\n(define-fun var2638!1 () Int 0)\r\n(define-fun var1543!1 () Int 0)\r\n(define-fun var2645!9 () String \"\")\r\n(define-fun var2645!10 () String \"\")\r\n(define-fun var3121!1 () Int 0)\r\n(define-fun var390!1 () Int 0)\r\n(define-fun var2645!11 () String \"\")\r\n(define-fun var2645!12 () String \"\")\r\n(define-fun var3114!1 () Int 0)\r\n(define-fun var3224!1 () Int 0)\r\n(define-fun var2645!13 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 39821312,
            "run_time": 0.13899636268615723,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 171 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 172 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 197111808,
            "run_time": 0.9074058532714844,
            "is_sat": "error",
            "stdout": "sat\r\nerror\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__format__-1868536622\\903.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2645!13 =\r\n     concat(var2645!12, rhs)\r\n   var2645!11 =\r\n     concat(var2645!10, rhs)\r\n   var2645!9 =\r\n     concat(var2645!8, rhs)\r\n   var2645!7 =\r\n     concat(var2645!6, rhs)\r\n   var2645!5 =\r\n     concat(var2645!4, rhs)\r\n   var2645!3 =\r\n     concat(var2645!2, rhs)\r\n   ... sat\r\n\r\n643ms\r\nInternal exception: java.util.NoSuchElementException: key not found: rhs\r\n"
        },
        "undefined_function_count": 12,
        "assertion_count": 43,
        "api_sequence": [
            "<java.lang.String: int length()>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: void <init>(int)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.String: int length()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 8,
            "<java.lang.StringBuilder: void <init>(int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @parameter0: java.util.Date",
            "z0 := @parameter1: boolean",
            "r1 := @parameter2: java.util.TimeZone",
            "$r19 = new java.util.GregorianCalendar",
            "$r2 = <java.util.Locale: java.util.Locale US>",
            "specialinvoke $r19.<java.util.GregorianCalendar: void <init>(java.util.TimeZone,java.util.Locale)>(r1, $r2)",
            "virtualinvoke $r19.<java.util.Calendar: void setTime(java.util.Date)>(r3)",
            "$r4 = \"yyyy-MM-ddThh:mm:ss\"",
            "i28 = virtualinvoke $r4.<java.lang.String: int length()>()",
            "if z0 == 0 goto $i29 = 0",
            "$i29 = 0",
            "$i27 = i28 + $i29",
            "$i0 = virtualinvoke r1.<java.util.TimeZone: int getRawOffset()>()",
            "if $i0 != 0 goto $r5 = \"+hh:mm\"",
            "$r5 = \"+hh:mm\"",
            "$i30 = virtualinvoke $r5.<java.lang.String: int length()>()",
            "$i26 = $i27 + $i30",
            "$r20 = new java.lang.StringBuilder",
            "specialinvoke $r20.<java.lang.StringBuilder: void <init>(int)>($i26)",
            "$i2 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(1)",
            "$r7 = \"yyyy\"",
            "$i1 = virtualinvoke $r7.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i2, $i1)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45)",
            "$i3 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(2)",
            "$i5 = $i3 + 1",
            "$r8 = \"MM\"",
            "$i4 = virtualinvoke $r8.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i5, $i4)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45)",
            "$i7 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(5)",
            "$r9 = \"dd\"",
            "$i6 = virtualinvoke $r9.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i7, $i6)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(84)",
            "$i9 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(11)",
            "$r10 = \"hh\"",
            "$i8 = virtualinvoke $r10.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i9, $i8)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)",
            "$i11 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(12)",
            "$r11 = \"mm\"",
            "$i10 = virtualinvoke $r11.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i11, $i10)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58)",
            "$i13 = virtualinvoke $r19.<java.util.Calendar: int get(int)>(13)",
            "$r12 = \"ss\"",
            "$i12 = virtualinvoke $r12.<java.lang.String: int length()>()",
            "staticinvoke <com.google.gson.internal.bind.util.ISO8601Utils: void padInt(java.lang.StringBuilder,int,int)>($r20, $i13, $i12)",
            "if z0 == 0 goto $l14 = virtualinvoke $r19.<java.util.Calendar: long getTimeInMillis()>()",
            "$l14 = virtualinvoke $r19.<java.util.Calendar: long getTimeInMillis()>()",
            "$i25 = virtualinvoke r1.<java.util.TimeZone: int getOffset(long)>($l14)",
            "if $i25 == 0 goto virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90)",
            "virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90)",
            "$r13 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r13"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\1050.smt2",
        "z3": {
            "memory": 32038912,
            "run_time": 0.05955052375793457,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 92 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1703936,
            "run_time": 0.016063690185546875,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33009664,
            "run_time": 0.07864069938659668,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 92 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153436160,
            "run_time": 0.804051399230957,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 25,
        "api_sequence": [
            "<java.lang.String: boolean isEmpty()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean isEmpty()>": 1,
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.text.ParsePosition",
            "$r32 := @caughtexception",
            "r49 = $r32",
            "if r1 != null goto $r69 = new java.lang.StringBuilder",
            "$r50 = null",
            "goto [?= r51 = $r50]",
            "r51 = $r50",
            "$r43 = virtualinvoke r49.<java.lang.Exception: java.lang.String getMessage()>()",
            "r52 = $r43",
            "if $r43 == null goto $r70 = new java.lang.StringBuilder",
            "$z9 = virtualinvoke $r43.<java.lang.String: boolean isEmpty()>()",
            "if $z9 == 0 goto $r72 = new java.text.ParseException",
            "$r72 = new java.text.ParseException",
            "$r71 = new java.lang.StringBuilder",
            "specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()",
            "$r55 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to parse date [\")",
            "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51)",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: \")",
            "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52)",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i31 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "specialinvoke $r72.<java.text.ParseException: void <init>(java.lang.String,int)>($r59, $i31)",
            "virtualinvoke $r72.<java.text.ParseException: java.lang.Throwable initCause(java.lang.Throwable)>(r49)",
            "throw $r72"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\1078.smt2",
        "z3": {
            "memory": 32243712,
            "run_time": 60.003472328186035,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.03076648712158203,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3910 is 1\r\n; rep: (as @var3910_0 var3910)\r\n; cardinality of var1022 is 2\r\n; rep: (as @var1022_0 var1022)\r\n; rep: (as @var1022_1 var1022)\r\n; cardinality of var1296 is 2\r\n; rep: (as @var1296_0 var1296)\r\n; rep: (as @var1296_1 var1296)\r\n; cardinality of var2670 is 1\r\n; rep: (as @var2670_0 var2670)\r\n; cardinality of var1297 is 1\r\n; rep: (as @var1297_0 var1297)\r\n; cardinality of var1651 is 1\r\n; rep: (as @var1651_0 var1651)\r\n; cardinality of var2864 is 1\r\n; rep: (as @var2864_0 var2864)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun cast-from-var1296-to-var2670 ((_arg_1 var1296)) var2670 (as @var2670_0 var2670))\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1166366385 ((_arg_1 String) (_arg_2 Int)) String \"\")\r\n(define-fun getMessage/849299655 ((_arg_1 var1297)) String \"\")\r\n(define-fun cast-from-var2670-to-var1297 ((_arg_1 var2670)) var1297 (as @var1297_0 var1297))\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_1447 var1651)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var2670-to-var1651 ((BOUND_VARIABLE_1450 var2670)) var1651 (as @var1651_0 var1651))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_1453 ClassObject)) String \"\")\r\n(define-fun var2864-init () var2864 (as @var2864_0 var2864))\r\n(define-fun getIndex/-2136393185 ((BOUND_VARIABLE_1456 var1022)) Int 0)\r\n(define-fun <init>/1495607482 ((BOUND_VARIABLE_1459 var2864) (BOUND_VARIABLE_1460 String) (BOUND_VARIABLE_1461 Int)) void (as @void_0 void))\r\n(define-fun initCause/2003336360 ((BOUND_VARIABLE_1464 var1297) (BOUND_VARIABLE_1465 var1297)) var1297 (as @var1297_0 var1297))\r\n(define-fun cast-from-var2864-to-var1297 ((BOUND_VARIABLE_1468 var2864)) var1297 (as @var1297_0 var1297))\r\n(define-fun null-String () String \"\")\r\n(define-fun null-var1022 () var1022 (as @var1022_0 var1022))\r\n(define-fun null-var1296 () var1296 (as @var1296_0 var1296))\r\n(define-fun var2429 () String \"A\")\r\n(define-fun var3040 () var1022 (as @var1022_1 var1022))\r\n(define-fun var1432 () var1296 (as @var1296_1 var1296))\r\n(define-fun var1088!1 () String \"\")\r\n(define-fun var1088!2 () String \"\")\r\n(define-fun var3561!1 () String \"A\")\r\n(define-fun var1344!1 () String \"A\")\r\n(define-fun var166!1 () String \"\")\r\n(define-fun var166!2 () String \"(\")\r\n(define-fun var3472!1 () String \"(\")\r\n(define-fun var3211!1 () String \"()\")\r\n(define-fun var1908!1 () String \"\")\r\n(define-fun var1908!2 () String \"Failed to parse date [\")\r\n(define-fun var3957!1 () String \"Failed to parse date [\")\r\n(define-fun var2313!1 () String \"Failed to parse date []: \")\r\n(define-fun var3080!1 () String \"Failed to parse date []: ()\")\r\n(define-fun var2967!1 () var2864 (as @var2864_0 var2864))\r\n(define-fun var934!1 () String \"\")\r\n(define-fun var2480!1 () Int 0)\r\n(define-fun var2967!2 () var2864 (as @var2864_0 var2864))\r\n(define-fun var2172!1 () var2670 (as @var2670_0 var2670))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33042432,
            "run_time": 0.10778212547302246,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 133 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 134 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 207671296,
            "run_time": 0.9125838279724121,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle negative string equation var2429 + -1*null-String != 0\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.internal.bind.util.ISO8601Utils__parse__-718542412\\1078.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n695ms\r\n"
        },
        "undefined_function_count": 13,
        "assertion_count": 44,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 3,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 8,
            "<java.lang.StringBuilder: java.lang.String toString()>": 3
        },
        "jimple_statements": [
            "r1 := @parameter0: java.lang.String",
            "r0 := @parameter1: java.text.ParsePosition",
            "$r32 := @caughtexception",
            "r49 = $r32",
            "if r1 != null goto $r69 = new java.lang.StringBuilder",
            "$r69 = new java.lang.StringBuilder",
            "specialinvoke $r69.<java.lang.StringBuilder: void <init>()>()",
            "$r34 = virtualinvoke $r69.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34)",
            "$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(34)",
            "$r50 = virtualinvoke $r36.<java.lang.StringBuilder: java.lang.String toString()>()",
            "r51 = $r50",
            "$r43 = virtualinvoke r49.<java.lang.Exception: java.lang.String getMessage()>()",
            "r52 = $r43",
            "if $r43 == null goto $r70 = new java.lang.StringBuilder",
            "$r70 = new java.lang.StringBuilder",
            "specialinvoke $r70.<java.lang.StringBuilder: void <init>()>()",
            "$r40 = virtualinvoke $r70.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"(\")",
            "$r38 = virtualinvoke r49.<java.lang.Object: java.lang.Class getClass()>()",
            "$r39 = virtualinvoke $r38.<java.lang.Class: java.lang.String getName()>()",
            "$r41 = virtualinvoke $r40.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r39)",
            "$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\")\")",
            "r52 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$r72 = new java.text.ParseException",
            "$r71 = new java.lang.StringBuilder",
            "specialinvoke $r71.<java.lang.StringBuilder: void <init>()>()",
            "$r55 = virtualinvoke $r71.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to parse date [\")",
            "$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r51)",
            "$r57 = virtualinvoke $r56.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"]: \")",
            "$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r52)",
            "$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.String toString()>()",
            "$i31 = virtualinvoke r0.<java.text.ParsePosition: int getIndex()>()",
            "specialinvoke $r72.<java.text.ParseException: void <init>(java.lang.String,int)>($r59, $i31)",
            "virtualinvoke $r72.<java.text.ParseException: java.lang.Throwable initCause(java.lang.Throwable)>(r49)",
            "throw $r72"
        ]
    },
    {
        "filename": "smt\\method-com.google.gson.Gson__toString__-1186015074\\810.smt2",
        "z3": {
            "memory": 32526336,
            "run_time": 60.00565147399902,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12349440,
            "run_time": 0.030516862869262695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var263 is 2\r\n; rep: (as @var263_0 var263)\r\n; rep: (as @var263_1 var263)\r\n; cardinality of var1144 is 1\r\n; rep: (as @var1144_0 var1144)\r\n; cardinality of var648 is 1\r\n; rep: (as @var648_0 var648)\r\n; cardinality of var2606 is 1\r\n; rep: (as @var2606_0 var2606)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun serializeNulls/1896892294 ((_arg_1 var263)) Bool true)\r\n(define-fun append/-388390247 ((_arg_1 String) (_arg_2 Bool)) String \"\")\r\n(define-fun factories/1896892294 ((_arg_1 var263)) var1144 (as @var1144_0 var1144))\r\n(define-fun append/-1031950772 ((_arg_1 String) (_arg_2 var648)) String \"\")\r\n(define-fun cast-from-var1144-to-var648 ((_arg_1 var1144)) var648 (as @var648_0 var648))\r\n(define-fun constructorConstructor/1896892294 ((BOUND_VARIABLE_2142 var263)) var2606 (as @var2606_0 var2606))\r\n(define-fun cast-from-var2606-to-var648 ((BOUND_VARIABLE_2145 var2606)) var648 (as @var648_0 var648))\r\n(define-fun null-var263 () var263 (as @var263_0 var263))\r\n(define-fun var523 () var263 (as @var263_1 var263))\r\n(define-fun var3671!1 () String \"\")\r\n(define-fun var3671!2 () String \"{serializeNulls:\")\r\n(define-fun var1158!1 () String \"{serializeNulls:\")\r\n(define-fun var1976!1 () String \",factories:\")\r\n(define-fun var1984!1 () String \",factories:\")\r\n(define-fun var2630!1 () String \",instanceCreators:\")\r\n(define-fun var605!1 () String \",instanceCreators:\")\r\n(define-fun var3590!1 () String \"}\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35434496,
            "run_time": 0.09183359146118164,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 65 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 66 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 190537728,
            "run_time": 0.8531994819641113,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var263/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\gson\\smt\\method-com.google.gson.Gson__toString__-1186015074\\810.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1976!1 =\r\n     concat(all_35_4, \",factories:\")\r\n   all_67_2 =\r\n     concat(all_29_2, \",instanceCreators:\")\r\n   var2630!1 =\r\n     concat(all_29_2, \",instanceCreators:\")\r\n   var3590!1 =\r\n     concat(all_26_2, \"}\")\r\n   var605!1 =\r\n     concat(all_32_2, rhs)\r\n   var1984!1 =\r\n     concat(all_18_0, rhs)\r\n   all_18_0 =\r\n     concat(all_35_4, \",factories:\")\r\n   all_32_2 =\r\n     concat(all_29_2, \",instanceCreators:\")\r\n\r\n628ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: com.google.gson.Gson",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"{serializeNulls:\")",
            "$z0 = r1.<com.google.gson.Gson: boolean serializeNulls>",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0)",
            "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",factories:\")",
            "$r4 = r1.<com.google.gson.Gson: java.util.List factories>",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r4)",
            "$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\",instanceCreators:\")",
            "$r7 = r1.<com.google.gson.Gson: com.google.gson.internal.ConstructorConstructor constructorConstructor>",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r7)",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"}\")",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r11"
        ]
    }
]