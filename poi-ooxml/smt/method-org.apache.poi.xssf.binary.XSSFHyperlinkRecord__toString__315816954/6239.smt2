(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var2221 0)
(declare-sort var137 0)
(declare-sort var1636 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun cellRangeAddress/-1686501662 (var2221) var137)
(declare-fun append/-1031950772 (String var1636) String)
(declare-fun cast-from-var137-to-var1636 (var137) var1636)
(declare-fun relId/-1686501662 (var2221) String)
(declare-fun append/-1166366385 (String Int) String)
(declare-fun location/-1686501662 (var2221) String)
(declare-fun toolTip/-1686501662 (var2221) String)
(declare-fun display/-1686501662 (var2221) String)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-const null-var2221 var2221)
(declare-const var981 var2221) ; Statement: r1 := @this: org.apache.poi.xssf.binary.XSSFHyperlinkRecord 
(assert (not (= var981 null-var2221)))
(define-const var3275 String String-init) ; Statement: $r0 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var3275)) ; Statement: specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() 
(declare-const var3275!1 String)
(assert (= var3275!1 ""))
(assert true)
(define-const var1237 String (append/672562846 var3275!1 "XSSFHyperlinkRecord{cellRangeAddress=")) ; Statement: $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XSSFHyperlinkRecord{cellRangeAddress=") 
(declare-const var3275!2 String)
(assert (= var3275!2 (str.++ var3275!1 "XSSFHyperlinkRecord{cellRangeAddress=")))
(define-const var1218 var137 (cellRangeAddress/-1686501662 var981)) ; Statement: $r2 = r1.<org.apache.poi.xssf.binary.XSSFHyperlinkRecord: org.apache.poi.ss.util.CellRangeAddress cellRangeAddress> 
(assert true)
(define-const var278 String (append/-1031950772 var1237 (cast-from-var137-to-var1636 var1218))) ; Statement: $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2) 
(declare-const var1237!1 String)
(assert (str.prefixof var1237 var1237!1))
(assert true)
(define-const var401 String (append/672562846 var278 ", relId=\u0027")) ; Statement: $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", relId=\'") 
(declare-const var278!1 String)
(assert (= var278!1 (str.++ var278 ", relId=\u0027")))
(define-const var1583 String (relId/-1686501662 var981)) ; Statement: $r5 = r1.<org.apache.poi.xssf.binary.XSSFHyperlinkRecord: java.lang.String relId> 
(assert true)
(define-const var1315 String (append/672562846 var401 var1583)) ; Statement: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) 
(declare-const var401!1 String)
(assert (= var401!1 (str.++ var401 var1583)))
(assert true)
(define-const var608 String (append/-1166366385 var1315 39)) ; Statement: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39) 
(declare-const var1315!1 String)
(assert (str.prefixof var1315 var1315!1))
(assert true)
(define-const var2084 String (append/672562846 var608 ", location=\u0027")) ; Statement: $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", location=\'") 
(declare-const var608!1 String)
(assert (= var608!1 (str.++ var608 ", location=\u0027")))
(define-const var2149 String (location/-1686501662 var981)) ; Statement: $r9 = r1.<org.apache.poi.xssf.binary.XSSFHyperlinkRecord: java.lang.String location> 
(assert true)
(define-const var1228 String (append/672562846 var2084 var2149)) ; Statement: $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9) 
(declare-const var2084!1 String)
(assert (= var2084!1 (str.++ var2084 var2149)))
(assert true)
(define-const var1302 String (append/-1166366385 var1228 39)) ; Statement: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39) 
(declare-const var1228!1 String)
(assert (str.prefixof var1228 var1228!1))
(assert true)
(define-const var1416 String (append/672562846 var1302 ", toolTip=\u0027")) ; Statement: $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", toolTip=\'") 
(declare-const var1302!1 String)
(assert (= var1302!1 (str.++ var1302 ", toolTip=\u0027")))
(define-const var2859 String (toolTip/-1686501662 var981)) ; Statement: $r13 = r1.<org.apache.poi.xssf.binary.XSSFHyperlinkRecord: java.lang.String toolTip> 
(assert true)
(define-const var1064 String (append/672562846 var1416 var2859)) ; Statement: $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) 
(declare-const var1416!1 String)
(assert (= var1416!1 (str.++ var1416 var2859)))
(assert true)
(define-const var2566 String (append/-1166366385 var1064 39)) ; Statement: $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39) 
(declare-const var1064!1 String)
(assert (str.prefixof var1064 var1064!1))
(assert true)
(define-const var3092 String (append/672562846 var2566 ", display=\u0027")) ; Statement: $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", display=\'") 
(declare-const var2566!1 String)
(assert (= var2566!1 (str.++ var2566 ", display=\u0027")))
(define-const var876 String (display/-1686501662 var981)) ; Statement: $r17 = r1.<org.apache.poi.xssf.binary.XSSFHyperlinkRecord: java.lang.String display> 
(assert true)
(define-const var2599 String (append/672562846 var3092 var876)) ; Statement: $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17) 
(declare-const var3092!1 String)
(assert (= var3092!1 (str.++ var3092 var876)))
(assert true)
(define-const var3921 String (append/-1166366385 var2599 39)) ; Statement: $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39) 
(declare-const var2599!1 String)
(assert (str.prefixof var2599 var2599!1))
(assert true)
(define-const var2879 String (append/-1166366385 var3921 125)) ; Statement: $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125) 
(declare-const var3921!1 String)
(assert (str.prefixof var3921 var3921!1))
(assert true)
(define-const var3013 String (toString/-2075883882 var2879)) ; Statement: $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>() 
 ; Statement: return $r22 
(check-sat)
(get-model)
(get-unsat-core)
; {String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), cellRangeAddress/-1686501662=([org.apache.poi.xssf.binary.XSSFHyperlinkRecord], org.apache.poi.ss.util.CellRangeAddress), append/-1031950772=([java.lang.StringBuilder, java.lang.Object], java.lang.StringBuilder), cast-from-var137-to-var1636=([org.apache.poi.ss.util.CellRangeAddress], java.lang.Object), relId/-1686501662=([org.apache.poi.xssf.binary.XSSFHyperlinkRecord], java.lang.String), append/-1166366385=([java.lang.StringBuilder, char], java.lang.StringBuilder), location/-1686501662=([org.apache.poi.xssf.binary.XSSFHyperlinkRecord], java.lang.String), toolTip/-1686501662=([org.apache.poi.xssf.binary.XSSFHyperlinkRecord], java.lang.String), display/-1686501662=([org.apache.poi.xssf.binary.XSSFHyperlinkRecord], java.lang.String), toString/-2075883882=([java.lang.StringBuilder], java.lang.String)}
; {var2221=org.apache.poi.xssf.binary.XSSFHyperlinkRecord, var981=r1, var3275=$r0, var1237=$r3, var137=org.apache.poi.ss.util.CellRangeAddress, var1218=$r2, var1636=java.lang.Object, var278=$r4, var401=$r6, var1583=$r5, var1315=$r7, var608=$r8, var2084=$r10, var2149=$r9, var1228=$r11, var1302=$r12, var1416=$r14, var2859=$r13, var1064=$r15, var2566=$r16, var3092=$r18, var876=$r17, var2599=$r19, var3921=$r20, var2879=$r21, var3013=$r22}
; {org.apache.poi.xssf.binary.XSSFHyperlinkRecord=var2221, r1=var981, $r0=var3275, $r3=var1237, org.apache.poi.ss.util.CellRangeAddress=var137, $r2=var1218, java.lang.Object=var1636, $r4=var278, $r6=var401, $r5=var1583, $r7=var1315, $r8=var608, $r10=var2084, $r9=var2149, $r11=var1228, $r12=var1302, $r14=var1416, $r13=var2859, $r15=var1064, $r16=var2566, $r18=var3092, $r17=var876, $r19=var2599, $r20=var3921, $r21=var2879, $r22=var3013}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 9,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 5,"<java.lang.StringBuilder: java.lang.String toString()>": 1}
;stmts r1 := @this: org.apache.poi.xssf.binary.XSSFHyperlinkRecord;	$r0 = new java.lang.StringBuilder;	specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();	$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("XSSFHyperlinkRecord{cellRangeAddress=");	$r2 = r1.<org.apache.poi.xssf.binary.XSSFHyperlinkRecord: org.apache.poi.ss.util.CellRangeAddress cellRangeAddress>;	$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r2);	$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", relId=\'");	$r5 = r1.<org.apache.poi.xssf.binary.XSSFHyperlinkRecord: java.lang.String relId>;	$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);	$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);	$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", location=\'");	$r9 = r1.<org.apache.poi.xssf.binary.XSSFHyperlinkRecord: java.lang.String location>;	$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9);	$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);	$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", toolTip=\'");	$r13 = r1.<org.apache.poi.xssf.binary.XSSFHyperlinkRecord: java.lang.String toolTip>;	$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);	$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);	$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", display=\'");	$r17 = r1.<org.apache.poi.xssf.binary.XSSFHyperlinkRecord: java.lang.String display>;	$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r17);	$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);	$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(125);	$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.String toString()>();	return $r22
;block_num 1