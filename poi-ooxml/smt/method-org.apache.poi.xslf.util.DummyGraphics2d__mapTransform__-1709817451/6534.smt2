(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var2540 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun isIdentity/2129845788 (var2540) Bool)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun getScaleX/2044859143 (var2540) Float64)
(declare-fun append/33611274 (String Float64) String)
(declare-fun getShearY/1121138557 (var2540) Float64)
(declare-fun getShearX/1121108766 (var2540) Float64)
(declare-fun getScaleY/2044888934 (var2540) Float64)
(declare-fun getTranslateX/-1838924533 (var2540) Float64)
(declare-fun getTranslateY/-1838894742 (var2540) Float64)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-const null-var2540 var2540)
(declare-const var1407 var2540) ; Statement: r0 := @parameter0: java.awt.geom.AffineTransform 
(assert (not (= var1407 null-var2540)))
(assert true)
(define-const var343 Bool (isIdentity/2129845788 var1407)) ; Statement: $z0 = virtualinvoke r0.<java.awt.geom.AffineTransform: boolean isIdentity()>() 
 ; Statement: if $z0 == 0 goto $r1 = new java.lang.StringBuilder 
(assert (= (ite var343 1 0) 0)) ; Cond: $z0 == 0 
(define-const var21 String String-init) ; Statement: $r1 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var21)) ; Statement: specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() 
(declare-const var21!1 String)
(assert (= var21!1 ""))
(assert true)
(define-const var1702 String (append/672562846 var21!1 "new AffineTransform(")) ; Statement: $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new AffineTransform(") 
(declare-const var21!2 String)
(assert (= var21!2 (str.++ var21!1 "new AffineTransform(")))
(assert true)
(define-const var1490 Float64 (getScaleX/2044859143 var1407)) ; Statement: $d0 = virtualinvoke r0.<java.awt.geom.AffineTransform: double getScaleX()>() 
(assert true)
(define-const var3947 String (append/33611274 var1702 var1490)) ; Statement: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0) 
(declare-const var1702!1 String)
(assert (str.prefixof var1702 var1702!1))
(assert true)
(define-const var935 String (append/672562846 var3947 "f,")) ; Statement: $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f,") 
(declare-const var3947!1 String)
(assert (= var3947!1 (str.++ var3947 "f,")))
(assert true)
(define-const var186 Float64 (getShearY/1121138557 var1407)) ; Statement: $d1 = virtualinvoke r0.<java.awt.geom.AffineTransform: double getShearY()>() 
(assert true)
(define-const var2741 String (append/33611274 var935 var186)) ; Statement: $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1) 
(declare-const var935!1 String)
(assert (str.prefixof var935 var935!1))
(assert true)
(define-const var3366 String (append/672562846 var2741 "f,")) ; Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f,") 
(declare-const var2741!1 String)
(assert (= var2741!1 (str.++ var2741 "f,")))
(assert true)
(define-const var2274 Float64 (getShearX/1121108766 var1407)) ; Statement: $d2 = virtualinvoke r0.<java.awt.geom.AffineTransform: double getShearX()>() 
(assert true)
(define-const var3003 String (append/33611274 var3366 var2274)) ; Statement: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2) 
(declare-const var3366!1 String)
(assert (str.prefixof var3366 var3366!1))
(assert true)
(define-const var2436 String (append/672562846 var3003 "f,")) ; Statement: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f,") 
(declare-const var3003!1 String)
(assert (= var3003!1 (str.++ var3003 "f,")))
(assert true)
(define-const var1279 Float64 (getScaleY/2044888934 var1407)) ; Statement: $d3 = virtualinvoke r0.<java.awt.geom.AffineTransform: double getScaleY()>() 
(assert true)
(define-const var2945 String (append/33611274 var2436 var1279)) ; Statement: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3) 
(declare-const var2436!1 String)
(assert (str.prefixof var2436 var2436!1))
(assert true)
(define-const var1475 String (append/672562846 var2945 "f,")) ; Statement: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f,") 
(declare-const var2945!1 String)
(assert (= var2945!1 (str.++ var2945 "f,")))
(assert true)
(define-const var1973 Float64 (getTranslateX/-1838924533 var1407)) ; Statement: $d4 = virtualinvoke r0.<java.awt.geom.AffineTransform: double getTranslateX()>() 
(assert true)
(define-const var1819 String (append/33611274 var1475 var1973)) ; Statement: $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4) 
(declare-const var1475!1 String)
(assert (str.prefixof var1475 var1475!1))
(assert true)
(define-const var3794 String (append/672562846 var1819 "f,")) ; Statement: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f,") 
(declare-const var1819!1 String)
(assert (= var1819!1 (str.++ var1819 "f,")))
(assert true)
(define-const var3550 Float64 (getTranslateY/-1838894742 var1407)) ; Statement: $d5 = virtualinvoke r0.<java.awt.geom.AffineTransform: double getTranslateY()>() 
(assert true)
(define-const var1718 String (append/33611274 var3794 var3550)) ; Statement: $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5) 
(declare-const var3794!1 String)
(assert (str.prefixof var3794 var3794!1))
(assert true)
(define-const var2702 String (append/672562846 var1718 "f)")) ; Statement: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f)") 
(declare-const var1718!1 String)
(assert (= var1718!1 (str.++ var1718 "f)")))
(assert true)
(define-const var2450 String (toString/-2075883882 var2702)) ; Statement: $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true) ; Non Conditional
 ; Statement: return $r15 
(check-sat)
(get-model)
(get-unsat-core)
; {isIdentity/2129845788=([java.awt.geom.AffineTransform], boolean), String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), getScaleX/2044859143=([java.awt.geom.AffineTransform], double), append/33611274=([java.lang.StringBuilder, double], java.lang.StringBuilder), getShearY/1121138557=([java.awt.geom.AffineTransform], double), getShearX/1121108766=([java.awt.geom.AffineTransform], double), getScaleY/2044888934=([java.awt.geom.AffineTransform], double), getTranslateX/-1838924533=([java.awt.geom.AffineTransform], double), getTranslateY/-1838894742=([java.awt.geom.AffineTransform], double), toString/-2075883882=([java.lang.StringBuilder], java.lang.String)}
; {var2540=java.awt.geom.AffineTransform, var1407=r0, var343=$z0, var21=$r1, var1702=$r2, var1490=$d0, var3947=$r3, var935=$r4, var186=$d1, var2741=$r5, var3366=$r6, var2274=$d2, var3003=$r7, var2436=$r8, var1279=$d3, var2945=$r9, var1475=$r10, var1973=$d4, var1819=$r11, var3794=$r12, var3550=$d5, var1718=$r13, var2702=$r14, var2450=$r15}
; {java.awt.geom.AffineTransform=var2540, r0=var1407, $z0=var343, $r1=var21, $r2=var1702, $d0=var1490, $r3=var3947, $r4=var935, $d1=var186, $r5=var2741, $r6=var3366, $d2=var2274, $r7=var3003, $r8=var2436, $d3=var1279, $r9=var2945, $r10=var1475, $d4=var1973, $r11=var1819, $r12=var3794, $d5=var3550, $r13=var1718, $r14=var2702, $r15=var2450}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(double)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(double)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(double)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(double)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(double)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(double)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,"<java.lang.StringBuilder: java.lang.StringBuilder append(double)>": 6,"<java.lang.StringBuilder: java.lang.String toString()>": 1}
;stmts r0 := @parameter0: java.awt.geom.AffineTransform;	$z0 = virtualinvoke r0.<java.awt.geom.AffineTransform: boolean isIdentity()>();	if $z0 == 0 goto $r1 = new java.lang.StringBuilder;	$r1 = new java.lang.StringBuilder;	specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();	$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("new AffineTransform(");	$d0 = virtualinvoke r0.<java.awt.geom.AffineTransform: double getScaleX()>();	$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d0);	$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f,");	$d1 = virtualinvoke r0.<java.awt.geom.AffineTransform: double getShearY()>();	$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d1);	$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f,");	$d2 = virtualinvoke r0.<java.awt.geom.AffineTransform: double getShearX()>();	$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d2);	$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f,");	$d3 = virtualinvoke r0.<java.awt.geom.AffineTransform: double getScaleY()>();	$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d3);	$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f,");	$d4 = virtualinvoke r0.<java.awt.geom.AffineTransform: double getTranslateX()>();	$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d4);	$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f,");	$d5 = virtualinvoke r0.<java.awt.geom.AffineTransform: double getTranslateY()>();	$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>($d5);	$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("f)");	$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();	return $r15
;block_num 3