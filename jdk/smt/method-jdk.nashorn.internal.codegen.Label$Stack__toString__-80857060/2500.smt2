(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var1487 0)
(declare-sort var3127 0)
(declare-sort var3566 0)
(declare-sort var2066 0)
(declare-sort var2254 0)
(declare-sort var1187 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun data/1112845700 (var1487) (Array Int var3127))
(declare-fun sp/1112845700 (var1487) Int)
(declare-fun var2066_copyOf/-1140654950 ((Array Int var3566) Int) (Array Int var3566))
(declare-fun cast-from-__Array__Int__var3127__-to-__Array__Int__var3566__ ((Array Int var3127)) (Array Int var3566))
(declare-fun var2066_toString/-575966009 ((Array Int var3566)) String)
(declare-fun symbolBoundary/1112845700 (var1487) var2254)
(declare-fun String_valueOf/-333372740 (var3566) String)
(declare-fun cast-from-var2254-to-var3566 (var2254) var3566)
(declare-fun firstTemp/1112845700 (var1487) Int)
(define-fun append/-1001720160 ((s String) (tail Int)) String (str.++ s (str.from_int tail)))
(declare-fun localVariableTypes/1112845700 (var1487) var1187)
(declare-fun cast-from-var1187-to-var3566 (var1187) var3566)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-const null-var1487 var1487)
(declare-const var973 var1487) ; Statement: r1 := @this: jdk.nashorn.internal.codegen.Label$Stack 
(assert (not (= var973 null-var1487)))
(define-const var1716 String String-init) ; Statement: $r0 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var1716)) ; Statement: specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() 
(declare-const var1716!1 String)
(assert (= var1716!1 ""))
(assert true)
(define-const var1256 String (append/672562846 var1716!1 "stack=")) ; Statement: $r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stack=") 
(declare-const var1716!2 String)
(assert (= var1716!2 (str.++ var1716!1 "stack=")))
(define-const var327 (Array Int var3127) (data/1112845700 var973)) ; Statement: $r2 = r1.<jdk.nashorn.internal.codegen.Label$Stack: jdk.nashorn.internal.codegen.types.Type[] data> 
(define-const var1967 Int (sp/1112845700 var973)) ; Statement: $i0 = r1.<jdk.nashorn.internal.codegen.Label$Stack: int sp> 
(define-const var10 (Array Int var3566) (var2066_copyOf/-1140654950 (cast-from-__Array__Int__var3127__-to-__Array__Int__var3566__ var327) var1967)) ; Statement: $r3 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r2, $i0) 
(define-const var3776 String (var2066_toString/-575966009 var10)) ; Statement: $r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r3) 
(assert true)
(define-const var215 String (append/672562846 var1256 var3776)) ; Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) 
(declare-const var1256!1 String)
(assert (= var1256!1 (str.++ var1256 var3776)))
(assert true)
(define-const var539 String (append/672562846 var215 ", symbolBoundaries=")) ; Statement: $r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", symbolBoundaries=") 
(declare-const var215!1 String)
(assert (= var215!1 (str.++ var215 ", symbolBoundaries=")))
(define-const var44 var2254 (symbolBoundary/1112845700 var973)) ; Statement: $r7 = r1.<jdk.nashorn.internal.codegen.Label$Stack: java.util.BitSet symbolBoundary> 
(define-const var192 String (String_valueOf/-333372740 (cast-from-var2254-to-var3566 var44))) ; Statement: $r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7) 
(assert true)
(define-const var3417 String (append/672562846 var539 var192)) ; Statement: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) 
(declare-const var539!1 String)
(assert (= var539!1 (str.++ var539 var192)))
(assert true)
(define-const var899 String (append/672562846 var3417 ", firstTemp=")) ; Statement: $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", firstTemp=") 
(declare-const var3417!1 String)
(assert (= var3417!1 (str.++ var3417 ", firstTemp=")))
(define-const var3505 Int (firstTemp/1112845700 var973)) ; Statement: $i1 = r1.<jdk.nashorn.internal.codegen.Label$Stack: int firstTemp> 
(assert true)
(define-const var404 String (append/-1001720160 var899 var3505)) ; Statement: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1) 
(declare-const var899!1 String)
(assert (str.prefixof var899 var899!1))
(assert true)
(define-const var2183 String (append/672562846 var404 ", localTypes=")) ; Statement: $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", localTypes=") 
(declare-const var404!1 String)
(assert (= var404!1 (str.++ var404 ", localTypes=")))
(define-const var2483 var1187 (localVariableTypes/1112845700 var973)) ; Statement: $r13 = r1.<jdk.nashorn.internal.codegen.Label$Stack: java.util.List localVariableTypes> 
(define-const var1541 String (String_valueOf/-333372740 (cast-from-var1187-to-var3566 var2483))) ; Statement: $r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13) 
(assert true)
(define-const var504 String (append/672562846 var2183 var1541)) ; Statement: $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) 
(declare-const var2183!1 String)
(assert (= var2183!1 (str.++ var2183 var1541)))
(assert true)
(define-const var1492 String (toString/-2075883882 var504)) ; Statement: $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() 
 ; Statement: return $r17 
(check-sat)
(get-model)
(get-unsat-core)
; {String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), data/1112845700=([jdk.nashorn.internal.codegen.Label$Stack], jdk.nashorn.internal.codegen.types.Type[]), sp/1112845700=([jdk.nashorn.internal.codegen.Label$Stack], int), var2066_copyOf/-1140654950=([java.lang.Object[], int], java.lang.Object[]), cast-from-__Array__Int__var3127__-to-__Array__Int__var3566__=([jdk.nashorn.internal.codegen.types.Type[]], java.lang.Object[]), var2066_toString/-575966009=([java.lang.Object[]], java.lang.String), symbolBoundary/1112845700=([jdk.nashorn.internal.codegen.Label$Stack], java.util.BitSet), String_valueOf/-333372740=([java.lang.Object], java.lang.String), cast-from-var2254-to-var3566=([java.util.BitSet], java.lang.Object), firstTemp/1112845700=([jdk.nashorn.internal.codegen.Label$Stack], int), append/-1001720160=([java.lang.StringBuilder, int], java.lang.StringBuilder), localVariableTypes/1112845700=([jdk.nashorn.internal.codegen.Label$Stack], java.util.List), cast-from-var1187-to-var3566=([java.util.List], java.lang.Object), toString/-2075883882=([java.lang.StringBuilder], java.lang.String)}
; {var1487=jdk.nashorn.internal.codegen.Label$Stack, var973=r1, var1716=$r0, var1256=$r5, var3127=jdk.nashorn.internal.codegen.types.Type, var327=$r2, var1967=$i0, var3566=java.lang.Object, var2066=java.util.Arrays, var10=$r3, var3776=$r4, var215=$r6, var539=$r9, var2254=java.util.BitSet, var44=$r7, var192=$r8, var3417=$r10, var899=$r11, var3505=$i1, var404=$r12, var2183=$r15, var1187=java.util.List, var2483=$r13, var1541=$r14, var504=$r16, var1492=$r17}
; {jdk.nashorn.internal.codegen.Label$Stack=var1487, r1=var973, $r0=var1716, $r5=var1256, jdk.nashorn.internal.codegen.types.Type=var3127, $r2=var327, $i0=var1967, java.lang.Object=var3566, java.util.Arrays=var2066, $r3=var10, $r4=var3776, $r6=var215, $r9=var539, java.util.BitSet=var2254, $r7=var44, $r8=var192, $r10=var3417, $r11=var899, $i1=var3505, $r12=var404, $r15=var2183, java.util.List=var1187, $r13=var2483, $r14=var1541, $r16=var504, $r17=var1492}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.util.Arrays: java.lang.String toString(java.lang.Object[])>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.String: java.lang.String valueOf(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(int)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.String: java.lang.String valueOf(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,"<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 2,"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,"<java.lang.StringBuilder: java.lang.String toString()>": 1}
;stmts r1 := @this: jdk.nashorn.internal.codegen.Label$Stack;	$r0 = new java.lang.StringBuilder;	specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();	$r5 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("stack=");	$r2 = r1.<jdk.nashorn.internal.codegen.Label$Stack: jdk.nashorn.internal.codegen.types.Type[] data>;	$i0 = r1.<jdk.nashorn.internal.codegen.Label$Stack: int sp>;	$r3 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>($r2, $i0);	$r4 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>($r3);	$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);	$r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", symbolBoundaries=");	$r7 = r1.<jdk.nashorn.internal.codegen.Label$Stack: java.util.BitSet symbolBoundary>;	$r8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r7);	$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);	$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", firstTemp=");	$i1 = r1.<jdk.nashorn.internal.codegen.Label$Stack: int firstTemp>;	$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i1);	$r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", localTypes=");	$r13 = r1.<jdk.nashorn.internal.codegen.Label$Stack: java.util.List localVariableTypes>;	$r14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>($r13);	$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);	$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();	return $r17
;block_num 1