(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var3578 0)
(declare-sort var3687 0)
(declare-sort var1452 0)
(declare-sort var86 0)
(declare-sort var3028 0)
(declare-sort var508 0)
(declare-sort var2758 0)
(declare-sort var2868 0)
(declare-sort var3745 0)
(declare-sort var3530 0)
(declare-sort var3628 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun var1452_getCurrentErr/-1677300695 () var3687)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun var86_getCount/-1003810797 () Int)
(declare-fun append/-901862667 (String Int) String)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-fun println/-1226480079 (var3687 String) void)
(declare-fun var3028_getScopeCount/726456857 () Int)
(declare-fun var508_getListenersAdded/1441820189 () Int)
(declare-fun var508_getListenersRemoved/1120438973 () Int)
(declare-fun var2758_getConstructorCount/-2039769526 () Int)
(declare-fun var2758_getInvokes/-2111373312 () Int)
(declare-fun var2758_getAllocations/990357864 () Int)
(declare-fun var2868_getCount/1043831370 () Int)
(declare-fun var2868_getClonedCount/873267473 () Int)
(declare-fun var2868_getHistoryHit/534022082 () Int)
(declare-fun var2868_getProtoInvalidations/-1594866796 () Int)
(declare-fun var2868_getProtoHistoryHit/1743628018 () Int)
(declare-fun var2868_getSetProtoNewMapCount/870296908 () Int)
(declare-fun var3745_getCount/1775071414 () Int)
(declare-fun var3745_getMissCount/171743698 () Int)
(declare-fun var3745_getMissSamplingPercentage/-1700913903 () Int)
(define-fun append/-1001720160 ((s String) (tail Int)) String (str.++ s (str.from_int tail)))
(declare-fun var3745_getMissCounts/1510179889 (var3687) void)
(declare-const null-var3578 var3578)
(declare-const var3628-UNDEFINED var3530)
(declare-const var3461 var3578) ; Statement: r67 := @parameter0: java.lang.Object 
(assert (not (= var3461 null-var3578)))
(define-const var842 var3687 var1452_getCurrentErr/-1677300695) ; Statement: r0 = staticinvoke <jdk.nashorn.internal.runtime.Context: java.io.PrintWriter getCurrentErr()>() 
(define-const var3393 String String-init) ; Statement: $r1 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var3393)) ; Statement: specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() 
(declare-const var3393!1 String)
(assert (= var3393!1 ""))
(assert true)
(define-const var1685 String (append/672562846 var3393!1 "ScriptObject count ")) ; Statement: $r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ScriptObject count ") 
(declare-const var3393!2 String)
(assert (= var3393!2 (str.++ var3393!1 "ScriptObject count ")))
(define-const var70 Int var86_getCount/-1003810797) ; Statement: $l0 = staticinvoke <jdk.nashorn.internal.runtime.ScriptObject: long getCount()>() 
(assert true)
(define-const var2258 String (append/-901862667 var1685 var70)) ; Statement: $r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0) 
(declare-const var1685!1 String)
(assert (str.prefixof var1685 var1685!1))
(assert true)
(define-const var1990 String (toString/-2075883882 var2258)) ; Statement: $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var842 var1990)) ; Statement: virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r4) 

(declare-const var842!1 var3687)
(declare-const var1990!1 String)
(define-const var660 String String-init) ; Statement: $r5 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var660)) ; Statement: specialinvoke $r5.<java.lang.StringBuilder: void <init>()>() 
(declare-const var660!1 String)
(assert (= var660!1 ""))
(assert true)
(define-const var2146 String (append/672562846 var660!1 "Scope count ")) ; Statement: $r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scope count ") 
(declare-const var660!2 String)
(assert (= var660!2 (str.++ var660!1 "Scope count ")))
(define-const var3173 Int var3028_getScopeCount/726456857) ; Statement: $l1 = staticinvoke <jdk.nashorn.internal.runtime.Scope: long getScopeCount()>() 
(assert true)
(define-const var909 String (append/-901862667 var2146 var3173)) ; Statement: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1) 
(declare-const var2146!1 String)
(assert (str.prefixof var2146 var2146!1))
(assert true)
(define-const var2139 String (toString/-2075883882 var909)) ; Statement: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var842!1 var2139)) ; Statement: virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r8) 

(declare-const var842!2 var3687)
(declare-const var2139!1 String)
(define-const var3693 String String-init) ; Statement: $r9 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var3693)) ; Statement: specialinvoke $r9.<java.lang.StringBuilder: void <init>()>() 
(declare-const var3693!1 String)
(assert (= var3693!1 ""))
(assert true)
(define-const var2192 String (append/672562846 var3693!1 "ScriptObject listeners added ")) ; Statement: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ScriptObject listeners added ") 
(declare-const var3693!2 String)
(assert (= var3693!2 (str.++ var3693!1 "ScriptObject listeners added ")))
(define-const var3729 Int var508_getListenersAdded/1441820189) ; Statement: $l2 = staticinvoke <jdk.nashorn.internal.runtime.PropertyListeners: long getListenersAdded()>() 
(assert true)
(define-const var2848 String (append/-901862667 var2192 var3729)) ; Statement: $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2) 
(declare-const var2192!1 String)
(assert (str.prefixof var2192 var2192!1))
(assert true)
(define-const var3574 String (toString/-2075883882 var2848)) ; Statement: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var842!2 var3574)) ; Statement: virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r12) 

(declare-const var842!3 var3687)
(declare-const var3574!1 String)
(define-const var1319 String String-init) ; Statement: $r13 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var1319)) ; Statement: specialinvoke $r13.<java.lang.StringBuilder: void <init>()>() 
(declare-const var1319!1 String)
(assert (= var1319!1 ""))
(assert true)
(define-const var1232 String (append/672562846 var1319!1 "ScriptObject listeners removed ")) ; Statement: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ScriptObject listeners removed ") 
(declare-const var1319!2 String)
(assert (= var1319!2 (str.++ var1319!1 "ScriptObject listeners removed ")))
(define-const var860 Int var508_getListenersRemoved/1120438973) ; Statement: $l3 = staticinvoke <jdk.nashorn.internal.runtime.PropertyListeners: long getListenersRemoved()>() 
(assert true)
(define-const var1852 String (append/-901862667 var1232 var860)) ; Statement: $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3) 
(declare-const var1232!1 String)
(assert (str.prefixof var1232 var1232!1))
(assert true)
(define-const var1668 String (toString/-2075883882 var1852)) ; Statement: $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var842!3 var1668)) ; Statement: virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r16) 

(declare-const var842!4 var3687)
(declare-const var1668!1 String)
(define-const var1926 String String-init) ; Statement: $r17 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var1926)) ; Statement: specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() 
(declare-const var1926!1 String)
(assert (= var1926!1 ""))
(assert true)
(define-const var2140 String (append/672562846 var1926!1 "ScriptFunction constructor calls ")) ; Statement: $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ScriptFunction constructor calls ") 
(declare-const var1926!2 String)
(assert (= var1926!2 (str.++ var1926!1 "ScriptFunction constructor calls ")))
(define-const var3060 Int var2758_getConstructorCount/-2039769526) ; Statement: $l4 = staticinvoke <jdk.nashorn.internal.runtime.ScriptFunction: long getConstructorCount()>() 
(assert true)
(define-const var3261 String (append/-901862667 var2140 var3060)) ; Statement: $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4) 
(declare-const var2140!1 String)
(assert (str.prefixof var2140 var2140!1))
(assert true)
(define-const var3325 String (toString/-2075883882 var3261)) ; Statement: $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var842!4 var3325)) ; Statement: virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r20) 

(declare-const var842!5 var3687)
(declare-const var3325!1 String)
(define-const var3589 String String-init) ; Statement: $r21 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var3589)) ; Statement: specialinvoke $r21.<java.lang.StringBuilder: void <init>()>() 
(declare-const var3589!1 String)
(assert (= var3589!1 ""))
(assert true)
(define-const var2578 String (append/672562846 var3589!1 "ScriptFunction invokes ")) ; Statement: $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ScriptFunction invokes ") 
(declare-const var3589!2 String)
(assert (= var3589!2 (str.++ var3589!1 "ScriptFunction invokes ")))
(define-const var499 Int var2758_getInvokes/-2111373312) ; Statement: $l5 = staticinvoke <jdk.nashorn.internal.runtime.ScriptFunction: long getInvokes()>() 
(assert true)
(define-const var3604 String (append/-901862667 var2578 var499)) ; Statement: $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5) 
(declare-const var2578!1 String)
(assert (str.prefixof var2578 var2578!1))
(assert true)
(define-const var1266 String (toString/-2075883882 var3604)) ; Statement: $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var842!5 var1266)) ; Statement: virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r24) 

(declare-const var842!6 var3687)
(declare-const var1266!1 String)
(define-const var1189 String String-init) ; Statement: $r25 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var1189)) ; Statement: specialinvoke $r25.<java.lang.StringBuilder: void <init>()>() 
(declare-const var1189!1 String)
(assert (= var1189!1 ""))
(assert true)
(define-const var520 String (append/672562846 var1189!1 "ScriptFunction allocations ")) ; Statement: $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ScriptFunction allocations ") 
(declare-const var1189!2 String)
(assert (= var1189!2 (str.++ var1189!1 "ScriptFunction allocations ")))
(define-const var932 Int var2758_getAllocations/990357864) ; Statement: $l6 = staticinvoke <jdk.nashorn.internal.runtime.ScriptFunction: long getAllocations()>() 
(assert true)
(define-const var1754 String (append/-901862667 var520 var932)) ; Statement: $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6) 
(declare-const var520!1 String)
(assert (str.prefixof var520 var520!1))
(assert true)
(define-const var1281 String (toString/-2075883882 var1754)) ; Statement: $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var842!6 var1281)) ; Statement: virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r28) 

(declare-const var842!7 var3687)
(declare-const var1281!1 String)
(define-const var728 String String-init) ; Statement: $r29 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var728)) ; Statement: specialinvoke $r29.<java.lang.StringBuilder: void <init>()>() 
(declare-const var728!1 String)
(assert (= var728!1 ""))
(assert true)
(define-const var1544 String (append/672562846 var728!1 "PropertyMap count ")) ; Statement: $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PropertyMap count ") 
(declare-const var728!2 String)
(assert (= var728!2 (str.++ var728!1 "PropertyMap count ")))
(define-const var3963 Int var2868_getCount/1043831370) ; Statement: $l7 = staticinvoke <jdk.nashorn.internal.runtime.PropertyMap: long getCount()>() 
(assert true)
(define-const var2409 String (append/-901862667 var1544 var3963)) ; Statement: $r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7) 
(declare-const var1544!1 String)
(assert (str.prefixof var1544 var1544!1))
(assert true)
(define-const var1996 String (toString/-2075883882 var2409)) ; Statement: $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var842!7 var1996)) ; Statement: virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r32) 

(declare-const var842!8 var3687)
(declare-const var1996!1 String)
(define-const var1910 String String-init) ; Statement: $r33 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var1910)) ; Statement: specialinvoke $r33.<java.lang.StringBuilder: void <init>()>() 
(declare-const var1910!1 String)
(assert (= var1910!1 ""))
(assert true)
(define-const var42 String (append/672562846 var1910!1 "PropertyMap cloned ")) ; Statement: $r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PropertyMap cloned ") 
(declare-const var1910!2 String)
(assert (= var1910!2 (str.++ var1910!1 "PropertyMap cloned ")))
(define-const var1378 Int var2868_getClonedCount/873267473) ; Statement: $l8 = staticinvoke <jdk.nashorn.internal.runtime.PropertyMap: long getClonedCount()>() 
(assert true)
(define-const var2808 String (append/-901862667 var42 var1378)) ; Statement: $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8) 
(declare-const var42!1 String)
(assert (str.prefixof var42 var42!1))
(assert true)
(define-const var136 String (toString/-2075883882 var2808)) ; Statement: $r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var842!8 var136)) ; Statement: virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r36) 

(declare-const var842!9 var3687)
(declare-const var136!1 String)
(define-const var2008 String String-init) ; Statement: $r37 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var2008)) ; Statement: specialinvoke $r37.<java.lang.StringBuilder: void <init>()>() 
(declare-const var2008!1 String)
(assert (= var2008!1 ""))
(assert true)
(define-const var3375 String (append/672562846 var2008!1 "PropertyMap history hit ")) ; Statement: $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PropertyMap history hit ") 
(declare-const var2008!2 String)
(assert (= var2008!2 (str.++ var2008!1 "PropertyMap history hit ")))
(define-const var883 Int var2868_getHistoryHit/534022082) ; Statement: $l9 = staticinvoke <jdk.nashorn.internal.runtime.PropertyMap: long getHistoryHit()>() 
(assert true)
(define-const var1787 String (append/-901862667 var3375 var883)) ; Statement: $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9) 
(declare-const var3375!1 String)
(assert (str.prefixof var3375 var3375!1))
(assert true)
(define-const var20 String (toString/-2075883882 var1787)) ; Statement: $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var842!9 var20)) ; Statement: virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r40) 

(declare-const var842!10 var3687)
(declare-const var20!1 String)
(define-const var3454 String String-init) ; Statement: $r41 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var3454)) ; Statement: specialinvoke $r41.<java.lang.StringBuilder: void <init>()>() 
(declare-const var3454!1 String)
(assert (= var3454!1 ""))
(assert true)
(define-const var4 String (append/672562846 var3454!1 "PropertyMap proto invalidations ")) ; Statement: $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PropertyMap proto invalidations ") 
(declare-const var3454!2 String)
(assert (= var3454!2 (str.++ var3454!1 "PropertyMap proto invalidations ")))
(define-const var176 Int var2868_getProtoInvalidations/-1594866796) ; Statement: $l10 = staticinvoke <jdk.nashorn.internal.runtime.PropertyMap: long getProtoInvalidations()>() 
(assert true)
(define-const var2553 String (append/-901862667 var4 var176)) ; Statement: $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10) 
(declare-const var4!1 String)
(assert (str.prefixof var4 var4!1))
(assert true)
(define-const var3444 String (toString/-2075883882 var2553)) ; Statement: $r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var842!10 var3444)) ; Statement: virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r44) 

(declare-const var842!11 var3687)
(declare-const var3444!1 String)
(define-const var2985 String String-init) ; Statement: $r45 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var2985)) ; Statement: specialinvoke $r45.<java.lang.StringBuilder: void <init>()>() 
(declare-const var2985!1 String)
(assert (= var2985!1 ""))
(assert true)
(define-const var3326 String (append/672562846 var2985!1 "PropertyMap proto history hit ")) ; Statement: $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PropertyMap proto history hit ") 
(declare-const var2985!2 String)
(assert (= var2985!2 (str.++ var2985!1 "PropertyMap proto history hit ")))
(define-const var2250 Int var2868_getProtoHistoryHit/1743628018) ; Statement: $l11 = staticinvoke <jdk.nashorn.internal.runtime.PropertyMap: long getProtoHistoryHit()>() 
(assert true)
(define-const var3612 String (append/-901862667 var3326 var2250)) ; Statement: $r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11) 
(declare-const var3326!1 String)
(assert (str.prefixof var3326 var3326!1))
(assert true)
(define-const var1503 String (toString/-2075883882 var3612)) ; Statement: $r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var842!11 var1503)) ; Statement: virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r48) 

(declare-const var842!12 var3687)
(declare-const var1503!1 String)
(define-const var658 String String-init) ; Statement: $r49 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var658)) ; Statement: specialinvoke $r49.<java.lang.StringBuilder: void <init>()>() 
(declare-const var658!1 String)
(assert (= var658!1 ""))
(assert true)
(define-const var1482 String (append/672562846 var658!1 "PropertyMap setProtoNewMapCount ")) ; Statement: $r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PropertyMap setProtoNewMapCount ") 
(declare-const var658!2 String)
(assert (= var658!2 (str.++ var658!1 "PropertyMap setProtoNewMapCount ")))
(define-const var1745 Int var2868_getSetProtoNewMapCount/870296908) ; Statement: $l12 = staticinvoke <jdk.nashorn.internal.runtime.PropertyMap: long getSetProtoNewMapCount()>() 
(assert true)
(define-const var126 String (append/-901862667 var1482 var1745)) ; Statement: $r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12) 
(declare-const var1482!1 String)
(assert (str.prefixof var1482 var1482!1))
(assert true)
(define-const var2477 String (toString/-2075883882 var126)) ; Statement: $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var842!12 var2477)) ; Statement: virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r52) 

(declare-const var842!13 var3687)
(declare-const var2477!1 String)
(define-const var208 String String-init) ; Statement: $r53 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var208)) ; Statement: specialinvoke $r53.<java.lang.StringBuilder: void <init>()>() 
(declare-const var208!1 String)
(assert (= var208!1 ""))
(assert true)
(define-const var1144 String (append/672562846 var208!1 "Callsite count ")) ; Statement: $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Callsite count ") 
(declare-const var208!2 String)
(assert (= var208!2 (str.++ var208!1 "Callsite count ")))
(define-const var3281 Int var3745_getCount/1775071414) ; Statement: $l13 = staticinvoke <jdk.nashorn.internal.runtime.linker.LinkerCallSite: long getCount()>() 
(assert true)
(define-const var2975 String (append/-901862667 var1144 var3281)) ; Statement: $r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13) 
(declare-const var1144!1 String)
(assert (str.prefixof var1144 var1144!1))
(assert true)
(define-const var412 String (toString/-2075883882 var2975)) ; Statement: $r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var842!13 var412)) ; Statement: virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r56) 

(declare-const var842!14 var3687)
(declare-const var412!1 String)
(define-const var2398 String String-init) ; Statement: $r57 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var2398)) ; Statement: specialinvoke $r57.<java.lang.StringBuilder: void <init>()>() 
(declare-const var2398!1 String)
(assert (= var2398!1 ""))
(assert true)
(define-const var370 String (append/672562846 var2398!1 "Callsite misses ")) ; Statement: $r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Callsite misses ") 
(declare-const var2398!2 String)
(assert (= var2398!2 (str.++ var2398!1 "Callsite misses ")))
(define-const var2218 Int var3745_getMissCount/171743698) ; Statement: $l14 = staticinvoke <jdk.nashorn.internal.runtime.linker.LinkerCallSite: long getMissCount()>() 
(assert true)
(define-const var393 String (append/-901862667 var370 var2218)) ; Statement: $r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14) 
(declare-const var370!1 String)
(assert (str.prefixof var370 var370!1))
(assert true)
(define-const var360 String (toString/-2075883882 var393)) ; Statement: $r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var842!14 var360)) ; Statement: virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r60) 

(declare-const var842!15 var3687)
(declare-const var360!1 String)
(define-const var817 String String-init) ; Statement: $r61 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var817)) ; Statement: specialinvoke $r61.<java.lang.StringBuilder: void <init>()>() 
(declare-const var817!1 String)
(assert (= var817!1 ""))
(assert true)
(define-const var1505 String (append/672562846 var817!1 "Callsite misses by site at ")) ; Statement: $r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Callsite misses by site at ") 
(declare-const var817!2 String)
(assert (= var817!2 (str.++ var817!1 "Callsite misses by site at ")))
(define-const var1260 Int var3745_getMissSamplingPercentage/-1700913903) ; Statement: $i15 = staticinvoke <jdk.nashorn.internal.runtime.linker.LinkerCallSite: int getMissSamplingPercentage()>() 
(assert true)
(define-const var1451 String (append/-1001720160 var1505 var1260)) ; Statement: $r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15) 
(declare-const var1505!1 String)
(assert (str.prefixof var1505 var1505!1))
(assert true)
(define-const var514 String (append/672562846 var1451 "%")) ; Statement: $r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%") 
(declare-const var1451!1 String)
(assert (= var1451!1 (str.++ var1451 "%")))
(assert true)
(define-const var2978 String (toString/-2075883882 var514)) ; Statement: $r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (println/-1226480079 var842!15 var2978)) ; Statement: virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r65) 

(declare-const var842!16 var3687)
(declare-const var2978!1 String)
;(assert (var3745_getMissCounts/1510179889 var842!16)) ; Statement: staticinvoke <jdk.nashorn.internal.runtime.linker.LinkerCallSite: void getMissCounts(java.io.PrintWriter)>(r0) 

(declare-const var842!17 var3687)
(define-const var2876 var3530 var3628-UNDEFINED) ; Statement: $r66 = <jdk.nashorn.internal.runtime.ScriptRuntime: jdk.nashorn.internal.runtime.Undefined UNDEFINED> 
 ; Statement: return $r66 
(check-sat)
(get-model)
(get-unsat-core)
; {var1452_getCurrentErr/-1677300695=([], java.io.PrintWriter), String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), var86_getCount/-1003810797=([], long), append/-901862667=([java.lang.StringBuilder, long], java.lang.StringBuilder), toString/-2075883882=([java.lang.StringBuilder], java.lang.String), println/-1226480079=([java.io.PrintWriter, java.lang.String], void), var3028_getScopeCount/726456857=([], long), var508_getListenersAdded/1441820189=([], long), var508_getListenersRemoved/1120438973=([], long), var2758_getConstructorCount/-2039769526=([], long), var2758_getInvokes/-2111373312=([], long), var2758_getAllocations/990357864=([], long), var2868_getCount/1043831370=([], long), var2868_getClonedCount/873267473=([], long), var2868_getHistoryHit/534022082=([], long), var2868_getProtoInvalidations/-1594866796=([], long), var2868_getProtoHistoryHit/1743628018=([], long), var2868_getSetProtoNewMapCount/870296908=([], long), var3745_getCount/1775071414=([], long), var3745_getMissCount/171743698=([], long), var3745_getMissSamplingPercentage/-1700913903=([], int), append/-1001720160=([java.lang.StringBuilder, int], java.lang.StringBuilder), var3745_getMissCounts/1510179889=([java.io.PrintWriter], void)}
; {var3578=java.lang.Object, var3461=r67, var3687=java.io.PrintWriter, var1452=jdk.nashorn.internal.runtime.Context, var842=r0, var3393=$r1, var1685=$r2, var86=jdk.nashorn.internal.runtime.ScriptObject, var70=$l0, var2258=$r3, var1990=$r4, var660=$r5, var2146=$r6, var3028=jdk.nashorn.internal.runtime.Scope, var3173=$l1, var909=$r7, var2139=$r8, var3693=$r9, var2192=$r10, var508=jdk.nashorn.internal.runtime.PropertyListeners, var3729=$l2, var2848=$r11, var3574=$r12, var1319=$r13, var1232=$r14, var860=$l3, var1852=$r15, var1668=$r16, var1926=$r17, var2140=$r18, var2758=jdk.nashorn.internal.runtime.ScriptFunction, var3060=$l4, var3261=$r19, var3325=$r20, var3589=$r21, var2578=$r22, var499=$l5, var3604=$r23, var1266=$r24, var1189=$r25, var520=$r26, var932=$l6, var1754=$r27, var1281=$r28, var728=$r29, var1544=$r30, var2868=jdk.nashorn.internal.runtime.PropertyMap, var3963=$l7, var2409=$r31, var1996=$r32, var1910=$r33, var42=$r34, var1378=$l8, var2808=$r35, var136=$r36, var2008=$r37, var3375=$r38, var883=$l9, var1787=$r39, var20=$r40, var3454=$r41, var4=$r42, var176=$l10, var2553=$r43, var3444=$r44, var2985=$r45, var3326=$r46, var2250=$l11, var3612=$r47, var1503=$r48, var658=$r49, var1482=$r50, var1745=$l12, var126=$r51, var2477=$r52, var208=$r53, var1144=$r54, var3745=jdk.nashorn.internal.runtime.linker.LinkerCallSite, var3281=$l13, var2975=$r55, var412=$r56, var2398=$r57, var370=$r58, var2218=$l14, var393=$r59, var360=$r60, var817=$r61, var1505=$r62, var1260=$i15, var1451=$r63, var514=$r64, var2978=$r65, var3530=jdk.nashorn.internal.runtime.Undefined, var3628=jdk.nashorn.internal.runtime.ScriptRuntime, var2876=$r66}
; {java.lang.Object=var3578, r67=var3461, java.io.PrintWriter=var3687, jdk.nashorn.internal.runtime.Context=var1452, r0=var842, $r1=var3393, $r2=var1685, jdk.nashorn.internal.runtime.ScriptObject=var86, $l0=var70, $r3=var2258, $r4=var1990, $r5=var660, $r6=var2146, jdk.nashorn.internal.runtime.Scope=var3028, $l1=var3173, $r7=var909, $r8=var2139, $r9=var3693, $r10=var2192, jdk.nashorn.internal.runtime.PropertyListeners=var508, $l2=var3729, $r11=var2848, $r12=var3574, $r13=var1319, $r14=var1232, $l3=var860, $r15=var1852, $r16=var1668, $r17=var1926, $r18=var2140, jdk.nashorn.internal.runtime.ScriptFunction=var2758, $l4=var3060, $r19=var3261, $r20=var3325, $r21=var3589, $r22=var2578, $l5=var499, $r23=var3604, $r24=var1266, $r25=var1189, $r26=var520, $l6=var932, $r27=var1754, $r28=var1281, $r29=var728, $r30=var1544, jdk.nashorn.internal.runtime.PropertyMap=var2868, $l7=var3963, $r31=var2409, $r32=var1996, $r33=var1910, $r34=var42, $l8=var1378, $r35=var2808, $r36=var136, $r37=var2008, $r38=var3375, $l9=var883, $r39=var1787, $r40=var20, $r41=var3454, $r42=var4, $l10=var176, $r43=var2553, $r44=var3444, $r45=var2985, $r46=var3326, $l11=var2250, $r47=var3612, $r48=var1503, $r49=var658, $r50=var1482, $l12=var1745, $r51=var126, $r52=var2477, $r53=var208, $r54=var1144, jdk.nashorn.internal.runtime.linker.LinkerCallSite=var3745, $l13=var3281, $r55=var2975, $r56=var412, $r57=var2398, $r58=var370, $l14=var2218, $r59=var393, $r60=var360, $r61=var817, $r62=var1505, $i15=var1260, $r63=var1451, $r64=var514, $r65=var2978, jdk.nashorn.internal.runtime.Undefined=var3530, jdk.nashorn.internal.runtime.ScriptRuntime=var3628, $r66=var2876}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(long)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(long)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(long)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(long)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(long)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(long)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(long)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(long)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(long)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(long)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(long)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(long)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(long)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(long)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(long)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(int)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 16,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 17,"<java.lang.StringBuilder: java.lang.StringBuilder append(long)>": 15,"<java.lang.StringBuilder: java.lang.String toString()>": 16,"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1}
;stmts r67 := @parameter0: java.lang.Object;	r0 = staticinvoke <jdk.nashorn.internal.runtime.Context: java.io.PrintWriter getCurrentErr()>();	$r1 = new java.lang.StringBuilder;	specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();	$r2 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ScriptObject count ");	$l0 = staticinvoke <jdk.nashorn.internal.runtime.ScriptObject: long getCount()>();	$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l0);	$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r4);	$r5 = new java.lang.StringBuilder;	specialinvoke $r5.<java.lang.StringBuilder: void <init>()>();	$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Scope count ");	$l1 = staticinvoke <jdk.nashorn.internal.runtime.Scope: long getScopeCount()>();	$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l1);	$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r8);	$r9 = new java.lang.StringBuilder;	specialinvoke $r9.<java.lang.StringBuilder: void <init>()>();	$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ScriptObject listeners added ");	$l2 = staticinvoke <jdk.nashorn.internal.runtime.PropertyListeners: long getListenersAdded()>();	$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l2);	$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r12);	$r13 = new java.lang.StringBuilder;	specialinvoke $r13.<java.lang.StringBuilder: void <init>()>();	$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ScriptObject listeners removed ");	$l3 = staticinvoke <jdk.nashorn.internal.runtime.PropertyListeners: long getListenersRemoved()>();	$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l3);	$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r16);	$r17 = new java.lang.StringBuilder;	specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();	$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ScriptFunction constructor calls ");	$l4 = staticinvoke <jdk.nashorn.internal.runtime.ScriptFunction: long getConstructorCount()>();	$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l4);	$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r20);	$r21 = new java.lang.StringBuilder;	specialinvoke $r21.<java.lang.StringBuilder: void <init>()>();	$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ScriptFunction invokes ");	$l5 = staticinvoke <jdk.nashorn.internal.runtime.ScriptFunction: long getInvokes()>();	$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l5);	$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r24);	$r25 = new java.lang.StringBuilder;	specialinvoke $r25.<java.lang.StringBuilder: void <init>()>();	$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("ScriptFunction allocations ");	$l6 = staticinvoke <jdk.nashorn.internal.runtime.ScriptFunction: long getAllocations()>();	$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l6);	$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r28);	$r29 = new java.lang.StringBuilder;	specialinvoke $r29.<java.lang.StringBuilder: void <init>()>();	$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PropertyMap count ");	$l7 = staticinvoke <jdk.nashorn.internal.runtime.PropertyMap: long getCount()>();	$r31 = virtualinvoke $r30.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l7);	$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r32);	$r33 = new java.lang.StringBuilder;	specialinvoke $r33.<java.lang.StringBuilder: void <init>()>();	$r34 = virtualinvoke $r33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PropertyMap cloned ");	$l8 = staticinvoke <jdk.nashorn.internal.runtime.PropertyMap: long getClonedCount()>();	$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l8);	$r36 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r36);	$r37 = new java.lang.StringBuilder;	specialinvoke $r37.<java.lang.StringBuilder: void <init>()>();	$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PropertyMap history hit ");	$l9 = staticinvoke <jdk.nashorn.internal.runtime.PropertyMap: long getHistoryHit()>();	$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l9);	$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r40);	$r41 = new java.lang.StringBuilder;	specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();	$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PropertyMap proto invalidations ");	$l10 = staticinvoke <jdk.nashorn.internal.runtime.PropertyMap: long getProtoInvalidations()>();	$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l10);	$r44 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r44);	$r45 = new java.lang.StringBuilder;	specialinvoke $r45.<java.lang.StringBuilder: void <init>()>();	$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PropertyMap proto history hit ");	$l11 = staticinvoke <jdk.nashorn.internal.runtime.PropertyMap: long getProtoHistoryHit()>();	$r47 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l11);	$r48 = virtualinvoke $r47.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r48);	$r49 = new java.lang.StringBuilder;	specialinvoke $r49.<java.lang.StringBuilder: void <init>()>();	$r50 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("PropertyMap setProtoNewMapCount ");	$l12 = staticinvoke <jdk.nashorn.internal.runtime.PropertyMap: long getSetProtoNewMapCount()>();	$r51 = virtualinvoke $r50.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l12);	$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r52);	$r53 = new java.lang.StringBuilder;	specialinvoke $r53.<java.lang.StringBuilder: void <init>()>();	$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Callsite count ");	$l13 = staticinvoke <jdk.nashorn.internal.runtime.linker.LinkerCallSite: long getCount()>();	$r55 = virtualinvoke $r54.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l13);	$r56 = virtualinvoke $r55.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r56);	$r57 = new java.lang.StringBuilder;	specialinvoke $r57.<java.lang.StringBuilder: void <init>()>();	$r58 = virtualinvoke $r57.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Callsite misses ");	$l14 = staticinvoke <jdk.nashorn.internal.runtime.linker.LinkerCallSite: long getMissCount()>();	$r59 = virtualinvoke $r58.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>($l14);	$r60 = virtualinvoke $r59.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r60);	$r61 = new java.lang.StringBuilder;	specialinvoke $r61.<java.lang.StringBuilder: void <init>()>();	$r62 = virtualinvoke $r61.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Callsite misses by site at ");	$i15 = staticinvoke <jdk.nashorn.internal.runtime.linker.LinkerCallSite: int getMissSamplingPercentage()>();	$r63 = virtualinvoke $r62.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i15);	$r64 = virtualinvoke $r63.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("%");	$r65 = virtualinvoke $r64.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke r0.<java.io.PrintWriter: void println(java.lang.String)>($r65);	staticinvoke <jdk.nashorn.internal.runtime.linker.LinkerCallSite: void getMissCounts(java.io.PrintWriter)>(r0);	$r66 = <jdk.nashorn.internal.runtime.ScriptRuntime: jdk.nashorn.internal.runtime.Undefined UNDEFINED>;	return $r66
;block_num 1