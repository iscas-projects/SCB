(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var3996 0)
(declare-sort var1814 0)
(declare-sort var3993 0)
(declare-sort var2200 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun var1814-init () var1814)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun getClass/1258963082 (var3993) ClassObject)
(declare-fun cast-from-var3996-to-var3993 (var3996) var3993)
(declare-fun getPackage/-1841711535 (ClassObject) var2200)
(declare-fun getSpecificationTitle/-375778831 (var2200) String)
(declare-fun getSpecificationVersion/809679985 (var2200) String)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-fun <init>/-630064361 (var1814 String) void)
(declare-const null-var3996 var3996)
(declare-const var1256 var3996) ; Statement: r2 := @this: jdk.internal.util.xml.SAXParser 
(assert (not (= var1256 null-var3996)))
(define-const var2574 var1814 var1814-init) ; Statement: $r0 = new java.lang.UnsupportedOperationException 
(define-const var2149 String String-init) ; Statement: $r1 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var2149)) ; Statement: specialinvoke $r1.<java.lang.StringBuilder: void <init>()>() 
(declare-const var2149!1 String)
(assert (= var2149!1 ""))
(assert true)
(define-const var2010 String (append/672562846 var2149!1 "This parser does not support specification \u0022")) ; Statement: $r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This parser does not support specification \"") 
(declare-const var2149!2 String)
(assert (= var2149!2 (str.++ var2149!1 "This parser does not support specification \u0022")))
(assert true)
(define-const var92 ClassObject (getClass/1258963082 (cast-from-var3996-to-var3993 var1256))) ; Statement: $r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>() 
(assert true)
(define-const var254 var2200 (getPackage/-1841711535 var92)) ; Statement: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Package getPackage()>() 
(assert true)
(define-const var1124 String (getSpecificationTitle/-375778831 var254)) ; Statement: $r5 = virtualinvoke $r4.<java.lang.Package: java.lang.String getSpecificationTitle()>() 
(assert true)
(define-const var3767 String (append/672562846 var2010 var1124)) ; Statement: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) 
(declare-const var2010!1 String)
(assert (= var2010!1 (str.++ var2010 var1124)))
(assert true)
(define-const var3019 String (append/672562846 var3767 "\u0022 version \u0022")) ; Statement: $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" version \"") 
(declare-const var3767!1 String)
(assert (= var3767!1 (str.++ var3767 "\u0022 version \u0022")))
(assert true)
(define-const var3433 ClassObject (getClass/1258963082 (cast-from-var3996-to-var3993 var1256))) ; Statement: $r8 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>() 
(assert true)
(define-const var3478 var2200 (getPackage/-1841711535 var3433)) ; Statement: $r9 = virtualinvoke $r8.<java.lang.Class: java.lang.Package getPackage()>() 
(assert true)
(define-const var3706 String (getSpecificationVersion/809679985 var3478)) ; Statement: $r10 = virtualinvoke $r9.<java.lang.Package: java.lang.String getSpecificationVersion()>() 
(assert true)
(define-const var968 String (append/672562846 var3019 var3706)) ; Statement: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) 
(declare-const var3019!1 String)
(assert (= var3019!1 (str.++ var3019 var3706)))
(assert true)
(define-const var993 String (append/672562846 var968 "\u0022")) ; Statement: $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"") 
(declare-const var968!1 String)
(assert (= var968!1 (str.++ var968 "\u0022")))
(assert true)
(define-const var1533 String (toString/-2075883882 var993)) ; Statement: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (<init>/-630064361 var2574 var1533)) ; Statement: specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14) 

(declare-const var2574!1 var1814)
(declare-const var1533!1 String)
 ; Statement: throw $r0 
(check-sat)
(get-model)
(get-unsat-core)
; {var1814-init=([], java.lang.UnsupportedOperationException), String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), getClass/1258963082=([java.lang.Object], java.lang.Class), cast-from-var3996-to-var3993=([jdk.internal.util.xml.SAXParser], java.lang.Object), getPackage/-1841711535=([java.lang.Class], java.lang.Package), getSpecificationTitle/-375778831=([java.lang.Package], java.lang.String), getSpecificationVersion/809679985=([java.lang.Package], java.lang.String), toString/-2075883882=([java.lang.StringBuilder], java.lang.String), <init>/-630064361=([java.lang.UnsupportedOperationException, java.lang.String], void)}
; {var3996=jdk.internal.util.xml.SAXParser, var1256=r2, var1814=java.lang.UnsupportedOperationException, var2574=$r0, var2149=$r1, var2010=$r6, var3993=java.lang.Object, var92=$r3, var2200=java.lang.Package, var254=$r4, var1124=$r5, var3767=$r7, var3019=$r11, var3433=$r8, var3478=$r9, var3706=$r10, var968=$r12, var993=$r13, var1533=$r14}
; {jdk.internal.util.xml.SAXParser=var3996, r2=var1256, java.lang.UnsupportedOperationException=var1814, $r0=var2574, $r1=var2149, $r6=var2010, java.lang.Object=var3993, $r3=var92, java.lang.Package=var2200, $r4=var254, $r5=var1124, $r7=var3767, $r11=var3019, $r8=var3433, $r9=var3478, $r10=var3706, $r12=var968, $r13=var993, $r14=var1533}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 5,"<java.lang.StringBuilder: java.lang.String toString()>": 1}
;stmts r2 := @this: jdk.internal.util.xml.SAXParser;	$r0 = new java.lang.UnsupportedOperationException;	$r1 = new java.lang.StringBuilder;	specialinvoke $r1.<java.lang.StringBuilder: void <init>()>();	$r6 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("This parser does not support specification \"");	$r3 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();	$r4 = virtualinvoke $r3.<java.lang.Class: java.lang.Package getPackage()>();	$r5 = virtualinvoke $r4.<java.lang.Package: java.lang.String getSpecificationTitle()>();	$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);	$r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\" version \"");	$r8 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>();	$r9 = virtualinvoke $r8.<java.lang.Class: java.lang.Package getPackage()>();	$r10 = virtualinvoke $r9.<java.lang.Package: java.lang.String getSpecificationVersion()>();	$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);	$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\"");	$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>();	specialinvoke $r0.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>($r14);	throw $r0
;block_num 1