(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var698 0)
(declare-sort var1759 0)
(declare-sort var1117 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun hashCode/-467973558 (String) Int)
(declare-const null-String String)
(declare-const var1117-NUMBER var1759)
(declare-const var565 String) ; Statement: r0 := @parameter0: java.lang.String 
(assert (not (= var565 null-String)))
(define-const var777 Int (- 1)) ; Statement: b1 = -1 
(assert true)
(define-const var3155 Int (hashCode/-467973558 var565)) ; Statement: $i0 = virtualinvoke r0.<java.lang.String: int hashCode()>() 
 ; Statement: tableswitch($i0) {     case 66: goto $z12 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("B");     case 67: goto $z11 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("C");     case 68: goto $z10 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("D");     case 69: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 70: goto $z9 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("F");     case 71: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 72: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 73: goto $z8 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("I");     case 74: goto $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("J");     case 75: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 76: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 77: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 78: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 79: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 80: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 81: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 82: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 83: goto $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("S");     case 84: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 85: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 86: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 87: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 88: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 89: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 90: goto $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("Z");     default: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; }; } 
(assert (and (not (= var3155 68)) (and (not (= var3155 67)) (and (not (= var3155 66)) true)))) ; Intersect: Negate: Cond: $i0 == 68   and Intersect: Negate: Cond: $i0 == 67   and Intersect: Negate: Cond: $i0 == 66   and Non Conditional   
 ; Statement: tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; } 
(assert (and (= var777 6) (and (not (= var777 5)) (and (not (= var777 4)) (and (not (= var777 3)) (and (not (= var777 2)) (and (not (= var777 1)) (and (not (= var777 0)) true)))))))) ; Intersect: Cond: b1 == 6  and Intersect: Negate: Cond: b1 == 5   and Intersect: Negate: Cond: b1 == 4   and Intersect: Negate: Cond: b1 == 3   and Intersect: Negate: Cond: b1 == 2   and Intersect: Negate: Cond: b1 == 1   and Intersect: Negate: Cond: b1 == 0   and Non Conditional       
(define-const var3421 var1759 var1117-NUMBER) ; Statement: $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER> 
 ; Statement: return $r2 
(check-sat)
(get-model)
(get-unsat-core)
; {hashCode/-467973558=([java.lang.String], int)}
; {var565=r0, var698=null_type, var777=b1, var3155=$i0, var1759=jdk.nashorn.internal.codegen.types.NumericType, var1117=jdk.nashorn.internal.codegen.types.Type, var3421=$r2}
; {r0=var565, null_type=var698, b1=var777, $i0=var3155, jdk.nashorn.internal.codegen.types.NumericType=var1759, jdk.nashorn.internal.codegen.types.Type=var1117, $r2=var3421}
;seq <java.lang.String: int hashCode()>
;cnt {"<java.lang.String: int hashCode()>": 1}
;stmts r0 := @parameter0: java.lang.String;	b1 = -1;	$i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();	tableswitch($i0) {     case 66: goto $z12 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("B");     case 67: goto $z11 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("C");     case 68: goto $z10 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("D");     case 69: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 70: goto $z9 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("F");     case 71: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 72: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 73: goto $z8 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("I");     case 74: goto $z7 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("J");     case 75: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 76: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 77: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 78: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 79: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 80: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 81: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 82: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 83: goto $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("S");     case 84: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 85: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 86: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 87: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 88: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 89: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };     case 90: goto $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("Z");     default: goto tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; }; };	tableswitch(b1) {     case 0: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 1: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 2: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 3: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 4: goto $r4 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.BitwiseType INT>;     case 5: goto $z1 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>;     case 6: goto $r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;     case 7: goto $r1 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.Type LONG>;     default: goto $z2 = <jdk.nashorn.internal.codegen.MethodEmitter: boolean $assertionsDisabled>; };	$r2 = <jdk.nashorn.internal.codegen.types.Type: jdk.nashorn.internal.codegen.types.NumericType NUMBER>;	return $r2
;block_num 3