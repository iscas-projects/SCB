(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var780 0)
(declare-sort var1408 0)
(declare-sort var1751 0)
(declare-sort var31 0)
(declare-sort var3377 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun name/1105056443 (var780) String)
(declare-fun var1408_quote/-789117686 (String) String)
(declare-fun var1751_id/-2071121520 (var31) String)
(declare-fun cast-from-var780-to-var31 (var780) var31)
(declare-fun invalidations/1105056443 (var780) Int)
(define-fun append/-1001720160 ((s String) (tail Int)) String (str.++ s (str.from_int tail)))
(declare-fun append/-1166366385 (String Int) String)
(declare-fun sp/1105056443 (var780) var3377)
(declare-fun hasBeenInvalidated/925586694 (var3377) Bool)
(declare-fun append/-388390247 (String Bool) String)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-const null-var780 var780)
(declare-const var711 var780) ; Statement: r1 := @this: jdk.nashorn.internal.runtime.GlobalConstants$Access 
(assert (not (= var711 null-var780)))
(define-const var3363 String String-init) ; Statement: $r0 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var3363)) ; Statement: specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() 
(declare-const var3363!1 String)
(assert (= var3363!1 ""))
(assert true)
(define-const var3910 String (append/672562846 var3363!1 "[")) ; Statement: $r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[") 
(declare-const var3363!2 String)
(assert (= var3363!2 (str.++ var3363!1 "[")))
(define-const var3945 String (name/1105056443 var711)) ; Statement: $r2 = r1.<jdk.nashorn.internal.runtime.GlobalConstants$Access: java.lang.String name> 
(define-const var3836 String (var1408_quote/-789117686 var3945)) ; Statement: $r3 = staticinvoke <jdk.nashorn.internal.runtime.logging.DebugLogger: java.lang.String quote(java.lang.String)>($r2) 
(assert true)
(define-const var92 String (append/672562846 var3910 var3836)) ; Statement: $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3) 
(declare-const var3910!1 String)
(assert (= var3910!1 (str.++ var3910 var3836)))
(assert true)
(define-const var3495 String (append/672562846 var92 " <id=")) ; Statement: $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <id=") 
(declare-const var92!1 String)
(assert (= var92!1 (str.++ var92 " <id=")))
(define-const var3693 String (var1751_id/-2071121520 (cast-from-var780-to-var31 var711))) ; Statement: $r6 = staticinvoke <jdk.nashorn.internal.runtime.Debug: java.lang.String id(java.lang.Object)>(r1) 
(assert true)
(define-const var1092 String (append/672562846 var3495 var3693)) ; Statement: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) 
(declare-const var3495!1 String)
(assert (= var3495!1 (str.++ var3495 var3693)))
(assert true)
(define-const var1674 String (append/672562846 var1092 "> inv#=")) ; Statement: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> inv#=") 
(declare-const var1092!1 String)
(assert (= var1092!1 (str.++ var1092 "> inv#=")))
(define-const var3019 Int (invalidations/1105056443 var711)) ; Statement: $i0 = r1.<jdk.nashorn.internal.runtime.GlobalConstants$Access: int invalidations> 
(assert true)
(define-const var3225 String (append/-1001720160 var1674 var3019)) ; Statement: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0) 
(declare-const var1674!1 String)
(assert (str.prefixof var1674 var1674!1))
(assert true)
(define-const var3511 String (append/-1166366385 var3225 47)) ; Statement: $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47) 
(declare-const var3225!1 String)
(assert (str.prefixof var3225 var3225!1))
(assert true)
(define-const var2294 String (append/-1001720160 var3511 2)) ; Statement: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(2) 
(declare-const var3511!1 String)
(assert (str.prefixof var3511 var3511!1))
(assert true)
(define-const var1948 String (append/672562846 var2294 " sp_inv=")) ; Statement: $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sp_inv=") 
(declare-const var2294!1 String)
(assert (= var2294!1 (str.++ var2294 " sp_inv=")))
(define-const var738 var3377 (sp/1105056443 var711)) ; Statement: $r13 = r1.<jdk.nashorn.internal.runtime.GlobalConstants$Access: java.lang.invoke.SwitchPoint sp> 
(assert true)
(define-const var3434 Bool (hasBeenInvalidated/925586694 var738)) ; Statement: $z0 = virtualinvoke $r13.<java.lang.invoke.SwitchPoint: boolean hasBeenInvalidated()>() 
(assert true)
(define-const var2909 String (append/-388390247 var1948 var3434)) ; Statement: $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0) 
(declare-const var1948!1 String)
(assert (str.prefixof var1948 var1948!1))
(assert true)
(define-const var1326 String (append/-1166366385 var2909 93)) ; Statement: $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93) 
(declare-const var2909!1 String)
(assert (str.prefixof var2909 var2909!1))
(assert true)
(define-const var1570 String (toString/-2075883882 var1326)) ; Statement: $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>() 
 ; Statement: return $r17 
(check-sat)
(get-model)
(get-unsat-core)
; {String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), name/1105056443=([jdk.nashorn.internal.runtime.GlobalConstants$Access], java.lang.String), var1408_quote/-789117686=([java.lang.String], java.lang.String), var1751_id/-2071121520=([java.lang.Object], java.lang.String), cast-from-var780-to-var31=([jdk.nashorn.internal.runtime.GlobalConstants$Access], java.lang.Object), invalidations/1105056443=([jdk.nashorn.internal.runtime.GlobalConstants$Access], int), append/-1001720160=([java.lang.StringBuilder, int], java.lang.StringBuilder), append/-1166366385=([java.lang.StringBuilder, char], java.lang.StringBuilder), sp/1105056443=([jdk.nashorn.internal.runtime.GlobalConstants$Access], java.lang.invoke.SwitchPoint), hasBeenInvalidated/925586694=([java.lang.invoke.SwitchPoint], boolean), append/-388390247=([java.lang.StringBuilder, boolean], java.lang.StringBuilder), toString/-2075883882=([java.lang.StringBuilder], java.lang.String)}
; {var780=jdk.nashorn.internal.runtime.GlobalConstants$Access, var711=r1, var3363=$r0, var3910=$r4, var3945=$r2, var1408=jdk.nashorn.internal.runtime.logging.DebugLogger, var3836=$r3, var92=$r5, var3495=$r7, var1751=jdk.nashorn.internal.runtime.Debug, var31=java.lang.Object, var3693=$r6, var1092=$r8, var1674=$r9, var3019=$i0, var3225=$r10, var3511=$r11, var2294=$r12, var1948=$r14, var3377=java.lang.invoke.SwitchPoint, var738=$r13, var3434=$z0, var2909=$r15, var1326=$r16, var1570=$r17}
; {jdk.nashorn.internal.runtime.GlobalConstants$Access=var780, r1=var711, $r0=var3363, $r4=var3910, $r2=var3945, jdk.nashorn.internal.runtime.logging.DebugLogger=var1408, $r3=var3836, $r5=var92, $r7=var3495, jdk.nashorn.internal.runtime.Debug=var1751, java.lang.Object=var31, $r6=var3693, $r8=var1092, $r9=var1674, $i0=var3019, $r10=var3225, $r11=var3511, $r12=var2294, $r14=var1948, java.lang.invoke.SwitchPoint=var3377, $r13=var738, $z0=var3434, $r15=var2909, $r16=var1326, $r17=var1570}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(int)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(int)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,"<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 2,"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 2,"<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>": 1,"<java.lang.StringBuilder: java.lang.String toString()>": 1}
;stmts r1 := @this: jdk.nashorn.internal.runtime.GlobalConstants$Access;	$r0 = new java.lang.StringBuilder;	specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();	$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[");	$r2 = r1.<jdk.nashorn.internal.runtime.GlobalConstants$Access: java.lang.String name>;	$r3 = staticinvoke <jdk.nashorn.internal.runtime.logging.DebugLogger: java.lang.String quote(java.lang.String)>($r2);	$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3);	$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" <id=");	$r6 = staticinvoke <jdk.nashorn.internal.runtime.Debug: java.lang.String id(java.lang.Object)>(r1);	$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);	$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("> inv#=");	$i0 = r1.<jdk.nashorn.internal.runtime.GlobalConstants$Access: int invalidations>;	$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0);	$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);	$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(2);	$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" sp_inv=");	$r13 = r1.<jdk.nashorn.internal.runtime.GlobalConstants$Access: java.lang.invoke.SwitchPoint sp>;	$z0 = virtualinvoke $r13.<java.lang.invoke.SwitchPoint: boolean hasBeenInvalidated()>();	$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>($z0);	$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);	$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.String toString()>();	return $r17
;block_num 1