(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var3899 0)
(declare-sort var295 0)
(declare-sort var1746 0)
(declare-sort var3263 0)
(declare-sort var2092 0)
(declare-sort var3698 0)
(declare-sort var2487 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun var3698_tokenizeOperators/419415246 (var295) var2092)
(declare-fun var2092_get/-1216255739 (var2092 Int) var2487)
(declare-fun cast-from-var2487-to-String (var2487) String)
(declare-fun var295_getNameTokenCount/-469135163 (var295) Int)
(declare-fun hashCode/-467973558 (String) Int)
(declare-const null-var3899 var3899)
(declare-const null-var295 var295)
(declare-const null-var1746 var1746)
(declare-const null-var3263 var3263)
(declare-const var1060 var3899) ; Statement: r6 := @this: jdk.nashorn.internal.runtime.linker.JSObjectLinker 
(assert (not (= var1060 null-var3899)))
(declare-const var3418 var295) ; Statement: r0 := @parameter0: jdk.internal.dynalink.CallSiteDescriptor 
(assert (not (= var3418 null-var295)))
(declare-const var1188 var1746) ; Statement: r7 := @parameter1: jdk.internal.dynalink.linker.LinkRequest 
(assert (not (= var1188 null-var1746)))
(declare-const var2464 var3263) ; Statement: r8 := @parameter2: jdk.internal.dynalink.linker.LinkerServices 
(assert (not (= var2464 null-var3263)))
(define-const var2410 var2092 (var3698_tokenizeOperators/419415246 var3418)) ; Statement: $r1 = staticinvoke <jdk.internal.dynalink.support.CallSiteDescriptorFactory: java.util.List tokenizeOperators(jdk.internal.dynalink.CallSiteDescriptor)>(r0) 
(define-const var978 var2487 (var2092_get/-1216255739 var2410 0)) ; Statement: $r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0) 
(define-const var2573 String (cast-from-var2487-to-String var978)) ; Statement: r3 = (java.lang.String) $r2 
(define-const var2374 Int (var295_getNameTokenCount/-469135163 var3418)) ; Statement: i0 = interfaceinvoke r0.<jdk.internal.dynalink.CallSiteDescriptor: int getNameTokenCount()>() 
(define-const var3568 Int (- 1)) ; Statement: b2 = -1 
(assert true)
(define-const var448 Int (hashCode/-467973558 var2573)) ; Statement: $i1 = virtualinvoke r3.<java.lang.String: int hashCode()>() 
 ; Statement: lookupswitch($i1) {     case -75566075: goto $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("getElem");     case -75232295: goto $z5 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("getProp");     case 108960: goto $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("new");     case 3045982: goto $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("call");     case 618460119: goto $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("getMethod");     case 1984543505: goto $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("setElem");     case 1984877285: goto $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("setProp");     default: goto tableswitch(b2) {     case 0: goto if i0 <= 2 goto $r9 = r6.<jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.nashorn.internal.runtime.linker.NashornBeansLinker nashornBeansLinker>;     case 1: goto if i0 <= 2 goto $r9 = r6.<jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.nashorn.internal.runtime.linker.NashornBeansLinker nashornBeansLinker>;     case 2: goto if i0 <= 2 goto $r9 = r6.<jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.nashorn.internal.runtime.linker.NashornBeansLinker nashornBeansLinker>;     case 3: goto if i0 <= 2 goto $r13 = staticinvoke <jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.internal.dynalink.linker.GuardedInvocation findSetIndexMethod()>();     case 4: goto if i0 <= 2 goto $r13 = staticinvoke <jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.internal.dynalink.linker.GuardedInvocation findSetIndexMethod()>();     case 5: goto $r5 = staticinvoke <jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.internal.dynalink.linker.GuardedInvocation findCallMethod(jdk.internal.dynalink.CallSiteDescriptor)>(r0);     case 6: goto $r4 = staticinvoke <jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.internal.dynalink.linker.GuardedInvocation findNewMethod(jdk.internal.dynalink.CallSiteDescriptor)>(r0);     default: goto return null; }; } 
(assert (and (not (= var448 1984877285)) (and (not (= var448 1984543505)) (and (not (= var448 618460119)) (and (not (= var448 3045982)) (and (not (= var448 108960)) (and (not (= var448 (- 75232295))) (and (not (= var448 (- 75566075))) true)))))))) ; Intersect: Negate: Cond: $i1 == 1984877285   and Intersect: Negate: Cond: $i1 == 1984543505   and Intersect: Negate: Cond: $i1 == 618460119   and Intersect: Negate: Cond: $i1 == 3045982   and Intersect: Negate: Cond: $i1 == 108960   and Intersect: Negate: Cond: $i1 == -75232295   and Intersect: Negate: Cond: $i1 == -75566075   and Non Conditional       
 ; Statement: tableswitch(b2) {     case 0: goto if i0 <= 2 goto $r9 = r6.<jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.nashorn.internal.runtime.linker.NashornBeansLinker nashornBeansLinker>;     case 1: goto if i0 <= 2 goto $r9 = r6.<jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.nashorn.internal.runtime.linker.NashornBeansLinker nashornBeansLinker>;     case 2: goto if i0 <= 2 goto $r9 = r6.<jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.nashorn.internal.runtime.linker.NashornBeansLinker nashornBeansLinker>;     case 3: goto if i0 <= 2 goto $r13 = staticinvoke <jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.internal.dynalink.linker.GuardedInvocation findSetIndexMethod()>();     case 4: goto if i0 <= 2 goto $r13 = staticinvoke <jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.internal.dynalink.linker.GuardedInvocation findSetIndexMethod()>();     case 5: goto $r5 = staticinvoke <jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.internal.dynalink.linker.GuardedInvocation findCallMethod(jdk.internal.dynalink.CallSiteDescriptor)>(r0);     case 6: goto $r4 = staticinvoke <jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.internal.dynalink.linker.GuardedInvocation findNewMethod(jdk.internal.dynalink.CallSiteDescriptor)>(r0);     default: goto return null; } 
(assert (and (not (= var3568 6)) (and (not (= var3568 5)) (and (not (= var3568 4)) (and (not (= var3568 3)) (and (not (= var3568 2)) (and (not (= var3568 1)) (and (not (= var3568 0)) true)))))))) ; Intersect: Negate: Cond: b2 == 6   and Intersect: Negate: Cond: b2 == 5   and Intersect: Negate: Cond: b2 == 4   and Intersect: Negate: Cond: b2 == 3   and Intersect: Negate: Cond: b2 == 2   and Intersect: Negate: Cond: b2 == 1   and Intersect: Negate: Cond: b2 == 0   and Non Conditional       
 ; Statement: return null 
(check-sat)
(get-model)
(get-unsat-core)
; {var3698_tokenizeOperators/419415246=([jdk.internal.dynalink.CallSiteDescriptor], java.util.List), var2092_get/-1216255739=([java.util.List, int], java.lang.Object), cast-from-var2487-to-String=([java.lang.Object], java.lang.String), var295_getNameTokenCount/-469135163=([jdk.internal.dynalink.CallSiteDescriptor], int), hashCode/-467973558=([java.lang.String], int)}
; {var3899=jdk.nashorn.internal.runtime.linker.JSObjectLinker, var1060=r6, var295=jdk.internal.dynalink.CallSiteDescriptor, var3418=r0, var1746=jdk.internal.dynalink.linker.LinkRequest, var1188=r7, var3263=jdk.internal.dynalink.linker.LinkerServices, var2464=r8, var2092=java.util.List, var3698=jdk.internal.dynalink.support.CallSiteDescriptorFactory, var2410=$r1, var2487=java.lang.Object, var978=$r2, var2573=r3, var2374=i0, var3568=b2, var448=$i1}
; {jdk.nashorn.internal.runtime.linker.JSObjectLinker=var3899, r6=var1060, jdk.internal.dynalink.CallSiteDescriptor=var295, r0=var3418, jdk.internal.dynalink.linker.LinkRequest=var1746, r7=var1188, jdk.internal.dynalink.linker.LinkerServices=var3263, r8=var2464, java.util.List=var2092, jdk.internal.dynalink.support.CallSiteDescriptorFactory=var3698, $r1=var2410, java.lang.Object=var2487, $r2=var978, r3=var2573, i0=var2374, b2=var3568, $i1=var448}
;seq <java.lang.String: int hashCode()>
;cnt {"<java.lang.String: int hashCode()>": 1}
;stmts r6 := @this: jdk.nashorn.internal.runtime.linker.JSObjectLinker;	r0 := @parameter0: jdk.internal.dynalink.CallSiteDescriptor;	r7 := @parameter1: jdk.internal.dynalink.linker.LinkRequest;	r8 := @parameter2: jdk.internal.dynalink.linker.LinkerServices;	$r1 = staticinvoke <jdk.internal.dynalink.support.CallSiteDescriptorFactory: java.util.List tokenizeOperators(jdk.internal.dynalink.CallSiteDescriptor)>(r0);	$r2 = interfaceinvoke $r1.<java.util.List: java.lang.Object get(int)>(0);	r3 = (java.lang.String) $r2;	i0 = interfaceinvoke r0.<jdk.internal.dynalink.CallSiteDescriptor: int getNameTokenCount()>();	b2 = -1;	$i1 = virtualinvoke r3.<java.lang.String: int hashCode()>();	lookupswitch($i1) {     case -75566075: goto $z6 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("getElem");     case -75232295: goto $z5 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("getProp");     case 108960: goto $z4 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("new");     case 3045982: goto $z3 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("call");     case 618460119: goto $z2 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("getMethod");     case 1984543505: goto $z1 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("setElem");     case 1984877285: goto $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>("setProp");     default: goto tableswitch(b2) {     case 0: goto if i0 <= 2 goto $r9 = r6.<jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.nashorn.internal.runtime.linker.NashornBeansLinker nashornBeansLinker>;     case 1: goto if i0 <= 2 goto $r9 = r6.<jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.nashorn.internal.runtime.linker.NashornBeansLinker nashornBeansLinker>;     case 2: goto if i0 <= 2 goto $r9 = r6.<jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.nashorn.internal.runtime.linker.NashornBeansLinker nashornBeansLinker>;     case 3: goto if i0 <= 2 goto $r13 = staticinvoke <jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.internal.dynalink.linker.GuardedInvocation findSetIndexMethod()>();     case 4: goto if i0 <= 2 goto $r13 = staticinvoke <jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.internal.dynalink.linker.GuardedInvocation findSetIndexMethod()>();     case 5: goto $r5 = staticinvoke <jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.internal.dynalink.linker.GuardedInvocation findCallMethod(jdk.internal.dynalink.CallSiteDescriptor)>(r0);     case 6: goto $r4 = staticinvoke <jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.internal.dynalink.linker.GuardedInvocation findNewMethod(jdk.internal.dynalink.CallSiteDescriptor)>(r0);     default: goto return null; }; };	tableswitch(b2) {     case 0: goto if i0 <= 2 goto $r9 = r6.<jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.nashorn.internal.runtime.linker.NashornBeansLinker nashornBeansLinker>;     case 1: goto if i0 <= 2 goto $r9 = r6.<jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.nashorn.internal.runtime.linker.NashornBeansLinker nashornBeansLinker>;     case 2: goto if i0 <= 2 goto $r9 = r6.<jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.nashorn.internal.runtime.linker.NashornBeansLinker nashornBeansLinker>;     case 3: goto if i0 <= 2 goto $r13 = staticinvoke <jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.internal.dynalink.linker.GuardedInvocation findSetIndexMethod()>();     case 4: goto if i0 <= 2 goto $r13 = staticinvoke <jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.internal.dynalink.linker.GuardedInvocation findSetIndexMethod()>();     case 5: goto $r5 = staticinvoke <jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.internal.dynalink.linker.GuardedInvocation findCallMethod(jdk.internal.dynalink.CallSiteDescriptor)>(r0);     case 6: goto $r4 = staticinvoke <jdk.nashorn.internal.runtime.linker.JSObjectLinker: jdk.internal.dynalink.linker.GuardedInvocation findNewMethod(jdk.internal.dynalink.CallSiteDescriptor)>(r0);     default: goto return null; };	return null
;block_num 3