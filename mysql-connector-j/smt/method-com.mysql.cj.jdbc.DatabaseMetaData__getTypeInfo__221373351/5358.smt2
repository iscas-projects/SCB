(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var3201 0)
(declare-sort var1497 0)
(declare-sort var76 0)
(declare-sort var320 0)
(declare-sort var3468 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun var76_getByName/-358960852 (String) var76)
(declare-fun arr-__Array__Int__Int__-init () (Array Int (Array Int Int)))
(declare-fun s2b/-450202684 (var3201 String) (Array Int Int))
(declare-fun getJdbcType/389098195 (var76) Int)
(declare-fun Int_toString/1350422511 (Int) String)
(declare-fun getBytes/1068683673 (String) (Array Int Int))
(declare-fun getPrecision/-479410283 (var76) Int)
(declare-fun longValue/1313863450 (Int) Int)
(define-fun cast-from-Int-to-Int ((arg Int)) Int arg)
(declare-fun ordinal/-291641772 (var3468) Int)
(declare-fun cast-from-var76-to-var3468 (var76) var3468)
(declare-fun getCreateParams/2067265168 (var76) String)
(declare-fun isAllowed/-888104558 (var76 Int) Bool)
(declare-fun getName/1307715079 (var76) String)
(declare-const null-var3201 var3201)
(declare-const null-String String)
(declare-const null-__Array__Int____Array__Int__Int____ (Array Int (Array Int Int)))
(declare-const var76-YEAR var76)
(declare-const var320-$SwitchMap$com$mysql$cj$MysqlType (Array Int Int))
(declare-const var3932 var3201) ; Statement: r3 := @this: com.mysql.cj.jdbc.DatabaseMetaData 
(assert (not (= var3932 null-var3201)))
(declare-const var3925 String) ; Statement: r0 := @parameter0: java.lang.String 
(assert (not (= var3925 null-String)))
(define-const var594 var76 (var76_getByName/-358960852 var3925)) ; Statement: r1 = staticinvoke <com.mysql.cj.MysqlType: com.mysql.cj.MysqlType getByName(java.lang.String)>(r0) 
(define-const var1222 (Array Int (Array Int Int)) arr-__Array__Int__Int__-init) ; Statement: r2 = newarray (byte[])[18] 
(assert true)
(define-const var2794 (Array Int Int) (s2b/-450202684 var3932 var3925)) ; Statement: $r4 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>(r0) 
(declare-const var1222!1 (Array Int (Array Int Int)))
(assert (not (= var1222!1 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!1 0) var2794)) ; Statement: r2[0] = $r4 
(define-const var186 var76 var76-YEAR) ; Statement: $r5 = <com.mysql.cj.MysqlType: com.mysql.cj.MysqlType YEAR> 
 ; Statement: if r1 != $r5 goto $i4 = virtualinvoke r1.<com.mysql.cj.MysqlType: int getJdbcType()>() 
(assert (not (= var594 var186))) ; Cond: r1 != $r5 
(assert true)
(define-const var3068 Int (getJdbcType/389098195 var594)) ; Statement: $i4 = virtualinvoke r1.<com.mysql.cj.MysqlType: int getJdbcType()>() 
(assert true) ; Non Conditional
(define-const var3081 String (Int_toString/1350422511 var3068)) ; Statement: $r33 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4) 
(assert true)
(define-const var3923 (Array Int Int) (getBytes/1068683673 var3081)) ; Statement: $r34 = virtualinvoke $r33.<java.lang.String: byte[] getBytes()>() 
(declare-const var1222!2 (Array Int (Array Int Int)))
(assert (not (= var1222!2 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!2 1) var3923)) ; Statement: r2[1] = $r34 
(assert true)
(define-const var8 Int (getPrecision/-479410283 var594)) ; Statement: $r35 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.Long getPrecision()>() 
(assert true)
(define-const var687 Int (longValue/1313863450 var8)) ; Statement: $l5 = virtualinvoke $r35.<java.lang.Long: long longValue()>() 
(define-const var2772 Int (ite (> var687 2147483647) 1 (ite (< var687 2147483647) (- 1) 0))) ; Statement: $b6 = $l5 cmp 2147483647L 
(define-const var2733 Int (cast-from-Int-to-Int var2772)) ; Statement: $i10 = (int) $b6 
 ; Statement: if $i10 <= 0 goto $r6 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.Long getPrecision()>() 
(assert (not (<= var2733 0))) ; Negate: Cond: $i10 <= 0  
(define-const var745 Int 2147483647) ; Statement: $i7 = 2147483647 
 ; Statement: goto [?= $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7)] 
(assert true) ; Non Conditional
(define-const var1229 String (Int_toString/1350422511 var745)) ; Statement: $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7) 
(assert true)
(define-const var3630 (Array Int Int) (getBytes/1068683673 var1229)) ; Statement: $r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>() 
(declare-const var1222!3 (Array Int (Array Int Int)))
(assert (not (= var1222!3 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!3 2) var3630)) ; Statement: r2[2] = $r8 
(define-const var2970 (Array Int Int) var320-$SwitchMap$com$mysql$cj$MysqlType) ; Statement: $r9 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType> 
(assert true)
(define-const var2536 Int (ordinal/-291641772 (cast-from-var76-to-var3468 var594))) ; Statement: $i0 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>() 
(define-const var1580 Int (select var2970 var2536)) ; Statement: $i1 = $r9[$i0] 
 ; Statement: tableswitch($i1) {     case 5: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 6: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 7: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 8: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 9: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 10: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 11: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 12: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 13: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 14: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 15: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 16: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 17: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 18: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 19: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 20: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 21: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 22: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 23: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 24: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 25: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 26: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 27: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 28: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 29: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 30: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 31: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 32: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 33: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 34: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     default: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>(""); } 
(assert (and (not (= var1580 6)) (and (not (= var1580 5)) true))) ; Intersect: Negate: Cond: $i1 == 6   and Intersect: Negate: Cond: $i1 == 5   and Non Conditional  
(assert true)
(define-const var942 (Array Int Int) (s2b/-450202684 var3932 "")) ; Statement: $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("") 
(declare-const var1222!4 (Array Int (Array Int Int)))
(assert (not (= var1222!4 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!4 3) var942)) ; Statement: r2[3] = $r31 
(assert true)
(define-const var759 (Array Int Int) (s2b/-450202684 var3932 "")) ; Statement: $r32 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("") 
(declare-const var1222!5 (Array Int (Array Int Int)))
(assert (not (= var1222!5 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!5 4) var759)) ; Statement: r2[4] = $r32 
(assert true) ; Non Conditional
(assert true)
(define-const var789 String (getCreateParams/2067265168 var594)) ; Statement: $r12 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.String getCreateParams()>() 
(assert true)
(define-const var675 (Array Int Int) (s2b/-450202684 var3932 var789)) ; Statement: $r13 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r12) 
(declare-const var1222!6 (Array Int (Array Int Int)))
(assert (not (= var1222!6 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!6 5) var675)) ; Statement: r2[5] = $r13 
(define-const var2211 String (Int_toString/1350422511 1)) ; Statement: $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1) 
(assert true)
(define-const var2042 (Array Int Int) (getBytes/1068683673 var2211)) ; Statement: $r15 = virtualinvoke $r14.<java.lang.String: byte[] getBytes()>() 
(declare-const var1222!7 (Array Int (Array Int Int)))
(assert (not (= var1222!7 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!7 6) var2042)) ; Statement: r2[6] = $r15 
(assert true)
(define-const var2872 (Array Int Int) (s2b/-450202684 var3932 "true")) ; Statement: $r16 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true") 
(declare-const var1222!8 (Array Int (Array Int Int)))
(assert (not (= var1222!8 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!8 7) var2872)) ; Statement: r2[7] = $r16 
(define-const var3208 String (Int_toString/1350422511 3)) ; Statement: $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(3) 
(assert true)
(define-const var1158 (Array Int Int) (getBytes/1068683673 var3208)) ; Statement: $r18 = virtualinvoke $r17.<java.lang.String: byte[] getBytes()>() 
(declare-const var1222!9 (Array Int (Array Int Int)))
(assert (not (= var1222!9 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!9 8) var1158)) ; Statement: r2[8] = $r18 
(assert true)
(define-const var2050 Bool (isAllowed/-888104558 var594 32)) ; Statement: $z0 = virtualinvoke r1.<com.mysql.cj.MysqlType: boolean isAllowed(int)>(32) 
 ; Statement: if $z0 == 0 goto $r36 = "false" 
(assert (not (= (ite var2050 1 0) 0))) ; Negate: Cond: $z0 == 0  
(define-const var1666 String "true") ; Statement: $r36 = "true" 
 ; Statement: goto [?= $r19 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r36)] 
(assert true) ; Non Conditional
(assert true)
(define-const var3909 (Array Int Int) (s2b/-450202684 var3932 var1666)) ; Statement: $r19 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r36) 
(declare-const var1222!10 (Array Int (Array Int Int)))
(assert (not (= var1222!10 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!10 9) var3909)) ; Statement: r2[9] = $r19 
(assert true)
(define-const var1241 (Array Int Int) (s2b/-450202684 var3932 "false")) ; Statement: $r20 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false") 
(declare-const var1222!11 (Array Int (Array Int Int)))
(assert (not (= var1222!11 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!11 10) var1241)) ; Statement: r2[10] = $r20 
(define-const var2030 (Array Int Int) var320-$SwitchMap$com$mysql$cj$MysqlType) ; Statement: $r21 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType> 
(assert true)
(define-const var3859 Int (ordinal/-291641772 (cast-from-var76-to-var3468 var594))) ; Statement: $i2 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>() 
(define-const var3704 Int (select var2030 var3859)) ; Statement: $i3 = $r21[$i2] 
 ; Statement: tableswitch($i3) {     case 3: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 4: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 5: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 6: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 7: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 8: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 9: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 10: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 11: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 12: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 13: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 14: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 15: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 16: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 17: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 18: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 19: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 20: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 21: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 22: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 23: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 24: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 25: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 26: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 27: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 28: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 29: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 30: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 31: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 32: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 33: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 34: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 35: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 36: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 37: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 38: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 39: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 40: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 41: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 42: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     default: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false"); } 
(assert (and (not (= var3704 4)) (and (not (= var3704 3)) true))) ; Intersect: Negate: Cond: $i3 == 4   and Intersect: Negate: Cond: $i3 == 3   and Non Conditional  
(assert true)
(define-const var1955 (Array Int Int) (s2b/-450202684 var3932 "false")) ; Statement: $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false") 
(declare-const var1222!12 (Array Int (Array Int Int)))
(assert (not (= var1222!12 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!12 11) var1955)) ; Statement: r2[11] = $r30 
(assert true) ; Non Conditional
(assert true)
(define-const var3965 String (getName/1307715079 var594)) ; Statement: $r38 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.String getName()>() 
(assert true)
(define-const var1638 (Array Int Int) (s2b/-450202684 var3932 var3965)) ; Statement: $r39 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r38) 
(declare-const var1222!13 (Array Int (Array Int Int)))
(assert (not (= var1222!13 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!13 12) var1638)) ; Statement: r2[12] = $r39 
(define-const var1274 (Array Int Int) var320-$SwitchMap$com$mysql$cj$MysqlType) ; Statement: $r40 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType> 
(assert true)
(define-const var2915 Int (ordinal/-291641772 (cast-from-var76-to-var3468 var594))) ; Statement: $i8 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>() 
(define-const var3058 Int (select var1274 var2915)) ; Statement: $i9 = $r40[$i8] 
 ; Statement: tableswitch($i9) {     case 1: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 2: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 3: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 4: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 5: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");     case 6: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");     case 7: goto $r23 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-38");     case 8: goto $r23 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-38");     default: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0"); } 
(assert (and (= var3058 7) (and (not (= var3058 6)) (and (not (= var3058 5)) (and (not (= var3058 4)) (and (not (= var3058 3)) (and (not (= var3058 2)) (and (not (= var3058 1)) true)))))))) ; Intersect: Cond: $i9 == 7  and Intersect: Negate: Cond: $i9 == 6   and Intersect: Negate: Cond: $i9 == 5   and Intersect: Negate: Cond: $i9 == 4   and Intersect: Negate: Cond: $i9 == 3   and Intersect: Negate: Cond: $i9 == 2   and Intersect: Negate: Cond: $i9 == 1   and Non Conditional       
(assert true)
(define-const var2158 (Array Int Int) (s2b/-450202684 var3932 "-38")) ; Statement: $r23 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-38") 
(declare-const var1222!14 (Array Int (Array Int Int)))
(assert (not (= var1222!14 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!14 13) var2158)) ; Statement: r2[13] = $r23 
(assert true)
(define-const var3567 (Array Int Int) (s2b/-450202684 var3932 "38")) ; Statement: $r24 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("38") 
(declare-const var1222!15 (Array Int (Array Int Int)))
(assert (not (= var1222!15 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!15 14) var3567)) ; Statement: r2[14] = $r24 
 ; Statement: goto [?= $r41 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0")] 
(assert true) ; Non Conditional
(assert true)
(define-const var962 (Array Int Int) (s2b/-450202684 var3932 "0")) ; Statement: $r41 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0") 
(declare-const var1222!16 (Array Int (Array Int Int)))
(assert (not (= var1222!16 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!16 15) var962)) ; Statement: r2[15] = $r41 
(assert true)
(define-const var1144 (Array Int Int) (s2b/-450202684 var3932 "0")) ; Statement: $r42 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0") 
(declare-const var1222!17 (Array Int (Array Int Int)))
(assert (not (= var1222!17 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!17 16) var1144)) ; Statement: r2[16] = $r42 
(assert true)
(define-const var866 (Array Int Int) (s2b/-450202684 var3932 "10")) ; Statement: $r43 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("10") 
(declare-const var1222!18 (Array Int (Array Int Int)))
(assert (not (= var1222!18 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var1222!18 17) var866)) ; Statement: r2[17] = $r43 
 ; Statement: return r2 
(check-sat)
(get-model)
(get-unsat-core)
; {var76_getByName/-358960852=([java.lang.String], com.mysql.cj.MysqlType), arr-__Array__Int__Int__-init=([], byte[][]), s2b/-450202684=([com.mysql.cj.jdbc.DatabaseMetaData, java.lang.String], byte[]), getJdbcType/389098195=([com.mysql.cj.MysqlType], int), Int_toString/1350422511=([int], java.lang.String), getBytes/1068683673=([java.lang.String], byte[]), getPrecision/-479410283=([com.mysql.cj.MysqlType], java.lang.Long), longValue/1313863450=([java.lang.Long], long), cast-from-Int-to-Int=([byte], int), ordinal/-291641772=([java.lang.Enum], int), cast-from-var76-to-var3468=([com.mysql.cj.MysqlType], java.lang.Enum), getCreateParams/2067265168=([com.mysql.cj.MysqlType], java.lang.String), isAllowed/-888104558=([com.mysql.cj.MysqlType, int], boolean), getName/1307715079=([com.mysql.cj.MysqlType], java.lang.String)}
; {var3201=com.mysql.cj.jdbc.DatabaseMetaData, var3932=r3, var3925=r0, var1497=null_type, var76=com.mysql.cj.MysqlType, var594=r1, var1222=r2, var2794=$r4, var186=$r5, var3068=$i4, var3081=$r33, var3923=$r34, var8=$r35, var687=$l5, var2772=$b6, var2733=$i10, var745=$i7, var1229=$r7, var3630=$r8, var320=com.mysql.cj.jdbc.DatabaseMetaData$11, var2970=$r9, var3468=java.lang.Enum, var2536=$i0, var1580=$i1, var942=$r31, var759=$r32, var789=$r12, var675=$r13, var2211=$r14, var2042=$r15, var2872=$r16, var3208=$r17, var1158=$r18, var2050=$z0, var1666=$r36, var3909=$r19, var1241=$r20, var2030=$r21, var3859=$i2, var3704=$i3, var1955=$r30, var3965=$r38, var1638=$r39, var1274=$r40, var2915=$i8, var3058=$i9, var2158=$r23, var3567=$r24, var962=$r41, var1144=$r42, var866=$r43}
; {com.mysql.cj.jdbc.DatabaseMetaData=var3201, r3=var3932, r0=var3925, null_type=var1497, com.mysql.cj.MysqlType=var76, r1=var594, r2=var1222, $r4=var2794, $r5=var186, $i4=var3068, $r33=var3081, $r34=var3923, $r35=var8, $l5=var687, $b6=var2772, $i10=var2733, $i7=var745, $r7=var1229, $r8=var3630, com.mysql.cj.jdbc.DatabaseMetaData$11=var320, $r9=var2970, java.lang.Enum=var3468, $i0=var2536, $i1=var1580, $r31=var942, $r32=var759, $r12=var789, $r13=var675, $r14=var2211, $r15=var2042, $r16=var2872, $r17=var3208, $r18=var1158, $z0=var2050, $r36=var1666, $r19=var3909, $r20=var1241, $r21=var2030, $i2=var3859, $i3=var3704, $r30=var1955, $r38=var3965, $r39=var1638, $r40=var1274, $i8=var2915, $i9=var3058, $r23=var2158, $r24=var3567, $r41=var962, $r42=var1144, $r43=var866}
;seq <java.lang.Integer: java.lang.String toString(int)>;	<java.lang.String: byte[] getBytes()>;	<java.lang.Integer: java.lang.String toString(int)>;	<java.lang.String: byte[] getBytes()>;	<java.lang.Integer: java.lang.String toString(int)>;	<java.lang.String: byte[] getBytes()>;	<java.lang.Integer: java.lang.String toString(int)>;	<java.lang.String: byte[] getBytes()>
;cnt {"<java.lang.String: byte[] getBytes()>": 4}
;stmts r3 := @this: com.mysql.cj.jdbc.DatabaseMetaData;	r0 := @parameter0: java.lang.String;	r1 = staticinvoke <com.mysql.cj.MysqlType: com.mysql.cj.MysqlType getByName(java.lang.String)>(r0);	r2 = newarray (byte[])[18];	$r4 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>(r0);	r2[0] = $r4;	$r5 = <com.mysql.cj.MysqlType: com.mysql.cj.MysqlType YEAR>;	if r1 != $r5 goto $i4 = virtualinvoke r1.<com.mysql.cj.MysqlType: int getJdbcType()>();	$i4 = virtualinvoke r1.<com.mysql.cj.MysqlType: int getJdbcType()>();	$r33 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);	$r34 = virtualinvoke $r33.<java.lang.String: byte[] getBytes()>();	r2[1] = $r34;	$r35 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.Long getPrecision()>();	$l5 = virtualinvoke $r35.<java.lang.Long: long longValue()>();	$b6 = $l5 cmp 2147483647L;	$i10 = (int) $b6;	if $i10 <= 0 goto $r6 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.Long getPrecision()>();	$i7 = 2147483647;	goto [?= $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7)];	$r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);	$r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();	r2[2] = $r8;	$r9 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType>;	$i0 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>();	$i1 = $r9[$i0];	tableswitch($i1) {     case 5: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 6: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 7: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 8: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 9: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 10: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 11: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 12: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 13: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 14: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 15: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 16: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 17: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 18: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 19: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 20: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 21: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 22: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 23: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 24: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 25: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 26: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 27: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 28: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 29: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 30: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 31: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 32: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 33: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 34: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     default: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>(""); };	$r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");	r2[3] = $r31;	$r32 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");	r2[4] = $r32;	$r12 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.String getCreateParams()>();	$r13 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r12);	r2[5] = $r13;	$r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1);	$r15 = virtualinvoke $r14.<java.lang.String: byte[] getBytes()>();	r2[6] = $r15;	$r16 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");	r2[7] = $r16;	$r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(3);	$r18 = virtualinvoke $r17.<java.lang.String: byte[] getBytes()>();	r2[8] = $r18;	$z0 = virtualinvoke r1.<com.mysql.cj.MysqlType: boolean isAllowed(int)>(32);	if $z0 == 0 goto $r36 = "false";	$r36 = "true";	goto [?= $r19 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r36)];	$r19 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r36);	r2[9] = $r19;	$r20 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");	r2[10] = $r20;	$r21 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType>;	$i2 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>();	$i3 = $r21[$i2];	tableswitch($i3) {     case 3: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 4: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 5: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 6: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 7: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 8: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 9: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 10: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 11: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 12: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 13: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 14: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 15: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 16: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 17: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 18: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 19: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 20: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 21: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 22: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 23: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 24: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 25: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 26: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 27: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 28: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 29: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 30: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 31: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 32: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 33: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 34: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 35: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 36: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 37: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 38: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 39: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 40: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 41: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 42: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     default: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false"); };	$r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");	r2[11] = $r30;	$r38 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.String getName()>();	$r39 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r38);	r2[12] = $r39;	$r40 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType>;	$i8 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>();	$i9 = $r40[$i8];	tableswitch($i9) {     case 1: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 2: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 3: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 4: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 5: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");     case 6: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");     case 7: goto $r23 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-38");     case 8: goto $r23 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-38");     default: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0"); };	$r23 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-38");	r2[13] = $r23;	$r24 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("38");	r2[14] = $r24;	goto [?= $r41 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0")];	$r41 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");	r2[15] = $r41;	$r42 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");	r2[16] = $r42;	$r43 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("10");	r2[17] = $r43;	return r2
;block_num 13