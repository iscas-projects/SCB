(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var2643 0)
(declare-sort var1744 0)
(declare-sort var1529 0)
(declare-sort var2576 0)
(declare-sort var1075 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun var1529_getByName/-358960852 (String) var1529)
(declare-fun arr-__Array__Int__Int__-init () (Array Int (Array Int Int)))
(declare-fun s2b/-450202684 (var2643 String) (Array Int Int))
(declare-fun getJdbcType/389098195 (var1529) Int)
(declare-fun Int_toString/1350422511 (Int) String)
(declare-fun getBytes/1068683673 (String) (Array Int Int))
(declare-fun getPrecision/-479410283 (var1529) Int)
(declare-fun longValue/1313863450 (Int) Int)
(define-fun cast-from-Int-to-Int ((arg Int)) Int arg)
(declare-fun intValue/-1919356104 (Int) Int)
(declare-fun ordinal/-291641772 (var1075) Int)
(declare-fun cast-from-var1529-to-var1075 (var1529) var1075)
(declare-fun getCreateParams/2067265168 (var1529) String)
(declare-fun isAllowed/-888104558 (var1529 Int) Bool)
(declare-fun getName/1307715079 (var1529) String)
(declare-const null-var2643 var2643)
(declare-const null-String String)
(declare-const null-__Array__Int____Array__Int__Int____ (Array Int (Array Int Int)))
(declare-const var1529-YEAR var1529)
(declare-const var2576-$SwitchMap$com$mysql$cj$MysqlType (Array Int Int))
(declare-const var1810 var2643) ; Statement: r3 := @this: com.mysql.cj.jdbc.DatabaseMetaData 
(assert (not (= var1810 null-var2643)))
(declare-const var3 String) ; Statement: r0 := @parameter0: java.lang.String 
(assert (not (= var3 null-String)))
(define-const var3620 var1529 (var1529_getByName/-358960852 var3)) ; Statement: r1 = staticinvoke <com.mysql.cj.MysqlType: com.mysql.cj.MysqlType getByName(java.lang.String)>(r0) 
(define-const var384 (Array Int (Array Int Int)) arr-__Array__Int__Int__-init) ; Statement: r2 = newarray (byte[])[18] 
(assert true)
(define-const var1854 (Array Int Int) (s2b/-450202684 var1810 var3)) ; Statement: $r4 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>(r0) 
(declare-const var384!1 (Array Int (Array Int Int)))
(assert (not (= var384!1 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!1 0) var1854)) ; Statement: r2[0] = $r4 
(define-const var3173 var1529 var1529-YEAR) ; Statement: $r5 = <com.mysql.cj.MysqlType: com.mysql.cj.MysqlType YEAR> 
 ; Statement: if r1 != $r5 goto $i4 = virtualinvoke r1.<com.mysql.cj.MysqlType: int getJdbcType()>() 
(assert (not (= var3620 var3173))) ; Cond: r1 != $r5 
(assert true)
(define-const var1427 Int (getJdbcType/389098195 var3620)) ; Statement: $i4 = virtualinvoke r1.<com.mysql.cj.MysqlType: int getJdbcType()>() 
(assert true) ; Non Conditional
(define-const var2198 String (Int_toString/1350422511 var1427)) ; Statement: $r33 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4) 
(assert true)
(define-const var1437 (Array Int Int) (getBytes/1068683673 var2198)) ; Statement: $r34 = virtualinvoke $r33.<java.lang.String: byte[] getBytes()>() 
(declare-const var384!2 (Array Int (Array Int Int)))
(assert (not (= var384!2 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!2 1) var1437)) ; Statement: r2[1] = $r34 
(assert true)
(define-const var3337 Int (getPrecision/-479410283 var3620)) ; Statement: $r35 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.Long getPrecision()>() 
(assert true)
(define-const var979 Int (longValue/1313863450 var3337)) ; Statement: $l5 = virtualinvoke $r35.<java.lang.Long: long longValue()>() 
(define-const var966 Int (ite (> var979 2147483647) 1 (ite (< var979 2147483647) (- 1) 0))) ; Statement: $b6 = $l5 cmp 2147483647L 
(define-const var208 Int (cast-from-Int-to-Int var966)) ; Statement: $i10 = (int) $b6 
 ; Statement: if $i10 <= 0 goto $r6 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.Long getPrecision()>() 
(assert (<= var208 0)) ; Cond: $i10 <= 0 
(assert true)
(define-const var877 Int (getPrecision/-479410283 var3620)) ; Statement: $r6 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.Long getPrecision()>() 
(assert true)
(define-const var533 Int (intValue/-1919356104 var877)) ; Statement: $i7 = virtualinvoke $r6.<java.lang.Long: int intValue()>() 
(assert true) ; Non Conditional
(define-const var707 String (Int_toString/1350422511 var533)) ; Statement: $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7) 
(assert true)
(define-const var1100 (Array Int Int) (getBytes/1068683673 var707)) ; Statement: $r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>() 
(declare-const var384!3 (Array Int (Array Int Int)))
(assert (not (= var384!3 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!3 2) var1100)) ; Statement: r2[2] = $r8 
(define-const var214 (Array Int Int) var2576-$SwitchMap$com$mysql$cj$MysqlType) ; Statement: $r9 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType> 
(assert true)
(define-const var3012 Int (ordinal/-291641772 (cast-from-var1529-to-var1075 var3620))) ; Statement: $i0 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>() 
(define-const var1247 Int (select var214 var3012)) ; Statement: $i1 = $r9[$i0] 
 ; Statement: tableswitch($i1) {     case 5: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 6: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 7: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 8: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 9: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 10: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 11: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 12: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 13: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 14: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 15: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 16: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 17: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 18: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 19: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 20: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 21: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 22: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 23: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 24: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 25: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 26: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 27: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 28: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 29: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 30: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 31: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 32: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 33: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 34: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     default: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>(""); } 
(assert (and (not (= var1247 6)) (and (not (= var1247 5)) true))) ; Intersect: Negate: Cond: $i1 == 6   and Intersect: Negate: Cond: $i1 == 5   and Non Conditional  
(assert true)
(define-const var1842 (Array Int Int) (s2b/-450202684 var1810 "")) ; Statement: $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("") 
(declare-const var384!4 (Array Int (Array Int Int)))
(assert (not (= var384!4 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!4 3) var1842)) ; Statement: r2[3] = $r31 
(assert true)
(define-const var2434 (Array Int Int) (s2b/-450202684 var1810 "")) ; Statement: $r32 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("") 
(declare-const var384!5 (Array Int (Array Int Int)))
(assert (not (= var384!5 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!5 4) var2434)) ; Statement: r2[4] = $r32 
(assert true) ; Non Conditional
(assert true)
(define-const var1445 String (getCreateParams/2067265168 var3620)) ; Statement: $r12 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.String getCreateParams()>() 
(assert true)
(define-const var785 (Array Int Int) (s2b/-450202684 var1810 var1445)) ; Statement: $r13 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r12) 
(declare-const var384!6 (Array Int (Array Int Int)))
(assert (not (= var384!6 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!6 5) var785)) ; Statement: r2[5] = $r13 
(define-const var1581 String (Int_toString/1350422511 1)) ; Statement: $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1) 
(assert true)
(define-const var2654 (Array Int Int) (getBytes/1068683673 var1581)) ; Statement: $r15 = virtualinvoke $r14.<java.lang.String: byte[] getBytes()>() 
(declare-const var384!7 (Array Int (Array Int Int)))
(assert (not (= var384!7 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!7 6) var2654)) ; Statement: r2[6] = $r15 
(assert true)
(define-const var2405 (Array Int Int) (s2b/-450202684 var1810 "true")) ; Statement: $r16 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true") 
(declare-const var384!8 (Array Int (Array Int Int)))
(assert (not (= var384!8 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!8 7) var2405)) ; Statement: r2[7] = $r16 
(define-const var3101 String (Int_toString/1350422511 3)) ; Statement: $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(3) 
(assert true)
(define-const var93 (Array Int Int) (getBytes/1068683673 var3101)) ; Statement: $r18 = virtualinvoke $r17.<java.lang.String: byte[] getBytes()>() 
(declare-const var384!9 (Array Int (Array Int Int)))
(assert (not (= var384!9 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!9 8) var93)) ; Statement: r2[8] = $r18 
(assert true)
(define-const var3215 Bool (isAllowed/-888104558 var3620 32)) ; Statement: $z0 = virtualinvoke r1.<com.mysql.cj.MysqlType: boolean isAllowed(int)>(32) 
 ; Statement: if $z0 == 0 goto $r36 = "false" 
(assert (not (= (ite var3215 1 0) 0))) ; Negate: Cond: $z0 == 0  
(define-const var2393 String "true") ; Statement: $r36 = "true" 
 ; Statement: goto [?= $r19 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r36)] 
(assert true) ; Non Conditional
(assert true)
(define-const var3200 (Array Int Int) (s2b/-450202684 var1810 var2393)) ; Statement: $r19 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r36) 
(declare-const var384!10 (Array Int (Array Int Int)))
(assert (not (= var384!10 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!10 9) var3200)) ; Statement: r2[9] = $r19 
(assert true)
(define-const var444 (Array Int Int) (s2b/-450202684 var1810 "false")) ; Statement: $r20 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false") 
(declare-const var384!11 (Array Int (Array Int Int)))
(assert (not (= var384!11 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!11 10) var444)) ; Statement: r2[10] = $r20 
(define-const var2097 (Array Int Int) var2576-$SwitchMap$com$mysql$cj$MysqlType) ; Statement: $r21 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType> 
(assert true)
(define-const var3876 Int (ordinal/-291641772 (cast-from-var1529-to-var1075 var3620))) ; Statement: $i2 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>() 
(define-const var136 Int (select var2097 var3876)) ; Statement: $i3 = $r21[$i2] 
 ; Statement: tableswitch($i3) {     case 3: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 4: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 5: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 6: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 7: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 8: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 9: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 10: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 11: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 12: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 13: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 14: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 15: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 16: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 17: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 18: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 19: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 20: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 21: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 22: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 23: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 24: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 25: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 26: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 27: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 28: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 29: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 30: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 31: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 32: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 33: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 34: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 35: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 36: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 37: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 38: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 39: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 40: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 41: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 42: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     default: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false"); } 
(assert (and (not (= var136 4)) (and (not (= var136 3)) true))) ; Intersect: Negate: Cond: $i3 == 4   and Intersect: Negate: Cond: $i3 == 3   and Non Conditional  
(assert true)
(define-const var586 (Array Int Int) (s2b/-450202684 var1810 "false")) ; Statement: $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false") 
(declare-const var384!12 (Array Int (Array Int Int)))
(assert (not (= var384!12 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!12 11) var586)) ; Statement: r2[11] = $r30 
(assert true) ; Non Conditional
(assert true)
(define-const var2975 String (getName/1307715079 var3620)) ; Statement: $r38 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.String getName()>() 
(assert true)
(define-const var1318 (Array Int Int) (s2b/-450202684 var1810 var2975)) ; Statement: $r39 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r38) 
(declare-const var384!13 (Array Int (Array Int Int)))
(assert (not (= var384!13 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!13 12) var1318)) ; Statement: r2[12] = $r39 
(define-const var3188 (Array Int Int) var2576-$SwitchMap$com$mysql$cj$MysqlType) ; Statement: $r40 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType> 
(assert true)
(define-const var3011 Int (ordinal/-291641772 (cast-from-var1529-to-var1075 var3620))) ; Statement: $i8 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>() 
(define-const var2417 Int (select var3188 var3011)) ; Statement: $i9 = $r40[$i8] 
 ; Statement: tableswitch($i9) {     case 1: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 2: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 3: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 4: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 5: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");     case 6: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");     case 7: goto $r23 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-38");     case 8: goto $r23 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-38");     default: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0"); } 
(assert (and (= var2417 7) (and (not (= var2417 6)) (and (not (= var2417 5)) (and (not (= var2417 4)) (and (not (= var2417 3)) (and (not (= var2417 2)) (and (not (= var2417 1)) true)))))))) ; Intersect: Cond: $i9 == 7  and Intersect: Negate: Cond: $i9 == 6   and Intersect: Negate: Cond: $i9 == 5   and Intersect: Negate: Cond: $i9 == 4   and Intersect: Negate: Cond: $i9 == 3   and Intersect: Negate: Cond: $i9 == 2   and Intersect: Negate: Cond: $i9 == 1   and Non Conditional       
(assert true)
(define-const var3666 (Array Int Int) (s2b/-450202684 var1810 "-38")) ; Statement: $r23 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-38") 
(declare-const var384!14 (Array Int (Array Int Int)))
(assert (not (= var384!14 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!14 13) var3666)) ; Statement: r2[13] = $r23 
(assert true)
(define-const var2305 (Array Int Int) (s2b/-450202684 var1810 "38")) ; Statement: $r24 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("38") 
(declare-const var384!15 (Array Int (Array Int Int)))
(assert (not (= var384!15 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!15 14) var2305)) ; Statement: r2[14] = $r24 
 ; Statement: goto [?= $r41 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0")] 
(assert true) ; Non Conditional
(assert true)
(define-const var3079 (Array Int Int) (s2b/-450202684 var1810 "0")) ; Statement: $r41 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0") 
(declare-const var384!16 (Array Int (Array Int Int)))
(assert (not (= var384!16 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!16 15) var3079)) ; Statement: r2[15] = $r41 
(assert true)
(define-const var1030 (Array Int Int) (s2b/-450202684 var1810 "0")) ; Statement: $r42 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0") 
(declare-const var384!17 (Array Int (Array Int Int)))
(assert (not (= var384!17 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!17 16) var1030)) ; Statement: r2[16] = $r42 
(assert true)
(define-const var3138 (Array Int Int) (s2b/-450202684 var1810 "10")) ; Statement: $r43 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("10") 
(declare-const var384!18 (Array Int (Array Int Int)))
(assert (not (= var384!18 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var384!18 17) var3138)) ; Statement: r2[17] = $r43 
 ; Statement: return r2 
(check-sat)
(get-model)
(get-unsat-core)
; {var1529_getByName/-358960852=([java.lang.String], com.mysql.cj.MysqlType), arr-__Array__Int__Int__-init=([], byte[][]), s2b/-450202684=([com.mysql.cj.jdbc.DatabaseMetaData, java.lang.String], byte[]), getJdbcType/389098195=([com.mysql.cj.MysqlType], int), Int_toString/1350422511=([int], java.lang.String), getBytes/1068683673=([java.lang.String], byte[]), getPrecision/-479410283=([com.mysql.cj.MysqlType], java.lang.Long), longValue/1313863450=([java.lang.Long], long), cast-from-Int-to-Int=([byte], int), intValue/-1919356104=([java.lang.Long], int), ordinal/-291641772=([java.lang.Enum], int), cast-from-var1529-to-var1075=([com.mysql.cj.MysqlType], java.lang.Enum), getCreateParams/2067265168=([com.mysql.cj.MysqlType], java.lang.String), isAllowed/-888104558=([com.mysql.cj.MysqlType, int], boolean), getName/1307715079=([com.mysql.cj.MysqlType], java.lang.String)}
; {var2643=com.mysql.cj.jdbc.DatabaseMetaData, var1810=r3, var3=r0, var1744=null_type, var1529=com.mysql.cj.MysqlType, var3620=r1, var384=r2, var1854=$r4, var3173=$r5, var1427=$i4, var2198=$r33, var1437=$r34, var3337=$r35, var979=$l5, var966=$b6, var208=$i10, var877=$r6, var533=$i7, var707=$r7, var1100=$r8, var2576=com.mysql.cj.jdbc.DatabaseMetaData$11, var214=$r9, var1075=java.lang.Enum, var3012=$i0, var1247=$i1, var1842=$r31, var2434=$r32, var1445=$r12, var785=$r13, var1581=$r14, var2654=$r15, var2405=$r16, var3101=$r17, var93=$r18, var3215=$z0, var2393=$r36, var3200=$r19, var444=$r20, var2097=$r21, var3876=$i2, var136=$i3, var586=$r30, var2975=$r38, var1318=$r39, var3188=$r40, var3011=$i8, var2417=$i9, var3666=$r23, var2305=$r24, var3079=$r41, var1030=$r42, var3138=$r43}
; {com.mysql.cj.jdbc.DatabaseMetaData=var2643, r3=var1810, r0=var3, null_type=var1744, com.mysql.cj.MysqlType=var1529, r1=var3620, r2=var384, $r4=var1854, $r5=var3173, $i4=var1427, $r33=var2198, $r34=var1437, $r35=var3337, $l5=var979, $b6=var966, $i10=var208, $r6=var877, $i7=var533, $r7=var707, $r8=var1100, com.mysql.cj.jdbc.DatabaseMetaData$11=var2576, $r9=var214, java.lang.Enum=var1075, $i0=var3012, $i1=var1247, $r31=var1842, $r32=var2434, $r12=var1445, $r13=var785, $r14=var1581, $r15=var2654, $r16=var2405, $r17=var3101, $r18=var93, $z0=var3215, $r36=var2393, $r19=var3200, $r20=var444, $r21=var2097, $i2=var3876, $i3=var136, $r30=var586, $r38=var2975, $r39=var1318, $r40=var3188, $i8=var3011, $i9=var2417, $r23=var3666, $r24=var2305, $r41=var3079, $r42=var1030, $r43=var3138}
;seq <java.lang.Integer: java.lang.String toString(int)>;	<java.lang.String: byte[] getBytes()>;	<java.lang.Integer: java.lang.String toString(int)>;	<java.lang.String: byte[] getBytes()>;	<java.lang.Integer: java.lang.String toString(int)>;	<java.lang.String: byte[] getBytes()>;	<java.lang.Integer: java.lang.String toString(int)>;	<java.lang.String: byte[] getBytes()>
;cnt {"<java.lang.String: byte[] getBytes()>": 4}
;stmts r3 := @this: com.mysql.cj.jdbc.DatabaseMetaData;	r0 := @parameter0: java.lang.String;	r1 = staticinvoke <com.mysql.cj.MysqlType: com.mysql.cj.MysqlType getByName(java.lang.String)>(r0);	r2 = newarray (byte[])[18];	$r4 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>(r0);	r2[0] = $r4;	$r5 = <com.mysql.cj.MysqlType: com.mysql.cj.MysqlType YEAR>;	if r1 != $r5 goto $i4 = virtualinvoke r1.<com.mysql.cj.MysqlType: int getJdbcType()>();	$i4 = virtualinvoke r1.<com.mysql.cj.MysqlType: int getJdbcType()>();	$r33 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);	$r34 = virtualinvoke $r33.<java.lang.String: byte[] getBytes()>();	r2[1] = $r34;	$r35 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.Long getPrecision()>();	$l5 = virtualinvoke $r35.<java.lang.Long: long longValue()>();	$b6 = $l5 cmp 2147483647L;	$i10 = (int) $b6;	if $i10 <= 0 goto $r6 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.Long getPrecision()>();	$r6 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.Long getPrecision()>();	$i7 = virtualinvoke $r6.<java.lang.Long: int intValue()>();	$r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);	$r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();	r2[2] = $r8;	$r9 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType>;	$i0 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>();	$i1 = $r9[$i0];	tableswitch($i1) {     case 5: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 6: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 7: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 8: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 9: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 10: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 11: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 12: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 13: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 14: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 15: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 16: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 17: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 18: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 19: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 20: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 21: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 22: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 23: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 24: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 25: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 26: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 27: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 28: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 29: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 30: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 31: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 32: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 33: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 34: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     default: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>(""); };	$r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");	r2[3] = $r31;	$r32 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");	r2[4] = $r32;	$r12 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.String getCreateParams()>();	$r13 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r12);	r2[5] = $r13;	$r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1);	$r15 = virtualinvoke $r14.<java.lang.String: byte[] getBytes()>();	r2[6] = $r15;	$r16 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");	r2[7] = $r16;	$r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(3);	$r18 = virtualinvoke $r17.<java.lang.String: byte[] getBytes()>();	r2[8] = $r18;	$z0 = virtualinvoke r1.<com.mysql.cj.MysqlType: boolean isAllowed(int)>(32);	if $z0 == 0 goto $r36 = "false";	$r36 = "true";	goto [?= $r19 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r36)];	$r19 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r36);	r2[9] = $r19;	$r20 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");	r2[10] = $r20;	$r21 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType>;	$i2 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>();	$i3 = $r21[$i2];	tableswitch($i3) {     case 3: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 4: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 5: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 6: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 7: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 8: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 9: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 10: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 11: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 12: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 13: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 14: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 15: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 16: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 17: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 18: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 19: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 20: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 21: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 22: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 23: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 24: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 25: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 26: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 27: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 28: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 29: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 30: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 31: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 32: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 33: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 34: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 35: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 36: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 37: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 38: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 39: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 40: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 41: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 42: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     default: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false"); };	$r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");	r2[11] = $r30;	$r38 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.String getName()>();	$r39 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r38);	r2[12] = $r39;	$r40 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType>;	$i8 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>();	$i9 = $r40[$i8];	tableswitch($i9) {     case 1: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 2: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 3: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 4: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 5: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");     case 6: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");     case 7: goto $r23 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-38");     case 8: goto $r23 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-38");     default: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0"); };	$r23 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-38");	r2[13] = $r23;	$r24 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("38");	r2[14] = $r24;	goto [?= $r41 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0")];	$r41 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");	r2[15] = $r41;	$r42 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");	r2[16] = $r42;	$r43 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("10");	r2[17] = $r43;	return r2
;block_num 13