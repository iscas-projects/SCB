(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var3195 0)
(declare-sort var2905 0)
(declare-sort var453 0)
(declare-sort var886 0)
(declare-sort var588 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun var453_getByName/-358960852 (String) var453)
(declare-fun arr-__Array__Int__Int__-init () (Array Int (Array Int Int)))
(declare-fun s2b/-450202684 (var3195 String) (Array Int Int))
(declare-fun getJdbcType/389098195 (var453) Int)
(declare-fun Int_toString/1350422511 (Int) String)
(declare-fun getBytes/1068683673 (String) (Array Int Int))
(declare-fun getPrecision/-479410283 (var453) Int)
(declare-fun longValue/1313863450 (Int) Int)
(define-fun cast-from-Int-to-Int ((arg Int)) Int arg)
(declare-fun ordinal/-291641772 (var588) Int)
(declare-fun cast-from-var453-to-var588 (var453) var588)
(declare-fun getCreateParams/2067265168 (var453) String)
(declare-fun isAllowed/-888104558 (var453 Int) Bool)
(declare-fun getName/1307715079 (var453) String)
(declare-const null-var3195 var3195)
(declare-const null-String String)
(declare-const null-__Array__Int____Array__Int__Int____ (Array Int (Array Int Int)))
(declare-const var453-YEAR var453)
(declare-const var886-$SwitchMap$com$mysql$cj$MysqlType (Array Int Int))
(declare-const var583 var3195) ; Statement: r3 := @this: com.mysql.cj.jdbc.DatabaseMetaData 
(assert (not (= var583 null-var3195)))
(declare-const var3441 String) ; Statement: r0 := @parameter0: java.lang.String 
(assert (not (= var3441 null-String)))
(define-const var2973 var453 (var453_getByName/-358960852 var3441)) ; Statement: r1 = staticinvoke <com.mysql.cj.MysqlType: com.mysql.cj.MysqlType getByName(java.lang.String)>(r0) 
(define-const var2651 (Array Int (Array Int Int)) arr-__Array__Int__Int__-init) ; Statement: r2 = newarray (byte[])[18] 
(assert true)
(define-const var1250 (Array Int Int) (s2b/-450202684 var583 var3441)) ; Statement: $r4 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>(r0) 
(declare-const var2651!1 (Array Int (Array Int Int)))
(assert (not (= var2651!1 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!1 0) var1250)) ; Statement: r2[0] = $r4 
(define-const var1289 var453 var453-YEAR) ; Statement: $r5 = <com.mysql.cj.MysqlType: com.mysql.cj.MysqlType YEAR> 
 ; Statement: if r1 != $r5 goto $i4 = virtualinvoke r1.<com.mysql.cj.MysqlType: int getJdbcType()>() 
(assert (not (= var2973 var1289))) ; Cond: r1 != $r5 
(assert true)
(define-const var862 Int (getJdbcType/389098195 var2973)) ; Statement: $i4 = virtualinvoke r1.<com.mysql.cj.MysqlType: int getJdbcType()>() 
(assert true) ; Non Conditional
(define-const var694 String (Int_toString/1350422511 var862)) ; Statement: $r33 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4) 
(assert true)
(define-const var1008 (Array Int Int) (getBytes/1068683673 var694)) ; Statement: $r34 = virtualinvoke $r33.<java.lang.String: byte[] getBytes()>() 
(declare-const var2651!2 (Array Int (Array Int Int)))
(assert (not (= var2651!2 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!2 1) var1008)) ; Statement: r2[1] = $r34 
(assert true)
(define-const var3991 Int (getPrecision/-479410283 var2973)) ; Statement: $r35 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.Long getPrecision()>() 
(assert true)
(define-const var1928 Int (longValue/1313863450 var3991)) ; Statement: $l5 = virtualinvoke $r35.<java.lang.Long: long longValue()>() 
(define-const var578 Int (ite (> var1928 2147483647) 1 (ite (< var1928 2147483647) (- 1) 0))) ; Statement: $b6 = $l5 cmp 2147483647L 
(define-const var2563 Int (cast-from-Int-to-Int var578)) ; Statement: $i10 = (int) $b6 
 ; Statement: if $i10 <= 0 goto $r6 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.Long getPrecision()>() 
(assert (not (<= var2563 0))) ; Negate: Cond: $i10 <= 0  
(define-const var1321 Int 2147483647) ; Statement: $i7 = 2147483647 
 ; Statement: goto [?= $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7)] 
(assert true) ; Non Conditional
(define-const var398 String (Int_toString/1350422511 var1321)) ; Statement: $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7) 
(assert true)
(define-const var2376 (Array Int Int) (getBytes/1068683673 var398)) ; Statement: $r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>() 
(declare-const var2651!3 (Array Int (Array Int Int)))
(assert (not (= var2651!3 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!3 2) var2376)) ; Statement: r2[2] = $r8 
(define-const var3852 (Array Int Int) var886-$SwitchMap$com$mysql$cj$MysqlType) ; Statement: $r9 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType> 
(assert true)
(define-const var2464 Int (ordinal/-291641772 (cast-from-var453-to-var588 var2973))) ; Statement: $i0 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>() 
(define-const var2556 Int (select var3852 var2464)) ; Statement: $i1 = $r9[$i0] 
 ; Statement: tableswitch($i1) {     case 5: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 6: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 7: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 8: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 9: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 10: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 11: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 12: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 13: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 14: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 15: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 16: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 17: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 18: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 19: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 20: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 21: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 22: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 23: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 24: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 25: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 26: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 27: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 28: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 29: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 30: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 31: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 32: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 33: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 34: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     default: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>(""); } 
(assert (and (= var2556 5) true)) ; Intersect: Cond: $i1 == 5  and Non Conditional 
(assert true)
(define-const var1487 (Array Int Int) (s2b/-450202684 var583 "\u0027")) ; Statement: $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'") 
(declare-const var2651!4 (Array Int (Array Int Int)))
(assert (not (= var2651!4 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!4 3) var1487)) ; Statement: r2[3] = $r10 
(assert true)
(define-const var715 (Array Int Int) (s2b/-450202684 var583 "\u0027")) ; Statement: $r11 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'") 
(declare-const var2651!5 (Array Int (Array Int Int)))
(assert (not (= var2651!5 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!5 4) var715)) ; Statement: r2[4] = $r11 
 ; Statement: goto [?= $r12 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.String getCreateParams()>()] 
(assert true) ; Non Conditional
(assert true)
(define-const var204 String (getCreateParams/2067265168 var2973)) ; Statement: $r12 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.String getCreateParams()>() 
(assert true)
(define-const var270 (Array Int Int) (s2b/-450202684 var583 var204)) ; Statement: $r13 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r12) 
(declare-const var2651!6 (Array Int (Array Int Int)))
(assert (not (= var2651!6 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!6 5) var270)) ; Statement: r2[5] = $r13 
(define-const var2989 String (Int_toString/1350422511 1)) ; Statement: $r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1) 
(assert true)
(define-const var3745 (Array Int Int) (getBytes/1068683673 var2989)) ; Statement: $r15 = virtualinvoke $r14.<java.lang.String: byte[] getBytes()>() 
(declare-const var2651!7 (Array Int (Array Int Int)))
(assert (not (= var2651!7 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!7 6) var3745)) ; Statement: r2[6] = $r15 
(assert true)
(define-const var2998 (Array Int Int) (s2b/-450202684 var583 "true")) ; Statement: $r16 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true") 
(declare-const var2651!8 (Array Int (Array Int Int)))
(assert (not (= var2651!8 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!8 7) var2998)) ; Statement: r2[7] = $r16 
(define-const var2361 String (Int_toString/1350422511 3)) ; Statement: $r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(3) 
(assert true)
(define-const var301 (Array Int Int) (getBytes/1068683673 var2361)) ; Statement: $r18 = virtualinvoke $r17.<java.lang.String: byte[] getBytes()>() 
(declare-const var2651!9 (Array Int (Array Int Int)))
(assert (not (= var2651!9 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!9 8) var301)) ; Statement: r2[8] = $r18 
(assert true)
(define-const var2391 Bool (isAllowed/-888104558 var2973 32)) ; Statement: $z0 = virtualinvoke r1.<com.mysql.cj.MysqlType: boolean isAllowed(int)>(32) 
 ; Statement: if $z0 == 0 goto $r36 = "false" 
(assert (= (ite var2391 1 0) 0)) ; Cond: $z0 == 0 
(define-const var2254 String "false") ; Statement: $r36 = "false" 
(assert true) ; Non Conditional
(assert true)
(define-const var2358 (Array Int Int) (s2b/-450202684 var583 var2254)) ; Statement: $r19 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r36) 
(declare-const var2651!10 (Array Int (Array Int Int)))
(assert (not (= var2651!10 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!10 9) var2358)) ; Statement: r2[9] = $r19 
(assert true)
(define-const var2817 (Array Int Int) (s2b/-450202684 var583 "false")) ; Statement: $r20 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false") 
(declare-const var2651!11 (Array Int (Array Int Int)))
(assert (not (= var2651!11 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!11 10) var2817)) ; Statement: r2[10] = $r20 
(define-const var809 (Array Int Int) var886-$SwitchMap$com$mysql$cj$MysqlType) ; Statement: $r21 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType> 
(assert true)
(define-const var977 Int (ordinal/-291641772 (cast-from-var453-to-var588 var2973))) ; Statement: $i2 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>() 
(define-const var3235 Int (select var809 var977)) ; Statement: $i3 = $r21[$i2] 
 ; Statement: tableswitch($i3) {     case 3: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 4: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 5: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 6: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 7: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 8: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 9: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 10: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 11: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 12: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 13: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 14: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 15: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 16: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 17: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 18: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 19: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 20: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 21: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 22: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 23: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 24: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 25: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 26: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 27: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 28: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 29: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 30: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 31: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 32: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 33: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 34: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 35: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 36: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 37: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 38: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 39: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 40: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 41: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 42: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     default: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false"); } 
(assert (and (not (= var3235 4)) (and (not (= var3235 3)) true))) ; Intersect: Negate: Cond: $i3 == 4   and Intersect: Negate: Cond: $i3 == 3   and Non Conditional  
(assert true)
(define-const var1208 (Array Int Int) (s2b/-450202684 var583 "false")) ; Statement: $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false") 
(declare-const var2651!12 (Array Int (Array Int Int)))
(assert (not (= var2651!12 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!12 11) var1208)) ; Statement: r2[11] = $r30 
(assert true) ; Non Conditional
(assert true)
(define-const var1872 String (getName/1307715079 var2973)) ; Statement: $r38 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.String getName()>() 
(assert true)
(define-const var2591 (Array Int Int) (s2b/-450202684 var583 var1872)) ; Statement: $r39 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r38) 
(declare-const var2651!13 (Array Int (Array Int Int)))
(assert (not (= var2651!13 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!13 12) var2591)) ; Statement: r2[12] = $r39 
(define-const var1376 (Array Int Int) var886-$SwitchMap$com$mysql$cj$MysqlType) ; Statement: $r40 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType> 
(assert true)
(define-const var3015 Int (ordinal/-291641772 (cast-from-var453-to-var588 var2973))) ; Statement: $i8 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>() 
(define-const var818 Int (select var1376 var3015)) ; Statement: $i9 = $r40[$i8] 
 ; Statement: tableswitch($i9) {     case 1: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 2: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 3: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 4: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 5: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");     case 6: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");     case 7: goto $r23 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-38");     case 8: goto $r23 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-38");     default: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0"); } 
(assert (and (not (= var818 4)) (and (not (= var818 3)) (and (not (= var818 2)) (and (not (= var818 1)) true))))) ; Intersect: Negate: Cond: $i9 == 4   and Intersect: Negate: Cond: $i9 == 3   and Intersect: Negate: Cond: $i9 == 2   and Intersect: Negate: Cond: $i9 == 1   and Non Conditional    
(assert true)
(define-const var476 (Array Int Int) (s2b/-450202684 var583 "0")) ; Statement: $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0") 
(declare-const var2651!14 (Array Int (Array Int Int)))
(assert (not (= var2651!14 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!14 13) var476)) ; Statement: r2[13] = $r27 
(assert true)
(define-const var2906 (Array Int Int) (s2b/-450202684 var583 "0")) ; Statement: $r28 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0") 
(declare-const var2651!15 (Array Int (Array Int Int)))
(assert (not (= var2651!15 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!15 14) var2906)) ; Statement: r2[14] = $r28 
(assert true) ; Non Conditional
(assert true)
(define-const var1879 (Array Int Int) (s2b/-450202684 var583 "0")) ; Statement: $r41 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0") 
(declare-const var2651!16 (Array Int (Array Int Int)))
(assert (not (= var2651!16 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!16 15) var1879)) ; Statement: r2[15] = $r41 
(assert true)
(define-const var2038 (Array Int Int) (s2b/-450202684 var583 "0")) ; Statement: $r42 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0") 
(declare-const var2651!17 (Array Int (Array Int Int)))
(assert (not (= var2651!17 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!17 16) var2038)) ; Statement: r2[16] = $r42 
(assert true)
(define-const var3288 (Array Int Int) (s2b/-450202684 var583 "10")) ; Statement: $r43 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("10") 
(declare-const var2651!18 (Array Int (Array Int Int)))
(assert (not (= var2651!18 null-__Array__Int____Array__Int__Int____)))
(assert (= (select var2651!18 17) var3288)) ; Statement: r2[17] = $r43 
 ; Statement: return r2 
(check-sat)
(get-model)
(get-unsat-core)
; {var453_getByName/-358960852=([java.lang.String], com.mysql.cj.MysqlType), arr-__Array__Int__Int__-init=([], byte[][]), s2b/-450202684=([com.mysql.cj.jdbc.DatabaseMetaData, java.lang.String], byte[]), getJdbcType/389098195=([com.mysql.cj.MysqlType], int), Int_toString/1350422511=([int], java.lang.String), getBytes/1068683673=([java.lang.String], byte[]), getPrecision/-479410283=([com.mysql.cj.MysqlType], java.lang.Long), longValue/1313863450=([java.lang.Long], long), cast-from-Int-to-Int=([byte], int), ordinal/-291641772=([java.lang.Enum], int), cast-from-var453-to-var588=([com.mysql.cj.MysqlType], java.lang.Enum), getCreateParams/2067265168=([com.mysql.cj.MysqlType], java.lang.String), isAllowed/-888104558=([com.mysql.cj.MysqlType, int], boolean), getName/1307715079=([com.mysql.cj.MysqlType], java.lang.String)}
; {var3195=com.mysql.cj.jdbc.DatabaseMetaData, var583=r3, var3441=r0, var2905=null_type, var453=com.mysql.cj.MysqlType, var2973=r1, var2651=r2, var1250=$r4, var1289=$r5, var862=$i4, var694=$r33, var1008=$r34, var3991=$r35, var1928=$l5, var578=$b6, var2563=$i10, var1321=$i7, var398=$r7, var2376=$r8, var886=com.mysql.cj.jdbc.DatabaseMetaData$11, var3852=$r9, var588=java.lang.Enum, var2464=$i0, var2556=$i1, var1487=$r10, var715=$r11, var204=$r12, var270=$r13, var2989=$r14, var3745=$r15, var2998=$r16, var2361=$r17, var301=$r18, var2391=$z0, var2254=$r36, var2358=$r19, var2817=$r20, var809=$r21, var977=$i2, var3235=$i3, var1208=$r30, var1872=$r38, var2591=$r39, var1376=$r40, var3015=$i8, var818=$i9, var476=$r27, var2906=$r28, var1879=$r41, var2038=$r42, var3288=$r43}
; {com.mysql.cj.jdbc.DatabaseMetaData=var3195, r3=var583, r0=var3441, null_type=var2905, com.mysql.cj.MysqlType=var453, r1=var2973, r2=var2651, $r4=var1250, $r5=var1289, $i4=var862, $r33=var694, $r34=var1008, $r35=var3991, $l5=var1928, $b6=var578, $i10=var2563, $i7=var1321, $r7=var398, $r8=var2376, com.mysql.cj.jdbc.DatabaseMetaData$11=var886, $r9=var3852, java.lang.Enum=var588, $i0=var2464, $i1=var2556, $r10=var1487, $r11=var715, $r12=var204, $r13=var270, $r14=var2989, $r15=var3745, $r16=var2998, $r17=var2361, $r18=var301, $z0=var2391, $r36=var2254, $r19=var2358, $r20=var2817, $r21=var809, $i2=var977, $i3=var3235, $r30=var1208, $r38=var1872, $r39=var2591, $r40=var1376, $i8=var3015, $i9=var818, $r27=var476, $r28=var2906, $r41=var1879, $r42=var2038, $r43=var3288}
;seq <java.lang.Integer: java.lang.String toString(int)>;	<java.lang.String: byte[] getBytes()>;	<java.lang.Integer: java.lang.String toString(int)>;	<java.lang.String: byte[] getBytes()>;	<java.lang.Integer: java.lang.String toString(int)>;	<java.lang.String: byte[] getBytes()>;	<java.lang.Integer: java.lang.String toString(int)>;	<java.lang.String: byte[] getBytes()>
;cnt {"<java.lang.String: byte[] getBytes()>": 4}
;stmts r3 := @this: com.mysql.cj.jdbc.DatabaseMetaData;	r0 := @parameter0: java.lang.String;	r1 = staticinvoke <com.mysql.cj.MysqlType: com.mysql.cj.MysqlType getByName(java.lang.String)>(r0);	r2 = newarray (byte[])[18];	$r4 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>(r0);	r2[0] = $r4;	$r5 = <com.mysql.cj.MysqlType: com.mysql.cj.MysqlType YEAR>;	if r1 != $r5 goto $i4 = virtualinvoke r1.<com.mysql.cj.MysqlType: int getJdbcType()>();	$i4 = virtualinvoke r1.<com.mysql.cj.MysqlType: int getJdbcType()>();	$r33 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i4);	$r34 = virtualinvoke $r33.<java.lang.String: byte[] getBytes()>();	r2[1] = $r34;	$r35 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.Long getPrecision()>();	$l5 = virtualinvoke $r35.<java.lang.Long: long longValue()>();	$b6 = $l5 cmp 2147483647L;	$i10 = (int) $b6;	if $i10 <= 0 goto $r6 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.Long getPrecision()>();	$i7 = 2147483647;	goto [?= $r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7)];	$r7 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>($i7);	$r8 = virtualinvoke $r7.<java.lang.String: byte[] getBytes()>();	r2[2] = $r8;	$r9 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType>;	$i0 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>();	$i1 = $r9[$i0];	tableswitch($i1) {     case 5: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 6: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 7: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 8: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 9: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 10: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 11: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 12: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 13: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 14: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 15: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 16: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 17: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 18: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 19: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 20: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 21: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 22: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 23: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 24: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 25: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 26: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 27: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 28: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 29: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 30: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 31: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 32: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     case 33: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("");     case 34: goto $r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");     default: goto $r31 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>(""); };	$r10 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");	r2[3] = $r10;	$r11 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("\'");	r2[4] = $r11;	goto [?= $r12 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.String getCreateParams()>()];	$r12 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.String getCreateParams()>();	$r13 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r12);	r2[5] = $r13;	$r14 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(1);	$r15 = virtualinvoke $r14.<java.lang.String: byte[] getBytes()>();	r2[6] = $r15;	$r16 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");	r2[7] = $r16;	$r17 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(3);	$r18 = virtualinvoke $r17.<java.lang.String: byte[] getBytes()>();	r2[8] = $r18;	$z0 = virtualinvoke r1.<com.mysql.cj.MysqlType: boolean isAllowed(int)>(32);	if $z0 == 0 goto $r36 = "false";	$r36 = "false";	$r19 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r36);	r2[9] = $r19;	$r20 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");	r2[10] = $r20;	$r21 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType>;	$i2 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>();	$i3 = $r21[$i2];	tableswitch($i3) {     case 3: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 4: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 5: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 6: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 7: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 8: goto $r29 = r3.<com.mysql.cj.jdbc.DatabaseMetaData: com.mysql.cj.NativeSession session>;     case 9: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 10: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 11: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 12: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 13: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 14: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 15: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 16: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 17: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 18: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 19: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 20: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 21: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 22: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 23: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 24: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 25: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 26: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 27: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 28: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 29: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 30: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 31: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 32: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 33: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 34: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");     case 35: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 36: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 37: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 38: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 39: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 40: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 41: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     case 42: goto $r22 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("true");     default: goto $r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false"); };	$r30 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("false");	r2[11] = $r30;	$r38 = virtualinvoke r1.<com.mysql.cj.MysqlType: java.lang.String getName()>();	$r39 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>($r38);	r2[12] = $r39;	$r40 = <com.mysql.cj.jdbc.DatabaseMetaData$11: int[] $SwitchMap$com$mysql$cj$MysqlType>;	$i8 = virtualinvoke r1.<com.mysql.cj.MysqlType: int ordinal()>();	$i9 = $r40[$i8];	tableswitch($i9) {     case 1: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 2: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 3: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 4: goto $r25 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-308");     case 5: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");     case 6: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");     case 7: goto $r23 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-38");     case 8: goto $r23 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("-38");     default: goto $r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0"); };	$r27 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");	r2[13] = $r27;	$r28 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");	r2[14] = $r28;	$r41 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");	r2[15] = $r41;	$r42 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("0");	r2[16] = $r42;	$r43 = virtualinvoke r3.<com.mysql.cj.jdbc.DatabaseMetaData: byte[] s2b(java.lang.String)>("10");	r2[17] = $r43;	return r2
;block_num 13