(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var333 0)
(declare-sort var3278 0)
(declare-sort var3644 0)
(declare-sort var617 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun op/699198229 (var333) var3644)
(declare-fun ordinal/-291641772 (var617) Int)
(declare-fun cast-from-var3644-to-var617 (var3644) var617)
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-const null-var333 var333)
(declare-const null-String String)
(declare-const var3278-$SwitchMap$com$google$re2j$Regexp$Op (Array Int Int))
(declare-const var1882 var333) ; Statement: r0 := @this: com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp 
(assert (not (= var1882 null-var333)))
(declare-const var293 String) ; Statement: r4 := @parameter0: java.lang.StringBuilder 
(assert (not (= var293 null-String)))
(define-const var3439 (Array Int Int) var3278-$SwitchMap$com$google$re2j$Regexp$Op) ; Statement: $r2 = <com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp$1: int[] $SwitchMap$com$google$re2j$Regexp$Op> 
(define-const var260 var3644 (op/699198229 var1882)) ; Statement: $r1 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp$Op op> 
(assert true)
(define-const var270 Int (ordinal/-291641772 (cast-from-var3644-to-var617 var260))) ; Statement: $i0 = virtualinvoke $r1.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp$Op: int ordinal()>() 
(define-const var867 Int (select var3439 var270)) ; Statement: $i1 = $r2[$i0] 
 ; Statement: tableswitch($i1) {     case 1: goto $r27 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp[] subs>;     case 2: goto $r27 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp[] subs>;     case 3: goto $r27 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp[] subs>;     case 4: goto $r27 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp[] subs>;     case 5: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^\\x00-\\x{10FFFF}]");     case 6: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?:)");     case 7: goto r38 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp[] subs>;     case 8: goto r40 = "";     case 9: goto $i17 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: int flags>;     case 10: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?-s:.)");     case 11: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?s:.)");     case 12: goto $r14 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: java.lang.String name>;     case 13: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\A");     case 14: goto $i15 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: int flags>;     case 15: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(94);     case 16: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(36);     case 17: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\b");     case 18: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\B");     case 19: goto $r3 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: int[] runes>;     default: goto $r34 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp$Op op>; } 
(assert (and (= var867 6) (and (not (= var867 5)) (and (not (= var867 4)) (and (not (= var867 3)) (and (not (= var867 2)) (and (not (= var867 1)) true))))))) ; Intersect: Cond: $i1 == 6  and Intersect: Negate: Cond: $i1 == 5   and Intersect: Negate: Cond: $i1 == 4   and Intersect: Negate: Cond: $i1 == 3   and Intersect: Negate: Cond: $i1 == 2   and Intersect: Negate: Cond: $i1 == 1   and Non Conditional      
(assert true)
;(assert (append/672562846 var293 "(?:)")) ; Statement: virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?:)") 
(declare-const var293!1 String)
(assert (= var293!1 (str.++ var293 "(?:)")))
 ; Statement: goto [?= return] 
(assert true) ; Non Conditional
 ; Statement: return 
(check-sat)
(get-model)
(get-unsat-core)
; {op/699198229=([com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp], com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp$Op), ordinal/-291641772=([java.lang.Enum], int), cast-from-var3644-to-var617=([com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp$Op], java.lang.Enum), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder)}
; {var333=com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp, var1882=r0, var293=r4, var3278=com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp$1, var3439=$r2, var3644=com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp$Op, var260=$r1, var617=java.lang.Enum, var270=$i0, var867=$i1}
; {com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp=var333, r0=var1882, r4=var293, com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp$1=var3278, $r2=var3439, com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp$Op=var3644, $r1=var260, java.lang.Enum=var617, $i0=var270, $i1=var867}
;seq <java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>
;cnt {"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1}
;stmts r0 := @this: com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp;	r4 := @parameter0: java.lang.StringBuilder;	$r2 = <com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp$1: int[] $SwitchMap$com$google$re2j$Regexp$Op>;	$r1 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp$Op op>;	$i0 = virtualinvoke $r1.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp$Op: int ordinal()>();	$i1 = $r2[$i0];	tableswitch($i1) {     case 1: goto $r27 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp[] subs>;     case 2: goto $r27 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp[] subs>;     case 3: goto $r27 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp[] subs>;     case 4: goto $r27 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp[] subs>;     case 5: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[^\\x00-\\x{10FFFF}]");     case 6: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?:)");     case 7: goto r38 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp[] subs>;     case 8: goto r40 = "";     case 9: goto $i17 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: int flags>;     case 10: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?-s:.)");     case 11: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?s:.)");     case 12: goto $r14 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: java.lang.String name>;     case 13: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\A");     case 14: goto $i15 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: int flags>;     case 15: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(94);     case 16: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(36);     case 17: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\b");     case 18: goto virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\\B");     case 19: goto $r3 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: int[] runes>;     default: goto $r34 = r0.<com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp: com.google.javascript.jscomp.jarjar.com.google.re2j.Regexp$Op op>; };	virtualinvoke r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(?:)");	goto [?= return];	return
;block_num 3