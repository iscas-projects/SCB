(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var3144 0)
(declare-sort var2719 0)
(declare-sort var501 0)
(declare-sort var3459 0)
(declare-sort var41 0)
(declare-sort var3693 0)
(declare-sort var687 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun getType/1455668659 (var2719) var501)
(declare-fun key/221390942 (var501) String)
(declare-fun hashCode/-467973558 (String) Int)
(declare-fun var3459-init () var3459)
(declare-fun <init>/-1552361871 (var3459) void)
(declare-fun getNode/1659036172 (var2719) var41)
(declare-fun compiler/-1646976390 (var3144) var3693)
(declare-fun attachMatchedNodeInfo/223256563 (var3459 var41 var3693) var3459)
(declare-fun setDescription/177911338 (var3459 String) var3459)
(declare-fun delete/-348226295 (var3459 var41) var3459)
(declare-fun build/-1745487932 (var3459) var687)
(declare-const null-var3144 var3144)
(declare-const null-var2719 var2719)
(declare-const var1101 var3144) ; Statement: r3 := @this: com.google.javascript.refactoring.ErrorToFixMapper 
(assert (not (= var1101 null-var3144)))
(declare-const var2909 var2719) ; Statement: r0 := @parameter0: com.google.javascript.jscomp.JSError 
(assert (not (= var2909 null-var2719)))
(assert true)
(define-const var416 var501 (getType/1455668659 var2909)) ; Statement: $r1 = virtualinvoke r0.<com.google.javascript.jscomp.JSError: com.google.javascript.jscomp.DiagnosticType getType()>() 
(define-const var958 String (key/221390942 var416)) ; Statement: r2 = $r1.<com.google.javascript.jscomp.DiagnosticType: java.lang.String key> 
(define-const var366 Int (- 1)) ; Statement: b1 = -1 
(assert true)
(define-const var3523 Int (hashCode/-467973558 var958)) ; Statement: $i0 = virtualinvoke r2.<java.lang.String: int hashCode()>() 
 ; Statement: lookupswitch($i0) {     case -2092232487: goto $z19 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_USELESS_EMPTY_STATEMENT");     case -1826522276: goto $z18 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_MISSING_REQUIRE_TYPE_IN_PROVIDES_FILE");     case -1494558136: goto $z17 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_STRICT_INEXISTENT_PROPERTY_WITH_SUGGESTION");     case -537466078: goto $z16 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_REFERENCE_TO_FULLY_QUALIFIED_IMPORT_NAME");     case -314303639: goto $z15 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_REDECLARED_VARIABLE");     case -282761772: goto $z14 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_INEXISTENT_PROPERTY_WITH_SUGGESTION");     case -187775531: goto $z13 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_REFERENCE_TO_SHORT_IMPORT_BY_LONG_NAME_INCLUDING_SHORT_NAME");     case -34492006: goto $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_REDUNDANT_NULLABILITY_MODIFIER_JSDOC");     case 18400082: goto $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_MISSING_REQUIRE_TYPE");     case 73826125: goto $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_INVALID_SUPER_CALL_WITH_SUGGESTION");     case 305320789: goto $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_REQUIRES_NOT_SORTED");     case 689013690: goto $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_MISSING_CALL_TO_SUPER");     case 941057106: goto $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_DEBUGGER_STATEMENT_PRESENT");     case 1021599182: goto $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_EXTRA_REQUIRE_WARNING");     case 1034984743: goto $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_MISSING_REQUIRE");     case 1071219699: goto $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_MISSING_SEMICOLON");     case 1115301027: goto $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_REFERENCE_BEFORE_DECLARE");     case 1482925713: goto $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_PROVIDES_NOT_SORTED");     case 1817627109: goto $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_MISSING_CONST_ON_CONSTANT_CASE");     case 1836574247: goto $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_MISSING_REQUIRE_IN_PROVIDES_FILE");     default: goto tableswitch(b1) {     case 0: goto $r28 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForRedeclaration(com.google.javascript.jscomp.JSError)>(r0);     case 1: goto $r27 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForEarlyReference(com.google.javascript.jscomp.JSError)>(r0);     case 2: goto $r26 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForMissingSemicolon(com.google.javascript.jscomp.JSError)>(r0);     case 3: goto $r25 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForUnsortedRequires(com.google.javascript.jscomp.JSError)>(r0);     case 4: goto $r24 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForUnsortedProvides(com.google.javascript.jscomp.JSError)>(r0);     case 5: goto $r16 = new com.google.javascript.refactoring.SuggestedFix$Builder;     case 6: goto $r15 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix removeEmptyStatement(com.google.javascript.jscomp.JSError)>(r0);     case 7: goto $r14 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForInexistentProperty(com.google.javascript.jscomp.JSError)>(r0);     case 8: goto $r14 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForInexistentProperty(com.google.javascript.jscomp.JSError)>(r0);     case 9: goto $r13 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForMissingSuper(com.google.javascript.jscomp.JSError)>(r0);     case 10: goto $r12 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForInvalidSuper(com.google.javascript.jscomp.JSError)>(r0);     case 11: goto $r10 = <com.google.javascript.refactoring.SuggestedFix$ImportType: com.google.javascript.refactoring.SuggestedFix$ImportType REQUIRE>;     case 12: goto $r10 = <com.google.javascript.refactoring.SuggestedFix$ImportType: com.google.javascript.refactoring.SuggestedFix$ImportType REQUIRE>;     case 13: goto $r8 = <com.google.javascript.refactoring.SuggestedFix$ImportType: com.google.javascript.refactoring.SuggestedFix$ImportType REQUIRE_TYPE>;     case 14: goto $r8 = <com.google.javascript.refactoring.SuggestedFix$ImportType: com.google.javascript.refactoring.SuggestedFix$ImportType REQUIRE_TYPE>;     case 15: goto $r7 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForExtraRequire(com.google.javascript.jscomp.JSError)>(r0);     case 16: goto $r6 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForReferenceToShortImportByLongName(com.google.javascript.jscomp.JSError)>(r0);     case 17: goto $r6 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForReferenceToShortImportByLongName(com.google.javascript.jscomp.JSError)>(r0);     case 18: goto $r5 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForRedundantNullabilityModifierJsDoc(com.google.javascript.jscomp.JSError)>(r0);     case 19: goto $r4 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForConstantCaseErrors(com.google.javascript.jscomp.JSError)>(r0);     default: goto return null; }; } 
(assert (and (not (= var3523 1836574247)) (and (not (= var3523 1817627109)) (and (not (= var3523 1482925713)) (and (not (= var3523 1115301027)) (and (not (= var3523 1071219699)) (and (not (= var3523 1034984743)) (and (not (= var3523 1021599182)) (and (not (= var3523 941057106)) (and (not (= var3523 689013690)) (and (not (= var3523 305320789)) (and (not (= var3523 73826125)) (and (not (= var3523 18400082)) (and (not (= var3523 (- 34492006))) (and (not (= var3523 (- 187775531))) (and (not (= var3523 (- 282761772))) (and (not (= var3523 (- 314303639))) (and (not (= var3523 (- 537466078))) (and (not (= var3523 (- 1494558136))) (and (not (= var3523 (- 1826522276))) (and (not (= var3523 (- 2092232487))) true))))))))))))))))))))) ; Intersect: Negate: Cond: $i0 == 1836574247   and Intersect: Negate: Cond: $i0 == 1817627109   and Intersect: Negate: Cond: $i0 == 1482925713   and Intersect: Negate: Cond: $i0 == 1115301027   and Intersect: Negate: Cond: $i0 == 1071219699   and Intersect: Negate: Cond: $i0 == 1034984743   and Intersect: Negate: Cond: $i0 == 1021599182   and Intersect: Negate: Cond: $i0 == 941057106   and Intersect: Negate: Cond: $i0 == 689013690   and Intersect: Negate: Cond: $i0 == 305320789   and Intersect: Negate: Cond: $i0 == 73826125   and Intersect: Negate: Cond: $i0 == 18400082   and Intersect: Negate: Cond: $i0 == -34492006   and Intersect: Negate: Cond: $i0 == -187775531   and Intersect: Negate: Cond: $i0 == -282761772   and Intersect: Negate: Cond: $i0 == -314303639   and Intersect: Negate: Cond: $i0 == -537466078   and Intersect: Negate: Cond: $i0 == -1494558136   and Intersect: Negate: Cond: $i0 == -1826522276   and Intersect: Negate: Cond: $i0 == -2092232487   and Non Conditional                    
 ; Statement: tableswitch(b1) {     case 0: goto $r28 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForRedeclaration(com.google.javascript.jscomp.JSError)>(r0);     case 1: goto $r27 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForEarlyReference(com.google.javascript.jscomp.JSError)>(r0);     case 2: goto $r26 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForMissingSemicolon(com.google.javascript.jscomp.JSError)>(r0);     case 3: goto $r25 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForUnsortedRequires(com.google.javascript.jscomp.JSError)>(r0);     case 4: goto $r24 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForUnsortedProvides(com.google.javascript.jscomp.JSError)>(r0);     case 5: goto $r16 = new com.google.javascript.refactoring.SuggestedFix$Builder;     case 6: goto $r15 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix removeEmptyStatement(com.google.javascript.jscomp.JSError)>(r0);     case 7: goto $r14 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForInexistentProperty(com.google.javascript.jscomp.JSError)>(r0);     case 8: goto $r14 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForInexistentProperty(com.google.javascript.jscomp.JSError)>(r0);     case 9: goto $r13 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForMissingSuper(com.google.javascript.jscomp.JSError)>(r0);     case 10: goto $r12 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForInvalidSuper(com.google.javascript.jscomp.JSError)>(r0);     case 11: goto $r10 = <com.google.javascript.refactoring.SuggestedFix$ImportType: com.google.javascript.refactoring.SuggestedFix$ImportType REQUIRE>;     case 12: goto $r10 = <com.google.javascript.refactoring.SuggestedFix$ImportType: com.google.javascript.refactoring.SuggestedFix$ImportType REQUIRE>;     case 13: goto $r8 = <com.google.javascript.refactoring.SuggestedFix$ImportType: com.google.javascript.refactoring.SuggestedFix$ImportType REQUIRE_TYPE>;     case 14: goto $r8 = <com.google.javascript.refactoring.SuggestedFix$ImportType: com.google.javascript.refactoring.SuggestedFix$ImportType REQUIRE_TYPE>;     case 15: goto $r7 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForExtraRequire(com.google.javascript.jscomp.JSError)>(r0);     case 16: goto $r6 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForReferenceToShortImportByLongName(com.google.javascript.jscomp.JSError)>(r0);     case 17: goto $r6 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForReferenceToShortImportByLongName(com.google.javascript.jscomp.JSError)>(r0);     case 18: goto $r5 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForRedundantNullabilityModifierJsDoc(com.google.javascript.jscomp.JSError)>(r0);     case 19: goto $r4 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForConstantCaseErrors(com.google.javascript.jscomp.JSError)>(r0);     default: goto return null; } 
(assert (and (= var366 5) (and (not (= var366 4)) (and (not (= var366 3)) (and (not (= var366 2)) (and (not (= var366 1)) (and (not (= var366 0)) true))))))) ; Intersect: Cond: b1 == 5  and Intersect: Negate: Cond: b1 == 4   and Intersect: Negate: Cond: b1 == 3   and Intersect: Negate: Cond: b1 == 2   and Intersect: Negate: Cond: b1 == 1   and Intersect: Negate: Cond: b1 == 0   and Non Conditional      
(define-const var2015 var3459 var3459-init) ; Statement: $r16 = new com.google.javascript.refactoring.SuggestedFix$Builder 
(assert true)
;(assert (<init>/-1552361871 var2015)) ; Statement: specialinvoke $r16.<com.google.javascript.refactoring.SuggestedFix$Builder: void <init>()>() 

(declare-const var2015!1 var3459)
(assert true)
(define-const var3344 var41 (getNode/1659036172 var2909)) ; Statement: $r18 = virtualinvoke r0.<com.google.javascript.jscomp.JSError: com.google.javascript.rhino.Node getNode()>() 
(define-const var95 var3693 (compiler/-1646976390 var1101)) ; Statement: $r17 = r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.jscomp.AbstractCompiler compiler> 
(assert true)
(define-const var2689 var3459 (attachMatchedNodeInfo/223256563 var2015!1 var3344 var95)) ; Statement: $r19 = virtualinvoke $r16.<com.google.javascript.refactoring.SuggestedFix$Builder: com.google.javascript.refactoring.SuggestedFix$Builder attachMatchedNodeInfo(com.google.javascript.rhino.Node,com.google.javascript.jscomp.AbstractCompiler)>($r18, $r17) 
(assert true)
(define-const var2620 var3459 (setDescription/177911338 var2689 "Remove debugger statement")) ; Statement: $r21 = virtualinvoke $r19.<com.google.javascript.refactoring.SuggestedFix$Builder: com.google.javascript.refactoring.SuggestedFix$Builder setDescription(java.lang.String)>("Remove debugger statement") 
(assert true)
(define-const var456 var41 (getNode/1659036172 var2909)) ; Statement: $r20 = virtualinvoke r0.<com.google.javascript.jscomp.JSError: com.google.javascript.rhino.Node getNode()>() 
(assert true)
(define-const var2900 var3459 (delete/-348226295 var2620 var456)) ; Statement: $r22 = virtualinvoke $r21.<com.google.javascript.refactoring.SuggestedFix$Builder: com.google.javascript.refactoring.SuggestedFix$Builder delete(com.google.javascript.rhino.Node)>($r20) 
(assert true)
(define-const var2278 var687 (build/-1745487932 var2900)) ; Statement: $r23 = virtualinvoke $r22.<com.google.javascript.refactoring.SuggestedFix$Builder: com.google.javascript.refactoring.SuggestedFix build()>() 
 ; Statement: return $r23 
(check-sat)
(get-model)
(get-unsat-core)
; {getType/1455668659=([com.google.javascript.jscomp.JSError], com.google.javascript.jscomp.DiagnosticType), key/221390942=([com.google.javascript.jscomp.DiagnosticType], java.lang.String), hashCode/-467973558=([java.lang.String], int), var3459-init=([], com.google.javascript.refactoring.SuggestedFix$Builder), <init>/-1552361871=([com.google.javascript.refactoring.SuggestedFix$Builder], void), getNode/1659036172=([com.google.javascript.jscomp.JSError], com.google.javascript.rhino.Node), compiler/-1646976390=([com.google.javascript.refactoring.ErrorToFixMapper], com.google.javascript.jscomp.AbstractCompiler), attachMatchedNodeInfo/223256563=([com.google.javascript.refactoring.SuggestedFix$Builder, com.google.javascript.rhino.Node, com.google.javascript.jscomp.AbstractCompiler], com.google.javascript.refactoring.SuggestedFix$Builder), setDescription/177911338=([com.google.javascript.refactoring.SuggestedFix$Builder, java.lang.String], com.google.javascript.refactoring.SuggestedFix$Builder), delete/-348226295=([com.google.javascript.refactoring.SuggestedFix$Builder, com.google.javascript.rhino.Node], com.google.javascript.refactoring.SuggestedFix$Builder), build/-1745487932=([com.google.javascript.refactoring.SuggestedFix$Builder], com.google.javascript.refactoring.SuggestedFix)}
; {var3144=com.google.javascript.refactoring.ErrorToFixMapper, var1101=r3, var2719=com.google.javascript.jscomp.JSError, var2909=r0, var501=com.google.javascript.jscomp.DiagnosticType, var416=$r1, var958=r2, var366=b1, var3523=$i0, var3459=com.google.javascript.refactoring.SuggestedFix$Builder, var2015=$r16, var41=com.google.javascript.rhino.Node, var3344=$r18, var3693=com.google.javascript.jscomp.AbstractCompiler, var95=$r17, var2689=$r19, var2620=$r21, var456=$r20, var2900=$r22, var687=com.google.javascript.refactoring.SuggestedFix, var2278=$r23}
; {com.google.javascript.refactoring.ErrorToFixMapper=var3144, r3=var1101, com.google.javascript.jscomp.JSError=var2719, r0=var2909, com.google.javascript.jscomp.DiagnosticType=var501, $r1=var416, r2=var958, b1=var366, $i0=var3523, com.google.javascript.refactoring.SuggestedFix$Builder=var3459, $r16=var2015, com.google.javascript.rhino.Node=var41, $r18=var3344, com.google.javascript.jscomp.AbstractCompiler=var3693, $r17=var95, $r19=var2689, $r21=var2620, $r20=var456, $r22=var2900, com.google.javascript.refactoring.SuggestedFix=var687, $r23=var2278}
;seq <java.lang.String: int hashCode()>
;cnt {"<java.lang.String: int hashCode()>": 1}
;stmts r3 := @this: com.google.javascript.refactoring.ErrorToFixMapper;	r0 := @parameter0: com.google.javascript.jscomp.JSError;	$r1 = virtualinvoke r0.<com.google.javascript.jscomp.JSError: com.google.javascript.jscomp.DiagnosticType getType()>();	r2 = $r1.<com.google.javascript.jscomp.DiagnosticType: java.lang.String key>;	b1 = -1;	$i0 = virtualinvoke r2.<java.lang.String: int hashCode()>();	lookupswitch($i0) {     case -2092232487: goto $z19 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_USELESS_EMPTY_STATEMENT");     case -1826522276: goto $z18 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_MISSING_REQUIRE_TYPE_IN_PROVIDES_FILE");     case -1494558136: goto $z17 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_STRICT_INEXISTENT_PROPERTY_WITH_SUGGESTION");     case -537466078: goto $z16 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_REFERENCE_TO_FULLY_QUALIFIED_IMPORT_NAME");     case -314303639: goto $z15 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_REDECLARED_VARIABLE");     case -282761772: goto $z14 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_INEXISTENT_PROPERTY_WITH_SUGGESTION");     case -187775531: goto $z13 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_REFERENCE_TO_SHORT_IMPORT_BY_LONG_NAME_INCLUDING_SHORT_NAME");     case -34492006: goto $z12 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_REDUNDANT_NULLABILITY_MODIFIER_JSDOC");     case 18400082: goto $z11 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_MISSING_REQUIRE_TYPE");     case 73826125: goto $z10 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_INVALID_SUPER_CALL_WITH_SUGGESTION");     case 305320789: goto $z9 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_REQUIRES_NOT_SORTED");     case 689013690: goto $z8 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_MISSING_CALL_TO_SUPER");     case 941057106: goto $z7 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_DEBUGGER_STATEMENT_PRESENT");     case 1021599182: goto $z6 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_EXTRA_REQUIRE_WARNING");     case 1034984743: goto $z5 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_MISSING_REQUIRE");     case 1071219699: goto $z4 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_MISSING_SEMICOLON");     case 1115301027: goto $z3 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_REFERENCE_BEFORE_DECLARE");     case 1482925713: goto $z2 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_PROVIDES_NOT_SORTED");     case 1817627109: goto $z1 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_MISSING_CONST_ON_CONSTANT_CASE");     case 1836574247: goto $z0 = virtualinvoke r2.<java.lang.String: boolean equals(java.lang.Object)>("JSC_MISSING_REQUIRE_IN_PROVIDES_FILE");     default: goto tableswitch(b1) {     case 0: goto $r28 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForRedeclaration(com.google.javascript.jscomp.JSError)>(r0);     case 1: goto $r27 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForEarlyReference(com.google.javascript.jscomp.JSError)>(r0);     case 2: goto $r26 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForMissingSemicolon(com.google.javascript.jscomp.JSError)>(r0);     case 3: goto $r25 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForUnsortedRequires(com.google.javascript.jscomp.JSError)>(r0);     case 4: goto $r24 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForUnsortedProvides(com.google.javascript.jscomp.JSError)>(r0);     case 5: goto $r16 = new com.google.javascript.refactoring.SuggestedFix$Builder;     case 6: goto $r15 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix removeEmptyStatement(com.google.javascript.jscomp.JSError)>(r0);     case 7: goto $r14 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForInexistentProperty(com.google.javascript.jscomp.JSError)>(r0);     case 8: goto $r14 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForInexistentProperty(com.google.javascript.jscomp.JSError)>(r0);     case 9: goto $r13 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForMissingSuper(com.google.javascript.jscomp.JSError)>(r0);     case 10: goto $r12 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForInvalidSuper(com.google.javascript.jscomp.JSError)>(r0);     case 11: goto $r10 = <com.google.javascript.refactoring.SuggestedFix$ImportType: com.google.javascript.refactoring.SuggestedFix$ImportType REQUIRE>;     case 12: goto $r10 = <com.google.javascript.refactoring.SuggestedFix$ImportType: com.google.javascript.refactoring.SuggestedFix$ImportType REQUIRE>;     case 13: goto $r8 = <com.google.javascript.refactoring.SuggestedFix$ImportType: com.google.javascript.refactoring.SuggestedFix$ImportType REQUIRE_TYPE>;     case 14: goto $r8 = <com.google.javascript.refactoring.SuggestedFix$ImportType: com.google.javascript.refactoring.SuggestedFix$ImportType REQUIRE_TYPE>;     case 15: goto $r7 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForExtraRequire(com.google.javascript.jscomp.JSError)>(r0);     case 16: goto $r6 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForReferenceToShortImportByLongName(com.google.javascript.jscomp.JSError)>(r0);     case 17: goto $r6 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForReferenceToShortImportByLongName(com.google.javascript.jscomp.JSError)>(r0);     case 18: goto $r5 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForRedundantNullabilityModifierJsDoc(com.google.javascript.jscomp.JSError)>(r0);     case 19: goto $r4 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForConstantCaseErrors(com.google.javascript.jscomp.JSError)>(r0);     default: goto return null; }; };	tableswitch(b1) {     case 0: goto $r28 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForRedeclaration(com.google.javascript.jscomp.JSError)>(r0);     case 1: goto $r27 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForEarlyReference(com.google.javascript.jscomp.JSError)>(r0);     case 2: goto $r26 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForMissingSemicolon(com.google.javascript.jscomp.JSError)>(r0);     case 3: goto $r25 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForUnsortedRequires(com.google.javascript.jscomp.JSError)>(r0);     case 4: goto $r24 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForUnsortedProvides(com.google.javascript.jscomp.JSError)>(r0);     case 5: goto $r16 = new com.google.javascript.refactoring.SuggestedFix$Builder;     case 6: goto $r15 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix removeEmptyStatement(com.google.javascript.jscomp.JSError)>(r0);     case 7: goto $r14 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForInexistentProperty(com.google.javascript.jscomp.JSError)>(r0);     case 8: goto $r14 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForInexistentProperty(com.google.javascript.jscomp.JSError)>(r0);     case 9: goto $r13 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForMissingSuper(com.google.javascript.jscomp.JSError)>(r0);     case 10: goto $r12 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForInvalidSuper(com.google.javascript.jscomp.JSError)>(r0);     case 11: goto $r10 = <com.google.javascript.refactoring.SuggestedFix$ImportType: com.google.javascript.refactoring.SuggestedFix$ImportType REQUIRE>;     case 12: goto $r10 = <com.google.javascript.refactoring.SuggestedFix$ImportType: com.google.javascript.refactoring.SuggestedFix$ImportType REQUIRE>;     case 13: goto $r8 = <com.google.javascript.refactoring.SuggestedFix$ImportType: com.google.javascript.refactoring.SuggestedFix$ImportType REQUIRE_TYPE>;     case 14: goto $r8 = <com.google.javascript.refactoring.SuggestedFix$ImportType: com.google.javascript.refactoring.SuggestedFix$ImportType REQUIRE_TYPE>;     case 15: goto $r7 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForExtraRequire(com.google.javascript.jscomp.JSError)>(r0);     case 16: goto $r6 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForReferenceToShortImportByLongName(com.google.javascript.jscomp.JSError)>(r0);     case 17: goto $r6 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForReferenceToShortImportByLongName(com.google.javascript.jscomp.JSError)>(r0);     case 18: goto $r5 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForRedundantNullabilityModifierJsDoc(com.google.javascript.jscomp.JSError)>(r0);     case 19: goto $r4 = virtualinvoke r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.refactoring.SuggestedFix getFixForConstantCaseErrors(com.google.javascript.jscomp.JSError)>(r0);     default: goto return null; };	$r16 = new com.google.javascript.refactoring.SuggestedFix$Builder;	specialinvoke $r16.<com.google.javascript.refactoring.SuggestedFix$Builder: void <init>()>();	$r18 = virtualinvoke r0.<com.google.javascript.jscomp.JSError: com.google.javascript.rhino.Node getNode()>();	$r17 = r3.<com.google.javascript.refactoring.ErrorToFixMapper: com.google.javascript.jscomp.AbstractCompiler compiler>;	$r19 = virtualinvoke $r16.<com.google.javascript.refactoring.SuggestedFix$Builder: com.google.javascript.refactoring.SuggestedFix$Builder attachMatchedNodeInfo(com.google.javascript.rhino.Node,com.google.javascript.jscomp.AbstractCompiler)>($r18, $r17);	$r21 = virtualinvoke $r19.<com.google.javascript.refactoring.SuggestedFix$Builder: com.google.javascript.refactoring.SuggestedFix$Builder setDescription(java.lang.String)>("Remove debugger statement");	$r20 = virtualinvoke r0.<com.google.javascript.jscomp.JSError: com.google.javascript.rhino.Node getNode()>();	$r22 = virtualinvoke $r21.<com.google.javascript.refactoring.SuggestedFix$Builder: com.google.javascript.refactoring.SuggestedFix$Builder delete(com.google.javascript.rhino.Node)>($r20);	$r23 = virtualinvoke $r22.<com.google.javascript.refactoring.SuggestedFix$Builder: com.google.javascript.refactoring.SuggestedFix build()>();	return $r23
;block_num 3