(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var3881 0)
(declare-sort var3139 0)
(declare-sort var2894 0)
(declare-sort var1915 0)
(declare-sort var1333 0)
(declare-sort var1994 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun getType/1129309445 (var3881) var2894)
(declare-fun ordinal/-291641772 (var1915) Int)
(declare-fun cast-from-var2894-to-var1915 (var2894) var1915)
(declare-fun var1333-init () var1333)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun append/-1031950772 (String var1994) String)
(declare-fun cast-from-var2894-to-var1994 (var2894) var1994)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-fun <init>/875830710 (var1333 String) void)
(declare-const null-var3881 var3881)
(declare-const var3139-$SwitchMap$com$google$protobuf$Descriptors$FieldDescriptor$Type (Array Int Int))
(declare-const var3811 var3881) ; Statement: r0 := @parameter0: com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor 
(assert (not (= var3811 null-var3881)))
(define-const var2810 (Array Int Int) var3139-$SwitchMap$com$google$protobuf$Descriptors$FieldDescriptor$Type) ; Statement: $r1 = <com.google.javascript.jscomp.jarjar.com.google.protobuf.DescriptorMessageInfoFactory$3: int[] $SwitchMap$com$google$protobuf$Descriptors$FieldDescriptor$Type> 
(assert true)
(define-const var379 var2894 (getType/1129309445 var3811)) ; Statement: $r2 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor$Type getType()>() 
(assert true)
(define-const var1254 Int (ordinal/-291641772 (cast-from-var2894-to-var1915 var379))) ; Statement: $i0 = virtualinvoke $r2.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor$Type: int ordinal()>() 
(define-const var607 Int (select var2810 var1254)) ; Statement: $i1 = $r1[$i0] 
 ; Statement: tableswitch($i1) {     case 1: goto $z31 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 2: goto $z30 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 3: goto $z28 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 4: goto $z26 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 5: goto $z24 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 6: goto $z22 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 7: goto $z20 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 8: goto $z19 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 9: goto $z17 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 10: goto $z15 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 11: goto $z13 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isMapField()>();     case 12: goto $z11 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 13: goto $z9 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 14: goto $z7 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 15: goto $z5 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 16: goto $z4 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 17: goto $z2 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 18: goto $z0 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     default: goto $r18 = new java.lang.IllegalArgumentException; } 
(assert (and (not (= var607 18)) (and (not (= var607 17)) (and (not (= var607 16)) (and (not (= var607 15)) (and (not (= var607 14)) (and (not (= var607 13)) (and (not (= var607 12)) (and (not (= var607 11)) (and (not (= var607 10)) (and (not (= var607 9)) (and (not (= var607 8)) (and (not (= var607 7)) (and (not (= var607 6)) (and (not (= var607 5)) (and (not (= var607 4)) (and (not (= var607 3)) (and (not (= var607 2)) (and (not (= var607 1)) true))))))))))))))))))) ; Intersect: Negate: Cond: $i1 == 18   and Intersect: Negate: Cond: $i1 == 17   and Intersect: Negate: Cond: $i1 == 16   and Intersect: Negate: Cond: $i1 == 15   and Intersect: Negate: Cond: $i1 == 14   and Intersect: Negate: Cond: $i1 == 13   and Intersect: Negate: Cond: $i1 == 12   and Intersect: Negate: Cond: $i1 == 11   and Intersect: Negate: Cond: $i1 == 10   and Intersect: Negate: Cond: $i1 == 9   and Intersect: Negate: Cond: $i1 == 8   and Intersect: Negate: Cond: $i1 == 7   and Intersect: Negate: Cond: $i1 == 6   and Intersect: Negate: Cond: $i1 == 5   and Intersect: Negate: Cond: $i1 == 4   and Intersect: Negate: Cond: $i1 == 3   and Intersect: Negate: Cond: $i1 == 2   and Intersect: Negate: Cond: $i1 == 1   and Non Conditional                  
(define-const var3915 var1333 var1333-init) ; Statement: $r18 = new java.lang.IllegalArgumentException 
(define-const var3211 String String-init) ; Statement: $r19 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var3211)) ; Statement: specialinvoke $r19.<java.lang.StringBuilder: void <init>()>() 
(declare-const var3211!1 String)
(assert (= var3211!1 ""))
(assert true)
(define-const var3324 String (append/672562846 var3211!1 "Unsupported field type: ")) ; Statement: $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported field type: ") 
(declare-const var3211!2 String)
(assert (= var3211!2 (str.++ var3211!1 "Unsupported field type: ")))
(assert true)
(define-const var441 var2894 (getType/1129309445 var3811)) ; Statement: $r20 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor$Type getType()>() 
(assert true)
(define-const var3177 String (append/-1031950772 var3324 (cast-from-var2894-to-var1994 var441))) ; Statement: $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20) 
(declare-const var3324!1 String)
(assert (str.prefixof var3324 var3324!1))
(assert true)
(define-const var3059 String (toString/-2075883882 var3177)) ; Statement: $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (<init>/875830710 var3915 var3059)) ; Statement: specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23) 

(declare-const var3915!1 var1333)
(declare-const var3059!1 String)
 ; Statement: throw $r18 
(check-sat)
(get-model)
(get-unsat-core)
; {getType/1129309445=([com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor], com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor$Type), ordinal/-291641772=([java.lang.Enum], int), cast-from-var2894-to-var1915=([com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor$Type], java.lang.Enum), var1333-init=([], java.lang.IllegalArgumentException), String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), append/-1031950772=([java.lang.StringBuilder, java.lang.Object], java.lang.StringBuilder), cast-from-var2894-to-var1994=([com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor$Type], java.lang.Object), toString/-2075883882=([java.lang.StringBuilder], java.lang.String), <init>/875830710=([java.lang.IllegalArgumentException, java.lang.String], void)}
; {var3881=com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor, var3811=r0, var3139=com.google.javascript.jscomp.jarjar.com.google.protobuf.DescriptorMessageInfoFactory$3, var2810=$r1, var2894=com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor$Type, var379=$r2, var1915=java.lang.Enum, var1254=$i0, var607=$i1, var1333=java.lang.IllegalArgumentException, var3915=$r18, var3211=$r19, var3324=$r21, var441=$r20, var1994=java.lang.Object, var3177=$r22, var3059=$r23}
; {com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor=var3881, r0=var3811, com.google.javascript.jscomp.jarjar.com.google.protobuf.DescriptorMessageInfoFactory$3=var3139, $r1=var2810, com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor$Type=var2894, $r2=var379, java.lang.Enum=var1915, $i0=var1254, $i1=var607, java.lang.IllegalArgumentException=var1333, $r18=var3915, $r19=var3211, $r21=var3324, $r20=var441, java.lang.Object=var1994, $r22=var3177, $r23=var3059}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,"<java.lang.StringBuilder: java.lang.String toString()>": 1}
;stmts r0 := @parameter0: com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor;	$r1 = <com.google.javascript.jscomp.jarjar.com.google.protobuf.DescriptorMessageInfoFactory$3: int[] $SwitchMap$com$google$protobuf$Descriptors$FieldDescriptor$Type>;	$r2 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor$Type getType()>();	$i0 = virtualinvoke $r2.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor$Type: int ordinal()>();	$i1 = $r1[$i0];	tableswitch($i1) {     case 1: goto $z31 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 2: goto $z30 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 3: goto $z28 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 4: goto $z26 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 5: goto $z24 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 6: goto $z22 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 7: goto $z20 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 8: goto $z19 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 9: goto $z17 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 10: goto $z15 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 11: goto $z13 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isMapField()>();     case 12: goto $z11 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 13: goto $z9 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 14: goto $z7 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 15: goto $z5 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 16: goto $z4 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 17: goto $z2 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     case 18: goto $z0 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: boolean isRepeated()>();     default: goto $r18 = new java.lang.IllegalArgumentException; };	$r18 = new java.lang.IllegalArgumentException;	$r19 = new java.lang.StringBuilder;	specialinvoke $r19.<java.lang.StringBuilder: void <init>()>();	$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Unsupported field type: ");	$r20 = virtualinvoke r0.<com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor: com.google.javascript.jscomp.jarjar.com.google.protobuf.Descriptors$FieldDescriptor$Type getType()>();	$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);	$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();	specialinvoke $r18.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r23);	throw $r18
;block_num 2