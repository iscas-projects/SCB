(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var2831 0)
(declare-sort var913 0)
(declare-sort var1991 0)
(declare-sort var457 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun hashCode/-467973558 (String) Int)
(declare-fun getNativeType/1172335613 (var2831 var1991) var457)
(declare-const null-var2831 var2831)
(declare-const null-String String)
(declare-const var1991-SYMBOL_TYPE var1991)
(declare-const var2566 var2831) ; Statement: r1 := @this: com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter 
(assert (not (= var2566 null-var2831)))
(declare-const var1714 String) ; Statement: r0 := @parameter0: java.lang.String 
(assert (not (= var1714 null-String)))
(define-const var536 Int (- 1)) ; Statement: b1 = -1 
(assert true)
(define-const var2208 Int (hashCode/-467973558 var1714)) ; Statement: $i0 = virtualinvoke r0.<java.lang.String: int hashCode()>() 
 ; Statement: lookupswitch($i0) {     case -1038130864: goto $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("undefined");     case -1034364087: goto $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("number");     case -1023368385: goto $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("object");     case -891985903: goto $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("string");     case -887523944: goto $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("symbol");     case 64711720: goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("boolean");     case 1380938712: goto $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("function");     default: goto tableswitch(b1) {     case 0: goto $r19 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative NUMBER_TYPE>;     case 1: goto $r17 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative BOOLEAN_TYPE>;     case 2: goto $r15 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative STRING_TYPE>;     case 3: goto $r13 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative SYMBOL_TYPE>;     case 4: goto $r11 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative VOID_TYPE>;     case 5: goto $r6 = r1.<com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter: com.google.javascript.rhino.jstype.JSTypeRegistry typeRegistry>;     case 6: goto $r2 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative FUNCTION_TYPE>;     default: goto return null; }; } 
(assert (and (not (= var2208 1380938712)) (and (not (= var2208 64711720)) (and (not (= var2208 (- 887523944))) (and (not (= var2208 (- 891985903))) (and (not (= var2208 (- 1023368385))) (and (not (= var2208 (- 1034364087))) (and (not (= var2208 (- 1038130864))) true)))))))) ; Intersect: Negate: Cond: $i0 == 1380938712   and Intersect: Negate: Cond: $i0 == 64711720   and Intersect: Negate: Cond: $i0 == -887523944   and Intersect: Negate: Cond: $i0 == -891985903   and Intersect: Negate: Cond: $i0 == -1023368385   and Intersect: Negate: Cond: $i0 == -1034364087   and Intersect: Negate: Cond: $i0 == -1038130864   and Non Conditional       
 ; Statement: tableswitch(b1) {     case 0: goto $r19 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative NUMBER_TYPE>;     case 1: goto $r17 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative BOOLEAN_TYPE>;     case 2: goto $r15 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative STRING_TYPE>;     case 3: goto $r13 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative SYMBOL_TYPE>;     case 4: goto $r11 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative VOID_TYPE>;     case 5: goto $r6 = r1.<com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter: com.google.javascript.rhino.jstype.JSTypeRegistry typeRegistry>;     case 6: goto $r2 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative FUNCTION_TYPE>;     default: goto return null; } 
(assert (and (= var536 3) (and (not (= var536 2)) (and (not (= var536 1)) (and (not (= var536 0)) true))))) ; Intersect: Cond: b1 == 3  and Intersect: Negate: Cond: b1 == 2   and Intersect: Negate: Cond: b1 == 1   and Intersect: Negate: Cond: b1 == 0   and Non Conditional    
(define-const var1445 var1991 var1991-SYMBOL_TYPE) ; Statement: $r13 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative SYMBOL_TYPE> 
(assert true)
(define-const var57 var457 (getNativeType/1172335613 var2566 var1445)) ; Statement: $r14 = virtualinvoke r1.<com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter: com.google.javascript.rhino.jstype.JSType getNativeType(com.google.javascript.rhino.jstype.JSTypeNative)>($r13) 
 ; Statement: return $r14 
(check-sat)
(get-model)
(get-unsat-core)
; {hashCode/-467973558=([java.lang.String], int), getNativeType/1172335613=([com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter, com.google.javascript.rhino.jstype.JSTypeNative], com.google.javascript.rhino.jstype.JSType)}
; {var2831=com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter, var2566=r1, var1714=r0, var913=null_type, var536=b1, var2208=$i0, var1991=com.google.javascript.rhino.jstype.JSTypeNative, var1445=$r13, var457=com.google.javascript.rhino.jstype.JSType, var57=$r14}
; {com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter=var2831, r1=var2566, r0=var1714, null_type=var913, b1=var536, $i0=var2208, com.google.javascript.rhino.jstype.JSTypeNative=var1991, $r13=var1445, com.google.javascript.rhino.jstype.JSType=var457, $r14=var57}
;seq <java.lang.String: int hashCode()>
;cnt {"<java.lang.String: int hashCode()>": 1}
;stmts r1 := @this: com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter;	r0 := @parameter0: java.lang.String;	b1 = -1;	$i0 = virtualinvoke r0.<java.lang.String: int hashCode()>();	lookupswitch($i0) {     case -1038130864: goto $z6 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("undefined");     case -1034364087: goto $z5 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("number");     case -1023368385: goto $z4 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("object");     case -891985903: goto $z3 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("string");     case -887523944: goto $z2 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("symbol");     case 64711720: goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("boolean");     case 1380938712: goto $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>("function");     default: goto tableswitch(b1) {     case 0: goto $r19 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative NUMBER_TYPE>;     case 1: goto $r17 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative BOOLEAN_TYPE>;     case 2: goto $r15 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative STRING_TYPE>;     case 3: goto $r13 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative SYMBOL_TYPE>;     case 4: goto $r11 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative VOID_TYPE>;     case 5: goto $r6 = r1.<com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter: com.google.javascript.rhino.jstype.JSTypeRegistry typeRegistry>;     case 6: goto $r2 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative FUNCTION_TYPE>;     default: goto return null; }; };	tableswitch(b1) {     case 0: goto $r19 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative NUMBER_TYPE>;     case 1: goto $r17 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative BOOLEAN_TYPE>;     case 2: goto $r15 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative STRING_TYPE>;     case 3: goto $r13 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative SYMBOL_TYPE>;     case 4: goto $r11 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative VOID_TYPE>;     case 5: goto $r6 = r1.<com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter: com.google.javascript.rhino.jstype.JSTypeRegistry typeRegistry>;     case 6: goto $r2 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative FUNCTION_TYPE>;     default: goto return null; };	$r13 = <com.google.javascript.rhino.jstype.JSTypeNative: com.google.javascript.rhino.jstype.JSTypeNative SYMBOL_TYPE>;	$r14 = virtualinvoke r1.<com.google.javascript.jscomp.type.ChainableReverseAbstractInterpreter: com.google.javascript.rhino.jstype.JSType getNativeType(com.google.javascript.rhino.jstype.JSTypeNative)>($r13);	return $r14
;block_num 3