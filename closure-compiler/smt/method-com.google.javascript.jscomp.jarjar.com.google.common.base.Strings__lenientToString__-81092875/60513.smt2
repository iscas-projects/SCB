(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var1851 0)
(declare-sort var1069 0)
(declare-sort var1348 0)
(declare-sort var119 0)
(declare-sort var2340 0)
(declare-sort var1034 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(declare-fun getClass/1258963082 (var1851) ClassObject)
(declare-fun getName/-1958580599 (ClassObject) String)
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun append/-1166366385 (String Int) String)
(declare-fun var1348_identityHashCode/1096208673 (var1851) Int)
(declare-fun Int_toHexString/1865784998 (Int) String)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-fun var119_getLogger/-1440108740 (String) var119)
(declare-fun log/-65407072 (var119 var2340 String var1034) void)
(declare-fun cast-from-var1069-to-var1034 (var1069) var1034)
(declare-fun cast-from-var1069-to-var1851 (var1069) var1851)
(declare-const null-var1851 var1851)
(declare-const null-var1069 var1069)
(declare-const var2340-WARNING var2340)
(declare-const var1133 var1851) ; Statement: r0 := @parameter0: java.lang.Object 
(assert (not (= var1133 null-var1851)))
 ; Statement: if r0 != null goto $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>() 
(assert (not (not (= var1133 null-var1851)))) ; Negate: Cond: r0 != null  
(declare-const var1918 var1069) ; Statement: $r2 := @caughtexception 
(assert (not (= var1918 null-var1069)))
(define-const var2438 String String-init) ; Statement: $r3 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var2438)) ; Statement: specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() 
(declare-const var2438!1 String)
(assert (= var2438!1 ""))
(assert true)
(define-const var2730 ClassObject (getClass/1258963082 var1133)) ; Statement: $r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() 
(assert true)
(define-const var3707 String (getName/-1958580599 var2730)) ; Statement: $r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>() 
(assert true)
(define-const var3922 String (append/672562846 var2438!1 var3707)) ; Statement: $r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) 
(declare-const var2438!2 String)
(assert (= var2438!2 (str.++ var2438!1 var3707)))
(assert true)
(define-const var1124 String (append/-1166366385 var3922 64)) ; Statement: $r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64) 
(declare-const var3922!1 String)
(assert (str.prefixof var3922 var3922!1))
(define-const var2882 Int (var1348_identityHashCode/1096208673 var1133)) ; Statement: $i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0) 
(define-const var78 String (Int_toHexString/1865784998 var2882)) ; Statement: $r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0) 
(assert true)
(define-const var3928 String (append/672562846 var1124 var78)) ; Statement: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) 
(declare-const var1124!1 String)
(assert (= var1124!1 (str.++ var1124 var78)))
(assert true)
(define-const var2790 String (toString/-2075883882 var3928)) ; Statement: r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() 
(define-const var628 var119 (var119_getLogger/-1440108740 "com.google.javascript.jscomp.jarjar.com.google.common.base.Strings")) ; Statement: $r16 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>("com.google.javascript.jscomp.jarjar.com.google.common.base.Strings") 
(define-const var317 var2340 var2340-WARNING) ; Statement: $r12 = <java.util.logging.Level: java.util.logging.Level WARNING> 
(define-const var3899 String String-init) ; Statement: $r11 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var3899)) ; Statement: specialinvoke $r11.<java.lang.StringBuilder: void <init>()>() 
(declare-const var3899!1 String)
(assert (= var3899!1 ""))
(assert true)
(define-const var732 String (append/672562846 var3899!1 "Exception during lenientFormat for ")) ; Statement: $r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception during lenientFormat for ") 
(declare-const var3899!2 String)
(assert (= var3899!2 (str.++ var3899!1 "Exception during lenientFormat for ")))
(assert true)
(define-const var2289 String (append/672562846 var732 var2790)) ; Statement: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10) 
(declare-const var732!1 String)
(assert (= var732!1 (str.++ var732 var2790)))
(assert true)
(define-const var3163 String (toString/-2075883882 var2289)) ; Statement: $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (log/-65407072 var628 var317 var3163 (cast-from-var1069-to-var1034 var1918))) ; Statement: virtualinvoke $r16.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r12, $r15, $r2) 

(declare-const var628!1 var119)
(declare-const var317!1 var2340)
(declare-const var3163!1 String)
(declare-const var1918!1 var1069)
(define-const var32 String String-init) ; Statement: $r17 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var32)) ; Statement: specialinvoke $r17.<java.lang.StringBuilder: void <init>()>() 
(declare-const var32!1 String)
(assert (= var32!1 ""))
(assert true)
(define-const var2982 String (append/672562846 var32!1 "<")) ; Statement: $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<") 
(declare-const var32!2 String)
(assert (= var32!2 (str.++ var32!1 "<")))
(assert true)
(define-const var3304 String (append/672562846 var2982 var2790)) ; Statement: $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10) 
(declare-const var2982!1 String)
(assert (= var2982!1 (str.++ var2982 var2790)))
(assert true)
(define-const var36 String (append/672562846 var3304 " threw ")) ; Statement: $r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" threw ") 
(declare-const var3304!1 String)
(assert (= var3304!1 (str.++ var3304 " threw ")))
(assert true)
(define-const var2123 ClassObject (getClass/1258963082 (cast-from-var1069-to-var1851 var1918!1))) ; Statement: $r20 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>() 
(assert true)
(define-const var1071 String (getName/-1958580599 var2123)) ; Statement: $r21 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>() 
(assert true)
(define-const var1986 String (append/672562846 var36 var1071)) ; Statement: $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21) 
(declare-const var36!1 String)
(assert (= var36!1 (str.++ var36 var1071)))
(assert true)
(define-const var3906 String (append/672562846 var1986 ">")) ; Statement: $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">") 
(declare-const var1986!1 String)
(assert (= var1986!1 (str.++ var1986 ">")))
(assert true)
(define-const var992 String (toString/-2075883882 var3906)) ; Statement: $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>() 
 ; Statement: return $r25 
(check-sat)
(get-model)
(get-unsat-core)
; {String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), getClass/1258963082=([java.lang.Object], java.lang.Class), getName/-1958580599=([java.lang.Class], java.lang.String), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), append/-1166366385=([java.lang.StringBuilder, char], java.lang.StringBuilder), var1348_identityHashCode/1096208673=([java.lang.Object], int), Int_toHexString/1865784998=([int], java.lang.String), toString/-2075883882=([java.lang.StringBuilder], java.lang.String), var119_getLogger/-1440108740=([java.lang.String], java.util.logging.Logger), log/-65407072=([java.util.logging.Logger, java.util.logging.Level, java.lang.String, java.lang.Throwable], void), cast-from-var1069-to-var1034=([java.lang.Exception], java.lang.Throwable), cast-from-var1069-to-var1851=([java.lang.Exception], java.lang.Object)}
; {var1851=java.lang.Object, var1133=r0, var1069=java.lang.Exception, var1918=$r2, var2438=$r3, var2730=$r4, var3707=$r5, var3922=$r6, var1124=$r8, var1348=java.lang.System, var2882=$i0, var78=$r7, var3928=$r9, var2790=r10, var119=java.util.logging.Logger, var628=$r16, var2340=java.util.logging.Level, var317=$r12, var3899=$r11, var732=$r13, var2289=$r14, var3163=$r15, var1034=java.lang.Throwable, var32=$r17, var2982=$r18, var3304=$r19, var36=$r22, var2123=$r20, var1071=$r21, var1986=$r23, var3906=$r24, var992=$r25}
; {java.lang.Object=var1851, r0=var1133, java.lang.Exception=var1069, $r2=var1918, $r3=var2438, $r4=var2730, $r5=var3707, $r6=var3922, $r8=var1124, java.lang.System=var1348, $i0=var2882, $r7=var78, $r9=var3928, r10=var2790, java.util.logging.Logger=var119, $r16=var628, java.util.logging.Level=var2340, $r12=var317, $r11=var3899, $r13=var732, $r14=var2289, $r15=var3163, java.lang.Throwable=var1034, $r17=var32, $r18=var2982, $r19=var3304, $r22=var36, $r20=var2123, $r21=var1071, $r23=var1986, $r24=var3906, $r25=var992}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 3,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 9,"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,"<java.lang.StringBuilder: java.lang.String toString()>": 3}
;stmts r0 := @parameter0: java.lang.Object;	if r0 != null goto $r1 = virtualinvoke r0.<java.lang.Object: java.lang.String toString()>();	$r2 := @caughtexception;	$r3 = new java.lang.StringBuilder;	specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();	$r4 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();	$r5 = virtualinvoke $r4.<java.lang.Class: java.lang.String getName()>();	$r6 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);	$r8 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(64);	$i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0);	$r7 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>($i0);	$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);	r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();	$r16 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>("com.google.javascript.jscomp.jarjar.com.google.common.base.Strings");	$r12 = <java.util.logging.Level: java.util.logging.Level WARNING>;	$r11 = new java.lang.StringBuilder;	specialinvoke $r11.<java.lang.StringBuilder: void <init>()>();	$r13 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Exception during lenientFormat for ");	$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);	$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.String toString()>();	virtualinvoke $r16.<java.util.logging.Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r12, $r15, $r2);	$r17 = new java.lang.StringBuilder;	specialinvoke $r17.<java.lang.StringBuilder: void <init>()>();	$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("<");	$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10);	$r22 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" threw ");	$r20 = virtualinvoke $r2.<java.lang.Object: java.lang.Class getClass()>();	$r21 = virtualinvoke $r20.<java.lang.Class: java.lang.String getName()>();	$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r21);	$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(">");	$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>();	return $r25
;block_num 2