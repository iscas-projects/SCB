(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var121 0)
(declare-sort var3256 0)
(declare-sort var2964 0)
(declare-sort var2534 0)
(declare-sort var2854 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-const var2964!class ClassObject)
(declare-fun getClassLoader/-563698447 (ClassObject) var3256)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun var2964_objectId/1952731062 (var2534) String)
(declare-fun cast-from-var3256-to-var2534 (var3256) var2534)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-fun var2964_logDiagnostic/1268238408 (String) void)
(declare-fun ClassObject_forName/696536127 (String Bool var3256) ClassObject)
(declare-fun getMessage/849299655 (var2854) String)
(declare-const null-String String)
(declare-const null-var3256 var3256)
(declare-const null-var2854 var2854)
(declare-const var2157 String) ; Statement: r3 := @parameter0: java.lang.String 
(assert (not (= var2157 null-String)))
(declare-const var882 var3256) ; Statement: r10 := @parameter1: java.lang.ClassLoader 
(assert (not (= var882 null-var3256)))
(define-const var3273 ClassObject var2964!class) ; Statement: $r0 = class "Lorg/apache/commons/logging/LogFactory;" 
(assert true)
(define-const var1273 var3256 (getClassLoader/-563698447 var3273)) ; Statement: r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>() 
(define-const var3039 String String-init) ; Statement: $r2 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var3039)) ; Statement: specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() 
(declare-const var3039!1 String)
(assert (= var3039!1 ""))
(assert true)
(define-const var872 String (append/672562846 var3039!1 "Checking if class \u0027")) ; Statement: $r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking if class \'") 
(declare-const var3039!2 String)
(assert (= var3039!2 (str.++ var3039!1 "Checking if class \u0027")))
(assert true)
(define-const var660 String (append/672562846 var872 var2157)) ; Statement: $r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) 
(declare-const var872!1 String)
(assert (= var872!1 (str.++ var872 var2157)))
(assert true)
(define-const var76 String (append/672562846 var660 "\u0027 is available in class loader ")) ; Statement: $r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is available in class loader ") 
(declare-const var660!1 String)
(assert (= var660!1 (str.++ var660 "\u0027 is available in class loader ")))
(define-const var2755 String (var2964_objectId/1952731062 (cast-from-var3256-to-var2534 var1273))) ; Statement: $r6 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r1) 
(assert true)
(define-const var3563 String (append/672562846 var76 var2755)) ; Statement: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) 
(declare-const var76!1 String)
(assert (= var76!1 (str.++ var76 var2755)))
(assert true)
(define-const var754 String (toString/-2075883882 var3563)) ; Statement: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>() 
;(assert (var2964_logDiagnostic/1268238408 var754)) ; Statement: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9) 

(declare-const var754!1 String)
(assert true) ; Non Conditional
;(assert (ClassObject_forName/696536127 var2157 (ite (= 1 1) true false) var882)) ; Statement: staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r3, 1, r10) 

(declare-const var2157!1 String)
(declare-const var3521 Int)
(declare-const var882!1 var3256)
(assert true) ; Handling Exception: java.lang.Throwable 
(declare-const var2978 var2854) ; Statement: $r11 := @caughtexception 
(assert (not (= var2978 null-var2854)))
(define-const var172 String String-init) ; Statement: $r12 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var172)) ; Statement: specialinvoke $r12.<java.lang.StringBuilder: void <init>()>() 
(declare-const var172!1 String)
(assert (= var172!1 ""))
(assert true)
(define-const var339 String (append/672562846 var172!1 "Failed to load class \u0027")) ; Statement: $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load class \'") 
(declare-const var172!2 String)
(assert (= var172!2 (str.++ var172!1 "Failed to load class \u0027")))
(assert true)
(define-const var2007 String (append/672562846 var339 var2157!1)) ; Statement: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) 
(declare-const var339!1 String)
(assert (= var339!1 (str.++ var339 var2157!1)))
(assert true)
(define-const var781 String (append/672562846 var2007 "\u0027 from class loader ")) ; Statement: $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' from class loader ") 
(declare-const var2007!1 String)
(assert (= var2007!1 (str.++ var2007 "\u0027 from class loader ")))
(define-const var3016 String (var2964_objectId/1952731062 (cast-from-var3256-to-var2534 var1273))) ; Statement: $r15 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r1) 
(assert true)
(define-const var1697 String (append/672562846 var781 var3016)) ; Statement: $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) 
(declare-const var781!1 String)
(assert (= var781!1 (str.++ var781 var3016)))
(assert true)
(define-const var2814 String (append/672562846 var1697 ": ")) ; Statement: $r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ") 
(declare-const var1697!1 String)
(assert (= var1697!1 (str.++ var1697 ": ")))
(assert true)
(define-const var2390 String (getMessage/849299655 var2978)) ; Statement: $r18 = virtualinvoke $r11.<java.lang.Throwable: java.lang.String getMessage()>() 
(assert true)
(define-const var2070 String (append/672562846 var2814 var2390)) ; Statement: $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18) 
(declare-const var2814!1 String)
(assert (= var2814!1 (str.++ var2814 var2390)))
(assert true)
(define-const var3053 String (toString/-2075883882 var2070)) ; Statement: $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>() 
;(assert (var2964_logDiagnostic/1268238408 var3053)) ; Statement: staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r21) 

(declare-const var3053!1 String)
 ; Statement: return 0 
(check-sat)
(get-model)
(get-unsat-core)
; {getClassLoader/-563698447=([java.lang.Class], java.lang.ClassLoader), String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), var2964_objectId/1952731062=([java.lang.Object], java.lang.String), cast-from-var3256-to-var2534=([java.lang.ClassLoader], java.lang.Object), toString/-2075883882=([java.lang.StringBuilder], java.lang.String), var2964_logDiagnostic/1268238408=([java.lang.String], void), ClassObject_forName/696536127=([java.lang.String, boolean, java.lang.ClassLoader], java.lang.Class), getMessage/849299655=([java.lang.Throwable], java.lang.String)}
; {var2157=r3, var121=null_type, var3256=java.lang.ClassLoader, var882=r10, var2964=org.apache.commons.logging.LogFactory, var3273=$r0, var1273=r1, var3039=$r2, var872=$r4, var660=$r5, var76=$r7, var2534=java.lang.Object, var2755=$r6, var3563=$r8, var754=$r9, var3521=1, var2854=java.lang.Throwable, var2978=$r11, var172=$r12, var339=$r13, var2007=$r14, var781=$r16, var3016=$r15, var1697=$r17, var2814=$r19, var2390=$r18, var2070=$r20, var3053=$r21}
; {r3=var2157, null_type=var121, java.lang.ClassLoader=var3256, r10=var882, org.apache.commons.logging.LogFactory=var2964, $r0=var3273, r1=var1273, $r2=var3039, $r4=var872, $r5=var660, $r7=var76, java.lang.Object=var2534, $r6=var2755, $r8=var3563, $r9=var754, 1=var3521, java.lang.Throwable=var2854, $r11=var2978, $r12=var172, $r13=var339, $r14=var2007, $r16=var781, $r15=var3016, $r17=var1697, $r19=var2814, $r18=var2390, $r20=var2070, $r21=var3053}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 2,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 10,"<java.lang.StringBuilder: java.lang.String toString()>": 2}
;stmts r3 := @parameter0: java.lang.String;	r10 := @parameter1: java.lang.ClassLoader;	$r0 = class "Lorg/apache/commons/logging/LogFactory;";	r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();	$r2 = new java.lang.StringBuilder;	specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();	$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Checking if class \'");	$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);	$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' is available in class loader ");	$r6 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r1);	$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);	$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>();	staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9);	staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r3, 1, r10);	$r11 := @caughtexception;	$r12 = new java.lang.StringBuilder;	specialinvoke $r12.<java.lang.StringBuilder: void <init>()>();	$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load class \'");	$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);	$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\' from class loader ");	$r15 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r1);	$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);	$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");	$r18 = virtualinvoke $r11.<java.lang.Throwable: java.lang.String getMessage()>();	$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18);	$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>();	staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r21);	return 0
;block_num 3