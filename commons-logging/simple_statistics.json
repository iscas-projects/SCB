[
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk13LumberjackLogger__debug__3192565\\38.smt2",
        "z3": {
            "memory": 29220864,
            "run_time": 0.13698148727416992,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3982:\r\n  ;;   var3982!val!0 var3982!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3982!val!0 () var3982)\r\n  (declare-fun var3982!val!1 () var3982)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3982)) (or (= x var3982!val!0) (= x var3982!val!1)))\r\n  ;; -----------\r\n  ;; universe for var690:\r\n  ;;   var690!val!1 var690!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var690!val!1 () var690)\r\n  (declare-fun var690!val!0 () var690)\r\n  ;; cardinality constraint:\r\n  (forall ((x var690)) (or (= x var690!val!1) (= x var690!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3586:\r\n  ;;   var3586!val!1 var3586!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3586!val!1 () var3586)\r\n  (declare-fun var3586!val!0 () var3586)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3586)) (or (= x var3586!val!1) (= x var3586!val!0)))\r\n  ;; -----------\r\n  (define-fun var1117 () var690\r\n    var690!val!0)\r\n  (define-fun null-var3586 () var3586\r\n    var3586!val!1)\r\n  (define-fun var347 () var2172\r\n    var2172-FINE)\r\n  (define-fun var552 () var3982\r\n    var3982!val!0)\r\n  (define-fun var3922 () String\r\n    (String_valueOf/-333372740 var1117))\r\n  (define-fun null-var3982 () var3982\r\n    var3982!val!1)\r\n  (define-fun null-var690 () var690\r\n    var690!val!1)\r\n  (define-fun var3846 () var3586\r\n    var3586!val!0)\r\n  (define-fun var2172-FINE () var2172\r\n    var2172!val!0)\r\n  (define-fun var552!1 () var3982\r\n    var3982!val!0)\r\n  (define-fun var3922!1 () String\r\n    \"\")\r\n  (define-fun var347!1 () var2172\r\n    var2172!val!0)\r\n  (define-fun var3846!1 () var3586\r\n    var3586!val!1)\r\n  (define-fun log/-1292381875 ((x!0 var3982)\r\n   (x!1 var2172)\r\n   (x!2 String)\r\n   (x!3 var3586)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var690)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6610944,
            "run_time": 0.01482701301574707,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3982 is 2\r\n; rep: (as @var3982_0 var3982)\r\n; rep: (as @var3982_1 var3982)\r\n; cardinality of var690 is 2\r\n; rep: (as @var690_0 var690)\r\n; rep: (as @var690_1 var690)\r\n; cardinality of var3586 is 2\r\n; rep: (as @var3586_0 var3586)\r\n; rep: (as @var3586_1 var3586)\r\n; cardinality of var2172 is 1\r\n; rep: (as @var2172_0 var2172)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_444 var690)) String \"\")\r\n(define-fun log/-1292381875 ((BOUND_VARIABLE_447 var3982) (BOUND_VARIABLE_448 var2172) (BOUND_VARIABLE_449 String) (BOUND_VARIABLE_450 var3586)) void (as @void_0 void))\r\n(define-fun null-var3982 () var3982 (as @var3982_0 var3982))\r\n(define-fun null-var690 () var690 (as @var690_0 var690))\r\n(define-fun null-var3586 () var3586 (as @var3586_0 var3586))\r\n(define-fun var2172-FINE () var2172 (as @var2172_0 var2172))\r\n(define-fun var552 () var3982 (as @var3982_1 var3982))\r\n(define-fun var1117 () var690 (as @var690_1 var690))\r\n(define-fun var3846 () var3586 (as @var3586_1 var3586))\r\n(define-fun var552!1 () var3982 (as @var3982_0 var3982))\r\n(define-fun var347!1 () var2172 (as @var2172_0 var2172))\r\n(define-fun var3922!1 () String \"\")\r\n(define-fun var3846!1 () var3586 (as @var3586_0 var3586))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33513472,
            "run_time": 0.12337565422058105,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3982:\n  ;;   var3982!val!0 var3982!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3982!val!0 () var3982)\n  (declare-fun var3982!val!1 () var3982)\n  ;; cardinality constraint:\n  (forall ((x var3982)) (or (= x var3982!val!0) (= x var3982!val!1)))\n  ;; -----------\n  ;; universe for var690:\n  ;;   var690!val!1 var690!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var690!val!1 () var690)\n  (declare-fun var690!val!0 () var690)\n  ;; cardinality constraint:\n  (forall ((x var690)) (or (= x var690!val!1) (= x var690!val!0)))\n  ;; -----------\n  ;; universe for var3586:\n  ;;   var3586!val!1 var3586!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3586!val!1 () var3586)\n  (declare-fun var3586!val!0 () var3586)\n  ;; cardinality constraint:\n  (forall ((x var3586)) (or (= x var3586!val!1) (= x var3586!val!0)))\n  ;; -----------\n  (define-fun var1117 () var690\n    var690!val!0)\n  (define-fun null-var3586 () var3586\n    var3586!val!1)\n  (define-fun var3922 () String\n    (String_valueOf/-333372740 var1117))\n  (define-fun var552 () var3982\n    var3982!val!0)\n  (define-fun var347 () var2172\n    var2172-FINE)\n  (define-fun null-var3982 () var3982\n    var3982!val!1)\n  (define-fun null-var690 () var690\n    var690!val!1)\n  (define-fun var3846 () var3586\n    var3586!val!0)\n  (define-fun var2172-FINE () var2172\n    var2172!val!0)\n  (define-fun var552!1 () var3982\n    var3982!val!0)\n  (define-fun var3922!1 () String\n    \"\")\n  (define-fun var347!1 () var2172\n    var2172!val!0)\n  (define-fun var3846!1 () var3586\n    var3586!val!1)\n  (define-fun log/-1292381875 ((x!0 var3982)\n   (x!1 var2172)\n   (x!2 String)\n   (x!3 var3586)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var690)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141217792,
            "run_time": 1.8488402366638184,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3846 () var3586 var3586!12)\r\n  (define-fun var1117 () var690 var690!10)\r\n  (define-fun var552 () var3982 var3982!8)\r\n  (define-fun null-var3586 () var3586 var3586!6)\r\n  (define-fun null-var690 () var690 var690!4)\r\n  (define-fun null-var3982 () var3982 var3982!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger",
            "r1 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r2 = <java.util.logging.Level: java.util.logging.Level FINE>",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.AvalonLogger__warn__160063922\\371.smt2",
        "z3": {
            "memory": 16654336,
            "run_time": 0.1067509651184082,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3295:\r\n  ;;   var3295!val!0 var3295!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3295!val!0 () var3295)\r\n  (declare-fun var3295!val!1 () var3295)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3295)) (or (= x var3295!val!0) (= x var3295!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1609:\r\n  ;;   var1609!val!1 var1609!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1609!val!1 () var1609)\r\n  (declare-fun var1609!val!0 () var1609)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1609)) (or (= x var1609!val!1) (= x var1609!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3783:\r\n  ;;   var3783!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3783!val!0 () var3783)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3783)) (= x var3783!val!0))\r\n  ;; -----------\r\n  (define-fun null-var1609 () var1609\r\n    var1609!val!1)\r\n  (define-fun var1154 () var3783\r\n    (getLogger/-1412858970 var1123))\r\n  (define-fun var270 () Bool\r\n    (var3783_isWarnEnabled/-51508077 (getLogger/-1412858970 var1123)))\r\n  (define-fun null-var3295 () var3295\r\n    var3295!val!1)\r\n  (define-fun var1123 () var3295\r\n    var3295!val!0)\r\n  (define-fun var2077 () String\r\n    (String_valueOf/-333372740 var2405))\r\n  (define-fun var2405 () var1609\r\n    var1609!val!0)\r\n  (define-fun var1835 () var3783\r\n    (getLogger/-1412858970 var1123))\r\n  (define-fun var1835!1 () var3783\r\n    var3783!val!0)\r\n  (define-fun var2077!1 () String\r\n    \"\")\r\n  (define-fun getLogger/-1412858970 ((x!0 var3295)) var3783\r\n    var3783!val!0)\r\n  (define-fun var3783_isWarnEnabled/-51508077 ((x!0 var3783)) Bool\r\n    true)\r\n  (define-fun var3783_warn/625345119 ((x!0 var3783) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var1609)) String\r\n    \"\")\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6569984,
            "run_time": 0.07651782035827637,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3295 is 2\r\n; rep: (as @var3295_0 var3295)\r\n; rep: (as @var3295_1 var3295)\r\n; cardinality of var1609 is 2\r\n; rep: (as @var1609_0 var1609)\r\n; rep: (as @var1609_1 var1609)\r\n; cardinality of var3783 is 1\r\n; rep: (as @var3783_0 var3783)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getLogger/-1412858970 ((_arg_1 var3295)) var3783 (as @var3783_0 var3783))\r\n(define-fun var3783_isWarnEnabled/-51508077 ((_arg_1 var3783)) Bool true)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_491 var1609)) String \"\")\r\n(define-fun var3783_warn/625345119 ((BOUND_VARIABLE_494 var3783) (BOUND_VARIABLE_495 String)) void (as @void_0 void))\r\n(define-fun null-var3295 () var3295 (as @var3295_0 var3295))\r\n(define-fun null-var1609 () var1609 (as @var1609_0 var1609))\r\n(define-fun var1123 () var3295 (as @var3295_1 var3295))\r\n(define-fun var2405 () var1609 (as @var1609_1 var1609))\r\n(define-fun var1835!1 () var3783 (as @var3783_0 var3783))\r\n(define-fun var2077!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32030720,
            "run_time": 0.1371474266052246,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3295:\n  ;;   var3295!val!0 var3295!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3295!val!0 () var3295)\n  (declare-fun var3295!val!1 () var3295)\n  ;; cardinality constraint:\n  (forall ((x var3295)) (or (= x var3295!val!0) (= x var3295!val!1)))\n  ;; -----------\n  ;; universe for var1609:\n  ;;   var1609!val!1 var1609!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1609!val!1 () var1609)\n  (declare-fun var1609!val!0 () var1609)\n  ;; cardinality constraint:\n  (forall ((x var1609)) (or (= x var1609!val!1) (= x var1609!val!0)))\n  ;; -----------\n  ;; universe for var3783:\n  ;;   var3783!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3783!val!0 () var3783)\n  ;; cardinality constraint:\n  (forall ((x var3783)) (= x var3783!val!0))\n  ;; -----------\n  (define-fun null-var1609 () var1609\n    var1609!val!1)\n  (define-fun var1835 () var3783\n    (getLogger/-1412858970 var1123))\n  (define-fun var1154 () var3783\n    (getLogger/-1412858970 var1123))\n  (define-fun null-var3295 () var3295\n    var3295!val!1)\n  (define-fun var1123 () var3295\n    var3295!val!0)\n  (define-fun var270 () Bool\n    (var3783_isWarnEnabled/-51508077 (getLogger/-1412858970 var1123)))\n  (define-fun var2077 () String\n    (String_valueOf/-333372740 var2405))\n  (define-fun var2405 () var1609\n    var1609!val!0)\n  (define-fun var1835!1 () var3783\n    var3783!val!0)\n  (define-fun var2077!1 () String\n    \"\")\n  (define-fun getLogger/-1412858970 ((x!0 var3295)) var3783\n    var3783!val!0)\n  (define-fun var3783_isWarnEnabled/-51508077 ((x!0 var3783)) Bool\n    true)\n  (define-fun var3783_warn/625345119 ((x!0 var3783) (x!1 String)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var1609)) String\n    \"\")\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154284032,
            "run_time": 1.9428248405456543,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2405 () var1609 var1609!8)\r\n  (define-fun var1123 () var3295 var3295!6)\r\n  (define-fun null-var1609 () var1609 var1609!4)\r\n  (define-fun null-var3295 () var3295 var3295!2)\r\n  (define-fun var3783!22 () var3783 (getLogger/-1412858970 var3295!6))\r\n  (define-fun var3783_isWarnEnabled/-51508077 ((x!0 var3783)) Bool (ite (= x!0 var3783!22) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.AvalonLogger",
            "r2 := @parameter0: java.lang.Object",
            "$r1 = virtualinvoke r0.<org.apache.commons.logging.impl.AvalonLogger: org.apache.avalon.framework.logger.Logger getLogger()>()",
            "$z0 = interfaceinvoke $r1.<org.apache.avalon.framework.logger.Logger: boolean isWarnEnabled()>()",
            "if $z0 == 0 goto return",
            "$r4 = virtualinvoke r0.<org.apache.commons.logging.impl.AvalonLogger: org.apache.avalon.framework.logger.Logger getLogger()>()",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)",
            "interfaceinvoke $r4.<org.apache.avalon.framework.logger.Logger: void warn(java.lang.String)>($r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk13LumberjackLogger__info__988270282\\249.smt2",
        "z3": {
            "memory": 30105600,
            "run_time": 0.07657098770141602,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2641:\r\n  ;;   var2641!val!0 var2641!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2641!val!0 () var2641)\r\n  (declare-fun var2641!val!1 () var2641)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2641)) (or (= x var2641!val!0) (= x var2641!val!1)))\r\n  ;; -----------\r\n  ;; universe for var535:\r\n  ;;   var535!val!1 var535!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var535!val!1 () var535)\r\n  (declare-fun var535!val!0 () var535)\r\n  ;; cardinality constraint:\r\n  (forall ((x var535)) (or (= x var535!val!1) (= x var535!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1144:\r\n  ;;   var1144!val!0 var1144!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1144!val!0 () var1144)\r\n  (declare-fun var1144!val!1 () var1144)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1144)) (or (= x var1144!val!0) (= x var1144!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2641 () var2641\r\n    var2641!val!1)\r\n  (define-fun null-var1144 () var1144\r\n    var1144!val!1)\r\n  (define-fun var3115 () var535\r\n    var535!val!0)\r\n  (define-fun var940 () var1144\r\n    var1144!val!0)\r\n  (define-fun var1530 () var2928\r\n    var2928-INFO)\r\n  (define-fun var826 () var2641\r\n    var2641!val!0)\r\n  (define-fun null-var535 () var535\r\n    var535!val!1)\r\n  (define-fun var1179 () String\r\n    (String_valueOf/-333372740 var3115))\r\n  (define-fun var1530!1 () var2928\r\n    var2928!val!0)\r\n  (define-fun var1179!1 () String\r\n    \"\")\r\n  (define-fun var940!1 () var1144\r\n    var1144!val!0)\r\n  (define-fun var826!1 () var2641\r\n    var2641!val!0)\r\n  (define-fun var2928-INFO () var2928\r\n    var2928!val!0)\r\n  (define-fun log/-1292381875 ((x!0 var2641)\r\n   (x!1 var2928)\r\n   (x!2 String)\r\n   (x!3 var1144)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var535)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7643136,
            "run_time": 0.04439139366149902,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2641 is 2\r\n; rep: (as @var2641_0 var2641)\r\n; rep: (as @var2641_1 var2641)\r\n; cardinality of var535 is 2\r\n; rep: (as @var535_0 var535)\r\n; rep: (as @var535_1 var535)\r\n; cardinality of var1144 is 2\r\n; rep: (as @var1144_0 var1144)\r\n; rep: (as @var1144_1 var1144)\r\n; cardinality of var2928 is 1\r\n; rep: (as @var2928_0 var2928)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_444 var535)) String \"\")\r\n(define-fun log/-1292381875 ((BOUND_VARIABLE_447 var2641) (BOUND_VARIABLE_448 var2928) (BOUND_VARIABLE_449 String) (BOUND_VARIABLE_450 var1144)) void (as @void_0 void))\r\n(define-fun null-var2641 () var2641 (as @var2641_0 var2641))\r\n(define-fun null-var535 () var535 (as @var535_0 var535))\r\n(define-fun null-var1144 () var1144 (as @var1144_0 var1144))\r\n(define-fun var2928-INFO () var2928 (as @var2928_0 var2928))\r\n(define-fun var826 () var2641 (as @var2641_1 var2641))\r\n(define-fun var3115 () var535 (as @var535_1 var535))\r\n(define-fun var940 () var1144 (as @var1144_1 var1144))\r\n(define-fun var826!1 () var2641 (as @var2641_0 var2641))\r\n(define-fun var1530!1 () var2928 (as @var2928_0 var2928))\r\n(define-fun var1179!1 () String \"\")\r\n(define-fun var940!1 () var1144 (as @var1144_0 var1144))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34435072,
            "run_time": 0.19891738891601562,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2641:\n  ;;   var2641!val!0 var2641!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2641!val!0 () var2641)\n  (declare-fun var2641!val!1 () var2641)\n  ;; cardinality constraint:\n  (forall ((x var2641)) (or (= x var2641!val!0) (= x var2641!val!1)))\n  ;; -----------\n  ;; universe for var535:\n  ;;   var535!val!1 var535!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var535!val!1 () var535)\n  (declare-fun var535!val!0 () var535)\n  ;; cardinality constraint:\n  (forall ((x var535)) (or (= x var535!val!1) (= x var535!val!0)))\n  ;; -----------\n  ;; universe for var1144:\n  ;;   var1144!val!0 var1144!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1144!val!0 () var1144)\n  (declare-fun var1144!val!1 () var1144)\n  ;; cardinality constraint:\n  (forall ((x var1144)) (or (= x var1144!val!0) (= x var1144!val!1)))\n  ;; -----------\n  (define-fun null-var2641 () var2641\n    var2641!val!1)\n  (define-fun null-var1144 () var1144\n    var1144!val!1)\n  (define-fun var3115 () var535\n    var535!val!0)\n  (define-fun var940 () var1144\n    var1144!val!0)\n  (define-fun var826 () var2641\n    var2641!val!0)\n  (define-fun null-var535 () var535\n    var535!val!1)\n  (define-fun var1179 () String\n    (String_valueOf/-333372740 var3115))\n  (define-fun var1530 () var2928\n    var2928-INFO)\n  (define-fun var1530!1 () var2928\n    var2928!val!0)\n  (define-fun var1179!1 () String\n    \"\")\n  (define-fun var940!1 () var1144\n    var1144!val!0)\n  (define-fun var826!1 () var2641\n    var2641!val!0)\n  (define-fun var2928-INFO () var2928\n    var2928!val!0)\n  (define-fun log/-1292381875 ((x!0 var2641)\n   (x!1 var2928)\n   (x!2 String)\n   (x!3 var1144)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var535)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140992512,
            "run_time": 2.052821636199951,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var940 () var1144 var1144!12)\r\n  (define-fun var3115 () var535 var535!10)\r\n  (define-fun var826 () var2641 var2641!8)\r\n  (define-fun null-var1144 () var1144 var1144!6)\r\n  (define-fun null-var535 () var535 var535!4)\r\n  (define-fun null-var2641 () var2641 var2641!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger",
            "r1 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r2 = <java.util.logging.Level: java.util.logging.Level INFO>",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk13LumberjackLogger__warn__-2074000462\\400.smt2",
        "z3": {
            "memory": 26202112,
            "run_time": 0.12148571014404297,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var838:\r\n  ;;   var838!val!0 var838!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var838!val!0 () var838)\r\n  (declare-fun var838!val!1 () var838)\r\n  ;; cardinality constraint:\r\n  (forall ((x var838)) (or (= x var838!val!0) (= x var838!val!1)))\r\n  ;; -----------\r\n  ;; universe for var144:\r\n  ;;   var144!val!1 var144!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var144!val!1 () var144)\r\n  (declare-fun var144!val!0 () var144)\r\n  ;; cardinality constraint:\r\n  (forall ((x var144)) (or (= x var144!val!1) (= x var144!val!0)))\r\n  ;; -----------\r\n  (define-fun var3392 () var838\r\n    var838!val!0)\r\n  (define-fun var819 () var144\r\n    var144!val!0)\r\n  (define-fun null-var144 () var144\r\n    var144!val!1)\r\n  (define-fun var748 () String\r\n    (String_valueOf/-333372740 var819))\r\n  (define-fun var3718 () var1135\r\n    var1135-WARNING)\r\n  (define-fun null-var838 () var838\r\n    var838!val!1)\r\n  (define-fun var1285 () var1237\r\n    var1237!val!0)\r\n  (define-fun var3392!1 () var838\r\n    var838!val!0)\r\n  (define-fun null-NullType () var1237\r\n    var1237!val!0)\r\n  (define-fun var3718!1 () var1135\r\n    var1135!val!0)\r\n  (define-fun var748!1 () String\r\n    \"\")\r\n  (define-fun var1135-WARNING () var1135\r\n    var1135!val!0)\r\n  (define-fun null-var3684 () var3684\r\n    var3684!val!0)\r\n  (define-fun log/-1292381875 ((x!0 var838)\r\n   (x!1 var1135)\r\n   (x!2 String)\r\n   (x!3 var3684)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var144)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6590464,
            "run_time": 0.0149383544921875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var838 is 2\r\n; rep: (as @var838_0 var838)\r\n; rep: (as @var838_1 var838)\r\n; cardinality of var144 is 2\r\n; rep: (as @var144_0 var144)\r\n; rep: (as @var144_1 var144)\r\n; cardinality of var1135 is 1\r\n; rep: (as @var1135_0 var1135)\r\n; cardinality of var3684 is 1\r\n; rep: (as @var3684_0 var3684)\r\n; cardinality of var1237 is 1\r\n; rep: (as @var1237_0 var1237)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_439 var144)) String \"\")\r\n(define-fun log/-1292381875 ((BOUND_VARIABLE_442 var838) (BOUND_VARIABLE_443 var1135) (BOUND_VARIABLE_444 String) (BOUND_VARIABLE_445 var3684)) void (as @void_0 void))\r\n(define-fun null-var838 () var838 (as @var838_0 var838))\r\n(define-fun null-var144 () var144 (as @var144_0 var144))\r\n(define-fun var1135-WARNING () var1135 (as @var1135_0 var1135))\r\n(define-fun null-NullType () var1237 (as @var1237_0 var1237))\r\n(define-fun null-var3684 () var3684 (as @var3684_0 var3684))\r\n(define-fun var3392 () var838 (as @var838_1 var838))\r\n(define-fun var819 () var144 (as @var144_1 var144))\r\n(define-fun var3392!1 () var838 (as @var838_0 var838))\r\n(define-fun var3718!1 () var1135 (as @var1135_0 var1135))\r\n(define-fun var748!1 () String \"\")\r\n(define-fun var1285 () var1237 (as @var1237_0 var1237))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 30900224,
            "run_time": 0.19909429550170898,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var838:\n  ;;   var838!val!0 var838!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var838!val!0 () var838)\n  (declare-fun var838!val!1 () var838)\n  ;; cardinality constraint:\n  (forall ((x var838)) (or (= x var838!val!0) (= x var838!val!1)))\n  ;; -----------\n  ;; universe for var144:\n  ;;   var144!val!1 var144!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var144!val!1 () var144)\n  (declare-fun var144!val!0 () var144)\n  ;; cardinality constraint:\n  (forall ((x var144)) (or (= x var144!val!1) (= x var144!val!0)))\n  ;; -----------\n  (define-fun var3718 () var1135\n    var1135-WARNING)\n  (define-fun var3392 () var838\n    var838!val!0)\n  (define-fun var819 () var144\n    var144!val!0)\n  (define-fun null-var144 () var144\n    var144!val!1)\n  (define-fun var748 () String\n    (String_valueOf/-333372740 var819))\n  (define-fun null-var838 () var838\n    var838!val!1)\n  (define-fun var1285 () var1237\n    var1237!val!0)\n  (define-fun var3392!1 () var838\n    var838!val!0)\n  (define-fun null-NullType () var1237\n    var1237!val!0)\n  (define-fun var3718!1 () var1135\n    var1135!val!0)\n  (define-fun var748!1 () String\n    \"\")\n  (define-fun var1135-WARNING () var1135\n    var1135!val!0)\n  (define-fun null-var3684 () var3684\n    var3684!val!0)\n  (define-fun log/-1292381875 ((x!0 var838)\n   (x!1 var1135)\n   (x!2 String)\n   (x!3 var3684)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var144)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141099008,
            "run_time": 2.10361909866333,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var819 () var144 var144!8)\r\n  (define-fun var3392 () var838 var838!6)\r\n  (define-fun null-var144 () var144 var144!4)\r\n  (define-fun null-var838 () var838 var838!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger",
            "r1 := @parameter0: java.lang.Object",
            "$r2 = <java.util.logging.Level: java.util.logging.Level WARNING>",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk14Logger__error__416886857\\61.smt2",
        "z3": {
            "memory": 28778496,
            "run_time": 0.24422955513000488,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1609:\r\n  ;;   var1609!val!1 var1609!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1609!val!1 () var1609)\r\n  (declare-fun var1609!val!0 () var1609)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1609)) (or (= x var1609!val!1) (= x var1609!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2224:\r\n  ;;   var2224!val!0 var2224!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2224!val!0 () var2224)\r\n  (declare-fun var2224!val!1 () var2224)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2224)) (or (= x var2224!val!0) (= x var2224!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2224 () var2224\r\n    var2224!val!1)\r\n  (define-fun null-var1609 () var1609\r\n    var1609!val!1)\r\n  (define-fun var607 () var2224\r\n    var2224!val!0)\r\n  (define-fun var1921 () String\r\n    (String_valueOf/-333372740 var676))\r\n  (define-fun var2695 () var3109\r\n    var3109-SEVERE)\r\n  (define-fun var676 () var1609\r\n    var1609!val!0)\r\n  (define-fun var2695!1 () var3109\r\n    var3109!val!0)\r\n  (define-fun null-var1298 () var1298\r\n    var1298!val!0)\r\n  (define-fun null-NullType () var3580\r\n    var3580!val!0)\r\n  (define-fun var1921!1 () String\r\n    \"\")\r\n  (define-fun var607!1 () var2224\r\n    var2224!val!0)\r\n  (define-fun var3109-SEVERE () var3109\r\n    var3109!val!0)\r\n  (define-fun var1772 () var3580\r\n    var3580!val!0)\r\n  (define-fun log/-2053243914 ((x!0 var2224)\r\n   (x!1 var3109)\r\n   (x!2 String)\r\n   (x!3 var1298)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var1609)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 5603328,
            "run_time": 0.03050994873046875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2224 is 2\r\n; rep: (as @var2224_0 var2224)\r\n; rep: (as @var2224_1 var2224)\r\n; cardinality of var1609 is 2\r\n; rep: (as @var1609_0 var1609)\r\n; rep: (as @var1609_1 var1609)\r\n; cardinality of var3109 is 1\r\n; rep: (as @var3109_0 var3109)\r\n; cardinality of var1298 is 1\r\n; rep: (as @var1298_0 var1298)\r\n; cardinality of var3580 is 1\r\n; rep: (as @var3580_0 var3580)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_439 var1609)) String \"\")\r\n(define-fun log/-2053243914 ((BOUND_VARIABLE_442 var2224) (BOUND_VARIABLE_443 var3109) (BOUND_VARIABLE_444 String) (BOUND_VARIABLE_445 var1298)) void (as @void_0 void))\r\n(define-fun null-var2224 () var2224 (as @var2224_0 var2224))\r\n(define-fun null-var1609 () var1609 (as @var1609_0 var1609))\r\n(define-fun var3109-SEVERE () var3109 (as @var3109_0 var3109))\r\n(define-fun null-NullType () var3580 (as @var3580_0 var3580))\r\n(define-fun null-var1298 () var1298 (as @var1298_0 var1298))\r\n(define-fun var607 () var2224 (as @var2224_1 var2224))\r\n(define-fun var676 () var1609 (as @var1609_1 var1609))\r\n(define-fun var607!1 () var2224 (as @var2224_0 var2224))\r\n(define-fun var2695!1 () var3109 (as @var3109_0 var3109))\r\n(define-fun var1921!1 () String \"\")\r\n(define-fun var1772 () var3580 (as @var3580_0 var3580))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 31473664,
            "run_time": 0.13845348358154297,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1609:\n  ;;   var1609!val!1 var1609!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1609!val!1 () var1609)\n  (declare-fun var1609!val!0 () var1609)\n  ;; cardinality constraint:\n  (forall ((x var1609)) (or (= x var1609!val!1) (= x var1609!val!0)))\n  ;; -----------\n  ;; universe for var2224:\n  ;;   var2224!val!0 var2224!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2224!val!0 () var2224)\n  (declare-fun var2224!val!1 () var2224)\n  ;; cardinality constraint:\n  (forall ((x var2224)) (or (= x var2224!val!0) (= x var2224!val!1)))\n  ;; -----------\n  (define-fun null-var2224 () var2224\n    var2224!val!1)\n  (define-fun null-var1609 () var1609\n    var1609!val!1)\n  (define-fun var607 () var2224\n    var2224!val!0)\n  (define-fun var2695 () var3109\n    var3109-SEVERE)\n  (define-fun var1921 () String\n    (String_valueOf/-333372740 var676))\n  (define-fun var676 () var1609\n    var1609!val!0)\n  (define-fun var2695!1 () var3109\n    var3109!val!0)\n  (define-fun null-var1298 () var1298\n    var1298!val!0)\n  (define-fun null-NullType () var3580\n    var3580!val!0)\n  (define-fun var1921!1 () String\n    \"\")\n  (define-fun var607!1 () var2224\n    var2224!val!0)\n  (define-fun var3109-SEVERE () var3109\n    var3109!val!0)\n  (define-fun var1772 () var3580\n    var3580!val!0)\n  (define-fun log/-2053243914 ((x!0 var2224)\n   (x!1 var3109)\n   (x!2 String)\n   (x!3 var1298)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var1609)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140939264,
            "run_time": 2.3649485111236572,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var676 () var1609 var1609!8)\r\n  (define-fun var607 () var2224 var2224!6)\r\n  (define-fun null-var1609 () var1609 var1609!4)\r\n  (define-fun null-var2224 () var2224 var2224!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk14Logger",
            "r1 := @parameter0: java.lang.Object",
            "$r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk14Logger__debug__2015643230\\39.smt2",
        "z3": {
            "memory": 28700672,
            "run_time": 0.19835567474365234,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var275:\r\n  ;;   var275!val!1 var275!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var275!val!1 () var275)\r\n  (declare-fun var275!val!0 () var275)\r\n  ;; cardinality constraint:\r\n  (forall ((x var275)) (or (= x var275!val!1) (= x var275!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2424:\r\n  ;;   var2424!val!0 var2424!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2424!val!0 () var2424)\r\n  (declare-fun var2424!val!1 () var2424)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2424)) (or (= x var2424!val!0) (= x var2424!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1316:\r\n  ;;   var1316!val!0 var1316!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1316!val!0 () var1316)\r\n  (declare-fun var1316!val!1 () var1316)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1316)) (or (= x var1316!val!0) (= x var1316!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var275 () var275\r\n    var275!val!1)\r\n  (define-fun var264 () var2424\r\n    var2424!val!0)\r\n  (define-fun var3969 () var122\r\n    var122-FINE)\r\n  (define-fun var2759 () var1316\r\n    var1316!val!0)\r\n  (define-fun null-var2424 () var2424\r\n    var2424!val!1)\r\n  (define-fun null-var1316 () var1316\r\n    var1316!val!1)\r\n  (define-fun var2743 () var275\r\n    var275!val!0)\r\n  (define-fun var2357 () String\r\n    (String_valueOf/-333372740 var264))\r\n  (define-fun var3969!1 () var122\r\n    var122!val!0)\r\n  (define-fun var2759!1 () var1316\r\n    var1316!val!0)\r\n  (define-fun var122-FINE () var122\r\n    var122!val!0)\r\n  (define-fun var2357!1 () String\r\n    \"\")\r\n  (define-fun var2743!1 () var275\r\n    var275!val!1)\r\n  (define-fun log/-2053243914 ((x!0 var275)\r\n   (x!1 var122)\r\n   (x!2 String)\r\n   (x!3 var1316)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var2424)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 5718016,
            "run_time": 0.07587766647338867,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var275 is 2\r\n; rep: (as @var275_0 var275)\r\n; rep: (as @var275_1 var275)\r\n; cardinality of var2424 is 2\r\n; rep: (as @var2424_0 var2424)\r\n; rep: (as @var2424_1 var2424)\r\n; cardinality of var1316 is 2\r\n; rep: (as @var1316_0 var1316)\r\n; rep: (as @var1316_1 var1316)\r\n; cardinality of var122 is 1\r\n; rep: (as @var122_0 var122)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_444 var2424)) String \"\")\r\n(define-fun log/-2053243914 ((BOUND_VARIABLE_447 var275) (BOUND_VARIABLE_448 var122) (BOUND_VARIABLE_449 String) (BOUND_VARIABLE_450 var1316)) void (as @void_0 void))\r\n(define-fun null-var275 () var275 (as @var275_0 var275))\r\n(define-fun null-var2424 () var2424 (as @var2424_0 var2424))\r\n(define-fun null-var1316 () var1316 (as @var1316_0 var1316))\r\n(define-fun var122-FINE () var122 (as @var122_0 var122))\r\n(define-fun var2743 () var275 (as @var275_1 var275))\r\n(define-fun var264 () var2424 (as @var2424_1 var2424))\r\n(define-fun var2759 () var1316 (as @var1316_1 var1316))\r\n(define-fun var2743!1 () var275 (as @var275_0 var275))\r\n(define-fun var3969!1 () var122 (as @var122_0 var122))\r\n(define-fun var2357!1 () String \"\")\r\n(define-fun var2759!1 () var1316 (as @var1316_0 var1316))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32366592,
            "run_time": 0.1840353012084961,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var275:\n  ;;   var275!val!1 var275!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var275!val!1 () var275)\n  (declare-fun var275!val!0 () var275)\n  ;; cardinality constraint:\n  (forall ((x var275)) (or (= x var275!val!1) (= x var275!val!0)))\n  ;; -----------\n  ;; universe for var2424:\n  ;;   var2424!val!0 var2424!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2424!val!0 () var2424)\n  (declare-fun var2424!val!1 () var2424)\n  ;; cardinality constraint:\n  (forall ((x var2424)) (or (= x var2424!val!0) (= x var2424!val!1)))\n  ;; -----------\n  ;; universe for var1316:\n  ;;   var1316!val!0 var1316!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1316!val!0 () var1316)\n  (declare-fun var1316!val!1 () var1316)\n  ;; cardinality constraint:\n  (forall ((x var1316)) (or (= x var1316!val!0) (= x var1316!val!1)))\n  ;; -----------\n  (define-fun null-var275 () var275\n    var275!val!1)\n  (define-fun var264 () var2424\n    var2424!val!0)\n  (define-fun var2759 () var1316\n    var1316!val!0)\n  (define-fun var3969 () var122\n    var122-FINE)\n  (define-fun var2357 () String\n    (String_valueOf/-333372740 var264))\n  (define-fun null-var2424 () var2424\n    var2424!val!1)\n  (define-fun null-var1316 () var1316\n    var1316!val!1)\n  (define-fun var2743 () var275\n    var275!val!0)\n  (define-fun var3969!1 () var122\n    var122!val!0)\n  (define-fun var2759!1 () var1316\n    var1316!val!0)\n  (define-fun var122-FINE () var122\n    var122!val!0)\n  (define-fun var2357!1 () String\n    \"\")\n  (define-fun var2743!1 () var275\n    var275!val!1)\n  (define-fun log/-2053243914 ((x!0 var275)\n   (x!1 var122)\n   (x!2 String)\n   (x!3 var1316)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var2424)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141062144,
            "run_time": 2.398663282394409,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2759 () var1316 var1316!12)\r\n  (define-fun var264 () var2424 var2424!10)\r\n  (define-fun var2743 () var275 var275!8)\r\n  (define-fun null-var1316 () var1316 var1316!6)\r\n  (define-fun null-var2424 () var2424 var2424!4)\r\n  (define-fun null-var275 () var275 var275!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk14Logger",
            "r1 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r2 = <java.util.logging.Level: java.util.logging.Level FINE>",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk14Logger__trace__-1817459220\\367.smt2",
        "z3": {
            "memory": 29097984,
            "run_time": 0.06475520133972168,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1212:\r\n  ;;   var1212!val!0 var1212!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1212!val!0 () var1212)\r\n  (declare-fun var1212!val!1 () var1212)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1212)) (or (= x var1212!val!0) (= x var1212!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2847:\r\n  ;;   var2847!val!0 var2847!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2847!val!0 () var2847)\r\n  (declare-fun var2847!val!1 () var2847)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2847)) (or (= x var2847!val!0) (= x var2847!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2847 () var2847\r\n    var2847!val!1)\r\n  (define-fun null-var1212 () var1212\r\n    var1212!val!1)\r\n  (define-fun var1005 () String\r\n    (String_valueOf/-333372740 var2584))\r\n  (define-fun var1388 () var2036\r\n    var2036-FINEST)\r\n  (define-fun var3018 () var2847\r\n    var2847!val!0)\r\n  (define-fun var2584 () var1212\r\n    var1212!val!0)\r\n  (define-fun var34 () var3973\r\n    var3973!val!0)\r\n  (define-fun null-var3823 () var3823\r\n    var3823!val!0)\r\n  (define-fun var1005!1 () String\r\n    \"\")\r\n  (define-fun null-NullType () var3973\r\n    var3973!val!0)\r\n  (define-fun var3018!1 () var2847\r\n    var2847!val!0)\r\n  (define-fun var2036-FINEST () var2036\r\n    var2036!val!0)\r\n  (define-fun var1388!1 () var2036\r\n    var2036!val!0)\r\n  (define-fun log/-2053243914 ((x!0 var2847)\r\n   (x!1 var2036)\r\n   (x!2 String)\r\n   (x!3 var3823)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var1212)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6385664,
            "run_time": 0.07638382911682129,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2847 is 2\r\n; rep: (as @var2847_0 var2847)\r\n; rep: (as @var2847_1 var2847)\r\n; cardinality of var1212 is 2\r\n; rep: (as @var1212_0 var1212)\r\n; rep: (as @var1212_1 var1212)\r\n; cardinality of var2036 is 1\r\n; rep: (as @var2036_0 var2036)\r\n; cardinality of var3823 is 1\r\n; rep: (as @var3823_0 var3823)\r\n; cardinality of var3973 is 1\r\n; rep: (as @var3973_0 var3973)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_439 var1212)) String \"\")\r\n(define-fun log/-2053243914 ((BOUND_VARIABLE_442 var2847) (BOUND_VARIABLE_443 var2036) (BOUND_VARIABLE_444 String) (BOUND_VARIABLE_445 var3823)) void (as @void_0 void))\r\n(define-fun null-var2847 () var2847 (as @var2847_0 var2847))\r\n(define-fun null-var1212 () var1212 (as @var1212_0 var1212))\r\n(define-fun var2036-FINEST () var2036 (as @var2036_0 var2036))\r\n(define-fun null-NullType () var3973 (as @var3973_0 var3973))\r\n(define-fun null-var3823 () var3823 (as @var3823_0 var3823))\r\n(define-fun var3018 () var2847 (as @var2847_1 var2847))\r\n(define-fun var2584 () var1212 (as @var1212_1 var1212))\r\n(define-fun var3018!1 () var2847 (as @var2847_0 var2847))\r\n(define-fun var1388!1 () var2036 (as @var2036_0 var2036))\r\n(define-fun var1005!1 () String \"\")\r\n(define-fun var34 () var3973 (as @var3973_0 var3973))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 30670848,
            "run_time": 0.11928629875183105,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1212:\n  ;;   var1212!val!0 var1212!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1212!val!0 () var1212)\n  (declare-fun var1212!val!1 () var1212)\n  ;; cardinality constraint:\n  (forall ((x var1212)) (or (= x var1212!val!0) (= x var1212!val!1)))\n  ;; -----------\n  ;; universe for var2847:\n  ;;   var2847!val!0 var2847!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2847!val!0 () var2847)\n  (declare-fun var2847!val!1 () var2847)\n  ;; cardinality constraint:\n  (forall ((x var2847)) (or (= x var2847!val!0) (= x var2847!val!1)))\n  ;; -----------\n  (define-fun null-var2847 () var2847\n    var2847!val!1)\n  (define-fun var1388 () var2036\n    var2036-FINEST)\n  (define-fun null-var1212 () var1212\n    var1212!val!1)\n  (define-fun var1005 () String\n    (String_valueOf/-333372740 var2584))\n  (define-fun var3018 () var2847\n    var2847!val!0)\n  (define-fun var2584 () var1212\n    var1212!val!0)\n  (define-fun var34 () var3973\n    var3973!val!0)\n  (define-fun null-var3823 () var3823\n    var3823!val!0)\n  (define-fun var1005!1 () String\n    \"\")\n  (define-fun null-NullType () var3973\n    var3973!val!0)\n  (define-fun var3018!1 () var2847\n    var2847!val!0)\n  (define-fun var2036-FINEST () var2036\n    var2036!val!0)\n  (define-fun var1388!1 () var2036\n    var2036!val!0)\n  (define-fun log/-2053243914 ((x!0 var2847)\n   (x!1 var2036)\n   (x!2 String)\n   (x!3 var3823)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var1212)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141246464,
            "run_time": 2.4883973598480225,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2584 () var1212 var1212!8)\r\n  (define-fun var3018 () var2847 var2847!6)\r\n  (define-fun null-var1212 () var1212 var1212!4)\r\n  (define-fun null-var2847 () var2847 var2847!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk14Logger",
            "r1 := @parameter0: java.lang.Object",
            "$r2 = <java.util.logging.Level: java.util.logging.Level FINEST>",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk13LumberjackLogger__error__413962848\\59.smt2",
        "z3": {
            "memory": 29945856,
            "run_time": 0.15231585502624512,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1125:\r\n  ;;   var1125!val!0 var1125!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1125!val!0 () var1125)\r\n  (declare-fun var1125!val!1 () var1125)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1125)) (or (= x var1125!val!0) (= x var1125!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1423:\r\n  ;;   var1423!val!1 var1423!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1423!val!1 () var1423)\r\n  (declare-fun var1423!val!0 () var1423)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1423)) (or (= x var1423!val!1) (= x var1423!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var1125 () var1125\r\n    var1125!val!1)\r\n  (define-fun null-var1423 () var1423\r\n    var1423!val!1)\r\n  (define-fun var1970 () String\r\n    (String_valueOf/-333372740 var253))\r\n  (define-fun var905 () var1125\r\n    var1125!val!0)\r\n  (define-fun var1294 () var287\r\n    var287-SEVERE)\r\n  (define-fun var253 () var1423\r\n    var1423!val!0)\r\n  (define-fun var3767 () var174\r\n    var174!val!0)\r\n  (define-fun var287-SEVERE () var287\r\n    var287!val!0)\r\n  (define-fun var905!1 () var1125\r\n    var1125!val!0)\r\n  (define-fun null-NullType () var174\r\n    var174!val!0)\r\n  (define-fun var1970!1 () String\r\n    \"\")\r\n  (define-fun var1294!1 () var287\r\n    var287!val!0)\r\n  (define-fun null-var1114 () var1114\r\n    var1114!val!0)\r\n  (define-fun log/-1292381875 ((x!0 var1125)\r\n   (x!1 var287)\r\n   (x!2 String)\r\n   (x!3 var1114)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var1423)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 5222400,
            "run_time": 0.07715463638305664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1125 is 2\r\n; rep: (as @var1125_0 var1125)\r\n; rep: (as @var1125_1 var1125)\r\n; cardinality of var1423 is 2\r\n; rep: (as @var1423_0 var1423)\r\n; rep: (as @var1423_1 var1423)\r\n; cardinality of var287 is 1\r\n; rep: (as @var287_0 var287)\r\n; cardinality of var1114 is 1\r\n; rep: (as @var1114_0 var1114)\r\n; cardinality of var174 is 1\r\n; rep: (as @var174_0 var174)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_439 var1423)) String \"\")\r\n(define-fun log/-1292381875 ((BOUND_VARIABLE_442 var1125) (BOUND_VARIABLE_443 var287) (BOUND_VARIABLE_444 String) (BOUND_VARIABLE_445 var1114)) void (as @void_0 void))\r\n(define-fun null-var1125 () var1125 (as @var1125_0 var1125))\r\n(define-fun null-var1423 () var1423 (as @var1423_0 var1423))\r\n(define-fun var287-SEVERE () var287 (as @var287_0 var287))\r\n(define-fun null-NullType () var174 (as @var174_0 var174))\r\n(define-fun null-var1114 () var1114 (as @var1114_0 var1114))\r\n(define-fun var905 () var1125 (as @var1125_1 var1125))\r\n(define-fun var253 () var1423 (as @var1423_1 var1423))\r\n(define-fun var905!1 () var1125 (as @var1125_0 var1125))\r\n(define-fun var1294!1 () var287 (as @var287_0 var287))\r\n(define-fun var1970!1 () String \"\")\r\n(define-fun var3767 () var174 (as @var174_0 var174))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33583104,
            "run_time": 0.1840353012084961,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1125:\n  ;;   var1125!val!0 var1125!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1125!val!0 () var1125)\n  (declare-fun var1125!val!1 () var1125)\n  ;; cardinality constraint:\n  (forall ((x var1125)) (or (= x var1125!val!0) (= x var1125!val!1)))\n  ;; -----------\n  ;; universe for var1423:\n  ;;   var1423!val!1 var1423!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1423!val!1 () var1423)\n  (declare-fun var1423!val!0 () var1423)\n  ;; cardinality constraint:\n  (forall ((x var1423)) (or (= x var1423!val!1) (= x var1423!val!0)))\n  ;; -----------\n  (define-fun var1970 () String\n    (String_valueOf/-333372740 var253))\n  (define-fun null-var1125 () var1125\n    var1125!val!1)\n  (define-fun var1294 () var287\n    var287-SEVERE)\n  (define-fun null-var1423 () var1423\n    var1423!val!1)\n  (define-fun var905 () var1125\n    var1125!val!0)\n  (define-fun var253 () var1423\n    var1423!val!0)\n  (define-fun var3767 () var174\n    var174!val!0)\n  (define-fun var287-SEVERE () var287\n    var287!val!0)\n  (define-fun var905!1 () var1125\n    var1125!val!0)\n  (define-fun null-NullType () var174\n    var174!val!0)\n  (define-fun var1970!1 () String\n    \"\")\n  (define-fun var1294!1 () var287\n    var287!val!0)\n  (define-fun null-var1114 () var1114\n    var1114!val!0)\n  (define-fun log/-1292381875 ((x!0 var1125)\n   (x!1 var287)\n   (x!2 String)\n   (x!3 var1114)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var1423)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140402688,
            "run_time": 2.443880796432495,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var253 () var1423 var1423!8)\r\n  (define-fun var905 () var1125 var1125!6)\r\n  (define-fun null-var1423 () var1423 var1423!4)\r\n  (define-fun null-var1125 () var1125 var1125!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger",
            "r1 := @parameter0: java.lang.Object",
            "$r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk14Logger__fatal__376607693\\113.smt2",
        "z3": {
            "memory": 28692480,
            "run_time": 0.24422955513000488,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3035:\r\n  ;;   var3035!val!1 var3035!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3035!val!1 () var3035)\r\n  (declare-fun var3035!val!0 () var3035)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3035)) (or (= x var3035!val!1) (= x var3035!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2360:\r\n  ;;   var2360!val!0 var2360!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2360!val!0 () var2360)\r\n  (declare-fun var2360!val!1 () var2360)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2360)) (or (= x var2360!val!0) (= x var2360!val!1)))\r\n  ;; -----------\r\n  (define-fun var3728 () var2073\r\n    var2073-SEVERE)\r\n  (define-fun var1272 () var2360\r\n    var2360!val!0)\r\n  (define-fun var1772 () String\r\n    (String_valueOf/-333372740 var2649))\r\n  (define-fun null-var2360 () var2360\r\n    var2360!val!1)\r\n  (define-fun var2649 () var3035\r\n    var3035!val!0)\r\n  (define-fun null-var3035 () var3035\r\n    var3035!val!1)\r\n  (define-fun var2220 () var1211\r\n    var1211!val!0)\r\n  (define-fun var1272!1 () var2360\r\n    var2360!val!0)\r\n  (define-fun var1772!1 () String\r\n    \"\")\r\n  (define-fun var3728!1 () var2073\r\n    var2073!val!0)\r\n  (define-fun null-NullType () var1211\r\n    var1211!val!0)\r\n  (define-fun null-var3398 () var3398\r\n    var3398!val!0)\r\n  (define-fun var2073-SEVERE () var2073\r\n    var2073!val!0)\r\n  (define-fun log/-2053243914 ((x!0 var2360)\r\n   (x!1 var2073)\r\n   (x!2 String)\r\n   (x!3 var3398)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var3035)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11304960,
            "run_time": 0.060186147689819336,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2360 is 2\r\n; rep: (as @var2360_0 var2360)\r\n; rep: (as @var2360_1 var2360)\r\n; cardinality of var3035 is 2\r\n; rep: (as @var3035_0 var3035)\r\n; rep: (as @var3035_1 var3035)\r\n; cardinality of var2073 is 1\r\n; rep: (as @var2073_0 var2073)\r\n; cardinality of var3398 is 1\r\n; rep: (as @var3398_0 var3398)\r\n; cardinality of var1211 is 1\r\n; rep: (as @var1211_0 var1211)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_439 var3035)) String \"\")\r\n(define-fun log/-2053243914 ((BOUND_VARIABLE_442 var2360) (BOUND_VARIABLE_443 var2073) (BOUND_VARIABLE_444 String) (BOUND_VARIABLE_445 var3398)) void (as @void_0 void))\r\n(define-fun null-var2360 () var2360 (as @var2360_0 var2360))\r\n(define-fun null-var3035 () var3035 (as @var3035_0 var3035))\r\n(define-fun var2073-SEVERE () var2073 (as @var2073_0 var2073))\r\n(define-fun null-NullType () var1211 (as @var1211_0 var1211))\r\n(define-fun null-var3398 () var3398 (as @var3398_0 var3398))\r\n(define-fun var1272 () var2360 (as @var2360_1 var2360))\r\n(define-fun var2649 () var3035 (as @var3035_1 var3035))\r\n(define-fun var1272!1 () var2360 (as @var2360_0 var2360))\r\n(define-fun var3728!1 () var2073 (as @var2073_0 var2073))\r\n(define-fun var1772!1 () String \"\")\r\n(define-fun var2220 () var1211 (as @var1211_0 var1211))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33591296,
            "run_time": 0.12397170066833496,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3035:\n  ;;   var3035!val!1 var3035!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3035!val!1 () var3035)\n  (declare-fun var3035!val!0 () var3035)\n  ;; cardinality constraint:\n  (forall ((x var3035)) (or (= x var3035!val!1) (= x var3035!val!0)))\n  ;; -----------\n  ;; universe for var2360:\n  ;;   var2360!val!0 var2360!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2360!val!0 () var2360)\n  (declare-fun var2360!val!1 () var2360)\n  ;; cardinality constraint:\n  (forall ((x var2360)) (or (= x var2360!val!0) (= x var2360!val!1)))\n  ;; -----------\n  (define-fun var1772 () String\n    (String_valueOf/-333372740 var2649))\n  (define-fun var3728 () var2073\n    var2073-SEVERE)\n  (define-fun var1272 () var2360\n    var2360!val!0)\n  (define-fun null-var2360 () var2360\n    var2360!val!1)\n  (define-fun var2649 () var3035\n    var3035!val!0)\n  (define-fun null-var3035 () var3035\n    var3035!val!1)\n  (define-fun var2220 () var1211\n    var1211!val!0)\n  (define-fun var1272!1 () var2360\n    var2360!val!0)\n  (define-fun var1772!1 () String\n    \"\")\n  (define-fun var3728!1 () var2073\n    var2073!val!0)\n  (define-fun null-NullType () var1211\n    var1211!val!0)\n  (define-fun null-var3398 () var3398\n    var3398!val!0)\n  (define-fun var2073-SEVERE () var2073\n    var2073!val!0)\n  (define-fun log/-2053243914 ((x!0 var2360)\n   (x!1 var2073)\n   (x!2 String)\n   (x!3 var3398)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var3035)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140357632,
            "run_time": 2.5347084999084473,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2649 () var3035 var3035!8)\r\n  (define-fun var1272 () var2360 var2360!6)\r\n  (define-fun null-var3035 () var3035 var3035!4)\r\n  (define-fun null-var2360 () var2360 var2360!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk14Logger",
            "r1 := @parameter0: java.lang.Object",
            "$r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk13LumberjackLogger__trace__979750851\\392.smt2",
        "z3": {
            "memory": 25108480,
            "run_time": 0.24422955513000488,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1882:\r\n  ;;   var1882!val!1 var1882!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1882!val!1 () var1882)\r\n  (declare-fun var1882!val!0 () var1882)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1882)) (or (= x var1882!val!1) (= x var1882!val!0)))\r\n  ;; -----------\r\n  ;; universe for var391:\r\n  ;;   var391!val!0 var391!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var391!val!0 () var391)\r\n  (declare-fun var391!val!1 () var391)\r\n  ;; cardinality constraint:\r\n  (forall ((x var391)) (or (= x var391!val!0) (= x var391!val!1)))\r\n  ;; -----------\r\n  ;; universe for var138:\r\n  ;;   var138!val!1 var138!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var138!val!1 () var138)\r\n  (declare-fun var138!val!0 () var138)\r\n  ;; cardinality constraint:\r\n  (forall ((x var138)) (or (= x var138!val!1) (= x var138!val!0)))\r\n  ;; -----------\r\n  (define-fun var2286 () var138\r\n    var138!val!0)\r\n  (define-fun var1567 () String\r\n    (String_valueOf/-333372740 var3838))\r\n  (define-fun null-var1882 () var1882\r\n    var1882!val!1)\r\n  (define-fun null-var138 () var138\r\n    var138!val!1)\r\n  (define-fun var3838 () var1882\r\n    var1882!val!0)\r\n  (define-fun var2653 () var2505\r\n    var2505-FINEST)\r\n  (define-fun null-var391 () var391\r\n    var391!val!1)\r\n  (define-fun var2313 () var391\r\n    var391!val!0)\r\n  (define-fun var2313!1 () var391\r\n    var391!val!0)\r\n  (define-fun var2653!1 () var2505\r\n    var2505!val!0)\r\n  (define-fun var2286!1 () var138\r\n    var138!val!1)\r\n  (define-fun var2505-FINEST () var2505\r\n    var2505!val!0)\r\n  (define-fun var1567!1 () String\r\n    \"\")\r\n  (define-fun log/-1292381875 ((x!0 var391)\r\n   (x!1 var2505)\r\n   (x!2 String)\r\n   (x!3 var138)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var1882)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6078464,
            "run_time": 0.03050994873046875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var391 is 2\r\n; rep: (as @var391_0 var391)\r\n; rep: (as @var391_1 var391)\r\n; cardinality of var1882 is 2\r\n; rep: (as @var1882_0 var1882)\r\n; rep: (as @var1882_1 var1882)\r\n; cardinality of var138 is 2\r\n; rep: (as @var138_0 var138)\r\n; rep: (as @var138_1 var138)\r\n; cardinality of var2505 is 1\r\n; rep: (as @var2505_0 var2505)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_444 var1882)) String \"\")\r\n(define-fun log/-1292381875 ((BOUND_VARIABLE_447 var391) (BOUND_VARIABLE_448 var2505) (BOUND_VARIABLE_449 String) (BOUND_VARIABLE_450 var138)) void (as @void_0 void))\r\n(define-fun null-var391 () var391 (as @var391_0 var391))\r\n(define-fun null-var1882 () var1882 (as @var1882_0 var1882))\r\n(define-fun null-var138 () var138 (as @var138_0 var138))\r\n(define-fun var2505-FINEST () var2505 (as @var2505_0 var2505))\r\n(define-fun var2313 () var391 (as @var391_1 var391))\r\n(define-fun var3838 () var1882 (as @var1882_1 var1882))\r\n(define-fun var2286 () var138 (as @var138_1 var138))\r\n(define-fun var2313!1 () var391 (as @var391_0 var391))\r\n(define-fun var2653!1 () var2505 (as @var2505_0 var2505))\r\n(define-fun var1567!1 () String \"\")\r\n(define-fun var2286!1 () var138 (as @var138_0 var138))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34848768,
            "run_time": 0.15364623069763184,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1882:\n  ;;   var1882!val!1 var1882!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1882!val!1 () var1882)\n  (declare-fun var1882!val!0 () var1882)\n  ;; cardinality constraint:\n  (forall ((x var1882)) (or (= x var1882!val!1) (= x var1882!val!0)))\n  ;; -----------\n  ;; universe for var391:\n  ;;   var391!val!0 var391!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var391!val!0 () var391)\n  (declare-fun var391!val!1 () var391)\n  ;; cardinality constraint:\n  (forall ((x var391)) (or (= x var391!val!0) (= x var391!val!1)))\n  ;; -----------\n  ;; universe for var138:\n  ;;   var138!val!1 var138!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var138!val!1 () var138)\n  (declare-fun var138!val!0 () var138)\n  ;; cardinality constraint:\n  (forall ((x var138)) (or (= x var138!val!1) (= x var138!val!0)))\n  ;; -----------\n  (define-fun var1567 () String\n    (String_valueOf/-333372740 var3838))\n  (define-fun var2286 () var138\n    var138!val!0)\n  (define-fun null-var138 () var138\n    var138!val!1)\n  (define-fun null-var1882 () var1882\n    var1882!val!1)\n  (define-fun var3838 () var1882\n    var1882!val!0)\n  (define-fun null-var391 () var391\n    var391!val!1)\n  (define-fun var2653 () var2505\n    var2505-FINEST)\n  (define-fun var2313 () var391\n    var391!val!0)\n  (define-fun var2313!1 () var391\n    var391!val!0)\n  (define-fun var2653!1 () var2505\n    var2505!val!0)\n  (define-fun var2286!1 () var138\n    var138!val!1)\n  (define-fun var2505-FINEST () var2505\n    var2505!val!0)\n  (define-fun var1567!1 () String\n    \"\")\n  (define-fun log/-1292381875 ((x!0 var391)\n   (x!1 var2505)\n   (x!2 String)\n   (x!3 var138)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var1882)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140992512,
            "run_time": 2.550248146057129,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2286 () var138 var138!12)\r\n  (define-fun var3838 () var1882 var1882!10)\r\n  (define-fun var2313 () var391 var391!8)\r\n  (define-fun null-var138 () var138 var138!6)\r\n  (define-fun null-var1882 () var1882 var1882!4)\r\n  (define-fun null-var391 () var391 var391!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger",
            "r1 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r2 = <java.util.logging.Level: java.util.logging.Level FINEST>",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk13LumberjackLogger__fatal__758375204\\133.smt2",
        "z3": {
            "memory": 22933504,
            "run_time": 0.2290632724761963,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var624:\r\n  ;;   var624!val!1 var624!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var624!val!1 () var624)\r\n  (declare-fun var624!val!0 () var624)\r\n  ;; cardinality constraint:\r\n  (forall ((x var624)) (or (= x var624!val!1) (= x var624!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2375:\r\n  ;;   var2375!val!0 var2375!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2375!val!0 () var2375)\r\n  (declare-fun var2375!val!1 () var2375)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2375)) (or (= x var2375!val!0) (= x var2375!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3645:\r\n  ;;   var3645!val!1 var3645!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3645!val!1 () var3645)\r\n  (declare-fun var3645!val!0 () var3645)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3645)) (or (= x var3645!val!1) (= x var3645!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var624 () var624\r\n    var624!val!1)\r\n  (define-fun var2118 () var624\r\n    var624!val!0)\r\n  (define-fun var817 () String\r\n    (String_valueOf/-333372740 var2653))\r\n  (define-fun var3171 () var2375\r\n    var2375!val!0)\r\n  (define-fun var2653 () var3645\r\n    var3645!val!0)\r\n  (define-fun null-var3645 () var3645\r\n    var3645!val!1)\r\n  (define-fun null-var2375 () var2375\r\n    var2375!val!1)\r\n  (define-fun var2766 () var1779\r\n    var1779-SEVERE)\r\n  (define-fun var1779-SEVERE () var1779\r\n    var1779!val!0)\r\n  (define-fun var2766!1 () var1779\r\n    var1779!val!0)\r\n  (define-fun var3171!1 () var2375\r\n    var2375!val!0)\r\n  (define-fun var817!1 () String\r\n    \"\")\r\n  (define-fun var2118!1 () var624\r\n    var624!val!1)\r\n  (define-fun log/-1292381875 ((x!0 var2375)\r\n   (x!1 var1779)\r\n   (x!2 String)\r\n   (x!3 var624)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var3645)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6029312,
            "run_time": 0.04542064666748047,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2375 is 2\r\n; rep: (as @var2375_0 var2375)\r\n; rep: (as @var2375_1 var2375)\r\n; cardinality of var3645 is 2\r\n; rep: (as @var3645_0 var3645)\r\n; rep: (as @var3645_1 var3645)\r\n; cardinality of var624 is 2\r\n; rep: (as @var624_0 var624)\r\n; rep: (as @var624_1 var624)\r\n; cardinality of var1779 is 1\r\n; rep: (as @var1779_0 var1779)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_444 var3645)) String \"\")\r\n(define-fun log/-1292381875 ((BOUND_VARIABLE_447 var2375) (BOUND_VARIABLE_448 var1779) (BOUND_VARIABLE_449 String) (BOUND_VARIABLE_450 var624)) void (as @void_0 void))\r\n(define-fun null-var2375 () var2375 (as @var2375_0 var2375))\r\n(define-fun null-var3645 () var3645 (as @var3645_0 var3645))\r\n(define-fun null-var624 () var624 (as @var624_0 var624))\r\n(define-fun var1779-SEVERE () var1779 (as @var1779_0 var1779))\r\n(define-fun var3171 () var2375 (as @var2375_1 var2375))\r\n(define-fun var2653 () var3645 (as @var3645_1 var3645))\r\n(define-fun var2118 () var624 (as @var624_1 var624))\r\n(define-fun var3171!1 () var2375 (as @var2375_0 var2375))\r\n(define-fun var2766!1 () var1779 (as @var1779_0 var1779))\r\n(define-fun var817!1 () String \"\")\r\n(define-fun var2118!1 () var624 (as @var624_0 var624))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32567296,
            "run_time": 0.1840353012084961,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var624:\n  ;;   var624!val!1 var624!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var624!val!1 () var624)\n  (declare-fun var624!val!0 () var624)\n  ;; cardinality constraint:\n  (forall ((x var624)) (or (= x var624!val!1) (= x var624!val!0)))\n  ;; -----------\n  ;; universe for var2375:\n  ;;   var2375!val!0 var2375!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2375!val!0 () var2375)\n  (declare-fun var2375!val!1 () var2375)\n  ;; cardinality constraint:\n  (forall ((x var2375)) (or (= x var2375!val!0) (= x var2375!val!1)))\n  ;; -----------\n  ;; universe for var3645:\n  ;;   var3645!val!1 var3645!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3645!val!1 () var3645)\n  (declare-fun var3645!val!0 () var3645)\n  ;; cardinality constraint:\n  (forall ((x var3645)) (or (= x var3645!val!1) (= x var3645!val!0)))\n  ;; -----------\n  (define-fun null-var624 () var624\n    var624!val!1)\n  (define-fun var817 () String\n    (String_valueOf/-333372740 var2653))\n  (define-fun var2766 () var1779\n    var1779-SEVERE)\n  (define-fun var2118 () var624\n    var624!val!0)\n  (define-fun var3171 () var2375\n    var2375!val!0)\n  (define-fun var2653 () var3645\n    var3645!val!0)\n  (define-fun null-var3645 () var3645\n    var3645!val!1)\n  (define-fun null-var2375 () var2375\n    var2375!val!1)\n  (define-fun var1779-SEVERE () var1779\n    var1779!val!0)\n  (define-fun var2766!1 () var1779\n    var1779!val!0)\n  (define-fun var3171!1 () var2375\n    var2375!val!0)\n  (define-fun var817!1 () String\n    \"\")\n  (define-fun var2118!1 () var624\n    var624!val!1)\n  (define-fun log/-1292381875 ((x!0 var2375)\n   (x!1 var1779)\n   (x!2 String)\n   (x!3 var624)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var3645)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140156928,
            "run_time": 2.5950443744659424,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2118 () var624 var624!12)\r\n  (define-fun var2653 () var3645 var3645!10)\r\n  (define-fun var3171 () var2375 var2375!8)\r\n  (define-fun null-var624 () var624 var624!6)\r\n  (define-fun null-var3645 () var3645 var3645!4)\r\n  (define-fun null-var2375 () var2375 var2375!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger",
            "r1 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk14Logger__info__637546049\\208.smt2",
        "z3": {
            "memory": 22474752,
            "run_time": 0.23761749267578125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3850:\r\n  ;;   var3850!val!0 var3850!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3850!val!0 () var3850)\r\n  (declare-fun var3850!val!1 () var3850)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3850)) (or (= x var3850!val!0) (= x var3850!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3910:\r\n  ;;   var3910!val!0 var3910!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3910!val!0 () var3910)\r\n  (declare-fun var3910!val!1 () var3910)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3910)) (or (= x var3910!val!0) (= x var3910!val!1)))\r\n  ;; -----------\r\n  ;; universe for var336:\r\n  ;;   var336!val!0 var336!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var336!val!0 () var336)\r\n  (declare-fun var336!val!1 () var336)\r\n  ;; cardinality constraint:\r\n  (forall ((x var336)) (or (= x var336!val!0) (= x var336!val!1)))\r\n  ;; -----------\r\n  (define-fun var1598 () var3722\r\n    var3722-INFO)\r\n  (define-fun var523 () var3850\r\n    var3850!val!0)\r\n  (define-fun var2515 () String\r\n    (String_valueOf/-333372740 var2705))\r\n  (define-fun null-var336 () var336\r\n    var336!val!1)\r\n  (define-fun var507 () var3910\r\n    var3910!val!0)\r\n  (define-fun null-var3910 () var3910\r\n    var3910!val!1)\r\n  (define-fun null-var3850 () var3850\r\n    var3850!val!1)\r\n  (define-fun var2705 () var336\r\n    var336!val!0)\r\n  (define-fun var2515!1 () String\r\n    \"\")\r\n  (define-fun var507!1 () var3910\r\n    var3910!val!0)\r\n  (define-fun var1598!1 () var3722\r\n    var3722!val!0)\r\n  (define-fun var3722-INFO () var3722\r\n    var3722!val!0)\r\n  (define-fun var523!1 () var3850\r\n    var3850!val!0)\r\n  (define-fun log/-2053243914 ((x!0 var3850)\r\n   (x!1 var3722)\r\n   (x!2 String)\r\n   (x!3 var3910)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var336)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1658880,
            "run_time": 0.03050994873046875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3850 is 2\r\n; rep: (as @var3850_0 var3850)\r\n; rep: (as @var3850_1 var3850)\r\n; cardinality of var336 is 2\r\n; rep: (as @var336_0 var336)\r\n; rep: (as @var336_1 var336)\r\n; cardinality of var3910 is 2\r\n; rep: (as @var3910_0 var3910)\r\n; rep: (as @var3910_1 var3910)\r\n; cardinality of var3722 is 1\r\n; rep: (as @var3722_0 var3722)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_444 var336)) String \"\")\r\n(define-fun log/-2053243914 ((BOUND_VARIABLE_447 var3850) (BOUND_VARIABLE_448 var3722) (BOUND_VARIABLE_449 String) (BOUND_VARIABLE_450 var3910)) void (as @void_0 void))\r\n(define-fun null-var3850 () var3850 (as @var3850_0 var3850))\r\n(define-fun null-var336 () var336 (as @var336_0 var336))\r\n(define-fun null-var3910 () var3910 (as @var3910_0 var3910))\r\n(define-fun var3722-INFO () var3722 (as @var3722_0 var3722))\r\n(define-fun var523 () var3850 (as @var3850_1 var3850))\r\n(define-fun var2705 () var336 (as @var336_1 var336))\r\n(define-fun var507 () var3910 (as @var3910_1 var3910))\r\n(define-fun var523!1 () var3850 (as @var3850_0 var3850))\r\n(define-fun var1598!1 () var3722 (as @var3722_0 var3722))\r\n(define-fun var2515!1 () String \"\")\r\n(define-fun var507!1 () var3910 (as @var3910_0 var3910))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33624064,
            "run_time": 0.19969511032104492,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3850:\n  ;;   var3850!val!0 var3850!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3850!val!0 () var3850)\n  (declare-fun var3850!val!1 () var3850)\n  ;; cardinality constraint:\n  (forall ((x var3850)) (or (= x var3850!val!0) (= x var3850!val!1)))\n  ;; -----------\n  ;; universe for var3910:\n  ;;   var3910!val!0 var3910!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3910!val!0 () var3910)\n  (declare-fun var3910!val!1 () var3910)\n  ;; cardinality constraint:\n  (forall ((x var3910)) (or (= x var3910!val!0) (= x var3910!val!1)))\n  ;; -----------\n  ;; universe for var336:\n  ;;   var336!val!0 var336!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var336!val!0 () var336)\n  (declare-fun var336!val!1 () var336)\n  ;; cardinality constraint:\n  (forall ((x var336)) (or (= x var336!val!0) (= x var336!val!1)))\n  ;; -----------\n  (define-fun var523 () var3850\n    var3850!val!0)\n  (define-fun var2515 () String\n    (String_valueOf/-333372740 var2705))\n  (define-fun var1598 () var3722\n    var3722-INFO)\n  (define-fun null-var336 () var336\n    var336!val!1)\n  (define-fun var507 () var3910\n    var3910!val!0)\n  (define-fun null-var3910 () var3910\n    var3910!val!1)\n  (define-fun null-var3850 () var3850\n    var3850!val!1)\n  (define-fun var2705 () var336\n    var336!val!0)\n  (define-fun var2515!1 () String\n    \"\")\n  (define-fun var507!1 () var3910\n    var3910!val!0)\n  (define-fun var1598!1 () var3722\n    var3722!val!0)\n  (define-fun var3722-INFO () var3722\n    var3722!val!0)\n  (define-fun var523!1 () var3850\n    var3850!val!0)\n  (define-fun log/-2053243914 ((x!0 var3850)\n   (x!1 var3722)\n   (x!2 String)\n   (x!3 var3910)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var336)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140816384,
            "run_time": 2.6109182834625244,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var507 () var3910 var3910!12)\r\n  (define-fun var2705 () var336 var336!10)\r\n  (define-fun var523 () var3850 var3850!8)\r\n  (define-fun null-var3910 () var3910 var3910!6)\r\n  (define-fun null-var336 () var336 var336!4)\r\n  (define-fun null-var3850 () var3850 var3850!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk14Logger",
            "r1 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r2 = <java.util.logging.Level: java.util.logging.Level INFO>",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk14Logger__warn__-1935358807\\398.smt2",
        "z3": {
            "memory": 28790784,
            "run_time": 0.19304609298706055,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var549:\r\n  ;;   var549!val!0 var549!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var549!val!0 () var549)\r\n  (declare-fun var549!val!1 () var549)\r\n  ;; cardinality constraint:\r\n  (forall ((x var549)) (or (= x var549!val!0) (= x var549!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1721:\r\n  ;;   var1721!val!1 var1721!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1721!val!1 () var1721)\r\n  (declare-fun var1721!val!0 () var1721)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1721)) (or (= x var1721!val!1) (= x var1721!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var549 () var549\r\n    var549!val!1)\r\n  (define-fun var1079 () var2590\r\n    var2590-WARNING)\r\n  (define-fun var1881 () var1721\r\n    var1721!val!0)\r\n  (define-fun var2571 () var549\r\n    var549!val!0)\r\n  (define-fun var2851 () String\r\n    (String_valueOf/-333372740 var2571))\r\n  (define-fun null-var1721 () var1721\r\n    var1721!val!1)\r\n  (define-fun var1751 () var3925\r\n    var3925!val!0)\r\n  (define-fun null-var1411 () var1411\r\n    var1411!val!0)\r\n  (define-fun var1881!1 () var1721\r\n    var1721!val!1)\r\n  (define-fun null-NullType () var3925\r\n    var3925!val!0)\r\n  (define-fun var1079!1 () var2590\r\n    var2590!val!0)\r\n  (define-fun var2590-WARNING () var2590\r\n    var2590!val!0)\r\n  (define-fun var2851!1 () String\r\n    \"\")\r\n  (define-fun log/-2053243914 ((x!0 var1721)\r\n   (x!1 var2590)\r\n   (x!2 String)\r\n   (x!3 var1411)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var549)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1601536,
            "run_time": 0.12303948402404785,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1721 is 2\r\n; rep: (as @var1721_0 var1721)\r\n; rep: (as @var1721_1 var1721)\r\n; cardinality of var549 is 2\r\n; rep: (as @var549_0 var549)\r\n; rep: (as @var549_1 var549)\r\n; cardinality of var2590 is 1\r\n; rep: (as @var2590_0 var2590)\r\n; cardinality of var1411 is 1\r\n; rep: (as @var1411_0 var1411)\r\n; cardinality of var3925 is 1\r\n; rep: (as @var3925_0 var3925)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_439 var549)) String \"\")\r\n(define-fun log/-2053243914 ((BOUND_VARIABLE_442 var1721) (BOUND_VARIABLE_443 var2590) (BOUND_VARIABLE_444 String) (BOUND_VARIABLE_445 var1411)) void (as @void_0 void))\r\n(define-fun null-var1721 () var1721 (as @var1721_0 var1721))\r\n(define-fun null-var549 () var549 (as @var549_0 var549))\r\n(define-fun var2590-WARNING () var2590 (as @var2590_0 var2590))\r\n(define-fun null-NullType () var3925 (as @var3925_0 var3925))\r\n(define-fun null-var1411 () var1411 (as @var1411_0 var1411))\r\n(define-fun var1881 () var1721 (as @var1721_1 var1721))\r\n(define-fun var2571 () var549 (as @var549_1 var549))\r\n(define-fun var1881!1 () var1721 (as @var1721_0 var1721))\r\n(define-fun var1079!1 () var2590 (as @var2590_0 var2590))\r\n(define-fun var2851!1 () String \"\")\r\n(define-fun var1751 () var3925 (as @var3925_0 var3925))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33497088,
            "run_time": 0.1244652271270752,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var549:\n  ;;   var549!val!0 var549!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var549!val!0 () var549)\n  (declare-fun var549!val!1 () var549)\n  ;; cardinality constraint:\n  (forall ((x var549)) (or (= x var549!val!0) (= x var549!val!1)))\n  ;; -----------\n  ;; universe for var1721:\n  ;;   var1721!val!1 var1721!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1721!val!1 () var1721)\n  (declare-fun var1721!val!0 () var1721)\n  ;; cardinality constraint:\n  (forall ((x var1721)) (or (= x var1721!val!1) (= x var1721!val!0)))\n  ;; -----------\n  (define-fun null-var549 () var549\n    var549!val!1)\n  (define-fun var2851 () String\n    (String_valueOf/-333372740 var2571))\n  (define-fun var1881 () var1721\n    var1721!val!0)\n  (define-fun var1079 () var2590\n    var2590-WARNING)\n  (define-fun var2571 () var549\n    var549!val!0)\n  (define-fun null-var1721 () var1721\n    var1721!val!1)\n  (define-fun var1751 () var3925\n    var3925!val!0)\n  (define-fun null-var1411 () var1411\n    var1411!val!0)\n  (define-fun var1881!1 () var1721\n    var1721!val!1)\n  (define-fun null-NullType () var3925\n    var3925!val!0)\n  (define-fun var1079!1 () var2590\n    var2590!val!0)\n  (define-fun var2590-WARNING () var2590\n    var2590!val!0)\n  (define-fun var2851!1 () String\n    \"\")\n  (define-fun log/-2053243914 ((x!0 var1721)\n   (x!1 var2590)\n   (x!2 String)\n   (x!3 var1411)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var549)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140689408,
            "run_time": 2.455716609954834,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2571 () var549 var549!8)\r\n  (define-fun var1881 () var1721 var1721!6)\r\n  (define-fun null-var549 () var549 var549!4)\r\n  (define-fun null-var1721 () var1721 var1721!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk14Logger",
            "r1 := @parameter0: java.lang.Object",
            "$r2 = <java.util.logging.Level: java.util.logging.Level WARNING>",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.AvalonLogger__trace__-1283864061\\329.smt2",
        "z3": {
            "memory": 27836416,
            "run_time": 0.16756081581115723,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var919:\r\n  ;;   var919!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var919!val!0 () var919)\r\n  ;; cardinality constraint:\r\n  (forall ((x var919)) (= x var919!val!0))\r\n  ;; -----------\r\n  ;; universe for var3189:\r\n  ;;   var3189!val!0 var3189!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3189!val!0 () var3189)\r\n  (declare-fun var3189!val!1 () var3189)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3189)) (or (= x var3189!val!0) (= x var3189!val!1)))\r\n  ;; -----------\r\n  ;; universe for var431:\r\n  ;;   var431!val!0 var431!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var431!val!0 () var431)\r\n  (declare-fun var431!val!1 () var431)\r\n  ;; cardinality constraint:\r\n  (forall ((x var431)) (or (= x var431!val!0) (= x var431!val!1)))\r\n  ;; -----------\r\n  (define-fun var1320 () var919\r\n    (getLogger/-1412858970 var3935))\r\n  (define-fun var3562 () Bool\r\n    (var919_isDebugEnabled/-1946226594 (getLogger/-1412858970 var3935)))\r\n  (define-fun var1134 () var919\r\n    (getLogger/-1412858970 var3935))\r\n  (define-fun var3410 () String\r\n    (String_valueOf/-333372740 var1469))\r\n  (define-fun var1469 () var3189\r\n    var3189!val!0)\r\n  (define-fun var3935 () var431\r\n    var431!val!0)\r\n  (define-fun null-var3189 () var3189\r\n    var3189!val!1)\r\n  (define-fun null-var431 () var431\r\n    var431!val!1)\r\n  (define-fun var3410!1 () String\r\n    \"\")\r\n  (define-fun var1134!1 () var919\r\n    var919!val!0)\r\n  (define-fun var919_isDebugEnabled/-1946226594 ((x!0 var919)) Bool\r\n    true)\r\n  (define-fun getLogger/-1412858970 ((x!0 var431)) var919\r\n    var919!val!0)\r\n  (define-fun var919_debug/-617166452 ((x!0 var919) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var3189)) String\r\n    \"\")\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6135808,
            "run_time": 0.07715463638305664,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var431 is 2\r\n; rep: (as @var431_0 var431)\r\n; rep: (as @var431_1 var431)\r\n; cardinality of var3189 is 2\r\n; rep: (as @var3189_0 var3189)\r\n; rep: (as @var3189_1 var3189)\r\n; cardinality of var919 is 1\r\n; rep: (as @var919_0 var919)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getLogger/-1412858970 ((_arg_1 var431)) var919 (as @var919_0 var919))\r\n(define-fun var919_isDebugEnabled/-1946226594 ((_arg_1 var919)) Bool true)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_491 var3189)) String \"\")\r\n(define-fun var919_debug/-617166452 ((BOUND_VARIABLE_494 var919) (BOUND_VARIABLE_495 String)) void (as @void_0 void))\r\n(define-fun null-var431 () var431 (as @var431_0 var431))\r\n(define-fun null-var3189 () var3189 (as @var3189_0 var3189))\r\n(define-fun var3935 () var431 (as @var431_1 var431))\r\n(define-fun var1469 () var3189 (as @var3189_1 var3189))\r\n(define-fun var1134!1 () var919 (as @var919_0 var919))\r\n(define-fun var3410!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33697792,
            "run_time": 0.15364623069763184,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var919:\n  ;;   var919!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var919!val!0 () var919)\n  ;; cardinality constraint:\n  (forall ((x var919)) (= x var919!val!0))\n  ;; -----------\n  ;; universe for var3189:\n  ;;   var3189!val!0 var3189!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3189!val!0 () var3189)\n  (declare-fun var3189!val!1 () var3189)\n  ;; cardinality constraint:\n  (forall ((x var3189)) (or (= x var3189!val!0) (= x var3189!val!1)))\n  ;; -----------\n  ;; universe for var431:\n  ;;   var431!val!0 var431!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var431!val!0 () var431)\n  (declare-fun var431!val!1 () var431)\n  ;; cardinality constraint:\n  (forall ((x var431)) (or (= x var431!val!0) (= x var431!val!1)))\n  ;; -----------\n  (define-fun var1320 () var919\n    (getLogger/-1412858970 var3935))\n  (define-fun var3562 () Bool\n    (var919_isDebugEnabled/-1946226594 (getLogger/-1412858970 var3935)))\n  (define-fun var1134 () var919\n    (getLogger/-1412858970 var3935))\n  (define-fun var1469 () var3189\n    var3189!val!0)\n  (define-fun var3935 () var431\n    var431!val!0)\n  (define-fun null-var3189 () var3189\n    var3189!val!1)\n  (define-fun var3410 () String\n    (String_valueOf/-333372740 var1469))\n  (define-fun null-var431 () var431\n    var431!val!1)\n  (define-fun var3410!1 () String\n    \"\")\n  (define-fun var1134!1 () var919\n    var919!val!0)\n  (define-fun var919_isDebugEnabled/-1946226594 ((x!0 var919)) Bool\n    true)\n  (define-fun getLogger/-1412858970 ((x!0 var431)) var919\n    var919!val!0)\n  (define-fun var919_debug/-617166452 ((x!0 var919) (x!1 String)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var3189)) String\n    \"\")\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150917120,
            "run_time": 2.7641985416412354,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1469 () var3189 var3189!8)\r\n  (define-fun var3935 () var431 var431!6)\r\n  (define-fun null-var3189 () var3189 var3189!4)\r\n  (define-fun null-var431 () var431 var431!2)\r\n  (define-fun var919!22 () var919 (getLogger/-1412858970 var431!6))\r\n  (define-fun var919_isDebugEnabled/-1946226594 ((x!0 var919)) Bool (ite (= x!0 var919!22) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.AvalonLogger",
            "r2 := @parameter0: java.lang.Object",
            "$r1 = virtualinvoke r0.<org.apache.commons.logging.impl.AvalonLogger: org.apache.avalon.framework.logger.Logger getLogger()>()",
            "$z0 = interfaceinvoke $r1.<org.apache.avalon.framework.logger.Logger: boolean isDebugEnabled()>()",
            "if $z0 == 0 goto return",
            "$r4 = virtualinvoke r0.<org.apache.commons.logging.impl.AvalonLogger: org.apache.avalon.framework.logger.Logger getLogger()>()",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)",
            "interfaceinvoke $r4.<org.apache.avalon.framework.logger.Logger: void debug(java.lang.String)>($r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__informUponSimilarName__738058869\\473.smt2",
        "z3": {
            "memory": 31326208,
            "run_time": 0.17391395568847656,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3402:\r\n  ;;   var3402!val!0 var3402!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3402!val!0 () var3402)\r\n  (declare-fun var3402!val!1 () var3402)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3402)) (or (= x var3402!val!0) (= x var3402!val!1)))\r\n  ;; -----------\r\n  (define-fun var1866 () String\r\n    \"!0!\")\r\n  (define-fun var1098 () var3402\r\n    var3402!val!0)\r\n  (define-fun var709 () String\r\n    \"!2!\")\r\n  (define-fun null-var3402 () var3402\r\n    var3402!val!1)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var599 () Bool\r\n    (= var705 var709))\r\n  (define-fun var705 () String\r\n    \"!2!\")\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1601536,
            "run_time": 0.04522562026977539,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3402 is 2\r\n; rep: (as @var3402_0 var3402)\r\n; rep: (as @var3402_1 var3402)\r\n; cardinality of var284 is 1\r\n; rep: (as @var284_0 var284)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-var3402 () var3402 (as @var3402_0 var3402))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1098 () var3402 (as @var3402_1 var3402))\r\n(define-fun var1866 () String \"\")\r\n(define-fun var705 () String \"\")\r\n(define-fun var709 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 38739968,
            "run_time": 0.23435688018798828,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3402:\n  ;;   var3402!val!0 var3402!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3402!val!0 () var3402)\n  (declare-fun var3402!val!1 () var3402)\n  ;; cardinality constraint:\n  (forall ((x var3402)) (or (= x var3402!val!0) (= x var3402!val!1)))\n  ;; -----------\n  (define-fun var1866 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var705 () String\n    \"\\u{0}\")\n  (define-fun var1098 () var3402\n    var3402!val!0)\n  (define-fun null-var3402 () var3402\n    var3402!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var599 () Bool\n    (= var705 var709))\n  (define-fun var709 () String\n    \"\\u{0}\")\n)\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140636160,
            "run_time": 2.6245274543762207,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var709 () String \"\")\r\n  (define-fun var705 () String \"\")\r\n  (define-fun var1866 () String \"\")\r\n  (define-fun var1098 () var3402 var3402!4)\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun null-var3402 () var3402 var3402!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r3 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r2 := @parameter0: java.lang.StringBuilder",
            "r0 := @parameter1: java.lang.String",
            "r1 := @parameter2: java.lang.String",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1)",
            "if $z0 == 0 goto $i0 = <org.apache.commons.logging.impl.LogFactoryImpl: int PKG_LEN>",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__handleFlawedHierarchy__772987565\\456.smt2",
        "z3": {
            "memory": 22908928,
            "run_time": 0.23782610893249512,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 92 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1601536,
            "run_time": 0.07674598693847656,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33800192,
            "run_time": 0.1244652271270752,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 92 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 157540352,
            "run_time": 2.96899676322937,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 26,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 5,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r4 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r27 := @parameter0: java.lang.ClassLoader",
            "r2 := @parameter1: java.lang.Class",
            "z7 = 0",
            "$r0 = class \"Lorg/apache/commons/logging/Log;\"",
            "r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>()",
            "r3 = virtualinvoke r2.<java.lang.Class: java.lang.Class[] getInterfaces()>()",
            "i0 = lengthof r3",
            "i1 = 0",
            "if i1 >= i0 goto (branch)",
            "if z7 == 0 goto $z0 = r4.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedDiscovery>",
            "$z3 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z3 == 0 goto $z8 = r4.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedHierarchy>",
            "$z8 = r4.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedHierarchy>",
            "if $z8 != 0 goto $z4 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "$r17 = new java.lang.StringBuilder",
            "specialinvoke $r17.<java.lang.StringBuilder: void <init>()>()",
            "virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Terminating logging for this context \")",
            "virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"due to bad log hierarchy. \")",
            "virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"You have more than one version of \\'\")",
            "$r18 = class \"Lorg/apache/commons/logging/Log;\"",
            "$r19 = virtualinvoke $r18.<java.lang.Class: java.lang.String getName()>()",
            "virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19)",
            "virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' visible.\")",
            "$z5 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z5 == 0 goto $r20 = new org.apache.commons.logging.LogConfigurationException",
            "$r20 = new org.apache.commons.logging.LogConfigurationException",
            "$r21 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r20.<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.String)>($r21)",
            "throw $r20"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__discoverLogImplementation__-203483503\\203.smt2",
        "z3": {
            "memory": 31506432,
            "run_time": 0.10327959060668945,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var700:\r\n  ;;   var700!val!1 var700!val!0 var700!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var700!val!1 () var700)\r\n  (declare-fun var700!val!0 () var700)\r\n  (declare-fun var700!val!2 () var700)\r\n  ;; cardinality constraint:\r\n  (forall ((x var700))\r\n          (or (= x var700!val!1) (= x var700!val!0) (= x var700!val!2)))\r\n  ;; -----------\r\n  (define-fun var3918 () var700\r\n    var700!val!0)\r\n  (define-fun var950 () String\r\n    (findUserSpecifiedLogClassName/-487640286 var3918!1))\r\n  (define-fun var3567 () var3412\r\n    (createLogFromClass/1434645975\r\n  var3918!1\r\n  (findUserSpecifiedLogClassName/-487640286 var3918!1)\r\n  var981\r\n  (ite (= 1 1) true false)))\r\n  (define-fun var2688 () Bool\r\n    var700_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun null-var700 () var700\r\n    var700!val!1)\r\n  (define-fun var981 () String\r\n    \"A\")\r\n  (define-fun var1618 () String\r\n    String-init)\r\n  (define-fun var714 () String\r\n    var1618!7)\r\n  (define-fun var1209 () var3412\r\n    null-var3412)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3918!1 () var700\r\n    var700!val!2)\r\n  (define-fun var3355 () Bool\r\n    var700_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun var2071 () var2776\r\n    var2776-init)\r\n  (define-fun var1618!1 () String\r\n    \"User-specified log class '\")\r\n  (define-fun null-var3412 () var3412\r\n    var3412!val!0)\r\n  (define-fun var1618!3 () String\r\n    \"User-specified log class 'B' cannot be found or is not useable.\")\r\n  (define-fun var700_isDiagnosticsEnabled/-1107982053 () Bool\r\n    false)\r\n  (define-fun var1618!2 () String\r\n    \"User-specified log class 'B\")\r\n  (define-fun var2071!1 () var2776\r\n    var2776!val!0)\r\n  (define-fun var714!1 () String\r\n    \"\")\r\n  (define-fun var1618!5 () String\r\n    \"\")\r\n  (define-fun var1155 () String\r\n    \"\")\r\n  (define-fun var1618!4 () String\r\n    \"\")\r\n  (define-fun var950!1 () String\r\n    \"\")\r\n  (define-fun var1618!7 () String\r\n    \"\")\r\n  (define-fun var3918!4 () var700\r\n    var700!val!1)\r\n  (define-fun var2776-init () var2776\r\n    var2776!val!0)\r\n  (define-fun var3918!5 () var700\r\n    var700!val!1)\r\n  (define-fun var1108 () String\r\n    \"\")\r\n  (define-fun var1012 () String\r\n    \"\")\r\n  (define-fun var1618!6 () String\r\n    \"\")\r\n  (define-fun var3918!2 () var700\r\n    var700!val!1)\r\n  (define-fun var950!3 () String\r\n    \"\")\r\n  (define-fun var950!4 () String\r\n    \"\")\r\n  (define-fun var950!2 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3918!3 () var700\r\n    var700!val!1)\r\n  (define-fun var2454 () String\r\n    \"\")\r\n  (define-fun findUserSpecifiedLogClassName/-487640286 ((x!0 var700)) String\r\n    \"B\")\r\n  (define-fun createLogFromClass/1434645975 ((x!0 var700)\r\n   (x!1 String)\r\n   (x!2 String)\r\n   (x!3 Bool)) var3412\r\n    var3412!val!0)\r\n  (define-fun informUponSimilarName/738058869 ((x!0 var700)\r\n   (x!1 String)\r\n   (x!2 String)\r\n   (x!3 String)) void\r\n    void!val!0)\r\n  (define-fun <init>/-1163573448 ((x!0 var2776) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun initConfiguration/1097963384 ((x!0 var700)) void\r\n    void!val!0)\r\n)\r\n(error \"line 100 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1716224,
            "run_time": 0.029967546463012695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var700 is 3\r\n; rep: (as @var700_0 var700)\r\n; rep: (as @var700_1 var700)\r\n; rep: (as @var700_2 var700)\r\n; cardinality of var1892 is 1\r\n; rep: (as @var1892_0 var1892)\r\n; cardinality of var3412 is 1\r\n; rep: (as @var3412_0 var3412)\r\n; cardinality of var2776 is 1\r\n; rep: (as @var2776_0 var2776)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var700_isDiagnosticsEnabled/-1107982053 () Bool false)\r\n(define-fun initConfiguration/1097963384 ((BOUND_VARIABLE_705 var700)) void (as @void_0 void))\r\n(define-fun findUserSpecifiedLogClassName/-487640286 ((_arg_1 var700)) String \"\")\r\n(define-fun createLogFromClass/1434645975 ((BOUND_VARIABLE_708 var700) (BOUND_VARIABLE_709 String) (BOUND_VARIABLE_710 String) (BOUND_VARIABLE_711 Bool)) var3412 (as @var3412_0 var3412))\r\n(define-fun String-init () String \"\")\r\n(define-fun informUponSimilarName/738058869 ((BOUND_VARIABLE_714 var700) (BOUND_VARIABLE_715 String) (BOUND_VARIABLE_716 String) (BOUND_VARIABLE_717 String)) void (as @void_0 void))\r\n(define-fun var2776-init () var2776 (as @var2776_0 var2776))\r\n(define-fun <init>/-1163573448 ((BOUND_VARIABLE_720 var2776) (BOUND_VARIABLE_721 String)) void (as @void_0 void))\r\n(define-fun null-var700 () var700 (as @var700_0 var700))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3412 () var3412 (as @var3412_0 var3412))\r\n(define-fun var3918 () var700 (as @var700_1 var700))\r\n(define-fun var981 () String \"\")\r\n(define-fun var3918!1 () var700 (as @var700_2 var700))\r\n(define-fun var1618!1 () String \"User-specified log class '\")\r\n(define-fun var1618!2 () String \"User-specified log class '\")\r\n(define-fun var1618!3 () String \"User-specified log class '' cannot be found or is not useable.\")\r\n(define-fun var3918!2 () var700 (as @var700_0 var700))\r\n(define-fun var1618!4 () String \"\")\r\n(define-fun var950!1 () String \"\")\r\n(define-fun var2454 () String \"\")\r\n(define-fun var3918!3 () var700 (as @var700_0 var700))\r\n(define-fun var1618!5 () String \"\")\r\n(define-fun var950!2 () String \"\")\r\n(define-fun var1108 () String \"\")\r\n(define-fun var3918!4 () var700 (as @var700_0 var700))\r\n(define-fun var1618!6 () String \"\")\r\n(define-fun var950!3 () String \"\")\r\n(define-fun var1012 () String \"\")\r\n(define-fun var3918!5 () var700 (as @var700_0 var700))\r\n(define-fun var1618!7 () String \"\")\r\n(define-fun var950!4 () String \"\")\r\n(define-fun var1155 () String \"\")\r\n(define-fun var2071!1 () var2776 (as @var2776_0 var2776))\r\n(define-fun var714!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35844096,
            "run_time": 0.27892518043518066,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 99 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 100 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 162623488,
            "run_time": 3.059826135635376,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var700/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__discoverLogImplementation__-203483503\\203.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1618!3 =\r\n     concat(var1618!2, \"\\u{0}27 cannot be found or is not useable.\")\r\n   var1618!2 =\r\n     concat(\"User-specified log class \\u{0}27\", all_18_0)\r\n\r\n2346ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r3 := @parameter0: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto specialinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void initConfiguration()>()",
            "specialinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void initConfiguration()>()",
            "r15 = null",
            "$r14 = specialinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String findUserSpecifiedLogClassName()>()",
            "if $r14 == null goto $z1 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "$z2 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z2 == 0 goto $r13 = specialinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: org.apache.commons.logging.Log createLogFromClass(java.lang.String,java.lang.String,boolean)>($r14, r3, 1)",
            "$r13 = specialinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: org.apache.commons.logging.Log createLogFromClass(java.lang.String,java.lang.String,boolean)>($r14, r3, 1)",
            "if $r13 != null goto return $r13",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>(java.lang.String)>(\"User-specified log class \\'\")",
            "virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14)",
            "virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' cannot be found or is not useable.\")",
            "specialinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void informUponSimilarName(java.lang.StringBuilder,java.lang.String,java.lang.String)>($r5, $r14, \"org.apache.commons.logging.impl.Log4JLogger\")",
            "specialinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void informUponSimilarName(java.lang.StringBuilder,java.lang.String,java.lang.String)>($r5, $r14, \"org.apache.commons.logging.impl.Jdk14Logger\")",
            "specialinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void informUponSimilarName(java.lang.StringBuilder,java.lang.String,java.lang.String)>($r5, $r14, \"org.apache.commons.logging.impl.Jdk13LumberjackLogger\")",
            "specialinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void informUponSimilarName(java.lang.StringBuilder,java.lang.String,java.lang.String)>($r5, $r14, \"org.apache.commons.logging.impl.SimpleLog\")",
            "$r6 = new org.apache.commons.logging.LogConfigurationException",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r6.<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.String)>($r7)",
            "throw $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__handleFlawedHierarchy__772987565\\464.smt2",
        "z3": {
            "memory": 31399936,
            "run_time": 0.2846522331237793,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1518:\r\n  ;;   var1518!val!1 var1518!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1518!val!1 () var1518)\r\n  (declare-fun var1518!val!0 () var1518)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1518)) (or (= x var1518!val!1) (= x var1518!val!0)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  ;; universe for var640:\r\n  ;;   var640!val!0 var640!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var640!val!0 () var640)\r\n  (declare-fun var640!val!1 () var640)\r\n  ;; cardinality constraint:\r\n  (forall ((x var640)) (or (= x var640!val!0) (= x var640!val!1)))\r\n  ;; -----------\r\n  (define-fun var3612 () Int\r\n    (getLength-Arr-ClassObject-1 (getInterfaces/-1280103563 var416)))\r\n  (define-fun var3675 () String\r\n    var1832!5)\r\n  (define-fun var1317 () var1518\r\n    var1518!val!0)\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var574 () String\r\n    (getName/-1958580599 var416))\r\n  (define-fun var1832 () String\r\n    String-init)\r\n  (define-fun var2465 () Bool\r\n    var640_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun var1849 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var2516 () Int\r\n    0)\r\n  (define-fun var416 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var2225 () Bool\r\n    (allowFlawedDiscovery/1199358121 var1585))\r\n  (define-fun var2005 () ClassObject\r\n    var1768!class)\r\n  (define-fun var1411 () String\r\n    var1832!5)\r\n  (define-fun null-var1518 () var1518\r\n    var1518!val!1)\r\n  (define-fun var1956 () var3073\r\n    var3073-init)\r\n  (define-fun null-var640 () var640\r\n    var640!val!1)\r\n  (define-fun var1585 () var640\r\n    var640!val!0)\r\n  (define-fun var1409 () (Array Int ClassObject)\r\n    (getInterfaces/-1280103563 var416))\r\n  (define-fun var1075 () String\r\n    (getName/-1958580599 var1768!class))\r\n  (define-fun var640_isDiagnosticsEnabled/-1107982053 () Bool\r\n    true)\r\n  (define-fun var1832!4 () String\r\n    \"Terminating logging for this context. Log class '\")\r\n  (define-fun var1832!3 () String\r\n    \"Terminating logging for this context. Log class '\")\r\n  (define-fun var1832!5 () String\r\n    \"Terminating logging for this context. Log class '' does not implement the Log interface.\")\r\n  (define-fun var1832!2 () String\r\n    \"Terminating logging for this context. \")\r\n  (define-fun var1832!1 () String\r\n    \"\")\r\n  (define-fun var1411!1 () String\r\n    \"\")\r\n  (define-fun var1585!1 () var640\r\n    var640!val!0)\r\n  (define-fun var3073-init () var3073\r\n    var3073!val!0)\r\n  (define-fun var1768!class () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var1956!1 () var3073\r\n    var3073!val!0)\r\n  (define-fun var3675!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getInterfaces/-1280103563 ((x!0 ClassObject)) (Array Int\r\n         ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\r\n  (define-fun allowFlawedDiscovery/1199358121 ((x!0 var640)) Bool\r\n    false)\r\n  (define-fun getLength-Arr-ClassObject-1 ((x!0 (Array Int ClassObject))) Int\r\n    0)\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun logDiagnostic/1870399160 ((x!0 var640) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun <init>/-1163573448 ((x!0 var3073) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 94 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1724416,
            "run_time": 0.04502558708190918,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var640 is 2\r\n; rep: (as @var640_0 var640)\r\n; rep: (as @var640_1 var640)\r\n; cardinality of var1518 is 2\r\n; rep: (as @var1518_0 var1518)\r\n; rep: (as @var1518_1 var1518)\r\n; cardinality of var1768 is 1\r\n; rep: (as @var1768_0 var1768)\r\n; cardinality of var3073 is 1\r\n; rep: (as @var3073_0 var3073)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var1768!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_689 ClassObject)) String \"\")\r\n(define-fun getInterfaces/-1280103563 ((_arg_1 ClassObject)) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun getLength-Arr-ClassObject-1 ((_arg_1 (Array Int ClassObject))) Int 0)\r\n(define-fun allowFlawedDiscovery/1199358121 ((_arg_1 var640)) Bool false)\r\n(define-fun String-init () String \"\")\r\n(define-fun var640_isDiagnosticsEnabled/-1107982053 () Bool true)\r\n(define-fun logDiagnostic/1870399160 ((BOUND_VARIABLE_692 var640) (BOUND_VARIABLE_693 String)) void (as @void_0 void))\r\n(define-fun var3073-init () var3073 (as @var3073_0 var3073))\r\n(define-fun <init>/-1163573448 ((BOUND_VARIABLE_696 var3073) (BOUND_VARIABLE_697 String)) void (as @void_0 void))\r\n(define-fun null-var640 () var640 (as @var640_0 var640))\r\n(define-fun null-var1518 () var1518 (as @var1518_0 var1518))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var1585 () var640 (as @var640_1 var640))\r\n(define-fun var1317 () var1518 (as @var1518_1 var1518))\r\n(define-fun var416 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var1832!1 () String \"\")\r\n(define-fun var1832!2 () String \"Terminating logging for this context. \")\r\n(define-fun var1832!3 () String \"Terminating logging for this context. Log class '\")\r\n(define-fun var1832!4 () String \"Terminating logging for this context. Log class '\")\r\n(define-fun var1832!5 () String \"Terminating logging for this context. Log class '' does not implement the Log interface.\")\r\n(define-fun var1585!1 () var640 (as @var640_0 var640))\r\n(define-fun var1411!1 () String \"\")\r\n(define-fun var1956!1 () var3073 (as @var3073_0 var3073))\r\n(define-fun var3675!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34820096,
            "run_time": 0.10785722732543945,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1518:\n  ;;   var1518!val!1 var1518!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1518!val!1 () var1518)\n  (declare-fun var1518!val!0 () var1518)\n  ;; cardinality constraint:\n  (forall ((x var1518)) (or (= x var1518!val!1) (= x var1518!val!0)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  ;; universe for var640:\n  ;;   var640!val!0 var640!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var640!val!0 () var640)\n  (declare-fun var640!val!1 () var640)\n  ;; cardinality constraint:\n  (forall ((x var640)) (or (= x var640!val!0) (= x var640!val!1)))\n  ;; -----------\n  (define-fun var2465 () Bool\n    var640_isDiagnosticsEnabled/-1107982053)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var574 () String\n    (getName/-1958580599 var416))\n  (define-fun var1317 () var1518\n    var1518!val!0)\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var1849 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var2516 () Int\n    0)\n  (define-fun var2225 () Bool\n    (allowFlawedDiscovery/1199358121 var1585))\n  (define-fun var1409 () (Array Int ClassObject)\n    (getInterfaces/-1280103563 var416))\n  (define-fun var2005 () ClassObject\n    var1768!class)\n  (define-fun var1832 () String\n    String-init)\n  (define-fun var1956 () var3073\n    var3073-init)\n  (define-fun var1411 () String\n    var1832!5)\n  (define-fun var416 () ClassObject\n    ClassObject!val!0)\n  (define-fun var3612 () Int\n    (getLength-Arr-ClassObject-1 (getInterfaces/-1280103563 var416)))\n  (define-fun null-var1518 () var1518\n    var1518!val!1)\n  (define-fun null-var640 () var640\n    var640!val!1)\n  (define-fun var1585 () var640\n    var640!val!0)\n  (define-fun var1075 () String\n    (getName/-1958580599 var1768!class))\n  (define-fun var3675 () String\n    var1832!5)\n  (define-fun var640_isDiagnosticsEnabled/-1107982053 () Bool\n    true)\n  (define-fun var1832!4 () String\n    \"Terminating logging for this context. Log class '\")\n  (define-fun var1832!3 () String\n    \"Terminating logging for this context. Log class '\")\n  (define-fun var1832!5 () String\n    \"Terminating logging for this context. Log class '' does not implement the Log interface.\")\n  (define-fun var1832!2 () String\n    \"Terminating logging for this context. \")\n  (define-fun var1832!1 () String\n    \"\")\n  (define-fun var1411!1 () String\n    \"\")\n  (define-fun var1585!1 () var640\n    var640!val!0)\n  (define-fun var3073-init () var3073\n    var3073!val!0)\n  (define-fun var1768!class () ClassObject\n    ClassObject!val!0)\n  (define-fun var1956!1 () var3073\n    var3073!val!0)\n  (define-fun var3675!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun getInterfaces/-1280103563 ((x!0 ClassObject)) (Array Int\n         ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\n  (define-fun allowFlawedDiscovery/1199358121 ((x!0 var640)) Bool\n    false)\n  (define-fun getLength-Arr-ClassObject-1 ((x!0 (Array Int ClassObject))) Int\n    0)\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n  (define-fun logDiagnostic/1870399160 ((x!0 var640) (x!1 String)) void\n    void!val!0)\n  (define-fun <init>/-1163573448 ((x!0 var3073) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 94 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180998144,
            "run_time": 3.1549150943756104,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: ClassObject/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__handleFlawedHierarchy__772987565\\464.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1832!5 =\r\n     concat(var1832!4, \"\\u{0}27 does not implement the Log interface.\")\r\n   var1832!4 =\r\n     concat(\"Terminating logging for this context. Log class \\u{0}27\", all_32_2)\r\n\r\n2372ms\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 26,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r4 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r27 := @parameter0: java.lang.ClassLoader",
            "r2 := @parameter1: java.lang.Class",
            "z7 = 0",
            "$r0 = class \"Lorg/apache/commons/logging/Log;\"",
            "r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>()",
            "r3 = virtualinvoke r2.<java.lang.Class: java.lang.Class[] getInterfaces()>()",
            "i0 = lengthof r3",
            "i1 = 0",
            "if i1 >= i0 goto (branch)",
            "if z7 == 0 goto $z0 = r4.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedDiscovery>",
            "$z0 = r4.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedDiscovery>",
            "if $z0 != 0 goto $z1 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "$r8 = new java.lang.StringBuilder",
            "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()",
            "virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Terminating logging for this context. \")",
            "virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Log class \\'\")",
            "$r9 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>()",
            "virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)",
            "virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' does not implement the Log interface.\")",
            "$z2 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z2 == 0 goto $r10 = new org.apache.commons.logging.LogConfigurationException",
            "$r12 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.apache.commons.logging.impl.LogFactoryImpl: void logDiagnostic(java.lang.String)>($r12)",
            "$r10 = new org.apache.commons.logging.LogConfigurationException",
            "$r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r10.<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.String)>($r11)",
            "throw $r10"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__handleFlawedHierarchy__772987565\\447.smt2",
        "z3": {
            "memory": 31518720,
            "run_time": 0.2998621463775635,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3434:\r\n  ;;   var3434!val!1 var3434!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3434!val!1 () var3434)\r\n  (declare-fun var3434!val!0 () var3434)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3434)) (or (= x var3434!val!1) (= x var3434!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2609:\r\n  ;;   var2609!val!0 var2609!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2609!val!0 () var2609)\r\n  (declare-fun var2609!val!1 () var2609)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2609)) (or (= x var2609!val!0) (= x var2609!val!1)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var1103 () var1068\r\n    var1068-init)\r\n  (define-fun var3688 () var3434\r\n    var3434!val!0)\r\n  (define-fun var2414 () String\r\n    (getName/-1958580599 var3302))\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var2474 () String\r\n    (getName/-1958580599 var3507!class))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var3434 () var3434\r\n    var3434!val!1)\r\n  (define-fun var269 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var3143 () String\r\n    var3731!5)\r\n  (define-fun var998 () Int\r\n    0)\r\n  (define-fun var3731 () String\r\n    String-init)\r\n  (define-fun var386 () Int\r\n    (getLength-Arr-ClassObject-1 (getInterfaces/-1280103563 var3302)))\r\n  (define-fun var2650 () Bool\r\n    (allowFlawedDiscovery/1199358121 var1718))\r\n  (define-fun var3501 () ClassObject\r\n    var3507!class)\r\n  (define-fun var2643 () Bool\r\n    var2609_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun var1435 () (Array Int ClassObject)\r\n    (getInterfaces/-1280103563 var3302))\r\n  (define-fun null-var2609 () var2609\r\n    var2609!val!1)\r\n  (define-fun var3302 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var1718 () var2609\r\n    var2609!val!0)\r\n  (define-fun var3731!2 () String\r\n    \"Terminating logging for this context. \")\r\n  (define-fun var2609_isDiagnosticsEnabled/-1107982053 () Bool\r\n    false)\r\n  (define-fun var3731!5 () String\r\n    \"Terminating logging for this context. Log class '' does not implement the Log interface.\")\r\n  (define-fun var3731!4 () String\r\n    \"Terminating logging for this context. Log class '\")\r\n  (define-fun var3731!3 () String\r\n    \"Terminating logging for this context. Log class '\")\r\n  (define-fun var3731!1 () String\r\n    \"\")\r\n  (define-fun var1068-init () var1068\r\n    var1068!val!0)\r\n  (define-fun var1103!1 () var1068\r\n    var1068!val!0)\r\n  (define-fun var3143!1 () String\r\n    \"\")\r\n  (define-fun var3507!class () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getLength-Arr-ClassObject-1 ((x!0 (Array Int ClassObject))) Int\r\n    0)\r\n  (define-fun getInterfaces/-1280103563 ((x!0 ClassObject)) (Array Int\r\n         ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\r\n  (define-fun allowFlawedDiscovery/1199358121 ((x!0 var2609)) Bool\r\n    false)\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun <init>/-1163573448 ((x!0 var1068) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 85 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1716224,
            "run_time": 0.030812740325927734,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2609 is 2\r\n; rep: (as @var2609_0 var2609)\r\n; rep: (as @var2609_1 var2609)\r\n; cardinality of var3434 is 2\r\n; rep: (as @var3434_0 var3434)\r\n; rep: (as @var3434_1 var3434)\r\n; cardinality of var3507 is 1\r\n; rep: (as @var3507_0 var3507)\r\n; cardinality of var1068 is 1\r\n; rep: (as @var1068_0 var1068)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var3507!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_667 ClassObject)) String \"\")\r\n(define-fun getInterfaces/-1280103563 ((_arg_1 ClassObject)) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun getLength-Arr-ClassObject-1 ((_arg_1 (Array Int ClassObject))) Int 0)\r\n(define-fun allowFlawedDiscovery/1199358121 ((_arg_1 var2609)) Bool false)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2609_isDiagnosticsEnabled/-1107982053 () Bool false)\r\n(define-fun var1068-init () var1068 (as @var1068_0 var1068))\r\n(define-fun <init>/-1163573448 ((BOUND_VARIABLE_670 var1068) (BOUND_VARIABLE_671 String)) void (as @void_0 void))\r\n(define-fun null-var2609 () var2609 (as @var2609_0 var2609))\r\n(define-fun null-var3434 () var3434 (as @var3434_0 var3434))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var1718 () var2609 (as @var2609_1 var2609))\r\n(define-fun var3688 () var3434 (as @var3434_1 var3434))\r\n(define-fun var3302 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var3731!1 () String \"\")\r\n(define-fun var3731!2 () String \"Terminating logging for this context. \")\r\n(define-fun var3731!3 () String \"Terminating logging for this context. Log class '\")\r\n(define-fun var3731!4 () String \"Terminating logging for this context. Log class '\")\r\n(define-fun var3731!5 () String \"Terminating logging for this context. Log class '' does not implement the Log interface.\")\r\n(define-fun var1103!1 () var1068 (as @var1068_0 var1068))\r\n(define-fun var3143!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34746368,
            "run_time": 0.10879397392272949,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3434:\n  ;;   var3434!val!1 var3434!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3434!val!1 () var3434)\n  (declare-fun var3434!val!0 () var3434)\n  ;; cardinality constraint:\n  (forall ((x var3434)) (or (= x var3434!val!1) (= x var3434!val!0)))\n  ;; -----------\n  ;; universe for var2609:\n  ;;   var2609!val!0 var2609!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2609!val!0 () var2609)\n  (declare-fun var2609!val!1 () var2609)\n  ;; cardinality constraint:\n  (forall ((x var2609)) (or (= x var2609!val!0) (= x var2609!val!1)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  (define-fun var2414 () String\n    (getName/-1958580599 var3302))\n  (define-fun var998 () Int\n    0)\n  (define-fun var3688 () var3434\n    var3434!val!0)\n  (define-fun var2474 () String\n    (getName/-1958580599 var3507!class))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var386 () Int\n    (getLength-Arr-ClassObject-1 (getInterfaces/-1280103563 var3302)))\n  (define-fun var2650 () Bool\n    (allowFlawedDiscovery/1199358121 var1718))\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var3501 () ClassObject\n    var3507!class)\n  (define-fun var3731 () String\n    String-init)\n  (define-fun null-var3434 () var3434\n    var3434!val!1)\n  (define-fun var3143 () String\n    var3731!5)\n  (define-fun var1435 () (Array Int ClassObject)\n    (getInterfaces/-1280103563 var3302))\n  (define-fun var2643 () Bool\n    var2609_isDiagnosticsEnabled/-1107982053)\n  (define-fun var1103 () var1068\n    var1068-init)\n  (define-fun var269 () Bool\n    (ite (= 1 0) true false))\n  (define-fun null-var2609 () var2609\n    var2609!val!1)\n  (define-fun var3302 () ClassObject\n    ClassObject!val!0)\n  (define-fun var1718 () var2609\n    var2609!val!0)\n  (define-fun var3731!2 () String\n    \"Terminating logging for this context. \")\n  (define-fun var2609_isDiagnosticsEnabled/-1107982053 () Bool\n    false)\n  (define-fun var3731!5 () String\n    \"Terminating logging for this context. Log class '' does not implement the Log interface.\")\n  (define-fun var3731!4 () String\n    \"Terminating logging for this context. Log class '\")\n  (define-fun var3731!3 () String\n    \"Terminating logging for this context. Log class '\")\n  (define-fun var3731!1 () String\n    \"\")\n  (define-fun var1068-init () var1068\n    var1068!val!0)\n  (define-fun var1103!1 () var1068\n    var1068!val!0)\n  (define-fun var3143!1 () String\n    \"\")\n  (define-fun var3507!class () ClassObject\n    ClassObject!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun getInterfaces/-1280103563 ((x!0 ClassObject)) (Array Int\n         ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\n  (define-fun getLength-Arr-ClassObject-1 ((x!0 (Array Int ClassObject))) Int\n    0)\n  (define-fun allowFlawedDiscovery/1199358121 ((x!0 var2609)) Bool\n    false)\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n  (define-fun <init>/-1163573448 ((x!0 var1068) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 85 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 172920832,
            "run_time": 3.1539783477783203,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3434/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__handleFlawedHierarchy__772987565\\447.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3731!5 =\r\n     concat(var3731!4, \"\\u{0}27 does not implement the Log interface.\")\r\n   var3731!4 =\r\n     concat(\"Terminating logging for this context. Log class \\u{0}27\", all_32_2)\r\n\r\n2425ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 23,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r4 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r27 := @parameter0: java.lang.ClassLoader",
            "r2 := @parameter1: java.lang.Class",
            "z7 = 0",
            "$r0 = class \"Lorg/apache/commons/logging/Log;\"",
            "r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>()",
            "r3 = virtualinvoke r2.<java.lang.Class: java.lang.Class[] getInterfaces()>()",
            "i0 = lengthof r3",
            "i1 = 0",
            "if i1 >= i0 goto (branch)",
            "if z7 == 0 goto $z0 = r4.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedDiscovery>",
            "$z0 = r4.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedDiscovery>",
            "if $z0 != 0 goto $z1 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "$r8 = new java.lang.StringBuilder",
            "specialinvoke $r8.<java.lang.StringBuilder: void <init>()>()",
            "virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Terminating logging for this context. \")",
            "virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Log class \\'\")",
            "$r9 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>()",
            "virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)",
            "virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' does not implement the Log interface.\")",
            "$z2 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z2 == 0 goto $r10 = new org.apache.commons.logging.LogConfigurationException",
            "$r10 = new org.apache.commons.logging.LogConfigurationException",
            "$r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "specialinvoke $r10.<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.String)>($r11)",
            "throw $r10"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk13LumberjackLogger__error__1347119520\\87.smt2",
        "z3": {
            "memory": 31657984,
            "run_time": 0.3199880123138428,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3985:\r\n  ;;   var3985!val!0 var3985!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3985!val!0 () var3985)\r\n  (declare-fun var3985!val!1 () var3985)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3985)) (or (= x var3985!val!0) (= x var3985!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1446:\r\n  ;;   var1446!val!1 var1446!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1446!val!1 () var1446)\r\n  (declare-fun var1446!val!0 () var1446)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1446)) (or (= x var1446!val!1) (= x var1446!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2517:\r\n  ;;   var2517!val!1 var2517!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2517!val!1 () var2517)\r\n  (declare-fun var2517!val!0 () var2517)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2517)) (or (= x var2517!val!1) (= x var2517!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var2517 () var2517\r\n    var2517!val!1)\r\n  (define-fun var2512 () var1446\r\n    var1446!val!0)\r\n  (define-fun var320 () var3132\r\n    var3132-SEVERE)\r\n  (define-fun null-var3985 () var3985\r\n    var3985!val!1)\r\n  (define-fun var345 () var3985\r\n    var3985!val!0)\r\n  (define-fun null-var1446 () var1446\r\n    var1446!val!1)\r\n  (define-fun var1549 () String\r\n    (String_valueOf/-333372740 var2512))\r\n  (define-fun var3628 () var2517\r\n    var2517!val!0)\r\n  (define-fun var345!1 () var3985\r\n    var3985!val!0)\r\n  (define-fun var320!1 () var3132\r\n    var3132!val!0)\r\n  (define-fun var3628!1 () var2517\r\n    var2517!val!1)\r\n  (define-fun var1549!1 () String\r\n    \"\")\r\n  (define-fun var3132-SEVERE () var3132\r\n    var3132!val!0)\r\n  (define-fun log/-1292381875 ((x!0 var2517)\r\n   (x!1 var3132)\r\n   (x!2 String)\r\n   (x!3 var3985)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var1446)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8011776,
            "run_time": 0.15439915657043457,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2517 is 2\r\n; rep: (as @var2517_0 var2517)\r\n; rep: (as @var2517_1 var2517)\r\n; cardinality of var1446 is 2\r\n; rep: (as @var1446_0 var1446)\r\n; rep: (as @var1446_1 var1446)\r\n; cardinality of var3985 is 2\r\n; rep: (as @var3985_0 var3985)\r\n; rep: (as @var3985_1 var3985)\r\n; cardinality of var3132 is 1\r\n; rep: (as @var3132_0 var3132)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_444 var1446)) String \"\")\r\n(define-fun log/-1292381875 ((BOUND_VARIABLE_447 var2517) (BOUND_VARIABLE_448 var3132) (BOUND_VARIABLE_449 String) (BOUND_VARIABLE_450 var3985)) void (as @void_0 void))\r\n(define-fun null-var2517 () var2517 (as @var2517_0 var2517))\r\n(define-fun null-var1446 () var1446 (as @var1446_0 var1446))\r\n(define-fun null-var3985 () var3985 (as @var3985_0 var3985))\r\n(define-fun var3132-SEVERE () var3132 (as @var3132_0 var3132))\r\n(define-fun var3628 () var2517 (as @var2517_1 var2517))\r\n(define-fun var2512 () var1446 (as @var1446_1 var1446))\r\n(define-fun var345 () var3985 (as @var3985_1 var3985))\r\n(define-fun var3628!1 () var2517 (as @var2517_0 var2517))\r\n(define-fun var320!1 () var3132 (as @var3132_0 var3132))\r\n(define-fun var1549!1 () String \"\")\r\n(define-fun var345!1 () var3985 (as @var3985_0 var3985))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34463744,
            "run_time": 0.23172330856323242,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3985:\n  ;;   var3985!val!0 var3985!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3985!val!0 () var3985)\n  (declare-fun var3985!val!1 () var3985)\n  ;; cardinality constraint:\n  (forall ((x var3985)) (or (= x var3985!val!0) (= x var3985!val!1)))\n  ;; -----------\n  ;; universe for var1446:\n  ;;   var1446!val!1 var1446!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1446!val!1 () var1446)\n  (declare-fun var1446!val!0 () var1446)\n  ;; cardinality constraint:\n  (forall ((x var1446)) (or (= x var1446!val!1) (= x var1446!val!0)))\n  ;; -----------\n  ;; universe for var2517:\n  ;;   var2517!val!1 var2517!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2517!val!1 () var2517)\n  (declare-fun var2517!val!0 () var2517)\n  ;; cardinality constraint:\n  (forall ((x var2517)) (or (= x var2517!val!1) (= x var2517!val!0)))\n  ;; -----------\n  (define-fun null-var2517 () var2517\n    var2517!val!1)\n  (define-fun var2512 () var1446\n    var1446!val!0)\n  (define-fun var320 () var3132\n    var3132-SEVERE)\n  (define-fun null-var3985 () var3985\n    var3985!val!1)\n  (define-fun var1549 () String\n    (String_valueOf/-333372740 var2512))\n  (define-fun var345 () var3985\n    var3985!val!0)\n  (define-fun null-var1446 () var1446\n    var1446!val!1)\n  (define-fun var3628 () var2517\n    var2517!val!0)\n  (define-fun var345!1 () var3985\n    var3985!val!0)\n  (define-fun var320!1 () var3132\n    var3132!val!0)\n  (define-fun var3628!1 () var2517\n    var2517!val!1)\n  (define-fun var1549!1 () String\n    \"\")\n  (define-fun var3132-SEVERE () var3132\n    var3132!val!0)\n  (define-fun log/-1292381875 ((x!0 var2517)\n   (x!1 var3132)\n   (x!2 String)\n   (x!3 var3985)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var1446)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141070336,
            "run_time": 2.006241798400879,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var345 () var3985 var3985!12)\r\n  (define-fun var2512 () var1446 var1446!10)\r\n  (define-fun var3628 () var2517 var2517!8)\r\n  (define-fun null-var3985 () var3985 var3985!6)\r\n  (define-fun null-var1446 () var1446 var1446!4)\r\n  (define-fun null-var2517 () var2517 var2517!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger",
            "r1 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk13LumberjackLogger__debug__1198267445\\7.smt2",
        "z3": {
            "memory": 31223808,
            "run_time": 0.2748594284057617,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1356:\r\n  ;;   var1356!val!0 var1356!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1356!val!0 () var1356)\r\n  (declare-fun var1356!val!1 () var1356)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1356)) (or (= x var1356!val!0) (= x var1356!val!1)))\r\n  ;; -----------\r\n  ;; universe for var720:\r\n  ;;   var720!val!0 var720!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var720!val!0 () var720)\r\n  (declare-fun var720!val!1 () var720)\r\n  ;; cardinality constraint:\r\n  (forall ((x var720)) (or (= x var720!val!0) (= x var720!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var1356 () var1356\r\n    var1356!val!1)\r\n  (define-fun null-var720 () var720\r\n    var720!val!1)\r\n  (define-fun var2205 () var763\r\n    var763-FINE)\r\n  (define-fun var946 () String\r\n    (String_valueOf/-333372740 var2213))\r\n  (define-fun var2213 () var720\r\n    var720!val!0)\r\n  (define-fun var3131 () var1356\r\n    var1356!val!0)\r\n  (define-fun var568 () var1205\r\n    var1205!val!0)\r\n  (define-fun null-var2501 () var2501\r\n    var2501!val!0)\r\n  (define-fun var763-FINE () var763\r\n    var763!val!0)\r\n  (define-fun null-NullType () var1205\r\n    var1205!val!0)\r\n  (define-fun var946!1 () String\r\n    \"\")\r\n  (define-fun var3131!1 () var1356\r\n    var1356!val!0)\r\n  (define-fun var2205!1 () var763\r\n    var763!val!0)\r\n  (define-fun log/-1292381875 ((x!0 var1356)\r\n   (x!1 var763)\r\n   (x!2 String)\r\n   (x!3 var2501)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var720)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2162688,
            "run_time": 0.20048999786376953,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1356 is 2\r\n; rep: (as @var1356_0 var1356)\r\n; rep: (as @var1356_1 var1356)\r\n; cardinality of var720 is 2\r\n; rep: (as @var720_0 var720)\r\n; rep: (as @var720_1 var720)\r\n; cardinality of var763 is 1\r\n; rep: (as @var763_0 var763)\r\n; cardinality of var2501 is 1\r\n; rep: (as @var2501_0 var2501)\r\n; cardinality of var1205 is 1\r\n; rep: (as @var1205_0 var1205)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_439 var720)) String \"\")\r\n(define-fun log/-1292381875 ((BOUND_VARIABLE_442 var1356) (BOUND_VARIABLE_443 var763) (BOUND_VARIABLE_444 String) (BOUND_VARIABLE_445 var2501)) void (as @void_0 void))\r\n(define-fun null-var1356 () var1356 (as @var1356_0 var1356))\r\n(define-fun null-var720 () var720 (as @var720_0 var720))\r\n(define-fun var763-FINE () var763 (as @var763_0 var763))\r\n(define-fun null-NullType () var1205 (as @var1205_0 var1205))\r\n(define-fun null-var2501 () var2501 (as @var2501_0 var2501))\r\n(define-fun var3131 () var1356 (as @var1356_1 var1356))\r\n(define-fun var2213 () var720 (as @var720_1 var720))\r\n(define-fun var3131!1 () var1356 (as @var1356_0 var1356))\r\n(define-fun var2205!1 () var763 (as @var763_0 var763))\r\n(define-fun var946!1 () String \"\")\r\n(define-fun var568 () var1205 (as @var1205_0 var1205))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33554432,
            "run_time": 0.18433904647827148,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1356:\n  ;;   var1356!val!0 var1356!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1356!val!0 () var1356)\n  (declare-fun var1356!val!1 () var1356)\n  ;; cardinality constraint:\n  (forall ((x var1356)) (or (= x var1356!val!0) (= x var1356!val!1)))\n  ;; -----------\n  ;; universe for var720:\n  ;;   var720!val!0 var720!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var720!val!0 () var720)\n  (declare-fun var720!val!1 () var720)\n  ;; cardinality constraint:\n  (forall ((x var720)) (or (= x var720!val!0) (= x var720!val!1)))\n  ;; -----------\n  (define-fun null-var1356 () var1356\n    var1356!val!1)\n  (define-fun null-var720 () var720\n    var720!val!1)\n  (define-fun var946 () String\n    (String_valueOf/-333372740 var2213))\n  (define-fun var2205 () var763\n    var763-FINE)\n  (define-fun var2213 () var720\n    var720!val!0)\n  (define-fun var3131 () var1356\n    var1356!val!0)\n  (define-fun var568 () var1205\n    var1205!val!0)\n  (define-fun null-var2501 () var2501\n    var2501!val!0)\n  (define-fun var763-FINE () var763\n    var763!val!0)\n  (define-fun null-NullType () var1205\n    var1205!val!0)\n  (define-fun var946!1 () String\n    \"\")\n  (define-fun var3131!1 () var1356\n    var1356!val!0)\n  (define-fun var2205!1 () var763\n    var763!val!0)\n  (define-fun log/-1292381875 ((x!0 var1356)\n   (x!1 var763)\n   (x!2 String)\n   (x!3 var2501)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var720)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140283904,
            "run_time": 2.1656582355499268,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2213 () var720 var720!8)\r\n  (define-fun var3131 () var1356 var1356!6)\r\n  (define-fun null-var720 () var720 var720!4)\r\n  (define-fun null-var1356 () var1356 var1356!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger",
            "r1 := @parameter0: java.lang.Object",
            "$r2 = <java.util.logging.Level: java.util.logging.Level FINE>",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk13LumberjackLogger__trace__-1820383229\\377.smt2",
        "z3": {
            "memory": 31698944,
            "run_time": 0.3346843719482422,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2278:\r\n  ;;   var2278!val!1 var2278!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2278!val!1 () var2278)\r\n  (declare-fun var2278!val!0 () var2278)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2278)) (or (= x var2278!val!1) (= x var2278!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1254:\r\n  ;;   var1254!val!0 var1254!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1254!val!0 () var1254)\r\n  (declare-fun var1254!val!1 () var1254)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1254)) (or (= x var1254!val!0) (= x var1254!val!1)))\r\n  ;; -----------\r\n  (define-fun var2588 () String\r\n    (String_valueOf/-333372740 var26))\r\n  (define-fun var523 () var2678\r\n    var2678-FINEST)\r\n  (define-fun var26 () var2278\r\n    var2278!val!0)\r\n  (define-fun var2159 () var1254\r\n    var1254!val!0)\r\n  (define-fun null-var1254 () var1254\r\n    var1254!val!1)\r\n  (define-fun null-var2278 () var2278\r\n    var2278!val!1)\r\n  (define-fun null-var1617 () var1617\r\n    var1617!val!0)\r\n  (define-fun var2588!1 () String\r\n    \"\")\r\n  (define-fun var2159!1 () var1254\r\n    var1254!val!0)\r\n  (define-fun null-NullType () var3112\r\n    var3112!val!0)\r\n  (define-fun var523!1 () var2678\r\n    var2678!val!0)\r\n  (define-fun var1713 () var3112\r\n    var3112!val!0)\r\n  (define-fun var2678-FINEST () var2678\r\n    var2678!val!0)\r\n  (define-fun log/-1292381875 ((x!0 var1254)\r\n   (x!1 var2678)\r\n   (x!2 String)\r\n   (x!3 var1617)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var2278)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1662976,
            "run_time": 0.24621367454528809,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1254 is 2\r\n; rep: (as @var1254_0 var1254)\r\n; rep: (as @var1254_1 var1254)\r\n; cardinality of var2278 is 2\r\n; rep: (as @var2278_0 var2278)\r\n; rep: (as @var2278_1 var2278)\r\n; cardinality of var2678 is 1\r\n; rep: (as @var2678_0 var2678)\r\n; cardinality of var1617 is 1\r\n; rep: (as @var1617_0 var1617)\r\n; cardinality of var3112 is 1\r\n; rep: (as @var3112_0 var3112)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_439 var2278)) String \"\")\r\n(define-fun log/-1292381875 ((BOUND_VARIABLE_442 var1254) (BOUND_VARIABLE_443 var2678) (BOUND_VARIABLE_444 String) (BOUND_VARIABLE_445 var1617)) void (as @void_0 void))\r\n(define-fun null-var1254 () var1254 (as @var1254_0 var1254))\r\n(define-fun null-var2278 () var2278 (as @var2278_0 var2278))\r\n(define-fun var2678-FINEST () var2678 (as @var2678_0 var2678))\r\n(define-fun null-NullType () var3112 (as @var3112_0 var3112))\r\n(define-fun null-var1617 () var1617 (as @var1617_0 var1617))\r\n(define-fun var2159 () var1254 (as @var1254_1 var1254))\r\n(define-fun var26 () var2278 (as @var2278_1 var2278))\r\n(define-fun var2159!1 () var1254 (as @var1254_0 var1254))\r\n(define-fun var523!1 () var2678 (as @var2678_0 var2678))\r\n(define-fun var2588!1 () String \"\")\r\n(define-fun var1713 () var3112 (as @var3112_0 var3112))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34254848,
            "run_time": 0.21371197700500488,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2278:\n  ;;   var2278!val!1 var2278!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2278!val!1 () var2278)\n  (declare-fun var2278!val!0 () var2278)\n  ;; cardinality constraint:\n  (forall ((x var2278)) (or (= x var2278!val!1) (= x var2278!val!0)))\n  ;; -----------\n  ;; universe for var1254:\n  ;;   var1254!val!0 var1254!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1254!val!0 () var1254)\n  (declare-fun var1254!val!1 () var1254)\n  ;; cardinality constraint:\n  (forall ((x var1254)) (or (= x var1254!val!0) (= x var1254!val!1)))\n  ;; -----------\n  (define-fun var2588 () String\n    (String_valueOf/-333372740 var26))\n  (define-fun var26 () var2278\n    var2278!val!0)\n  (define-fun var2159 () var1254\n    var1254!val!0)\n  (define-fun var523 () var2678\n    var2678-FINEST)\n  (define-fun null-var1254 () var1254\n    var1254!val!1)\n  (define-fun null-var2278 () var2278\n    var2278!val!1)\n  (define-fun null-var1617 () var1617\n    var1617!val!0)\n  (define-fun var2588!1 () String\n    \"\")\n  (define-fun var2159!1 () var1254\n    var1254!val!0)\n  (define-fun null-NullType () var3112\n    var3112!val!0)\n  (define-fun var523!1 () var2678\n    var2678!val!0)\n  (define-fun var1713 () var3112\n    var3112!val!0)\n  (define-fun var2678-FINEST () var2678\n    var2678!val!0)\n  (define-fun log/-1292381875 ((x!0 var1254)\n   (x!1 var2678)\n   (x!2 String)\n   (x!3 var1617)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var2278)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140218368,
            "run_time": 2.0466346740722656,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var26 () var2278 var2278!8)\r\n  (define-fun var2159 () var1254 var1254!6)\r\n  (define-fun null-var2278 () var2278 var2278!4)\r\n  (define-fun null-var1254 () var1254 var1254!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger",
            "r1 := @parameter0: java.lang.Object",
            "$r2 = <java.util.logging.Level: java.util.logging.Level FINEST>",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk14Logger__debug__1201191454\\9.smt2",
        "z3": {
            "memory": 31707136,
            "run_time": 0.30033230781555176,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1052:\r\n  ;;   var1052!val!0 var1052!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1052!val!0 () var1052)\r\n  (declare-fun var1052!val!1 () var1052)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1052)) (or (= x var1052!val!0) (= x var1052!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3067:\r\n  ;;   var3067!val!0 var3067!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3067!val!0 () var3067)\r\n  (declare-fun var3067!val!1 () var3067)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3067)) (or (= x var3067!val!0) (= x var3067!val!1)))\r\n  ;; -----------\r\n  (define-fun var570 () var1052\r\n    var1052!val!0)\r\n  (define-fun var2327 () var2512\r\n    var2512-FINE)\r\n  (define-fun null-var1052 () var1052\r\n    var1052!val!1)\r\n  (define-fun var3176 () String\r\n    (String_valueOf/-333372740 var588))\r\n  (define-fun null-var3067 () var3067\r\n    var3067!val!1)\r\n  (define-fun var588 () var3067\r\n    var3067!val!0)\r\n  (define-fun null-var3452 () var3452\r\n    var3452!val!0)\r\n  (define-fun null-NullType () var1073\r\n    var1073!val!0)\r\n  (define-fun var2512-FINE () var2512\r\n    var2512!val!0)\r\n  (define-fun var3176!1 () String\r\n    \"\")\r\n  (define-fun var353 () var1073\r\n    var1073!val!0)\r\n  (define-fun var2327!1 () var2512\r\n    var2512!val!0)\r\n  (define-fun var570!1 () var1052\r\n    var1052!val!0)\r\n  (define-fun log/-2053243914 ((x!0 var1052)\r\n   (x!1 var2512)\r\n   (x!2 String)\r\n   (x!3 var3452)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var3067)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7680000,
            "run_time": 0.13822150230407715,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1052 is 2\r\n; rep: (as @var1052_0 var1052)\r\n; rep: (as @var1052_1 var1052)\r\n; cardinality of var3067 is 2\r\n; rep: (as @var3067_0 var3067)\r\n; rep: (as @var3067_1 var3067)\r\n; cardinality of var2512 is 1\r\n; rep: (as @var2512_0 var2512)\r\n; cardinality of var3452 is 1\r\n; rep: (as @var3452_0 var3452)\r\n; cardinality of var1073 is 1\r\n; rep: (as @var1073_0 var1073)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_439 var3067)) String \"\")\r\n(define-fun log/-2053243914 ((BOUND_VARIABLE_442 var1052) (BOUND_VARIABLE_443 var2512) (BOUND_VARIABLE_444 String) (BOUND_VARIABLE_445 var3452)) void (as @void_0 void))\r\n(define-fun null-var1052 () var1052 (as @var1052_0 var1052))\r\n(define-fun null-var3067 () var3067 (as @var3067_0 var3067))\r\n(define-fun var2512-FINE () var2512 (as @var2512_0 var2512))\r\n(define-fun null-NullType () var1073 (as @var1073_0 var1073))\r\n(define-fun null-var3452 () var3452 (as @var3452_0 var3452))\r\n(define-fun var570 () var1052 (as @var1052_1 var1052))\r\n(define-fun var588 () var3067 (as @var3067_1 var3067))\r\n(define-fun var570!1 () var1052 (as @var1052_0 var1052))\r\n(define-fun var2327!1 () var2512 (as @var2512_0 var2512))\r\n(define-fun var3176!1 () String \"\")\r\n(define-fun var353 () var1073 (as @var1073_0 var1073))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35278848,
            "run_time": 0.25955724716186523,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1052:\n  ;;   var1052!val!0 var1052!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1052!val!0 () var1052)\n  (declare-fun var1052!val!1 () var1052)\n  ;; cardinality constraint:\n  (forall ((x var1052)) (or (= x var1052!val!0) (= x var1052!val!1)))\n  ;; -----------\n  ;; universe for var3067:\n  ;;   var3067!val!0 var3067!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3067!val!0 () var3067)\n  (declare-fun var3067!val!1 () var3067)\n  ;; cardinality constraint:\n  (forall ((x var3067)) (or (= x var3067!val!0) (= x var3067!val!1)))\n  ;; -----------\n  (define-fun var570 () var1052\n    var1052!val!0)\n  (define-fun var3176 () String\n    (String_valueOf/-333372740 var588))\n  (define-fun null-var1052 () var1052\n    var1052!val!1)\n  (define-fun var2327 () var2512\n    var2512-FINE)\n  (define-fun null-var3067 () var3067\n    var3067!val!1)\n  (define-fun var588 () var3067\n    var3067!val!0)\n  (define-fun null-var3452 () var3452\n    var3452!val!0)\n  (define-fun null-NullType () var1073\n    var1073!val!0)\n  (define-fun var2512-FINE () var2512\n    var2512!val!0)\n  (define-fun var3176!1 () String\n    \"\")\n  (define-fun var353 () var1073\n    var1073!val!0)\n  (define-fun var2327!1 () var2512\n    var2512!val!0)\n  (define-fun var570!1 () var1052\n    var1052!val!0)\n  (define-fun log/-2053243914 ((x!0 var1052)\n   (x!1 var2512)\n   (x!2 String)\n   (x!3 var3452)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var3067)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140972032,
            "run_time": 2.187758207321167,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var588 () var3067 var3067!8)\r\n  (define-fun var570 () var1052 var1052!6)\r\n  (define-fun null-var3067 () var3067 var3067!4)\r\n  (define-fun null-var1052 () var1052 var1052!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk14Logger",
            "r1 := @parameter0: java.lang.Object",
            "$r2 = <java.util.logging.Level: java.util.logging.Level FINE>",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk14Logger__fatal__-1524141427\\141.smt2",
        "z3": {
            "memory": 31690752,
            "run_time": 0.22374653816223145,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var856:\r\n  ;;   var856!val!0 var856!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var856!val!0 () var856)\r\n  (declare-fun var856!val!1 () var856)\r\n  ;; cardinality constraint:\r\n  (forall ((x var856)) (or (= x var856!val!0) (= x var856!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1021:\r\n  ;;   var1021!val!0 var1021!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1021!val!0 () var1021)\r\n  (declare-fun var1021!val!1 () var1021)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1021)) (or (= x var1021!val!0) (= x var1021!val!1)))\r\n  ;; -----------\r\n  ;; universe for var661:\r\n  ;;   var661!val!1 var661!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var661!val!1 () var661)\r\n  (declare-fun var661!val!0 () var661)\r\n  ;; cardinality constraint:\r\n  (forall ((x var661)) (or (= x var661!val!1) (= x var661!val!0)))\r\n  ;; -----------\r\n  (define-fun var2379 () var856\r\n    var856!val!0)\r\n  (define-fun null-var1021 () var1021\r\n    var1021!val!1)\r\n  (define-fun null-var856 () var856\r\n    var856!val!1)\r\n  (define-fun var3248 () var661\r\n    var661!val!0)\r\n  (define-fun var1587 () var1021\r\n    var1021!val!0)\r\n  (define-fun null-var661 () var661\r\n    var661!val!1)\r\n  (define-fun var1721 () var3724\r\n    var3724-SEVERE)\r\n  (define-fun var818 () String\r\n    (String_valueOf/-333372740 var3248))\r\n  (define-fun var3724-SEVERE () var3724\r\n    var3724!val!0)\r\n  (define-fun var2379!1 () var856\r\n    var856!val!0)\r\n  (define-fun var1587!1 () var1021\r\n    var1021!val!0)\r\n  (define-fun var1721!1 () var3724\r\n    var3724!val!0)\r\n  (define-fun var818!1 () String\r\n    \"\")\r\n  (define-fun log/-2053243914 ((x!0 var856)\r\n   (x!1 var3724)\r\n   (x!2 String)\r\n   (x!3 var1021)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var661)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11321344,
            "run_time": 0.16793441772460938,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var856 is 2\r\n; rep: (as @var856_0 var856)\r\n; rep: (as @var856_1 var856)\r\n; cardinality of var661 is 2\r\n; rep: (as @var661_0 var661)\r\n; rep: (as @var661_1 var661)\r\n; cardinality of var1021 is 2\r\n; rep: (as @var1021_0 var1021)\r\n; rep: (as @var1021_1 var1021)\r\n; cardinality of var3724 is 1\r\n; rep: (as @var3724_0 var3724)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_444 var661)) String \"\")\r\n(define-fun log/-2053243914 ((BOUND_VARIABLE_447 var856) (BOUND_VARIABLE_448 var3724) (BOUND_VARIABLE_449 String) (BOUND_VARIABLE_450 var1021)) void (as @void_0 void))\r\n(define-fun null-var856 () var856 (as @var856_0 var856))\r\n(define-fun null-var661 () var661 (as @var661_0 var661))\r\n(define-fun null-var1021 () var1021 (as @var1021_0 var1021))\r\n(define-fun var3724-SEVERE () var3724 (as @var3724_0 var3724))\r\n(define-fun var2379 () var856 (as @var856_1 var856))\r\n(define-fun var3248 () var661 (as @var661_1 var661))\r\n(define-fun var1587 () var1021 (as @var1021_1 var1021))\r\n(define-fun var2379!1 () var856 (as @var856_0 var856))\r\n(define-fun var1721!1 () var3724 (as @var3724_0 var3724))\r\n(define-fun var818!1 () String \"\")\r\n(define-fun var1587!1 () var1021 (as @var1021_0 var1021))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35205120,
            "run_time": 0.1703052520751953,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var856:\n  ;;   var856!val!0 var856!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var856!val!0 () var856)\n  (declare-fun var856!val!1 () var856)\n  ;; cardinality constraint:\n  (forall ((x var856)) (or (= x var856!val!0) (= x var856!val!1)))\n  ;; -----------\n  ;; universe for var1021:\n  ;;   var1021!val!0 var1021!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1021!val!0 () var1021)\n  (declare-fun var1021!val!1 () var1021)\n  ;; cardinality constraint:\n  (forall ((x var1021)) (or (= x var1021!val!0) (= x var1021!val!1)))\n  ;; -----------\n  ;; universe for var661:\n  ;;   var661!val!1 var661!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var661!val!1 () var661)\n  (declare-fun var661!val!0 () var661)\n  ;; cardinality constraint:\n  (forall ((x var661)) (or (= x var661!val!1) (= x var661!val!0)))\n  ;; -----------\n  (define-fun var2379 () var856\n    var856!val!0)\n  (define-fun null-var1021 () var1021\n    var1021!val!1)\n  (define-fun null-var856 () var856\n    var856!val!1)\n  (define-fun var1721 () var3724\n    var3724-SEVERE)\n  (define-fun var3248 () var661\n    var661!val!0)\n  (define-fun var1587 () var1021\n    var1021!val!0)\n  (define-fun var818 () String\n    (String_valueOf/-333372740 var3248))\n  (define-fun null-var661 () var661\n    var661!val!1)\n  (define-fun var3724-SEVERE () var3724\n    var3724!val!0)\n  (define-fun var2379!1 () var856\n    var856!val!0)\n  (define-fun var1587!1 () var1021\n    var1021!val!0)\n  (define-fun var1721!1 () var3724\n    var3724!val!0)\n  (define-fun var818!1 () String\n    \"\")\n  (define-fun log/-2053243914 ((x!0 var856)\n   (x!1 var3724)\n   (x!2 String)\n   (x!3 var1021)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var661)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140894208,
            "run_time": 2.1250507831573486,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1587 () var1021 var1021!12)\r\n  (define-fun var3248 () var661 var661!10)\r\n  (define-fun var2379 () var856 var856!8)\r\n  (define-fun null-var1021 () var1021 var1021!6)\r\n  (define-fun null-var661 () var661 var661!4)\r\n  (define-fun null-var856 () var856 var856!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk14Logger",
            "r1 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk14Logger__error__-935397111\\87.smt2",
        "z3": {
            "memory": 31662080,
            "run_time": 0.20680618286132812,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2909:\r\n  ;;   var2909!val!1 var2909!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2909!val!1 () var2909)\r\n  (declare-fun var2909!val!0 () var2909)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2909)) (or (= x var2909!val!1) (= x var2909!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1538:\r\n  ;;   var1538!val!0 var1538!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1538!val!0 () var1538)\r\n  (declare-fun var1538!val!1 () var1538)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1538)) (or (= x var1538!val!0) (= x var1538!val!1)))\r\n  ;; -----------\r\n  ;; universe for var266:\r\n  ;;   var266!val!0 var266!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var266!val!0 () var266)\r\n  (declare-fun var266!val!1 () var266)\r\n  ;; cardinality constraint:\r\n  (forall ((x var266)) (or (= x var266!val!0) (= x var266!val!1)))\r\n  ;; -----------\r\n  (define-fun var2277 () var266\r\n    var266!val!0)\r\n  (define-fun var2661 () String\r\n    (String_valueOf/-333372740 var3432))\r\n  (define-fun null-var1538 () var1538\r\n    var1538!val!1)\r\n  (define-fun null-var2909 () var2909\r\n    var2909!val!1)\r\n  (define-fun var880 () var2909\r\n    var2909!val!0)\r\n  (define-fun null-var266 () var266\r\n    var266!val!1)\r\n  (define-fun var23 () var3288\r\n    var3288-SEVERE)\r\n  (define-fun var3432 () var1538\r\n    var1538!val!0)\r\n  (define-fun var3288-SEVERE () var3288\r\n    var3288!val!0)\r\n  (define-fun var23!1 () var3288\r\n    var3288!val!0)\r\n  (define-fun var2661!1 () String\r\n    \"\")\r\n  (define-fun var2277!1 () var266\r\n    var266!val!0)\r\n  (define-fun var880!1 () var2909\r\n    var2909!val!1)\r\n  (define-fun log/-2053243914 ((x!0 var2909)\r\n   (x!1 var3288)\r\n   (x!2 String)\r\n   (x!3 var266)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var1538)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.10766100883483887,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2909 is 2\r\n; rep: (as @var2909_0 var2909)\r\n; rep: (as @var2909_1 var2909)\r\n; cardinality of var1538 is 2\r\n; rep: (as @var1538_0 var1538)\r\n; rep: (as @var1538_1 var1538)\r\n; cardinality of var266 is 2\r\n; rep: (as @var266_0 var266)\r\n; rep: (as @var266_1 var266)\r\n; cardinality of var3288 is 1\r\n; rep: (as @var3288_0 var3288)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_444 var1538)) String \"\")\r\n(define-fun log/-2053243914 ((BOUND_VARIABLE_447 var2909) (BOUND_VARIABLE_448 var3288) (BOUND_VARIABLE_449 String) (BOUND_VARIABLE_450 var266)) void (as @void_0 void))\r\n(define-fun null-var2909 () var2909 (as @var2909_0 var2909))\r\n(define-fun null-var1538 () var1538 (as @var1538_0 var1538))\r\n(define-fun null-var266 () var266 (as @var266_0 var266))\r\n(define-fun var3288-SEVERE () var3288 (as @var3288_0 var3288))\r\n(define-fun var880 () var2909 (as @var2909_1 var2909))\r\n(define-fun var3432 () var1538 (as @var1538_1 var1538))\r\n(define-fun var2277 () var266 (as @var266_1 var266))\r\n(define-fun var880!1 () var2909 (as @var2909_0 var2909))\r\n(define-fun var23!1 () var3288 (as @var3288_0 var3288))\r\n(define-fun var2661!1 () String \"\")\r\n(define-fun var2277!1 () var266 (as @var266_0 var266))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33570816,
            "run_time": 0.13918828964233398,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2909:\n  ;;   var2909!val!1 var2909!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2909!val!1 () var2909)\n  (declare-fun var2909!val!0 () var2909)\n  ;; cardinality constraint:\n  (forall ((x var2909)) (or (= x var2909!val!1) (= x var2909!val!0)))\n  ;; -----------\n  ;; universe for var1538:\n  ;;   var1538!val!0 var1538!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1538!val!0 () var1538)\n  (declare-fun var1538!val!1 () var1538)\n  ;; cardinality constraint:\n  (forall ((x var1538)) (or (= x var1538!val!0) (= x var1538!val!1)))\n  ;; -----------\n  ;; universe for var266:\n  ;;   var266!val!0 var266!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var266!val!0 () var266)\n  (declare-fun var266!val!1 () var266)\n  ;; cardinality constraint:\n  (forall ((x var266)) (or (= x var266!val!0) (= x var266!val!1)))\n  ;; -----------\n  (define-fun var2661 () String\n    (String_valueOf/-333372740 var3432))\n  (define-fun var2277 () var266\n    var266!val!0)\n  (define-fun var23 () var3288\n    var3288-SEVERE)\n  (define-fun null-var1538 () var1538\n    var1538!val!1)\n  (define-fun null-var2909 () var2909\n    var2909!val!1)\n  (define-fun var880 () var2909\n    var2909!val!0)\n  (define-fun null-var266 () var266\n    var266!val!1)\n  (define-fun var3432 () var1538\n    var1538!val!0)\n  (define-fun var3288-SEVERE () var3288\n    var3288!val!0)\n  (define-fun var23!1 () var3288\n    var3288!val!0)\n  (define-fun var2661!1 () String\n    \"\")\n  (define-fun var2277!1 () var266\n    var266!val!0)\n  (define-fun var880!1 () var2909\n    var2909!val!1)\n  (define-fun log/-2053243914 ((x!0 var2909)\n   (x!1 var3288)\n   (x!2 String)\n   (x!3 var266)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var1538)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140374016,
            "run_time": 2.157728672027588,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2277 () var266 var266!12)\r\n  (define-fun var3432 () var1538 var1538!10)\r\n  (define-fun var880 () var2909 var2909!8)\r\n  (define-fun null-var266 () var266 var266!6)\r\n  (define-fun null-var1538 () var1538 var1538!4)\r\n  (define-fun null-var2909 () var2909 var2909!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk14Logger",
            "r1 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk13LumberjackLogger__warn__-1531167246\\408.smt2",
        "z3": {
            "memory": 31309824,
            "run_time": 0.17893624305725098,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1723:\r\n  ;;   var1723!val!1 var1723!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1723!val!1 () var1723)\r\n  (declare-fun var1723!val!0 () var1723)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1723)) (or (= x var1723!val!1) (= x var1723!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1244:\r\n  ;;   var1244!val!0 var1244!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1244!val!0 () var1244)\r\n  (declare-fun var1244!val!1 () var1244)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1244)) (or (= x var1244!val!0) (= x var1244!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1272:\r\n  ;;   var1272!val!0 var1272!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1272!val!0 () var1272)\r\n  (declare-fun var1272!val!1 () var1272)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1272)) (or (= x var1272!val!0) (= x var1272!val!1)))\r\n  ;; -----------\r\n  (define-fun var3430 () var1272\r\n    var1272!val!0)\r\n  (define-fun null-var1244 () var1244\r\n    var1244!val!1)\r\n  (define-fun var12 () var926\r\n    var926-WARNING)\r\n  (define-fun var1878 () var1244\r\n    var1244!val!0)\r\n  (define-fun var3265 () String\r\n    (String_valueOf/-333372740 var3430))\r\n  (define-fun var331 () var1723\r\n    var1723!val!0)\r\n  (define-fun null-var1723 () var1723\r\n    var1723!val!1)\r\n  (define-fun null-var1272 () var1272\r\n    var1272!val!1)\r\n  (define-fun var1878!1 () var1244\r\n    var1244!val!0)\r\n  (define-fun var12!1 () var926\r\n    var926!val!0)\r\n  (define-fun var926-WARNING () var926\r\n    var926!val!0)\r\n  (define-fun var3265!1 () String\r\n    \"\")\r\n  (define-fun var331!1 () var1723\r\n    var1723!val!1)\r\n  (define-fun log/-1292381875 ((x!0 var1244)\r\n   (x!1 var926)\r\n   (x!2 String)\r\n   (x!3 var1723)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var1272)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8204288,
            "run_time": 0.045929670333862305,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1244 is 2\r\n; rep: (as @var1244_0 var1244)\r\n; rep: (as @var1244_1 var1244)\r\n; cardinality of var1272 is 2\r\n; rep: (as @var1272_0 var1272)\r\n; rep: (as @var1272_1 var1272)\r\n; cardinality of var1723 is 2\r\n; rep: (as @var1723_0 var1723)\r\n; rep: (as @var1723_1 var1723)\r\n; cardinality of var926 is 1\r\n; rep: (as @var926_0 var926)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_444 var1272)) String \"\")\r\n(define-fun log/-1292381875 ((BOUND_VARIABLE_447 var1244) (BOUND_VARIABLE_448 var926) (BOUND_VARIABLE_449 String) (BOUND_VARIABLE_450 var1723)) void (as @void_0 void))\r\n(define-fun null-var1244 () var1244 (as @var1244_0 var1244))\r\n(define-fun null-var1272 () var1272 (as @var1272_0 var1272))\r\n(define-fun null-var1723 () var1723 (as @var1723_0 var1723))\r\n(define-fun var926-WARNING () var926 (as @var926_0 var926))\r\n(define-fun var1878 () var1244 (as @var1244_1 var1244))\r\n(define-fun var3430 () var1272 (as @var1272_1 var1272))\r\n(define-fun var331 () var1723 (as @var1723_1 var1723))\r\n(define-fun var1878!1 () var1244 (as @var1244_0 var1244))\r\n(define-fun var12!1 () var926 (as @var926_0 var926))\r\n(define-fun var3265!1 () String \"\")\r\n(define-fun var331!1 () var1723 (as @var1723_0 var1723))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34316288,
            "run_time": 0.14001798629760742,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1723:\n  ;;   var1723!val!1 var1723!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1723!val!1 () var1723)\n  (declare-fun var1723!val!0 () var1723)\n  ;; cardinality constraint:\n  (forall ((x var1723)) (or (= x var1723!val!1) (= x var1723!val!0)))\n  ;; -----------\n  ;; universe for var1244:\n  ;;   var1244!val!0 var1244!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1244!val!0 () var1244)\n  (declare-fun var1244!val!1 () var1244)\n  ;; cardinality constraint:\n  (forall ((x var1244)) (or (= x var1244!val!0) (= x var1244!val!1)))\n  ;; -----------\n  ;; universe for var1272:\n  ;;   var1272!val!0 var1272!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1272!val!0 () var1272)\n  (declare-fun var1272!val!1 () var1272)\n  ;; cardinality constraint:\n  (forall ((x var1272)) (or (= x var1272!val!0) (= x var1272!val!1)))\n  ;; -----------\n  (define-fun var3430 () var1272\n    var1272!val!0)\n  (define-fun var3265 () String\n    (String_valueOf/-333372740 var3430))\n  (define-fun null-var1244 () var1244\n    var1244!val!1)\n  (define-fun var1878 () var1244\n    var1244!val!0)\n  (define-fun var331 () var1723\n    var1723!val!0)\n  (define-fun var12 () var926\n    var926-WARNING)\n  (define-fun null-var1723 () var1723\n    var1723!val!1)\n  (define-fun null-var1272 () var1272\n    var1272!val!1)\n  (define-fun var1878!1 () var1244\n    var1244!val!0)\n  (define-fun var12!1 () var926\n    var926!val!0)\n  (define-fun var926-WARNING () var926\n    var926!val!0)\n  (define-fun var3265!1 () String\n    \"\")\n  (define-fun var331!1 () var1723\n    var1723!val!1)\n  (define-fun log/-1292381875 ((x!0 var1244)\n   (x!1 var926)\n   (x!2 String)\n   (x!3 var1723)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var1272)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140804096,
            "run_time": 2.235718011856079,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var331 () var1723 var1723!12)\r\n  (define-fun var3430 () var1272 var1272!10)\r\n  (define-fun var1878 () var1244 var1244!8)\r\n  (define-fun null-var1723 () var1723 var1723!6)\r\n  (define-fun null-var1272 () var1272 var1272!4)\r\n  (define-fun null-var1244 () var1244 var1244!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger",
            "r1 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r2 = <java.util.logging.Level: java.util.logging.Level WARNING>",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk13LumberjackLogger__fatal__373683684\\111.smt2",
        "z3": {
            "memory": 31653888,
            "run_time": 0.2895798683166504,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2076:\r\n  ;;   var2076!val!0 var2076!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2076!val!0 () var2076)\r\n  (declare-fun var2076!val!1 () var2076)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2076)) (or (= x var2076!val!0) (= x var2076!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3694:\r\n  ;;   var3694!val!1 var3694!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3694!val!1 () var3694)\r\n  (declare-fun var3694!val!0 () var3694)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3694)) (or (= x var3694!val!1) (= x var3694!val!0)))\r\n  ;; -----------\r\n  (define-fun var2553 () var2076\r\n    var2076!val!0)\r\n  (define-fun null-var2076 () var2076\r\n    var2076!val!1)\r\n  (define-fun var2730 () var3694\r\n    var3694!val!0)\r\n  (define-fun null-var3694 () var3694\r\n    var3694!val!1)\r\n  (define-fun var818 () var3528\r\n    var3528-SEVERE)\r\n  (define-fun var138 () String\r\n    (String_valueOf/-333372740 var2730))\r\n  (define-fun var3528-SEVERE () var3528\r\n    var3528!val!0)\r\n  (define-fun var2553!1 () var2076\r\n    var2076!val!0)\r\n  (define-fun var58 () var3282\r\n    var3282!val!0)\r\n  (define-fun var138!1 () String\r\n    \"\")\r\n  (define-fun null-var2539 () var2539\r\n    var2539!val!0)\r\n  (define-fun null-NullType () var3282\r\n    var3282!val!0)\r\n  (define-fun var818!1 () var3528\r\n    var3528!val!0)\r\n  (define-fun log/-1292381875 ((x!0 var2076)\r\n   (x!1 var3528)\r\n   (x!2 String)\r\n   (x!3 var2539)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var3694)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.10636377334594727,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2076 is 2\r\n; rep: (as @var2076_0 var2076)\r\n; rep: (as @var2076_1 var2076)\r\n; cardinality of var3694 is 2\r\n; rep: (as @var3694_0 var3694)\r\n; rep: (as @var3694_1 var3694)\r\n; cardinality of var3528 is 1\r\n; rep: (as @var3528_0 var3528)\r\n; cardinality of var2539 is 1\r\n; rep: (as @var2539_0 var2539)\r\n; cardinality of var3282 is 1\r\n; rep: (as @var3282_0 var3282)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_439 var3694)) String \"\")\r\n(define-fun log/-1292381875 ((BOUND_VARIABLE_442 var2076) (BOUND_VARIABLE_443 var3528) (BOUND_VARIABLE_444 String) (BOUND_VARIABLE_445 var2539)) void (as @void_0 void))\r\n(define-fun null-var2076 () var2076 (as @var2076_0 var2076))\r\n(define-fun null-var3694 () var3694 (as @var3694_0 var3694))\r\n(define-fun var3528-SEVERE () var3528 (as @var3528_0 var3528))\r\n(define-fun null-NullType () var3282 (as @var3282_0 var3282))\r\n(define-fun null-var2539 () var2539 (as @var2539_0 var2539))\r\n(define-fun var2553 () var2076 (as @var2076_1 var2076))\r\n(define-fun var2730 () var3694 (as @var3694_1 var3694))\r\n(define-fun var2553!1 () var2076 (as @var2076_0 var2076))\r\n(define-fun var818!1 () var3528 (as @var3528_0 var3528))\r\n(define-fun var138!1 () String \"\")\r\n(define-fun var58 () var3282 (as @var3282_0 var3282))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34234368,
            "run_time": 0.20142817497253418,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2076:\n  ;;   var2076!val!0 var2076!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2076!val!0 () var2076)\n  (declare-fun var2076!val!1 () var2076)\n  ;; cardinality constraint:\n  (forall ((x var2076)) (or (= x var2076!val!0) (= x var2076!val!1)))\n  ;; -----------\n  ;; universe for var3694:\n  ;;   var3694!val!1 var3694!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3694!val!1 () var3694)\n  (declare-fun var3694!val!0 () var3694)\n  ;; cardinality constraint:\n  (forall ((x var3694)) (or (= x var3694!val!1) (= x var3694!val!0)))\n  ;; -----------\n  (define-fun var818 () var3528\n    var3528-SEVERE)\n  (define-fun var2553 () var2076\n    var2076!val!0)\n  (define-fun null-var2076 () var2076\n    var2076!val!1)\n  (define-fun var138 () String\n    (String_valueOf/-333372740 var2730))\n  (define-fun var2730 () var3694\n    var3694!val!0)\n  (define-fun null-var3694 () var3694\n    var3694!val!1)\n  (define-fun var3528-SEVERE () var3528\n    var3528!val!0)\n  (define-fun var2553!1 () var2076\n    var2076!val!0)\n  (define-fun var58 () var3282\n    var3282!val!0)\n  (define-fun var138!1 () String\n    \"\")\n  (define-fun null-var2539 () var2539\n    var2539!val!0)\n  (define-fun null-NullType () var3282\n    var3282!val!0)\n  (define-fun var818!1 () var3528\n    var3528!val!0)\n  (define-fun log/-1292381875 ((x!0 var2076)\n   (x!1 var3528)\n   (x!2 String)\n   (x!3 var2539)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var3694)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140869632,
            "run_time": 2.0466792583465576,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2730 () var3694 var3694!8)\r\n  (define-fun var2553 () var2076 var2076!6)\r\n  (define-fun null-var3694 () var3694 var3694!4)\r\n  (define-fun null-var2076 () var2076 var2076!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger",
            "r1 := @parameter0: java.lang.Object",
            "$r2 = <java.util.logging.Level: java.util.logging.Level SEVERE>",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk14Logger__trace__-1302765780\\384.smt2",
        "z3": {
            "memory": 31223808,
            "run_time": 0.16527128219604492,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1878:\r\n  ;;   var1878!val!1 var1878!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1878!val!1 () var1878)\r\n  (declare-fun var1878!val!0 () var1878)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1878)) (or (= x var1878!val!1) (= x var1878!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2040:\r\n  ;;   var2040!val!1 var2040!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2040!val!1 () var2040)\r\n  (declare-fun var2040!val!0 () var2040)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2040)) (or (= x var2040!val!1) (= x var2040!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1569:\r\n  ;;   var1569!val!0 var1569!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1569!val!0 () var1569)\r\n  (declare-fun var1569!val!1 () var1569)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1569)) (or (= x var1569!val!0) (= x var1569!val!1)))\r\n  ;; -----------\r\n  (define-fun var3709 () var1569\r\n    var1569!val!0)\r\n  (define-fun var86 () var2040\r\n    var2040!val!0)\r\n  (define-fun null-var2040 () var2040\r\n    var2040!val!1)\r\n  (define-fun null-var1878 () var1878\r\n    var1878!val!1)\r\n  (define-fun null-var1569 () var1569\r\n    var1569!val!1)\r\n  (define-fun var1455 () var1212\r\n    var1212-FINEST)\r\n  (define-fun var1216 () String\r\n    (String_valueOf/-333372740 var301))\r\n  (define-fun var301 () var1878\r\n    var1878!val!0)\r\n  (define-fun var1216!1 () String\r\n    \"\")\r\n  (define-fun var3709!1 () var1569\r\n    var1569!val!0)\r\n  (define-fun var1212-FINEST () var1212\r\n    var1212!val!0)\r\n  (define-fun var86!1 () var2040\r\n    var2040!val!1)\r\n  (define-fun var1455!1 () var1212\r\n    var1212!val!0)\r\n  (define-fun log/-2053243914 ((x!0 var2040)\r\n   (x!1 var1212)\r\n   (x!2 String)\r\n   (x!3 var1569)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var1878)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1699840,
            "run_time": 0.10837721824645996,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2040 is 2\r\n; rep: (as @var2040_0 var2040)\r\n; rep: (as @var2040_1 var2040)\r\n; cardinality of var1878 is 2\r\n; rep: (as @var1878_0 var1878)\r\n; rep: (as @var1878_1 var1878)\r\n; cardinality of var1569 is 2\r\n; rep: (as @var1569_0 var1569)\r\n; rep: (as @var1569_1 var1569)\r\n; cardinality of var1212 is 1\r\n; rep: (as @var1212_0 var1212)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_444 var1878)) String \"\")\r\n(define-fun log/-2053243914 ((BOUND_VARIABLE_447 var2040) (BOUND_VARIABLE_448 var1212) (BOUND_VARIABLE_449 String) (BOUND_VARIABLE_450 var1569)) void (as @void_0 void))\r\n(define-fun null-var2040 () var2040 (as @var2040_0 var2040))\r\n(define-fun null-var1878 () var1878 (as @var1878_0 var1878))\r\n(define-fun null-var1569 () var1569 (as @var1569_0 var1569))\r\n(define-fun var1212-FINEST () var1212 (as @var1212_0 var1212))\r\n(define-fun var86 () var2040 (as @var2040_1 var2040))\r\n(define-fun var301 () var1878 (as @var1878_1 var1878))\r\n(define-fun var3709 () var1569 (as @var1569_1 var1569))\r\n(define-fun var86!1 () var2040 (as @var2040_0 var2040))\r\n(define-fun var1455!1 () var1212 (as @var1212_0 var1212))\r\n(define-fun var1216!1 () String \"\")\r\n(define-fun var3709!1 () var1569 (as @var1569_0 var1569))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33820672,
            "run_time": 0.18591761589050293,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1878:\n  ;;   var1878!val!1 var1878!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1878!val!1 () var1878)\n  (declare-fun var1878!val!0 () var1878)\n  ;; cardinality constraint:\n  (forall ((x var1878)) (or (= x var1878!val!1) (= x var1878!val!0)))\n  ;; -----------\n  ;; universe for var2040:\n  ;;   var2040!val!1 var2040!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2040!val!1 () var2040)\n  (declare-fun var2040!val!0 () var2040)\n  ;; cardinality constraint:\n  (forall ((x var2040)) (or (= x var2040!val!1) (= x var2040!val!0)))\n  ;; -----------\n  ;; universe for var1569:\n  ;;   var1569!val!0 var1569!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1569!val!0 () var1569)\n  (declare-fun var1569!val!1 () var1569)\n  ;; cardinality constraint:\n  (forall ((x var1569)) (or (= x var1569!val!0) (= x var1569!val!1)))\n  ;; -----------\n  (define-fun var1455 () var1212\n    var1212-FINEST)\n  (define-fun var3709 () var1569\n    var1569!val!0)\n  (define-fun var86 () var2040\n    var2040!val!0)\n  (define-fun null-var2040 () var2040\n    var2040!val!1)\n  (define-fun null-var1878 () var1878\n    var1878!val!1)\n  (define-fun null-var1569 () var1569\n    var1569!val!1)\n  (define-fun var1216 () String\n    (String_valueOf/-333372740 var301))\n  (define-fun var301 () var1878\n    var1878!val!0)\n  (define-fun var1216!1 () String\n    \"\")\n  (define-fun var3709!1 () var1569\n    var1569!val!0)\n  (define-fun var1212-FINEST () var1212\n    var1212!val!0)\n  (define-fun var86!1 () var2040\n    var2040!val!1)\n  (define-fun var1455!1 () var1212\n    var1212!val!0)\n  (define-fun log/-2053243914 ((x!0 var2040)\n   (x!1 var1212)\n   (x!2 String)\n   (x!3 var1569)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var1878)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140783616,
            "run_time": 2.1881184577941895,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3709 () var1569 var1569!12)\r\n  (define-fun var301 () var1878 var1878!10)\r\n  (define-fun var86 () var2040 var2040!8)\r\n  (define-fun null-var1569 () var1569 var1569!6)\r\n  (define-fun null-var1878 () var1878 var1878!4)\r\n  (define-fun null-var2040 () var2040 var2040!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk14Logger",
            "r1 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r2 = <java.util.logging.Level: java.util.logging.Level FINEST>",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk14Logger__info__-1557188223\\184.smt2",
        "z3": {
            "memory": 31264768,
            "run_time": 0.25516748428344727,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var402:\r\n  ;;   var402!val!0 var402!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var402!val!0 () var402)\r\n  (declare-fun var402!val!1 () var402)\r\n  ;; cardinality constraint:\r\n  (forall ((x var402)) (or (= x var402!val!0) (= x var402!val!1)))\r\n  ;; -----------\r\n  ;; universe for var265:\r\n  ;;   var265!val!1 var265!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var265!val!1 () var265)\r\n  (declare-fun var265!val!0 () var265)\r\n  ;; cardinality constraint:\r\n  (forall ((x var265)) (or (= x var265!val!1) (= x var265!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var402 () var402\r\n    var402!val!1)\r\n  (define-fun var2082 () var2202\r\n    var2202-INFO)\r\n  (define-fun var1999 () String\r\n    (String_valueOf/-333372740 var3773))\r\n  (define-fun null-var265 () var265\r\n    var265!val!1)\r\n  (define-fun var3773 () var265\r\n    var265!val!0)\r\n  (define-fun var996 () var402\r\n    var402!val!0)\r\n  (define-fun var3058 () var84\r\n    var84!val!0)\r\n  (define-fun null-NullType () var84\r\n    var84!val!0)\r\n  (define-fun null-var100 () var100\r\n    var100!val!0)\r\n  (define-fun var2082!1 () var2202\r\n    var2202!val!0)\r\n  (define-fun var2202-INFO () var2202\r\n    var2202!val!0)\r\n  (define-fun var1999!1 () String\r\n    \"\")\r\n  (define-fun var996!1 () var402\r\n    var402!val!0)\r\n  (define-fun log/-2053243914 ((x!0 var402)\r\n   (x!1 var2202)\r\n   (x!2 String)\r\n   (x!3 var100)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var265)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1634304,
            "run_time": 0.12446761131286621,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var402 is 2\r\n; rep: (as @var402_0 var402)\r\n; rep: (as @var402_1 var402)\r\n; cardinality of var265 is 2\r\n; rep: (as @var265_0 var265)\r\n; rep: (as @var265_1 var265)\r\n; cardinality of var2202 is 1\r\n; rep: (as @var2202_0 var2202)\r\n; cardinality of var100 is 1\r\n; rep: (as @var100_0 var100)\r\n; cardinality of var84 is 1\r\n; rep: (as @var84_0 var84)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_439 var265)) String \"\")\r\n(define-fun log/-2053243914 ((BOUND_VARIABLE_442 var402) (BOUND_VARIABLE_443 var2202) (BOUND_VARIABLE_444 String) (BOUND_VARIABLE_445 var100)) void (as @void_0 void))\r\n(define-fun null-var402 () var402 (as @var402_0 var402))\r\n(define-fun null-var265 () var265 (as @var265_0 var265))\r\n(define-fun var2202-INFO () var2202 (as @var2202_0 var2202))\r\n(define-fun null-NullType () var84 (as @var84_0 var84))\r\n(define-fun null-var100 () var100 (as @var100_0 var100))\r\n(define-fun var996 () var402 (as @var402_1 var402))\r\n(define-fun var3773 () var265 (as @var265_1 var265))\r\n(define-fun var996!1 () var402 (as @var402_0 var402))\r\n(define-fun var2082!1 () var2202 (as @var2202_0 var2202))\r\n(define-fun var1999!1 () String \"\")\r\n(define-fun var3058 () var84 (as @var84_0 var84))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33718272,
            "run_time": 0.21626067161560059,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var402:\n  ;;   var402!val!0 var402!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var402!val!0 () var402)\n  (declare-fun var402!val!1 () var402)\n  ;; cardinality constraint:\n  (forall ((x var402)) (or (= x var402!val!0) (= x var402!val!1)))\n  ;; -----------\n  ;; universe for var265:\n  ;;   var265!val!1 var265!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var265!val!1 () var265)\n  (declare-fun var265!val!0 () var265)\n  ;; cardinality constraint:\n  (forall ((x var265)) (or (= x var265!val!1) (= x var265!val!0)))\n  ;; -----------\n  (define-fun null-var402 () var402\n    var402!val!1)\n  (define-fun var2082 () var2202\n    var2202-INFO)\n  (define-fun var1999 () String\n    (String_valueOf/-333372740 var3773))\n  (define-fun null-var265 () var265\n    var265!val!1)\n  (define-fun var3773 () var265\n    var265!val!0)\n  (define-fun var996 () var402\n    var402!val!0)\n  (define-fun var3058 () var84\n    var84!val!0)\n  (define-fun null-NullType () var84\n    var84!val!0)\n  (define-fun null-var100 () var100\n    var100!val!0)\n  (define-fun var2082!1 () var2202\n    var2202!val!0)\n  (define-fun var2202-INFO () var2202\n    var2202!val!0)\n  (define-fun var1999!1 () String\n    \"\")\n  (define-fun var996!1 () var402\n    var402!val!0)\n  (define-fun log/-2053243914 ((x!0 var402)\n   (x!1 var2202)\n   (x!2 String)\n   (x!3 var100)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var265)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140742656,
            "run_time": 2.1736085414886475,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3773 () var265 var265!8)\r\n  (define-fun var996 () var402 var402!6)\r\n  (define-fun null-var265 () var265 var265!4)\r\n  (define-fun null-var402 () var402 var402!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk14Logger",
            "r1 := @parameter0: java.lang.Object",
            "$r2 = <java.util.logging.Level: java.util.logging.Level INFO>",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk14Logger__warn__-1881891479\\405.smt2",
        "z3": {
            "memory": 31666176,
            "run_time": 0.2420334815979004,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var539:\r\n  ;;   var539!val!0 var539!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var539!val!0 () var539)\r\n  (declare-fun var539!val!1 () var539)\r\n  ;; cardinality constraint:\r\n  (forall ((x var539)) (or (= x var539!val!0) (= x var539!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3313:\r\n  ;;   var3313!val!0 var3313!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3313!val!0 () var3313)\r\n  (declare-fun var3313!val!1 () var3313)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3313)) (or (= x var3313!val!0) (= x var3313!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3089:\r\n  ;;   var3089!val!0 var3089!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3089!val!0 () var3089)\r\n  (declare-fun var3089!val!1 () var3089)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3089)) (or (= x var3089!val!0) (= x var3089!val!1)))\r\n  ;; -----------\r\n  (define-fun var330 () var3313\r\n    var3313!val!0)\r\n  (define-fun null-var3089 () var3089\r\n    var3089!val!1)\r\n  (define-fun null-var3313 () var3313\r\n    var3313!val!1)\r\n  (define-fun var910 () String\r\n    (String_valueOf/-333372740 var3546))\r\n  (define-fun var1227 () var3089\r\n    var3089!val!0)\r\n  (define-fun null-var539 () var539\r\n    var539!val!1)\r\n  (define-fun var3546 () var539\r\n    var539!val!0)\r\n  (define-fun var1100 () var3552\r\n    var3552-WARNING)\r\n  (define-fun var330!1 () var3313\r\n    var3313!val!0)\r\n  (define-fun var910!1 () String\r\n    \"\")\r\n  (define-fun var1100!1 () var3552\r\n    var3552!val!0)\r\n  (define-fun var3552-WARNING () var3552\r\n    var3552!val!0)\r\n  (define-fun var1227!1 () var3089\r\n    var3089!val!0)\r\n  (define-fun log/-2053243914 ((x!0 var3313)\r\n   (x!1 var3552)\r\n   (x!2 String)\r\n   (x!3 var3089)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var539)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 4902912,
            "run_time": 0.10892200469970703,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3313 is 2\r\n; rep: (as @var3313_0 var3313)\r\n; rep: (as @var3313_1 var3313)\r\n; cardinality of var539 is 2\r\n; rep: (as @var539_0 var539)\r\n; rep: (as @var539_1 var539)\r\n; cardinality of var3089 is 2\r\n; rep: (as @var3089_0 var3089)\r\n; rep: (as @var3089_1 var3089)\r\n; cardinality of var3552 is 1\r\n; rep: (as @var3552_0 var3552)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_444 var539)) String \"\")\r\n(define-fun log/-2053243914 ((BOUND_VARIABLE_447 var3313) (BOUND_VARIABLE_448 var3552) (BOUND_VARIABLE_449 String) (BOUND_VARIABLE_450 var3089)) void (as @void_0 void))\r\n(define-fun null-var3313 () var3313 (as @var3313_0 var3313))\r\n(define-fun null-var539 () var539 (as @var539_0 var539))\r\n(define-fun null-var3089 () var3089 (as @var3089_0 var3089))\r\n(define-fun var3552-WARNING () var3552 (as @var3552_0 var3552))\r\n(define-fun var330 () var3313 (as @var3313_1 var3313))\r\n(define-fun var3546 () var539 (as @var539_1 var539))\r\n(define-fun var1227 () var3089 (as @var3089_1 var3089))\r\n(define-fun var330!1 () var3313 (as @var3313_0 var3313))\r\n(define-fun var1100!1 () var3552 (as @var3552_0 var3552))\r\n(define-fun var910!1 () String \"\")\r\n(define-fun var1227!1 () var3089 (as @var3089_0 var3089))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34496512,
            "run_time": 0.31034016609191895,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var539:\n  ;;   var539!val!0 var539!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var539!val!0 () var539)\n  (declare-fun var539!val!1 () var539)\n  ;; cardinality constraint:\n  (forall ((x var539)) (or (= x var539!val!0) (= x var539!val!1)))\n  ;; -----------\n  ;; universe for var3313:\n  ;;   var3313!val!0 var3313!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3313!val!0 () var3313)\n  (declare-fun var3313!val!1 () var3313)\n  ;; cardinality constraint:\n  (forall ((x var3313)) (or (= x var3313!val!0) (= x var3313!val!1)))\n  ;; -----------\n  ;; universe for var3089:\n  ;;   var3089!val!0 var3089!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3089!val!0 () var3089)\n  (declare-fun var3089!val!1 () var3089)\n  ;; cardinality constraint:\n  (forall ((x var3089)) (or (= x var3089!val!0) (= x var3089!val!1)))\n  ;; -----------\n  (define-fun var1100 () var3552\n    var3552-WARNING)\n  (define-fun var330 () var3313\n    var3313!val!0)\n  (define-fun null-var3089 () var3089\n    var3089!val!1)\n  (define-fun null-var3313 () var3313\n    var3313!val!1)\n  (define-fun var910 () String\n    (String_valueOf/-333372740 var3546))\n  (define-fun var1227 () var3089\n    var3089!val!0)\n  (define-fun null-var539 () var539\n    var539!val!1)\n  (define-fun var3546 () var539\n    var539!val!0)\n  (define-fun var330!1 () var3313\n    var3313!val!0)\n  (define-fun var910!1 () String\n    \"\")\n  (define-fun var1100!1 () var3552\n    var3552!val!0)\n  (define-fun var3552-WARNING () var3552\n    var3552!val!0)\n  (define-fun var1227!1 () var3089\n    var3089!val!0)\n  (define-fun log/-2053243914 ((x!0 var3313)\n   (x!1 var3552)\n   (x!2 String)\n   (x!3 var3089)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var539)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140627968,
            "run_time": 2.3710145950317383,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1227 () var3089 var3089!12)\r\n  (define-fun var3546 () var539 var539!10)\r\n  (define-fun var330 () var3313 var3313!8)\r\n  (define-fun null-var3089 () var3089 var3089!6)\r\n  (define-fun null-var539 () var539 var539!4)\r\n  (define-fun null-var3313 () var3313 var3313!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk14Logger",
            "r1 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r2 = <java.util.logging.Level: java.util.logging.Level WARNING>",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "virtualinvoke r0.<org.apache.commons.logging.impl.Jdk14Logger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Jdk13LumberjackLogger__info__-1695829878\\222.smt2",
        "z3": {
            "memory": 31272960,
            "run_time": 0.21237444877624512,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2621:\r\n  ;;   var2621!val!1 var2621!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2621!val!1 () var2621)\r\n  (declare-fun var2621!val!0 () var2621)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2621)) (or (= x var2621!val!1) (= x var2621!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2322:\r\n  ;;   var2322!val!0 var2322!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2322!val!0 () var2322)\r\n  (declare-fun var2322!val!1 () var2322)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2322)) (or (= x var2322!val!0) (= x var2322!val!1)))\r\n  ;; -----------\r\n  (define-fun var53 () var1855\r\n    var1855-INFO)\r\n  (define-fun var3650 () String\r\n    (String_valueOf/-333372740 var3778))\r\n  (define-fun var3778 () var2621\r\n    var2621!val!0)\r\n  (define-fun var175 () var2322\r\n    var2322!val!0)\r\n  (define-fun null-var2322 () var2322\r\n    var2322!val!1)\r\n  (define-fun null-var2621 () var2621\r\n    var2621!val!1)\r\n  (define-fun var175!1 () var2322\r\n    var2322!val!0)\r\n  (define-fun var2332 () var1340\r\n    var1340!val!0)\r\n  (define-fun var1855-INFO () var1855\r\n    var1855!val!0)\r\n  (define-fun var53!1 () var1855\r\n    var1855!val!0)\r\n  (define-fun null-NullType () var1340\r\n    var1340!val!0)\r\n  (define-fun null-var3134 () var3134\r\n    var3134!val!0)\r\n  (define-fun var3650!1 () String\r\n    \"\")\r\n  (define-fun log/-1292381875 ((x!0 var2322)\r\n   (x!1 var1855)\r\n   (x!2 String)\r\n   (x!3 var3134)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var2621)) String\r\n    \"\")\r\n)\r\n(error \"line 35 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.20688962936401367,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2322 is 2\r\n; rep: (as @var2322_0 var2322)\r\n; rep: (as @var2322_1 var2322)\r\n; cardinality of var2621 is 2\r\n; rep: (as @var2621_0 var2621)\r\n; rep: (as @var2621_1 var2621)\r\n; cardinality of var1855 is 1\r\n; rep: (as @var1855_0 var1855)\r\n; cardinality of var3134 is 1\r\n; rep: (as @var3134_0 var3134)\r\n; cardinality of var1340 is 1\r\n; rep: (as @var1340_0 var1340)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_439 var2621)) String \"\")\r\n(define-fun log/-1292381875 ((BOUND_VARIABLE_442 var2322) (BOUND_VARIABLE_443 var1855) (BOUND_VARIABLE_444 String) (BOUND_VARIABLE_445 var3134)) void (as @void_0 void))\r\n(define-fun null-var2322 () var2322 (as @var2322_0 var2322))\r\n(define-fun null-var2621 () var2621 (as @var2621_0 var2621))\r\n(define-fun var1855-INFO () var1855 (as @var1855_0 var1855))\r\n(define-fun null-NullType () var1340 (as @var1340_0 var1340))\r\n(define-fun null-var3134 () var3134 (as @var3134_0 var3134))\r\n(define-fun var175 () var2322 (as @var2322_1 var2322))\r\n(define-fun var3778 () var2621 (as @var2621_1 var2621))\r\n(define-fun var175!1 () var2322 (as @var2322_0 var2322))\r\n(define-fun var53!1 () var1855 (as @var1855_0 var1855))\r\n(define-fun var3650!1 () String \"\")\r\n(define-fun var2332 () var1340 (as @var1340_0 var1340))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 33873920,
            "run_time": 0.3833506107330322,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2621:\n  ;;   var2621!val!1 var2621!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2621!val!1 () var2621)\n  (declare-fun var2621!val!0 () var2621)\n  ;; cardinality constraint:\n  (forall ((x var2621)) (or (= x var2621!val!1) (= x var2621!val!0)))\n  ;; -----------\n  ;; universe for var2322:\n  ;;   var2322!val!0 var2322!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2322!val!0 () var2322)\n  (declare-fun var2322!val!1 () var2322)\n  ;; cardinality constraint:\n  (forall ((x var2322)) (or (= x var2322!val!0) (= x var2322!val!1)))\n  ;; -----------\n  (define-fun var3778 () var2621\n    var2621!val!0)\n  (define-fun var53 () var1855\n    var1855-INFO)\n  (define-fun var175 () var2322\n    var2322!val!0)\n  (define-fun var3650 () String\n    (String_valueOf/-333372740 var3778))\n  (define-fun null-var2322 () var2322\n    var2322!val!1)\n  (define-fun null-var2621 () var2621\n    var2621!val!1)\n  (define-fun var175!1 () var2322\n    var2322!val!0)\n  (define-fun var2332 () var1340\n    var1340!val!0)\n  (define-fun var1855-INFO () var1855\n    var1855!val!0)\n  (define-fun var53!1 () var1855\n    var1855!val!0)\n  (define-fun null-NullType () var1340\n    var1340!val!0)\n  (define-fun null-var3134 () var3134\n    var3134!val!0)\n  (define-fun var3650!1 () String\n    \"\")\n  (define-fun log/-1292381875 ((x!0 var2322)\n   (x!1 var1855)\n   (x!2 String)\n   (x!3 var3134)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var2621)) String\n    \"\")\n)\n(error \"line 35 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140345344,
            "run_time": 2.231478214263916,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3778 () var2621 var2621!8)\r\n  (define-fun var175 () var2322 var2322!6)\r\n  (define-fun null-var2621 () var2621 var2621!4)\r\n  (define-fun null-var2322 () var2322 var2322!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Jdk13LumberjackLogger",
            "r1 := @parameter0: java.lang.Object",
            "$r2 = <java.util.logging.Level: java.util.logging.Level INFO>",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r1)",
            "specialinvoke r0.<org.apache.commons.logging.impl.Jdk13LumberjackLogger: void log(java.util.logging.Level,java.lang.String,java.lang.Throwable)>($r2, $r3, null)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.AvalonLogger__warn__-399877134\\394.smt2",
        "z3": {
            "memory": 31399936,
            "run_time": 0.11977148056030273,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3305:\r\n  ;;   var3305!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3305!val!0 () var3305)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3305)) (= x var3305!val!0))\r\n  ;; -----------\r\n  ;; universe for var2181:\r\n  ;;   var2181!val!0 var2181!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2181!val!0 () var2181)\r\n  (declare-fun var2181!val!1 () var2181)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2181)) (or (= x var2181!val!0) (= x var2181!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2953:\r\n  ;;   var2953!val!0 var2953!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2953!val!0 () var2953)\r\n  (declare-fun var2953!val!1 () var2953)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2953)) (or (= x var2953!val!0) (= x var2953!val!1)))\r\n  ;; -----------\r\n  ;; universe for var645:\r\n  ;;   var645!val!1 var645!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var645!val!1 () var645)\r\n  (declare-fun var645!val!0 () var645)\r\n  ;; cardinality constraint:\r\n  (forall ((x var645)) (or (= x var645!val!1) (= x var645!val!0)))\r\n  ;; -----------\r\n  (define-fun var1983 () var3305\r\n    (getLogger/-1412858970 var3227))\r\n  (define-fun var1891 () var2181\r\n    var2181!val!0)\r\n  (define-fun var1748 () var3305\r\n    (getLogger/-1412858970 var3227))\r\n  (define-fun var3985 () Bool\r\n    (var3305_isWarnEnabled/-51508077 (getLogger/-1412858970 var3227)))\r\n  (define-fun null-var2181 () var2181\r\n    var2181!val!1)\r\n  (define-fun null-var645 () var645\r\n    var645!val!1)\r\n  (define-fun var3227 () var2953\r\n    var2953!val!0)\r\n  (define-fun var66 () String\r\n    (String_valueOf/-333372740 var1891))\r\n  (define-fun var1546 () var645\r\n    var645!val!0)\r\n  (define-fun null-var2953 () var2953\r\n    var2953!val!1)\r\n  (define-fun var1546!1 () var645\r\n    var645!val!1)\r\n  (define-fun var1748!1 () var3305\r\n    var3305!val!0)\r\n  (define-fun var66!1 () String\r\n    \"\")\r\n  (define-fun getLogger/-1412858970 ((x!0 var2953)) var3305\r\n    var3305!val!0)\r\n  (define-fun var3305_isWarnEnabled/-51508077 ((x!0 var3305)) Bool\r\n    true)\r\n  (define-fun var3305_warn/-181148641 ((x!0 var3305) (x!1 String) (x!2 var645)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var2181)) String\r\n    \"\")\r\n)\r\n(error \"line 41 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1658880,
            "run_time": 0.19060373306274414,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2953 is 2\r\n; rep: (as @var2953_0 var2953)\r\n; rep: (as @var2953_1 var2953)\r\n; cardinality of var2181 is 2\r\n; rep: (as @var2181_0 var2181)\r\n; rep: (as @var2181_1 var2181)\r\n; cardinality of var645 is 2\r\n; rep: (as @var645_0 var645)\r\n; rep: (as @var645_1 var645)\r\n; cardinality of var3305 is 1\r\n; rep: (as @var3305_0 var3305)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getLogger/-1412858970 ((_arg_1 var2953)) var3305 (as @var3305_0 var3305))\r\n(define-fun var3305_isWarnEnabled/-51508077 ((_arg_1 var3305)) Bool true)\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_503 var2181)) String \"\")\r\n(define-fun var3305_warn/-181148641 ((BOUND_VARIABLE_506 var3305) (BOUND_VARIABLE_507 String) (BOUND_VARIABLE_508 var645)) void (as @void_0 void))\r\n(define-fun null-var2953 () var2953 (as @var2953_0 var2953))\r\n(define-fun null-var2181 () var2181 (as @var2181_0 var2181))\r\n(define-fun null-var645 () var645 (as @var645_0 var645))\r\n(define-fun var3227 () var2953 (as @var2953_1 var2953))\r\n(define-fun var1891 () var2181 (as @var2181_1 var2181))\r\n(define-fun var1546 () var645 (as @var645_1 var645))\r\n(define-fun var1748!1 () var3305 (as @var3305_0 var3305))\r\n(define-fun var66!1 () String \"\")\r\n(define-fun var1546!1 () var645 (as @var645_0 var645))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35389440,
            "run_time": 0.1970219612121582,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3305:\n  ;;   var3305!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3305!val!0 () var3305)\n  ;; cardinality constraint:\n  (forall ((x var3305)) (= x var3305!val!0))\n  ;; -----------\n  ;; universe for var2181:\n  ;;   var2181!val!0 var2181!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2181!val!0 () var2181)\n  (declare-fun var2181!val!1 () var2181)\n  ;; cardinality constraint:\n  (forall ((x var2181)) (or (= x var2181!val!0) (= x var2181!val!1)))\n  ;; -----------\n  ;; universe for var2953:\n  ;;   var2953!val!0 var2953!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2953!val!0 () var2953)\n  (declare-fun var2953!val!1 () var2953)\n  ;; cardinality constraint:\n  (forall ((x var2953)) (or (= x var2953!val!0) (= x var2953!val!1)))\n  ;; -----------\n  ;; universe for var645:\n  ;;   var645!val!1 var645!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var645!val!1 () var645)\n  (declare-fun var645!val!0 () var645)\n  ;; cardinality constraint:\n  (forall ((x var645)) (or (= x var645!val!1) (= x var645!val!0)))\n  ;; -----------\n  (define-fun var1891 () var2181\n    var2181!val!0)\n  (define-fun var1983 () var3305\n    (getLogger/-1412858970 var3227))\n  (define-fun var66 () String\n    (String_valueOf/-333372740 var1891))\n  (define-fun null-var2181 () var2181\n    var2181!val!1)\n  (define-fun null-var645 () var645\n    var645!val!1)\n  (define-fun var3227 () var2953\n    var2953!val!0)\n  (define-fun var1748 () var3305\n    (getLogger/-1412858970 var3227))\n  (define-fun var1546 () var645\n    var645!val!0)\n  (define-fun null-var2953 () var2953\n    var2953!val!1)\n  (define-fun var3985 () Bool\n    (var3305_isWarnEnabled/-51508077 (getLogger/-1412858970 var3227)))\n  (define-fun var1546!1 () var645\n    var645!val!1)\n  (define-fun var1748!1 () var3305\n    var3305!val!0)\n  (define-fun var66!1 () String\n    \"\")\n  (define-fun getLogger/-1412858970 ((x!0 var2953)) var3305\n    var3305!val!0)\n  (define-fun var3305_isWarnEnabled/-51508077 ((x!0 var3305)) Bool\n    true)\n  (define-fun var3305_warn/-181148641 ((x!0 var3305) (x!1 String) (x!2 var645)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var2181)) String\n    \"\")\n)\n(error \"line 41 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152109056,
            "run_time": 2.4023334980010986,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1546 () var645 var645!12)\r\n  (define-fun var1891 () var2181 var2181!10)\r\n  (define-fun var3227 () var2953 var2953!8)\r\n  (define-fun null-var645 () var645 var645!6)\r\n  (define-fun null-var2181 () var2181 var2181!4)\r\n  (define-fun null-var2953 () var2953 var2953!2)\r\n  (define-fun var3305!28 () var3305 (getLogger/-1412858970 var2953!8))\r\n  (define-fun var3305_isWarnEnabled/-51508077 ((x!0 var3305)) Bool (ite (= x!0 var3305!28) true true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.AvalonLogger",
            "r2 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r1 = virtualinvoke r0.<org.apache.commons.logging.impl.AvalonLogger: org.apache.avalon.framework.logger.Logger getLogger()>()",
            "$z0 = interfaceinvoke $r1.<org.apache.avalon.framework.logger.Logger: boolean isWarnEnabled()>()",
            "if $z0 == 0 goto return",
            "$r5 = virtualinvoke r0.<org.apache.commons.logging.impl.AvalonLogger: org.apache.avalon.framework.logger.Logger getLogger()>()",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)",
            "interfaceinvoke $r5.<org.apache.avalon.framework.logger.Logger: void warn(java.lang.String,java.lang.Throwable)>($r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__handleFlawedHierarchy__772987565\\460.smt2",
        "z3": {
            "memory": 31010816,
            "run_time": 0.16717076301574707,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 49 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1634304,
            "run_time": 0.029921770095825195,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 32960512,
            "run_time": 0.1405322551727295,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 49 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154767360,
            "run_time": 2.138557195663452,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 11,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r4 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r27 := @parameter0: java.lang.ClassLoader",
            "r2 := @parameter1: java.lang.Class",
            "z7 = 0",
            "$r0 = class \"Lorg/apache/commons/logging/Log;\"",
            "r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>()",
            "r3 = virtualinvoke r2.<java.lang.Class: java.lang.Class[] getInterfaces()>()",
            "i0 = lengthof r3",
            "i1 = 0",
            "if i1 >= i0 goto (branch)",
            "if z7 == 0 goto $z0 = r4.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedDiscovery>",
            "$z3 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z3 == 0 goto $z8 = r4.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedHierarchy>",
            "$z8 = r4.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedHierarchy>",
            "if $z8 != 0 goto $z4 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "$z4 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z4 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__discoverLogImplementation__-203483503\\228.smt2",
        "z3": {
            "memory": 31952896,
            "run_time": 0.2508697509765625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3761:\r\n  ;;   var3761!val!0 var3761!val!1 var3761!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3761!val!0 () var3761)\r\n  (declare-fun var3761!val!1 () var3761)\r\n  (declare-fun var3761!val!2 () var3761)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3761))\r\n          (or (= x var3761!val!0) (= x var3761!val!1) (= x var3761!val!2)))\r\n  ;; -----------\r\n  ;; universe for var1947:\r\n  ;;   var1947!val!0 var1947!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1947!val!0 () var1947)\r\n  (declare-fun var1947!val!1 () var1947)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1947)) (or (= x var1947!val!0) (= x var1947!val!1)))\r\n  ;; -----------\r\n  (define-fun var389 () var1947\r\n    (createLogFromClass/1434645975\r\n  var3827!1\r\n  (findUserSpecifiedLogClassName/-487640286 var3827!1)\r\n  var1386\r\n  (ite (= 1 1) true false)))\r\n  (define-fun var3827!1 () var3761\r\n    var3761!val!2)\r\n  (define-fun var1386 () String\r\n    \"!0!\")\r\n  (define-fun var3827 () var3761\r\n    var3761!val!0)\r\n  (define-fun null-var1947 () var1947\r\n    var1947!val!1)\r\n  (define-fun var3803 () var1947\r\n    null-var1947)\r\n  (define-fun null-var3761 () var3761\r\n    var3761!val!1)\r\n  (define-fun var1035 () Bool\r\n    var3761_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var932 () String\r\n    (findUserSpecifiedLogClassName/-487640286 var3827!1))\r\n  (define-fun var3480 () Bool\r\n    var3761_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun var3761_isDiagnosticsEnabled/-1107982053 () Bool\r\n    false)\r\n  (define-fun createLogFromClass/1434645975 ((x!0 var3761)\r\n   (x!1 String)\r\n   (x!2 String)\r\n   (x!3 Bool)) var1947\r\n    var1947!val!0)\r\n  (define-fun findUserSpecifiedLogClassName/-487640286 ((x!0 var3761)) String\r\n    \"!2!\")\r\n  (define-fun initConfiguration/1097963384 ((x!0 var3761)) void\r\n    void!val!0)\r\n)\r\n(error \"line 43 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12107776,
            "run_time": 0.05516552925109863,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3761 is 3\r\n; rep: (as @var3761_0 var3761)\r\n; rep: (as @var3761_1 var3761)\r\n; rep: (as @var3761_2 var3761)\r\n; cardinality of var1624 is 1\r\n; rep: (as @var1624_0 var1624)\r\n; cardinality of var1947 is 2\r\n; rep: (as @var1947_0 var1947)\r\n; rep: (as @var1947_1 var1947)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3761_isDiagnosticsEnabled/-1107982053 () Bool false)\r\n(define-fun initConfiguration/1097963384 ((BOUND_VARIABLE_611 var3761)) void (as @void_0 void))\r\n(define-fun findUserSpecifiedLogClassName/-487640286 ((_arg_1 var3761)) String \"\")\r\n(define-fun createLogFromClass/1434645975 ((_arg_1 var3761) (_arg_2 String) (_arg_3 String) (_arg_4 Bool)) var1947 (as @var1947_1 var1947))\r\n(define-fun null-var3761 () var3761 (as @var3761_0 var3761))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1947 () var1947 (as @var1947_0 var1947))\r\n(define-fun var3827 () var3761 (as @var3761_1 var3761))\r\n(define-fun var1386 () String \"\")\r\n(define-fun var3827!1 () var3761 (as @var3761_2 var3761))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35704832,
            "run_time": 0.12581133842468262,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 42 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 43 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166711296,
            "run_time": 2.501371145248413,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3827!1 () var3761 var3761!10)\r\n  (define-fun var1386 () String \"\\u{0}\")\r\n  (define-fun var3827 () var3761 var3761!6)\r\n  (define-fun null-var1947 () var1947 var1947!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3761 () var3761 var3761!2)\r\n  (define-fun var1947!26 () var1947 (createLogFromClass/1434645975 var3761!10 \"\\u{1}\" \"\\u{0}\" true))\r\n  (define-fun var3761_isDiagnosticsEnabled/-1107982053 () Bool false)\r\n  (define-fun findUserSpecifiedLogClassName/-487640286 ((x!0 var3761)) String (ite (= x!0 var3761!10) \"\\u{1}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 9,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r3 := @parameter0: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto specialinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void initConfiguration()>()",
            "specialinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void initConfiguration()>()",
            "r15 = null",
            "$r14 = specialinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String findUserSpecifiedLogClassName()>()",
            "if $r14 == null goto $z1 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "$z2 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z2 == 0 goto $r13 = specialinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: org.apache.commons.logging.Log createLogFromClass(java.lang.String,java.lang.String,boolean)>($r14, r3, 1)",
            "$r13 = specialinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: org.apache.commons.logging.Log createLogFromClass(java.lang.String,java.lang.String,boolean)>($r14, r3, 1)",
            "if $r13 != null goto return $r13",
            "return $r13"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__handleFlawedHierarchy__772987565\\451.smt2",
        "z3": {
            "memory": 31526912,
            "run_time": 0.1221768856048584,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1125:\r\n  ;;   var1125!val!0 var1125!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1125!val!0 () var1125)\r\n  (declare-fun var1125!val!1 () var1125)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1125)) (or (= x var1125!val!0) (= x var1125!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2970:\r\n  ;;   var2970!val!1 var2970!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2970!val!1 () var2970)\r\n  (declare-fun var2970!val!0 () var2970)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2970)) (or (= x var2970!val!1) (= x var2970!val!0)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var1756 () var2970\r\n    var2970!val!0)\r\n  (define-fun var1351 () Int\r\n    0)\r\n  (define-fun null-var2970 () var2970\r\n    var2970!val!1)\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var3470 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var3965 () Bool\r\n    (allowFlawedDiscovery/1199358121 var2737))\r\n  (define-fun null-var1125 () var1125\r\n    var1125!val!1)\r\n  (define-fun var2737 () var1125\r\n    var1125!val!0)\r\n  (define-fun var1549 () ClassObject\r\n    var3463!class)\r\n  (define-fun var456 () Bool\r\n    var1125_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun var3534 () (Array Int ClassObject)\r\n    (getInterfaces/-1280103563 var1082))\r\n  (define-fun var2803 () Int\r\n    (getLength-Arr-ClassObject-1 (getInterfaces/-1280103563 var1082)))\r\n  (define-fun var1082 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var3663 () String\r\n    (getName/-1958580599 var3463!class))\r\n  (define-fun var1125_isDiagnosticsEnabled/-1107982053 () Bool\r\n    false)\r\n  (define-fun var3463!class () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun allowFlawedDiscovery/1199358121 ((x!0 var1125)) Bool\r\n    true)\r\n  (define-fun getInterfaces/-1280103563 ((x!0 ClassObject)) (Array Int\r\n         ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\r\n  (define-fun getLength-Arr-ClassObject-1 ((x!0 (Array Int ClassObject))) Int\r\n    0)\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n)\r\n(error \"line 47 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.046705007553100586,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1125 is 2\r\n; rep: (as @var1125_0 var1125)\r\n; rep: (as @var1125_1 var1125)\r\n; cardinality of var2970 is 2\r\n; rep: (as @var2970_0 var2970)\r\n; rep: (as @var2970_1 var2970)\r\n; cardinality of var3463 is 1\r\n; rep: (as @var3463_0 var3463)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var3463!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_568 ClassObject)) String \"\")\r\n(define-fun getInterfaces/-1280103563 ((_arg_1 ClassObject)) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun getLength-Arr-ClassObject-1 ((_arg_1 (Array Int ClassObject))) Int 0)\r\n(define-fun allowFlawedDiscovery/1199358121 ((_arg_1 var1125)) Bool true)\r\n(define-fun var1125_isDiagnosticsEnabled/-1107982053 () Bool false)\r\n(define-fun null-var1125 () var1125 (as @var1125_0 var1125))\r\n(define-fun null-var2970 () var2970 (as @var2970_0 var2970))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var2737 () var1125 (as @var1125_1 var1125))\r\n(define-fun var1756 () var2970 (as @var2970_1 var2970))\r\n(define-fun var1082 () ClassObject (as @ClassObject_1 ClassObject))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35921920,
            "run_time": 0.17329192161560059,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1125:\n  ;;   var1125!val!0 var1125!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1125!val!0 () var1125)\n  (declare-fun var1125!val!1 () var1125)\n  ;; cardinality constraint:\n  (forall ((x var1125)) (or (= x var1125!val!0) (= x var1125!val!1)))\n  ;; -----------\n  ;; universe for var2970:\n  ;;   var2970!val!1 var2970!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2970!val!1 () var2970)\n  (declare-fun var2970!val!0 () var2970)\n  ;; cardinality constraint:\n  (forall ((x var2970)) (or (= x var2970!val!1) (= x var2970!val!0)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  (define-fun var1756 () var2970\n    var2970!val!0)\n  (define-fun null-var2970 () var2970\n    var2970!val!1)\n  (define-fun var3470 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var3965 () Bool\n    (allowFlawedDiscovery/1199358121 var2737))\n  (define-fun var3534 () (Array Int ClassObject)\n    (getInterfaces/-1280103563 var1082))\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var1549 () ClassObject\n    var3463!class)\n  (define-fun var456 () Bool\n    var1125_isDiagnosticsEnabled/-1107982053)\n  (define-fun var2803 () Int\n    (getLength-Arr-ClassObject-1 (getInterfaces/-1280103563 var1082)))\n  (define-fun null-var1125 () var1125\n    var1125!val!1)\n  (define-fun var2737 () var1125\n    var1125!val!0)\n  (define-fun var1351 () Int\n    0)\n  (define-fun var3663 () String\n    (getName/-1958580599 var3463!class))\n  (define-fun var1082 () ClassObject\n    ClassObject!val!0)\n  (define-fun var1125_isDiagnosticsEnabled/-1107982053 () Bool\n    false)\n  (define-fun var3463!class () ClassObject\n    ClassObject!val!0)\n  (define-fun allowFlawedDiscovery/1199358121 ((x!0 var1125)) Bool\n    true)\n  (define-fun getInterfaces/-1280103563 ((x!0 ClassObject)) (Array Int\n         ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\n  (define-fun getLength-Arr-ClassObject-1 ((x!0 (Array Int ClassObject))) Int\n    0)\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n)\n(error \"line 47 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 171511808,
            "run_time": 2.485045909881592,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1082 () ClassObject ClassObject!12)\r\n  (define-fun var1756 () var2970 var2970!10)\r\n  (define-fun var2737 () var1125 var1125!8)\r\n  (define-fun null-ClassObject () ClassObject ClassObject!6)\r\n  (define-fun null-var2970 () var2970 var2970!4)\r\n  (define-fun null-var1125 () var1125 var1125!2)\r\n  (define-fun var1125_isDiagnosticsEnabled/-1107982053 () Bool false)\r\n  (define-fun allowFlawedDiscovery/1199358121 ((x!0 var1125)) Bool (ite (= x!0 var1125!8) true true))\r\n  (define-fun getLength-Arr-ClassObject-1 ((x!0 (Array Int ClassObject))) Int (ite (= x!0 ((as const (Array Int ClassObject)) ClassObject!0)) 0 0))\r\n  (define-fun getInterfaces/-1280103563 ((x!0 ClassObject)) (Array Int ClassObject) (ite (= x!0 ClassObject!12) ((as const (Array Int ClassObject)) ClassObject!0) ((as const (Array Int ClassObject)) ClassObject!0)))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 10,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r4 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r27 := @parameter0: java.lang.ClassLoader",
            "r2 := @parameter1: java.lang.Class",
            "z7 = 0",
            "$r0 = class \"Lorg/apache/commons/logging/Log;\"",
            "r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>()",
            "r3 = virtualinvoke r2.<java.lang.Class: java.lang.Class[] getInterfaces()>()",
            "i0 = lengthof r3",
            "i1 = 0",
            "if i1 >= i0 goto (branch)",
            "if z7 == 0 goto $z0 = r4.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedDiscovery>",
            "$z0 = r4.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedDiscovery>",
            "if $z0 != 0 goto $z1 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "$z1 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z1 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__handleFlawedHierarchy__772987565\\469.smt2",
        "z3": {
            "memory": 32022528,
            "run_time": 0.16183090209960938,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var887:\r\n  ;;   var887!val!1 var887!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var887!val!1 () var887)\r\n  (declare-fun var887!val!0 () var887)\r\n  ;; cardinality constraint:\r\n  (forall ((x var887)) (or (= x var887!val!1) (= x var887!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2652:\r\n  ;;   var2652!val!1 var2652!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2652!val!1 () var2652)\r\n  (declare-fun var2652!val!0 () var2652)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2652)) (or (= x var2652!val!1) (= x var2652!val!0)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var2062 () Int\r\n    (getLength-Arr-ClassObject-1 (getInterfaces/-1280103563 var3894)))\r\n  (define-fun null-var887 () var887\r\n    var887!val!1)\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var3252 () var2652\r\n    var2652!val!0)\r\n  (define-fun null-var2652 () var2652\r\n    var2652!val!1)\r\n  (define-fun var1138 () var887\r\n    var887!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3075 () Bool\r\n    var2652_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun var3894 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var1784 () (Array Int ClassObject)\r\n    (getInterfaces/-1280103563 var3894))\r\n  (define-fun var3707 () String\r\n    (getName/-1958580599 var3596!class))\r\n  (define-fun var16 () String\r\n    String-init)\r\n  (define-fun var3757 () ClassObject\r\n    var3596!class)\r\n  (define-fun var1874 () Int\r\n    0)\r\n  (define-fun var1944 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var2981 () String\r\n    var16!4)\r\n  (define-fun var3995 () Bool\r\n    (allowFlawedDiscovery/1199358121 var3252))\r\n  (define-fun var2608 () String\r\n    (getName/-1958580599 var3894))\r\n  (define-fun var16!4 () String\r\n    \"[WARNING] Log class '' does not implement the Log interface.\")\r\n  (define-fun var16!3 () String\r\n    \"[WARNING] Log class '\")\r\n  (define-fun var16!1 () String\r\n    \"\")\r\n  (define-fun var2652_isDiagnosticsEnabled/-1107982053 () Bool\r\n    true)\r\n  (define-fun var16!2 () String\r\n    \"[WARNING] Log class '\")\r\n  (define-fun var3596!class () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var3252!1 () var2652\r\n    var2652!val!1)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2981!1 () String\r\n    \"\")\r\n  (define-fun getInterfaces/-1280103563 ((x!0 ClassObject)) (Array Int\r\n         ClassObject)\r\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\r\n  (define-fun allowFlawedDiscovery/1199358121 ((x!0 var2652)) Bool\r\n    true)\r\n  (define-fun getLength-Arr-ClassObject-1 ((x!0 (Array Int ClassObject))) Int\r\n    0)\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun logDiagnostic/1870399160 ((x!0 var2652) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 79 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.10845232009887695,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2652 is 2\r\n; rep: (as @var2652_0 var2652)\r\n; rep: (as @var2652_1 var2652)\r\n; cardinality of var887 is 2\r\n; rep: (as @var887_0 var887)\r\n; rep: (as @var887_1 var887)\r\n; cardinality of var3596 is 1\r\n; rep: (as @var3596_0 var3596)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var3596!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_670 ClassObject)) String \"\")\r\n(define-fun getInterfaces/-1280103563 ((_arg_1 ClassObject)) (Array Int ClassObject) ((as const (Array Int ClassObject)) (as @ClassObject_0 ClassObject)))\r\n(define-fun getLength-Arr-ClassObject-1 ((_arg_1 (Array Int ClassObject))) Int 0)\r\n(define-fun allowFlawedDiscovery/1199358121 ((_arg_1 var2652)) Bool true)\r\n(define-fun var2652_isDiagnosticsEnabled/-1107982053 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun logDiagnostic/1870399160 ((BOUND_VARIABLE_673 var2652) (BOUND_VARIABLE_674 String)) void (as @void_0 void))\r\n(define-fun null-var2652 () var2652 (as @var2652_0 var2652))\r\n(define-fun null-var887 () var887 (as @var887_0 var887))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var3252 () var2652 (as @var2652_1 var2652))\r\n(define-fun var1138 () var887 (as @var887_1 var887))\r\n(define-fun var3894 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var16!1 () String \"\")\r\n(define-fun var16!2 () String \"[WARNING] Log class '\")\r\n(define-fun var16!3 () String \"[WARNING] Log class '\")\r\n(define-fun var16!4 () String \"[WARNING] Log class '' does not implement the Log interface.\")\r\n(define-fun var3252!1 () var2652 (as @var2652_0 var2652))\r\n(define-fun var2981!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35962880,
            "run_time": 0.18564295768737793,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var887:\n  ;;   var887!val!1 var887!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var887!val!1 () var887)\n  (declare-fun var887!val!0 () var887)\n  ;; cardinality constraint:\n  (forall ((x var887)) (or (= x var887!val!1) (= x var887!val!0)))\n  ;; -----------\n  ;; universe for var2652:\n  ;;   var2652!val!1 var2652!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2652!val!1 () var2652)\n  (declare-fun var2652!val!0 () var2652)\n  ;; cardinality constraint:\n  (forall ((x var2652)) (or (= x var2652!val!1) (= x var2652!val!0)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  (define-fun var1784 () (Array Int ClassObject)\n    (getInterfaces/-1280103563 var3894))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var887 () var887\n    var887!val!1)\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var3252 () var2652\n    var2652!val!0)\n  (define-fun null-var2652 () var2652\n    var2652!val!1)\n  (define-fun var1138 () var887\n    var887!val!0)\n  (define-fun var3757 () ClassObject\n    var3596!class)\n  (define-fun var1874 () Int\n    0)\n  (define-fun var1944 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var3707 () String\n    (getName/-1958580599 var3596!class))\n  (define-fun var3995 () Bool\n    (allowFlawedDiscovery/1199358121 var3252))\n  (define-fun var3894 () ClassObject\n    ClassObject!val!0)\n  (define-fun var16 () String\n    String-init)\n  (define-fun var2981 () String\n    var16!4)\n  (define-fun var2062 () Int\n    (getLength-Arr-ClassObject-1 (getInterfaces/-1280103563 var3894)))\n  (define-fun var2608 () String\n    (getName/-1958580599 var3894))\n  (define-fun var3075 () Bool\n    var2652_isDiagnosticsEnabled/-1107982053)\n  (define-fun var16!4 () String\n    \"[WARNING] Log class '' does not implement the Log interface.\")\n  (define-fun var16!3 () String\n    \"[WARNING] Log class '\")\n  (define-fun var16!1 () String\n    \"\")\n  (define-fun var2652_isDiagnosticsEnabled/-1107982053 () Bool\n    true)\n  (define-fun var16!2 () String\n    \"[WARNING] Log class '\")\n  (define-fun var3596!class () ClassObject\n    ClassObject!val!0)\n  (define-fun var3252!1 () var2652\n    var2652!val!1)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2981!1 () String\n    \"\")\n  (define-fun getInterfaces/-1280103563 ((x!0 ClassObject)) (Array Int\n         ClassObject)\n    ((as const (Array Int ClassObject)) ClassObject!val!0))\n  (define-fun getLength-Arr-ClassObject-1 ((x!0 (Array Int ClassObject))) Int\n    0)\n  (define-fun allowFlawedDiscovery/1199358121 ((x!0 var2652)) Bool\n    true)\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n  (define-fun logDiagnostic/1870399160 ((x!0 var2652) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 79 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168099840,
            "run_time": 2.607644557952881,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var887/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__handleFlawedHierarchy__772987565\\469.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var16!4 =\r\n     concat(var16!3, \"\\u{0}27 does not implement the Log interface.\")\r\n   var16!3 =\r\n     concat(\"[WARNING] Log class \\u{0}27\", all_25_2)\r\n\r\n1843ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 22,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r4 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r27 := @parameter0: java.lang.ClassLoader",
            "r2 := @parameter1: java.lang.Class",
            "z7 = 0",
            "$r0 = class \"Lorg/apache/commons/logging/Log;\"",
            "r1 = virtualinvoke $r0.<java.lang.Class: java.lang.String getName()>()",
            "r3 = virtualinvoke r2.<java.lang.Class: java.lang.Class[] getInterfaces()>()",
            "i0 = lengthof r3",
            "i1 = 0",
            "if i1 >= i0 goto (branch)",
            "if z7 == 0 goto $z0 = r4.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedDiscovery>",
            "$z0 = r4.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedDiscovery>",
            "if $z0 != 0 goto $z1 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "$z1 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z1 == 0 goto return",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[WARNING] Log class \\'\")",
            "$r6 = virtualinvoke r2.<java.lang.Class: java.lang.String getName()>()",
            "virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' does not implement the Log interface.\")",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r4.<org.apache.commons.logging.impl.LogFactoryImpl: void logDiagnostic(java.lang.String)>($r7)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__isLogLibraryAvailable__1913245598\\499.smt2",
        "z3": {
            "memory": 31576064,
            "run_time": 0.33866262435913086,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1171:\r\n  ;;   var1171!val!0 var1171!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1171!val!0 () var1171)\r\n  (declare-fun var1171!val!1 () var1171)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1171)) (or (= x var1171!val!0) (= x var1171!val!1)))\r\n  ;; -----------\r\n  ;; universe for var616:\r\n  ;;   var616!val!1 var616!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var616!val!1 () var616)\r\n  (declare-fun var616!val!0 () var616)\r\n  ;; cardinality constraint:\r\n  (forall ((x var616)) (or (= x var616!val!1) (= x var616!val!0)))\r\n  ;; -----------\r\n  (define-fun var3859 () String\r\n    \"!0!\")\r\n  (define-fun var1340 () Bool\r\n    var1171_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun var2057 () ClassObject\r\n    (getClass/1258963082 (cast-from-var1171-to-var3715 var3719)))\r\n  (define-fun var732 () var616\r\n    var616!val!0)\r\n  (define-fun null-var1171 () var1171\r\n    var1171!val!1)\r\n  (define-fun var3719 () var1171\r\n    var1171!val!0)\r\n  (define-fun var344 () Bool\r\n    var1171_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun null-var616 () var616\r\n    var616!val!1)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var260 () String\r\n    \"!2!\")\r\n  (define-fun var1171_isDiagnosticsEnabled/-1107982053 () Bool\r\n    false)\r\n  (define-fun getClass/1258963082 ((x!0 var3715)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun cast-from-var1171-to-var3715 ((x!0 var1171)) var3715\r\n    var3715!val!0)\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9981952,
            "run_time": 0.0602259635925293,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1171 is 2\r\n; rep: (as @var1171_0 var1171)\r\n; rep: (as @var1171_1 var1171)\r\n; cardinality of var848 is 1\r\n; rep: (as @var848_0 var848)\r\n; cardinality of var3715 is 1\r\n; rep: (as @var3715_0 var3715)\r\n; cardinality of var616 is 2\r\n; rep: (as @var616_0 var616)\r\n; rep: (as @var616_1 var616)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1171_isDiagnosticsEnabled/-1107982053 () Bool false)\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_570 var3715)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var1171-to-var3715 ((BOUND_VARIABLE_573 var1171)) var3715 (as @var3715_0 var3715))\r\n(define-fun null-var1171 () var1171 (as @var1171_0 var1171))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var616 () var616 (as @var616_0 var616))\r\n(define-fun var3719 () var1171 (as @var1171_1 var1171))\r\n(define-fun var3859 () String \"\")\r\n(define-fun var260 () String \"\")\r\n(define-fun var732 () var616 (as @var616_1 var616))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37371904,
            "run_time": 0.28310561180114746,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1171:\n  ;;   var1171!val!0 var1171!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1171!val!0 () var1171)\n  (declare-fun var1171!val!1 () var1171)\n  ;; cardinality constraint:\n  (forall ((x var1171)) (or (= x var1171!val!0) (= x var1171!val!1)))\n  ;; -----------\n  ;; universe for var616:\n  ;;   var616!val!1 var616!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var616!val!1 () var616)\n  (declare-fun var616!val!0 () var616)\n  ;; cardinality constraint:\n  (forall ((x var616)) (or (= x var616!val!1) (= x var616!val!0)))\n  ;; -----------\n  (define-fun var1171_isDiagnosticsEnabled/-1107982053 () Bool\n    false)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2057 () ClassObject\n    (getClass/1258963082 (cast-from-var1171-to-var3715 var3719)))\n  (define-fun var732 () var616\n    var616!val!0)\n  (define-fun var3719 () var1171\n    var1171!val!0)\n  (define-fun null-var1171 () var1171\n    var1171!val!1)\n  (define-fun var260 () String\n    \"\\u{0}\")\n  (define-fun var3859 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1340 () Bool\n    var1171_isDiagnosticsEnabled/-1107982053)\n  (define-fun null-var616 () var616\n    var616!val!1)\n  (define-fun var344 () Bool\n    var1171_isDiagnosticsEnabled/-1107982053)\n  (define-fun getClass/1258963082 ((x!0 var3715)) ClassObject\n    ClassObject!val!0)\n  (define-fun cast-from-var1171-to-var3715 ((x!0 var1171)) var3715\n    var3715!val!0)\n)\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154542080,
            "run_time": 2.050145149230957,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var732 () var616 var616!8)\r\n  (define-fun var260 () String \"\\u{0}\")\r\n  (define-fun var3859 () String \"\\u{0}\")\r\n  (define-fun var3719 () var1171 var1171!6)\r\n  (define-fun null-var616 () var616 var616!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var1171 () var1171 var1171!2)\r\n  (define-fun var1171_isDiagnosticsEnabled/-1107982053 () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 8,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r5 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r21 := @caughtexception",
            "$z3 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z3 == 0 goto return 0",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__isLogLibraryAvailable__1913245598\\506.smt2",
        "z3": {
            "memory": 31752192,
            "run_time": 0.29096174240112305,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3971:\r\n  ;;   var3971!val!0 var3971!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3971!val!0 () var3971)\r\n  (declare-fun var3971!val!1 () var3971)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3971)) (or (= x var3971!val!0) (= x var3971!val!1)))\r\n  ;; -----------\r\n  ;; universe for var104:\r\n  ;;   var104!val!1 var104!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var104!val!1 () var104)\r\n  (declare-fun var104!val!0 () var104)\r\n  ;; cardinality constraint:\r\n  (forall ((x var104)) (or (= x var104!val!1) (= x var104!val!0)))\r\n  ;; -----------\r\n  (define-fun var1814 () String\r\n    \"!0!\")\r\n  (define-fun var245 () ClassObject\r\n    (getClass/1258963082 (cast-from-var104-to-var2209 var2329)))\r\n  (define-fun var3814 () Bool\r\n    var104_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun var2282 () String\r\n    \"!2!\")\r\n  (define-fun var3177 () String\r\n    (getName/-1958580599\r\n  (getClass/1258963082 (cast-from-var104-to-var2209 var2329))))\r\n  (define-fun null-var104 () var104\r\n    var104!val!1)\r\n  (define-fun var1572 () var3971\r\n    var3971!val!0)\r\n  (define-fun null-var3971 () var3971\r\n    var3971!val!1)\r\n  (define-fun var2329 () var104\r\n    var104!val!0)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var26 () Bool\r\n    var104_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun var104_isDiagnosticsEnabled/-1107982053 () Bool\r\n    false)\r\n  (define-fun getClass/1258963082 ((x!0 var2209)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun cast-from-var104-to-var2209 ((x!0 var104)) var2209\r\n    var2209!val!0)\r\n)\r\n(error \"line 41 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11710464,
            "run_time": 0.04572606086730957,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var104 is 2\r\n; rep: (as @var104_0 var104)\r\n; rep: (as @var104_1 var104)\r\n; cardinality of var4 is 1\r\n; rep: (as @var4_0 var4)\r\n; cardinality of var2209 is 1\r\n; rep: (as @var2209_0 var2209)\r\n; cardinality of var3971 is 2\r\n; rep: (as @var3971_0 var3971)\r\n; rep: (as @var3971_1 var3971)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var104_isDiagnosticsEnabled/-1107982053 () Bool false)\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_579 var2209)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var104-to-var2209 ((BOUND_VARIABLE_582 var104)) var2209 (as @var2209_0 var2209))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_585 ClassObject)) String \"\")\r\n(define-fun null-var104 () var104 (as @var104_0 var104))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3971 () var3971 (as @var3971_0 var3971))\r\n(define-fun var2329 () var104 (as @var104_1 var104))\r\n(define-fun var1814 () String \"\")\r\n(define-fun var2282 () String \"\")\r\n(define-fun var1572 () var3971 (as @var3971_1 var3971))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37842944,
            "run_time": 0.2954671382904053,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3971:\n  ;;   var3971!val!0 var3971!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3971!val!0 () var3971)\n  (declare-fun var3971!val!1 () var3971)\n  ;; cardinality constraint:\n  (forall ((x var3971)) (or (= x var3971!val!0) (= x var3971!val!1)))\n  ;; -----------\n  ;; universe for var104:\n  ;;   var104!val!1 var104!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var104!val!1 () var104)\n  (declare-fun var104!val!0 () var104)\n  ;; cardinality constraint:\n  (forall ((x var104)) (or (= x var104!val!1) (= x var104!val!0)))\n  ;; -----------\n  (define-fun var104_isDiagnosticsEnabled/-1107982053 () Bool\n    false)\n  (define-fun var2329 () var104\n    var104!val!0)\n  (define-fun null-var3971 () var3971\n    var3971!val!1)\n  (define-fun var26 () Bool\n    var104_isDiagnosticsEnabled/-1107982053)\n  (define-fun var1814 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var3177 () String\n    (getName/-1958580599\n  (getClass/1258963082 (cast-from-var104-to-var2209 var2329))))\n  (define-fun var245 () ClassObject\n    (getClass/1258963082 (cast-from-var104-to-var2209 var2329)))\n  (define-fun var3814 () Bool\n    var104_isDiagnosticsEnabled/-1107982053)\n  (define-fun var1572 () var3971\n    var3971!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var104 () var104\n    var104!val!1)\n  (define-fun var2282 () String\n    \"\\u{0}\")\n  (define-fun getClass/1258963082 ((x!0 var2209)) ClassObject\n    ClassObject!val!0)\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n  (define-fun cast-from-var104-to-var2209 ((x!0 var104)) var2209\n    var2209!val!0)\n)\n(error \"line 41 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 161669120,
            "run_time": 2.03824782371521,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1572 () var3971 var3971!8)\r\n  (define-fun var2282 () String \"\\u{0}\")\r\n  (define-fun var1814 () String \"\\u{0}\")\r\n  (define-fun var2329 () var104 var104!6)\r\n  (define-fun null-var3971 () var3971 var3971!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var104 () var104 var104!2)\r\n  (define-fun var104_isDiagnosticsEnabled/-1107982053 () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 10,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r5 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>()",
            "$r21 := @caughtexception",
            "$z3 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z3 == 0 goto return 0",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__isLogLibraryAvailable__1913245598\\503.smt2",
        "z3": {
            "memory": 31494144,
            "run_time": 0.29955554008483887,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 66 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1658880,
            "run_time": 0.10518383979797363,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35258368,
            "run_time": 0.18477153778076172,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 66 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 162971648,
            "run_time": 2.3865878582000732,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 19,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r5 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r15 = new java.lang.StringBuilder",
            "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Checking for \\'\")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\'.\")",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void logDiagnostic(java.lang.String)>($r19)",
            "$r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r21 := @caughtexception",
            "$z3 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z3 == 0 goto return 0",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__setAttribute__1469947650\\534.smt2",
        "z3": {
            "memory": 32165888,
            "run_time": 0.16943049430847168,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var236:\r\n  ;;   var236!val!0 var236!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var236!val!0 () var236)\r\n  (declare-fun var236!val!1 () var236)\r\n  ;; cardinality constraint:\r\n  (forall ((x var236)) (or (= x var236!val!0) (= x var236!val!1)))\r\n  ;; -----------\r\n  ;; universe for var999:\r\n  ;;   var999!val!1 var999!val!2 var999!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var999!val!1 () var999)\r\n  (declare-fun var999!val!2 () var999)\r\n  (declare-fun var999!val!0 () var999)\r\n  ;; cardinality constraint:\r\n  (forall ((x var999))\r\n          (or (= x var999!val!1) (= x var999!val!2) (= x var999!val!0)))\r\n  ;; -----------\r\n  (define-fun var1904 () var152\r\n    (logConstructor/1199358121 var116))\r\n  (define-fun var116 () var999\r\n    var999!val!0)\r\n  (define-fun var2977 () var3233\r\n    (attributes/1199358121 var116))\r\n  (define-fun var1555 () Bool\r\n    (= var1877!1 \"use_tccl\"))\r\n  (define-fun var65 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var116!1 () var999\r\n    var999!val!2)\r\n  (define-fun var2850 () var236\r\n    var236!val!0)\r\n  (define-fun null-var236 () var236\r\n    var236!val!1)\r\n  (define-fun null-var999 () var999\r\n    var999!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1877 () String\r\n    \"A\")\r\n  (define-fun var2850!1 () var236\r\n    var236!val!1)\r\n  (define-fun var1877!1 () String\r\n    \"use_tccl\")\r\n  (define-fun null-var152 () var152\r\n    var152!val!0)\r\n  (define-fun var2977!1 () var3233\r\n    var3233!val!0)\r\n  (define-fun useTCCL/1199358121 ((x!0 var999)) Bool\r\n    false)\r\n  (define-fun logConstructor/1199358121 ((x!0 var999)) var152\r\n    var152!val!0)\r\n  (define-fun put/1981026245 ((x!0 var3233) (x!1 var236) (x!2 var236)) var236\r\n    var236!val!0)\r\n  (define-fun attributes/1199358121 ((x!0 var999)) var3233\r\n    var3233!val!0)\r\n  (define-fun cast-from-String-to-var236 ((x!0 String)) var236\r\n    var236!val!0)\r\n)\r\n(error \"line 55 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 3284992,
            "run_time": 0.0473785400390625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var999 is 3\r\n; rep: (as @var999_0 var999)\r\n; rep: (as @var999_1 var999)\r\n; rep: (as @var999_2 var999)\r\n; cardinality of var1466 is 1\r\n; rep: (as @var1466_0 var1466)\r\n; cardinality of var236 is 2\r\n; rep: (as @var236_0 var236)\r\n; rep: (as @var236_1 var236)\r\n; cardinality of var152 is 1\r\n; rep: (as @var152_0 var152)\r\n; cardinality of var3233 is 1\r\n; rep: (as @var3233_0 var3233)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logConstructor/1199358121 ((BOUND_VARIABLE_642 var999)) var152 (as @var152_0 var152))\r\n(define-fun attributes/1199358121 ((BOUND_VARIABLE_645 var999)) var3233 (as @var3233_0 var3233))\r\n(define-fun put/1981026245 ((BOUND_VARIABLE_648 var3233) (BOUND_VARIABLE_649 var236) (BOUND_VARIABLE_650 var236)) var236 (as @var236_0 var236))\r\n(define-fun cast-from-String-to-var236 ((BOUND_VARIABLE_653 String)) var236 (as @var236_0 var236))\r\n(define-fun useTCCL/1199358121 ((_arg_1 var999)) Bool false)\r\n(define-fun null-var999 () var999 (as @var999_0 var999))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var236 () var236 (as @var236_1 var236))\r\n(define-fun null-var152 () var152 (as @var152_0 var152))\r\n(define-fun var116 () var999 (as @var999_1 var999))\r\n(define-fun var1877 () String \"\")\r\n(define-fun var2850 () var236 (as @var236_0 var236))\r\n(define-fun var2977!1 () var3233 (as @var3233_0 var3233))\r\n(define-fun var1877!1 () String \"use_tccl\")\r\n(define-fun var2850!1 () var236 (as @var236_1 var236))\r\n(define-fun var116!1 () var999 (as @var999_2 var999))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36978688,
            "run_time": 0.139129638671875,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var236:\n  ;;   var236!val!0 var236!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var236!val!0 () var236)\n  (declare-fun var236!val!1 () var236)\n  ;; cardinality constraint:\n  (forall ((x var236)) (or (= x var236!val!0) (= x var236!val!1)))\n  ;; -----------\n  ;; universe for var999:\n  ;;   var999!val!1 var999!val!2 var999!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var999!val!1 () var999)\n  (declare-fun var999!val!2 () var999)\n  (declare-fun var999!val!0 () var999)\n  ;; cardinality constraint:\n  (forall ((x var999))\n          (or (= x var999!val!1) (= x var999!val!2) (= x var999!val!0)))\n  ;; -----------\n  ;; universe for var152:\n  ;;   var152!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var152!val!0 () var152)\n  ;; cardinality constraint:\n  (forall ((x var152)) (= x var152!val!0))\n  ;; -----------\n  (define-fun null-var152 () var152\n    var152!val!0)\n  (define-fun var1877!1 () String\n    \"use_tccl\")\n  (define-fun var2850!1 () var236\n    var236!val!1)\n  (define-fun var116 () var999\n    var999!val!0)\n  (define-fun var2850 () var236\n    var236!val!0)\n  (define-fun var1555 () Bool\n    (= var1877!1 \"use_tccl\"))\n  (define-fun var1877 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var116!1 () var999\n    var999!val!2)\n  (define-fun null-var999 () var999\n    var999!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1904 () var152\n    (logConstructor/1199358121 var116))\n  (define-fun var65 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var2977 () var3233\n    (attributes/1199358121 var116))\n  (define-fun null-var236 () var236\n    var236!val!1)\n  (define-fun var2977!1 () var3233\n    var3233!val!0)\n  (define-fun useTCCL/1199358121 ((x!0 var999)) Bool\n    false)\n  (define-fun logConstructor/1199358121 ((x!0 var999)) var152\n    var152!val!0)\n  (define-fun put/1981026245 ((x!0 var3233) (x!1 var236) (x!2 var236)) var236\n    var236!val!0)\n  (define-fun attributes/1199358121 ((x!0 var999)) var3233\n    var3233!val!0)\n  (define-fun cast-from-String-to-var236 ((x!0 String)) var236\n    var236!val!0)\n)\n(error \"line 55 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164970496,
            "run_time": 2.382197618484497,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var116!1 () var999 var999!12)\r\n  (define-fun var2850!1 () var236 var236!4)\r\n  (define-fun var1877!1 () String \"use_tccl\")\r\n  (define-fun var2850 () var236 var236!10)\r\n  (define-fun var1877 () String \"l\")\r\n  (define-fun var116 () var999 var999!8)\r\n  (define-fun null-var152 () var152 var152!6)\r\n  (define-fun null-var236 () var236 var236!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var999 () var999 var999!2)\r\n  (define-fun var152!6 () var152 (logConstructor/1199358121 var999!8))\r\n  (define-fun useTCCL/1199358121 ((x!0 var999)) Bool (ite (= x!0 var999!12) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r3 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.reflect.Constructor logConstructor>",
            "if $r1 == null goto (branch)",
            "if r2 != null goto $r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "$r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r2)",
            "$z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")",
            "if $z0 == 0 goto return",
            "if r2 == null goto $z2 = 0",
            "$z2 = 0",
            "r0.<org.apache.commons.logging.impl.LogFactoryImpl: boolean useTCCL> = $z2",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__logDiagnostic__1870399160\\512.smt2",
        "z3": {
            "memory": 32129024,
            "run_time": 0.2392740249633789,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2693:\r\n  ;;   var2693!val!1 var2693!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2693!val!1 () var2693)\r\n  (declare-fun var2693!val!0 () var2693)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2693)) (or (= x var2693!val!1) (= x var2693!val!0)))\r\n  ;; -----------\r\n  (define-fun var1639 () String\r\n    (str.++ var2546!1 (diagnosticPrefix/1199358121 var1340) var3385))\r\n  (define-fun var3788 () Bool\r\n    var2693_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun var548 () String\r\n    (diagnosticPrefix/1199358121 var1340))\r\n  (define-fun null-var2693 () var2693\r\n    var2693!val!1)\r\n  (define-fun var1340 () var2693\r\n    var2693!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2546 () String\r\n    String-init)\r\n  (define-fun var3385 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2397 () String\r\n    (str.++ var2546!1 (diagnosticPrefix/1199358121 var1340) var3385))\r\n  (define-fun var2154 () String\r\n    (str.++ var2546!1 (diagnosticPrefix/1199358121 var1340)))\r\n  (define-fun var2546!1 () String\r\n    \"\")\r\n  (define-fun var2546!2 () String\r\n    \"\")\r\n  (define-fun var2693_isDiagnosticsEnabled/-1107982053 () Bool\r\n    true)\r\n  (define-fun var2154!1 () String\r\n    \"A\")\r\n  (define-fun var2397!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun diagnosticPrefix/1199358121 ((x!0 var2693)) String\r\n    \"\")\r\n  (define-fun var2263_logRawDiagnostic/1793942598 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 49 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 4370432,
            "run_time": 0.13692283630371094,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2693 is 2\r\n; rep: (as @var2693_0 var2693)\r\n; rep: (as @var2693_1 var2693)\r\n; cardinality of var2659 is 1\r\n; rep: (as @var2659_0 var2659)\r\n; cardinality of var2263 is 1\r\n; rep: (as @var2263_0 var2263)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2693_isDiagnosticsEnabled/-1107982053 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun diagnosticPrefix/1199358121 ((BOUND_VARIABLE_634 var2693)) String \"\")\r\n(define-fun var2263_logRawDiagnostic/1793942598 ((BOUND_VARIABLE_637 String)) void (as @void_0 void))\r\n(define-fun null-var2693 () var2693 (as @var2693_0 var2693))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1340 () var2693 (as @var2693_1 var2693))\r\n(define-fun var3385 () String \"\")\r\n(define-fun var2546!1 () String \"\")\r\n(define-fun var2546!2 () String \"\")\r\n(define-fun var2154!1 () String \"\")\r\n(define-fun var2397!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36990976,
            "run_time": 0.14038825035095215,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2693:\n  ;;   var2693!val!1 var2693!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2693!val!1 () var2693)\n  (declare-fun var2693!val!0 () var2693)\n  ;; cardinality constraint:\n  (forall ((x var2693)) (or (= x var2693!val!1) (= x var2693!val!0)))\n  ;; -----------\n  (define-fun var2154!1 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2693_isDiagnosticsEnabled/-1107982053 () Bool\n    true)\n  (define-fun var2546!2 () String\n    \"\")\n  (define-fun var2546!1 () String\n    \"\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1340 () var2693\n    var2693!val!0)\n  (define-fun var2397 () String\n    (str.++ var2546!1 (diagnosticPrefix/1199358121 var1340) var3385))\n  (define-fun var1639 () String\n    (str.++ var2546!1 (diagnosticPrefix/1199358121 var1340) var3385))\n  (define-fun var3788 () Bool\n    var2693_isDiagnosticsEnabled/-1107982053)\n  (define-fun var2546 () String\n    String-init)\n  (define-fun null-var2693 () var2693\n    var2693!val!1)\n  (define-fun var3385 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2154 () String\n    (str.++ var2546!1 (diagnosticPrefix/1199358121 var1340)))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var548 () String\n    (diagnosticPrefix/1199358121 var1340))\n  (define-fun var2397!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun diagnosticPrefix/1199358121 ((x!0 var2693)) String\n    \"\")\n  (define-fun var2263_logRawDiagnostic/1793942598 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 49 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175177728,
            "run_time": 2.5357227325439453,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2693/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__logDiagnostic__1870399160\\512.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2154!1 =\r\n     concat(var2546!2, var3385)\r\n\r\n2005ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r3 := @parameter0: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = r1.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String diagnosticPrefix>",
            "$r4 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: void logRawDiagnostic(java.lang.String)>($r6)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__setAttribute__1469947650\\530.smt2",
        "z3": {
            "memory": 31838208,
            "run_time": 0.2808413505554199,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2059:\r\n  ;;   var2059!val!0 var2059!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2059!val!0 () var2059)\r\n  (declare-fun var2059!val!1 () var2059)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2059)) (or (= x var2059!val!0) (= x var2059!val!1)))\r\n  ;; -----------\r\n  ;; universe for var140:\r\n  ;;   var140!val!1 var140!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var140!val!1 () var140)\r\n  (declare-fun var140!val!0 () var140)\r\n  ;; cardinality constraint:\r\n  (forall ((x var140)) (or (= x var140!val!1) (= x var140!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var140 () var140\r\n    var140!val!1)\r\n  (define-fun var2951 () var1950\r\n    (logConstructor/1199358121 var2869))\r\n  (define-fun null-var2059 () var2059\r\n    var2059!val!1)\r\n  (define-fun var2575 () Bool\r\n    (= var2119!1 \"use_tccl\"))\r\n  (define-fun var3687 () var3823\r\n    (attributes/1199358121 var2869))\r\n  (define-fun var2629 () var140\r\n    var140!val!0)\r\n  (define-fun var2119 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2119!1 () String\r\n    \"\")\r\n  (define-fun var2869 () var2059\r\n    var2059!val!0)\r\n  (define-fun null-var1950 () var1950\r\n    var1950!val!0)\r\n  (define-fun var2629!1 () var140\r\n    var140!val!1)\r\n  (define-fun var3687!1 () var3823\r\n    var3823!val!0)\r\n  (define-fun logConstructor/1199358121 ((x!0 var2059)) var1950\r\n    var1950!val!0)\r\n  (define-fun put/1981026245 ((x!0 var3823) (x!1 var140) (x!2 var140)) var140\r\n    var140!val!1)\r\n  (define-fun attributes/1199358121 ((x!0 var2059)) var3823\r\n    var3823!val!0)\r\n  (define-fun cast-from-String-to-var140 ((x!0 String)) var140\r\n    var140!val!1)\r\n)\r\n(error \"line 46 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10723328,
            "run_time": 0.07527422904968262,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2059 is 2\r\n; rep: (as @var2059_0 var2059)\r\n; rep: (as @var2059_1 var2059)\r\n; cardinality of var1007 is 1\r\n; rep: (as @var1007_0 var1007)\r\n; cardinality of var140 is 2\r\n; rep: (as @var140_0 var140)\r\n; rep: (as @var140_1 var140)\r\n; cardinality of var1950 is 1\r\n; rep: (as @var1950_0 var1950)\r\n; cardinality of var3823 is 1\r\n; rep: (as @var3823_0 var3823)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logConstructor/1199358121 ((BOUND_VARIABLE_588 var2059)) var1950 (as @var1950_0 var1950))\r\n(define-fun attributes/1199358121 ((BOUND_VARIABLE_591 var2059)) var3823 (as @var3823_0 var3823))\r\n(define-fun put/1981026245 ((BOUND_VARIABLE_594 var3823) (BOUND_VARIABLE_595 var140) (BOUND_VARIABLE_596 var140)) var140 (as @var140_0 var140))\r\n(define-fun cast-from-String-to-var140 ((BOUND_VARIABLE_599 String)) var140 (as @var140_0 var140))\r\n(define-fun null-var2059 () var2059 (as @var2059_0 var2059))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var140 () var140 (as @var140_0 var140))\r\n(define-fun null-var1950 () var1950 (as @var1950_0 var1950))\r\n(define-fun var2869 () var2059 (as @var2059_1 var2059))\r\n(define-fun var2119 () String \"\")\r\n(define-fun var2629 () var140 (as @var140_1 var140))\r\n(define-fun var3687!1 () var3823 (as @var3823_0 var3823))\r\n(define-fun var2119!1 () String \"\")\r\n(define-fun var2629!1 () var140 (as @var140_0 var140))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36978688,
            "run_time": 0.1243736743927002,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2059:\n  ;;   var2059!val!0 var2059!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2059!val!0 () var2059)\n  (declare-fun var2059!val!1 () var2059)\n  ;; cardinality constraint:\n  (forall ((x var2059)) (or (= x var2059!val!0) (= x var2059!val!1)))\n  ;; -----------\n  ;; universe for var140:\n  ;;   var140!val!1 var140!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var140!val!1 () var140)\n  (declare-fun var140!val!0 () var140)\n  ;; cardinality constraint:\n  (forall ((x var140)) (or (= x var140!val!1) (= x var140!val!0)))\n  ;; -----------\n  ;; universe for var1950:\n  ;;   var1950!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1950!val!0 () var1950)\n  ;; cardinality constraint:\n  (forall ((x var1950)) (= x var1950!val!0))\n  ;; -----------\n  (define-fun null-var1950 () var1950\n    var1950!val!0)\n  (define-fun var2951 () var1950\n    (logConstructor/1199358121 var2869))\n  (define-fun var2629 () var140\n    var140!val!0)\n  (define-fun var3687 () var3823\n    (attributes/1199358121 var2869))\n  (define-fun var2119!1 () String\n    \"\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var2575 () Bool\n    (= var2119!1 \"use_tccl\"))\n  (define-fun null-var140 () var140\n    var140!val!1)\n  (define-fun null-var2059 () var2059\n    var2059!val!1)\n  (define-fun var2869 () var2059\n    var2059!val!0)\n  (define-fun var2119 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2629!1 () var140\n    var140!val!1)\n  (define-fun var3687!1 () var3823\n    var3823!val!0)\n  (define-fun logConstructor/1199358121 ((x!0 var2059)) var1950\n    var1950!val!0)\n  (define-fun put/1981026245 ((x!0 var3823) (x!1 var140) (x!2 var140)) var140\n    var140!val!1)\n  (define-fun attributes/1199358121 ((x!0 var2059)) var3823\n    var3823!val!0)\n  (define-fun cast-from-String-to-var140 ((x!0 String)) var140\n    var140!val!1)\n)\n(error \"line 46 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173314048,
            "run_time": 2.5647168159484863,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2119!1 () String \"\")\r\n  (define-fun var2629 () var140 var140!10)\r\n  (define-fun var2119 () String \"l\")\r\n  (define-fun var2869 () var2059 var2059!8)\r\n  (define-fun null-var1950 () var1950 var1950!6)\r\n  (define-fun null-var140 () var140 var140!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2059 () var2059 var2059!2)\r\n  (define-fun var1950!6 () var1950 (logConstructor/1199358121 var2059!8))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r3 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.reflect.Constructor logConstructor>",
            "if $r1 == null goto (branch)",
            "if r2 != null goto $r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "$r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r2)",
            "$z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")",
            "if $z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__setAttribute__1469947650\\532.smt2",
        "z3": {
            "memory": 32157696,
            "run_time": 0.21599864959716797,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1760:\r\n  ;;   var1760!val!0 var1760!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1760!val!0 () var1760)\r\n  (declare-fun var1760!val!1 () var1760)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1760)) (or (= x var1760!val!0) (= x var1760!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3369:\r\n  ;;   var3369!val!0 var3369!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3369!val!0 () var3369)\r\n  (declare-fun var3369!val!1 () var3369)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3369)) (or (= x var3369!val!0) (= x var3369!val!1)))\r\n  ;; -----------\r\n  ;; universe for var54:\r\n  ;;   var54!val!0 var54!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var54!val!0 () var54)\r\n  (declare-fun var54!val!1 () var54)\r\n  ;; cardinality constraint:\r\n  (forall ((x var54)) (or (= x var54!val!0) (= x var54!val!1)))\r\n  ;; -----------\r\n  (define-fun var393!1 () String\r\n    \"\")\r\n  (define-fun var346 () var54\r\n    var54!val!0)\r\n  (define-fun null-var1760 () var1760\r\n    var1760!val!1)\r\n  (define-fun var799 () Bool\r\n    (= var393!1 \"use_tccl\"))\r\n  (define-fun null-var3369 () var3369\r\n    var3369!val!1)\r\n  (define-fun null-var54 () var54\r\n    var54!val!1)\r\n  (define-fun var704 () var3369\r\n    (logConstructor/1199358121 var346))\r\n  (define-fun var393 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var520 () var322\r\n    (attributes/1199358121 var346!1))\r\n  (define-fun var2431 () var1760\r\n    var1760!val!0)\r\n  (define-fun var346!1 () var54\r\n    var54!val!0)\r\n  (define-fun var520!1 () var322\r\n    var322!val!0)\r\n  (define-fun var375 () String\r\n    \"\")\r\n  (define-fun var2431!1 () var1760\r\n    var1760!val!0)\r\n  (define-fun logConstructor/1199358121 ((x!0 var54)) var3369\r\n    var3369!val!0)\r\n  (define-fun put/1981026245 ((x!0 var322) (x!1 var1760) (x!2 var1760)) var1760\r\n    var1760!val!0)\r\n  (define-fun attributes/1199358121 ((x!0 var54)) var322\r\n    var322!val!0)\r\n  (define-fun cast-from-String-to-var1760 ((x!0 String)) var1760\r\n    var1760!val!0)\r\n  (define-fun logDiagnostic/1870399160 ((x!0 var54) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 53 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7966720,
            "run_time": 0.04791998863220215,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var54 is 2\r\n; rep: (as @var54_0 var54)\r\n; rep: (as @var54_1 var54)\r\n; cardinality of var184 is 1\r\n; rep: (as @var184_0 var184)\r\n; cardinality of var1760 is 2\r\n; rep: (as @var1760_0 var1760)\r\n; rep: (as @var1760_1 var1760)\r\n; cardinality of var3369 is 2\r\n; rep: (as @var3369_0 var3369)\r\n; rep: (as @var3369_1 var3369)\r\n; cardinality of var322 is 1\r\n; rep: (as @var322_0 var322)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logConstructor/1199358121 ((_arg_1 var54)) var3369 (as @var3369_1 var3369))\r\n(define-fun logDiagnostic/1870399160 ((BOUND_VARIABLE_600 var54) (BOUND_VARIABLE_601 String)) void (as @void_0 void))\r\n(define-fun attributes/1199358121 ((BOUND_VARIABLE_604 var54)) var322 (as @var322_0 var322))\r\n(define-fun put/1981026245 ((BOUND_VARIABLE_607 var322) (BOUND_VARIABLE_608 var1760) (BOUND_VARIABLE_609 var1760)) var1760 (as @var1760_0 var1760))\r\n(define-fun cast-from-String-to-var1760 ((BOUND_VARIABLE_612 String)) var1760 (as @var1760_0 var1760))\r\n(define-fun null-var54 () var54 (as @var54_0 var54))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1760 () var1760 (as @var1760_0 var1760))\r\n(define-fun null-var3369 () var3369 (as @var3369_0 var3369))\r\n(define-fun var346 () var54 (as @var54_1 var54))\r\n(define-fun var393 () String \"\")\r\n(define-fun var2431 () var1760 (as @var1760_1 var1760))\r\n(define-fun var346!1 () var54 (as @var54_0 var54))\r\n(define-fun var375 () String \"\")\r\n(define-fun var520!1 () var322 (as @var322_0 var322))\r\n(define-fun var393!1 () String \"\")\r\n(define-fun var2431!1 () var1760 (as @var1760_0 var1760))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37531648,
            "run_time": 0.249251127243042,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1760:\n  ;;   var1760!val!0 var1760!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1760!val!0 () var1760)\n  (declare-fun var1760!val!1 () var1760)\n  ;; cardinality constraint:\n  (forall ((x var1760)) (or (= x var1760!val!0) (= x var1760!val!1)))\n  ;; -----------\n  ;; universe for var3369:\n  ;;   var3369!val!0 var3369!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3369!val!0 () var3369)\n  (declare-fun var3369!val!1 () var3369)\n  ;; cardinality constraint:\n  (forall ((x var3369)) (or (= x var3369!val!0) (= x var3369!val!1)))\n  ;; -----------\n  ;; universe for var54:\n  ;;   var54!val!0 var54!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var54!val!0 () var54)\n  (declare-fun var54!val!1 () var54)\n  ;; cardinality constraint:\n  (forall ((x var54)) (or (= x var54!val!0) (= x var54!val!1)))\n  ;; -----------\n  (define-fun var799 () Bool\n    (= var393!1 \"use_tccl\"))\n  (define-fun null-var54 () var54\n    var54!val!1)\n  (define-fun null-var1760 () var1760\n    var1760!val!1)\n  (define-fun var393 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var346 () var54\n    var54!val!0)\n  (define-fun null-var3369 () var3369\n    var3369!val!1)\n  (define-fun var520 () var322\n    (attributes/1199358121 var346!1))\n  (define-fun var704 () var3369\n    (logConstructor/1199358121 var346))\n  (define-fun var2431 () var1760\n    var1760!val!0)\n  (define-fun var393!1 () String\n    \"\")\n  (define-fun var346!1 () var54\n    var54!val!0)\n  (define-fun var520!1 () var322\n    var322!val!0)\n  (define-fun var375 () String\n    \"\")\n  (define-fun var2431!1 () var1760\n    var1760!val!0)\n  (define-fun logConstructor/1199358121 ((x!0 var54)) var3369\n    var3369!val!0)\n  (define-fun put/1981026245 ((x!0 var322) (x!1 var1760) (x!2 var1760)) var1760\n    var1760!val!0)\n  (define-fun attributes/1199358121 ((x!0 var54)) var322\n    var322!val!0)\n  (define-fun cast-from-String-to-var1760 ((x!0 String)) var1760\n    var1760!val!0)\n  (define-fun logDiagnostic/1870399160 ((x!0 var54) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 53 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168185856,
            "run_time": 2.4405360221862793,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var393!1 () String \"\")\r\n  (define-fun var2431 () var1760 var1760!10)\r\n  (define-fun var393 () String \"l\")\r\n  (define-fun var346 () var54 var54!8)\r\n  (define-fun null-var3369 () var3369 var3369!6)\r\n  (define-fun null-var1760 () var1760 var1760!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var54 () var54 var54!2)\r\n  (define-fun var3369!28 () var3369 (logConstructor/1199358121 var54!8))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r3 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.reflect.Constructor logConstructor>",
            "if $r1 == null goto (branch)",
            "virtualinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void logDiagnostic(java.lang.String)>(\"setAttribute: call too late; configuration already performed.\")",
            "if r2 != null goto $r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "$r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r2)",
            "$z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")",
            "if $z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__setAttribute__1469947650\\540.smt2",
        "z3": {
            "memory": 31715328,
            "run_time": 0.10491394996643066,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3043:\r\n  ;;   var3043!val!1 var3043!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3043!val!1 () var3043)\r\n  (declare-fun var3043!val!0 () var3043)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3043)) (or (= x var3043!val!1) (= x var3043!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1937:\r\n  ;;   var1937!val!2 var1937!val!0 var1937!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1937!val!2 () var1937)\r\n  (declare-fun var1937!val!0 () var1937)\r\n  (declare-fun var1937!val!1 () var1937)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1937))\r\n          (or (= x var1937!val!2) (= x var1937!val!0) (= x var1937!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3656:\r\n  ;;   var3656!val!1 var3656!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3656!val!1 () var3656)\r\n  (declare-fun var3656!val!0 () var3656)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3656)) (or (= x var3656!val!1) (= x var3656!val!0)))\r\n  ;; -----------\r\n  (define-fun var1079 () String\r\n    \"A\")\r\n  (define-fun var544 () var1543\r\n    (attributes/1199358121 var893!1))\r\n  (define-fun null-var3043 () var3043\r\n    var3043!val!1)\r\n  (define-fun var879 () var3656\r\n    var3656!val!0)\r\n  (define-fun null-var3656 () var3656\r\n    var3656!val!1)\r\n  (define-fun var2924 () Bool\r\n    (= var1079!1 \"use_tccl\"))\r\n  (define-fun null-var1937 () var1937\r\n    var1937!val!1)\r\n  (define-fun var1468 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var893 () var1937\r\n    var1937!val!0)\r\n  (define-fun var3746 () var3043\r\n    (logConstructor/1199358121 var893))\r\n  (define-fun var893!2 () var1937\r\n    var1937!val!2)\r\n  (define-fun var1079!1 () String\r\n    \"use_tccl\")\r\n  (define-fun var879!1 () var3656\r\n    var3656!val!1)\r\n  (define-fun var893!1 () var1937\r\n    var1937!val!2)\r\n  (define-fun var544!1 () var1543\r\n    var1543!val!0)\r\n  (define-fun var317 () String\r\n    \"\")\r\n  (define-fun logConstructor/1199358121 ((x!0 var1937)) var3043\r\n    var3043!val!0)\r\n  (define-fun useTCCL/1199358121 ((x!0 var1937)) Bool\r\n    false)\r\n  (define-fun put/1981026245 ((x!0 var1543) (x!1 var3656) (x!2 var3656)) var3656\r\n    var3656!val!1)\r\n  (define-fun attributes/1199358121 ((x!0 var1937)) var1543\r\n    var1543!val!0)\r\n  (define-fun cast-from-String-to-var3656 ((x!0 String)) var3656\r\n    var3656!val!1)\r\n  (define-fun logDiagnostic/1870399160 ((x!0 var1937) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 62 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10805248,
            "run_time": 0.04317212104797363,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1937 is 3\r\n; rep: (as @var1937_0 var1937)\r\n; rep: (as @var1937_1 var1937)\r\n; rep: (as @var1937_2 var1937)\r\n; cardinality of var692 is 1\r\n; rep: (as @var692_0 var692)\r\n; cardinality of var3656 is 2\r\n; rep: (as @var3656_0 var3656)\r\n; rep: (as @var3656_1 var3656)\r\n; cardinality of var3043 is 2\r\n; rep: (as @var3043_0 var3043)\r\n; rep: (as @var3043_1 var3043)\r\n; cardinality of var1543 is 1\r\n; rep: (as @var1543_0 var1543)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logConstructor/1199358121 ((_arg_1 var1937)) var3043 (as @var3043_1 var3043))\r\n(define-fun logDiagnostic/1870399160 ((BOUND_VARIABLE_654 var1937) (BOUND_VARIABLE_655 String)) void (as @void_0 void))\r\n(define-fun attributes/1199358121 ((BOUND_VARIABLE_658 var1937)) var1543 (as @var1543_0 var1543))\r\n(define-fun put/1981026245 ((BOUND_VARIABLE_661 var1543) (BOUND_VARIABLE_662 var3656) (BOUND_VARIABLE_663 var3656)) var3656 (as @var3656_0 var3656))\r\n(define-fun cast-from-String-to-var3656 ((BOUND_VARIABLE_666 String)) var3656 (as @var3656_0 var3656))\r\n(define-fun useTCCL/1199358121 ((_arg_1 var1937)) Bool false)\r\n(define-fun null-var1937 () var1937 (as @var1937_0 var1937))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3656 () var3656 (as @var3656_1 var3656))\r\n(define-fun null-var3043 () var3043 (as @var3043_0 var3043))\r\n(define-fun var893 () var1937 (as @var1937_1 var1937))\r\n(define-fun var1079 () String \"\")\r\n(define-fun var879 () var3656 (as @var3656_0 var3656))\r\n(define-fun var893!1 () var1937 (as @var1937_0 var1937))\r\n(define-fun var317 () String \"\")\r\n(define-fun var544!1 () var1543 (as @var1543_0 var1543))\r\n(define-fun var1079!1 () String \"use_tccl\")\r\n(define-fun var879!1 () var3656 (as @var3656_1 var3656))\r\n(define-fun var893!2 () var1937 (as @var1937_2 var1937))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37027840,
            "run_time": 0.18940377235412598,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3043:\n  ;;   var3043!val!1 var3043!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3043!val!1 () var3043)\n  (declare-fun var3043!val!0 () var3043)\n  ;; cardinality constraint:\n  (forall ((x var3043)) (or (= x var3043!val!1) (= x var3043!val!0)))\n  ;; -----------\n  ;; universe for var1937:\n  ;;   var1937!val!2 var1937!val!0 var1937!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1937!val!2 () var1937)\n  (declare-fun var1937!val!0 () var1937)\n  (declare-fun var1937!val!1 () var1937)\n  ;; cardinality constraint:\n  (forall ((x var1937))\n          (or (= x var1937!val!2) (= x var1937!val!0) (= x var1937!val!1)))\n  ;; -----------\n  ;; universe for var3656:\n  ;;   var3656!val!1 var3656!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3656!val!1 () var3656)\n  (declare-fun var3656!val!0 () var3656)\n  ;; cardinality constraint:\n  (forall ((x var3656)) (or (= x var3656!val!1) (= x var3656!val!0)))\n  ;; -----------\n  (define-fun var879!1 () var3656\n    var3656!val!1)\n  (define-fun var1079!1 () String\n    \"use_tccl\")\n  (define-fun null-var1937 () var1937\n    var1937!val!1)\n  (define-fun var2924 () Bool\n    (= var1079!1 \"use_tccl\"))\n  (define-fun var544 () var1543\n    (attributes/1199358121 var893!1))\n  (define-fun var879 () var3656\n    var3656!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var893!2 () var1937\n    var1937!val!2)\n  (define-fun var1468 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var893 () var1937\n    var1937!val!0)\n  (define-fun var3746 () var3043\n    (logConstructor/1199358121 var893))\n  (define-fun var1079 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-var3656 () var3656\n    var3656!val!1)\n  (define-fun null-var3043 () var3043\n    var3043!val!1)\n  (define-fun var893!1 () var1937\n    var1937!val!2)\n  (define-fun var544!1 () var1543\n    var1543!val!0)\n  (define-fun var317 () String\n    \"\")\n  (define-fun logConstructor/1199358121 ((x!0 var1937)) var3043\n    var3043!val!0)\n  (define-fun useTCCL/1199358121 ((x!0 var1937)) Bool\n    false)\n  (define-fun put/1981026245 ((x!0 var1543) (x!1 var3656) (x!2 var3656)) var3656\n    var3656!val!1)\n  (define-fun attributes/1199358121 ((x!0 var1937)) var1543\n    var1543!val!0)\n  (define-fun cast-from-String-to-var3656 ((x!0 String)) var3656\n    var3656!val!1)\n  (define-fun logDiagnostic/1870399160 ((x!0 var1937) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 62 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 175198208,
            "run_time": 2.4826138019561768,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var893!2 () var1937 var1937!12)\r\n  (define-fun var879!1 () var3656 var3656!4)\r\n  (define-fun var1079!1 () String \"use_tccl\")\r\n  (define-fun var879 () var3656 var3656!10)\r\n  (define-fun var1079 () String \"l\")\r\n  (define-fun var893 () var1937 var1937!8)\r\n  (define-fun null-var3043 () var3043 var3043!6)\r\n  (define-fun null-var3656 () var3656 var3656!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var1937 () var1937 var1937!2)\r\n  (define-fun var3043!32 () var3043 (logConstructor/1199358121 var1937!8))\r\n  (define-fun useTCCL/1199358121 ((x!0 var1937)) Bool (ite (= x!0 var1937!12) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r3 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.reflect.Constructor logConstructor>",
            "if $r1 == null goto (branch)",
            "virtualinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void logDiagnostic(java.lang.String)>(\"setAttribute: call too late; configuration already performed.\")",
            "if r2 != null goto $r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "$r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r2)",
            "$z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")",
            "if $z0 == 0 goto return",
            "if r2 == null goto $z2 = 0",
            "$z2 = 0",
            "r0.<org.apache.commons.logging.impl.LogFactoryImpl: boolean useTCCL> = $z2",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__setAttribute__1469947650\\545.smt2",
        "z3": {
            "memory": 31563776,
            "run_time": 0.15296339988708496,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 62 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1601536,
            "run_time": 0.04543662071228027,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34971648,
            "run_time": 0.10835599899291992,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 62 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154456064,
            "run_time": 2.438056230545044,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.Object: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r3 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.reflect.Constructor logConstructor>",
            "if $r1 == null goto (branch)",
            "if r2 != null goto $r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "$r6 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "virtualinvoke $r6.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r3)",
            "goto [?= $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")]",
            "$z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")",
            "if $z0 == 0 goto return",
            "if r2 == null goto $z2 = 0",
            "$r5 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()",
            "$z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r5)",
            "if $z1 == 0 goto $z2 = 0",
            "$z2 = 0",
            "r0.<org.apache.commons.logging.impl.LogFactoryImpl: boolean useTCCL> = $z2",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__initDiagnostics__-1205227710\\483.smt2",
        "z3": {
            "memory": 32960512,
            "run_time": 0.18451476097106934,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3415:\r\n  ;;   var3415!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3415!val!0 () var3415)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3415)) (= x var3415!val!0))\r\n  ;; -----------\r\n  ;; universe for var2731:\r\n  ;;   var2731!val!2 var2731!val!0 var2731!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2731!val!2 () var2731)\r\n  (declare-fun var2731!val!0 () var2731)\r\n  (declare-fun var2731!val!1 () var2731)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2731))\r\n          (or (= x var2731!val!2) (= x var2731!val!0) (= x var2731!val!1)))\r\n  ;; -----------\r\n  (define-fun var3596 () Int\r\n    (var855_identityHashCode/1096208673 (cast-from-var2731-to-var3415 var2134)))\r\n  (define-fun var2820 () ClassObject\r\n    (getClass/1258963082 (cast-from-var2731-to-var3415 var2134)))\r\n  (define-fun var2134!1 () var2731\r\n    var2731!val!2)\r\n  (define-fun var977 () var3374\r\n    (var2731_getClassLoader/1612937626\r\n  (getClass/1258963082 (cast-from-var2731-to-var3415 var2134))))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var517 () String\r\n    \"BOOTLOADER\")\r\n  (define-fun var1998 () String\r\n    (str.++ var865!1\r\n        \"[LogFactoryImpl@\"\r\n        (str.from_int (var855_identityHashCode/1096208673\r\n                        (cast-from-var2731-to-var3415 var2134)))))\r\n  (define-fun var35 () String\r\n    (str.++ var865!1\r\n        \"[LogFactoryImpl@\"\r\n        (str.from_int (var855_identityHashCode/1096208673\r\n                        (cast-from-var2731-to-var3415 var2134)))\r\n        \" from \"))\r\n  (define-fun var1789 () String\r\n    (str.++ var865!1\r\n        \"[LogFactoryImpl@\"\r\n        (str.from_int (var855_identityHashCode/1096208673\r\n                        (cast-from-var2731-to-var3415 var2134)))\r\n        \" from \"\r\n        \"BOOTLOADER\"))\r\n  (define-fun var2351 () String\r\n    (str.++ var865!1\r\n        \"[LogFactoryImpl@\"\r\n        (str.from_int (var855_identityHashCode/1096208673\r\n                        (cast-from-var2731-to-var3415 var2134)))\r\n        \" from \"\r\n        \"BOOTLOADER\"\r\n        \"] \"))\r\n  (define-fun null-var2731 () var2731\r\n    var2731!val!1)\r\n  (define-fun var16 () String\r\n    (str.++ var865!1 \"[LogFactoryImpl@\"))\r\n  (define-fun var2917 () String\r\n    (str.++ var865!1\r\n        \"[LogFactoryImpl@\"\r\n        (str.from_int (var855_identityHashCode/1096208673\r\n                        (cast-from-var2731-to-var3415 var2134)))\r\n        \" from \"\r\n        \"BOOTLOADER\"\r\n        \"] \"))\r\n  (define-fun var16!1 () String\r\n    \"[LogFactoryImpl@\")\r\n  (define-fun var2134 () var2731\r\n    var2731!val!0)\r\n  (define-fun var865 () String\r\n    String-init)\r\n  (define-fun var35!1 () String\r\n    \"[LogFactoryImpl@ from BOOTLOADER\")\r\n  (define-fun var1998!1 () String\r\n    \"[LogFactoryImpl@ from \")\r\n  (define-fun var865!2 () String\r\n    \"[LogFactoryImpl@\")\r\n  (define-fun var865!1 () String\r\n    \"\")\r\n  (define-fun null-var3374 () var3374\r\n    var3374!val!0)\r\n  (define-fun var1789!1 () String\r\n    \"[LogFactoryImpl@ from BOOTLOADER] \")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var855_identityHashCode/1096208673 ((x!0 var3415)) Int\r\n    (- 2))\r\n  (define-fun cast-from-var2731-to-var3415 ((x!0 var2731)) var3415\r\n    var3415!val!0)\r\n  (define-fun diagnosticPrefix/1199358121 ((x!0 var2731)) String\r\n    \"[LogFactoryImpl@ from BOOTLOADER] \")\r\n  (define-fun getClass/1258963082 ((x!0 var3415)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var2731_getClassLoader/1612937626 ((x!0 ClassObject)) var3374\r\n    var3374!val!0)\r\n)\r\n(error \"line 69 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12906496,
            "run_time": 0.20137906074523926,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2731 is 3\r\n; rep: (as @var2731_0 var2731)\r\n; rep: (as @var2731_1 var2731)\r\n; rep: (as @var2731_2 var2731)\r\n; cardinality of var3415 is 1\r\n; rep: (as @var3415_0 var3415)\r\n; cardinality of var3374 is 1\r\n; rep: (as @var3374_0 var3374)\r\n; cardinality of var855 is 1\r\n; rep: (as @var855_0 var855)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_1380 var3415)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var2731-to-var3415 ((_arg_1 var2731)) var3415 (as @var3415_0 var3415))\r\n(define-fun var2731_getClassLoader/1612937626 ((BOUND_VARIABLE_1383 ClassObject)) var3374 (as @var3374_0 var3374))\r\n(define-fun String-init () String \"\")\r\n(define-fun var855_identityHashCode/1096208673 ((_arg_1 var3415)) Int (- 1))\r\n(define-fun diagnosticPrefix/1199358121 ((_arg_1 var2731)) String \"[LogFactoryImpl@ from BOOTLOADER] \")\r\n(define-fun null-var2731 () var2731 (as @var2731_0 var2731))\r\n(define-fun null-var3374 () var3374 (as @var3374_0 var3374))\r\n(define-fun var2134 () var2731 (as @var2731_1 var2731))\r\n(define-fun var865!1 () String \"\")\r\n(define-fun var865!2 () String \"[LogFactoryImpl@\")\r\n(define-fun var16!1 () String \"[LogFactoryImpl@\")\r\n(define-fun var1998!1 () String \"[LogFactoryImpl@ from \")\r\n(define-fun var35!1 () String \"[LogFactoryImpl@ from BOOTLOADER\")\r\n(define-fun var1789!1 () String \"[LogFactoryImpl@ from BOOTLOADER] \")\r\n(define-fun var2134!1 () var2731 (as @var2731_2 var2731))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35823616,
            "run_time": 0.24587464332580566,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 68 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 69 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 213139456,
            "run_time": 3.0448334217071533,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2134!1 () var2731 var2731!214)\r\n  (define-fun var1789!1 () String \"[LogFactoryImpl@ from BOOTLOADER] \")\r\n  (define-fun var35!1 () String \"[LogFactoryImpl@ from BOOTLOADER\")\r\n  (define-fun var1998!1 () String \"[LogFactoryImpl@ from \")\r\n  (define-fun var16!1 () String \"[LogFactoryImpl@\")\r\n  (define-fun var865!2 () String \"[LogFactoryImpl@\")\r\n  (define-fun var865!1 () String \"\")\r\n  (define-fun var2134 () var2731 var2731!212)\r\n  (define-fun null-var3374 () var3374 var3374!210)\r\n  (define-fun null-var2731 () var2731 var2731!208)\r\n  (define-fun var3374!210 () var3374 (var2731_getClassLoader/1612937626 ClassObject!232))\r\n  (define-fun var3415!230 () var3415 (cast-from-var2731-to-var3415 var2731!212))\r\n  (define-fun ClassObject!232 () ClassObject (getClass/1258963082 var3415!230))\r\n  (define-fun abbrev_112 ((x!0 Int)) String (ite (= x!0 0) \"[LogFactoryImpl@ from \" \"\"))\r\n  (define-fun diagnosticPrefix/1199358121 ((x!0 var2731)) String (ite (= x!0 var2731!214) \"[LogFactoryImpl@ from BOOTLOADER] \" \"\"))\r\n  (define-fun var855_identityHashCode/1096208673 ((x!0 var3415)) Int (ite (= x!0 var3415!230) (- 6) 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "r2 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getClassLoader(java.lang.Class)>(r1)",
            "if r2 != null goto r11 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String objectId(java.lang.Object)>(r2)",
            "r11 = \"BOOTLOADER\"",
            "goto [?= (branch)]",
            "goto [?= $r3 = new java.lang.StringBuilder]",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[LogFactoryImpl@\")",
            "$i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" from \")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] \")",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String diagnosticPrefix> = $r9",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__setAttribute__1469947650\\553.smt2",
        "z3": {
            "memory": 31698944,
            "run_time": 0.177870512008667,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var994:\r\n  ;;   var994!val!0 var994!val!1 var994!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var994!val!0 () var994)\r\n  (declare-fun var994!val!1 () var994)\r\n  (declare-fun var994!val!2 () var994)\r\n  ;; cardinality constraint:\r\n  (forall ((x var994))\r\n          (or (= x var994!val!0) (= x var994!val!1) (= x var994!val!2)))\r\n  ;; -----------\r\n  ;; universe for var2826:\r\n  ;;   var2826!val!0 var2826!val!2 var2826!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2826!val!0 () var2826)\r\n  (declare-fun var2826!val!2 () var2826)\r\n  (declare-fun var2826!val!1 () var2826)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2826))\r\n          (or (= x var2826!val!0) (= x var2826!val!2) (= x var2826!val!1)))\r\n  ;; -----------\r\n  (define-fun var1470!1 () var994\r\n    var994!val!2)\r\n  (define-fun var3289 () var324\r\n    (attributes/1199358121 var518))\r\n  (define-fun var1809 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var518 () var2826\r\n    var2826!val!0)\r\n  (define-fun null-var994 () var994\r\n    var994!val!1)\r\n  (define-fun var1262 () var951\r\n    (logConstructor/1199358121 var518))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun null-var2826 () var2826\r\n    var2826!val!1)\r\n  (define-fun var1470 () var994\r\n    var994!val!0)\r\n  (define-fun var941 () Bool\r\n    (= var1385!1 \"use_tccl\"))\r\n  (define-fun var2542 () String\r\n    (toString/-522406933 var1470!1))\r\n  (define-fun var518!1 () var2826\r\n    var2826!val!2)\r\n  (define-fun var1385 () String\r\n    \"A\")\r\n  (define-fun var3108 () Bool\r\n    (var869_parseBoolean/746105335 (toString/-522406933 var1470!1)))\r\n  (define-fun var1385!1 () String\r\n    \"use_tccl\")\r\n  (define-fun null-var951 () var951\r\n    var951!val!0)\r\n  (define-fun var3289!1 () var324\r\n    var324!val!0)\r\n  (define-fun toString/-522406933 ((x!0 var994)) String\r\n    \"A\")\r\n  (define-fun useTCCL/1199358121 ((x!0 var2826)) Bool\r\n    false)\r\n  (define-fun var869_parseBoolean/746105335 ((x!0 String)) Bool\r\n    false)\r\n  (define-fun logConstructor/1199358121 ((x!0 var2826)) var951\r\n    var951!val!0)\r\n  (define-fun put/1981026245 ((x!0 var324) (x!1 var994) (x!2 var994)) var994\r\n    var994!val!0)\r\n  (define-fun attributes/1199358121 ((x!0 var2826)) var324\r\n    var324!val!0)\r\n  (define-fun cast-from-String-to-var994 ((x!0 String)) var994\r\n    var994!val!0)\r\n)\r\n(error \"line 63 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6553600,
            "run_time": 0.09060525894165039,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2826 is 3\r\n; rep: (as @var2826_0 var2826)\r\n; rep: (as @var2826_1 var2826)\r\n; rep: (as @var2826_2 var2826)\r\n; cardinality of var1863 is 1\r\n; rep: (as @var1863_0 var1863)\r\n; cardinality of var994 is 3\r\n; rep: (as @var994_0 var994)\r\n; rep: (as @var994_1 var994)\r\n; rep: (as @var994_2 var994)\r\n; cardinality of var951 is 1\r\n; rep: (as @var951_0 var951)\r\n; cardinality of var324 is 1\r\n; rep: (as @var324_0 var324)\r\n; cardinality of var869 is 1\r\n; rep: (as @var869_0 var869)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logConstructor/1199358121 ((BOUND_VARIABLE_691 var2826)) var951 (as @var951_0 var951))\r\n(define-fun attributes/1199358121 ((BOUND_VARIABLE_694 var2826)) var324 (as @var324_0 var324))\r\n(define-fun put/1981026245 ((BOUND_VARIABLE_697 var324) (BOUND_VARIABLE_698 var994) (BOUND_VARIABLE_699 var994)) var994 (as @var994_0 var994))\r\n(define-fun cast-from-String-to-var994 ((BOUND_VARIABLE_702 String)) var994 (as @var994_0 var994))\r\n(define-fun toString/-522406933 ((_arg_1 var994)) String \"B\")\r\n(define-fun var869_parseBoolean/746105335 ((_arg_1 String)) Bool false)\r\n(define-fun useTCCL/1199358121 ((_arg_1 var2826)) Bool false)\r\n(define-fun null-var2826 () var2826 (as @var2826_0 var2826))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var994 () var994 (as @var994_0 var994))\r\n(define-fun null-var951 () var951 (as @var951_0 var951))\r\n(define-fun var518 () var2826 (as @var2826_1 var2826))\r\n(define-fun var1385 () String \"\")\r\n(define-fun var1470 () var994 (as @var994_1 var994))\r\n(define-fun var3289!1 () var324 (as @var324_0 var324))\r\n(define-fun var1385!1 () String \"use_tccl\")\r\n(define-fun var1470!1 () var994 (as @var994_2 var994))\r\n(define-fun var518!1 () var2826 (as @var2826_2 var2826))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36253696,
            "run_time": 0.1571497917175293,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 62 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 63 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176140288,
            "run_time": 2.836245536804199,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var518!1 () var2826 var2826!14)\r\n  (define-fun var1470!1 () var994 var994!12)\r\n  (define-fun var1385!1 () String \"use_tccl\")\r\n  (define-fun var1470 () var994 var994!10)\r\n  (define-fun var1385 () String \"l\")\r\n  (define-fun var518 () var2826 var2826!8)\r\n  (define-fun null-var951 () var951 var951!6)\r\n  (define-fun null-var994 () var994 var994!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var2826 () var2826 var2826!2)\r\n  (define-fun var951!6 () var951 (logConstructor/1199358121 var2826!8))\r\n  (define-fun useTCCL/1199358121 ((x!0 var2826)) Bool (ite (= x!0 var2826!14) false true))\r\n  (define-fun var869_parseBoolean/746105335 ((x!0 String)) Bool (ite (= x!0 \"\\u{0}\") false true))\r\n  (define-fun toString/-522406933 ((x!0 var994)) String (ite (= x!0 var994!12) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.Object: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r3 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.reflect.Constructor logConstructor>",
            "if $r1 == null goto (branch)",
            "if r2 != null goto $r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "$r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r2)",
            "$z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")",
            "if $z0 == 0 goto return",
            "if r2 == null goto $z2 = 0",
            "$r5 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()",
            "$z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r5)",
            "if $z1 == 0 goto $z2 = 0",
            "$z2 = 0",
            "r0.<org.apache.commons.logging.impl.LogFactoryImpl: boolean useTCCL> = $z2",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogKitLogger__warn__-770339803\\328.smt2",
        "z3": {
            "memory": 31932416,
            "run_time": 0.23668193817138672,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2651:\r\n  ;;   var2651!val!0 var2651!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2651!val!0 () var2651)\r\n  (declare-fun var2651!val!1 () var2651)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2651)) (or (= x var2651!val!0) (= x var2651!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3052:\r\n  ;;   var3052!val!0 var3052!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3052!val!0 () var3052)\r\n  (declare-fun var3052!val!1 () var3052)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3052)) (or (= x var3052!val!0) (= x var3052!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2651 () var2651\r\n    var2651!val!1)\r\n  (define-fun null-var3052 () var3052\r\n    var3052!val!1)\r\n  (define-fun var2593 () var400\r\n    (getLogger/100686094 var2451))\r\n  (define-fun var3852 () String\r\n    (String_valueOf/-333372740 var2276))\r\n  (define-fun var2451 () var2651\r\n    var2651!val!0)\r\n  (define-fun var2276 () var3052\r\n    var3052!val!0)\r\n  (define-fun var2593!1 () var400\r\n    var400!val!0)\r\n  (define-fun var3852!1 () String\r\n    \"\")\r\n  (define-fun getLogger/100686094 ((x!0 var2651)) var400\r\n    var400!val!0)\r\n  (define-fun warn/-9348662 ((x!0 var400) (x!1 String)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var3052)) String\r\n    \"\")\r\n)\r\n(error \"line 33 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1638400,
            "run_time": 0.061130523681640625,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2651 is 2\r\n; rep: (as @var2651_0 var2651)\r\n; rep: (as @var2651_1 var2651)\r\n; cardinality of var3052 is 2\r\n; rep: (as @var3052_0 var3052)\r\n; rep: (as @var3052_1 var3052)\r\n; cardinality of var400 is 1\r\n; rep: (as @var400_0 var400)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getLogger/100686094 ((BOUND_VARIABLE_433 var2651)) var400 (as @var400_0 var400))\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_436 var3052)) String \"\")\r\n(define-fun warn/-9348662 ((BOUND_VARIABLE_439 var400) (BOUND_VARIABLE_440 String)) void (as @void_0 void))\r\n(define-fun null-var2651 () var2651 (as @var2651_0 var2651))\r\n(define-fun null-var3052 () var3052 (as @var3052_0 var3052))\r\n(define-fun var2451 () var2651 (as @var2651_1 var2651))\r\n(define-fun var2276 () var3052 (as @var3052_1 var3052))\r\n(define-fun var2593!1 () var400 (as @var400_0 var400))\r\n(define-fun var3852!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36233216,
            "run_time": 0.199568510055542,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2651:\n  ;;   var2651!val!0 var2651!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2651!val!0 () var2651)\n  (declare-fun var2651!val!1 () var2651)\n  ;; cardinality constraint:\n  (forall ((x var2651)) (or (= x var2651!val!0) (= x var2651!val!1)))\n  ;; -----------\n  ;; universe for var3052:\n  ;;   var3052!val!0 var3052!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3052!val!0 () var3052)\n  (declare-fun var3052!val!1 () var3052)\n  ;; cardinality constraint:\n  (forall ((x var3052)) (or (= x var3052!val!0) (= x var3052!val!1)))\n  ;; -----------\n  (define-fun null-var2651 () var2651\n    var2651!val!1)\n  (define-fun null-var3052 () var3052\n    var3052!val!1)\n  (define-fun var2593 () var400\n    (getLogger/100686094 var2451))\n  (define-fun var3852 () String\n    (String_valueOf/-333372740 var2276))\n  (define-fun var2451 () var2651\n    var2651!val!0)\n  (define-fun var2276 () var3052\n    var3052!val!0)\n  (define-fun var2593!1 () var400\n    var400!val!0)\n  (define-fun var3852!1 () String\n    \"\")\n  (define-fun getLogger/100686094 ((x!0 var2651)) var400\n    var400!val!0)\n  (define-fun warn/-9348662 ((x!0 var400) (x!1 String)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var3052)) String\n    \"\")\n)\n(error \"line 33 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140849152,
            "run_time": 2.150559425354004,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2276 () var3052 var3052!8)\r\n  (define-fun var2451 () var2651 var2651!6)\r\n  (define-fun null-var3052 () var3052 var3052!4)\r\n  (define-fun null-var2651 () var2651 var2651!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 6,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.logging.impl.LogKitLogger",
            "r0 := @parameter0: java.lang.Object",
            "if r0 == null goto return",
            "$r3 = virtualinvoke r1.<org.apache.commons.logging.impl.LogKitLogger: org.apache.log.Logger getLogger()>()",
            "$r2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0)",
            "virtualinvoke $r3.<org.apache.log.Logger: void warn(java.lang.String)>($r2)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__\u300aclinit\u300b__-167820461\\561.smt2",
        "z3": {
            "memory": 32116736,
            "run_time": 0.23442912101745605,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun null-__Array__Int__String__ () (Array Int String)\r\n    (store ((as const (Array Int String)) \"g\") 2 \"r\"))\r\n  (define-fun var2626 () (Array Int String)\r\n    var1978!2)\r\n  (define-fun var630 () String\r\n    \"org.apache.commons.logging.impl.\")\r\n  (define-fun var1978 () (Array Int String)\r\n    arr-String-init)\r\n  (define-fun var2262 () Int\r\n    (str.len \"org.apache.commons.logging.impl.\"))\r\n  (define-fun var3516 () (Array Int String)\r\n    arr-String-init)\r\n  (define-fun var1978!2 () (Array Int String)\r\n    (store ((as const (Array Int String)) \".\")\r\n       1\r\n       \"org.apache.commons.logging.impl.SimpleLog\"))\r\n  (define-fun var1978!1 () (Array Int String)\r\n    (store ((as const (Array Int String)) \"o\")\r\n       0\r\n       \"org.apache.commons.logging.impl.Jdk14Logger\"))\r\n  (define-fun var1738 () Int\r\n    (str.len \"org.apache.commons.logging.impl.\"))\r\n  (define-fun var3506 () (Array Int String)\r\n    arr-String-init)\r\n  (define-fun arr-String-init () (Array Int String)\r\n    ((as const (Array Int String)) \"\"))\r\n  (define-fun k!1 ((x!0 Int)) String\r\n    (ite (= x!0 2) \"r\"\r\n      \"g\"))\r\n  (define-fun k!2 ((x!0 Int)) String\r\n    (ite (= x!0 1) \"org.apache.commons.logging.impl.SimpleLog\"\r\n      \".\"))\r\n)\r\n(error \"line 27 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1601536,
            "run_time": 0.1429600715637207,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun arr-String-init () (Array Int String) ((as const (Array Int String)) \"\"))\r\n(define-fun null-__Array__Int__String__ () (Array Int String) (store ((as const (Array Int String)) \"A\") (- 1) \"org.apache.commons.logging.impl.Jdk14Logger\"))\r\n(define-fun var1978!1 () (Array Int String) (store ((as const (Array Int String)) \"\") 0 \"org.apache.commons.logging.impl.Jdk14Logger\"))\r\n(define-fun var1978!2 () (Array Int String) (store (store ((as const (Array Int String)) \"B\") 1 \"org.apache.commons.logging.impl.SimpleLog\") (- 1) \"\"))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36212736,
            "run_time": 0.18757295608520508,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 26 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 27 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 159358976,
            "run_time": 2.739253044128418,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1978!2 () (Array Int String) (store ((as const (Array Int String)) \"\\u{0}\") 1 \"org.apache.commons.logging.impl.SimpleLog\"))\r\n  (define-fun var1978!1 () (Array Int String) (store ((as const (Array Int String)) \"\\u{1}\") 0 \"org.apache.commons.logging.impl.Jdk14Logger\"))\r\n  (define-fun null-__Array__Int__String__ () (Array Int String) ((as const (Array Int String)) \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: int length()>"
        ],
        "api_count": {
            "<java.lang.String: int length()>": 1
        },
        "jimple_statements": [
            "$r0 = \"org.apache.commons.logging.impl.\"",
            "$i0 = virtualinvoke $r0.<java.lang.String: int length()>()",
            "<org.apache.commons.logging.impl.LogFactoryImpl: int PKG_LEN> = $i0",
            "$r1 = newarray (java.lang.String)[0]",
            "<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String[] EMPTY_STRING_ARRAY> = $r1",
            "$r2 = newarray (java.lang.String)[2]",
            "$r2[0] = \"org.apache.commons.logging.impl.Jdk14Logger\"",
            "$r2[1] = \"org.apache.commons.logging.impl.SimpleLog\"",
            "<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String[] classesToDiscover> = $r2",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.SimpleLog__log__1016236476\\417.smt2",
        "z3": {
            "memory": 31453184,
            "run_time": 0.1777801513671875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3637:\r\n  ;;   var3637!val!0 var3637!val!1 var3637!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3637!val!0 () var3637)\r\n  (declare-fun var3637!val!1 () var3637)\r\n  (declare-fun var3637!val!2 () var3637)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3637))\r\n          (or (= x var3637!val!0) (= x var3637!val!1) (= x var3637!val!2)))\r\n  ;; -----------\r\n  ;; universe for var2227:\r\n  ;;   var2227!val!0 var2227!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2227!val!0 () var2227)\r\n  (declare-fun var2227!val!1 () var2227)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2227)) (or (= x var2227!val!0) (= x var2227!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3551:\r\n  ;;   var3551!val!0 var3551!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3551!val!0 () var3551)\r\n  (declare-fun var3551!val!1 () var3551)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3551)) (or (= x var3551!val!0) (= x var3551!val!1)))\r\n  ;; -----------\r\n  (define-fun var3630 () String\r\n    String-init)\r\n  (define-fun var3685 () var2111\r\n    var2227-dateFormatter)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var3551 () var3551\r\n    var3551!val!1)\r\n  (define-fun null-var2227 () var2227\r\n    var2227!val!1)\r\n  (define-fun var1899 () var3551\r\n    var3551!val!0)\r\n  (define-fun var3836 () var2227\r\n    var2227!val!0)\r\n  (define-fun var3499 () var3637\r\n    var3637!val!2)\r\n  (define-fun var3753 () Int\r\n    1)\r\n  (define-fun var3329 () Bool\r\n    var2227-showDateTime)\r\n  (define-fun var1345 () var2753\r\n    var2753-init)\r\n  (define-fun var1743 () var3637\r\n    var3637!val!0)\r\n  (define-fun null-var3637 () var3637\r\n    var3637!val!1)\r\n  (define-fun var2432 () var2111\r\n    var2227-dateFormatter)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var2227-showDateTime () Bool\r\n    true)\r\n  (define-fun var3630!1 () String\r\n    \"\")\r\n  (define-fun var2753-init () var2753\r\n    var2753!val!0)\r\n  (define-fun var2227-dateFormatter () var2111\r\n    var2111!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1345!1 () var2753\r\n    var2753!val!0)\r\n  (define-fun <init>/-788057745 ((x!0 var2753)) void\r\n    void!val!0)\r\n)\r\n(error \"line 56 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10870784,
            "run_time": 0.04484200477600098,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2227 is 2\r\n; rep: (as @var2227_0 var2227)\r\n; rep: (as @var2227_1 var2227)\r\n; cardinality of var3551 is 2\r\n; rep: (as @var3551_0 var3551)\r\n; rep: (as @var3551_1 var3551)\r\n; cardinality of var3637 is 3\r\n; rep: (as @var3637_0 var3637)\r\n; rep: (as @var3637_1 var3637)\r\n; rep: (as @var3637_2 var3637)\r\n; cardinality of var2753 is 1\r\n; rep: (as @var2753_0 var2753)\r\n; cardinality of var2111 is 1\r\n; rep: (as @var2111_0 var2111)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2753-init () var2753 (as @var2753_0 var2753))\r\n(define-fun <init>/-788057745 ((BOUND_VARIABLE_538 var2753)) void (as @void_0 void))\r\n(define-fun null-var2227 () var2227 (as @var2227_0 var2227))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var3551 () var3551 (as @var3551_0 var3551))\r\n(define-fun null-var3637 () var3637 (as @var3637_0 var3637))\r\n(define-fun var2227-showDateTime () Bool true)\r\n(define-fun var2227-dateFormatter () var2111 (as @var2111_0 var2111))\r\n(define-fun var3836 () var2227 (as @var2227_1 var2227))\r\n(define-fun var3753 () Int 0)\r\n(define-fun var1899 () var3551 (as @var3551_1 var3551))\r\n(define-fun var1743 () var3637 (as @var3637_1 var3637))\r\n(define-fun var3630!1 () String \"\")\r\n(define-fun var1345!1 () var2753 (as @var2753_0 var2753))\r\n(define-fun var3499 () var3637 (as @var3637_2 var3637))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36261888,
            "run_time": 0.26587796211242676,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3637:\n  ;;   var3637!val!0 var3637!val!1 var3637!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3637!val!0 () var3637)\n  (declare-fun var3637!val!1 () var3637)\n  (declare-fun var3637!val!2 () var3637)\n  ;; cardinality constraint:\n  (forall ((x var3637))\n          (or (= x var3637!val!0) (= x var3637!val!1) (= x var3637!val!2)))\n  ;; -----------\n  ;; universe for var2227:\n  ;;   var2227!val!0 var2227!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2227!val!0 () var2227)\n  (declare-fun var2227!val!1 () var2227)\n  ;; cardinality constraint:\n  (forall ((x var2227)) (or (= x var2227!val!0) (= x var2227!val!1)))\n  ;; -----------\n  ;; universe for var3551:\n  ;;   var3551!val!0 var3551!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3551!val!0 () var3551)\n  (declare-fun var3551!val!1 () var3551)\n  ;; cardinality constraint:\n  (forall ((x var3551)) (or (= x var3551!val!0) (= x var3551!val!1)))\n  ;; -----------\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var3551 () var3551\n    var3551!val!1)\n  (define-fun null-var2227 () var2227\n    var2227!val!1)\n  (define-fun var1899 () var3551\n    var3551!val!0)\n  (define-fun var3329 () Bool\n    var2227-showDateTime)\n  (define-fun var1345 () var2753\n    var2753-init)\n  (define-fun var2432 () var2111\n    var2227-dateFormatter)\n  (define-fun var3836 () var2227\n    var2227!val!0)\n  (define-fun var3499 () var3637\n    var3637!val!2)\n  (define-fun var3685 () var2111\n    var2227-dateFormatter)\n  (define-fun var3753 () Int\n    1)\n  (define-fun var1743 () var3637\n    var3637!val!0)\n  (define-fun null-var3637 () var3637\n    var3637!val!1)\n  (define-fun var3630 () String\n    String-init)\n  (define-fun null-Int () Int\n    0)\n  (define-fun var2227-showDateTime () Bool\n    true)\n  (define-fun var3630!1 () String\n    \"\")\n  (define-fun var2753-init () var2753\n    var2753!val!0)\n  (define-fun var2227-dateFormatter () var2111\n    var2111!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1345!1 () var2753\n    var2753!val!0)\n  (define-fun <init>/-788057745 ((x!0 var2753)) void\n    void!val!0)\n)\n(error \"line 56 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166608896,
            "run_time": 2.335418701171875,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3499 () var3637 var3637!14)\r\n  (define-fun var3630!1 () String \"\")\r\n  (define-fun var1743 () var3637 var3637!12)\r\n  (define-fun var1899 () var3551 var3551!10)\r\n  (define-fun var3753 () Int 1)\r\n  (define-fun var3836 () var2227 var2227!8)\r\n  (define-fun null-var3637 () var3637 var3637!6)\r\n  (define-fun null-var3551 () var3551 var3551!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var2227 () var2227 var2227!2)\r\n  (define-fun var2227-showDateTime () Bool true)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1
        },
        "jimple_statements": [
            "r3 := @this: org.apache.commons.logging.impl.SimpleLog",
            "i0 := @parameter0: int",
            "r1 := @parameter1: java.lang.Object",
            "r2 := @parameter2: java.lang.Throwable",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$z0 = <org.apache.commons.logging.impl.SimpleLog: boolean showDateTime>",
            "if $z0 == 0 goto (branch)",
            "$r18 = new java.util.Date",
            "specialinvoke $r18.<java.util.Date: void <init>()>()",
            "$r19 = <org.apache.commons.logging.impl.SimpleLog: java.text.DateFormat dateFormatter>",
            "entermonitor $r19",
            "$r20 = <org.apache.commons.logging.impl.SimpleLog: java.text.DateFormat dateFormatter>",
            "$r23 := @caughtexception",
            "exitmonitor $r19",
            "throw $r23"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.SimpleLog__write__-8213034\\443.smt2",
        "z3": {
            "memory": 31604736,
            "run_time": 0.17781782150268555,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var602:\r\n  ;;   var602!val!0 var602!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var602!val!0 () var602)\r\n  (declare-fun var602!val!1 () var602)\r\n  ;; cardinality constraint:\r\n  (forall ((x var602)) (or (= x var602!val!0) (= x var602!val!1)))\r\n  ;; -----------\r\n  (define-fun var3379 () var1261\r\n    var1170-err)\r\n  (define-fun null-var602 () var602\r\n    var602!val!1)\r\n  (define-fun var995 () String\r\n    var1770)\r\n  (define-fun var109 () var602\r\n    var602!val!0)\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1770 () String\r\n    \"!0!\")\r\n  (define-fun var3379!1 () var1261\r\n    var1261!val!0)\r\n  (define-fun var995!1 () String\r\n    \"\")\r\n  (define-fun var1170-err () var1261\r\n    var1261!val!0)\r\n  (define-fun println/1773605060 ((x!0 var1261) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 30 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1601536,
            "run_time": 0.10656547546386719,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var602 is 2\r\n; rep: (as @var602_0 var602)\r\n; rep: (as @var602_1 var602)\r\n; cardinality of var1261 is 1\r\n; rep: (as @var1261_0 var1261)\r\n; cardinality of var1170 is 1\r\n; rep: (as @var1170_0 var1170)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun println/1773605060 ((BOUND_VARIABLE_517 var1261) (BOUND_VARIABLE_518 String)) void (as @void_0 void))\r\n(define-fun null-var602 () var602 (as @var602_0 var602))\r\n(define-fun null-String () String \"A\")\r\n(define-fun var1170-err () var1261 (as @var1261_0 var1261))\r\n(define-fun var109 () var602 (as @var602_1 var602))\r\n(define-fun var1770 () String \"\")\r\n(define-fun var3379!1 () var1261 (as @var1261_0 var1261))\r\n(define-fun var995!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36687872,
            "run_time": 0.18569087982177734,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var602:\n  ;;   var602!val!0 var602!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var602!val!0 () var602)\n  (declare-fun var602!val!1 () var602)\n  ;; cardinality constraint:\n  (forall ((x var602)) (or (= x var602!val!0) (= x var602!val!1)))\n  ;; -----------\n  (define-fun var1770 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3379 () var1261\n    var1170-err)\n  (define-fun null-var602 () var602\n    var602!val!1)\n  (define-fun var109 () var602\n    var602!val!0)\n  (define-fun var995 () String\n    var1770)\n  (define-fun var3379!1 () var1261\n    var1261!val!0)\n  (define-fun var995!1 () String\n    \"\")\n  (define-fun var1170-err () var1261\n    var1261!val!0)\n  (define-fun println/1773605060 ((x!0 var1261) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 30 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 131993600,
            "run_time": 2.1683268547058105,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1770 () String \"\\u{0}\")\r\n  (define-fun var109 () var602 var602!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var602 () var602 var602!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.StringBuffer: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuffer: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @this: org.apache.commons.logging.impl.SimpleLog",
            "r0 := @parameter0: java.lang.StringBuffer",
            "$r1 = <java.lang.System: java.io.PrintStream err>",
            "$r2 = virtualinvoke r0.<java.lang.StringBuffer: java.lang.String toString()>()",
            "virtualinvoke $r1.<java.io.PrintStream: void println(java.lang.String)>($r2)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__setAttribute__1469947650\\529.smt2",
        "z3": {
            "memory": 31531008,
            "run_time": 0.14331555366516113,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 45 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 5144576,
            "run_time": 0.05348038673400879,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35524608,
            "run_time": 0.15430092811584473,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 45 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141234176,
            "run_time": 1.8771979808807373,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 9,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r3 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.reflect.Constructor logConstructor>",
            "if $r1 == null goto (branch)",
            "if r2 != null goto $r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "$r6 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "virtualinvoke $r6.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r3)",
            "goto [?= $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")]",
            "$z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")",
            "if $z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__setAttribute__1469947650\\531.smt2",
        "z3": {
            "memory": 31551488,
            "run_time": 0.14954352378845215,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 52 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1609728,
            "run_time": 0.04578113555908203,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35618816,
            "run_time": 0.20150184631347656,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 52 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 147578880,
            "run_time": 1.8802902698516846,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 11,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r3 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.reflect.Constructor logConstructor>",
            "if $r1 == null goto (branch)",
            "virtualinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void logDiagnostic(java.lang.String)>(\"setAttribute: call too late; configuration already performed.\")",
            "if r2 != null goto $r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "$r6 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "virtualinvoke $r6.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r3)",
            "goto [?= $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")]",
            "$z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")",
            "if $z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__setAttribute__1469947650\\539.smt2",
        "z3": {
            "memory": 31596544,
            "run_time": 0.22453594207763672,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 61 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1597440,
            "run_time": 0.15483808517456055,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34967552,
            "run_time": 0.1833338737487793,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 61 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 148508672,
            "run_time": 1.8767971992492676,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r3 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.reflect.Constructor logConstructor>",
            "if $r1 == null goto (branch)",
            "virtualinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void logDiagnostic(java.lang.String)>(\"setAttribute: call too late; configuration already performed.\")",
            "if r2 != null goto $r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "$r6 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "virtualinvoke $r6.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r3)",
            "goto [?= $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")]",
            "$z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")",
            "if $z0 == 0 goto return",
            "if r2 == null goto $z2 = 0",
            "$z2 = 0",
            "r0.<org.apache.commons.logging.impl.LogFactoryImpl: boolean useTCCL> = $z2",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__isLogLibraryAvailable__1913245598\\508.smt2",
        "z3": {
            "memory": 31567872,
            "run_time": 0.4449305534362793,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 66 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1630208,
            "run_time": 0.1352529525756836,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35643392,
            "run_time": 0.15613555908203125,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 66 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163041280,
            "run_time": 2.090301513671875,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 19,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r5 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r21 := @caughtexception",
            "$z3 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z3 == 0 goto return 0",
            "$r22 = new java.lang.StringBuilder",
            "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Logging system \\'\")",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is available but not useable.\")",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void logDiagnostic(java.lang.String)>($r26)",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__setAttribute__1469947650\\533.smt2",
        "z3": {
            "memory": 31592448,
            "run_time": 0.19571757316589355,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 54 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7344128,
            "run_time": 0.07345938682556152,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35368960,
            "run_time": 0.18656539916992188,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 54 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 142192640,
            "run_time": 1.846987247467041,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r3 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.reflect.Constructor logConstructor>",
            "if $r1 == null goto (branch)",
            "if r2 != null goto $r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "$r6 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "virtualinvoke $r6.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r3)",
            "goto [?= $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")]",
            "$z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")",
            "if $z0 == 0 goto return",
            "if r2 == null goto $z2 = 0",
            "$z2 = 0",
            "r0.<org.apache.commons.logging.impl.LogFactoryImpl: boolean useTCCL> = $z2",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__isLogLibraryAvailable__1913245598\\501.smt2",
        "z3": {
            "memory": 32100352,
            "run_time": 0.29828667640686035,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2878:\r\n  ;;   var2878!val!0 var2878!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2878!val!0 () var2878)\r\n  (declare-fun var2878!val!1 () var2878)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2878)) (or (= x var2878!val!0) (= x var2878!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2080:\r\n  ;;   var2080!val!1 var2080!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2080!val!1 () var2080)\r\n  (declare-fun var2080!val!0 () var2080)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2080)) (or (= x var2080!val!1) (= x var2080!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var2878 () var2878\r\n    var2878!val!1)\r\n  (define-fun var2828 () String\r\n    (str.++ var1207!1 \"Logging system '\" var3962))\r\n  (define-fun var1805 () Bool\r\n    var2080_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3895 () Bool\r\n    var2080_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun null-var2080 () var2080\r\n    var2080!val!1)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1207 () String\r\n    String-init)\r\n  (define-fun var2024 () String\r\n    (str.++ var1207!1 \"Logging system '\"))\r\n  (define-fun var3423 () String\r\n    (str.++ var1207!1 \"Logging system '\" var3962 \"' is available but not useable.\"))\r\n  (define-fun var2560 () var2080\r\n    var2080!val!0)\r\n  (define-fun var3876 () String\r\n    \"\")\r\n  (define-fun var2378 () String\r\n    (str.++ var1207!1 \"Logging system '\" var3962 \"' is available but not useable.\"))\r\n  (define-fun var3962 () String\r\n    \"\")\r\n  (define-fun var2280 () var2878\r\n    var2878!val!0)\r\n  (define-fun var1207!2 () String\r\n    \"Logging system '\")\r\n  (define-fun var1207!1 () String\r\n    \"\")\r\n  (define-fun var2828!1 () String\r\n    \"Logging system '' is available but not useable.\")\r\n  (define-fun var2024!1 () String\r\n    \"Logging system '\")\r\n  (define-fun var2080_isDiagnosticsEnabled/-1107982053 () Bool\r\n    true)\r\n  (define-fun var2560!1 () var2080\r\n    var2080!val!1)\r\n  (define-fun var2378!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun logDiagnostic/1870399160 ((x!0 var2080) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 61 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 2256896,
            "run_time": 0.14743995666503906,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2080 is 2\r\n; rep: (as @var2080_0 var2080)\r\n; rep: (as @var2080_1 var2080)\r\n; cardinality of var2182 is 1\r\n; rep: (as @var2182_0 var2182)\r\n; cardinality of var2878 is 2\r\n; rep: (as @var2878_0 var2878)\r\n; rep: (as @var2878_1 var2878)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2080_isDiagnosticsEnabled/-1107982053 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun logDiagnostic/1870399160 ((BOUND_VARIABLE_702 var2080) (BOUND_VARIABLE_703 String)) void (as @void_0 void))\r\n(define-fun null-var2080 () var2080 (as @var2080_0 var2080))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var2878 () var2878 (as @var2878_0 var2878))\r\n(define-fun var2560 () var2080 (as @var2080_1 var2080))\r\n(define-fun var3962 () String \"\")\r\n(define-fun var3876 () String \"\")\r\n(define-fun var2280 () var2878 (as @var2878_1 var2878))\r\n(define-fun var1207!1 () String \"\")\r\n(define-fun var1207!2 () String \"Logging system '\")\r\n(define-fun var2024!1 () String \"Logging system '\")\r\n(define-fun var2828!1 () String \"Logging system '' is available but not useable.\")\r\n(define-fun var2560!1 () var2080 (as @var2080_0 var2080))\r\n(define-fun var2378!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37093376,
            "run_time": 0.3037571907043457,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2878:\n  ;;   var2878!val!0 var2878!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2878!val!0 () var2878)\n  (declare-fun var2878!val!1 () var2878)\n  ;; cardinality constraint:\n  (forall ((x var2878)) (or (= x var2878!val!0) (= x var2878!val!1)))\n  ;; -----------\n  ;; universe for var2080:\n  ;;   var2080!val!1 var2080!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2080!val!1 () var2080)\n  (declare-fun var2080!val!0 () var2080)\n  ;; cardinality constraint:\n  (forall ((x var2080)) (or (= x var2080!val!1) (= x var2080!val!0)))\n  ;; -----------\n  (define-fun var3876 () String\n    \"\\u{0}\")\n  (define-fun var2080_isDiagnosticsEnabled/-1107982053 () Bool\n    true)\n  (define-fun null-var2878 () var2878\n    var2878!val!1)\n  (define-fun var2378 () String\n    (str.++ var1207!1 \"Logging system '\" var3962 \"' is available but not useable.\"))\n  (define-fun var3962 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var2024!1 () String\n    \"Logging system '\\u{0}\\u{0}\\u{0}\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2828 () String\n    (str.++ var1207!1 \"Logging system '\" var3962))\n  (define-fun var1207!1 () String\n    \"\")\n  (define-fun var1207!2 () String\n    \"Logging system '\")\n  (define-fun var3423 () String\n    (str.++ var1207!1 \"Logging system '\" var3962 \"' is available but not useable.\"))\n  (define-fun var2828!1 () String\n    \"Logging system '\\u{0}\\u{0}\\u{0}' is available but not useable.\")\n  (define-fun var1805 () Bool\n    var2080_isDiagnosticsEnabled/-1107982053)\n  (define-fun var2280 () var2878\n    var2878!val!0)\n  (define-fun var1207 () String\n    String-init)\n  (define-fun var3895 () Bool\n    var2080_isDiagnosticsEnabled/-1107982053)\n  (define-fun null-var2080 () var2080\n    var2080!val!1)\n  (define-fun var2560 () var2080\n    var2080!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2024 () String\n    (str.++ var1207!1 \"Logging system '\"))\n  (define-fun var2560!1 () var2080\n    var2080!val!1)\n  (define-fun var2378!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun logDiagnostic/1870399160 ((x!0 var2080) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 61 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177938432,
            "run_time": 2.2487525939941406,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2878/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__isLogLibraryAvailable__1913245598\\501.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_25_4 =\r\n     concat(all_25_5, \"\\u{0}27 is available but not useable.\")\r\n   var2828!1 =\r\n     concat(all_22_4, \"\\u{0}27 is available but not useable.\")\r\n   var2024!1 =\r\n     concat(\"Logging system \\u{0}27\", var3962)\r\n   all_25_5 =\r\n     concat(\"Logging system \\u{0}27\", var3962)\r\n   all_22_4 =\r\n     concat(\"Logging system \\u{0}27\", var3962)\r\n\r\n1725ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r5 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r21 := @caughtexception",
            "$z3 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z3 == 0 goto return 0",
            "$r22 = new java.lang.StringBuilder",
            "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Logging system \\'\")",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is available but not useable.\")",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void logDiagnostic(java.lang.String)>($r26)",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__setAttribute__1469947650\\542.smt2",
        "z3": {
            "memory": 31649792,
            "run_time": 0.13486313819885254,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 63 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 4743168,
            "run_time": 0.06082010269165039,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35627008,
            "run_time": 0.4021165370941162,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 63 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 157274112,
            "run_time": 1.9726927280426025,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.Object: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r3 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.reflect.Constructor logConstructor>",
            "if $r1 == null goto (branch)",
            "if r2 != null goto $r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "$r6 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "virtualinvoke $r6.<java.util.Hashtable: java.lang.Object remove(java.lang.Object)>(r3)",
            "goto [?= $z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")]",
            "$z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")",
            "if $z0 == 0 goto return",
            "if r2 == null goto $z2 = 0",
            "$r5 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()",
            "$z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r5)",
            "if $z1 == 0 goto $z2 = 0",
            "$z2 = 1",
            "goto [?= r0.<org.apache.commons.logging.impl.LogFactoryImpl: boolean useTCCL> = $z2]",
            "r0.<org.apache.commons.logging.impl.LogFactoryImpl: boolean useTCCL> = $z2",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__setAttribute__1469947650\\549.smt2",
        "z3": {
            "memory": 32165888,
            "run_time": 0.14911532402038574,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2426:\r\n  ;;   var2426!val!0 var2426!val!1 var2426!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2426!val!0 () var2426)\r\n  (declare-fun var2426!val!1 () var2426)\r\n  (declare-fun var2426!val!2 () var2426)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2426))\r\n          (or (= x var2426!val!0) (= x var2426!val!1) (= x var2426!val!2)))\r\n  ;; -----------\r\n  ;; universe for var3074:\r\n  ;;   var3074!val!2 var3074!val!1 var3074!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3074!val!2 () var3074)\r\n  (declare-fun var3074!val!1 () var3074)\r\n  (declare-fun var3074!val!0 () var3074)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3074))\r\n          (or (= x var3074!val!2) (= x var3074!val!1) (= x var3074!val!0)))\r\n  ;; -----------\r\n  (define-fun var855 () var365\r\n    (logConstructor/1199358121 var896))\r\n  (define-fun var251 () Bool\r\n    (ite (= 1 1) true false))\r\n  (define-fun var3023!1 () var2426\r\n    var2426!val!2)\r\n  (define-fun null-var2426 () var2426\r\n    var2426!val!1)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var777 () String\r\n    (toString/-522406933 var3023!1))\r\n  (define-fun var896!1 () var3074\r\n    var3074!val!2)\r\n  (define-fun var2989 () var2887\r\n    (attributes/1199358121 var896))\r\n  (define-fun var1097 () Bool\r\n    (var288_parseBoolean/746105335 (toString/-522406933 var3023!1)))\r\n  (define-fun var896 () var3074\r\n    var3074!val!0)\r\n  (define-fun var3336 () Bool\r\n    (= var2595!1 \"use_tccl\"))\r\n  (define-fun null-var3074 () var3074\r\n    var3074!val!1)\r\n  (define-fun var2595 () String\r\n    \"A\")\r\n  (define-fun var3023 () var2426\r\n    var2426!val!0)\r\n  (define-fun var2595!1 () String\r\n    \"use_tccl\")\r\n  (define-fun null-var365 () var365\r\n    var365!val!0)\r\n  (define-fun var2989!1 () var2887\r\n    var2887!val!0)\r\n  (define-fun useTCCL/1199358121 ((x!0 var3074)) Bool\r\n    true)\r\n  (define-fun toString/-522406933 ((x!0 var2426)) String\r\n    \"A\")\r\n  (define-fun var288_parseBoolean/746105335 ((x!0 String)) Bool\r\n    true)\r\n  (define-fun logConstructor/1199358121 ((x!0 var3074)) var365\r\n    var365!val!0)\r\n  (define-fun put/1981026245 ((x!0 var2887) (x!1 var2426) (x!2 var2426)) var2426\r\n    var2426!val!0)\r\n  (define-fun attributes/1199358121 ((x!0 var3074)) var2887\r\n    var2887!val!0)\r\n  (define-fun cast-from-String-to-var2426 ((x!0 String)) var2426\r\n    var2426!val!0)\r\n)\r\n(error \"line 64 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1601536,
            "run_time": 0.09335541725158691,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3074 is 3\r\n; rep: (as @var3074_0 var3074)\r\n; rep: (as @var3074_1 var3074)\r\n; rep: (as @var3074_2 var3074)\r\n; cardinality of var2078 is 1\r\n; rep: (as @var2078_0 var2078)\r\n; cardinality of var2426 is 3\r\n; rep: (as @var2426_0 var2426)\r\n; rep: (as @var2426_1 var2426)\r\n; rep: (as @var2426_2 var2426)\r\n; cardinality of var365 is 1\r\n; rep: (as @var365_0 var365)\r\n; cardinality of var2887 is 1\r\n; rep: (as @var2887_0 var2887)\r\n; cardinality of var288 is 1\r\n; rep: (as @var288_0 var288)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logConstructor/1199358121 ((BOUND_VARIABLE_703 var3074)) var365 (as @var365_0 var365))\r\n(define-fun attributes/1199358121 ((BOUND_VARIABLE_706 var3074)) var2887 (as @var2887_0 var2887))\r\n(define-fun put/1981026245 ((BOUND_VARIABLE_709 var2887) (BOUND_VARIABLE_710 var2426) (BOUND_VARIABLE_711 var2426)) var2426 (as @var2426_0 var2426))\r\n(define-fun cast-from-String-to-var2426 ((BOUND_VARIABLE_714 String)) var2426 (as @var2426_0 var2426))\r\n(define-fun toString/-522406933 ((_arg_1 var2426)) String \"B\")\r\n(define-fun var288_parseBoolean/746105335 ((_arg_1 String)) Bool true)\r\n(define-fun useTCCL/1199358121 ((_arg_1 var3074)) Bool true)\r\n(define-fun null-var3074 () var3074 (as @var3074_0 var3074))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var2426 () var2426 (as @var2426_0 var2426))\r\n(define-fun null-var365 () var365 (as @var365_0 var365))\r\n(define-fun var896 () var3074 (as @var3074_1 var3074))\r\n(define-fun var2595 () String \"\")\r\n(define-fun var3023 () var2426 (as @var2426_1 var2426))\r\n(define-fun var2989!1 () var2887 (as @var2887_0 var2887))\r\n(define-fun var2595!1 () String \"use_tccl\")\r\n(define-fun var3023!1 () var2426 (as @var2426_2 var2426))\r\n(define-fun var896!1 () var3074 (as @var3074_2 var3074))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35381248,
            "run_time": 0.15467309951782227,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 63 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 64 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177131520,
            "run_time": 2.235142707824707,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var896!1 () var3074 var3074!14)\r\n  (define-fun var3023!1 () var2426 var2426!12)\r\n  (define-fun var2595!1 () String \"use_tccl\")\r\n  (define-fun var3023 () var2426 var2426!10)\r\n  (define-fun var2595 () String \"l\")\r\n  (define-fun var896 () var3074 var3074!8)\r\n  (define-fun null-var365 () var365 var365!6)\r\n  (define-fun null-var2426 () var2426 var2426!4)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3074 () var3074 var3074!2)\r\n  (define-fun var365!6 () var365 (logConstructor/1199358121 var3074!8))\r\n  (define-fun useTCCL/1199358121 ((x!0 var3074)) Bool (ite (= x!0 var3074!14) true true))\r\n  (define-fun var288_parseBoolean/746105335 ((x!0 String)) Bool (ite (= x!0 \"\\u{0}\") true true))\r\n  (define-fun toString/-522406933 ((x!0 var2426)) String (ite (= x!0 var2426!12) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.Object: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r3 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.reflect.Constructor logConstructor>",
            "if $r1 == null goto (branch)",
            "if r2 != null goto $r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "$r4 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.util.Hashtable attributes>",
            "virtualinvoke $r4.<java.util.Hashtable: java.lang.Object put(java.lang.Object,java.lang.Object)>(r3, r2)",
            "$z0 = virtualinvoke r3.<java.lang.String: boolean equals(java.lang.Object)>(\"use_tccl\")",
            "if $z0 == 0 goto return",
            "if r2 == null goto $z2 = 0",
            "$r5 = virtualinvoke r2.<java.lang.Object: java.lang.String toString()>()",
            "$z1 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>($r5)",
            "if $z1 == 0 goto $z2 = 0",
            "$z2 = 1",
            "goto [?= r0.<org.apache.commons.logging.impl.LogFactoryImpl: boolean useTCCL> = $z2]",
            "r0.<org.apache.commons.logging.impl.LogFactoryImpl: boolean useTCCL> = $z2",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__isLogLibraryAvailable__1913245598\\504.smt2",
        "z3": {
            "memory": 32161792,
            "run_time": 0.3867170810699463,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3068:\r\n  ;;   var3068!val!0 var3068!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3068!val!0 () var3068)\r\n  (declare-fun var3068!val!1 () var3068)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3068)) (or (= x var3068!val!0) (= x var3068!val!1)))\r\n  ;; -----------\r\n  ;; universe for var325:\r\n  ;;   var325!val!1 var325!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var325!val!1 () var325)\r\n  (declare-fun var325!val!0 () var325)\r\n  ;; cardinality constraint:\r\n  (forall ((x var325)) (or (= x var325!val!1) (= x var325!val!0)))\r\n  ;; -----------\r\n  (define-fun var655 () String\r\n    (str.++ var2913!1 \"Logging system '\" var309 \"' is available but not useable.\"))\r\n  (define-fun var1162 () String\r\n    (str.++ var2913!1 \"Logging system '\" var309))\r\n  (define-fun var1633 () String\r\n    (str.++ var2130!1 \"Checking for '\" var309 \"'.\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-var325 () var325\r\n    var325!val!1)\r\n  (define-fun var2913 () String\r\n    String-init)\r\n  (define-fun var309 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1129 () Bool\r\n    var325_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun var3489 () String\r\n    (str.++ var2130!1 \"Checking for '\"))\r\n  (define-fun var3516 () String\r\n    (str.++ var2130!1 \"Checking for '\" var309))\r\n  (define-fun null-var3068 () var3068\r\n    var3068!val!1)\r\n  (define-fun var3007 () String\r\n    \"\")\r\n  (define-fun var3790 () var3068\r\n    var3068!val!0)\r\n  (define-fun var2935 () String\r\n    (str.++ var2913!1 \"Logging system '\" var309 \"' is available but not useable.\"))\r\n  (define-fun var3908 () String\r\n    (str.++ var2913!1 \"Logging system '\"))\r\n  (define-fun var3911 () var325\r\n    var325!val!0)\r\n  (define-fun var123 () String\r\n    (str.++ var2130!1 \"Checking for '\" var309 \"'.\"))\r\n  (define-fun var1315 () Bool\r\n    var325_isDiagnosticsEnabled/-1107982053)\r\n  (define-fun var2130 () String\r\n    String-init)\r\n  (define-fun var2913!2 () String\r\n    \"Logging system '\")\r\n  (define-fun var3516!1 () String\r\n    \"Checking for ''.\")\r\n  (define-fun var3908!1 () String\r\n    \"Logging system '\")\r\n  (define-fun var2130!2 () String\r\n    \"Checking for '\")\r\n  (define-fun var2913!1 () String\r\n    \"\")\r\n  (define-fun var3489!1 () String\r\n    \"Checking for '\")\r\n  (define-fun var1162!1 () String\r\n    \"Logging system '' is available but not useable.\")\r\n  (define-fun var325_isDiagnosticsEnabled/-1107982053 () Bool\r\n    true)\r\n  (define-fun var2130!1 () String\r\n    \"\")\r\n  (define-fun var655!1 () String\r\n    \"\")\r\n  (define-fun var1633!1 () String\r\n    \"\")\r\n  (define-fun var3911!1 () var325\r\n    var325!val!1)\r\n  (define-fun var3911!2 () var325\r\n    var325!val!1)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun logDiagnostic/1870399160 ((x!0 var325) (x!1 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 86 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 4743168,
            "run_time": 0.10571050643920898,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var325 is 2\r\n; rep: (as @var325_0 var325)\r\n; rep: (as @var325_1 var325)\r\n; cardinality of var3366 is 1\r\n; rep: (as @var3366_0 var3366)\r\n; cardinality of var3068 is 2\r\n; rep: (as @var3068_0 var3068)\r\n; rep: (as @var3068_1 var3068)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var325_isDiagnosticsEnabled/-1107982053 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun logDiagnostic/1870399160 ((BOUND_VARIABLE_794 var325) (BOUND_VARIABLE_795 String)) void (as @void_0 void))\r\n(define-fun null-var325 () var325 (as @var325_0 var325))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3068 () var3068 (as @var3068_0 var3068))\r\n(define-fun var3911 () var325 (as @var325_1 var325))\r\n(define-fun var309 () String \"\")\r\n(define-fun var3007 () String \"\")\r\n(define-fun var2130!1 () String \"\")\r\n(define-fun var2130!2 () String \"Checking for '\")\r\n(define-fun var3489!1 () String \"Checking for '\")\r\n(define-fun var3516!1 () String \"Checking for ''.\")\r\n(define-fun var3911!1 () var325 (as @var325_0 var325))\r\n(define-fun var1633!1 () String \"\")\r\n(define-fun var3790 () var3068 (as @var3068_1 var3068))\r\n(define-fun var2913!1 () String \"\")\r\n(define-fun var2913!2 () String \"Logging system '\")\r\n(define-fun var3908!1 () String \"Logging system '\")\r\n(define-fun var1162!1 () String \"Logging system '' is available but not useable.\")\r\n(define-fun var3911!2 () var325 (as @var325_0 var325))\r\n(define-fun var655!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37445632,
            "run_time": 0.2320873737335205,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3068:\n  ;;   var3068!val!0 var3068!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3068!val!0 () var3068)\n  (declare-fun var3068!val!1 () var3068)\n  ;; cardinality constraint:\n  (forall ((x var3068)) (or (= x var3068!val!0) (= x var3068!val!1)))\n  ;; -----------\n  ;; universe for var325:\n  ;;   var325!val!1 var325!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var325!val!1 () var325)\n  (declare-fun var325!val!0 () var325)\n  ;; cardinality constraint:\n  (forall ((x var325)) (or (= x var325!val!1) (= x var325!val!0)))\n  ;; -----------\n  (define-fun var3489!1 () String\n    \"Checking for '\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1633 () String\n    (str.++ var2130!1 \"Checking for '\" var309 \"'.\"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2913!1 () String\n    \"\")\n  (define-fun var2913 () String\n    String-init)\n  (define-fun var3489 () String\n    (str.++ var2130!1 \"Checking for '\"))\n  (define-fun var2130!2 () String\n    \"Checking for '\")\n  (define-fun var3908!1 () String\n    \"Logging system '\\u{0}\\u{0}\\u{0}\")\n  (define-fun var3516!1 () String\n    \"Checking for '\\u{0}\\u{0}\\u{0}'.\")\n  (define-fun var3911 () var325\n    var325!val!0)\n  (define-fun var2913!2 () String\n    \"Logging system '\")\n  (define-fun var2130!1 () String\n    \"\")\n  (define-fun var1129 () Bool\n    var325_isDiagnosticsEnabled/-1107982053)\n  (define-fun var1162 () String\n    (str.++ var2913!1 \"Logging system '\" var309))\n  (define-fun var1162!1 () String\n    \"Logging system '\\u{0}\\u{0}\\u{0}' is available but not useable.\")\n  (define-fun var325_isDiagnosticsEnabled/-1107982053 () Bool\n    true)\n  (define-fun var3007 () String\n    \"\\u{0}\")\n  (define-fun null-var325 () var325\n    var325!val!1)\n  (define-fun var123 () String\n    (str.++ var2130!1 \"Checking for '\" var309 \"'.\"))\n  (define-fun var655 () String\n    (str.++ var2913!1 \"Logging system '\" var309 \"' is available but not useable.\"))\n  (define-fun var2130 () String\n    String-init)\n  (define-fun var3790 () var3068\n    var3068!val!0)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3908 () String\n    (str.++ var2913!1 \"Logging system '\"))\n  (define-fun var309 () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun null-var3068 () var3068\n    var3068!val!1)\n  (define-fun var2935 () String\n    (str.++ var2913!1 \"Logging system '\" var309 \"' is available but not useable.\"))\n  (define-fun var1315 () Bool\n    var325_isDiagnosticsEnabled/-1107982053)\n  (define-fun var3516 () String\n    (str.++ var2130!1 \"Checking for '\" var309))\n  (define-fun var655!1 () String\n    \"\")\n  (define-fun var1633!1 () String\n    \"\")\n  (define-fun var3911!1 () var325\n    var325!val!1)\n  (define-fun var3911!2 () var325\n    var325!val!1)\n  (define-fun String-init () String\n    \"\")\n  (define-fun logDiagnostic/1870399160 ((x!0 var325) (x!1 String)) void\n    void!val!0)\n)\n(error \"line 86 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181387264,
            "run_time": 2.4874727725982666,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var325/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__isLogLibraryAvailable__1913245598\\504.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_38_4 =\r\n     concat(all_38_5, \"\\u{0}27.\")\r\n   all_34_4 =\r\n     concat(all_34_5, \"\\u{0}27 is available but not useable.\")\r\n   var1162!1 =\r\n     concat(all_31_4, \"\\u{0}27 is available but not useable.\")\r\n   var3516!1 =\r\n     concat(all_28_4, \"\\u{0}27.\")\r\n   var3908!1 =\r\n     concat(\"Logging system \\u{0}27\", var309)\r\n   var3489!1 =\r\n     concat(\"Checking for \\u{0}27\", var309)\r\n   all_34_5 =\r\n     concat(\"Logging system \\u{0}27\", var309)\r\n   all_31_4 =\r\n     concat(\"Logging system \\u{0}27\", var309)\r\n   all_38_5 =\r\n     concat(\"Checking for \\u{0}27\", var309)\r\n   all_28_4 =\r\n     concat(\"Checking for \\u{0}27\", var309)\r\n\r\n1964ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 28,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r5 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r15 = new java.lang.StringBuilder",
            "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Checking for \\'\")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\'.\")",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void logDiagnostic(java.lang.String)>($r19)",
            "$r21 := @caughtexception",
            "$z3 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z3 == 0 goto return 0",
            "$r22 = new java.lang.StringBuilder",
            "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Logging system \\'\")",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is available but not useable.\")",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void logDiagnostic(java.lang.String)>($r26)",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.SimpleLog__log__1016236476\\409.smt2",
        "z3": {
            "memory": 31223808,
            "run_time": 0.10543560981750488,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3050:\r\n  ;;   var3050!val!0 var3050!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3050!val!0 () var3050)\r\n  (declare-fun var3050!val!1 () var3050)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3050)) (or (= x var3050!val!0) (= x var3050!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2342:\r\n  ;;   var2342!val!0 var2342!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2342!val!0 () var2342)\r\n  (declare-fun var2342!val!1 () var2342)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2342)) (or (= x var2342!val!0) (= x var2342!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1209:\r\n  ;;   var1209!val!2 var1209!val!0 var1209!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1209!val!2 () var1209)\r\n  (declare-fun var1209!val!0 () var1209)\r\n  (declare-fun var1209!val!1 () var1209)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1209))\r\n          (or (= x var1209!val!2) (= x var1209!val!0) (= x var1209!val!1)))\r\n  ;; -----------\r\n  (define-fun var2035 () Bool\r\n    var3050-showDateTime)\r\n  (define-fun var1179 () String\r\n    String-init)\r\n  (define-fun var1607 () var2342\r\n    var2342!val!0)\r\n  (define-fun var740 () var1209\r\n    var1209!val!0)\r\n  (define-fun null-var1209 () var1209\r\n    var1209!val!1)\r\n  (define-fun var940 () var1946\r\n    var3050-dateFormatter)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2547 () Int\r\n    1)\r\n  (define-fun var1683 () var1209\r\n    var1209!val!2)\r\n  (define-fun var822 () var3050\r\n    var3050!val!0)\r\n  (define-fun null-var3050 () var3050\r\n    var3050!val!1)\r\n  (define-fun null-var2342 () var2342\r\n    var2342!val!1)\r\n  (define-fun var2700 () var2396\r\n    var2396-init)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var3050-showDateTime () Bool\r\n    true)\r\n  (define-fun var1179!1 () String\r\n    \"\")\r\n  (define-fun var2700!1 () var2396\r\n    var2396!val!0)\r\n  (define-fun var3050-dateFormatter () var1946\r\n    var1946!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2396-init () var2396\r\n    var2396!val!0)\r\n  (define-fun <init>/-788057745 ((x!0 var2396)) void\r\n    void!val!0)\r\n)\r\n(error \"line 54 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8609792,
            "run_time": 0.0777895450592041,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3050 is 2\r\n; rep: (as @var3050_0 var3050)\r\n; rep: (as @var3050_1 var3050)\r\n; cardinality of var2342 is 2\r\n; rep: (as @var2342_0 var2342)\r\n; rep: (as @var2342_1 var2342)\r\n; cardinality of var1209 is 3\r\n; rep: (as @var1209_0 var1209)\r\n; rep: (as @var1209_1 var1209)\r\n; rep: (as @var1209_2 var1209)\r\n; cardinality of var2396 is 1\r\n; rep: (as @var2396_0 var2396)\r\n; cardinality of var1946 is 1\r\n; rep: (as @var1946_0 var1946)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2396-init () var2396 (as @var2396_0 var2396))\r\n(define-fun <init>/-788057745 ((BOUND_VARIABLE_534 var2396)) void (as @void_0 void))\r\n(define-fun null-var3050 () var3050 (as @var3050_0 var3050))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var2342 () var2342 (as @var2342_0 var2342))\r\n(define-fun null-var1209 () var1209 (as @var1209_0 var1209))\r\n(define-fun var3050-showDateTime () Bool true)\r\n(define-fun var3050-dateFormatter () var1946 (as @var1946_0 var1946))\r\n(define-fun var822 () var3050 (as @var3050_1 var3050))\r\n(define-fun var2547 () Int 0)\r\n(define-fun var1607 () var2342 (as @var2342_1 var2342))\r\n(define-fun var740 () var1209 (as @var1209_1 var1209))\r\n(define-fun var1179!1 () String \"\")\r\n(define-fun var2700!1 () var2396 (as @var2396_0 var2396))\r\n(define-fun var1683 () var1209 (as @var1209_2 var1209))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36372480,
            "run_time": 0.11566519737243652,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3050:\n  ;;   var3050!val!0 var3050!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3050!val!0 () var3050)\n  (declare-fun var3050!val!1 () var3050)\n  ;; cardinality constraint:\n  (forall ((x var3050)) (or (= x var3050!val!0) (= x var3050!val!1)))\n  ;; -----------\n  ;; universe for var2342:\n  ;;   var2342!val!0 var2342!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2342!val!0 () var2342)\n  (declare-fun var2342!val!1 () var2342)\n  ;; cardinality constraint:\n  (forall ((x var2342)) (or (= x var2342!val!0) (= x var2342!val!1)))\n  ;; -----------\n  ;; universe for var1209:\n  ;;   var1209!val!2 var1209!val!0 var1209!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1209!val!2 () var1209)\n  (declare-fun var1209!val!0 () var1209)\n  (declare-fun var1209!val!1 () var1209)\n  ;; cardinality constraint:\n  (forall ((x var1209))\n          (or (= x var1209!val!2) (= x var1209!val!0) (= x var1209!val!1)))\n  ;; -----------\n  (define-fun var2035 () Bool\n    var3050-showDateTime)\n  (define-fun var1607 () var2342\n    var2342!val!0)\n  (define-fun var740 () var1209\n    var1209!val!0)\n  (define-fun null-var1209 () var1209\n    var1209!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2700 () var2396\n    var2396-init)\n  (define-fun var2547 () Int\n    1)\n  (define-fun var1683 () var1209\n    var1209!val!2)\n  (define-fun var1179 () String\n    String-init)\n  (define-fun var822 () var3050\n    var3050!val!0)\n  (define-fun null-var3050 () var3050\n    var3050!val!1)\n  (define-fun null-var2342 () var2342\n    var2342!val!1)\n  (define-fun var940 () var1946\n    var3050-dateFormatter)\n  (define-fun null-Int () Int\n    0)\n  (define-fun var3050-showDateTime () Bool\n    true)\n  (define-fun var1179!1 () String\n    \"\")\n  (define-fun var2700!1 () var2396\n    var2396!val!0)\n  (define-fun var3050-dateFormatter () var1946\n    var1946!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2396-init () var2396\n    var2396!val!0)\n  (define-fun <init>/-788057745 ((x!0 var2396)) void\n    void!val!0)\n)\n(error \"line 54 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 167522304,
            "run_time": 2.1063947677612305,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1683 () var1209 var1209!14)\r\n  (define-fun var1179!1 () String \"\")\r\n  (define-fun var740 () var1209 var1209!12)\r\n  (define-fun var1607 () var2342 var2342!10)\r\n  (define-fun var2547 () Int 1)\r\n  (define-fun var822 () var3050 var3050!8)\r\n  (define-fun null-var1209 () var1209 var1209!6)\r\n  (define-fun null-var2342 () var2342 var2342!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var3050 () var3050 var3050!2)\r\n  (define-fun var3050-showDateTime () Bool true)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1
        },
        "jimple_statements": [
            "r3 := @this: org.apache.commons.logging.impl.SimpleLog",
            "i0 := @parameter0: int",
            "r1 := @parameter1: java.lang.Object",
            "r2 := @parameter2: java.lang.Throwable",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$z0 = <org.apache.commons.logging.impl.SimpleLog: boolean showDateTime>",
            "if $z0 == 0 goto (branch)",
            "$r18 = new java.util.Date",
            "specialinvoke $r18.<java.util.Date: void <init>()>()",
            "$r19 = <org.apache.commons.logging.impl.SimpleLog: java.text.DateFormat dateFormatter>",
            "entermonitor $r19",
            "$r23 := @caughtexception",
            "exitmonitor $r19",
            "throw $r23"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogKitLogger__warn__-1103966491\\359.smt2",
        "z3": {
            "memory": 31608832,
            "run_time": 0.10692739486694336,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1126:\r\n  ;;   var1126!val!0 var1126!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1126!val!0 () var1126)\r\n  (declare-fun var1126!val!1 () var1126)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1126)) (or (= x var1126!val!0) (= x var1126!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2181:\r\n  ;;   var2181!val!1 var2181!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2181!val!1 () var2181)\r\n  (declare-fun var2181!val!0 () var2181)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2181)) (or (= x var2181!val!1) (= x var2181!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3542:\r\n  ;;   var3542!val!0 var3542!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3542!val!0 () var3542)\r\n  (declare-fun var3542!val!1 () var3542)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3542)) (or (= x var3542!val!0) (= x var3542!val!1)))\r\n  ;; -----------\r\n  (define-fun var3694 () var3542\r\n    var3542!val!0)\r\n  (define-fun null-var3542 () var3542\r\n    var3542!val!1)\r\n  (define-fun null-var2181 () var2181\r\n    var2181!val!1)\r\n  (define-fun var993 () var1126\r\n    var1126!val!0)\r\n  (define-fun var1503 () var3810\r\n    (getLogger/100686094 var3753))\r\n  (define-fun var3753 () var2181\r\n    var2181!val!0)\r\n  (define-fun null-var1126 () var1126\r\n    var1126!val!1)\r\n  (define-fun var449 () String\r\n    (String_valueOf/-333372740 var993))\r\n  (define-fun var3694!1 () var3542\r\n    var3542!val!0)\r\n  (define-fun var449!1 () String\r\n    \"\")\r\n  (define-fun var1503!1 () var3810\r\n    var3810!val!0)\r\n  (define-fun getLogger/100686094 ((x!0 var2181)) var3810\r\n    var3810!val!0)\r\n  (define-fun warn/1262245898 ((x!0 var3810) (x!1 String) (x!2 var3542)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var1126)) String\r\n    \"\")\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7290880,
            "run_time": 0.11566519737243652,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2181 is 2\r\n; rep: (as @var2181_0 var2181)\r\n; rep: (as @var2181_1 var2181)\r\n; cardinality of var1126 is 2\r\n; rep: (as @var1126_0 var1126)\r\n; rep: (as @var1126_1 var1126)\r\n; cardinality of var3542 is 2\r\n; rep: (as @var3542_0 var3542)\r\n; rep: (as @var3542_1 var3542)\r\n; cardinality of var3810 is 1\r\n; rep: (as @var3810_0 var3810)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getLogger/100686094 ((BOUND_VARIABLE_445 var2181)) var3810 (as @var3810_0 var3810))\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_448 var1126)) String \"\")\r\n(define-fun warn/1262245898 ((BOUND_VARIABLE_451 var3810) (BOUND_VARIABLE_452 String) (BOUND_VARIABLE_453 var3542)) void (as @void_0 void))\r\n(define-fun null-var2181 () var2181 (as @var2181_0 var2181))\r\n(define-fun null-var1126 () var1126 (as @var1126_0 var1126))\r\n(define-fun null-var3542 () var3542 (as @var3542_0 var3542))\r\n(define-fun var3753 () var2181 (as @var2181_1 var2181))\r\n(define-fun var993 () var1126 (as @var1126_1 var1126))\r\n(define-fun var3694 () var3542 (as @var3542_1 var3542))\r\n(define-fun var1503!1 () var3810 (as @var3810_0 var3810))\r\n(define-fun var449!1 () String \"\")\r\n(define-fun var3694!1 () var3542 (as @var3542_0 var3542))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35938304,
            "run_time": 0.1864778995513916,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1126:\n  ;;   var1126!val!0 var1126!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1126!val!0 () var1126)\n  (declare-fun var1126!val!1 () var1126)\n  ;; cardinality constraint:\n  (forall ((x var1126)) (or (= x var1126!val!0) (= x var1126!val!1)))\n  ;; -----------\n  ;; universe for var2181:\n  ;;   var2181!val!1 var2181!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2181!val!1 () var2181)\n  (declare-fun var2181!val!0 () var2181)\n  ;; cardinality constraint:\n  (forall ((x var2181)) (or (= x var2181!val!1) (= x var2181!val!0)))\n  ;; -----------\n  ;; universe for var3542:\n  ;;   var3542!val!0 var3542!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3542!val!0 () var3542)\n  (declare-fun var3542!val!1 () var3542)\n  ;; cardinality constraint:\n  (forall ((x var3542)) (or (= x var3542!val!0) (= x var3542!val!1)))\n  ;; -----------\n  (define-fun var3694 () var3542\n    var3542!val!0)\n  (define-fun null-var3542 () var3542\n    var3542!val!1)\n  (define-fun null-var2181 () var2181\n    var2181!val!1)\n  (define-fun var993 () var1126\n    var1126!val!0)\n  (define-fun var449 () String\n    (String_valueOf/-333372740 var993))\n  (define-fun var3753 () var2181\n    var2181!val!0)\n  (define-fun null-var1126 () var1126\n    var1126!val!1)\n  (define-fun var1503 () var3810\n    (getLogger/100686094 var3753))\n  (define-fun var3694!1 () var3542\n    var3542!val!0)\n  (define-fun var449!1 () String\n    \"\")\n  (define-fun var1503!1 () var3810\n    var3810!val!0)\n  (define-fun getLogger/100686094 ((x!0 var2181)) var3810\n    var3810!val!0)\n  (define-fun warn/1262245898 ((x!0 var3810) (x!1 String) (x!2 var3542)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var1126)) String\n    \"\")\n)\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 156647424,
            "run_time": 2.1531171798706055,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3694 () var3542 var3542!12)\r\n  (define-fun var993 () var1126 var1126!10)\r\n  (define-fun var3753 () var2181 var2181!8)\r\n  (define-fun null-var3542 () var3542 var3542!6)\r\n  (define-fun null-var1126 () var1126 var1126!4)\r\n  (define-fun null-var2181 () var2181 var2181!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r1 := @this: org.apache.commons.logging.impl.LogKitLogger",
            "r0 := @parameter0: java.lang.Object",
            "r2 := @parameter1: java.lang.Throwable",
            "if r0 == null goto return",
            "$r4 = virtualinvoke r1.<org.apache.commons.logging.impl.LogKitLogger: org.apache.log.Logger getLogger()>()",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r0)",
            "virtualinvoke $r4.<org.apache.log.Logger: void warn(java.lang.String,java.lang.Throwable)>($r3, r2)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.SimpleLog__log__1016236476\\421.smt2",
        "z3": {
            "memory": 31617024,
            "run_time": 0.20512914657592773,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2675:\r\n  ;;   var2675!val!0 var2675!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2675!val!0 () var2675)\r\n  (declare-fun var2675!val!1 () var2675)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2675)) (or (= x var2675!val!0) (= x var2675!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2841:\r\n  ;;   var2841!val!1 var2841!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2841!val!1 () var2841)\r\n  (declare-fun var2841!val!0 () var2841)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2841)) (or (= x var2841!val!1) (= x var2841!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3851:\r\n  ;;   var3851!val!0 var3851!val!1 var3851!val!2 var3851!val!3 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3851!val!0 () var3851)\r\n  (declare-fun var3851!val!1 () var3851)\r\n  (declare-fun var3851!val!2 () var3851)\r\n  (declare-fun var3851!val!3 () var3851)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3851))\r\n          (or (= x var3851!val!0)\r\n              (= x var3851!val!1)\r\n              (= x var3851!val!2)\r\n              (= x var3851!val!3)))\r\n  ;; -----------\r\n  (define-fun null-var3851 () var3851\r\n    var3851!val!1)\r\n  (define-fun var3138 () var2841\r\n    var2841!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3066 () Bool\r\n    var2675-showDateTime)\r\n  (define-fun var2565 () var2675\r\n    var2675!val!0)\r\n  (define-fun var2256 () var3851\r\n    var3851!val!2)\r\n  (define-fun var1395 () String\r\n    String-init)\r\n  (define-fun null-var2841 () var2841\r\n    var2841!val!1)\r\n  (define-fun var2256!1 () var3851\r\n    var3851!val!3)\r\n  (define-fun var1543 () var3706\r\n    var2675-dateFormatter)\r\n  (define-fun var2356 () Int\r\n    1)\r\n  (define-fun var2479 () var3851\r\n    var3851!val!0)\r\n  (define-fun var122 () var3185\r\n    var3185-init)\r\n  (define-fun null-var2675 () var2675\r\n    var2675!val!1)\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var2675-showDateTime () Bool\r\n    true)\r\n  (define-fun var1395!1 () String\r\n    \"\")\r\n  (define-fun var3185-init () var3185\r\n    var3185!val!0)\r\n  (define-fun var2675-dateFormatter () var3706\r\n    var3706!val!0)\r\n  (define-fun var122!1 () var3185\r\n    var3185!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun <init>/-788057745 ((x!0 var3185)) void\r\n    void!val!0)\r\n)\r\n(error \"line 57 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9654272,
            "run_time": 0.0451359748840332,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2675 is 2\r\n; rep: (as @var2675_0 var2675)\r\n; rep: (as @var2675_1 var2675)\r\n; cardinality of var2841 is 2\r\n; rep: (as @var2841_0 var2841)\r\n; rep: (as @var2841_1 var2841)\r\n; cardinality of var3851 is 4\r\n; rep: (as @var3851_0 var3851)\r\n; rep: (as @var3851_1 var3851)\r\n; rep: (as @var3851_2 var3851)\r\n; rep: (as @var3851_3 var3851)\r\n; cardinality of var3185 is 1\r\n; rep: (as @var3185_0 var3185)\r\n; cardinality of var3706 is 1\r\n; rep: (as @var3706_0 var3706)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun var3185-init () var3185 (as @var3185_0 var3185))\r\n(define-fun <init>/-788057745 ((BOUND_VARIABLE_542 var3185)) void (as @void_0 void))\r\n(define-fun null-var2675 () var2675 (as @var2675_0 var2675))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var2841 () var2841 (as @var2841_0 var2841))\r\n(define-fun null-var3851 () var3851 (as @var3851_0 var3851))\r\n(define-fun var2675-showDateTime () Bool true)\r\n(define-fun var2675-dateFormatter () var3706 (as @var3706_0 var3706))\r\n(define-fun var2565 () var2675 (as @var2675_1 var2675))\r\n(define-fun var2356 () Int 0)\r\n(define-fun var3138 () var2841 (as @var2841_1 var2841))\r\n(define-fun var2479 () var3851 (as @var3851_1 var3851))\r\n(define-fun var1395!1 () String \"\")\r\n(define-fun var122!1 () var3185 (as @var3185_0 var3185))\r\n(define-fun var2256 () var3851 (as @var3851_2 var3851))\r\n(define-fun var2256!1 () var3851 (as @var3851_3 var3851))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36306944,
            "run_time": 0.1400911808013916,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2675:\n  ;;   var2675!val!0 var2675!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2675!val!0 () var2675)\n  (declare-fun var2675!val!1 () var2675)\n  ;; cardinality constraint:\n  (forall ((x var2675)) (or (= x var2675!val!0) (= x var2675!val!1)))\n  ;; -----------\n  ;; universe for var2841:\n  ;;   var2841!val!1 var2841!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2841!val!1 () var2841)\n  (declare-fun var2841!val!0 () var2841)\n  ;; cardinality constraint:\n  (forall ((x var2841)) (or (= x var2841!val!1) (= x var2841!val!0)))\n  ;; -----------\n  ;; universe for var3851:\n  ;;   var3851!val!0 var3851!val!1 var3851!val!2 var3851!val!3 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3851!val!0 () var3851)\n  (declare-fun var3851!val!1 () var3851)\n  (declare-fun var3851!val!2 () var3851)\n  (declare-fun var3851!val!3 () var3851)\n  ;; cardinality constraint:\n  (forall ((x var3851))\n          (or (= x var3851!val!0)\n              (= x var3851!val!1)\n              (= x var3851!val!2)\n              (= x var3851!val!3)))\n  ;; -----------\n  (define-fun null-var3851 () var3851\n    var3851!val!1)\n  (define-fun var3138 () var2841\n    var2841!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1543 () var3706\n    var2675-dateFormatter)\n  (define-fun var1395 () String\n    String-init)\n  (define-fun var2565 () var2675\n    var2675!val!0)\n  (define-fun var2256 () var3851\n    var3851!val!2)\n  (define-fun var122 () var3185\n    var3185-init)\n  (define-fun null-var2841 () var2841\n    var2841!val!1)\n  (define-fun var2256!1 () var3851\n    var3851!val!3)\n  (define-fun var2356 () Int\n    1)\n  (define-fun var2479 () var3851\n    var3851!val!0)\n  (define-fun var3066 () Bool\n    var2675-showDateTime)\n  (define-fun null-var2675 () var2675\n    var2675!val!1)\n  (define-fun null-Int () Int\n    0)\n  (define-fun var2675-showDateTime () Bool\n    true)\n  (define-fun var1395!1 () String\n    \"\")\n  (define-fun var3185-init () var3185\n    var3185!val!0)\n  (define-fun var2675-dateFormatter () var3706\n    var3706!val!0)\n  (define-fun var122!1 () var3185\n    var3185!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun <init>/-788057745 ((x!0 var3185)) void\n    void!val!0)\n)\n(error \"line 57 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166969344,
            "run_time": 2.124241828918457,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2256!1 () var3851 var3851!16)\r\n  (define-fun var2256 () var3851 var3851!14)\r\n  (define-fun var1395!1 () String \"\")\r\n  (define-fun var2479 () var3851 var3851!12)\r\n  (define-fun var3138 () var2841 var2841!10)\r\n  (define-fun var2356 () Int 1)\r\n  (define-fun var2565 () var2675 var2675!8)\r\n  (define-fun null-var3851 () var3851 var3851!6)\r\n  (define-fun null-var2841 () var2841 var2841!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var2675 () var2675 var2675!2)\r\n  (define-fun var2675-showDateTime () Bool true)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1
        },
        "jimple_statements": [
            "r3 := @this: org.apache.commons.logging.impl.SimpleLog",
            "i0 := @parameter0: int",
            "r1 := @parameter1: java.lang.Object",
            "r2 := @parameter2: java.lang.Throwable",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$z0 = <org.apache.commons.logging.impl.SimpleLog: boolean showDateTime>",
            "if $z0 == 0 goto (branch)",
            "$r18 = new java.util.Date",
            "specialinvoke $r18.<java.util.Date: void <init>()>()",
            "$r19 = <org.apache.commons.logging.impl.SimpleLog: java.text.DateFormat dateFormatter>",
            "entermonitor $r19",
            "$r23 := @caughtexception",
            "$r23 := @caughtexception",
            "exitmonitor $r19",
            "throw $r23"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__trim__521529136\\106.smt2",
        "z3": {
            "memory": 31776768,
            "run_time": 0.16671991348266602,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1646 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2291 () String\r\n    (trim-right (trim-left var1646)))\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 20955136,
            "run_time": 0.7956006526947021,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(\r\n; cardinality of var951 is 1\r\n; rep: (as @var951_0 var951)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"!\")\r\n(define-fun var1646 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36696064,
            "run_time": 0.3440995216369629,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1646 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2291 () String\n    (trim-right (trim-left var1646)))\n)\n(error \"line 22 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 187252736,
            "run_time": 2.5506041049957275,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(model\r\n  (define-fun var1646 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog__info__1545038775\\160.smt2",
        "z3": {
            "memory": 32083968,
            "run_time": 0.15907549858093262,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2579:\r\n  ;;   var2579!val!0 var2579!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2579!val!0 () var2579)\r\n  (declare-fun var2579!val!1 () var2579)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2579)) (or (= x var2579!val!0) (= x var2579!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2589:\r\n  ;;   var2589!val!0 var2589!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2589!val!0 () var2589)\r\n  (declare-fun var2589!val!1 () var2589)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2589)) (or (= x var2589!val!0) (= x var2589!val!1)))\r\n  ;; -----------\r\n  (define-fun var2001 () var1006\r\n    (logger/-1834586017 var3694))\r\n  (define-fun null-var2589 () var2589\r\n    var2589!val!1)\r\n  (define-fun var2498 () var130\r\n    var897_access$000/1228673548)\r\n  (define-fun var3694 () var2589\r\n    var2589!val!0)\r\n  (define-fun null-var2579 () var2579\r\n    var2579!val!1)\r\n  (define-fun var1405 () String\r\n    (String_valueOf/-333372740 var944))\r\n  (define-fun var944 () var2579\r\n    var2579!val!0)\r\n  (define-fun var1405!1 () String\r\n    \"\")\r\n  (define-fun var2498!1 () var130\r\n    var130!val!0)\r\n  (define-fun var2001!1 () var1006\r\n    var1006!val!0)\r\n  (define-fun var897_access$000/1228673548 () var130\r\n    var130!val!0)\r\n  (define-fun logger/-1834586017 ((x!0 var2589)) var1006\r\n    var1006!val!0)\r\n  (define-fun var1006_info/848497154 ((x!0 var1006) (x!1 var130) (x!2 String)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var2579)) String\r\n    \"\")\r\n)\r\n(error \"line 33 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9912320,
            "run_time": 0.09254336357116699,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2589 is 2\r\n; rep: (as @var2589_0 var2589)\r\n; rep: (as @var2589_1 var2589)\r\n; cardinality of var2579 is 2\r\n; rep: (as @var2579_0 var2579)\r\n; rep: (as @var2579_1 var2579)\r\n; cardinality of var1006 is 1\r\n; rep: (as @var1006_0 var1006)\r\n; cardinality of var130 is 1\r\n; rep: (as @var130_0 var130)\r\n; cardinality of var897 is 1\r\n; rep: (as @var897_0 var897)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logger/-1834586017 ((BOUND_VARIABLE_444 var2589)) var1006 (as @var1006_0 var1006))\r\n(define-fun var897_access$000/1228673548 () var130 (as @var130_0 var130))\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_447 var2579)) String \"\")\r\n(define-fun var1006_info/848497154 ((BOUND_VARIABLE_450 var1006) (BOUND_VARIABLE_451 var130) (BOUND_VARIABLE_452 String)) void (as @void_0 void))\r\n(define-fun null-var2589 () var2589 (as @var2589_0 var2589))\r\n(define-fun null-var2579 () var2579 (as @var2579_0 var2579))\r\n(define-fun var3694 () var2589 (as @var2589_1 var2589))\r\n(define-fun var944 () var2579 (as @var2579_1 var2579))\r\n(define-fun var2001!1 () var1006 (as @var1006_0 var1006))\r\n(define-fun var2498!1 () var130 (as @var130_0 var130))\r\n(define-fun var1405!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35586048,
            "run_time": 0.17128348350524902,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2579:\n  ;;   var2579!val!0 var2579!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2579!val!0 () var2579)\n  (declare-fun var2579!val!1 () var2579)\n  ;; cardinality constraint:\n  (forall ((x var2579)) (or (= x var2579!val!0) (= x var2579!val!1)))\n  ;; -----------\n  ;; universe for var2589:\n  ;;   var2589!val!0 var2589!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2589!val!0 () var2589)\n  (declare-fun var2589!val!1 () var2589)\n  ;; cardinality constraint:\n  (forall ((x var2589)) (or (= x var2589!val!0) (= x var2589!val!1)))\n  ;; -----------\n  (define-fun var2498 () var130\n    var897_access$000/1228673548)\n  (define-fun null-var2589 () var2589\n    var2589!val!1)\n  (define-fun var1405 () String\n    (String_valueOf/-333372740 var944))\n  (define-fun var3694 () var2589\n    var2589!val!0)\n  (define-fun null-var2579 () var2579\n    var2579!val!1)\n  (define-fun var2001 () var1006\n    (logger/-1834586017 var3694))\n  (define-fun var944 () var2579\n    var2579!val!0)\n  (define-fun var1405!1 () String\n    \"\")\n  (define-fun var2498!1 () var130\n    var130!val!0)\n  (define-fun var2001!1 () var1006\n    var1006!val!0)\n  (define-fun var897_access$000/1228673548 () var130\n    var130!val!0)\n  (define-fun logger/-1834586017 ((x!0 var2589)) var1006\n    var1006!val!0)\n  (define-fun var1006_info/848497154 ((x!0 var1006) (x!1 var130) (x!2 String)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var2579)) String\n    \"\")\n)\n(error \"line 33 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140955648,
            "run_time": 1.9042963981628418,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var944 () var2579 var2579!8)\r\n  (define-fun var3694 () var2589 var2589!6)\r\n  (define-fun null-var2579 () var2579 var2579!4)\r\n  (define-fun null-var2589 () var2589 var2589!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog",
            "r2 := @parameter0: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog: org.slf4j.Logger logger>",
            "$r4 = staticinvoke <org.apache.commons.logging.impl.Slf4jLogFactory: org.slf4j.Marker access$000()>()",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)",
            "interfaceinvoke $r1.<org.slf4j.Logger: void info(org.slf4j.Marker,java.lang.String)>($r4, $r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog__error__2096643283\\74.smt2",
        "z3": {
            "memory": 32067584,
            "run_time": 0.13936424255371094,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1498:\r\n  ;;   var1498!val!0 var1498!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1498!val!0 () var1498)\r\n  (declare-fun var1498!val!1 () var1498)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1498)) (or (= x var1498!val!0) (= x var1498!val!1)))\r\n  ;; -----------\r\n  ;; universe for var928:\r\n  ;;   var928!val!0 var928!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var928!val!0 () var928)\r\n  (declare-fun var928!val!1 () var928)\r\n  ;; cardinality constraint:\r\n  (forall ((x var928)) (or (= x var928!val!0) (= x var928!val!1)))\r\n  ;; -----------\r\n  (define-fun var1562 () var3351\r\n    (logger/-1834586017 var3935))\r\n  (define-fun var2567 () String\r\n    (String_valueOf/-333372740 var3081))\r\n  (define-fun var3935 () var928\r\n    var928!val!0)\r\n  (define-fun null-var1498 () var1498\r\n    var1498!val!1)\r\n  (define-fun var3081 () var1498\r\n    var1498!val!0)\r\n  (define-fun null-var928 () var928\r\n    var928!val!1)\r\n  (define-fun var1665 () var466\r\n    var2702_access$000/1228673548)\r\n  (define-fun var2702_access$000/1228673548 () var466\r\n    var466!val!0)\r\n  (define-fun var1562!1 () var3351\r\n    var3351!val!0)\r\n  (define-fun var2567!1 () String\r\n    \"\")\r\n  (define-fun var1665!1 () var466\r\n    var466!val!0)\r\n  (define-fun var3351_error/-294564686 ((x!0 var3351) (x!1 var466) (x!2 String)) void\r\n    void!val!0)\r\n  (define-fun logger/-1834586017 ((x!0 var928)) var3351\r\n    var3351!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var1498)) String\r\n    \"\")\r\n)\r\n(error \"line 33 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9920512,
            "run_time": 0.04679155349731445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var928 is 2\r\n; rep: (as @var928_0 var928)\r\n; rep: (as @var928_1 var928)\r\n; cardinality of var1498 is 2\r\n; rep: (as @var1498_0 var1498)\r\n; rep: (as @var1498_1 var1498)\r\n; cardinality of var3351 is 1\r\n; rep: (as @var3351_0 var3351)\r\n; cardinality of var466 is 1\r\n; rep: (as @var466_0 var466)\r\n; cardinality of var2702 is 1\r\n; rep: (as @var2702_0 var2702)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logger/-1834586017 ((BOUND_VARIABLE_444 var928)) var3351 (as @var3351_0 var3351))\r\n(define-fun var2702_access$000/1228673548 () var466 (as @var466_0 var466))\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_447 var1498)) String \"\")\r\n(define-fun var3351_error/-294564686 ((BOUND_VARIABLE_450 var3351) (BOUND_VARIABLE_451 var466) (BOUND_VARIABLE_452 String)) void (as @void_0 void))\r\n(define-fun null-var928 () var928 (as @var928_0 var928))\r\n(define-fun null-var1498 () var1498 (as @var1498_0 var1498))\r\n(define-fun var3935 () var928 (as @var928_1 var928))\r\n(define-fun var3081 () var1498 (as @var1498_1 var1498))\r\n(define-fun var1562!1 () var3351 (as @var3351_0 var3351))\r\n(define-fun var1665!1 () var466 (as @var466_0 var466))\r\n(define-fun var2567!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36175872,
            "run_time": 0.20080780982971191,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1498:\n  ;;   var1498!val!0 var1498!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1498!val!0 () var1498)\n  (declare-fun var1498!val!1 () var1498)\n  ;; cardinality constraint:\n  (forall ((x var1498)) (or (= x var1498!val!0) (= x var1498!val!1)))\n  ;; -----------\n  ;; universe for var928:\n  ;;   var928!val!0 var928!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var928!val!0 () var928)\n  (declare-fun var928!val!1 () var928)\n  ;; cardinality constraint:\n  (forall ((x var928)) (or (= x var928!val!0) (= x var928!val!1)))\n  ;; -----------\n  (define-fun var1562 () var3351\n    (logger/-1834586017 var3935))\n  (define-fun var2567 () String\n    (String_valueOf/-333372740 var3081))\n  (define-fun var3935 () var928\n    var928!val!0)\n  (define-fun null-var1498 () var1498\n    var1498!val!1)\n  (define-fun var3081 () var1498\n    var1498!val!0)\n  (define-fun null-var928 () var928\n    var928!val!1)\n  (define-fun var1665 () var466\n    var2702_access$000/1228673548)\n  (define-fun var2702_access$000/1228673548 () var466\n    var466!val!0)\n  (define-fun var1562!1 () var3351\n    var3351!val!0)\n  (define-fun var2567!1 () String\n    \"\")\n  (define-fun var1665!1 () var466\n    var466!val!0)\n  (define-fun var3351_error/-294564686 ((x!0 var3351) (x!1 var466) (x!2 String)) void\n    void!val!0)\n  (define-fun logger/-1834586017 ((x!0 var928)) var3351\n    var3351!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var1498)) String\n    \"\")\n)\n(error \"line 33 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140906496,
            "run_time": 2.013530969619751,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3081 () var1498 var1498!8)\r\n  (define-fun var3935 () var928 var928!6)\r\n  (define-fun null-var1498 () var1498 var1498!4)\r\n  (define-fun null-var928 () var928 var928!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog",
            "r2 := @parameter0: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog: org.slf4j.Logger logger>",
            "$r4 = staticinvoke <org.apache.commons.logging.impl.Slf4jLogFactory: org.slf4j.Marker access$000()>()",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)",
            "interfaceinvoke $r1.<org.slf4j.Logger: void error(org.slf4j.Marker,java.lang.String)>($r4, $r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLocationAwareLog__log__365271243\\283.smt2",
        "z3": {
            "memory": 31510528,
            "run_time": 0.22697973251342773,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var701:\r\n  ;;   var701!val!1 var701!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var701!val!1 () var701)\r\n  (declare-fun var701!val!0 () var701)\r\n  ;; cardinality constraint:\r\n  (forall ((x var701)) (or (= x var701!val!1) (= x var701!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1174:\r\n  ;;   var1174!val!0 var1174!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1174!val!0 () var1174)\r\n  (declare-fun var1174!val!1 () var1174)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1174)) (or (= x var1174!val!0) (= x var1174!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2650:\r\n  ;;   var2650!val!0 var2650!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2650!val!0 () var2650)\r\n  (declare-fun var2650!val!1 () var2650)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2650)) (or (= x var2650!val!0) (= x var2650!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var701 () var701\r\n    var701!val!1)\r\n  (define-fun null-var1174 () var1174\r\n    var1174!val!1)\r\n  (define-fun null-var2650 () var2650\r\n    var2650!val!1)\r\n  (define-fun var3055 () var2650\r\n    var2650!val!0)\r\n  (define-fun var3207 () String\r\n    (String_valueOf/-333372740 var3055))\r\n  (define-fun var1995 () var701\r\n    var701!val!0)\r\n  (define-fun var3866 () var3211\r\n    var2033_access$000/1228673548)\r\n  (define-fun var2194 () Int\r\n    1)\r\n  (define-fun var2392 () (Array Int var2650)\r\n    var2033_access$100/-1391000175)\r\n  (define-fun var2679 () var1174\r\n    var1174!val!0)\r\n  (define-fun var2494 () String\r\n    var1174-FQCN)\r\n  (define-fun var3105 () var2405\r\n    (logger/-276479584 var2679))\r\n  (define-fun null-Int () Int\r\n    0)\r\n  (define-fun var2033_access$000/1228673548 () var3211\r\n    var3211!val!0)\r\n  (define-fun var3207!1 () String\r\n    \"\")\r\n  (define-fun var1174-FQCN () String\r\n    \"\")\r\n  (define-fun var3105!1 () var2405\r\n    var2405!val!0)\r\n  (define-fun var2494!1 () String\r\n    \"\")\r\n  (define-fun var1995!1 () var701\r\n    var701!val!1)\r\n  (define-fun var3866!1 () var3211\r\n    var3211!val!0)\r\n  (define-fun var2194!1 () Int\r\n    0)\r\n  (define-fun var2033_access$100/-1391000175 () (Array Int var2650)\r\n    ((as const (Array Int var2650)) var2650!val!0))\r\n  (define-fun var2392!1 () (Array Int var2650)\r\n    ((as const (Array Int var2650)) var2650!val!0))\r\n  (define-fun logger/-276479584 ((x!0 var1174)) var2405\r\n    var2405!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var2650)) String\r\n    \"\")\r\n  (define-fun var2405_log/-1527886426 ((x!0 var2405)\r\n   (x!1 var3211)\r\n   (x!2 String)\r\n   (x!3 Int)\r\n   (x!4 String)\r\n   (x!5 (Array Int var2650))\r\n   (x!6 var701)) void\r\n    void!val!0)\r\n)\r\n(error \"line 48 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9920512,
            "run_time": 0.10874390602111816,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1174 is 2\r\n; rep: (as @var1174_0 var1174)\r\n; rep: (as @var1174_1 var1174)\r\n; cardinality of var2650 is 2\r\n; rep: (as @var2650_0 var2650)\r\n; rep: (as @var2650_1 var2650)\r\n; cardinality of var701 is 2\r\n; rep: (as @var701_0 var701)\r\n; rep: (as @var701_1 var701)\r\n; cardinality of var2405 is 1\r\n; rep: (as @var2405_0 var2405)\r\n; cardinality of var3211 is 1\r\n; rep: (as @var3211_0 var3211)\r\n; cardinality of var2033 is 1\r\n; rep: (as @var2033_0 var2033)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logger/-276479584 ((BOUND_VARIABLE_499 var1174)) var2405 (as @var2405_0 var2405))\r\n(define-fun var2033_access$000/1228673548 () var3211 (as @var3211_0 var3211))\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_502 var2650)) String \"\")\r\n(define-fun var2033_access$100/-1391000175 () (Array Int var2650) ((as const (Array Int var2650)) (as @var2650_0 var2650)))\r\n(define-fun var2405_log/-1527886426 ((BOUND_VARIABLE_507 var2405) (BOUND_VARIABLE_508 var3211) (BOUND_VARIABLE_509 String) (BOUND_VARIABLE_510 Int) (BOUND_VARIABLE_511 String) (BOUND_VARIABLE_512 (Array Int var2650)) (BOUND_VARIABLE_513 var701)) void (as @void_0 void))\r\n(define-fun null-var1174 () var1174 (as @var1174_0 var1174))\r\n(define-fun null-Int () Int (- 1))\r\n(define-fun null-var2650 () var2650 (as @var2650_0 var2650))\r\n(define-fun null-var701 () var701 (as @var701_0 var701))\r\n(define-fun var1174-FQCN () String \"\")\r\n(define-fun var2679 () var1174 (as @var1174_1 var1174))\r\n(define-fun var2194 () Int 0)\r\n(define-fun var3055 () var2650 (as @var2650_1 var2650))\r\n(define-fun var1995 () var701 (as @var701_1 var701))\r\n(define-fun var3105!1 () var2405 (as @var2405_0 var2405))\r\n(define-fun var3866!1 () var3211 (as @var3211_0 var3211))\r\n(define-fun var2494!1 () String \"\")\r\n(define-fun var2194!1 () Int 0)\r\n(define-fun var3207!1 () String \"\")\r\n(define-fun var2392!1 () (Array Int var2650) ((as const (Array Int var2650)) (as @var2650_0 var2650)))\r\n(define-fun var1995!1 () var701 (as @var701_0 var701))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36352000,
            "run_time": 0.18723583221435547,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var701:\n  ;;   var701!val!1 var701!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var701!val!1 () var701)\n  (declare-fun var701!val!0 () var701)\n  ;; cardinality constraint:\n  (forall ((x var701)) (or (= x var701!val!1) (= x var701!val!0)))\n  ;; -----------\n  ;; universe for var1174:\n  ;;   var1174!val!0 var1174!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1174!val!0 () var1174)\n  (declare-fun var1174!val!1 () var1174)\n  ;; cardinality constraint:\n  (forall ((x var1174)) (or (= x var1174!val!0) (= x var1174!val!1)))\n  ;; -----------\n  ;; universe for var2650:\n  ;;   var2650!val!0 var2650!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2650!val!0 () var2650)\n  (declare-fun var2650!val!1 () var2650)\n  ;; cardinality constraint:\n  (forall ((x var2650)) (or (= x var2650!val!0) (= x var2650!val!1)))\n  ;; -----------\n  (define-fun null-var701 () var701\n    var701!val!1)\n  (define-fun null-var1174 () var1174\n    var1174!val!1)\n  (define-fun null-var2650 () var2650\n    var2650!val!1)\n  (define-fun var3055 () var2650\n    var2650!val!0)\n  (define-fun var3105 () var2405\n    (logger/-276479584 var2679))\n  (define-fun var1995 () var701\n    var701!val!0)\n  (define-fun var2494 () String\n    var1174-FQCN)\n  (define-fun var2194 () Int\n    1)\n  (define-fun var2392 () (Array Int var2650)\n    var2033_access$100/-1391000175)\n  (define-fun var2679 () var1174\n    var1174!val!0)\n  (define-fun var3866 () var3211\n    var2033_access$000/1228673548)\n  (define-fun var3207 () String\n    (String_valueOf/-333372740 var3055))\n  (define-fun null-Int () Int\n    0)\n  (define-fun var2033_access$000/1228673548 () var3211\n    var3211!val!0)\n  (define-fun var3207!1 () String\n    \"\")\n  (define-fun var1174-FQCN () String\n    \"\")\n  (define-fun var3105!1 () var2405\n    var2405!val!0)\n  (define-fun var2494!1 () String\n    \"\")\n  (define-fun var1995!1 () var701\n    var701!val!1)\n  (define-fun var3866!1 () var3211\n    var3211!val!0)\n  (define-fun var2194!1 () Int\n    0)\n  (define-fun var2033_access$100/-1391000175 () (Array Int var2650)\n    ((as const (Array Int var2650)) var2650!val!0))\n  (define-fun var2392!1 () (Array Int var2650)\n    ((as const (Array Int var2650)) var2650!val!0))\n  (define-fun logger/-276479584 ((x!0 var1174)) var2405\n    var2405!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var2650)) String\n    \"\")\n  (define-fun var2405_log/-1527886426 ((x!0 var2405)\n   (x!1 var3211)\n   (x!2 String)\n   (x!3 Int)\n   (x!4 String)\n   (x!5 (Array Int var2650))\n   (x!6 var701)) void\n    void!val!0)\n)\n(error \"line 48 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166203392,
            "run_time": 1.980396032333374,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1995 () var701 var701!12)\r\n  (define-fun var3055 () var2650 var2650!10)\r\n  (define-fun var2194 () Int 1)\r\n  (define-fun var2679 () var1174 var1174!8)\r\n  (define-fun null-var701 () var701 var701!6)\r\n  (define-fun null-var2650 () var2650 var2650!4)\r\n  (define-fun null-Int () Int 0)\r\n  (define-fun null-var1174 () var1174 var1174!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 4,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLocationAwareLog",
            "i0 := @parameter0: int",
            "r2 := @parameter1: java.lang.Object",
            "r4 := @parameter2: java.lang.Throwable",
            "$r1 = r0.<org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLocationAwareLog: org.slf4j.spi.LocationAwareLogger logger>",
            "$r7 = staticinvoke <org.apache.commons.logging.impl.Slf4jLogFactory: org.slf4j.Marker access$000()>()",
            "$r3 = <org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLocationAwareLog: java.lang.String FQCN>",
            "$r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)",
            "$r5 = staticinvoke <org.apache.commons.logging.impl.Slf4jLogFactory: java.lang.Object[] access$100()>()",
            "interfaceinvoke $r1.<org.slf4j.spi.LocationAwareLogger: void log(org.slf4j.Marker,java.lang.String,int,java.lang.String,java.lang.Object[],java.lang.Throwable)>($r7, $r3, i0, $r6, $r5, r4)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog__trace__-957431114\\347.smt2",
        "z3": {
            "memory": 32002048,
            "run_time": 0.21340632438659668,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3975:\r\n  ;;   var3975!val!0 var3975!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3975!val!0 () var3975)\r\n  (declare-fun var3975!val!1 () var3975)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3975)) (or (= x var3975!val!0) (= x var3975!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2394:\r\n  ;;   var2394!val!1 var2394!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2394!val!1 () var2394)\r\n  (declare-fun var2394!val!0 () var2394)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2394)) (or (= x var2394!val!1) (= x var2394!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3807:\r\n  ;;   var3807!val!0 var3807!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3807!val!0 () var3807)\r\n  (declare-fun var3807!val!1 () var3807)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3807)) (or (= x var3807!val!0) (= x var3807!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var3807 () var3807\r\n    var3807!val!1)\r\n  (define-fun var58 () var3807\r\n    var3807!val!0)\r\n  (define-fun null-var2394 () var2394\r\n    var2394!val!1)\r\n  (define-fun var3959 () var1012\r\n    (logger/-1834586017 var1920))\r\n  (define-fun var1656 () var3975\r\n    var3975!val!0)\r\n  (define-fun var1920 () var2394\r\n    var2394!val!0)\r\n  (define-fun null-var3975 () var3975\r\n    var3975!val!1)\r\n  (define-fun var1798 () var123\r\n    var591_access$000/1228673548)\r\n  (define-fun var962 () String\r\n    (String_valueOf/-333372740 var58))\r\n  (define-fun var1798!1 () var123\r\n    var123!val!0)\r\n  (define-fun var1656!1 () var3975\r\n    var3975!val!0)\r\n  (define-fun var3959!1 () var1012\r\n    var1012!val!0)\r\n  (define-fun var591_access$000/1228673548 () var123\r\n    var123!val!0)\r\n  (define-fun var962!1 () String\r\n    \"\")\r\n  (define-fun var1012_trace/345901871 ((x!0 var1012)\r\n   (x!1 var123)\r\n   (x!2 String)\r\n   (x!3 var3975)) void\r\n    void!val!0)\r\n  (define-fun logger/-1834586017 ((x!0 var2394)) var1012\r\n    var1012!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var3807)) String\r\n    \"\")\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9949184,
            "run_time": 0.09335470199584961,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2394 is 2\r\n; rep: (as @var2394_0 var2394)\r\n; rep: (as @var2394_1 var2394)\r\n; cardinality of var3807 is 2\r\n; rep: (as @var3807_0 var3807)\r\n; rep: (as @var3807_1 var3807)\r\n; cardinality of var3975 is 2\r\n; rep: (as @var3975_0 var3975)\r\n; rep: (as @var3975_1 var3975)\r\n; cardinality of var1012 is 1\r\n; rep: (as @var1012_0 var1012)\r\n; cardinality of var123 is 1\r\n; rep: (as @var123_0 var123)\r\n; cardinality of var591 is 1\r\n; rep: (as @var591_0 var591)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logger/-1834586017 ((BOUND_VARIABLE_456 var2394)) var1012 (as @var1012_0 var1012))\r\n(define-fun var591_access$000/1228673548 () var123 (as @var123_0 var123))\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_459 var3807)) String \"\")\r\n(define-fun var1012_trace/345901871 ((BOUND_VARIABLE_462 var1012) (BOUND_VARIABLE_463 var123) (BOUND_VARIABLE_464 String) (BOUND_VARIABLE_465 var3975)) void (as @void_0 void))\r\n(define-fun null-var2394 () var2394 (as @var2394_0 var2394))\r\n(define-fun null-var3807 () var3807 (as @var3807_0 var3807))\r\n(define-fun null-var3975 () var3975 (as @var3975_0 var3975))\r\n(define-fun var1920 () var2394 (as @var2394_1 var2394))\r\n(define-fun var58 () var3807 (as @var3807_1 var3807))\r\n(define-fun var1656 () var3975 (as @var3975_1 var3975))\r\n(define-fun var3959!1 () var1012 (as @var1012_0 var1012))\r\n(define-fun var1798!1 () var123 (as @var123_0 var123))\r\n(define-fun var962!1 () String \"\")\r\n(define-fun var1656!1 () var3975 (as @var3975_0 var3975))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36229120,
            "run_time": 0.32857847213745117,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3975:\n  ;;   var3975!val!0 var3975!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3975!val!0 () var3975)\n  (declare-fun var3975!val!1 () var3975)\n  ;; cardinality constraint:\n  (forall ((x var3975)) (or (= x var3975!val!0) (= x var3975!val!1)))\n  ;; -----------\n  ;; universe for var2394:\n  ;;   var2394!val!1 var2394!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2394!val!1 () var2394)\n  (declare-fun var2394!val!0 () var2394)\n  ;; cardinality constraint:\n  (forall ((x var2394)) (or (= x var2394!val!1) (= x var2394!val!0)))\n  ;; -----------\n  ;; universe for var3807:\n  ;;   var3807!val!0 var3807!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3807!val!0 () var3807)\n  (declare-fun var3807!val!1 () var3807)\n  ;; cardinality constraint:\n  (forall ((x var3807)) (or (= x var3807!val!0) (= x var3807!val!1)))\n  ;; -----------\n  (define-fun null-var3807 () var3807\n    var3807!val!1)\n  (define-fun var58 () var3807\n    var3807!val!0)\n  (define-fun var962 () String\n    (String_valueOf/-333372740 var58))\n  (define-fun null-var2394 () var2394\n    var2394!val!1)\n  (define-fun var1656 () var3975\n    var3975!val!0)\n  (define-fun var1920 () var2394\n    var2394!val!0)\n  (define-fun null-var3975 () var3975\n    var3975!val!1)\n  (define-fun var3959 () var1012\n    (logger/-1834586017 var1920))\n  (define-fun var1798 () var123\n    var591_access$000/1228673548)\n  (define-fun var1798!1 () var123\n    var123!val!0)\n  (define-fun var1656!1 () var3975\n    var3975!val!0)\n  (define-fun var3959!1 () var1012\n    var1012!val!0)\n  (define-fun var591_access$000/1228673548 () var123\n    var123!val!0)\n  (define-fun var962!1 () String\n    \"\")\n  (define-fun var1012_trace/345901871 ((x!0 var1012)\n   (x!1 var123)\n   (x!2 String)\n   (x!3 var3975)) void\n    void!val!0)\n  (define-fun logger/-1834586017 ((x!0 var2394)) var1012\n    var1012!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var3807)) String\n    \"\")\n)\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155742208,
            "run_time": 1.80782151222229,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1656 () var3975 var3975!12)\r\n  (define-fun var58 () var3807 var3807!10)\r\n  (define-fun var1920 () var2394 var2394!8)\r\n  (define-fun null-var3975 () var3975 var3975!6)\r\n  (define-fun null-var3807 () var3807 var3807!4)\r\n  (define-fun null-var2394 () var2394 var2394!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog",
            "r2 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r1 = r0.<org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog: org.slf4j.Logger logger>",
            "$r5 = staticinvoke <org.apache.commons.logging.impl.Slf4jLogFactory: org.slf4j.Marker access$000()>()",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)",
            "interfaceinvoke $r1.<org.slf4j.Logger: void trace(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog__debug__-1933989400\\44.smt2",
        "z3": {
            "memory": 32006144,
            "run_time": 0.12689495086669922,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3749:\r\n  ;;   var3749!val!1 var3749!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3749!val!1 () var3749)\r\n  (declare-fun var3749!val!0 () var3749)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3749)) (or (= x var3749!val!1) (= x var3749!val!0)))\r\n  ;; -----------\r\n  ;; universe for var952:\r\n  ;;   var952!val!0 var952!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var952!val!0 () var952)\r\n  (declare-fun var952!val!1 () var952)\r\n  ;; cardinality constraint:\r\n  (forall ((x var952)) (or (= x var952!val!0) (= x var952!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3164:\r\n  ;;   var3164!val!1 var3164!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3164!val!1 () var3164)\r\n  (declare-fun var3164!val!0 () var3164)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3164)) (or (= x var3164!val!1) (= x var3164!val!0)))\r\n  ;; -----------\r\n  (define-fun var214 () String\r\n    (String_valueOf/-333372740 var2640))\r\n  (define-fun null-var952 () var952\r\n    var952!val!1)\r\n  (define-fun var2823 () var3749\r\n    var3749!val!0)\r\n  (define-fun null-var3164 () var3164\r\n    var3164!val!1)\r\n  (define-fun var2391 () var952\r\n    var952!val!0)\r\n  (define-fun var76 () var409\r\n    (logger/-1834586017 var2391))\r\n  (define-fun null-var3749 () var3749\r\n    var3749!val!1)\r\n  (define-fun var3641 () var1974\r\n    var790_access$000/1228673548)\r\n  (define-fun var2640 () var3164\r\n    var3164!val!0)\r\n  (define-fun var76!1 () var409\r\n    var409!val!0)\r\n  (define-fun var790_access$000/1228673548 () var1974\r\n    var1974!val!0)\r\n  (define-fun var2823!1 () var3749\r\n    var3749!val!1)\r\n  (define-fun var3641!1 () var1974\r\n    var1974!val!0)\r\n  (define-fun var214!1 () String\r\n    \"\")\r\n  (define-fun logger/-1834586017 ((x!0 var952)) var409\r\n    var409!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var3164)) String\r\n    \"\")\r\n  (define-fun var409_debug/1671179837 ((x!0 var409)\r\n   (x!1 var1974)\r\n   (x!2 String)\r\n   (x!3 var3749)) void\r\n    void!val!0)\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9838592,
            "run_time": 0.07776832580566406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var952 is 2\r\n; rep: (as @var952_0 var952)\r\n; rep: (as @var952_1 var952)\r\n; cardinality of var3164 is 2\r\n; rep: (as @var3164_0 var3164)\r\n; rep: (as @var3164_1 var3164)\r\n; cardinality of var3749 is 2\r\n; rep: (as @var3749_0 var3749)\r\n; rep: (as @var3749_1 var3749)\r\n; cardinality of var409 is 1\r\n; rep: (as @var409_0 var409)\r\n; cardinality of var1974 is 1\r\n; rep: (as @var1974_0 var1974)\r\n; cardinality of var790 is 1\r\n; rep: (as @var790_0 var790)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logger/-1834586017 ((BOUND_VARIABLE_456 var952)) var409 (as @var409_0 var409))\r\n(define-fun var790_access$000/1228673548 () var1974 (as @var1974_0 var1974))\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_459 var3164)) String \"\")\r\n(define-fun var409_debug/1671179837 ((BOUND_VARIABLE_462 var409) (BOUND_VARIABLE_463 var1974) (BOUND_VARIABLE_464 String) (BOUND_VARIABLE_465 var3749)) void (as @void_0 void))\r\n(define-fun null-var952 () var952 (as @var952_0 var952))\r\n(define-fun null-var3164 () var3164 (as @var3164_0 var3164))\r\n(define-fun null-var3749 () var3749 (as @var3749_0 var3749))\r\n(define-fun var2391 () var952 (as @var952_1 var952))\r\n(define-fun var2640 () var3164 (as @var3164_1 var3164))\r\n(define-fun var2823 () var3749 (as @var3749_1 var3749))\r\n(define-fun var76!1 () var409 (as @var409_0 var409))\r\n(define-fun var3641!1 () var1974 (as @var1974_0 var1974))\r\n(define-fun var214!1 () String \"\")\r\n(define-fun var2823!1 () var3749 (as @var3749_0 var3749))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36233216,
            "run_time": 0.18639111518859863,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3749:\n  ;;   var3749!val!1 var3749!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3749!val!1 () var3749)\n  (declare-fun var3749!val!0 () var3749)\n  ;; cardinality constraint:\n  (forall ((x var3749)) (or (= x var3749!val!1) (= x var3749!val!0)))\n  ;; -----------\n  ;; universe for var952:\n  ;;   var952!val!0 var952!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var952!val!0 () var952)\n  (declare-fun var952!val!1 () var952)\n  ;; cardinality constraint:\n  (forall ((x var952)) (or (= x var952!val!0) (= x var952!val!1)))\n  ;; -----------\n  ;; universe for var3164:\n  ;;   var3164!val!1 var3164!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3164!val!1 () var3164)\n  (declare-fun var3164!val!0 () var3164)\n  ;; cardinality constraint:\n  (forall ((x var3164)) (or (= x var3164!val!1) (= x var3164!val!0)))\n  ;; -----------\n  (define-fun null-var952 () var952\n    var952!val!1)\n  (define-fun var2823 () var3749\n    var3749!val!0)\n  (define-fun null-var3164 () var3164\n    var3164!val!1)\n  (define-fun var2391 () var952\n    var952!val!0)\n  (define-fun null-var3749 () var3749\n    var3749!val!1)\n  (define-fun var76 () var409\n    (logger/-1834586017 var2391))\n  (define-fun var3641 () var1974\n    var790_access$000/1228673548)\n  (define-fun var2640 () var3164\n    var3164!val!0)\n  (define-fun var214 () String\n    (String_valueOf/-333372740 var2640))\n  (define-fun var76!1 () var409\n    var409!val!0)\n  (define-fun var790_access$000/1228673548 () var1974\n    var1974!val!0)\n  (define-fun var2823!1 () var3749\n    var3749!val!1)\n  (define-fun var3641!1 () var1974\n    var1974!val!0)\n  (define-fun var214!1 () String\n    \"\")\n  (define-fun logger/-1834586017 ((x!0 var952)) var409\n    var409!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var3164)) String\n    \"\")\n  (define-fun var409_debug/1671179837 ((x!0 var409)\n   (x!1 var1974)\n   (x!2 String)\n   (x!3 var3749)) void\n    void!val!0)\n)\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 157667328,
            "run_time": 2.0764260292053223,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2823 () var3749 var3749!12)\r\n  (define-fun var2640 () var3164 var3164!10)\r\n  (define-fun var2391 () var952 var952!8)\r\n  (define-fun null-var3749 () var3749 var3749!6)\r\n  (define-fun null-var3164 () var3164 var3164!4)\r\n  (define-fun null-var952 () var952 var952!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog",
            "r2 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r1 = r0.<org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog: org.slf4j.Logger logger>",
            "$r5 = staticinvoke <org.apache.commons.logging.impl.Slf4jLogFactory: org.slf4j.Marker access$000()>()",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)",
            "interfaceinvoke $r1.<org.slf4j.Logger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog__warn__346005663\\388.smt2",
        "z3": {
            "memory": 32034816,
            "run_time": 0.13208889961242676,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3321:\r\n  ;;   var3321!val!0 var3321!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3321!val!0 () var3321)\r\n  (declare-fun var3321!val!1 () var3321)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3321)) (or (= x var3321!val!0) (= x var3321!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2402:\r\n  ;;   var2402!val!0 var2402!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2402!val!0 () var2402)\r\n  (declare-fun var2402!val!1 () var2402)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2402)) (or (= x var2402!val!0) (= x var2402!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2546:\r\n  ;;   var2546!val!0 var2546!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2546!val!0 () var2546)\r\n  (declare-fun var2546!val!1 () var2546)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2546)) (or (= x var2546!val!0) (= x var2546!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2402 () var2402\r\n    var2402!val!1)\r\n  (define-fun var157 () var3719\r\n    var1553_access$000/1228673548)\r\n  (define-fun null-var3321 () var3321\r\n    var3321!val!1)\r\n  (define-fun var2838 () var2402\r\n    var2402!val!0)\r\n  (define-fun var2354 () var3345\r\n    (logger/-1834586017 var2838))\r\n  (define-fun var2980 () var3321\r\n    var3321!val!0)\r\n  (define-fun null-var2546 () var2546\r\n    var2546!val!1)\r\n  (define-fun var3013 () var2546\r\n    var2546!val!0)\r\n  (define-fun var58 () String\r\n    (String_valueOf/-333372740 var2980))\r\n  (define-fun var2354!1 () var3345\r\n    var3345!val!0)\r\n  (define-fun var3013!1 () var2546\r\n    var2546!val!0)\r\n  (define-fun var58!1 () String\r\n    \"\")\r\n  (define-fun var1553_access$000/1228673548 () var3719\r\n    var3719!val!0)\r\n  (define-fun var157!1 () var3719\r\n    var3719!val!0)\r\n  (define-fun logger/-1834586017 ((x!0 var2402)) var3345\r\n    var3345!val!0)\r\n  (define-fun var3345_warn/2124317210 ((x!0 var3345)\r\n   (x!1 var3719)\r\n   (x!2 String)\r\n   (x!3 var2546)) void\r\n    void!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var3321)) String\r\n    \"\")\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11517952,
            "run_time": 0.17128348350524902,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2402 is 2\r\n; rep: (as @var2402_0 var2402)\r\n; rep: (as @var2402_1 var2402)\r\n; cardinality of var3321 is 2\r\n; rep: (as @var3321_0 var3321)\r\n; rep: (as @var3321_1 var3321)\r\n; cardinality of var2546 is 2\r\n; rep: (as @var2546_0 var2546)\r\n; rep: (as @var2546_1 var2546)\r\n; cardinality of var3345 is 1\r\n; rep: (as @var3345_0 var3345)\r\n; cardinality of var3719 is 1\r\n; rep: (as @var3719_0 var3719)\r\n; cardinality of var1553 is 1\r\n; rep: (as @var1553_0 var1553)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logger/-1834586017 ((BOUND_VARIABLE_456 var2402)) var3345 (as @var3345_0 var3345))\r\n(define-fun var1553_access$000/1228673548 () var3719 (as @var3719_0 var3719))\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_459 var3321)) String \"\")\r\n(define-fun var3345_warn/2124317210 ((BOUND_VARIABLE_462 var3345) (BOUND_VARIABLE_463 var3719) (BOUND_VARIABLE_464 String) (BOUND_VARIABLE_465 var2546)) void (as @void_0 void))\r\n(define-fun null-var2402 () var2402 (as @var2402_0 var2402))\r\n(define-fun null-var3321 () var3321 (as @var3321_0 var3321))\r\n(define-fun null-var2546 () var2546 (as @var2546_0 var2546))\r\n(define-fun var2838 () var2402 (as @var2402_1 var2402))\r\n(define-fun var2980 () var3321 (as @var3321_1 var3321))\r\n(define-fun var3013 () var2546 (as @var2546_1 var2546))\r\n(define-fun var2354!1 () var3345 (as @var3345_0 var3345))\r\n(define-fun var157!1 () var3719 (as @var3719_0 var3719))\r\n(define-fun var58!1 () String \"\")\r\n(define-fun var3013!1 () var2546 (as @var2546_0 var2546))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36192256,
            "run_time": 0.21889925003051758,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3321:\n  ;;   var3321!val!0 var3321!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3321!val!0 () var3321)\n  (declare-fun var3321!val!1 () var3321)\n  ;; cardinality constraint:\n  (forall ((x var3321)) (or (= x var3321!val!0) (= x var3321!val!1)))\n  ;; -----------\n  ;; universe for var2402:\n  ;;   var2402!val!0 var2402!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2402!val!0 () var2402)\n  (declare-fun var2402!val!1 () var2402)\n  ;; cardinality constraint:\n  (forall ((x var2402)) (or (= x var2402!val!0) (= x var2402!val!1)))\n  ;; -----------\n  ;; universe for var2546:\n  ;;   var2546!val!0 var2546!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2546!val!0 () var2546)\n  (declare-fun var2546!val!1 () var2546)\n  ;; cardinality constraint:\n  (forall ((x var2546)) (or (= x var2546!val!0) (= x var2546!val!1)))\n  ;; -----------\n  (define-fun null-var2402 () var2402\n    var2402!val!1)\n  (define-fun null-var3321 () var3321\n    var3321!val!1)\n  (define-fun var2838 () var2402\n    var2402!val!0)\n  (define-fun var157 () var3719\n    var1553_access$000/1228673548)\n  (define-fun var2980 () var3321\n    var3321!val!0)\n  (define-fun var58 () String\n    (String_valueOf/-333372740 var2980))\n  (define-fun null-var2546 () var2546\n    var2546!val!1)\n  (define-fun var3013 () var2546\n    var2546!val!0)\n  (define-fun var2354 () var3345\n    (logger/-1834586017 var2838))\n  (define-fun var2354!1 () var3345\n    var3345!val!0)\n  (define-fun var3013!1 () var2546\n    var2546!val!0)\n  (define-fun var58!1 () String\n    \"\")\n  (define-fun var1553_access$000/1228673548 () var3719\n    var3719!val!0)\n  (define-fun var157!1 () var3719\n    var3719!val!0)\n  (define-fun logger/-1834586017 ((x!0 var2402)) var3345\n    var3345!val!0)\n  (define-fun var3345_warn/2124317210 ((x!0 var3345)\n   (x!1 var3719)\n   (x!2 String)\n   (x!3 var2546)) void\n    void!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var3321)) String\n    \"\")\n)\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 156188672,
            "run_time": 1.8244411945343018,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3013 () var2546 var2546!12)\r\n  (define-fun var2980 () var3321 var3321!10)\r\n  (define-fun var2838 () var2402 var2402!8)\r\n  (define-fun null-var2546 () var2546 var2546!6)\r\n  (define-fun null-var3321 () var3321 var3321!4)\r\n  (define-fun null-var2402 () var2402 var2402!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog",
            "r2 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r1 = r0.<org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog: org.slf4j.Logger logger>",
            "$r5 = staticinvoke <org.apache.commons.logging.impl.Slf4jLogFactory: org.slf4j.Marker access$000()>()",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)",
            "interfaceinvoke $r1.<org.slf4j.Logger: void warn(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__implementsLogFactory__1510735642\\415.smt2",
        "z3": {
            "memory": 31531008,
            "run_time": 0.22232866287231445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1553:\r\n  ;;   var1553!val!1 var1553!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1553!val!1 () var1553)\r\n  (declare-fun var1553!val!0 () var1553)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1553)) (or (= x var1553!val!1) (= x var1553!val!0)))\r\n  ;; -----------\r\n  (define-fun var1946 () var1553\r\n    var1553!val!0)\r\n  (define-fun var3793 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var2923 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun null-var1553 () var1553\r\n    var1553!val!1)\r\n  (define-fun var2208 () String\r\n    \"\")\r\n  (define-fun var1531_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 26 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9920512,
            "run_time": 0.030425548553466797,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1553 is 2\r\n; rep: (as @var1553_0 var1553)\r\n; rep: (as @var1553_1 var1553)\r\n; cardinality of var1531 is 1\r\n; rep: (as @var1531_0 var1531)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var1531_logDiagnostic/1268238408 ((BOUND_VARIABLE_421 String)) void (as @void_0 void))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-var1553 () var1553 (as @var1553_0 var1553))\r\n(define-fun var3793 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var1946 () var1553 (as @var1553_1 var1553))\r\n(define-fun var2208 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36229120,
            "run_time": 0.1254277229309082,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  ;; universe for var1553:\n  ;;   var1553!val!1 var1553!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1553!val!1 () var1553)\n  (declare-fun var1553!val!0 () var1553)\n  ;; cardinality constraint:\n  (forall ((x var1553)) (or (= x var1553!val!1) (= x var1553!val!0)))\n  ;; -----------\n  (define-fun var1946 () var1553\n    var1553!val!0)\n  (define-fun var3793 () ClassObject\n    ClassObject!val!0)\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun null-var1553 () var1553\n    var1553!val!1)\n  (define-fun var2923 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var2208 () String\n    \"\")\n  (define-fun var1531_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 26 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 132136960,
            "run_time": 1.8859071731567383,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1946 () var1553 var1553!8)\r\n  (define-fun var3793 () ClassObject ClassObject!6)\r\n  (define-fun null-var1553 () var1553 var1553!4)\r\n  (define-fun null-ClassObject () ClassObject ClassObject!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 4,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Class",
            "z0 = 0",
            "if r0 == null goto return z0",
            "$r13 := @caughtexception",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>(\"[CUSTOM LOG FACTORY] LogFactory class cannot be loaded by the class loader which loaded the custom LogFactory implementation. Is the custom factory in the right class loader?\")",
            "return z0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__implementsLogFactory__1510735642\\402.smt2",
        "z3": {
            "memory": 32190464,
            "run_time": 0.3265953063964844,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2499:\r\n  ;;   var2499!val!1 var2499!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2499!val!1 () var2499)\r\n  (declare-fun var2499!val!0 () var2499)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2499)) (or (= x var2499!val!1) (= x var2499!val!0)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var2882 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var1811 () String\r\n    (getMessage/849299655 (cast-from-var2499-to-var455 var2963)))\r\n  (define-fun null-var2499 () var2499\r\n    var2499!val!1)\r\n  (define-fun var662 () String\r\n    String-init)\r\n  (define-fun var2107 () String\r\n    (str.++ var662!1\r\n        \"[CUSTOM LOG FACTORY] SecurityException caught trying to determine whether the compatibility was caused by a class loader conflict: \"))\r\n  (define-fun var2117 () String\r\n    (str.++ var662!1\r\n        \"[CUSTOM LOG FACTORY] SecurityException caught trying to determine whether the compatibility was caused by a class loader conflict: \"\r\n        (getMessage/849299655 (cast-from-var2499-to-var455 var2963))))\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var2106 () String\r\n    (str.++ var662!1\r\n        \"[CUSTOM LOG FACTORY] SecurityException caught trying to determine whether the compatibility was caused by a class loader conflict: \"\r\n        (getMessage/849299655 (cast-from-var2499-to-var455 var2963))))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1684 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var2963 () var2499\r\n    var2499!val!0)\r\n  (define-fun var662!2 () String\r\n    \"[CUSTOM LOG FACTORY] SecurityException caught trying to determine whether the compatibility was caused by a class loader conflict: \")\r\n  (define-fun var2107!1 () String\r\n    \"[CUSTOM LOG FACTORY] SecurityException caught trying to determine whether the compatibility was caused by a class loader conflict: \")\r\n  (define-fun var662!1 () String\r\n    \"\")\r\n  (define-fun var2117!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var2499-to-var455 ((x!0 var2499)) var455\r\n    var455!val!0)\r\n  (define-fun getMessage/849299655 ((x!0 var455)) String\r\n    \"\")\r\n  (define-fun var3858_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 12890112,
            "run_time": 0.04530024528503418,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2499 is 2\r\n; rep: (as @var2499_0 var2499)\r\n; rep: (as @var2499_1 var2499)\r\n; cardinality of var455 is 1\r\n; rep: (as @var455_0 var455)\r\n; cardinality of var3858 is 1\r\n; rep: (as @var3858_0 var3858)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getMessage/849299655 ((BOUND_VARIABLE_525 var455)) String \"\")\r\n(define-fun cast-from-var2499-to-var455 ((BOUND_VARIABLE_528 var2499)) var455 (as @var455_0 var455))\r\n(define-fun var3858_logDiagnostic/1268238408 ((BOUND_VARIABLE_531 String)) void (as @void_0 void))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-var2499 () var2499 (as @var2499_0 var2499))\r\n(define-fun var1684 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var2963 () var2499 (as @var2499_1 var2499))\r\n(define-fun var662!1 () String \"\")\r\n(define-fun var662!2 () String \"[CUSTOM LOG FACTORY] SecurityException caught trying to determine whether the compatibility was caused by a class loader conflict: \")\r\n(define-fun var2107!1 () String \"[CUSTOM LOG FACTORY] SecurityException caught trying to determine whether the compatibility was caused by a class loader conflict: \")\r\n(define-fun var2117!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36311040,
            "run_time": 0.15488386154174805,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2499:\n  ;;   var2499!val!1 var2499!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2499!val!1 () var2499)\n  (declare-fun var2499!val!0 () var2499)\n  ;; cardinality constraint:\n  (forall ((x var2499)) (or (= x var2499!val!1) (= x var2499!val!0)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  (define-fun null-var2499 () var2499\n    var2499!val!1)\n  (define-fun var2117 () String\n    (str.++ var662!1\n        \"[CUSTOM LOG FACTORY] SecurityException caught trying to determine whether the compatibility was caused by a class loader conflict: \"\n        (getMessage/849299655 (cast-from-var2499-to-var455 var2963))))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2106 () String\n    (str.++ var662!1\n        \"[CUSTOM LOG FACTORY] SecurityException caught trying to determine whether the compatibility was caused by a class loader conflict: \"\n        (getMessage/849299655 (cast-from-var2499-to-var455 var2963))))\n  (define-fun var2882 () Bool\n    (ite (= 1 0) true false))\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var1684 () ClassObject\n    ClassObject!val!0)\n  (define-fun var1811 () String\n    (getMessage/849299655 (cast-from-var2499-to-var455 var2963)))\n  (define-fun var2963 () var2499\n    var2499!val!0)\n  (define-fun var2107 () String\n    (str.++ var662!1\n        \"[CUSTOM LOG FACTORY] SecurityException caught trying to determine whether the compatibility was caused by a class loader conflict: \"))\n  (define-fun var662 () String\n    String-init)\n  (define-fun var662!2 () String\n    \"[CUSTOM LOG FACTORY] SecurityException caught trying to determine whether the compatibility was caused by a class loader conflict: \")\n  (define-fun var2107!1 () String\n    \"[CUSTOM LOG FACTORY] SecurityException caught trying to determine whether the compatibility was caused by a class loader conflict: \")\n  (define-fun var662!1 () String\n    \"\")\n  (define-fun var2117!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun cast-from-var2499-to-var455 ((x!0 var2499)) var455\n    var455!val!0)\n  (define-fun getMessage/849299655 ((x!0 var455)) String\n    \"\")\n  (define-fun var3858_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173985792,
            "run_time": 2.259003162384033,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: ClassObject/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__implementsLogFactory__1510735642\\402.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2107!1 =\r\n     concat(\"[CUSTOM LOG FACTORY] SecurityException caught trying to determine whether the compatibility was caused by a class loader conflict: \", all_23_2)\r\n\r\n1724ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Class",
            "z0 = 0",
            "if r0 == null goto return z0",
            "$r20 := @caughtexception",
            "$r21 = new java.lang.StringBuilder",
            "specialinvoke $r21.<java.lang.StringBuilder: void <init>()>()",
            "$r23 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[CUSTOM LOG FACTORY] SecurityException caught trying to determine whether the compatibility was caused by a class loader conflict: \")",
            "$r22 = virtualinvoke $r20.<java.lang.SecurityException: java.lang.String getMessage()>()",
            "$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r22)",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r25)",
            "goto [?= return z0]",
            "return z0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__isClassAvailable__-2047104833\\444.smt2",
        "z3": {
            "memory": 31846400,
            "run_time": 0.1583843231201172,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2174:\r\n  ;;   var2174!val!0 var2174!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2174!val!0 () var2174)\r\n  (declare-fun var2174!val!1 () var2174)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2174)) (or (= x var2174!val!0) (= x var2174!val!1)))\r\n  ;; -----------\r\n  (define-fun var732 () var2174\r\n    (getClassLoader/-563698447 var513!class))\r\n  (define-fun var1527 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var3571 () ClassObject\r\n    var513!class)\r\n  (define-fun var699 () String\r\n    (str.++ var1527!1\r\n        \"Checking if class '\"\r\n        var973\r\n        \"' is available in class loader \"\r\n        (var513_objectId/1952731062\r\n          (cast-from-var2174-to-var683 (getClassLoader/-563698447 var513!class)))))\r\n  (define-fun var2555 () String\r\n    (str.++ var1527!1 \"Checking if class '\" var973))\r\n  (define-fun var3422 () String\r\n    (str.++ var1527!1 \"Checking if class '\"))\r\n  (define-fun var3719 () String\r\n    (str.++ var1527!1\r\n        \"Checking if class '\"\r\n        var973\r\n        \"' is available in class loader \"\r\n        (var513_objectId/1952731062\r\n          (cast-from-var2174-to-var683 (getClassLoader/-563698447 var513!class)))))\r\n  (define-fun var2985 () var2174\r\n    var2174!val!0)\r\n  (define-fun var689 () String\r\n    (str.++ var1527!1\r\n        \"Checking if class '\"\r\n        var973\r\n        \"' is available in class loader \"))\r\n  (define-fun null-var2174 () var2174\r\n    var2174!val!1)\r\n  (define-fun var2029 () String\r\n    (var513_objectId/1952731062\r\n  (cast-from-var2174-to-var683 (getClassLoader/-563698447 var513!class))))\r\n  (define-fun var973 () String\r\n    \"\")\r\n  (define-fun var2555!1 () String\r\n    \"Checking if class '' is available in class loader \")\r\n  (define-fun var3422!1 () String\r\n    \"Checking if class '\")\r\n  (define-fun var513!class () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var689!1 () String\r\n    \"Checking if class '' is available in class loader \")\r\n  (define-fun var1527!2 () String\r\n    \"Checking if class '\")\r\n  (define-fun var1527!1 () String\r\n    \"\")\r\n  (define-fun var699!1 () String\r\n    \"\")\r\n  (define-fun var2985!1 () var2174\r\n    var2174!val!0)\r\n  (define-fun var430 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var973!1 () String\r\n    \"\")\r\n  (define-fun getClassLoader/-563698447 ((x!0 ClassObject)) var2174\r\n    var2174!val!0)\r\n  (define-fun cast-from-var2174-to-var683 ((x!0 var2174)) var683\r\n    var683!val!0)\r\n  (define-fun var513_objectId/1952731062 ((x!0 var683)) String\r\n    \"\")\r\n  (define-fun var513_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n  (define-fun ClassObject_forName/696536127 ((x!0 String)\r\n   (x!1 Bool)\r\n   (x!2 var2174)) ClassObject\r\n    ClassObject!val!0)\r\n)\r\n(error \"line 67 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9912320,
            "run_time": 0.03190970420837402,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3439 is 1\r\n; rep: (as @var3439_0 var3439)\r\n; cardinality of var2174 is 2\r\n; rep: (as @var2174_0 var2174)\r\n; rep: (as @var2174_1 var2174)\r\n; cardinality of var513 is 1\r\n; rep: (as @var513_0 var513)\r\n; cardinality of var683 is 1\r\n; rep: (as @var683_0 var683)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var513!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getClassLoader/-563698447 ((BOUND_VARIABLE_671 ClassObject)) var2174 (as @var2174_0 var2174))\r\n(define-fun String-init () String \"\")\r\n(define-fun var513_objectId/1952731062 ((BOUND_VARIABLE_674 var683)) String \"\")\r\n(define-fun cast-from-var2174-to-var683 ((BOUND_VARIABLE_677 var2174)) var683 (as @var683_0 var683))\r\n(define-fun var513_logDiagnostic/1268238408 ((BOUND_VARIABLE_680 String)) void (as @void_0 void))\r\n(define-fun ClassObject_forName/696536127 ((BOUND_VARIABLE_683 String) (BOUND_VARIABLE_684 Bool) (BOUND_VARIABLE_685 var2174)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var2174 () var2174 (as @var2174_0 var2174))\r\n(define-fun var973 () String \"\")\r\n(define-fun var2985 () var2174 (as @var2174_1 var2174))\r\n(define-fun var1527!1 () String \"\")\r\n(define-fun var1527!2 () String \"Checking if class '\")\r\n(define-fun var3422!1 () String \"Checking if class '\")\r\n(define-fun var2555!1 () String \"Checking if class '' is available in class loader \")\r\n(define-fun var689!1 () String \"Checking if class '' is available in class loader \")\r\n(define-fun var699!1 () String \"\")\r\n(define-fun var973!1 () String \"\")\r\n(define-fun var430 () Int 0)\r\n(define-fun var2985!1 () var2174 (as @var2174_0 var2174))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36880384,
            "run_time": 0.14108490943908691,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2174:\n  ;;   var2174!val!0 var2174!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2174!val!0 () var2174)\n  (declare-fun var2174!val!1 () var2174)\n  ;; cardinality constraint:\n  (forall ((x var2174)) (or (= x var2174!val!0) (= x var2174!val!1)))\n  ;; -----------\n  (define-fun var1527!1 () String\n    \"\")\n  (define-fun var1527!2 () String\n    \"Checking if class '\")\n  (define-fun var689!1 () String\n    \"Checking if class '\\u{0}\\u{0}' is available in class loader \")\n  (define-fun var513!class () ClassObject\n    ClassObject!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3422!1 () String\n    \"Checking if class '\\u{0}\\u{0}\")\n  (define-fun var2555!1 () String\n    \"Checking if class '\\u{0}\\u{0}' is available in class loader \")\n  (define-fun var2555 () String\n    (str.++ var1527!1 \"Checking if class '\" var973))\n  (define-fun var699 () String\n    (str.++ var1527!1\n        \"Checking if class '\"\n        var973\n        \"' is available in class loader \"\n        (var513_objectId/1952731062\n          (cast-from-var2174-to-var683 (getClassLoader/-563698447 var513!class)))))\n  (define-fun var3422 () String\n    (str.++ var1527!1 \"Checking if class '\"))\n  (define-fun var1527 () String\n    String-init)\n  (define-fun var732 () var2174\n    (getClassLoader/-563698447 var513!class))\n  (define-fun var973 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2029 () String\n    (var513_objectId/1952731062\n  (cast-from-var2174-to-var683 (getClassLoader/-563698447 var513!class))))\n  (define-fun var2985 () var2174\n    var2174!val!0)\n  (define-fun null-var2174 () var2174\n    var2174!val!1)\n  (define-fun var689 () String\n    (str.++ var1527!1\n        \"Checking if class '\"\n        var973\n        \"' is available in class loader \"))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3571 () ClassObject\n    var513!class)\n  (define-fun var3719 () String\n    (str.++ var1527!1\n        \"Checking if class '\"\n        var973\n        \"' is available in class loader \"\n        (var513_objectId/1952731062\n          (cast-from-var2174-to-var683 (getClassLoader/-563698447 var513!class)))))\n  (define-fun var699!1 () String\n    \"\")\n  (define-fun var2985!1 () var2174\n    var2174!val!0)\n  (define-fun var430 () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var973!1 () String\n    \"\")\n  (define-fun getClassLoader/-563698447 ((x!0 ClassObject)) var2174\n    var2174!val!0)\n  (define-fun cast-from-var2174-to-var683 ((x!0 var2174)) var683\n    var683!val!0)\n  (define-fun var513_objectId/1952731062 ((x!0 var683)) String\n    \"\")\n  (define-fun var513_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n  (define-fun ClassObject_forName/696536127 ((x!0 String)\n   (x!1 Bool)\n   (x!2 var2174)) ClassObject\n    ClassObject!val!0)\n)\n(error \"line 67 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165330944,
            "run_time": 2.503837823867798,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2174/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__isClassAvailable__-2047104833\\444.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2555!1 =\r\n     concat(all_32_3, \"\\u{0}27 is available in class loader \")\r\n   var689!1 =\r\n     concat(all_29_5, all_29_2)\r\n   var3422!1 =\r\n     concat(\"Checking if class \\u{0}27\", var973)\r\n   all_29_5 =\r\n     concat(all_47_3, \"\\u{0}27 is available in class loader \")\r\n   all_32_3 =\r\n     concat(\"Checking if class \\u{0}27\", var973)\r\n   all_47_3 =\r\n     concat(\"Checking if class \\u{0}27\", var973)\r\n\r\n1893ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r3 := @parameter0: java.lang.String",
            "r10 := @parameter1: java.lang.ClassLoader",
            "$r0 = class \"Lorg/apache/commons/logging/LogFactory;\"",
            "r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Checking if class \\'\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is available in class loader \")",
            "$r6 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r1)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)",
            "staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r3, 1, r10)",
            "return 1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__lambda$getProperties$0__-857033723\\577.smt2",
        "z3": {
            "memory": 32411648,
            "run_time": 0.1713271141052246,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var42:\r\n  ;;   var42!val!1 var42!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var42!val!1 () var42)\r\n  (declare-fun var42!val!0 () var42)\r\n  ;; cardinality constraint:\r\n  (forall ((x var42)) (or (= x var42!val!1) (= x var42!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1853:\r\n  ;;   var1853!val!0 var1853!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1853!val!0 () var1853)\r\n  (declare-fun var1853!val!1 () var1853)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1853)) (or (= x var1853!val!0) (= x var1853!val!1)))\r\n  ;; -----------\r\n  (define-fun var1205 () var1853\r\n    var1853!val!0)\r\n  (define-fun var2646 () String\r\n    (append/-1031950772\r\n  (str.++ var124!1 \"Unable to read URL \")\r\n  (cast-from-var42-to-var2791 var347)))\r\n  (define-fun var161 () String\r\n    (append/-1031950772\r\n  (str.++ var124!1 \"Unable to read URL \")\r\n  (cast-from-var42-to-var2791 var347)))\r\n  (define-fun null-var1853 () var1853\r\n    var1853!val!1)\r\n  (define-fun var347 () var42\r\n    var42!val!0)\r\n  (define-fun var849 () String\r\n    (str.++ var124!1 \"Unable to read URL \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2462 () Bool\r\n    var894_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var124 () String\r\n    String-init)\r\n  (define-fun null-var42 () var42\r\n    var42!val!1)\r\n  (define-fun var849!1 () String\r\n    \"Unable to read URL \")\r\n  (define-fun var894_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var124!2 () String\r\n    \"Unable to read URL \")\r\n  (define-fun var124!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var161!1 () String\r\n    \"\")\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2791)) String\r\n    \"\")\r\n  (define-fun var894_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var42-to-var2791 ((x!0 var42)) var2791\r\n    var2791!val!0)\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13488128,
            "run_time": 0.04624319076538086,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var42 is 2\r\n; rep: (as @var42_0 var42)\r\n; rep: (as @var42_1 var42)\r\n; cardinality of var1853 is 2\r\n; rep: (as @var1853_0 var1853)\r\n; rep: (as @var1853_1 var1853)\r\n; cardinality of var894 is 1\r\n; rep: (as @var894_0 var894)\r\n; cardinality of var2791 is 1\r\n; rep: (as @var2791_0 var2791)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var894_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_941 String) (BOUND_VARIABLE_942 var2791)) String \"\")\r\n(define-fun cast-from-var42-to-var2791 ((BOUND_VARIABLE_945 var42)) var2791 (as @var2791_0 var2791))\r\n(define-fun var894_logDiagnostic/1268238408 ((BOUND_VARIABLE_948 String)) void (as @void_0 void))\r\n(define-fun null-var42 () var42 (as @var42_0 var42))\r\n(define-fun null-var1853 () var1853 (as @var1853_0 var1853))\r\n(define-fun var347 () var42 (as @var42_1 var42))\r\n(define-fun var1205 () var1853 (as @var1853_1 var1853))\r\n(define-fun var124!1 () String \"\")\r\n(define-fun var124!2 () String \"Unable to read URL \")\r\n(define-fun var849!1 () String \"Unable to read URL \")\r\n(define-fun var161!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36552704,
            "run_time": 0.12484049797058105,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var42:\n  ;;   var42!val!1 var42!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var42!val!1 () var42)\n  (declare-fun var42!val!0 () var42)\n  ;; cardinality constraint:\n  (forall ((x var42)) (or (= x var42!val!1) (= x var42!val!0)))\n  ;; -----------\n  ;; universe for var1853:\n  ;;   var1853!val!0 var1853!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1853!val!0 () var1853)\n  (declare-fun var1853!val!1 () var1853)\n  ;; cardinality constraint:\n  (forall ((x var1853)) (or (= x var1853!val!0) (= x var1853!val!1)))\n  ;; -----------\n  (define-fun var161 () String\n    (append/-1031950772\n  (str.++ var124!1 \"Unable to read URL \")\n  (cast-from-var42-to-var2791 var347)))\n  (define-fun var1205 () var1853\n    var1853!val!0)\n  (define-fun var849 () String\n    (str.++ var124!1 \"Unable to read URL \"))\n  (define-fun var124!1 () String\n    \"\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var1853 () var1853\n    var1853!val!1)\n  (define-fun var347 () var42\n    var42!val!0)\n  (define-fun var849!1 () String\n    \"Unable to read URL \")\n  (define-fun var124 () String\n    String-init)\n  (define-fun var2462 () Bool\n    var894_isDiagnosticsEnabled/-1004161365)\n  (define-fun null-var42 () var42\n    var42!val!1)\n  (define-fun var2646 () String\n    (append/-1031950772\n  (str.++ var124!1 \"Unable to read URL \")\n  (cast-from-var42-to-var2791 var347)))\n  (define-fun var894_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var124!2 () String\n    \"Unable to read URL \")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var161!1 () String\n    \"\")\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2791)) String\n    \"\")\n  (define-fun var894_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n  (define-fun cast-from-var42-to-var2791 ((x!0 var42)) var2791\n    var2791!val!0)\n)\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176193536,
            "run_time": 2.453216075897217,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var849!1 () String \"Unable to read URL \")\r\n  (define-fun var124!2 () String \"Unable to read URL \")\r\n  (define-fun var124!1 () String \"\")\r\n  (define-fun var1205 () var1853 var1853!46)\r\n  (define-fun var347 () var42 var42!44)\r\n  (define-fun null-var1853 () var1853 var1853!42)\r\n  (define-fun null-var42 () var42 var42!40)\r\n  (define-fun var2791!62 () var2791 (cast-from-var42-to-var2791 var42!44))\r\n  (define-fun var894_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2791)) String (ite (and (= x!0 \"Unable to read URL \") (= x!1 var2791!62)) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.net.URL",
            "$r2 := @caughtexception",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return null",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unable to read URL \")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r6)",
            "return null"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__lambda$getProperties$0__-857033723\\579.smt2",
        "z3": {
            "memory": 32313344,
            "run_time": 0.14751672744750977,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2952:\r\n  ;;   var2952!val!1 var2952!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2952!val!1 () var2952)\r\n  (declare-fun var2952!val!0 () var2952)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2952)) (or (= x var2952!val!1) (= x var2952!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3064:\r\n  ;;   var3064!val!0 var3064!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3064!val!0 () var3064)\r\n  (declare-fun var3064!val!1 () var3064)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3064)) (or (= x var3064!val!0) (= x var3064!val!1)))\r\n  ;; -----------\r\n  (define-fun var1996 () String\r\n    String-init)\r\n  (define-fun null-var3064 () var3064\r\n    var3064!val!1)\r\n  (define-fun var2248 () Bool\r\n    var1747_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var2429 () String\r\n    (append/-1031950772\r\n  (str.++ var1996!1 \"Unable to read URL \")\r\n  (cast-from-var2952-to-var2673 var1251)))\r\n  (define-fun var1251 () var2952\r\n    var2952!val!0)\r\n  (define-fun null-var2952 () var2952\r\n    var2952!val!1)\r\n  (define-fun var1352 () var3064\r\n    var3064!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1925 () var2233\r\n    (openConnection/1646032697 var1251))\r\n  (define-fun var132 () String\r\n    (append/-1031950772\r\n  (str.++ var1996!1 \"Unable to read URL \")\r\n  (cast-from-var2952-to-var2673 var1251)))\r\n  (define-fun var2546 () String\r\n    (str.++ var1996!1 \"Unable to read URL \"))\r\n  (define-fun var2546!1 () String\r\n    \"Unable to read URL \")\r\n  (define-fun var1996!2 () String\r\n    \"Unable to read URL \")\r\n  (define-fun var1996!1 () String\r\n    \"\")\r\n  (define-fun var1747_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var132!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2673)) String\r\n    \"\")\r\n  (define-fun openConnection/1646032697 ((x!0 var2952)) var2233\r\n    var2233!val!0)\r\n  (define-fun cast-from-var2952-to-var2673 ((x!0 var2952)) var2673\r\n    var2673!val!0)\r\n  (define-fun var1747_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 56 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13451264,
            "run_time": 0.04661107063293457,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2952 is 2\r\n; rep: (as @var2952_0 var2952)\r\n; rep: (as @var2952_1 var2952)\r\n; cardinality of var2233 is 1\r\n; rep: (as @var2233_0 var2233)\r\n; cardinality of var3064 is 2\r\n; rep: (as @var3064_0 var3064)\r\n; rep: (as @var3064_1 var3064)\r\n; cardinality of var1747 is 1\r\n; rep: (as @var1747_0 var1747)\r\n; cardinality of var2673 is 1\r\n; rep: (as @var2673_0 var2673)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun openConnection/1646032697 ((BOUND_VARIABLE_951 var2952)) var2233 (as @var2233_0 var2233))\r\n(define-fun var1747_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_954 String) (BOUND_VARIABLE_955 var2673)) String \"\")\r\n(define-fun cast-from-var2952-to-var2673 ((BOUND_VARIABLE_958 var2952)) var2673 (as @var2673_0 var2673))\r\n(define-fun var1747_logDiagnostic/1268238408 ((BOUND_VARIABLE_961 String)) void (as @void_0 void))\r\n(define-fun null-var2952 () var2952 (as @var2952_0 var2952))\r\n(define-fun null-var3064 () var3064 (as @var3064_0 var3064))\r\n(define-fun var1251 () var2952 (as @var2952_1 var2952))\r\n(define-fun var1352 () var3064 (as @var3064_1 var3064))\r\n(define-fun var1996!1 () String \"\")\r\n(define-fun var1996!2 () String \"Unable to read URL \")\r\n(define-fun var2546!1 () String \"Unable to read URL \")\r\n(define-fun var132!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37044224,
            "run_time": 0.12454724311828613,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2952:\n  ;;   var2952!val!1 var2952!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2952!val!1 () var2952)\n  (declare-fun var2952!val!0 () var2952)\n  ;; cardinality constraint:\n  (forall ((x var2952)) (or (= x var2952!val!1) (= x var2952!val!0)))\n  ;; -----------\n  ;; universe for var3064:\n  ;;   var3064!val!0 var3064!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3064!val!0 () var3064)\n  (declare-fun var3064!val!1 () var3064)\n  ;; cardinality constraint:\n  (forall ((x var3064)) (or (= x var3064!val!0) (= x var3064!val!1)))\n  ;; -----------\n  (define-fun null-var3064 () var3064\n    var3064!val!1)\n  (define-fun var1747_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var2429 () String\n    (append/-1031950772\n  (str.++ var1996!1 \"Unable to read URL \")\n  (cast-from-var2952-to-var2673 var1251)))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var132 () String\n    (append/-1031950772\n  (str.++ var1996!1 \"Unable to read URL \")\n  (cast-from-var2952-to-var2673 var1251)))\n  (define-fun var1251 () var2952\n    var2952!val!0)\n  (define-fun null-var2952 () var2952\n    var2952!val!1)\n  (define-fun var1352 () var3064\n    var3064!val!0)\n  (define-fun var2546!1 () String\n    \"Unable to read URL \")\n  (define-fun var2546 () String\n    (str.++ var1996!1 \"Unable to read URL \"))\n  (define-fun var2248 () Bool\n    var1747_isDiagnosticsEnabled/-1004161365)\n  (define-fun var1996 () String\n    String-init)\n  (define-fun var1925 () var2233\n    (openConnection/1646032697 var1251))\n  (define-fun var1996!2 () String\n    \"Unable to read URL \")\n  (define-fun var1996!1 () String\n    \"\")\n  (define-fun var132!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2673)) String\n    \"\")\n  (define-fun openConnection/1646032697 ((x!0 var2952)) var2233\n    var2233!val!0)\n  (define-fun cast-from-var2952-to-var2673 ((x!0 var2952)) var2673\n    var2673!val!0)\n  (define-fun var1747_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 56 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 174002176,
            "run_time": 2.4409992694854736,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2546!1 () String \"Unable to read URL \")\r\n  (define-fun var1996!2 () String \"Unable to read URL \")\r\n  (define-fun var1996!1 () String \"\")\r\n  (define-fun var1352 () var3064 var3064!46)\r\n  (define-fun var1251 () var2952 var2952!44)\r\n  (define-fun null-var3064 () var3064 var3064!42)\r\n  (define-fun null-var2952 () var2952 var2952!40)\r\n  (define-fun var2673!64 () var2673 (cast-from-var2952-to-var2673 var2952!44))\r\n  (define-fun var1747_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var2673)) String (ite (and (= x!0 \"Unable to read URL \") (= x!1 var2673!64)) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.net.URL",
            "r14 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>()",
            "$r2 := @caughtexception",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return null",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unable to read URL \")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r6)",
            "return null"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog__trace__-137702794\\323.smt2",
        "z3": {
            "memory": 31612928,
            "run_time": 0.13472557067871094,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2194:\r\n  ;;   var2194!val!1 var2194!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2194!val!1 () var2194)\r\n  (declare-fun var2194!val!0 () var2194)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2194)) (or (= x var2194!val!1) (= x var2194!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1590:\r\n  ;;   var1590!val!1 var1590!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1590!val!1 () var1590)\r\n  (declare-fun var1590!val!0 () var1590)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1590)) (or (= x var1590!val!1) (= x var1590!val!0)))\r\n  ;; -----------\r\n  (define-fun null-var2194 () var2194\r\n    var2194!val!1)\r\n  (define-fun var828 () var1590\r\n    var1590!val!0)\r\n  (define-fun null-var1590 () var1590\r\n    var1590!val!1)\r\n  (define-fun var1558 () var2194\r\n    var2194!val!0)\r\n  (define-fun var868 () var618\r\n    (logger/-1834586017 var828))\r\n  (define-fun var2177 () var3616\r\n    var2585_access$000/1228673548)\r\n  (define-fun var1320 () String\r\n    (String_valueOf/-333372740 var1558))\r\n  (define-fun var1320!1 () String\r\n    \"\")\r\n  (define-fun var868!1 () var618\r\n    var618!val!0)\r\n  (define-fun var2177!1 () var3616\r\n    var3616!val!0)\r\n  (define-fun var2585_access$000/1228673548 () var3616\r\n    var3616!val!0)\r\n  (define-fun var618_trace/1130254703 ((x!0 var618) (x!1 var3616) (x!2 String)) void\r\n    void!val!0)\r\n  (define-fun logger/-1834586017 ((x!0 var1590)) var618\r\n    var618!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var2194)) String\r\n    \"\")\r\n)\r\n(error \"line 33 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10301440,
            "run_time": 0.03181576728820801,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1590 is 2\r\n; rep: (as @var1590_0 var1590)\r\n; rep: (as @var1590_1 var1590)\r\n; cardinality of var2194 is 2\r\n; rep: (as @var2194_0 var2194)\r\n; rep: (as @var2194_1 var2194)\r\n; cardinality of var618 is 1\r\n; rep: (as @var618_0 var618)\r\n; cardinality of var3616 is 1\r\n; rep: (as @var3616_0 var3616)\r\n; cardinality of var2585 is 1\r\n; rep: (as @var2585_0 var2585)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logger/-1834586017 ((BOUND_VARIABLE_444 var1590)) var618 (as @var618_0 var618))\r\n(define-fun var2585_access$000/1228673548 () var3616 (as @var3616_0 var3616))\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_447 var2194)) String \"\")\r\n(define-fun var618_trace/1130254703 ((BOUND_VARIABLE_450 var618) (BOUND_VARIABLE_451 var3616) (BOUND_VARIABLE_452 String)) void (as @void_0 void))\r\n(define-fun null-var1590 () var1590 (as @var1590_0 var1590))\r\n(define-fun null-var2194 () var2194 (as @var2194_0 var2194))\r\n(define-fun var828 () var1590 (as @var1590_1 var1590))\r\n(define-fun var1558 () var2194 (as @var2194_1 var2194))\r\n(define-fun var868!1 () var618 (as @var618_0 var618))\r\n(define-fun var2177!1 () var3616 (as @var3616_0 var3616))\r\n(define-fun var1320!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35594240,
            "run_time": 0.10875844955444336,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2194:\n  ;;   var2194!val!1 var2194!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2194!val!1 () var2194)\n  (declare-fun var2194!val!0 () var2194)\n  ;; cardinality constraint:\n  (forall ((x var2194)) (or (= x var2194!val!1) (= x var2194!val!0)))\n  ;; -----------\n  ;; universe for var1590:\n  ;;   var1590!val!1 var1590!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1590!val!1 () var1590)\n  (declare-fun var1590!val!0 () var1590)\n  ;; cardinality constraint:\n  (forall ((x var1590)) (or (= x var1590!val!1) (= x var1590!val!0)))\n  ;; -----------\n  (define-fun null-var2194 () var2194\n    var2194!val!1)\n  (define-fun var828 () var1590\n    var1590!val!0)\n  (define-fun null-var1590 () var1590\n    var1590!val!1)\n  (define-fun var1558 () var2194\n    var2194!val!0)\n  (define-fun var868 () var618\n    (logger/-1834586017 var828))\n  (define-fun var2177 () var3616\n    var2585_access$000/1228673548)\n  (define-fun var1320 () String\n    (String_valueOf/-333372740 var1558))\n  (define-fun var1320!1 () String\n    \"\")\n  (define-fun var868!1 () var618\n    var618!val!0)\n  (define-fun var2177!1 () var3616\n    var3616!val!0)\n  (define-fun var2585_access$000/1228673548 () var3616\n    var3616!val!0)\n  (define-fun var618_trace/1130254703 ((x!0 var618) (x!1 var3616) (x!2 String)) void\n    void!val!0)\n  (define-fun logger/-1834586017 ((x!0 var1590)) var618\n    var618!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var2194)) String\n    \"\")\n)\n(error \"line 33 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140435456,
            "run_time": 1.8002119064331055,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1558 () var2194 var2194!8)\r\n  (define-fun var828 () var1590 var1590!6)\r\n  (define-fun null-var2194 () var2194 var2194!4)\r\n  (define-fun null-var1590 () var1590 var1590!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog",
            "r2 := @parameter0: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog: org.slf4j.Logger logger>",
            "$r4 = staticinvoke <org.apache.commons.logging.impl.Slf4jLogFactory: org.slf4j.Marker access$000()>()",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)",
            "interfaceinvoke $r1.<org.slf4j.Logger: void trace(org.slf4j.Marker,java.lang.String)>($r4, $r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog__warn__1166868191\\369.smt2",
        "z3": {
            "memory": 31997952,
            "run_time": 0.10551309585571289,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var919:\r\n  ;;   var919!val!0 var919!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var919!val!0 () var919)\r\n  (declare-fun var919!val!1 () var919)\r\n  ;; cardinality constraint:\r\n  (forall ((x var919)) (or (= x var919!val!0) (= x var919!val!1)))\r\n  ;; -----------\r\n  ;; universe for var657:\r\n  ;;   var657!val!0 var657!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var657!val!0 () var657)\r\n  (declare-fun var657!val!1 () var657)\r\n  ;; cardinality constraint:\r\n  (forall ((x var657)) (or (= x var657!val!0) (= x var657!val!1)))\r\n  ;; -----------\r\n  (define-fun var2248 () var657\r\n    var657!val!0)\r\n  (define-fun null-var657 () var657\r\n    var657!val!1)\r\n  (define-fun var3363 () var985\r\n    var3954_access$000/1228673548)\r\n  (define-fun var1516 () var919\r\n    var919!val!0)\r\n  (define-fun var677 () String\r\n    (String_valueOf/-333372740 var1516))\r\n  (define-fun var3343 () var1025\r\n    (logger/-1834586017 var2248))\r\n  (define-fun null-var919 () var919\r\n    var919!val!1)\r\n  (define-fun var3954_access$000/1228673548 () var985\r\n    var985!val!0)\r\n  (define-fun var677!1 () String\r\n    \"\")\r\n  (define-fun var3363!1 () var985\r\n    var985!val!0)\r\n  (define-fun var3343!1 () var1025\r\n    var1025!val!0)\r\n  (define-fun logger/-1834586017 ((x!0 var657)) var1025\r\n    var1025!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var919)) String\r\n    \"\")\r\n  (define-fun var1025_warn/1029778394 ((x!0 var1025) (x!1 var985) (x!2 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 33 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10326016,
            "run_time": 0.030801773071289062,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var657 is 2\r\n; rep: (as @var657_0 var657)\r\n; rep: (as @var657_1 var657)\r\n; cardinality of var919 is 2\r\n; rep: (as @var919_0 var919)\r\n; rep: (as @var919_1 var919)\r\n; cardinality of var1025 is 1\r\n; rep: (as @var1025_0 var1025)\r\n; cardinality of var985 is 1\r\n; rep: (as @var985_0 var985)\r\n; cardinality of var3954 is 1\r\n; rep: (as @var3954_0 var3954)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logger/-1834586017 ((BOUND_VARIABLE_444 var657)) var1025 (as @var1025_0 var1025))\r\n(define-fun var3954_access$000/1228673548 () var985 (as @var985_0 var985))\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_447 var919)) String \"\")\r\n(define-fun var1025_warn/1029778394 ((BOUND_VARIABLE_450 var1025) (BOUND_VARIABLE_451 var985) (BOUND_VARIABLE_452 String)) void (as @void_0 void))\r\n(define-fun null-var657 () var657 (as @var657_0 var657))\r\n(define-fun null-var919 () var919 (as @var919_0 var919))\r\n(define-fun var2248 () var657 (as @var657_1 var657))\r\n(define-fun var1516 () var919 (as @var919_1 var919))\r\n(define-fun var3343!1 () var1025 (as @var1025_0 var1025))\r\n(define-fun var3363!1 () var985 (as @var985_0 var985))\r\n(define-fun var677!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36245504,
            "run_time": 0.13974261283874512,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var919:\n  ;;   var919!val!0 var919!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var919!val!0 () var919)\n  (declare-fun var919!val!1 () var919)\n  ;; cardinality constraint:\n  (forall ((x var919)) (or (= x var919!val!0) (= x var919!val!1)))\n  ;; -----------\n  ;; universe for var657:\n  ;;   var657!val!0 var657!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var657!val!0 () var657)\n  (declare-fun var657!val!1 () var657)\n  ;; cardinality constraint:\n  (forall ((x var657)) (or (= x var657!val!0) (= x var657!val!1)))\n  ;; -----------\n  (define-fun var2248 () var657\n    var657!val!0)\n  (define-fun null-var657 () var657\n    var657!val!1)\n  (define-fun var3343 () var1025\n    (logger/-1834586017 var2248))\n  (define-fun var1516 () var919\n    var919!val!0)\n  (define-fun var3363 () var985\n    var3954_access$000/1228673548)\n  (define-fun null-var919 () var919\n    var919!val!1)\n  (define-fun var677 () String\n    (String_valueOf/-333372740 var1516))\n  (define-fun var3954_access$000/1228673548 () var985\n    var985!val!0)\n  (define-fun var677!1 () String\n    \"\")\n  (define-fun var3363!1 () var985\n    var985!val!0)\n  (define-fun var3343!1 () var1025\n    var1025!val!0)\n  (define-fun logger/-1834586017 ((x!0 var657)) var1025\n    var1025!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var919)) String\n    \"\")\n  (define-fun var1025_warn/1029778394 ((x!0 var1025) (x!1 var985) (x!2 String)) void\n    void!val!0)\n)\n(error \"line 33 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140165120,
            "run_time": 1.7373957633972168,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1516 () var919 var919!8)\r\n  (define-fun var2248 () var657 var657!6)\r\n  (define-fun null-var919 () var919 var919!4)\r\n  (define-fun null-var657 () var657 var657!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog",
            "r2 := @parameter0: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog: org.slf4j.Logger logger>",
            "$r4 = staticinvoke <org.apache.commons.logging.impl.Slf4jLogFactory: org.slf4j.Marker access$000()>()",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)",
            "interfaceinvoke $r1.<org.slf4j.Logger: void warn(org.slf4j.Marker,java.lang.String)>($r4, $r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog__info__-1429524105\\188.smt2",
        "z3": {
            "memory": 31780864,
            "run_time": 0.10564303398132324,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2690:\r\n  ;;   var2690!val!0 var2690!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2690!val!0 () var2690)\r\n  (declare-fun var2690!val!1 () var2690)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2690)) (or (= x var2690!val!0) (= x var2690!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2960:\r\n  ;;   var2960!val!0 var2960!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2960!val!0 () var2960)\r\n  (declare-fun var2960!val!1 () var2960)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2960)) (or (= x var2960!val!0) (= x var2960!val!1)))\r\n  ;; -----------\r\n  ;; universe for var802:\r\n  ;;   var802!val!1 var802!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var802!val!1 () var802)\r\n  (declare-fun var802!val!0 () var802)\r\n  ;; cardinality constraint:\r\n  (forall ((x var802)) (or (= x var802!val!1) (= x var802!val!0)))\r\n  ;; -----------\r\n  (define-fun var3514 () String\r\n    (String_valueOf/-333372740 var3909))\r\n  (define-fun null-var802 () var802\r\n    var802!val!1)\r\n  (define-fun var3209 () var802\r\n    var802!val!0)\r\n  (define-fun null-var2690 () var2690\r\n    var2690!val!1)\r\n  (define-fun null-var2960 () var2960\r\n    var2960!val!1)\r\n  (define-fun var401 () var2960\r\n    var2960!val!0)\r\n  (define-fun var3696 () var548\r\n    (logger/-1834586017 var401))\r\n  (define-fun var2168 () var894\r\n    var1914_access$000/1228673548)\r\n  (define-fun var3909 () var2690\r\n    var2690!val!0)\r\n  (define-fun var3696!1 () var548\r\n    var548!val!0)\r\n  (define-fun var3209!1 () var802\r\n    var802!val!1)\r\n  (define-fun var3514!1 () String\r\n    \"\")\r\n  (define-fun var2168!1 () var894\r\n    var894!val!0)\r\n  (define-fun var1914_access$000/1228673548 () var894\r\n    var894!val!0)\r\n  (define-fun logger/-1834586017 ((x!0 var2960)) var548\r\n    var548!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var2690)) String\r\n    \"\")\r\n  (define-fun var548_info/-1910784958 ((x!0 var548)\r\n   (x!1 var894)\r\n   (x!2 String)\r\n   (x!3 var802)) void\r\n    void!val!0)\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10326016,
            "run_time": 0.07841706275939941,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2960 is 2\r\n; rep: (as @var2960_0 var2960)\r\n; rep: (as @var2960_1 var2960)\r\n; cardinality of var2690 is 2\r\n; rep: (as @var2690_0 var2690)\r\n; rep: (as @var2690_1 var2690)\r\n; cardinality of var802 is 2\r\n; rep: (as @var802_0 var802)\r\n; rep: (as @var802_1 var802)\r\n; cardinality of var548 is 1\r\n; rep: (as @var548_0 var548)\r\n; cardinality of var894 is 1\r\n; rep: (as @var894_0 var894)\r\n; cardinality of var1914 is 1\r\n; rep: (as @var1914_0 var1914)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logger/-1834586017 ((BOUND_VARIABLE_456 var2960)) var548 (as @var548_0 var548))\r\n(define-fun var1914_access$000/1228673548 () var894 (as @var894_0 var894))\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_459 var2690)) String \"\")\r\n(define-fun var548_info/-1910784958 ((BOUND_VARIABLE_462 var548) (BOUND_VARIABLE_463 var894) (BOUND_VARIABLE_464 String) (BOUND_VARIABLE_465 var802)) void (as @void_0 void))\r\n(define-fun null-var2960 () var2960 (as @var2960_0 var2960))\r\n(define-fun null-var2690 () var2690 (as @var2690_0 var2690))\r\n(define-fun null-var802 () var802 (as @var802_0 var802))\r\n(define-fun var401 () var2960 (as @var2960_1 var2960))\r\n(define-fun var3909 () var2690 (as @var2690_1 var2690))\r\n(define-fun var3209 () var802 (as @var802_1 var802))\r\n(define-fun var3696!1 () var548 (as @var548_0 var548))\r\n(define-fun var2168!1 () var894 (as @var894_0 var894))\r\n(define-fun var3514!1 () String \"\")\r\n(define-fun var3209!1 () var802 (as @var802_0 var802))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35667968,
            "run_time": 0.12276220321655273,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2690:\n  ;;   var2690!val!0 var2690!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2690!val!0 () var2690)\n  (declare-fun var2690!val!1 () var2690)\n  ;; cardinality constraint:\n  (forall ((x var2690)) (or (= x var2690!val!0) (= x var2690!val!1)))\n  ;; -----------\n  ;; universe for var2960:\n  ;;   var2960!val!0 var2960!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2960!val!0 () var2960)\n  (declare-fun var2960!val!1 () var2960)\n  ;; cardinality constraint:\n  (forall ((x var2960)) (or (= x var2960!val!0) (= x var2960!val!1)))\n  ;; -----------\n  ;; universe for var802:\n  ;;   var802!val!1 var802!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var802!val!1 () var802)\n  (declare-fun var802!val!0 () var802)\n  ;; cardinality constraint:\n  (forall ((x var802)) (or (= x var802!val!1) (= x var802!val!0)))\n  ;; -----------\n  (define-fun var2168 () var894\n    var1914_access$000/1228673548)\n  (define-fun null-var802 () var802\n    var802!val!1)\n  (define-fun var3209 () var802\n    var802!val!0)\n  (define-fun null-var2690 () var2690\n    var2690!val!1)\n  (define-fun null-var2960 () var2960\n    var2960!val!1)\n  (define-fun var401 () var2960\n    var2960!val!0)\n  (define-fun var3909 () var2690\n    var2690!val!0)\n  (define-fun var3514 () String\n    (String_valueOf/-333372740 var3909))\n  (define-fun var3696 () var548\n    (logger/-1834586017 var401))\n  (define-fun var3696!1 () var548\n    var548!val!0)\n  (define-fun var3209!1 () var802\n    var802!val!1)\n  (define-fun var3514!1 () String\n    \"\")\n  (define-fun var2168!1 () var894\n    var894!val!0)\n  (define-fun var1914_access$000/1228673548 () var894\n    var894!val!0)\n  (define-fun logger/-1834586017 ((x!0 var2960)) var548\n    var548!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var2690)) String\n    \"\")\n  (define-fun var548_info/-1910784958 ((x!0 var548)\n   (x!1 var894)\n   (x!2 String)\n   (x!3 var802)) void\n    void!val!0)\n)\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155545600,
            "run_time": 1.81471586227417,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3209 () var802 var802!12)\r\n  (define-fun var3909 () var2690 var2690!10)\r\n  (define-fun var401 () var2960 var2960!8)\r\n  (define-fun null-var802 () var802 var802!6)\r\n  (define-fun null-var2690 () var2690 var2690!4)\r\n  (define-fun null-var2960 () var2960 var2960!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog",
            "r2 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r1 = r0.<org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog: org.slf4j.Logger logger>",
            "$r5 = staticinvoke <org.apache.commons.logging.impl.Slf4jLogFactory: org.slf4j.Marker access$000()>()",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)",
            "interfaceinvoke $r1.<org.slf4j.Logger: void info(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog__error__-590062445\\94.smt2",
        "z3": {
            "memory": 31985664,
            "run_time": 0.12033200263977051,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1592:\r\n  ;;   var1592!val!0 var1592!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1592!val!0 () var1592)\r\n  (declare-fun var1592!val!1 () var1592)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1592)) (or (= x var1592!val!0) (= x var1592!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2199:\r\n  ;;   var2199!val!1 var2199!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2199!val!1 () var2199)\r\n  (declare-fun var2199!val!0 () var2199)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2199)) (or (= x var2199!val!1) (= x var2199!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1260:\r\n  ;;   var1260!val!0 var1260!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1260!val!0 () var1260)\r\n  (declare-fun var1260!val!1 () var1260)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1260)) (or (= x var1260!val!0) (= x var1260!val!1)))\r\n  ;; -----------\r\n  (define-fun var2917 () var2199\r\n    var2199!val!0)\r\n  (define-fun null-var1592 () var1592\r\n    var1592!val!1)\r\n  (define-fun var426 () var638\r\n    (logger/-1834586017 var2917))\r\n  (define-fun var3467 () var1306\r\n    var3979_access$000/1228673548)\r\n  (define-fun null-var2199 () var2199\r\n    var2199!val!1)\r\n  (define-fun null-var1260 () var1260\r\n    var1260!val!1)\r\n  (define-fun var489 () var1592\r\n    var1592!val!0)\r\n  (define-fun var3982 () String\r\n    (String_valueOf/-333372740 var1539))\r\n  (define-fun var1539 () var1260\r\n    var1260!val!0)\r\n  (define-fun var489!1 () var1592\r\n    var1592!val!0)\r\n  (define-fun var3982!1 () String\r\n    \"\")\r\n  (define-fun var3467!1 () var1306\r\n    var1306!val!0)\r\n  (define-fun var426!1 () var638\r\n    var638!val!0)\r\n  (define-fun var3979_access$000/1228673548 () var1306\r\n    var1306!val!0)\r\n  (define-fun var638_debug/1671179837 ((x!0 var638)\r\n   (x!1 var1306)\r\n   (x!2 String)\r\n   (x!3 var1592)) void\r\n    void!val!0)\r\n  (define-fun logger/-1834586017 ((x!0 var2199)) var638\r\n    var638!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var1260)) String\r\n    \"\")\r\n)\r\n(error \"line 38 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10244096,
            "run_time": 0.06120562553405762,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2199 is 2\r\n; rep: (as @var2199_0 var2199)\r\n; rep: (as @var2199_1 var2199)\r\n; cardinality of var1260 is 2\r\n; rep: (as @var1260_0 var1260)\r\n; rep: (as @var1260_1 var1260)\r\n; cardinality of var1592 is 2\r\n; rep: (as @var1592_0 var1592)\r\n; rep: (as @var1592_1 var1592)\r\n; cardinality of var638 is 1\r\n; rep: (as @var638_0 var638)\r\n; cardinality of var1306 is 1\r\n; rep: (as @var1306_0 var1306)\r\n; cardinality of var3979 is 1\r\n; rep: (as @var3979_0 var3979)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logger/-1834586017 ((BOUND_VARIABLE_456 var2199)) var638 (as @var638_0 var638))\r\n(define-fun var3979_access$000/1228673548 () var1306 (as @var1306_0 var1306))\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_459 var1260)) String \"\")\r\n(define-fun var638_debug/1671179837 ((BOUND_VARIABLE_462 var638) (BOUND_VARIABLE_463 var1306) (BOUND_VARIABLE_464 String) (BOUND_VARIABLE_465 var1592)) void (as @void_0 void))\r\n(define-fun null-var2199 () var2199 (as @var2199_0 var2199))\r\n(define-fun null-var1260 () var1260 (as @var1260_0 var1260))\r\n(define-fun null-var1592 () var1592 (as @var1592_0 var1592))\r\n(define-fun var2917 () var2199 (as @var2199_1 var2199))\r\n(define-fun var1539 () var1260 (as @var1260_1 var1260))\r\n(define-fun var489 () var1592 (as @var1592_1 var1592))\r\n(define-fun var426!1 () var638 (as @var638_0 var638))\r\n(define-fun var3467!1 () var1306 (as @var1306_0 var1306))\r\n(define-fun var3982!1 () String \"\")\r\n(define-fun var489!1 () var1592 (as @var1592_0 var1592))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36319232,
            "run_time": 0.154768705368042,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1592:\n  ;;   var1592!val!0 var1592!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1592!val!0 () var1592)\n  (declare-fun var1592!val!1 () var1592)\n  ;; cardinality constraint:\n  (forall ((x var1592)) (or (= x var1592!val!0) (= x var1592!val!1)))\n  ;; -----------\n  ;; universe for var2199:\n  ;;   var2199!val!1 var2199!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2199!val!1 () var2199)\n  (declare-fun var2199!val!0 () var2199)\n  ;; cardinality constraint:\n  (forall ((x var2199)) (or (= x var2199!val!1) (= x var2199!val!0)))\n  ;; -----------\n  ;; universe for var1260:\n  ;;   var1260!val!0 var1260!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1260!val!0 () var1260)\n  (declare-fun var1260!val!1 () var1260)\n  ;; cardinality constraint:\n  (forall ((x var1260)) (or (= x var1260!val!0) (= x var1260!val!1)))\n  ;; -----------\n  (define-fun var2917 () var2199\n    var2199!val!0)\n  (define-fun null-var1592 () var1592\n    var1592!val!1)\n  (define-fun var426 () var638\n    (logger/-1834586017 var2917))\n  (define-fun null-var2199 () var2199\n    var2199!val!1)\n  (define-fun var3467 () var1306\n    var3979_access$000/1228673548)\n  (define-fun null-var1260 () var1260\n    var1260!val!1)\n  (define-fun var489 () var1592\n    var1592!val!0)\n  (define-fun var3982 () String\n    (String_valueOf/-333372740 var1539))\n  (define-fun var1539 () var1260\n    var1260!val!0)\n  (define-fun var489!1 () var1592\n    var1592!val!0)\n  (define-fun var3982!1 () String\n    \"\")\n  (define-fun var3467!1 () var1306\n    var1306!val!0)\n  (define-fun var426!1 () var638\n    var638!val!0)\n  (define-fun var3979_access$000/1228673548 () var1306\n    var1306!val!0)\n  (define-fun var638_debug/1671179837 ((x!0 var638)\n   (x!1 var1306)\n   (x!2 String)\n   (x!3 var1592)) void\n    void!val!0)\n  (define-fun logger/-1834586017 ((x!0 var2199)) var638\n    var638!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var1260)) String\n    \"\")\n)\n(error \"line 38 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155811840,
            "run_time": 1.7205984592437744,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var489 () var1592 var1592!12)\r\n  (define-fun var1539 () var1260 var1260!10)\r\n  (define-fun var2917 () var2199 var2199!8)\r\n  (define-fun null-var1592 () var1592 var1592!6)\r\n  (define-fun null-var1260 () var1260 var1260!4)\r\n  (define-fun null-var2199 () var2199 var2199!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog",
            "r2 := @parameter0: java.lang.Object",
            "r3 := @parameter1: java.lang.Throwable",
            "$r1 = r0.<org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog: org.slf4j.Logger logger>",
            "$r5 = staticinvoke <org.apache.commons.logging.impl.Slf4jLogFactory: org.slf4j.Marker access$000()>()",
            "$r4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)",
            "interfaceinvoke $r1.<org.slf4j.Logger: void debug(org.slf4j.Marker,java.lang.String,java.lang.Throwable)>($r5, $r4, r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__createFactoryStore__465410863\\76.smt2",
        "z3": {
            "memory": 31649792,
            "run_time": 0.14878463745117188,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 39 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10244096,
            "run_time": 0.09372377395629883,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35733504,
            "run_time": 0.13743042945861816,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 39 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 155643904,
            "run_time": 1.7226357460021973,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r10 = null",
            "$r9 := @caughtexception",
            "r11 = null",
            "if r11 != null goto $r5 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String)>(r11)",
            "$r6 := @caughtexception",
            "staticinvoke <org.apache.commons.logging.LogFactory: void handleThrowable(java.lang.Throwable)>($r6)",
            "$r7 = \"org.apache.commons.logging.impl.WeakHashtable\"",
            "$z0 = virtualinvoke $r7.<java.lang.String: boolean equals(java.lang.Object)>(r11)",
            "if $z0 != 0 goto (branch)",
            "if r10 != null goto return r10",
            "return r10"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog__debug__-1414019416\\20.smt2",
        "z3": {
            "memory": 32063488,
            "run_time": 0.1682722568511963,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3312:\r\n  ;;   var3312!val!1 var3312!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3312!val!1 () var3312)\r\n  (declare-fun var3312!val!0 () var3312)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3312)) (or (= x var3312!val!1) (= x var3312!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3402:\r\n  ;;   var3402!val!0 var3402!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3402!val!0 () var3402)\r\n  (declare-fun var3402!val!1 () var3402)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3402)) (or (= x var3402!val!0) (= x var3402!val!1)))\r\n  ;; -----------\r\n  (define-fun var3499 () var3312\r\n    var3312!val!0)\r\n  (define-fun null-var3312 () var3312\r\n    var3312!val!1)\r\n  (define-fun var2321 () var3960\r\n    (logger/-1834586017 var2480))\r\n  (define-fun var3991 () var2656\r\n    var2367_access$000/1228673548)\r\n  (define-fun null-var3402 () var3402\r\n    var3402!val!1)\r\n  (define-fun var2480 () var3402\r\n    var3402!val!0)\r\n  (define-fun var1058 () String\r\n    (String_valueOf/-333372740 var3499))\r\n  (define-fun var2367_access$000/1228673548 () var2656\r\n    var2656!val!0)\r\n  (define-fun var1058!1 () String\r\n    \"\")\r\n  (define-fun var3991!1 () var2656\r\n    var2656!val!0)\r\n  (define-fun var2321!1 () var3960\r\n    var3960!val!0)\r\n  (define-fun logger/-1834586017 ((x!0 var3402)) var3960\r\n    var3960!val!0)\r\n  (define-fun String_valueOf/-333372740 ((x!0 var3312)) String\r\n    \"\")\r\n  (define-fun var3960_debug/-722073731 ((x!0 var3960) (x!1 var2656) (x!2 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 33 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10244096,
            "run_time": 0.21687960624694824,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3402 is 2\r\n; rep: (as @var3402_0 var3402)\r\n; rep: (as @var3402_1 var3402)\r\n; cardinality of var3312 is 2\r\n; rep: (as @var3312_0 var3312)\r\n; rep: (as @var3312_1 var3312)\r\n; cardinality of var3960 is 1\r\n; rep: (as @var3960_0 var3960)\r\n; cardinality of var2656 is 1\r\n; rep: (as @var2656_0 var2656)\r\n; cardinality of var2367 is 1\r\n; rep: (as @var2367_0 var2367)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun logger/-1834586017 ((BOUND_VARIABLE_444 var3402)) var3960 (as @var3960_0 var3960))\r\n(define-fun var2367_access$000/1228673548 () var2656 (as @var2656_0 var2656))\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_447 var3312)) String \"\")\r\n(define-fun var3960_debug/-722073731 ((BOUND_VARIABLE_450 var3960) (BOUND_VARIABLE_451 var2656) (BOUND_VARIABLE_452 String)) void (as @void_0 void))\r\n(define-fun null-var3402 () var3402 (as @var3402_0 var3402))\r\n(define-fun null-var3312 () var3312 (as @var3312_0 var3312))\r\n(define-fun var2480 () var3402 (as @var3402_1 var3402))\r\n(define-fun var3499 () var3312 (as @var3312_1 var3312))\r\n(define-fun var2321!1 () var3960 (as @var3960_0 var3960))\r\n(define-fun var3991!1 () var2656 (as @var2656_0 var2656))\r\n(define-fun var1058!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36311040,
            "run_time": 0.10630345344543457,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3312:\n  ;;   var3312!val!1 var3312!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3312!val!1 () var3312)\n  (declare-fun var3312!val!0 () var3312)\n  ;; cardinality constraint:\n  (forall ((x var3312)) (or (= x var3312!val!1) (= x var3312!val!0)))\n  ;; -----------\n  ;; universe for var3402:\n  ;;   var3402!val!0 var3402!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3402!val!0 () var3402)\n  (declare-fun var3402!val!1 () var3402)\n  ;; cardinality constraint:\n  (forall ((x var3402)) (or (= x var3402!val!0) (= x var3402!val!1)))\n  ;; -----------\n  (define-fun var3499 () var3312\n    var3312!val!0)\n  (define-fun null-var3312 () var3312\n    var3312!val!1)\n  (define-fun var1058 () String\n    (String_valueOf/-333372740 var3499))\n  (define-fun null-var3402 () var3402\n    var3402!val!1)\n  (define-fun var2480 () var3402\n    var3402!val!0)\n  (define-fun var2321 () var3960\n    (logger/-1834586017 var2480))\n  (define-fun var3991 () var2656\n    var2367_access$000/1228673548)\n  (define-fun var2367_access$000/1228673548 () var2656\n    var2656!val!0)\n  (define-fun var1058!1 () String\n    \"\")\n  (define-fun var3991!1 () var2656\n    var2656!val!0)\n  (define-fun var2321!1 () var3960\n    var3960!val!0)\n  (define-fun logger/-1834586017 ((x!0 var3402)) var3960\n    var3960!val!0)\n  (define-fun String_valueOf/-333372740 ((x!0 var3312)) String\n    \"\")\n  (define-fun var3960_debug/-722073731 ((x!0 var3960) (x!1 var2656) (x!2 String)) void\n    void!val!0)\n)\n(error \"line 33 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 140820480,
            "run_time": 1.722071647644043,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3499 () var3312 var3312!8)\r\n  (define-fun var2480 () var3402 var3402!6)\r\n  (define-fun null-var3312 () var3312 var3312!4)\r\n  (define-fun null-var3402 () var3402 var3402!2)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 2,
        "api_sequence": [
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog",
            "r2 := @parameter0: java.lang.Object",
            "$r1 = r0.<org.apache.commons.logging.impl.Slf4jLogFactory$Slf4jLog: org.slf4j.Logger logger>",
            "$r4 = staticinvoke <org.apache.commons.logging.impl.Slf4jLogFactory: org.slf4j.Marker access$000()>()",
            "$r3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r2)",
            "interfaceinvoke $r1.<org.slf4j.Logger: void debug(org.slf4j.Marker,java.lang.String)>($r4, $r3)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__lambda$getProperties$0__-857033723\\581.smt2",
        "z3": {
            "memory": 32292864,
            "run_time": 0.19435667991638184,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1584:\r\n  ;;   var1584!val!1 var1584!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1584!val!1 () var1584)\r\n  (declare-fun var1584!val!0 () var1584)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1584)) (or (= x var1584!val!1) (= x var1584!val!0)))\r\n  ;; -----------\r\n  ;; universe for var2006:\r\n  ;;   var2006!val!1 var2006!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2006!val!1 () var2006)\r\n  (declare-fun var2006!val!0 () var2006)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2006)) (or (= x var2006!val!1) (= x var2006!val!0)))\r\n  ;; -----------\r\n  (define-fun var101 () String\r\n    (append/-1031950772\r\n  (str.++ var2992!1 \"Unable to read URL \")\r\n  (cast-from-var2006-to-var3946 var2987)))\r\n  (define-fun var2992 () String\r\n    String-init)\r\n  (define-fun var2309 () var2318\r\n    (openConnection/1646032697 var2987))\r\n  (define-fun var3865 () String\r\n    (str.++ var2992!1 \"Unable to read URL \"))\r\n  (define-fun var2987 () var2006\r\n    var2006!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3381 () String\r\n    (append/-1031950772\r\n  (str.++ var2992!1 \"Unable to read URL \")\r\n  (cast-from-var2006-to-var3946 var2987)))\r\n  (define-fun null-var2006 () var2006\r\n    var2006!val!1)\r\n  (define-fun null-var1584 () var1584\r\n    var1584!val!1)\r\n  (define-fun var143 () var1584\r\n    var1584!val!0)\r\n  (define-fun var3865!1 () String\r\n    \"Unable to read URL \")\r\n  (define-fun var2356 () Bool\r\n    var2105_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var2992!2 () String\r\n    \"Unable to read URL \")\r\n  (define-fun var2992!1 () String\r\n    \"\")\r\n  (define-fun var2105_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var3319 () Int\r\n    0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2309!1 () var2318\r\n    var2318!val!0)\r\n  (define-fun var3381!1 () String\r\n    \"\")\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3946)) String\r\n    \"\")\r\n  (define-fun openConnection/1646032697 ((x!0 var2006)) var2318\r\n    var2318!val!0)\r\n  (define-fun var2105_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n  (define-fun setUseCaches/-1766285499 ((x!0 var2318) (x!1 Bool)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var2006-to-var3946 ((x!0 var2006)) var3946\r\n    var3946!val!0)\r\n)\r\n(error \"line 63 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10326016,
            "run_time": 0.046544790267944336,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2006 is 2\r\n; rep: (as @var2006_0 var2006)\r\n; rep: (as @var2006_1 var2006)\r\n; cardinality of var2318 is 1\r\n; rep: (as @var2318_0 var2318)\r\n; cardinality of var1584 is 2\r\n; rep: (as @var1584_0 var1584)\r\n; rep: (as @var1584_1 var1584)\r\n; cardinality of var2105 is 1\r\n; rep: (as @var2105_0 var2105)\r\n; cardinality of var3946 is 1\r\n; rep: (as @var3946_0 var3946)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun openConnection/1646032697 ((BOUND_VARIABLE_955 var2006)) var2318 (as @var2318_0 var2318))\r\n(define-fun setUseCaches/-1766285499 ((BOUND_VARIABLE_958 var2318) (BOUND_VARIABLE_959 Bool)) void (as @void_0 void))\r\n(define-fun var2105_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_962 String) (BOUND_VARIABLE_963 var3946)) String \"\")\r\n(define-fun cast-from-var2006-to-var3946 ((BOUND_VARIABLE_966 var2006)) var3946 (as @var3946_0 var3946))\r\n(define-fun var2105_logDiagnostic/1268238408 ((BOUND_VARIABLE_969 String)) void (as @void_0 void))\r\n(define-fun null-var2006 () var2006 (as @var2006_0 var2006))\r\n(define-fun null-var1584 () var1584 (as @var1584_0 var1584))\r\n(define-fun var2987 () var2006 (as @var2006_1 var2006))\r\n(define-fun var2309!1 () var2318 (as @var2318_0 var2318))\r\n(define-fun var3319 () Int 0)\r\n(define-fun var143 () var1584 (as @var1584_1 var1584))\r\n(define-fun var2992!1 () String \"\")\r\n(define-fun var2992!2 () String \"Unable to read URL \")\r\n(define-fun var3865!1 () String \"Unable to read URL \")\r\n(define-fun var3381!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36978688,
            "run_time": 0.12433195114135742,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1584:\n  ;;   var1584!val!1 var1584!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1584!val!1 () var1584)\n  (declare-fun var1584!val!0 () var1584)\n  ;; cardinality constraint:\n  (forall ((x var1584)) (or (= x var1584!val!1) (= x var1584!val!0)))\n  ;; -----------\n  ;; universe for var2006:\n  ;;   var2006!val!1 var2006!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2006!val!1 () var2006)\n  (declare-fun var2006!val!0 () var2006)\n  ;; cardinality constraint:\n  (forall ((x var2006)) (or (= x var2006!val!1) (= x var2006!val!0)))\n  ;; -----------\n  (define-fun var2356 () Bool\n    var2105_isDiagnosticsEnabled/-1004161365)\n  (define-fun var2309 () var2318\n    (openConnection/1646032697 var2987))\n  (define-fun var2105_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var3865 () String\n    (str.++ var2992!1 \"Unable to read URL \"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3865!1 () String\n    \"Unable to read URL \")\n  (define-fun var3381 () String\n    (append/-1031950772\n  (str.++ var2992!1 \"Unable to read URL \")\n  (cast-from-var2006-to-var3946 var2987)))\n  (define-fun var2987 () var2006\n    var2006!val!0)\n  (define-fun var101 () String\n    (append/-1031950772\n  (str.++ var2992!1 \"Unable to read URL \")\n  (cast-from-var2006-to-var3946 var2987)))\n  (define-fun var2992 () String\n    String-init)\n  (define-fun null-var2006 () var2006\n    var2006!val!1)\n  (define-fun null-var1584 () var1584\n    var1584!val!1)\n  (define-fun var143 () var1584\n    var1584!val!0)\n  (define-fun var2992!2 () String\n    \"Unable to read URL \")\n  (define-fun var2992!1 () String\n    \"\")\n  (define-fun var3319 () Int\n    0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2309!1 () var2318\n    var2318!val!0)\n  (define-fun var3381!1 () String\n    \"\")\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3946)) String\n    \"\")\n  (define-fun openConnection/1646032697 ((x!0 var2006)) var2318\n    var2318!val!0)\n  (define-fun var2105_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n  (define-fun setUseCaches/-1766285499 ((x!0 var2318) (x!1 Bool)) void\n    void!val!0)\n  (define-fun cast-from-var2006-to-var3946 ((x!0 var2006)) var3946\n    var3946!val!0)\n)\n(error \"line 63 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164716544,
            "run_time": 2.2024877071380615,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3865!1 () String \"Unable to read URL \")\r\n  (define-fun var2992!2 () String \"Unable to read URL \")\r\n  (define-fun var2992!1 () String \"\")\r\n  (define-fun var143 () var1584 var1584!46)\r\n  (define-fun var2987 () var2006 var2006!44)\r\n  (define-fun null-var1584 () var1584 var1584!42)\r\n  (define-fun null-var2006 () var2006 var2006!40)\r\n  (define-fun var3946!64 () var3946 (cast-from-var2006-to-var3946 var2006!44))\r\n  (define-fun var2105_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var3946)) String (ite (and (= x!0 \"Unable to read URL \") (= x!1 var3946!64)) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.net.URL",
            "r14 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>()",
            "virtualinvoke r14.<java.net.URLConnection: void setUseCaches(boolean)>(0)",
            "$r2 := @caughtexception",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return null",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unable to read URL \")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r6)",
            "return null"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__implementsLogFactory__1510735642\\410.smt2",
        "z3": {
            "memory": 31784960,
            "run_time": 0.12005114555358887,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1777:\r\n  ;;   var1777!val!1 var1777!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1777!val!1 () var1777)\r\n  (declare-fun var1777!val!0 () var1777)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1777)) (or (= x var1777!val!1) (= x var1777!val!0)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var1527 () var1777\r\n    var1777!val!0)\r\n  (define-fun null-var1777 () var1777\r\n    var1777!val!1)\r\n  (define-fun var1757 () String\r\n    (str.++ var1979!1\r\n        \"[CUSTOM LOG FACTORY] LinkageError caught trying to determine whether the compatibility was caused by a class loader conflict: \"\r\n        (getMessage/849299655 (cast-from-var1777-to-var420 var1527))))\r\n  (define-fun var2319 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1584 () String\r\n    (str.++ var1979!1\r\n        \"[CUSTOM LOG FACTORY] LinkageError caught trying to determine whether the compatibility was caused by a class loader conflict: \"))\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var3103 () Bool\r\n    (ite (= 1 0) true false))\r\n  (define-fun var2493 () String\r\n    (getMessage/849299655 (cast-from-var1777-to-var420 var1527)))\r\n  (define-fun var1979 () String\r\n    String-init)\r\n  (define-fun var3779 () String\r\n    (str.++ var1979!1\r\n        \"[CUSTOM LOG FACTORY] LinkageError caught trying to determine whether the compatibility was caused by a class loader conflict: \"\r\n        (getMessage/849299655 (cast-from-var1777-to-var420 var1527))))\r\n  (define-fun var1979!2 () String\r\n    \"[CUSTOM LOG FACTORY] LinkageError caught trying to determine whether the compatibility was caused by a class loader conflict: \")\r\n  (define-fun var1584!1 () String\r\n    \"[CUSTOM LOG FACTORY] LinkageError caught trying to determine whether the compatibility was caused by a class loader conflict: \")\r\n  (define-fun var1979!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3779!1 () String\r\n    \"\")\r\n  (define-fun cast-from-var1777-to-var420 ((x!0 var1777)) var420\r\n    var420!val!0)\r\n  (define-fun getMessage/849299655 ((x!0 var420)) String\r\n    \"\")\r\n  (define-fun var3714_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 51 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10301440,
            "run_time": 0.0914912223815918,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1777 is 2\r\n; rep: (as @var1777_0 var1777)\r\n; rep: (as @var1777_1 var1777)\r\n; cardinality of var420 is 1\r\n; rep: (as @var420_0 var420)\r\n; cardinality of var3714 is 1\r\n; rep: (as @var3714_0 var3714)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getMessage/849299655 ((BOUND_VARIABLE_525 var420)) String \"\")\r\n(define-fun cast-from-var1777-to-var420 ((BOUND_VARIABLE_528 var1777)) var420 (as @var420_0 var420))\r\n(define-fun var3714_logDiagnostic/1268238408 ((BOUND_VARIABLE_531 String)) void (as @void_0 void))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-var1777 () var1777 (as @var1777_0 var1777))\r\n(define-fun var2319 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var1527 () var1777 (as @var1777_1 var1777))\r\n(define-fun var1979!1 () String \"\")\r\n(define-fun var1979!2 () String \"[CUSTOM LOG FACTORY] LinkageError caught trying to determine whether the compatibility was caused by a class loader conflict: \")\r\n(define-fun var1584!1 () String \"[CUSTOM LOG FACTORY] LinkageError caught trying to determine whether the compatibility was caused by a class loader conflict: \")\r\n(define-fun var3779!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35753984,
            "run_time": 0.12362551689147949,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1777:\n  ;;   var1777!val!1 var1777!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1777!val!1 () var1777)\n  (declare-fun var1777!val!0 () var1777)\n  ;; cardinality constraint:\n  (forall ((x var1777)) (or (= x var1777!val!1) (= x var1777!val!0)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  (define-fun var1757 () String\n    (str.++ var1979!1\n        \"[CUSTOM LOG FACTORY] LinkageError caught trying to determine whether the compatibility was caused by a class loader conflict: \"\n        (getMessage/849299655 (cast-from-var1777-to-var420 var1527))))\n  (define-fun var1527 () var1777\n    var1777!val!0)\n  (define-fun null-var1777 () var1777\n    var1777!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2493 () String\n    (getMessage/849299655 (cast-from-var1777-to-var420 var1527)))\n  (define-fun var2319 () ClassObject\n    ClassObject!val!0)\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var1584 () String\n    (str.++ var1979!1\n        \"[CUSTOM LOG FACTORY] LinkageError caught trying to determine whether the compatibility was caused by a class loader conflict: \"))\n  (define-fun var1979 () String\n    String-init)\n  (define-fun var3779 () String\n    (str.++ var1979!1\n        \"[CUSTOM LOG FACTORY] LinkageError caught trying to determine whether the compatibility was caused by a class loader conflict: \"\n        (getMessage/849299655 (cast-from-var1777-to-var420 var1527))))\n  (define-fun var3103 () Bool\n    (ite (= 1 0) true false))\n  (define-fun var1979!2 () String\n    \"[CUSTOM LOG FACTORY] LinkageError caught trying to determine whether the compatibility was caused by a class loader conflict: \")\n  (define-fun var1584!1 () String\n    \"[CUSTOM LOG FACTORY] LinkageError caught trying to determine whether the compatibility was caused by a class loader conflict: \")\n  (define-fun var1979!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3779!1 () String\n    \"\")\n  (define-fun cast-from-var1777-to-var420 ((x!0 var1777)) var420\n    var420!val!0)\n  (define-fun getMessage/849299655 ((x!0 var420)) String\n    \"\")\n  (define-fun var3714_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 51 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173998080,
            "run_time": 2.0822079181671143,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: ClassObject/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__implementsLogFactory__1510735642\\410.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1584!1 =\r\n     concat(\"[CUSTOM LOG FACTORY] LinkageError caught trying to determine whether the compatibility was caused by a class loader conflict: \", all_23_2)\r\n\r\n1460ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Class",
            "z0 = 0",
            "if r0 == null goto return z0",
            "$r14 := @caughtexception",
            "$r15 = new java.lang.StringBuilder",
            "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()",
            "$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[CUSTOM LOG FACTORY] LinkageError caught trying to determine whether the compatibility was caused by a class loader conflict: \")",
            "$r16 = virtualinvoke $r14.<java.lang.LinkageError: java.lang.String getMessage()>()",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r19)",
            "goto [?= return z0]",
            "return z0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__lambda$getProperties$0__-857033723\\578.smt2",
        "z3": {
            "memory": 32030720,
            "run_time": 0.18561005592346191,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1507:\r\n  ;;   var1507!val!0 var1507!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1507!val!0 () var1507)\r\n  (declare-fun var1507!val!1 () var1507)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1507)) (or (= x var1507!val!0) (= x var1507!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3590:\r\n  ;;   var3590!val!0 var3590!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3590!val!0 () var3590)\r\n  (declare-fun var3590!val!1 () var3590)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3590)) (or (= x var3590!val!0) (= x var3590!val!1)))\r\n  ;; -----------\r\n  (define-fun var462 () var1507\r\n    var1507!val!0)\r\n  (define-fun var410 () var3877\r\n    (openConnection/1646032697 var2598))\r\n  (define-fun null-var1507 () var1507\r\n    var1507!val!1)\r\n  (define-fun null-var3590 () var3590\r\n    var3590!val!1)\r\n  (define-fun var2598 () var3590\r\n    var3590!val!0)\r\n  (define-fun var2720 () Bool\r\n    var1215_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var1215_isDiagnosticsEnabled/-1004161365 () Bool\r\n    false)\r\n  (define-fun var410!1 () var3877\r\n    var3877!val!0)\r\n  (define-fun var1592 () Int\r\n    0)\r\n  (define-fun openConnection/1646032697 ((x!0 var3590)) var3877\r\n    var3877!val!0)\r\n  (define-fun setUseCaches/-1766285499 ((x!0 var3877) (x!1 Bool)) void\r\n    void!val!0)\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10326016,
            "run_time": 0.031810760498046875,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3590 is 2\r\n; rep: (as @var3590_0 var3590)\r\n; rep: (as @var3590_1 var3590)\r\n; cardinality of var3877 is 1\r\n; rep: (as @var3877_0 var3877)\r\n; cardinality of var1507 is 2\r\n; rep: (as @var1507_0 var1507)\r\n; rep: (as @var1507_1 var1507)\r\n; cardinality of var1215 is 1\r\n; rep: (as @var1215_0 var1215)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun openConnection/1646032697 ((BOUND_VARIABLE_457 var3590)) var3877 (as @var3877_0 var3877))\r\n(define-fun setUseCaches/-1766285499 ((BOUND_VARIABLE_460 var3877) (BOUND_VARIABLE_461 Bool)) void (as @void_0 void))\r\n(define-fun var1215_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n(define-fun null-var3590 () var3590 (as @var3590_0 var3590))\r\n(define-fun null-var1507 () var1507 (as @var1507_0 var1507))\r\n(define-fun var2598 () var3590 (as @var3590_1 var3590))\r\n(define-fun var410!1 () var3877 (as @var3877_0 var3877))\r\n(define-fun var1592 () Int 0)\r\n(define-fun var462 () var1507 (as @var1507_1 var1507))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35672064,
            "run_time": 0.11013960838317871,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1507:\n  ;;   var1507!val!0 var1507!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1507!val!0 () var1507)\n  (declare-fun var1507!val!1 () var1507)\n  ;; cardinality constraint:\n  (forall ((x var1507)) (or (= x var1507!val!0) (= x var1507!val!1)))\n  ;; -----------\n  ;; universe for var3590:\n  ;;   var3590!val!0 var3590!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3590!val!0 () var3590)\n  (declare-fun var3590!val!1 () var3590)\n  ;; cardinality constraint:\n  (forall ((x var3590)) (or (= x var3590!val!0) (= x var3590!val!1)))\n  ;; -----------\n  (define-fun var462 () var1507\n    var1507!val!0)\n  (define-fun null-var1507 () var1507\n    var1507!val!1)\n  (define-fun var2720 () Bool\n    var1215_isDiagnosticsEnabled/-1004161365)\n  (define-fun null-var3590 () var3590\n    var3590!val!1)\n  (define-fun var2598 () var3590\n    var3590!val!0)\n  (define-fun var410 () var3877\n    (openConnection/1646032697 var2598))\n  (define-fun var1215_isDiagnosticsEnabled/-1004161365 () Bool\n    false)\n  (define-fun var410!1 () var3877\n    var3877!val!0)\n  (define-fun var1592 () Int\n    0)\n  (define-fun openConnection/1646032697 ((x!0 var3590)) var3877\n    var3877!val!0)\n  (define-fun setUseCaches/-1766285499 ((x!0 var3877) (x!1 Bool)) void\n    void!val!0)\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 138010624,
            "run_time": 1.4764633178710938,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var462 () var1507 var1507!8)\r\n  (define-fun var2598 () var3590 var3590!6)\r\n  (define-fun null-var1507 () var1507 var1507!4)\r\n  (define-fun null-var3590 () var3590 var3590!2)\r\n  (define-fun var1215_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 8,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.net.URL",
            "r14 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>()",
            "virtualinvoke r14.<java.net.URLConnection: void setUseCaches(boolean)>(0)",
            "$r2 := @caughtexception",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return null",
            "return null"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__lambda$getProperties$0__-857033723\\580.smt2",
        "z3": {
            "memory": 32002048,
            "run_time": 0.16747212409973145,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3614:\r\n  ;;   var3614!val!1 var3614!val!2 var3614!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3614!val!1 () var3614)\r\n  (declare-fun var3614!val!2 () var3614)\r\n  (declare-fun var3614!val!0 () var3614)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3614))\r\n          (or (= x var3614!val!1) (= x var3614!val!2) (= x var3614!val!0)))\r\n  ;; -----------\r\n  ;; universe for var170:\r\n  ;;   var170!val!0 var170!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var170!val!0 () var170)\r\n  (declare-fun var170!val!1 () var170)\r\n  ;; cardinality constraint:\r\n  (forall ((x var170)) (or (= x var170!val!0) (= x var170!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var170 () var170\r\n    var170!val!1)\r\n  (define-fun var325 () Bool\r\n    var2142_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var22 () var2207\r\n    (openConnection/1646032697 var3790))\r\n  (define-fun var3790 () var170\r\n    var170!val!0)\r\n  (define-fun var2752 () var3614\r\n    var3614!val!0)\r\n  (define-fun null-var3614 () var3614\r\n    var3614!val!1)\r\n  (define-fun var805 () var3614\r\n    var3614!val!2)\r\n  (define-fun var2142_isDiagnosticsEnabled/-1004161365 () Bool\r\n    false)\r\n  (define-fun var22!1 () var2207\r\n    var2207!val!0)\r\n  (define-fun var1948 () Int\r\n    0)\r\n  (define-fun openConnection/1646032697 ((x!0 var170)) var2207\r\n    var2207!val!0)\r\n  (define-fun setUseCaches/-1766285499 ((x!0 var2207) (x!1 Bool)) void\r\n    void!val!0)\r\n)\r\n(error \"line 39 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10244096,
            "run_time": 0.0312504768371582,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var170 is 2\r\n; rep: (as @var170_0 var170)\r\n; rep: (as @var170_1 var170)\r\n; cardinality of var2207 is 1\r\n; rep: (as @var2207_0 var2207)\r\n; cardinality of var3614 is 3\r\n; rep: (as @var3614_0 var3614)\r\n; rep: (as @var3614_1 var3614)\r\n; rep: (as @var3614_2 var3614)\r\n; cardinality of var2142 is 1\r\n; rep: (as @var2142_0 var2142)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun openConnection/1646032697 ((BOUND_VARIABLE_465 var170)) var2207 (as @var2207_0 var2207))\r\n(define-fun setUseCaches/-1766285499 ((BOUND_VARIABLE_468 var2207) (BOUND_VARIABLE_469 Bool)) void (as @void_0 void))\r\n(define-fun var2142_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n(define-fun null-var170 () var170 (as @var170_0 var170))\r\n(define-fun null-var3614 () var3614 (as @var3614_0 var3614))\r\n(define-fun var3790 () var170 (as @var170_1 var170))\r\n(define-fun var22!1 () var2207 (as @var2207_0 var2207))\r\n(define-fun var1948 () Int 0)\r\n(define-fun var2752 () var3614 (as @var3614_1 var3614))\r\n(define-fun var805 () var3614 (as @var3614_2 var3614))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36032512,
            "run_time": 0.15540242195129395,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3614:\n  ;;   var3614!val!1 var3614!val!2 var3614!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3614!val!1 () var3614)\n  (declare-fun var3614!val!2 () var3614)\n  (declare-fun var3614!val!0 () var3614)\n  ;; cardinality constraint:\n  (forall ((x var3614))\n          (or (= x var3614!val!1) (= x var3614!val!2) (= x var3614!val!0)))\n  ;; -----------\n  ;; universe for var170:\n  ;;   var170!val!0 var170!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var170!val!0 () var170)\n  (declare-fun var170!val!1 () var170)\n  ;; cardinality constraint:\n  (forall ((x var170)) (or (= x var170!val!0) (= x var170!val!1)))\n  ;; -----------\n  (define-fun null-var170 () var170\n    var170!val!1)\n  (define-fun var325 () Bool\n    var2142_isDiagnosticsEnabled/-1004161365)\n  (define-fun var22 () var2207\n    (openConnection/1646032697 var3790))\n  (define-fun var3790 () var170\n    var170!val!0)\n  (define-fun var2752 () var3614\n    var3614!val!0)\n  (define-fun null-var3614 () var3614\n    var3614!val!1)\n  (define-fun var805 () var3614\n    var3614!val!2)\n  (define-fun var2142_isDiagnosticsEnabled/-1004161365 () Bool\n    false)\n  (define-fun var22!1 () var2207\n    var2207!val!0)\n  (define-fun var1948 () Int\n    0)\n  (define-fun openConnection/1646032697 ((x!0 var170)) var2207\n    var2207!val!0)\n  (define-fun setUseCaches/-1766285499 ((x!0 var2207) (x!1 Bool)) void\n    void!val!0)\n)\n(error \"line 39 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153124864,
            "run_time": 1.4299490451812744,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var805 () var3614 var3614!10)\r\n  (define-fun var2752 () var3614 var3614!8)\r\n  (define-fun var3790 () var170 var170!6)\r\n  (define-fun null-var3614 () var3614 var3614!4)\r\n  (define-fun null-var170 () var170 var170!2)\r\n  (define-fun var2142_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.net.URL",
            "r14 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>()",
            "virtualinvoke r14.<java.net.URLConnection: void setUseCaches(boolean)>(0)",
            "$r7 := @caughtexception",
            "$r2 := @caughtexception",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return null",
            "return null"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__lambda$getProperties$0__-857033723\\583.smt2",
        "z3": {
            "memory": 31236096,
            "run_time": 0.08995485305786133,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2696:\r\n  ;;   var2696!val!1 var2696!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2696!val!1 () var2696)\r\n  (declare-fun var2696!val!0 () var2696)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2696)) (or (= x var2696!val!1) (= x var2696!val!0)))\r\n  ;; -----------\r\n  ;; universe for var1084:\r\n  ;;   var1084!val!2 var1084!val!0 var1084!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1084!val!2 () var1084)\r\n  (declare-fun var1084!val!0 () var1084)\r\n  (declare-fun var1084!val!1 () var1084)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1084))\r\n          (or (= x var1084!val!2) (= x var1084!val!0) (= x var1084!val!1)))\r\n  ;; -----------\r\n  (define-fun var2873 () var1084\r\n    var1084!val!0)\r\n  (define-fun var3284 () var1084\r\n    var1084!val!2)\r\n  (define-fun null-var2696 () var2696\r\n    var2696!val!1)\r\n  (define-fun var2753 () Bool\r\n    var888_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var3221 () var2696\r\n    var2696!val!0)\r\n  (define-fun null-var1084 () var1084\r\n    var1084!val!1)\r\n  (define-fun var657 () var3644\r\n    (openConnection/1646032697 var3221))\r\n  (define-fun var171 () Bool\r\n    var888_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var888_isDiagnosticsEnabled/-1004161365 () Bool\r\n    false)\r\n  (define-fun var2050 () Int\r\n    0)\r\n  (define-fun var657!1 () var3644\r\n    var3644!val!0)\r\n  (define-fun openConnection/1646032697 ((x!0 var2696)) var3644\r\n    var3644!val!0)\r\n  (define-fun setUseCaches/-1766285499 ((x!0 var3644) (x!1 Bool)) void\r\n    void!val!0)\r\n)\r\n(error \"line 41 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.030614852905273438,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2696 is 2\r\n; rep: (as @var2696_0 var2696)\r\n; rep: (as @var2696_1 var2696)\r\n; cardinality of var3644 is 1\r\n; rep: (as @var3644_0 var3644)\r\n; cardinality of var1084 is 3\r\n; rep: (as @var1084_0 var1084)\r\n; rep: (as @var1084_1 var1084)\r\n; rep: (as @var1084_2 var1084)\r\n; cardinality of var888 is 1\r\n; rep: (as @var888_0 var888)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun openConnection/1646032697 ((BOUND_VARIABLE_469 var2696)) var3644 (as @var3644_0 var3644))\r\n(define-fun setUseCaches/-1766285499 ((BOUND_VARIABLE_472 var3644) (BOUND_VARIABLE_473 Bool)) void (as @void_0 void))\r\n(define-fun var888_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n(define-fun null-var2696 () var2696 (as @var2696_0 var2696))\r\n(define-fun null-var1084 () var1084 (as @var1084_0 var1084))\r\n(define-fun var3221 () var2696 (as @var2696_1 var2696))\r\n(define-fun var657!1 () var3644 (as @var3644_0 var3644))\r\n(define-fun var2050 () Int 0)\r\n(define-fun var2873 () var1084 (as @var1084_1 var1084))\r\n(define-fun var3284 () var1084 (as @var1084_2 var1084))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35688448,
            "run_time": 0.13955330848693848,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2696:\n  ;;   var2696!val!1 var2696!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2696!val!1 () var2696)\n  (declare-fun var2696!val!0 () var2696)\n  ;; cardinality constraint:\n  (forall ((x var2696)) (or (= x var2696!val!1) (= x var2696!val!0)))\n  ;; -----------\n  ;; universe for var1084:\n  ;;   var1084!val!2 var1084!val!0 var1084!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1084!val!2 () var1084)\n  (declare-fun var1084!val!0 () var1084)\n  (declare-fun var1084!val!1 () var1084)\n  ;; cardinality constraint:\n  (forall ((x var1084))\n          (or (= x var1084!val!2) (= x var1084!val!0) (= x var1084!val!1)))\n  ;; -----------\n  (define-fun var2873 () var1084\n    var1084!val!0)\n  (define-fun var3284 () var1084\n    var1084!val!2)\n  (define-fun var171 () Bool\n    var888_isDiagnosticsEnabled/-1004161365)\n  (define-fun null-var2696 () var2696\n    var2696!val!1)\n  (define-fun var3221 () var2696\n    var2696!val!0)\n  (define-fun null-var1084 () var1084\n    var1084!val!1)\n  (define-fun var2753 () Bool\n    var888_isDiagnosticsEnabled/-1004161365)\n  (define-fun var657 () var3644\n    (openConnection/1646032697 var3221))\n  (define-fun var888_isDiagnosticsEnabled/-1004161365 () Bool\n    false)\n  (define-fun var2050 () Int\n    0)\n  (define-fun var657!1 () var3644\n    var3644!val!0)\n  (define-fun openConnection/1646032697 ((x!0 var2696)) var3644\n    var3644!val!0)\n  (define-fun setUseCaches/-1766285499 ((x!0 var3644) (x!1 Bool)) void\n    void!val!0)\n)\n(error \"line 41 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154861568,
            "run_time": 1.578834056854248,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3284 () var1084 var1084!10)\r\n  (define-fun var2873 () var1084 var1084!8)\r\n  (define-fun var3221 () var2696 var2696!6)\r\n  (define-fun null-var1084 () var1084 var1084!4)\r\n  (define-fun null-var2696 () var2696 var2696!2)\r\n  (define-fun var888_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 11,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.net.URL",
            "r14 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>()",
            "virtualinvoke r14.<java.net.URLConnection: void setUseCaches(boolean)>(0)",
            "$r7 := @caughtexception",
            "$z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "$r2 := @caughtexception",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return null",
            "return null"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__lambda$getProperties$0__-857033723\\585.smt2",
        "z3": {
            "memory": 32034816,
            "run_time": 0.14869904518127441,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var754:\r\n  ;;   var754!val!1 var754!val!0 var754!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var754!val!1 () var754)\r\n  (declare-fun var754!val!0 () var754)\r\n  (declare-fun var754!val!2 () var754)\r\n  ;; cardinality constraint:\r\n  (forall ((x var754))\r\n          (or (= x var754!val!1) (= x var754!val!0) (= x var754!val!2)))\r\n  ;; -----------\r\n  ;; universe for var2539:\r\n  ;;   var2539!val!1 var2539!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2539!val!1 () var2539)\r\n  (declare-fun var2539!val!0 () var2539)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2539)) (or (= x var2539!val!1) (= x var2539!val!0)))\r\n  ;; -----------\r\n  (define-fun var2685 () var754\r\n    var754!val!2)\r\n  (define-fun var2232 () var3841\r\n    (openConnection/1646032697 var1019))\r\n  (define-fun var1479 () var3238\r\n    (getInputStream/1664976517 var2232!1))\r\n  (define-fun var1543 () var754\r\n    var754!val!0)\r\n  (define-fun var1696 () Bool\r\n    var3686_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun null-var754 () var754\r\n    var754!val!1)\r\n  (define-fun null-var2539 () var2539\r\n    var2539!val!1)\r\n  (define-fun var1019 () var2539\r\n    var2539!val!0)\r\n  (define-fun var3686_isDiagnosticsEnabled/-1004161365 () Bool\r\n    false)\r\n  (define-fun var2232!1 () var3841\r\n    var3841!val!0)\r\n  (define-fun var3834 () Int\r\n    0)\r\n  (define-fun openConnection/1646032697 ((x!0 var2539)) var3841\r\n    var3841!val!0)\r\n  (define-fun setUseCaches/-1766285499 ((x!0 var3841) (x!1 Bool)) void\r\n    void!val!0)\r\n  (define-fun getInputStream/1664976517 ((x!0 var3841)) var3238\r\n    var3238!val!0)\r\n)\r\n(error \"line 44 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 7372800,
            "run_time": 0.03013324737548828,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2539 is 2\r\n; rep: (as @var2539_0 var2539)\r\n; rep: (as @var2539_1 var2539)\r\n; cardinality of var3841 is 1\r\n; rep: (as @var3841_0 var3841)\r\n; cardinality of var3238 is 1\r\n; rep: (as @var3238_0 var3238)\r\n; cardinality of var754 is 3\r\n; rep: (as @var754_0 var754)\r\n; rep: (as @var754_1 var754)\r\n; rep: (as @var754_2 var754)\r\n; cardinality of var3686 is 1\r\n; rep: (as @var3686_0 var3686)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun openConnection/1646032697 ((BOUND_VARIABLE_475 var2539)) var3841 (as @var3841_0 var3841))\r\n(define-fun setUseCaches/-1766285499 ((BOUND_VARIABLE_478 var3841) (BOUND_VARIABLE_479 Bool)) void (as @void_0 void))\r\n(define-fun getInputStream/1664976517 ((BOUND_VARIABLE_482 var3841)) var3238 (as @var3238_0 var3238))\r\n(define-fun var3686_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n(define-fun null-var2539 () var2539 (as @var2539_0 var2539))\r\n(define-fun null-var754 () var754 (as @var754_0 var754))\r\n(define-fun var1019 () var2539 (as @var2539_1 var2539))\r\n(define-fun var2232!1 () var3841 (as @var3841_0 var3841))\r\n(define-fun var3834 () Int 0)\r\n(define-fun var1543 () var754 (as @var754_1 var754))\r\n(define-fun var2685 () var754 (as @var754_2 var754))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35643392,
            "run_time": 0.09269046783447266,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var754:\n  ;;   var754!val!1 var754!val!0 var754!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var754!val!1 () var754)\n  (declare-fun var754!val!0 () var754)\n  (declare-fun var754!val!2 () var754)\n  ;; cardinality constraint:\n  (forall ((x var754))\n          (or (= x var754!val!1) (= x var754!val!0) (= x var754!val!2)))\n  ;; -----------\n  ;; universe for var2539:\n  ;;   var2539!val!1 var2539!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2539!val!1 () var2539)\n  (declare-fun var2539!val!0 () var2539)\n  ;; cardinality constraint:\n  (forall ((x var2539)) (or (= x var2539!val!1) (= x var2539!val!0)))\n  ;; -----------\n  (define-fun var2685 () var754\n    var754!val!2)\n  (define-fun var1543 () var754\n    var754!val!0)\n  (define-fun var2232 () var3841\n    (openConnection/1646032697 var1019))\n  (define-fun var1479 () var3238\n    (getInputStream/1664976517 var2232!1))\n  (define-fun null-var754 () var754\n    var754!val!1)\n  (define-fun var1696 () Bool\n    var3686_isDiagnosticsEnabled/-1004161365)\n  (define-fun null-var2539 () var2539\n    var2539!val!1)\n  (define-fun var1019 () var2539\n    var2539!val!0)\n  (define-fun var3686_isDiagnosticsEnabled/-1004161365 () Bool\n    false)\n  (define-fun var2232!1 () var3841\n    var3841!val!0)\n  (define-fun var3834 () Int\n    0)\n  (define-fun openConnection/1646032697 ((x!0 var2539)) var3841\n    var3841!val!0)\n  (define-fun setUseCaches/-1766285499 ((x!0 var3841) (x!1 Bool)) void\n    void!val!0)\n  (define-fun getInputStream/1664976517 ((x!0 var3841)) var3238\n    var3238!val!0)\n)\n(error \"line 44 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 154394624,
            "run_time": 1.6420044898986816,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2685 () var754 var754!10)\r\n  (define-fun var1543 () var754 var754!8)\r\n  (define-fun var1019 () var2539 var2539!6)\r\n  (define-fun null-var754 () var754 var754!4)\r\n  (define-fun null-var2539 () var2539 var2539!2)\r\n  (define-fun var3686_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 12,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.net.URL",
            "r14 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>()",
            "virtualinvoke r14.<java.net.URLConnection: void setUseCaches(boolean)>(0)",
            "r15 = virtualinvoke r14.<java.net.URLConnection: java.io.InputStream getInputStream()>()",
            "$r7 := @caughtexception",
            "$r2 := @caughtexception",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return null",
            "return null"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__lambda$getProperties$0__-857033723\\582.smt2",
        "z3": {
            "memory": 31211520,
            "run_time": 0.10646224021911621,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var442:\r\n  ;;   var442!val!0 var442!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var442!val!0 () var442)\r\n  (declare-fun var442!val!1 () var442)\r\n  ;; cardinality constraint:\r\n  (forall ((x var442)) (or (= x var442!val!0) (= x var442!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3159:\r\n  ;;   var3159!val!0 var3159!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3159!val!0 () var3159)\r\n  (declare-fun var3159!val!1 () var3159)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3159)) (or (= x var3159!val!0) (= x var3159!val!1)))\r\n  ;; -----------\r\n  (define-fun var1957 () var636\r\n    (openConnection/1646032697 var3567))\r\n  (define-fun var3459 () var2614\r\n    (getInputStream/1664976517 var1957!1))\r\n  (define-fun null-var442 () var442\r\n    var442!val!1)\r\n  (define-fun var3567 () var442\r\n    var442!val!0)\r\n  (define-fun var185 () var3159\r\n    var3159!val!0)\r\n  (define-fun null-var3159 () var3159\r\n    var3159!val!1)\r\n  (define-fun var1957!1 () var636\r\n    var636!val!0)\r\n  (define-fun null-var2614 () var2614\r\n    var2614!val!0)\r\n  (define-fun var1786 () Int\r\n    0)\r\n  (define-fun getInputStream/1664976517 ((x!0 var636)) var2614\r\n    var2614!val!0)\r\n  (define-fun openConnection/1646032697 ((x!0 var442)) var636\r\n    var636!val!0)\r\n  (define-fun setUseCaches/-1766285499 ((x!0 var636) (x!1 Bool)) void\r\n    void!val!0)\r\n)\r\n(error \"line 39 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.03137350082397461,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var442 is 2\r\n; rep: (as @var442_0 var442)\r\n; rep: (as @var442_1 var442)\r\n; cardinality of var636 is 1\r\n; rep: (as @var636_0 var636)\r\n; cardinality of var2614 is 1\r\n; rep: (as @var2614_0 var2614)\r\n; cardinality of var3159 is 2\r\n; rep: (as @var3159_0 var3159)\r\n; rep: (as @var3159_1 var3159)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun openConnection/1646032697 ((BOUND_VARIABLE_441 var442)) var636 (as @var636_0 var636))\r\n(define-fun setUseCaches/-1766285499 ((BOUND_VARIABLE_444 var636) (BOUND_VARIABLE_445 Bool)) void (as @void_0 void))\r\n(define-fun getInputStream/1664976517 ((BOUND_VARIABLE_448 var636)) var2614 (as @var2614_0 var2614))\r\n(define-fun null-var442 () var442 (as @var442_0 var442))\r\n(define-fun null-var3159 () var3159 (as @var3159_0 var3159))\r\n(define-fun null-var2614 () var2614 (as @var2614_0 var2614))\r\n(define-fun var3567 () var442 (as @var442_1 var442))\r\n(define-fun var1957!1 () var636 (as @var636_0 var636))\r\n(define-fun var1786 () Int 0)\r\n(define-fun var185 () var3159 (as @var3159_1 var3159))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35672064,
            "run_time": 0.10838842391967773,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var442:\n  ;;   var442!val!0 var442!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var442!val!0 () var442)\n  (declare-fun var442!val!1 () var442)\n  ;; cardinality constraint:\n  (forall ((x var442)) (or (= x var442!val!0) (= x var442!val!1)))\n  ;; -----------\n  ;; universe for var3159:\n  ;;   var3159!val!0 var3159!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3159!val!0 () var3159)\n  (declare-fun var3159!val!1 () var3159)\n  ;; cardinality constraint:\n  (forall ((x var3159)) (or (= x var3159!val!0) (= x var3159!val!1)))\n  ;; -----------\n  ;; universe for var2614:\n  ;;   var2614!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2614!val!0 () var2614)\n  ;; cardinality constraint:\n  (forall ((x var2614)) (= x var2614!val!0))\n  ;; -----------\n  (define-fun null-var442 () var442\n    var442!val!1)\n  (define-fun var3567 () var442\n    var442!val!0)\n  (define-fun var185 () var3159\n    var3159!val!0)\n  (define-fun var1957 () var636\n    (openConnection/1646032697 var3567))\n  (define-fun null-var3159 () var3159\n    var3159!val!1)\n  (define-fun var3459 () var2614\n    (getInputStream/1664976517 var1957!1))\n  (define-fun var1957!1 () var636\n    var636!val!0)\n  (define-fun null-var2614 () var2614\n    var2614!val!0)\n  (define-fun var1786 () Int\n    0)\n  (define-fun getInputStream/1664976517 ((x!0 var636)) var2614\n    var2614!val!0)\n  (define-fun openConnection/1646032697 ((x!0 var442)) var636\n    var636!val!0)\n  (define-fun setUseCaches/-1766285499 ((x!0 var636) (x!1 Bool)) void\n    void!val!0)\n)\n(error \"line 39 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 141049856,
            "run_time": 1.8394110202789307,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var185 () var3159 var3159!12)\r\n  (define-fun var1957!1 () var636 var636!10)\r\n  (define-fun var3567 () var442 var442!8)\r\n  (define-fun null-var2614 () var2614 var2614!6)\r\n  (define-fun null-var3159 () var3159 var3159!4)\r\n  (define-fun null-var442 () var442 var442!2)\r\n  (define-fun var2614!6 () var2614 (getInputStream/1664976517 var636!10))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 10,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.net.URL",
            "r14 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>()",
            "virtualinvoke r14.<java.net.URLConnection: void setUseCaches(boolean)>(0)",
            "r15 = virtualinvoke r14.<java.net.URLConnection: java.io.InputStream getInputStream()>()",
            "$r13 := @caughtexception",
            "if r15 == null goto throw $r13",
            "throw $r13"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.SimpleLog__\u300ainit\u300b__849078077\\149.smt2",
        "z3": {
            "memory": 32727040,
            "run_time": 0.20103168487548828,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(error \"line 80 column 10: model is not available\")\r\n(error \"line 81 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 39407616,
            "run_time": 5.419394254684448,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1917 is 4\r\n; rep: (as @var1917_0 var1917)\r\n; rep: (as @var1917_1 var1917)\r\n; rep: (as @var1917_2 var1917)\r\n; rep: (as @var1917_3 var1917)\r\n; cardinality of var1569 is 1\r\n; rep: (as @var1569_0 var1569)\r\n; cardinality of var245 is 1\r\n; rep: (as @var245_0 var245)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun <init>/-279557996 ((BOUND_VARIABLE_35779 var245)) void (as @void_0 void))\r\n(define-fun cast-from-var1917-to-var245 ((BOUND_VARIABLE_35782 var1917)) var245 (as @var245_0 var245))\r\n(define-fun logName/2114464271 (($x1 var1917)) String \"\")\r\n(define-fun setLevel/-733977423 ((BOUND_VARIABLE_35785 var1917) (BOUND_VARIABLE_35786 Int)) void (as @void_0 void))\r\n(define-fun String-init () String \"\")\r\n(define-fun var1917_getStringProperty/2067472328 (($x1 String)) String (ite (= \"org.apache.commons.logging.simplelog.log.\" $x1) \"ALL\" \"\"))\r\n(define-fun String_valueOf/-333372740 ((BOUND_VARIABLE_35789 var245)) String \"\")\r\n(define-fun cast-from-String-to-var245 ((BOUND_VARIABLE_35792 String)) var245 (as @var245_0 var245))\r\n(define-fun lastIndexOf/-618837785 ((BOUND_VARIABLE_35795 String) (BOUND_VARIABLE_35796 String)) Int 0)\r\n(define-fun null-var1917 () var1917 (as @var1917_0 var1917))\r\n(define-fun null-String () String \"AAA\")\r\n(define-fun var75 () var1917 (as @var1917_1 var1917))\r\n(define-fun var3428 () String \"\")\r\n(define-fun var75!1 () var1917 (as @var1917_0 var1917))\r\n(define-fun var75!2 () var1917 (as @var1917_2 var1917))\r\n(define-fun var75!3 () var1917 (as @var1917_3 var1917))\r\n(define-fun var2203 () Int 0)\r\n(define-fun var408!1 () String \"\")\r\n(define-fun var408!2 () String \"org.apache.commons.logging.simplelog.log.\")\r\n(define-fun var405!1 () String \"org.apache.commons.logging.simplelog.log.\")\r\n(define-fun var75!4 () var1917 (as @var1917_0 var1917))\r\n(define-fun var3656 () Int 0)\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35786752,
            "run_time": 0.10793638229370117,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 80 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 81 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 216256512,
            "run_time": 2.507263660430908,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1917/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.impl.SimpleLog__init__849078077\\149.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   \"ALL\" =\r\n     replaceall(all_45_0, \"Z\")\r\n   all_30_3 =\r\n     concat(\"org.apache.commons.logging.simplelog.log.\", all_24_2)\r\n   all_27_3 =\r\n     concat(\"org.apache.commons.logging.simplelog.log.\", all_24_2)\r\n   var405!1 =\r\n     concat(\"org.apache.commons.logging.simplelog.log.\", all_24_2)\r\n   all_45_0 =\r\n     replaceall(all_45_1, \"Y\")\r\n   all_45_1 =\r\n     replaceall(all_45_2, \"X\")\r\n   all_45_2 =\r\n     replaceall(all_45_3, \"W\")\r\n   all_45_3 =\r\n     replaceall(all_45_4, \"V\")\r\n   all_45_4 =\r\n     replaceall(all_45_5, \"U\")\r\n   all_45_5 =\r\n     replaceall(all_45_6, \"T\")\r\n   all_45_6 =\r\n     replaceall(all_45_7, \"S\")\r\n   all_45_7 =\r\n     replaceall(all_45_8, \"R\")\r\n   all_45_8 =\r\n     replaceall(all_45_9, \"Q\")\r\n   all_45_9 =\r\n     replaceall(all_45_10, \"P\")\r\n   all_45_10 =\r\n     replaceall(all_45_11, \"O\")\r\n   all_45_11 =\r\n     replaceall(all_45_12, \"N\")\r\n   all_45_12 =\r\n     replaceall(all_45_13, \"M\")\r\n   all_45_13 =\r\n     replaceall(all_45_14, \"L\")\r\n   all_45_14 =\r\n     replaceall(all_45_15, \"K\")\r\n   all_45_15 =\r\n     replaceall(all_45_16, \"J\")\r\n   all_45_16 =\r\n     replaceall(all_45_17, \"I\")\r\n   all_45_17 =\r\n     replaceall(all_45_18, \"H\")\r\n   all_45_18 =\r\n     replaceall(all_45_19, \"G\")\r\n   all_45_19 =\r\n     replaceall(all_45_20, \"F\")\r\n   all_45_20 =\r\n     replaceall(all_45_21, \"E\")\r\n   all_45_21 =\r\n     replaceall(all_45_22, \"D\")\r\n   all_45_22 =\r\n     replaceall(all_45_23, \"C\")\r\n   all_45_23 =\r\n     replaceall(all_45_24, \"B\")\r\n   all_45_24 =\r\n     replaceall(all_30_2, \"A\")\r\n\r\n1970ms\r\n"
        },
        "undefined_function_count": 9,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>",
            "<java.lang.String: int lastIndexOf(java.lang.String)>",
            "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1,
            "<java.lang.String: java.lang.String valueOf(java.lang.Object)>": 1,
            "<java.lang.String: int lastIndexOf(java.lang.String)>": 1,
            "<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.SimpleLog",
            "r20 := @parameter0: java.lang.String",
            "specialinvoke r0.<java.lang.Object: void <init>()>()",
            "r0.<org.apache.commons.logging.impl.SimpleLog: java.lang.String logName> = r20",
            "virtualinvoke r0.<org.apache.commons.logging.impl.SimpleLog: void setLevel(int)>(3)",
            "$r22 = new java.lang.StringBuilder",
            "specialinvoke $r22.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"org.apache.commons.logging.simplelog.log.\")",
            "$r2 = r0.<org.apache.commons.logging.impl.SimpleLog: java.lang.String logName>",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.String toString()>()",
            "r21 = staticinvoke <org.apache.commons.logging.impl.SimpleLog: java.lang.String getStringProperty(java.lang.String)>($r5)",
            "$r6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(r20)",
            "i0 = virtualinvoke $r6.<java.lang.String: int lastIndexOf(java.lang.String)>(\".\")",
            "if null != r21 goto (branch)",
            "if null != r21 goto $r7 = \"all\"",
            "$r7 = \"all\"",
            "$z0 = virtualinvoke $r7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(r21)",
            "if $z0 == 0 goto $r8 = \"trace\"",
            "virtualinvoke r0.<org.apache.commons.logging.impl.SimpleLog: void setLevel(int)>(0)",
            "goto [?= return]",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__lambda$getResources$1__1913764690\\574.smt2",
        "z3": {
            "memory": 31289344,
            "run_time": 0.15901565551757812,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 69 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.03025221824645996,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35954688,
            "run_time": 0.09289264678955078,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 69 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153034752,
            "run_time": 2.023615837097168,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 19,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.ClassLoader",
            "r1 := @parameter1: java.lang.String",
            "if r0 == null goto $r2 = staticinvoke <java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>(r1)",
            "$r2 = staticinvoke <java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>(r1)",
            "$r5 := @caughtexception",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return null",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Exception while trying to find configuration file \")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")",
            "$r9 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>()",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r12)",
            "return null"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__logClassLoaderEnvironment__-1123412948\\463.smt2",
        "z3": {
            "memory": 31629312,
            "run_time": 0.15848922729492188,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3983:\r\n  ;;   var3983!val!2 var3983!val!1 var3983!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3983!val!2 () var3983)\r\n  (declare-fun var3983!val!1 () var3983)\r\n  (declare-fun var3983!val!0 () var3983)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3983))\r\n          (or (= x var3983!val!2) (= x var3983!val!1) (= x var3983!val!0)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var1166 () var3983\r\n    var3983!val!0)\r\n  (define-fun var2389 () String\r\n    String-init)\r\n  (define-fun null-var3983 () var3983\r\n    var3983!val!1)\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var1804 () String\r\n    (str.++ var2389!1 \"[ENV] Security forbids determining the class loader for \"))\r\n  (define-fun var3538 () String\r\n    (str.++ var2389!1\r\n        \"[ENV] Security forbids determining the class loader for \"\r\n        (getName/-1958580599 var1837)))\r\n  (define-fun var390 () String\r\n    (str.++ var2389!1\r\n        \"[ENV] Security forbids determining the class loader for \"\r\n        (getName/-1958580599 var1837)))\r\n  (define-fun var1837 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var3343 () String\r\n    (getName/-1958580599 var1837))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3592 () Bool\r\n    var2440_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var915 () String\r\n    String-init)\r\n  (define-fun var2667 () var3983\r\n    var3983!val!2)\r\n  (define-fun var2440_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var2389!1 () String\r\n    \"\")\r\n  (define-fun var2389!2 () String\r\n    \"[ENV] Security forbids determining the class loader for \")\r\n  (define-fun var915!1 () String\r\n    \"\")\r\n  (define-fun var1804!1 () String\r\n    \"[ENV] Security forbids determining the class loader for \")\r\n  (define-fun var390!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1483 () String\r\n    \"\")\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun var2440_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 62 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.031150102615356445,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2440 is 1\r\n; rep: (as @var2440_0 var2440)\r\n; cardinality of var3983 is 3\r\n; rep: (as @var3983_0 var3983)\r\n; rep: (as @var3983_1 var3983)\r\n; rep: (as @var3983_2 var3983)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var2440_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2440_logDiagnostic/1268238408 ((BOUND_VARIABLE_574 String)) void (as @void_0 void))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_577 ClassObject)) String \"\")\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-var3983 () var3983 (as @var3983_0 var3983))\r\n(define-fun var1837 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var915!1 () String \"\")\r\n(define-fun var1166 () var3983 (as @var3983_1 var3983))\r\n(define-fun var1483 () String \"\")\r\n(define-fun var2667 () var3983 (as @var3983_2 var3983))\r\n(define-fun var2389!1 () String \"\")\r\n(define-fun var2389!2 () String \"[ENV] Security forbids determining the class loader for \")\r\n(define-fun var1804!1 () String \"[ENV] Security forbids determining the class loader for \")\r\n(define-fun var390!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36597760,
            "run_time": 0.09289264678955078,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3983:\n  ;;   var3983!val!2 var3983!val!1 var3983!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3983!val!2 () var3983)\n  (declare-fun var3983!val!1 () var3983)\n  (declare-fun var3983!val!0 () var3983)\n  ;; cardinality constraint:\n  (forall ((x var3983))\n          (or (= x var3983!val!2) (= x var3983!val!1) (= x var3983!val!0)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  (define-fun var1166 () var3983\n    var3983!val!0)\n  (define-fun var1804 () String\n    (str.++ var2389!1 \"[ENV] Security forbids determining the class loader for \"))\n  (define-fun null-var3983 () var3983\n    var3983!val!1)\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var3538 () String\n    (str.++ var2389!1\n        \"[ENV] Security forbids determining the class loader for \"\n        (getName/-1958580599 var1837)))\n  (define-fun var390 () String\n    (str.++ var2389!1\n        \"[ENV] Security forbids determining the class loader for \"\n        (getName/-1958580599 var1837)))\n  (define-fun var3343 () String\n    (getName/-1958580599 var1837))\n  (define-fun var1837 () ClassObject\n    ClassObject!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var915 () String\n    String-init)\n  (define-fun var3592 () Bool\n    var2440_isDiagnosticsEnabled/-1004161365)\n  (define-fun var2389 () String\n    String-init)\n  (define-fun var2667 () var3983\n    var3983!val!2)\n  (define-fun var2440_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var2389!1 () String\n    \"\")\n  (define-fun var2389!2 () String\n    \"[ENV] Security forbids determining the class loader for \")\n  (define-fun var915!1 () String\n    \"\")\n  (define-fun var1804!1 () String\n    \"[ENV] Security forbids determining the class loader for \")\n  (define-fun var390!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1483 () String\n    \"\")\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n  (define-fun var2440_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 62 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 168660992,
            "run_time": 2.1181294918060303,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: ClassObject/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__logClassLoaderEnvironment__-1123412948\\463.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1804!1 =\r\n     concat(\"[ENV] Security forbids determining the class loader for \", all_17_2)\r\n\r\n1598ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r10 := @parameter0: java.lang.Class",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 != 0 goto $r0 = new java.lang.StringBuilder",
            "$r0 = new java.lang.StringBuilder",
            "specialinvoke $r0.<java.lang.StringBuilder: void <init>()>()",
            "$r28 := @caughtexception",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>(\"[ENV] Security setting prevent interrogation of system classpaths.\")",
            "$r29 = virtualinvoke r10.<java.lang.Class: java.lang.String getName()>()",
            "$r23 := @caughtexception",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[ENV] Security forbids determining the class loader for \")",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r27)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__logHierarchy__-997178389\\473.smt2",
        "z3": {
            "memory": 31244288,
            "run_time": 0.08214998245239258,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var75:\r\n  ;;   var75!val!0 var75!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var75!val!0 () var75)\r\n  (declare-fun var75!val!1 () var75)\r\n  ;; cardinality constraint:\r\n  (forall ((x var75)) (or (= x var75!val!0) (= x var75!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1444:\r\n  ;;   var1444!val!0 var1444!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1444!val!0 () var1444)\r\n  (declare-fun var1444!val!1 () var1444)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1444)) (or (= x var1444!val!0) (= x var1444!val!1)))\r\n  ;; -----------\r\n  (define-fun var3234 () Bool\r\n    var1724_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var2273 () var1444\r\n    var1444!val!0)\r\n  (define-fun var1234 () String\r\n    \"A\")\r\n  (define-fun null-var1444 () var1444\r\n    var1444!val!1)\r\n  (define-fun var2549 () String\r\n    (str.++ var1620!1 var1234))\r\n  (define-fun var1437 () String\r\n    (str.++ var1620!1\r\n        var1234\r\n        \"Security forbids determining the system class loader.\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2372 () String\r\n    (str.++ var1620!1\r\n        var1234\r\n        \"Security forbids determining the system class loader.\"))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1863 () var75\r\n    var75!val!0)\r\n  (define-fun null-var75 () var75\r\n    var75!val!1)\r\n  (define-fun var1620 () String\r\n    String-init)\r\n  (define-fun var2549!1 () String\r\n    \"ASecurity forbids determining the system class loader.\")\r\n  (define-fun var1620!2 () String\r\n    \"A\")\r\n  (define-fun var1620!1 () String\r\n    \"\")\r\n  (define-fun var1724_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2372!1 () String\r\n    \"\")\r\n  (define-fun var1724_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 52 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.03177070617675781,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3938 is 1\r\n; rep: (as @var3938_0 var3938)\r\n; cardinality of var1444 is 2\r\n; rep: (as @var1444_0 var1444)\r\n; rep: (as @var1444_1 var1444)\r\n; cardinality of var1724 is 1\r\n; rep: (as @var1724_0 var1724)\r\n; cardinality of var75 is 2\r\n; rep: (as @var75_0 var75)\r\n; rep: (as @var75_1 var75)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1724_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun var1724_logDiagnostic/1268238408 ((BOUND_VARIABLE_640 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1444 () var1444 (as @var1444_0 var1444))\r\n(define-fun null-var75 () var75 (as @var75_0 var75))\r\n(define-fun var1234 () String \"\")\r\n(define-fun var2273 () var1444 (as @var1444_1 var1444))\r\n(define-fun var1863 () var75 (as @var75_1 var75))\r\n(define-fun var1620!1 () String \"\")\r\n(define-fun var1620!2 () String \"\")\r\n(define-fun var2549!1 () String \"Security forbids determining the system class loader.\")\r\n(define-fun var2372!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37380096,
            "run_time": 0.140625,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var75:\n  ;;   var75!val!0 var75!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var75!val!0 () var75)\n  (declare-fun var75!val!1 () var75)\n  ;; cardinality constraint:\n  (forall ((x var75)) (or (= x var75!val!0) (= x var75!val!1)))\n  ;; -----------\n  ;; universe for var1444:\n  ;;   var1444!val!0 var1444!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1444!val!0 () var1444)\n  (declare-fun var1444!val!1 () var1444)\n  ;; cardinality constraint:\n  (forall ((x var1444)) (or (= x var1444!val!0) (= x var1444!val!1)))\n  ;; -----------\n  (define-fun var1724_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var2273 () var1444\n    var1444!val!0)\n  (define-fun var1620!1 () String\n    \"\")\n  (define-fun var1620!2 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2549!1 () String\n    \"\\u{0}\\u{0}Security forbids determining the system class loader.\")\n  (define-fun var1863 () var75\n    var75!val!0)\n  (define-fun var1234 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var75 () var75\n    var75!val!1)\n  (define-fun var2372 () String\n    (str.++ var1620!1\n        var1234\n        \"Security forbids determining the system class loader.\"))\n  (define-fun null-var1444 () var1444\n    var1444!val!1)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var3234 () Bool\n    var1724_isDiagnosticsEnabled/-1004161365)\n  (define-fun var1437 () String\n    (str.++ var1620!1\n        var1234\n        \"Security forbids determining the system class loader.\"))\n  (define-fun var1620 () String\n    String-init)\n  (define-fun var2549 () String\n    (str.++ var1620!1 var1234))\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2372!1 () String\n    \"\")\n  (define-fun var1724_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 52 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 174518272,
            "run_time": 2.102548360824585,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var75/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__logHierarchy__-997178389\\473.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_24_3 =\r\n     concat(var1234, \"Security forbids determining the system class loader.\")\r\n   var2549!1 =\r\n     concat(var1234, \"Security forbids determining the system class loader.\")\r\n\r\n1604ms\r\n"
        },
        "undefined_function_count": 3,
        "assertion_count": 12,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.String",
            "r24 := @parameter1: java.lang.ClassLoader",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 != 0 goto (branch)",
            "if r24 == null goto $r17 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>()",
            "$r19 := @caughtexception",
            "$r20 = new java.lang.StringBuilder",
            "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Security forbids determining the system class loader.\")",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r23)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__lambda$getResources$1__1913764690\\571.smt2",
        "z3": {
            "memory": 31928320,
            "run_time": 0.1455519199371338,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1938:\r\n  ;;   var1938!val!1 var1938!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1938!val!1 () var1938)\r\n  (declare-fun var1938!val!0 () var1938)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1938)) (or (= x var1938!val!1) (= x var1938!val!0)))\r\n  ;; -----------\r\n  ;; universe for var3121:\r\n  ;;   var3121!val!1 var3121!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3121!val!1 () var3121)\r\n  (declare-fun var3121!val!0 () var3121)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3121)) (or (= x var3121!val!1) (= x var3121!val!0)))\r\n  ;; -----------\r\n  (define-fun var20 () String\r\n    (getMessage/849299655 (cast-from-var3121-to-var863 var2736)))\r\n  (define-fun var3446 () String\r\n    \"A\")\r\n  (define-fun var2293 () String\r\n    (str.++ var2079!1 \"Exception while trying to find configuration file \" var3446))\r\n  (define-fun var2110 () String\r\n    (str.++ var2079!1 \"Exception while trying to find configuration file \"))\r\n  (define-fun var3504 () String\r\n    (str.++ var2079!1\r\n        \"Exception while trying to find configuration file \"\r\n        var3446\r\n        \":\"\r\n        (getMessage/849299655 (cast-from-var3121-to-var863 var2736))))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var1087 () String\r\n    (str.++ var2079!1\r\n        \"Exception while trying to find configuration file \"\r\n        var3446\r\n        \":\"\r\n        (getMessage/849299655 (cast-from-var3121-to-var863 var2736))))\r\n  (define-fun var352 () String\r\n    (str.++ var2079!1\r\n        \"Exception while trying to find configuration file \"\r\n        var3446\r\n        \":\"))\r\n  (define-fun var1623 () var1938\r\n    var1938!val!0)\r\n  (define-fun null-var1938 () var1938\r\n    var1938!val!1)\r\n  (define-fun null-var3121 () var3121\r\n    var3121!val!1)\r\n  (define-fun var2079 () String\r\n    String-init)\r\n  (define-fun var2736 () var3121\r\n    var3121!val!0)\r\n  (define-fun var2373 () Bool\r\n    var3170_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var2293!1 () String\r\n    \"Exception while trying to find configuration file A:\")\r\n  (define-fun var352!1 () String\r\n    \"Exception while trying to find configuration file A:\")\r\n  (define-fun var2110!1 () String\r\n    \"Exception while trying to find configuration file A\")\r\n  (define-fun var2079!2 () String\r\n    \"Exception while trying to find configuration file \")\r\n  (define-fun var2079!1 () String\r\n    \"\")\r\n  (define-fun var3170_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1087!1 () String\r\n    \"\")\r\n  (define-fun cast-from-var3121-to-var863 ((x!0 var3121)) var863\r\n    var863!val!0)\r\n  (define-fun getMessage/849299655 ((x!0 var863)) String\r\n    \"\")\r\n  (define-fun var3170_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 66 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1638400,
            "run_time": 0.03061985969543457,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1938 is 2\r\n; rep: (as @var1938_0 var1938)\r\n; rep: (as @var1938_1 var1938)\r\n; cardinality of var2367 is 1\r\n; rep: (as @var2367_0 var2367)\r\n; cardinality of var3121 is 2\r\n; rep: (as @var3121_0 var3121)\r\n; rep: (as @var3121_1 var3121)\r\n; cardinality of var3170 is 1\r\n; rep: (as @var3170_0 var3170)\r\n; cardinality of var863 is 1\r\n; rep: (as @var863_0 var863)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3170_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun getMessage/849299655 ((BOUND_VARIABLE_702 var863)) String \"\")\r\n(define-fun cast-from-var3121-to-var863 ((BOUND_VARIABLE_705 var3121)) var863 (as @var863_0 var863))\r\n(define-fun var3170_logDiagnostic/1268238408 ((BOUND_VARIABLE_708 String)) void (as @void_0 void))\r\n(define-fun null-var1938 () var1938 (as @var1938_0 var1938))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3121 () var3121 (as @var3121_0 var3121))\r\n(define-fun var1623 () var1938 (as @var1938_1 var1938))\r\n(define-fun var3446 () String \"\")\r\n(define-fun var2736 () var3121 (as @var3121_1 var3121))\r\n(define-fun var2079!1 () String \"\")\r\n(define-fun var2079!2 () String \"Exception while trying to find configuration file \")\r\n(define-fun var2110!1 () String \"Exception while trying to find configuration file \")\r\n(define-fun var2293!1 () String \"Exception while trying to find configuration file :\")\r\n(define-fun var352!1 () String \"Exception while trying to find configuration file :\")\r\n(define-fun var1087!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36749312,
            "run_time": 0.1704251766204834,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1938:\n  ;;   var1938!val!1 var1938!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1938!val!1 () var1938)\n  (declare-fun var1938!val!0 () var1938)\n  ;; cardinality constraint:\n  (forall ((x var1938)) (or (= x var1938!val!1) (= x var1938!val!0)))\n  ;; -----------\n  ;; universe for var3121:\n  ;;   var3121!val!1 var3121!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3121!val!1 () var3121)\n  (declare-fun var3121!val!0 () var3121)\n  ;; cardinality constraint:\n  (forall ((x var3121)) (or (= x var3121!val!1) (= x var3121!val!0)))\n  ;; -----------\n  (define-fun var3170_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var2079!1 () String\n    \"\")\n  (define-fun var2079!2 () String\n    \"Exception while trying to find configuration file \")\n  (define-fun var2110!1 () String\n    \"Exception while trying to find configuration file \\u{0}\\u{0}\")\n  (define-fun var2293 () String\n    (str.++ var2079!1 \"Exception while trying to find configuration file \" var3446))\n  (define-fun var352!1 () String\n    \"Exception while trying to find configuration file \\u{0}\\u{0}:\")\n  (define-fun var2293!1 () String\n    \"Exception while trying to find configuration file \\u{0}\\u{0}:\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1087 () String\n    (str.++ var2079!1\n        \"Exception while trying to find configuration file \"\n        var3446\n        \":\"\n        (getMessage/849299655 (cast-from-var3121-to-var863 var2736))))\n  (define-fun var3446 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2373 () Bool\n    var3170_isDiagnosticsEnabled/-1004161365)\n  (define-fun var1623 () var1938\n    var1938!val!0)\n  (define-fun var3504 () String\n    (str.++ var2079!1\n        \"Exception while trying to find configuration file \"\n        var3446\n        \":\"\n        (getMessage/849299655 (cast-from-var3121-to-var863 var2736))))\n  (define-fun var20 () String\n    (getMessage/849299655 (cast-from-var3121-to-var863 var2736)))\n  (define-fun var2079 () String\n    String-init)\n  (define-fun var2736 () var3121\n    var3121!val!0)\n  (define-fun var352 () String\n    (str.++ var2079!1\n        \"Exception while trying to find configuration file \"\n        var3446\n        \":\"))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun null-var3121 () var3121\n    var3121!val!1)\n  (define-fun var2110 () String\n    (str.++ var2079!1 \"Exception while trying to find configuration file \"))\n  (define-fun null-var1938 () var1938\n    var1938!val!1)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1087!1 () String\n    \"\")\n  (define-fun cast-from-var3121-to-var863 ((x!0 var3121)) var863\n    var863!val!0)\n  (define-fun getMessage/849299655 ((x!0 var863)) String\n    \"\")\n  (define-fun var3170_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 66 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180678656,
            "run_time": 2.2735860347747803,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1938/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__lambda$getResources$1__1913764690\\571.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var352!1 =\r\n     concat(all_33_6, all_33_4)\r\n   var2293!1 =\r\n     concat(all_30_3, \":\")\r\n   var2110!1 =\r\n     concat(\"Exception while trying to find configuration file \", var3446)\r\n   all_33_6 =\r\n     concat(all_33_7, \":\")\r\n   all_30_3 =\r\n     concat(\"Exception while trying to find configuration file \", var3446)\r\n   all_33_7 =\r\n     concat(\"Exception while trying to find configuration file \", var3446)\r\n\r\n1775ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.ClassLoader",
            "r1 := @parameter1: java.lang.String",
            "if r0 == null goto $r2 = staticinvoke <java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>(r1)",
            "$r5 := @caughtexception",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return null",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Exception while trying to find configuration file \")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")",
            "$r9 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>()",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r12)",
            "return null"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__logHierarchy__-997178389\\480.smt2",
        "z3": {
            "memory": 31268864,
            "run_time": 0.094879150390625,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 31 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1634304,
            "run_time": 0.04645371437072754,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34947072,
            "run_time": 0.11152315139770508,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 31 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 138887168,
            "run_time": 1.5347185134887695,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 2,
        "assertion_count": 7,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r2 := @parameter0: java.lang.String",
            "r24 := @parameter1: java.lang.ClassLoader",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 != 0 goto (branch)",
            "if r24 == null goto $r17 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>()",
            "$r17 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>()",
            "goto [?= (branch)]",
            "if r24 == null goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__logHierarchy__-997178389\\476.smt2",
        "z3": {
            "memory": 31682560,
            "run_time": 0.18221282958984375,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 54 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1634304,
            "run_time": 0.03062129020690918,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34922496,
            "run_time": 0.11131405830383301,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 54 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163467264,
            "run_time": 1.9323244094848633,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 4,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.String",
            "r24 := @parameter1: java.lang.ClassLoader",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 != 0 goto (branch)",
            "if r24 == null goto $r17 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>()",
            "$r17 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>()",
            "$r19 := @caughtexception",
            "$r20 = new java.lang.StringBuilder",
            "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Security forbids determining the system class loader.\")",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r23)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__newFactory__-1005559516\\493.smt2",
        "z3": {
            "memory": 31784960,
            "run_time": 0.11220526695251465,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 67 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1654784,
            "run_time": 0.031130075454711914,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34947072,
            "run_time": 0.22141480445861816,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 67 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 163848192,
            "run_time": 1.8056528568267822,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.ClassLoader",
            "r9 := @parameter2: java.lang.ClassLoader",
            "$r2 = staticinvoke <org.apache.commons.logging.LogFactory$lambda_newFactory_3__5: java.security.PrivilegedAction bootstrap$(java.lang.String,java.lang.ClassLoader)>(r0, r1)",
            "r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2)",
            "$z0 = r3 instanceof org.apache.commons.logging.LogConfigurationException",
            "if $z0 == 0 goto $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "r14 = (org.apache.commons.logging.LogConfigurationException) r3",
            "$z2 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z2 == 0 goto throw r14",
            "$r15 = new java.lang.StringBuilder",
            "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()",
            "$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"An error occurred while loading the factory class:\")",
            "$r16 = virtualinvoke r14.<org.apache.commons.logging.LogConfigurationException: java.lang.String getMessage()>()",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16)",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r19)",
            "throw r14"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__lambda$getProperties$0__-857033723\\586.smt2",
        "z3": {
            "memory": 31186944,
            "run_time": 0.10428404808044434,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 40 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1601536,
            "run_time": 0.12006497383117676,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34926592,
            "run_time": 0.13968491554260254,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 40 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150491136,
            "run_time": 1.470142126083374,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 11,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.net.URL",
            "r14 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>()",
            "virtualinvoke r14.<java.net.URLConnection: void setUseCaches(boolean)>(0)",
            "r15 = virtualinvoke r14.<java.net.URLConnection: java.io.InputStream getInputStream()>()",
            "if r15 == null goto (branch)",
            "$r13 := @caughtexception",
            "if r15 == null goto throw $r13",
            "throw $r13"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__release__-1355242150\\507.smt2",
        "z3": {
            "memory": 31629312,
            "run_time": 0.10004401206970215,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 32 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1654784,
            "run_time": 0.03165030479431152,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35508224,
            "run_time": 0.10863018035888672,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 32 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 135499776,
            "run_time": 1.3635475635528564,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.ClassLoader",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "$r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "entermonitor $r10",
            "if r0 != null goto $r1 = virtualinvoke $r10.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0)",
            "$r11 := @caughtexception",
            "exitmonitor $r10",
            "throw $r11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__lambda$getProperties$0__-857033723\\584.smt2",
        "z3": {
            "memory": 32178176,
            "run_time": 0.15251731872558594,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var745:\r\n  ;;   var745!val!0 var745!val!1 var745!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var745!val!0 () var745)\r\n  (declare-fun var745!val!1 () var745)\r\n  (declare-fun var745!val!2 () var745)\r\n  ;; cardinality constraint:\r\n  (forall ((x var745))\r\n          (or (= x var745!val!0) (= x var745!val!1) (= x var745!val!2)))\r\n  ;; -----------\r\n  ;; universe for var2334:\r\n  ;;   var2334!val!0 var2334!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2334!val!0 () var2334)\r\n  (declare-fun var2334!val!1 () var2334)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2334)) (or (= x var2334!val!0) (= x var2334!val!1)))\r\n  ;; -----------\r\n  (define-fun var565 () var2334\r\n    var2334!val!0)\r\n  (define-fun var536 () String\r\n    (append/-1031950772\r\n  (str.++ var3937!1 \"Unable to read URL \")\r\n  (cast-from-var2334-to-var1124 var565)))\r\n  (define-fun null-var745 () var745\r\n    var745!val!1)\r\n  (define-fun var3937 () String\r\n    String-init)\r\n  (define-fun var3639 () String\r\n    (str.++ var3937!1 \"Unable to read URL \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var793 () String\r\n    (append/-1031950772\r\n  (str.++ var3937!1 \"Unable to read URL \")\r\n  (cast-from-var2334-to-var1124 var565)))\r\n  (define-fun var140 () var745\r\n    var745!val!2)\r\n  (define-fun var3639!1 () String\r\n    \"Unable to read URL \")\r\n  (define-fun null-var2334 () var2334\r\n    var2334!val!1)\r\n  (define-fun var1591 () var745\r\n    var745!val!0)\r\n  (define-fun var1533 () Bool\r\n    var1127_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var2332 () var2041\r\n    (openConnection/1646032697 var565))\r\n  (define-fun var3937!1 () String\r\n    \"\")\r\n  (define-fun var3937!2 () String\r\n    \"Unable to read URL \")\r\n  (define-fun var1127_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var3187 () Int\r\n    0)\r\n  (define-fun var793!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2332!1 () var2041\r\n    var2041!val!0)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1124)) String\r\n    \"\")\r\n  (define-fun openConnection/1646032697 ((x!0 var2334)) var2041\r\n    var2041!val!0)\r\n  (define-fun setUseCaches/-1766285499 ((x!0 var2041) (x!1 Bool)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var2334-to-var1124 ((x!0 var2334)) var1124\r\n    var1124!val!0)\r\n  (define-fun var1127_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 66 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10821632,
            "run_time": 0.047156572341918945,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2334 is 2\r\n; rep: (as @var2334_0 var2334)\r\n; rep: (as @var2334_1 var2334)\r\n; cardinality of var2041 is 1\r\n; rep: (as @var2041_0 var2041)\r\n; cardinality of var745 is 3\r\n; rep: (as @var745_0 var745)\r\n; rep: (as @var745_1 var745)\r\n; rep: (as @var745_2 var745)\r\n; cardinality of var1127 is 1\r\n; rep: (as @var1127_0 var1127)\r\n; cardinality of var1124 is 1\r\n; rep: (as @var1124_0 var1124)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun openConnection/1646032697 ((BOUND_VARIABLE_963 var2334)) var2041 (as @var2041_0 var2041))\r\n(define-fun setUseCaches/-1766285499 ((BOUND_VARIABLE_966 var2041) (BOUND_VARIABLE_967 Bool)) void (as @void_0 void))\r\n(define-fun var1127_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun append/-1031950772 ((BOUND_VARIABLE_970 String) (BOUND_VARIABLE_971 var1124)) String \"\")\r\n(define-fun cast-from-var2334-to-var1124 ((BOUND_VARIABLE_974 var2334)) var1124 (as @var1124_0 var1124))\r\n(define-fun var1127_logDiagnostic/1268238408 ((BOUND_VARIABLE_977 String)) void (as @void_0 void))\r\n(define-fun null-var2334 () var2334 (as @var2334_0 var2334))\r\n(define-fun null-var745 () var745 (as @var745_0 var745))\r\n(define-fun var565 () var2334 (as @var2334_1 var2334))\r\n(define-fun var2332!1 () var2041 (as @var2041_0 var2041))\r\n(define-fun var3187 () Int 0)\r\n(define-fun var1591 () var745 (as @var745_1 var745))\r\n(define-fun var140 () var745 (as @var745_2 var745))\r\n(define-fun var3937!1 () String \"\")\r\n(define-fun var3937!2 () String \"Unable to read URL \")\r\n(define-fun var3639!1 () String \"Unable to read URL \")\r\n(define-fun var793!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37011456,
            "run_time": 0.19394493103027344,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var745:\n  ;;   var745!val!0 var745!val!1 var745!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var745!val!0 () var745)\n  (declare-fun var745!val!1 () var745)\n  (declare-fun var745!val!2 () var745)\n  ;; cardinality constraint:\n  (forall ((x var745))\n          (or (= x var745!val!0) (= x var745!val!1) (= x var745!val!2)))\n  ;; -----------\n  ;; universe for var2334:\n  ;;   var2334!val!0 var2334!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2334!val!0 () var2334)\n  (declare-fun var2334!val!1 () var2334)\n  ;; cardinality constraint:\n  (forall ((x var2334)) (or (= x var2334!val!0) (= x var2334!val!1)))\n  ;; -----------\n  (define-fun var565 () var2334\n    var2334!val!0)\n  (define-fun var3639 () String\n    (str.++ var3937!1 \"Unable to read URL \"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var536 () String\n    (append/-1031950772\n  (str.++ var3937!1 \"Unable to read URL \")\n  (cast-from-var2334-to-var1124 var565)))\n  (define-fun var140 () var745\n    var745!val!2)\n  (define-fun null-var2334 () var2334\n    var2334!val!1)\n  (define-fun var2332 () var2041\n    (openConnection/1646032697 var565))\n  (define-fun var3937 () String\n    String-init)\n  (define-fun var3639!1 () String\n    \"Unable to read URL \")\n  (define-fun var1127_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun null-var745 () var745\n    var745!val!1)\n  (define-fun var793 () String\n    (append/-1031950772\n  (str.++ var3937!1 \"Unable to read URL \")\n  (cast-from-var2334-to-var1124 var565)))\n  (define-fun var1591 () var745\n    var745!val!0)\n  (define-fun var1533 () Bool\n    var1127_isDiagnosticsEnabled/-1004161365)\n  (define-fun var3937!1 () String\n    \"\")\n  (define-fun var3937!2 () String\n    \"Unable to read URL \")\n  (define-fun var3187 () Int\n    0)\n  (define-fun var793!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2332!1 () var2041\n    var2041!val!0)\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1124)) String\n    \"\")\n  (define-fun openConnection/1646032697 ((x!0 var2334)) var2041\n    var2041!val!0)\n  (define-fun setUseCaches/-1766285499 ((x!0 var2041) (x!1 Bool)) void\n    void!val!0)\n  (define-fun cast-from-var2334-to-var1124 ((x!0 var2334)) var1124\n    var1124!val!0)\n  (define-fun var1127_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 66 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 169746432,
            "run_time": 2.164031505584717,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3639!1 () String \"Unable to read URL \")\r\n  (define-fun var3937!2 () String \"Unable to read URL \")\r\n  (define-fun var3937!1 () String \"\")\r\n  (define-fun var140 () var745 var745!48)\r\n  (define-fun var1591 () var745 var745!46)\r\n  (define-fun var565 () var2334 var2334!44)\r\n  (define-fun null-var745 () var745 var745!42)\r\n  (define-fun null-var2334 () var2334 var2334!40)\r\n  (define-fun var1124!66 () var1124 (cast-from-var2334-to-var1124 var2334!44))\r\n  (define-fun var1127_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n  (define-fun append/-1031950772 ((x!0 String) (x!1 var1124)) String (ite (and (= x!0 \"Unable to read URL \") (= x!1 var1124!66)) \"\\u{0}\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 18,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.net.URL",
            "r14 = virtualinvoke r0.<java.net.URL: java.net.URLConnection openConnection()>()",
            "virtualinvoke r14.<java.net.URLConnection: void setUseCaches(boolean)>(0)",
            "$r7 := @caughtexception",
            "$r2 := @caughtexception",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return null",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Unable to read URL \")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(r0)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r6)",
            "return null"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__objectId__1952731062\\500.smt2",
        "z3": {
            "memory": 31940608,
            "run_time": 0.10204386711120605,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var145:\r\n  ;;   var145!val!1 var145!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var145!val!1 () var145)\r\n  (declare-fun var145!val!0 () var145)\r\n  ;; cardinality constraint:\r\n  (forall ((x var145)) (or (= x var145!val!1) (= x var145!val!0)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (= x ClassObject!val!0))\r\n  ;; -----------\r\n  (define-fun var3553 () var145\r\n    var145!val!0)\r\n  (define-fun var2961 () ClassObject\r\n    (getClass/1258963082 var3553))\r\n  (define-fun var3943 () String\r\n    (getName/-1958580599 (getClass/1258963082 var3553)))\r\n  (define-fun var3970 () String\r\n    (str.++ var1675!1 (getName/-1958580599 (getClass/1258963082 var3553)) \"@\"))\r\n  (define-fun var3674 () String\r\n    (str.++ var1675!1\r\n        (getName/-1958580599 (getClass/1258963082 var3553))\r\n        \"@\"\r\n        (str.from_int (var132_identityHashCode/1096208673 var3553))))\r\n  (define-fun var1675 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2442 () String\r\n    (str.++ var1675!1 (getName/-1958580599 (getClass/1258963082 var3553))))\r\n  (define-fun var203 () Int\r\n    (var132_identityHashCode/1096208673 var3553))\r\n  (define-fun var1589 () String\r\n    (str.++ var1675!1\r\n        (getName/-1958580599 (getClass/1258963082 var3553))\r\n        \"@\"\r\n        (str.from_int (var132_identityHashCode/1096208673 var3553))))\r\n  (define-fun null-var145 () var145\r\n    var145!val!1)\r\n  (define-fun var3970!1 () String\r\n    \"@\")\r\n  (define-fun var1675!2 () String\r\n    \"\")\r\n  (define-fun var1675!1 () String\r\n    \"\")\r\n  (define-fun var2442!1 () String\r\n    \"@\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun getClass/1258963082 ((x!0 var145)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var132_identityHashCode/1096208673 ((x!0 var145)) Int\r\n    0)\r\n)\r\n(error \"line 49 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1638400,
            "run_time": 0.030650854110717773,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var145 is 2\r\n; rep: (as @var145_0 var145)\r\n; rep: (as @var145_1 var145)\r\n; cardinality of var132 is 1\r\n; rep: (as @var132_0 var132)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun String-init () String \"\")\r\n(define-fun getClass/1258963082 ((_arg_1 var145)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getName/-1958580599 ((_arg_1 ClassObject)) String \"\")\r\n(define-fun var132_identityHashCode/1096208673 ((BOUND_VARIABLE_1060 var145)) Int 0)\r\n(define-fun null-var145 () var145 (as @var145_0 var145))\r\n(define-fun var3553 () var145 (as @var145_1 var145))\r\n(define-fun var1675!1 () String \"\")\r\n(define-fun var1675!2 () String \"\")\r\n(define-fun var2442!1 () String \"@\")\r\n(define-fun var3970!1 () String \"@\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34865152,
            "run_time": 0.10762739181518555,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 48 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 49 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 165457920,
            "run_time": 2.1322853565216064,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var145/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__objectId__1952731062\\500.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2442!1 =\r\n     concat(var1675!2, \"@\")\r\n   var3970!1 =\r\n     concat(all_20_3, rhs)\r\n   all_20_3 =\r\n     concat(var1675!2, \"@\")\r\n\r\n1653ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 13,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.Object",
            "if r0 != null goto $r1 = new java.lang.StringBuilder",
            "$r1 = new java.lang.StringBuilder",
            "specialinvoke $r1.<java.lang.StringBuilder: void <init>()>()",
            "$r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r3 = virtualinvoke $r2.<java.lang.Class: java.lang.String getName()>()",
            "$r4 = virtualinvoke $r1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r3)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"@\")",
            "$i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.String toString()>()",
            "return $r7"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__logClassLoaderEnvironment__-1123412948\\459.smt2",
        "z3": {
            "memory": 31637504,
            "run_time": 0.10808014869689941,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3178:\r\n  ;;   var3178!val!1 var3178!val!2 var3178!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3178!val!1 () var3178)\r\n  (declare-fun var3178!val!2 () var3178)\r\n  (declare-fun var3178!val!0 () var3178)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3178))\r\n          (or (= x var3178!val!1) (= x var3178!val!2) (= x var3178!val!0)))\r\n  ;; -----------\r\n  (define-fun var3740 () String\r\n    (getName/-1958580599 var156))\r\n  (define-fun var1582 () String\r\n    String-init)\r\n  (define-fun var2859 () String\r\n    (str.++ var3360!1\r\n        \"[ENV] Security forbids determining the class loader for \"\r\n        (getName/-1958580599 var156)))\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var2013 () var3178\r\n    var3178!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var156 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var3360 () String\r\n    String-init)\r\n  (define-fun var3467 () String\r\n    (str.++ var3360!1\r\n        \"[ENV] Security forbids determining the class loader for \"\r\n        (getName/-1958580599 var156)))\r\n  (define-fun null-var3178 () var3178\r\n    var3178!val!1)\r\n  (define-fun var625 () var3178\r\n    var3178!val!2)\r\n  (define-fun var3262 () Bool\r\n    var3483_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var178 () String\r\n    (str.++ var3360!1 \"[ENV] Security forbids determining the class loader for \"))\r\n  (define-fun var3360!2 () String\r\n    \"[ENV] Security forbids determining the class loader for \")\r\n  (define-fun var178!1 () String\r\n    \"[ENV] Security forbids determining the class loader for \")\r\n  (define-fun var3483_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var3360!1 () String\r\n    \"\")\r\n  (define-fun var2217 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2859!1 () String\r\n    \"\")\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun var3483_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 57 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6635520,
            "run_time": 0.030122756958007812,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3483 is 1\r\n; rep: (as @var3483_0 var3483)\r\n; cardinality of var3178 is 3\r\n; rep: (as @var3178_0 var3178)\r\n; rep: (as @var3178_1 var3178)\r\n; rep: (as @var3178_2 var3178)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var3483_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun var3483_logDiagnostic/1268238408 ((BOUND_VARIABLE_569 String)) void (as @void_0 void))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_572 ClassObject)) String \"\")\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-var3178 () var3178 (as @var3178_0 var3178))\r\n(define-fun var156 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var2013 () var3178 (as @var3178_1 var3178))\r\n(define-fun var2217 () String \"\")\r\n(define-fun var625 () var3178 (as @var3178_2 var3178))\r\n(define-fun var3360!1 () String \"\")\r\n(define-fun var3360!2 () String \"[ENV] Security forbids determining the class loader for \")\r\n(define-fun var178!1 () String \"[ENV] Security forbids determining the class loader for \")\r\n(define-fun var2859!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35659776,
            "run_time": 0.1391584873199463,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  ;; universe for var3178:\n  ;;   var3178!val!1 var3178!val!2 var3178!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3178!val!1 () var3178)\n  (declare-fun var3178!val!2 () var3178)\n  (declare-fun var3178!val!0 () var3178)\n  ;; cardinality constraint:\n  (forall ((x var3178))\n          (or (= x var3178!val!1) (= x var3178!val!2) (= x var3178!val!0)))\n  ;; -----------\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var3360 () String\n    String-init)\n  (define-fun var2013 () var3178\n    var3178!val!0)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3467 () String\n    (str.++ var3360!1\n        \"[ENV] Security forbids determining the class loader for \"\n        (getName/-1958580599 var156)))\n  (define-fun var178 () String\n    (str.++ var3360!1 \"[ENV] Security forbids determining the class loader for \"))\n  (define-fun var156 () ClassObject\n    ClassObject!val!0)\n  (define-fun var3740 () String\n    (getName/-1958580599 var156))\n  (define-fun var2859 () String\n    (str.++ var3360!1\n        \"[ENV] Security forbids determining the class loader for \"\n        (getName/-1958580599 var156)))\n  (define-fun null-var3178 () var3178\n    var3178!val!1)\n  (define-fun var625 () var3178\n    var3178!val!2)\n  (define-fun var1582 () String\n    String-init)\n  (define-fun var3262 () Bool\n    var3483_isDiagnosticsEnabled/-1004161365)\n  (define-fun var3360!2 () String\n    \"[ENV] Security forbids determining the class loader for \")\n  (define-fun var178!1 () String\n    \"[ENV] Security forbids determining the class loader for \")\n  (define-fun var3483_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var3360!1 () String\n    \"\")\n  (define-fun var2217 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2859!1 () String\n    \"\")\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n  (define-fun var3483_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 57 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181936128,
            "run_time": 2.148587942123413,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3178/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__logClassLoaderEnvironment__-1123412948\\459.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var178!1 =\r\n     concat(\"[ENV] Security forbids determining the class loader for \", all_17_2)\r\n\r\n1607ms\r\n"
        },
        "undefined_function_count": 4,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r10 := @parameter0: java.lang.Class",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 != 0 goto $r0 = new java.lang.StringBuilder",
            "$r0 = new java.lang.StringBuilder",
            "$r28 := @caughtexception",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>(\"[ENV] Security setting prevent interrogation of system classpaths.\")",
            "$r29 = virtualinvoke r10.<java.lang.Class: java.lang.String getName()>()",
            "$r23 := @caughtexception",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[ENV] Security forbids determining the class loader for \")",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r27)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__logClassLoaderEnvironment__-1123412948\\467.smt2",
        "z3": {
            "memory": 32256000,
            "run_time": 0.10198140144348145,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1673:\r\n  ;;   var1673!val!0 var1673!val!2 var1673!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1673!val!0 () var1673)\r\n  (declare-fun var1673!val!2 () var1673)\r\n  (declare-fun var1673!val!1 () var1673)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1673))\r\n          (or (= x var1673!val!0) (= x var1673!val!2) (= x var1673!val!1)))\r\n  ;; -----------\r\n  ;; universe for ClassObject:\r\n  ;;   ClassObject!val!0 ClassObject!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun ClassObject!val!0 () ClassObject)\r\n  (declare-fun ClassObject!val!1 () ClassObject)\r\n  ;; cardinality constraint:\r\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\r\n  ;; -----------\r\n  (define-fun var996 () Bool\r\n    var2351_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var2943 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var1612 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2928 () var1673\r\n    var1673!val!2)\r\n  (define-fun null-ClassObject () ClassObject\r\n    ClassObject!val!1)\r\n  (define-fun var2451 () String\r\n    String-init)\r\n  (define-fun var2360 () String\r\n    (getName/-1958580599 var2943))\r\n  (define-fun var1508 () var2136\r\n    (var2351_getClassLoader/1794181642 var2943))\r\n  (define-fun var3128 () var1673\r\n    var1673!val!0)\r\n  (define-fun var1847 () String\r\n    (str.++ var1612!1\r\n        \"[ENV] Security forbids determining the class loader for \"\r\n        (getName/-1958580599 var2943)))\r\n  (define-fun var2241 () String\r\n    (str.++ var1612!1 \"[ENV] Security forbids determining the class loader for \"))\r\n  (define-fun null-var1673 () var1673\r\n    var1673!val!1)\r\n  (define-fun var2848 () String\r\n    (str.++ var1612!1\r\n        \"[ENV] Security forbids determining the class loader for \"\r\n        (getName/-1958580599 var2943)))\r\n  (define-fun var1612!2 () String\r\n    \"[ENV] Security forbids determining the class loader for \")\r\n  (define-fun var2351_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var1612!1 () String\r\n    \"\")\r\n  (define-fun var2241!1 () String\r\n    \"[ENV] Security forbids determining the class loader for \")\r\n  (define-fun var3758 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2848!1 () String\r\n    \"\")\r\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\r\n    \"\")\r\n  (define-fun var2351_getClassLoader/1794181642 ((x!0 ClassObject)) var2136\r\n    var2136!val!0)\r\n  (define-fun var2351_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 61 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1687552,
            "run_time": 0.030593156814575195,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2351 is 1\r\n; rep: (as @var2351_0 var2351)\r\n; cardinality of var1673 is 3\r\n; rep: (as @var1673_0 var1673)\r\n; rep: (as @var1673_1 var1673)\r\n; rep: (as @var1673_2 var1673)\r\n; cardinality of var2136 is 1\r\n; rep: (as @var2136_0 var2136)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 2\r\n; rep: (as @ClassObject_0 ClassObject)\r\n; rep: (as @ClassObject_1 ClassObject)\r\n(define-fun var2351_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2351_logDiagnostic/1268238408 ((BOUND_VARIABLE_579 String)) void (as @void_0 void))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_582 ClassObject)) String \"\")\r\n(define-fun var2351_getClassLoader/1794181642 ((BOUND_VARIABLE_585 ClassObject)) var2136 (as @var2136_0 var2136))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-var1673 () var1673 (as @var1673_0 var1673))\r\n(define-fun var2943 () ClassObject (as @ClassObject_1 ClassObject))\r\n(define-fun var3128 () var1673 (as @var1673_1 var1673))\r\n(define-fun var3758 () String \"\")\r\n(define-fun var2928 () var1673 (as @var1673_2 var1673))\r\n(define-fun var1612!1 () String \"\")\r\n(define-fun var1612!2 () String \"[ENV] Security forbids determining the class loader for \")\r\n(define-fun var2241!1 () String \"[ENV] Security forbids determining the class loader for \")\r\n(define-fun var2848!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36413440,
            "run_time": 0.09188270568847656,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1673:\n  ;;   var1673!val!0 var1673!val!2 var1673!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1673!val!0 () var1673)\n  (declare-fun var1673!val!2 () var1673)\n  (declare-fun var1673!val!1 () var1673)\n  ;; cardinality constraint:\n  (forall ((x var1673))\n          (or (= x var1673!val!0) (= x var1673!val!2) (= x var1673!val!1)))\n  ;; -----------\n  ;; universe for ClassObject:\n  ;;   ClassObject!val!0 ClassObject!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun ClassObject!val!0 () ClassObject)\n  (declare-fun ClassObject!val!1 () ClassObject)\n  ;; cardinality constraint:\n  (forall ((x ClassObject)) (or (= x ClassObject!val!0) (= x ClassObject!val!1)))\n  ;; -----------\n  (define-fun var1612 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2943 () ClassObject\n    ClassObject!val!0)\n  (define-fun var1508 () var2136\n    (var2351_getClassLoader/1794181642 var2943))\n  (define-fun var2928 () var1673\n    var1673!val!2)\n  (define-fun var2451 () String\n    String-init)\n  (define-fun var2360 () String\n    (getName/-1958580599 var2943))\n  (define-fun var1847 () String\n    (str.++ var1612!1\n        \"[ENV] Security forbids determining the class loader for \"\n        (getName/-1958580599 var2943)))\n  (define-fun null-ClassObject () ClassObject\n    ClassObject!val!1)\n  (define-fun var996 () Bool\n    var2351_isDiagnosticsEnabled/-1004161365)\n  (define-fun var3128 () var1673\n    var1673!val!0)\n  (define-fun var2241 () String\n    (str.++ var1612!1 \"[ENV] Security forbids determining the class loader for \"))\n  (define-fun var2848 () String\n    (str.++ var1612!1\n        \"[ENV] Security forbids determining the class loader for \"\n        (getName/-1958580599 var2943)))\n  (define-fun null-var1673 () var1673\n    var1673!val!1)\n  (define-fun var1612!2 () String\n    \"[ENV] Security forbids determining the class loader for \")\n  (define-fun var2351_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var1612!1 () String\n    \"\")\n  (define-fun var2241!1 () String\n    \"[ENV] Security forbids determining the class loader for \")\n  (define-fun var3758 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2848!1 () String\n    \"\")\n  (define-fun getName/-1958580599 ((x!0 ClassObject)) String\n    \"\")\n  (define-fun var2351_getClassLoader/1794181642 ((x!0 ClassObject)) var2136\n    var2136!val!0)\n  (define-fun var2351_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 61 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176840704,
            "run_time": 2.1195507049560547,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: ClassObject/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__logClassLoaderEnvironment__-1123412948\\467.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2241!1 =\r\n     concat(\"[ENV] Security forbids determining the class loader for \", all_19_2)\r\n\r\n1627ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r10 := @parameter0: java.lang.Class",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 != 0 goto $r0 = new java.lang.StringBuilder",
            "$r0 = new java.lang.StringBuilder",
            "$r28 := @caughtexception",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>(\"[ENV] Security setting prevent interrogation of system classpaths.\")",
            "$r29 = virtualinvoke r10.<java.lang.Class: java.lang.String getName()>()",
            "$r30 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>(r10)",
            "$r23 := @caughtexception",
            "$r24 = new java.lang.StringBuilder",
            "specialinvoke $r24.<java.lang.StringBuilder: void <init>()>()",
            "$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[ENV] Security forbids determining the class loader for \")",
            "$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r29)",
            "$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r27)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__lambda$getResources$1__1913764690\\572.smt2",
        "z3": {
            "memory": 31928320,
            "run_time": 0.10380983352661133,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1371:\r\n  ;;   var1371!val!0 var1371!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1371!val!0 () var1371)\r\n  (declare-fun var1371!val!1 () var1371)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1371)) (or (= x var1371!val!0) (= x var1371!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1019:\r\n  ;;   var1019!val!1 var1019!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1019!val!1 () var1019)\r\n  (declare-fun var1019!val!0 () var1019)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1019)) (or (= x var1019!val!1) (= x var1019!val!0)))\r\n  ;; -----------\r\n  (define-fun var3076 () String\r\n    (getMessage/849299655 (cast-from-var1019-to-var1154 var277)))\r\n  (define-fun var2353 () var771\r\n    (getResources/-300194759 var2057 var1791))\r\n  (define-fun null-var1019 () var1019\r\n    var1019!val!1)\r\n  (define-fun var2106 () String\r\n    (str.++ var651!1 \"Exception while trying to find configuration file \" var1791))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2057 () var1371\r\n    var1371!val!0)\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2847 () Bool\r\n    var629_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var1184 () String\r\n    (str.++ var651!1\r\n        \"Exception while trying to find configuration file \"\r\n        var1791\r\n        \":\"\r\n        (getMessage/849299655 (cast-from-var1019-to-var1154 var277))))\r\n  (define-fun var6 () String\r\n    (str.++ var651!1\r\n        \"Exception while trying to find configuration file \"\r\n        var1791\r\n        \":\"))\r\n  (define-fun var651 () String\r\n    String-init)\r\n  (define-fun var3606 () String\r\n    (str.++ var651!1\r\n        \"Exception while trying to find configuration file \"\r\n        var1791\r\n        \":\"\r\n        (getMessage/849299655 (cast-from-var1019-to-var1154 var277))))\r\n  (define-fun null-var1371 () var1371\r\n    var1371!val!1)\r\n  (define-fun var3767 () String\r\n    (str.++ var651!1 \"Exception while trying to find configuration file \"))\r\n  (define-fun var1791 () String\r\n    \"A\")\r\n  (define-fun var277 () var1019\r\n    var1019!val!0)\r\n  (define-fun var2106!1 () String\r\n    \"Exception while trying to find configuration file A:\")\r\n  (define-fun var3767!1 () String\r\n    \"Exception while trying to find configuration file A\")\r\n  (define-fun var629_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var651!2 () String\r\n    \"Exception while trying to find configuration file \")\r\n  (define-fun var6!1 () String\r\n    \"Exception while trying to find configuration file A:\")\r\n  (define-fun var651!1 () String\r\n    \"\")\r\n  (define-fun var3606!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var1019-to-var1154 ((x!0 var1019)) var1154\r\n    var1154!val!0)\r\n  (define-fun getMessage/849299655 ((x!0 var1154)) String\r\n    \"\")\r\n  (define-fun getResources/-300194759 ((x!0 var1371) (x!1 String)) var771\r\n    var771!val!0)\r\n  (define-fun var629_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 71 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 5705728,
            "run_time": 0.0308229923248291,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1371 is 2\r\n; rep: (as @var1371_0 var1371)\r\n; rep: (as @var1371_1 var1371)\r\n; cardinality of var100 is 1\r\n; rep: (as @var100_0 var100)\r\n; cardinality of var771 is 1\r\n; rep: (as @var771_0 var771)\r\n; cardinality of var1019 is 2\r\n; rep: (as @var1019_0 var1019)\r\n; rep: (as @var1019_1 var1019)\r\n; cardinality of var629 is 1\r\n; rep: (as @var629_0 var629)\r\n; cardinality of var1154 is 1\r\n; rep: (as @var1154_0 var1154)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getResources/-300194759 ((BOUND_VARIABLE_712 var1371) (BOUND_VARIABLE_713 String)) var771 (as @var771_0 var771))\r\n(define-fun var629_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun getMessage/849299655 ((BOUND_VARIABLE_716 var1154)) String \"\")\r\n(define-fun cast-from-var1019-to-var1154 ((BOUND_VARIABLE_719 var1019)) var1154 (as @var1154_0 var1154))\r\n(define-fun var629_logDiagnostic/1268238408 ((BOUND_VARIABLE_722 String)) void (as @void_0 void))\r\n(define-fun null-var1371 () var1371 (as @var1371_0 var1371))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1019 () var1019 (as @var1019_0 var1019))\r\n(define-fun var2057 () var1371 (as @var1371_1 var1371))\r\n(define-fun var1791 () String \"\")\r\n(define-fun var277 () var1019 (as @var1019_1 var1019))\r\n(define-fun var651!1 () String \"\")\r\n(define-fun var651!2 () String \"Exception while trying to find configuration file \")\r\n(define-fun var3767!1 () String \"Exception while trying to find configuration file \")\r\n(define-fun var2106!1 () String \"Exception while trying to find configuration file :\")\r\n(define-fun var6!1 () String \"Exception while trying to find configuration file :\")\r\n(define-fun var3606!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37412864,
            "run_time": 0.10738396644592285,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1371:\n  ;;   var1371!val!0 var1371!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1371!val!0 () var1371)\n  (declare-fun var1371!val!1 () var1371)\n  ;; cardinality constraint:\n  (forall ((x var1371)) (or (= x var1371!val!0) (= x var1371!val!1)))\n  ;; -----------\n  ;; universe for var1019:\n  ;;   var1019!val!1 var1019!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1019!val!1 () var1019)\n  (declare-fun var1019!val!0 () var1019)\n  ;; cardinality constraint:\n  (forall ((x var1019)) (or (= x var1019!val!1) (= x var1019!val!0)))\n  ;; -----------\n  (define-fun var651!1 () String\n    \"\")\n  (define-fun var6!1 () String\n    \"Exception while trying to find configuration file \\u{0}\\u{0}:\")\n  (define-fun var651!2 () String\n    \"Exception while trying to find configuration file \")\n  (define-fun var629_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3767!1 () String\n    \"Exception while trying to find configuration file \\u{0}\\u{0}\")\n  (define-fun null-var1019 () var1019\n    var1019!val!1)\n  (define-fun var2106!1 () String\n    \"Exception while trying to find configuration file \\u{0}\\u{0}:\")\n  (define-fun var2847 () Bool\n    var629_isDiagnosticsEnabled/-1004161365)\n  (define-fun var2057 () var1371\n    var1371!val!0)\n  (define-fun var2106 () String\n    (str.++ var651!1 \"Exception while trying to find configuration file \" var1791))\n  (define-fun var3606 () String\n    (str.++ var651!1\n        \"Exception while trying to find configuration file \"\n        var1791\n        \":\"\n        (getMessage/849299655 (cast-from-var1019-to-var1154 var277))))\n  (define-fun var277 () var1019\n    var1019!val!0)\n  (define-fun var1184 () String\n    (str.++ var651!1\n        \"Exception while trying to find configuration file \"\n        var1791\n        \":\"\n        (getMessage/849299655 (cast-from-var1019-to-var1154 var277))))\n  (define-fun var2353 () var771\n    (getResources/-300194759 var2057 var1791))\n  (define-fun null-var1371 () var1371\n    var1371!val!1)\n  (define-fun var1791 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var3767 () String\n    (str.++ var651!1 \"Exception while trying to find configuration file \"))\n  (define-fun var3076 () String\n    (getMessage/849299655 (cast-from-var1019-to-var1154 var277)))\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var651 () String\n    String-init)\n  (define-fun var6 () String\n    (str.++ var651!1\n        \"Exception while trying to find configuration file \"\n        var1791\n        \":\"))\n  (define-fun var3606!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun cast-from-var1019-to-var1154 ((x!0 var1019)) var1154\n    var1154!val!0)\n  (define-fun getMessage/849299655 ((x!0 var1154)) String\n    \"\")\n  (define-fun getResources/-300194759 ((x!0 var1371) (x!1 String)) var771\n    var771!val!0)\n  (define-fun var629_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 71 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 170520576,
            "run_time": 2.3610126972198486,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1371/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__lambda$getResources$1__1913764690\\572.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var6!1 =\r\n     concat(all_35_6, all_35_4)\r\n   var2106!1 =\r\n     concat(all_32_3, \":\")\r\n   var3767!1 =\r\n     concat(\"Exception while trying to find configuration file \", var1791)\r\n   all_35_6 =\r\n     concat(all_35_7, \":\")\r\n   all_32_3 =\r\n     concat(\"Exception while trying to find configuration file \", var1791)\r\n   all_35_7 =\r\n     concat(\"Exception while trying to find configuration file \", var1791)\r\n\r\n1815ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.ClassLoader",
            "r1 := @parameter1: java.lang.String",
            "if r0 == null goto $r2 = staticinvoke <java.lang.ClassLoader: java.util.Enumeration getSystemResources(java.lang.String)>(r1)",
            "$r3 = virtualinvoke r0.<java.lang.ClassLoader: java.util.Enumeration getResources(java.lang.String)>(r1)",
            "$r5 := @caughtexception",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return null",
            "$r6 = new java.lang.StringBuilder",
            "specialinvoke $r6.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Exception while trying to find configuration file \")",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\":\")",
            "$r9 = virtualinvoke $r5.<java.io.IOException: java.lang.String getMessage()>()",
            "$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r9)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r12)",
            "return null"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__logHierarchy__-997178389\\482.smt2",
        "z3": {
            "memory": 31686656,
            "run_time": 0.08871221542358398,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 74 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1658880,
            "run_time": 0.03001999855041504,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34988032,
            "run_time": 0.12163329124450684,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 74 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 170364928,
            "run_time": 2.2098400592803955,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 7,
        "assertion_count": 22,
        "api_sequence": [
            "<java.lang.Object: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 5,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.String",
            "r24 := @parameter1: java.lang.ClassLoader",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 != 0 goto (branch)",
            "if r24 == null goto $r17 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>()",
            "r25 = virtualinvoke r24.<java.lang.Object: java.lang.String toString()>()",
            "$r9 = new java.lang.StringBuilder",
            "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()",
            "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r24)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" == \\'\")",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\'\")",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r16)",
            "$r17 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>()",
            "goto [?= (branch)]",
            "if r24 == null goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__logHierarchy__-997178389\\474.smt2",
        "z3": {
            "memory": 31830016,
            "run_time": 0.18350744247436523,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2337:\r\n  ;;   var2337!val!0 var2337!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2337!val!0 () var2337)\r\n  (declare-fun var2337!val!1 () var2337)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2337)) (or (= x var2337!val!0) (= x var2337!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1378:\r\n  ;;   var1378!val!0 var1378!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1378!val!0 () var1378)\r\n  (declare-fun var1378!val!1 () var1378)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1378)) (or (= x var1378!val!0) (= x var1378!val!1)))\r\n  ;; -----------\r\n  (define-fun var2140 () String\r\n    (str.++ var2726!1 var1195))\r\n  (define-fun null-var1378 () var1378\r\n    var1378!val!1)\r\n  (define-fun var1876 () String\r\n    String-init)\r\n  (define-fun null-var2337 () var2337\r\n    var2337!val!1)\r\n  (define-fun var2960 () String\r\n    (str.++ var1876!1 var1195))\r\n  (define-fun var2050 () String\r\n    (str.++ var2726!1\r\n        var1195\r\n        \"Security forbids determining the system class loader.\"))\r\n  (define-fun var2726!2 () String\r\n    \"\")\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2726 () String\r\n    String-init)\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1784 () Bool\r\n    var1398_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var520 () String\r\n    (var1398_objectId/1952731062 (cast-from-var2337-to-var3895 var3245)))\r\n  (define-fun var383 () String\r\n    (toString/-522406933 (cast-from-var2337-to-var3895 var3245)))\r\n  (define-fun var3245 () var2337\r\n    var2337!val!0)\r\n  (define-fun var3766 () String\r\n    (str.++ var1876!1\r\n        var1195\r\n        (var1398_objectId/1952731062 (cast-from-var2337-to-var3895 var3245))\r\n        \" == '\"\r\n        (toString/-522406933 (cast-from-var2337-to-var3895 var3245))\r\n        \"'\"))\r\n  (define-fun var2175 () String\r\n    (str.++ var1876!1\r\n        var1195\r\n        (var1398_objectId/1952731062 (cast-from-var2337-to-var3895 var3245))\r\n        \" == '\"\r\n        (toString/-522406933 (cast-from-var2337-to-var3895 var3245))\r\n        \"'\"))\r\n  (define-fun var2612 () String\r\n    (str.++ var1876!1\r\n        var1195\r\n        (var1398_objectId/1952731062 (cast-from-var2337-to-var3895 var3245))\r\n        \" == '\"\r\n        (toString/-522406933 (cast-from-var2337-to-var3895 var3245))))\r\n  (define-fun var1523 () String\r\n    (str.++ var2726!1\r\n        var1195\r\n        \"Security forbids determining the system class loader.\"))\r\n  (define-fun var644 () String\r\n    (str.++ var1876!1\r\n        var1195\r\n        (var1398_objectId/1952731062 (cast-from-var2337-to-var3895 var3245))\r\n        \" == '\"))\r\n  (define-fun var3113 () String\r\n    (str.++ var1876!1\r\n        var1195\r\n        (var1398_objectId/1952731062 (cast-from-var2337-to-var3895 var3245))))\r\n  (define-fun var2099 () var1378\r\n    var1378!val!0)\r\n  (define-fun var1876!1 () String\r\n    \"\")\r\n  (define-fun var2140!1 () String\r\n    \"Security forbids determining the system class loader.\")\r\n  (define-fun var1876!2 () String\r\n    \"\")\r\n  (define-fun var644!1 () String\r\n    \" == '\")\r\n  (define-fun var2726!1 () String\r\n    \"\")\r\n  (define-fun var2960!1 () String\r\n    \"\")\r\n  (define-fun var1398_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var3113!1 () String\r\n    \" == '\")\r\n  (define-fun var2612!1 () String\r\n    \" == ''\")\r\n  (define-fun var1195 () String\r\n    \"\")\r\n  (define-fun var2175!1 () String\r\n    \"\")\r\n  (define-fun var1523!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var2337-to-var3895 ((x!0 var2337)) var3895\r\n    var3895!val!0)\r\n  (define-fun var1398_objectId/1952731062 ((x!0 var3895)) String\r\n    \"\")\r\n  (define-fun toString/-522406933 ((x!0 var3895)) String\r\n    \"\")\r\n  (define-fun var1398_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 90 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1716224,
            "run_time": 0.030327320098876953,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var229 is 1\r\n; rep: (as @var229_0 var229)\r\n; cardinality of var2337 is 2\r\n; rep: (as @var2337_0 var2337)\r\n; rep: (as @var2337_1 var2337)\r\n; cardinality of var1398 is 1\r\n; rep: (as @var1398_0 var1398)\r\n; cardinality of var3895 is 1\r\n; rep: (as @var3895_0 var3895)\r\n; cardinality of var1378 is 2\r\n; rep: (as @var1378_0 var1378)\r\n; rep: (as @var1378_1 var1378)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1398_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun toString/-522406933 ((BOUND_VARIABLE_809 var3895)) String \"\")\r\n(define-fun cast-from-var2337-to-var3895 ((BOUND_VARIABLE_812 var2337)) var3895 (as @var3895_0 var3895))\r\n(define-fun String-init () String \"\")\r\n(define-fun var1398_objectId/1952731062 ((BOUND_VARIABLE_815 var3895)) String \"\")\r\n(define-fun var1398_logDiagnostic/1268238408 ((BOUND_VARIABLE_818 String)) void (as @void_0 void))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var2337 () var2337 (as @var2337_0 var2337))\r\n(define-fun null-var1378 () var1378 (as @var1378_0 var1378))\r\n(define-fun var1195 () String \"\")\r\n(define-fun var3245 () var2337 (as @var2337_1 var2337))\r\n(define-fun var1876!1 () String \"\")\r\n(define-fun var1876!2 () String \"\")\r\n(define-fun var2960!1 () String \"\")\r\n(define-fun var3113!1 () String \" == '\")\r\n(define-fun var644!1 () String \" == '\")\r\n(define-fun var2612!1 () String \" == ''\")\r\n(define-fun var2175!1 () String \"\")\r\n(define-fun var2099 () var1378 (as @var1378_1 var1378))\r\n(define-fun var2726!1 () String \"\")\r\n(define-fun var2726!2 () String \"\")\r\n(define-fun var2140!1 () String \"Security forbids determining the system class loader.\")\r\n(define-fun var1523!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37408768,
            "run_time": 0.1372842788696289,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2337:\n  ;;   var2337!val!0 var2337!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2337!val!0 () var2337)\n  (declare-fun var2337!val!1 () var2337)\n  ;; cardinality constraint:\n  (forall ((x var2337)) (or (= x var2337!val!0) (= x var2337!val!1)))\n  ;; -----------\n  ;; universe for var1378:\n  ;;   var1378!val!0 var1378!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1378!val!0 () var1378)\n  (declare-fun var1378!val!1 () var1378)\n  ;; cardinality constraint:\n  (forall ((x var1378)) (or (= x var1378!val!0) (= x var1378!val!1)))\n  ;; -----------\n  (define-fun var2960!1 () String\n    \"\\u{0}\")\n  (define-fun var2726!1 () String\n    \"\")\n  (define-fun var644!1 () String\n    \"\\u{0} == '\")\n  (define-fun var1876!2 () String\n    \"\\u{0}\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2140!1 () String\n    \"\\u{0}Security forbids determining the system class loader.\")\n  (define-fun var1876!1 () String\n    \"\")\n  (define-fun var2960 () String\n    (str.++ var1876!1 var1195))\n  (define-fun var520 () String\n    (var1398_objectId/1952731062 (cast-from-var2337-to-var3895 var3245)))\n  (define-fun var3766 () String\n    (str.++ var1876!1\n        var1195\n        (var1398_objectId/1952731062 (cast-from-var2337-to-var3895 var3245))\n        \" == '\"\n        (toString/-522406933 (cast-from-var2337-to-var3895 var3245))\n        \"'\"))\n  (define-fun var2726!2 () String\n    \"\\u{0}\")\n  (define-fun var1398_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var2175 () String\n    (str.++ var1876!1\n        var1195\n        (var1398_objectId/1952731062 (cast-from-var2337-to-var3895 var3245))\n        \" == '\"\n        (toString/-522406933 (cast-from-var2337-to-var3895 var3245))\n        \"'\"))\n  (define-fun var1195 () String\n    \"\\u{0}\")\n  (define-fun var1523 () String\n    (str.++ var2726!1\n        var1195\n        \"Security forbids determining the system class loader.\"))\n  (define-fun var2612!1 () String\n    \"\\u{0} == ''\")\n  (define-fun var3113!1 () String\n    \"\\u{0} == '\")\n  (define-fun var2140 () String\n    (str.++ var2726!1 var1195))\n  (define-fun var1876 () String\n    String-init)\n  (define-fun var3245 () var2337\n    var2337!val!0)\n  (define-fun var2099 () var1378\n    var1378!val!0)\n  (define-fun var1784 () Bool\n    var1398_isDiagnosticsEnabled/-1004161365)\n  (define-fun null-var1378 () var1378\n    var1378!val!1)\n  (define-fun var2050 () String\n    (str.++ var2726!1\n        var1195\n        \"Security forbids determining the system class loader.\"))\n  (define-fun null-var2337 () var2337\n    var2337!val!1)\n  (define-fun var3113 () String\n    (str.++ var1876!1\n        var1195\n        (var1398_objectId/1952731062 (cast-from-var2337-to-var3895 var3245))))\n  (define-fun var2726 () String\n    String-init)\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var644 () String\n    (str.++ var1876!1\n        var1195\n        (var1398_objectId/1952731062 (cast-from-var2337-to-var3895 var3245))\n        \" == '\"))\n  (define-fun var383 () String\n    (toString/-522406933 (cast-from-var2337-to-var3895 var3245)))\n  (define-fun var2612 () String\n    (str.++ var1876!1\n        var1195\n        (var1398_objectId/1952731062 (cast-from-var2337-to-var3895 var3245))\n        \" == '\"\n        (toString/-522406933 (cast-from-var2337-to-var3895 var3245))))\n  (define-fun var2175!1 () String\n    \"\")\n  (define-fun var1523!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun cast-from-var2337-to-var3895 ((x!0 var2337)) var3895\n    var3895!val!0)\n  (define-fun var1398_objectId/1952731062 ((x!0 var3895)) String\n    \"\")\n  (define-fun toString/-522406933 ((x!0 var3895)) String\n    \"\")\n  (define-fun var1398_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 90 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 186265600,
            "run_time": 2.503408193588257,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2337/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__logHierarchy__-997178389\\474.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2612!1 =\r\n     concat(all_42_6, \"\\u{0}27\")\r\n   var644!1 =\r\n     concat(all_39_6, all_39_5)\r\n   var3113!1 =\r\n     concat(all_36_4, \" == \\u{0}27\")\r\n   var2960!1 =\r\n     concat(var1195, all_33_3)\r\n   all_29_3 =\r\n     concat(var1195, \"Security forbids determining the system class loader.\")\r\n   var2140!1 =\r\n     concat(var1195, \"Security forbids determining the system class loader.\")\r\n   all_42_6 =\r\n     concat(all_42_8, all_39_5)\r\n   all_39_6 =\r\n     concat(all_39_7, \" == \\u{0}27\")\r\n   all_36_4 =\r\n     concat(var1195, all_33_3)\r\n   all_42_8 =\r\n     concat(all_42_9, \" == \\u{0}27\")\r\n   all_39_7 =\r\n     concat(var1195, all_33_3)\r\n   all_42_9 =\r\n     concat(var1195, all_33_3)\r\n\r\n1983ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 27,
        "api_sequence": [
            "<java.lang.Object: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.String",
            "r24 := @parameter1: java.lang.ClassLoader",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 != 0 goto (branch)",
            "if r24 == null goto $r17 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>()",
            "r25 = virtualinvoke r24.<java.lang.Object: java.lang.String toString()>()",
            "$r9 = new java.lang.StringBuilder",
            "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()",
            "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r24)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" == \\'\")",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\'\")",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r16)",
            "$r19 := @caughtexception",
            "$r20 = new java.lang.StringBuilder",
            "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Security forbids determining the system class loader.\")",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r23)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__release__-1355242150\\509.smt2",
        "z3": {
            "memory": 31985664,
            "run_time": 0.11861228942871094,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1033:\r\n  ;;   var1033!val!1 var1033!val!0 var1033!val!2 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1033!val!1 () var1033)\r\n  (declare-fun var1033!val!0 () var1033)\r\n  (declare-fun var1033!val!2 () var1033)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1033))\r\n          (or (= x var1033!val!1) (= x var1033!val!0) (= x var1033!val!2)))\r\n  ;; -----------\r\n  ;; universe for var3914:\r\n  ;;   var3914!val!0 var3914!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3914!val!0 () var3914)\r\n  (declare-fun var3914!val!1 () var3914)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3914)) (or (= x var3914!val!0) (= x var3914!val!1)))\r\n  ;; -----------\r\n  (define-fun var3055 () var3013\r\n    var3928-factories)\r\n  (define-fun var3618!1 () var1033\r\n    var1033!val!2)\r\n  (define-fun var2781 () var3914\r\n    var3914!val!0)\r\n  (define-fun null-var3914 () var3914\r\n    var3914!val!1)\r\n  (define-fun null-var1033 () var1033\r\n    var1033!val!1)\r\n  (define-fun var3618 () var1033\r\n    var1033!val!0)\r\n  (define-fun var470 () Bool\r\n    var3928_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var3928_isDiagnosticsEnabled/-1004161365 () Bool\r\n    false)\r\n  (define-fun var3928-factories () var3013\r\n    var3013!val!0)\r\n)\r\n(error \"line 34 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.06565546989440918,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3914 is 2\r\n; rep: (as @var3914_0 var3914)\r\n; rep: (as @var3914_1 var3914)\r\n; cardinality of var3928 is 1\r\n; rep: (as @var3928_0 var3928)\r\n; cardinality of var3013 is 1\r\n; rep: (as @var3013_0 var3013)\r\n; cardinality of var1033 is 3\r\n; rep: (as @var1033_0 var1033)\r\n; rep: (as @var1033_1 var1033)\r\n; rep: (as @var1033_2 var1033)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3928_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n(define-fun null-var3914 () var3914 (as @var3914_0 var3914))\r\n(define-fun var3928-factories () var3013 (as @var3013_0 var3013))\r\n(define-fun null-var1033 () var1033 (as @var1033_0 var1033))\r\n(define-fun var2781 () var3914 (as @var3914_1 var3914))\r\n(define-fun var3618 () var1033 (as @var1033_1 var1033))\r\n(define-fun var3618!1 () var1033 (as @var1033_2 var1033))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35643392,
            "run_time": 0.12553024291992188,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1033:\n  ;;   var1033!val!1 var1033!val!0 var1033!val!2 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1033!val!1 () var1033)\n  (declare-fun var1033!val!0 () var1033)\n  (declare-fun var1033!val!2 () var1033)\n  ;; cardinality constraint:\n  (forall ((x var1033))\n          (or (= x var1033!val!1) (= x var1033!val!0) (= x var1033!val!2)))\n  ;; -----------\n  ;; universe for var3914:\n  ;;   var3914!val!0 var3914!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3914!val!0 () var3914)\n  (declare-fun var3914!val!1 () var3914)\n  ;; cardinality constraint:\n  (forall ((x var3914)) (or (= x var3914!val!0) (= x var3914!val!1)))\n  ;; -----------\n  (define-fun var470 () Bool\n    var3928_isDiagnosticsEnabled/-1004161365)\n  (define-fun var3618!1 () var1033\n    var1033!val!2)\n  (define-fun var2781 () var3914\n    var3914!val!0)\n  (define-fun null-var3914 () var3914\n    var3914!val!1)\n  (define-fun null-var1033 () var1033\n    var1033!val!1)\n  (define-fun var3618 () var1033\n    var1033!val!0)\n  (define-fun var3055 () var3013\n    var3928-factories)\n  (define-fun var3928_isDiagnosticsEnabled/-1004161365 () Bool\n    false)\n  (define-fun var3928-factories () var3013\n    var3013!val!0)\n)\n(error \"line 34 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 137879552,
            "run_time": 1.6937916278839111,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3618!1 () var1033 var1033!10)\r\n  (define-fun var3618 () var1033 var1033!8)\r\n  (define-fun var2781 () var3914 var3914!6)\r\n  (define-fun null-var1033 () var1033 var1033!4)\r\n  (define-fun null-var3914 () var3914 var3914!2)\r\n  (define-fun var3928_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 8,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.ClassLoader",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "$r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "entermonitor $r10",
            "$r11 := @caughtexception",
            "$r11 := @caughtexception",
            "exitmonitor $r10",
            "throw $r11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__newFactory__-1005559516\\496.smt2",
        "z3": {
            "memory": 31862784,
            "run_time": 0.10567331314086914,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1997:\r\n  ;;   var1997!val!0 var1997!val!2 var1997!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1997!val!0 () var1997)\r\n  (declare-fun var1997!val!2 () var1997)\r\n  (declare-fun var1997!val!1 () var1997)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1997))\r\n          (or (= x var1997!val!0) (= x var1997!val!2) (= x var1997!val!1)))\r\n  ;; -----------\r\n  (define-fun var1166 () String\r\n    (var128_objectId/1952731062 (cast-from-var1997-to-var684 var908)))\r\n  (define-fun var1936 () var1997\r\n    var1997!val!0)\r\n  (define-fun var90 () var684\r\n    (var1938_doPrivileged/1828555841\r\n  (var919_bootstrap$/-1963771018 var1456 var1936)))\r\n  (define-fun var908 () var1997\r\n    var1997!val!2)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3087 () var128\r\n    (cast-from-var684-to-var128\r\n  (var1938_doPrivileged/1828555841\r\n    (var919_bootstrap$/-1963771018 var1456 var1936))))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var3217 () String\r\n    (var128_objectId/1952731062\r\n  (var1938_doPrivileged/1828555841\r\n    (var919_bootstrap$/-1963771018 var1456 var1936))))\r\n  (define-fun null-var1997 () var1997\r\n    var1997!val!1)\r\n  (define-fun var2558 () String\r\n    String-init)\r\n  (define-fun var2601 () String\r\n    (str.++ var2558!1\r\n        \"Created object \"\r\n        (var128_objectId/1952731062\r\n          (var1938_doPrivileged/1828555841\r\n            (var919_bootstrap$/-1963771018 var1456 var1936)))\r\n        \" to manage class loader \"\r\n        (var128_objectId/1952731062 (cast-from-var1997-to-var684 var908))))\r\n  (define-fun var3789 () var741\r\n    (var919_bootstrap$/-1963771018 var1456 var1936))\r\n  (define-fun var2075 () String\r\n    (str.++ var2558!1\r\n        \"Created object \"\r\n        (var128_objectId/1952731062\r\n          (var1938_doPrivileged/1828555841\r\n            (var919_bootstrap$/-1963771018 var1456 var1936)))\r\n        \" to manage class loader \"\r\n        (var128_objectId/1952731062 (cast-from-var1997-to-var684 var908))))\r\n  (define-fun var3791 () Bool\r\n    false)\r\n  (define-fun var1492 () String\r\n    (str.++ var2558!1 \"Created object \"))\r\n  (define-fun var3103 () Bool\r\n    var128_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var1456 () String\r\n    \"A\")\r\n  (define-fun var1709 () String\r\n    (str.++ var2558!1\r\n        \"Created object \"\r\n        (var128_objectId/1952731062\r\n          (var1938_doPrivileged/1828555841\r\n            (var919_bootstrap$/-1963771018 var1456 var1936)))))\r\n  (define-fun var562 () String\r\n    (str.++ var2558!1\r\n        \"Created object \"\r\n        (var128_objectId/1952731062\r\n          (var1938_doPrivileged/1828555841\r\n            (var919_bootstrap$/-1963771018 var1456 var1936)))\r\n        \" to manage class loader \"))\r\n  (define-fun var2558!2 () String\r\n    \"Created object \")\r\n  (define-fun var1709!1 () String\r\n    \"Created object  to manage class loader \")\r\n  (define-fun var1492!1 () String\r\n    \"Created object \")\r\n  (define-fun var128_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var562!1 () String\r\n    \"Created object  to manage class loader \")\r\n  (define-fun var2558!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2075!1 () String\r\n    \"\")\r\n  (define-fun var919_bootstrap$/-1963771018 ((x!0 String) (x!1 var1997)) var741\r\n    var741!val!0)\r\n  (define-fun var1938_doPrivileged/1828555841 ((x!0 var741)) var684\r\n    var684!val!0)\r\n  (define-fun var128_objectId/1952731062 ((x!0 var684)) String\r\n    \"\")\r\n  (define-fun cast-from-var1997-to-var684 ((x!0 var1997)) var684\r\n    var684!val!0)\r\n  (define-fun cast-from-var684-to-var128 ((x!0 var684)) var128\r\n    var128!val!0)\r\n  (define-fun var128_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 74 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9609216,
            "run_time": 0.0316166877746582,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2510 is 1\r\n; rep: (as @var2510_0 var2510)\r\n; cardinality of var1997 is 3\r\n; rep: (as @var1997_0 var1997)\r\n; rep: (as @var1997_1 var1997)\r\n; rep: (as @var1997_2 var1997)\r\n; cardinality of var741 is 1\r\n; rep: (as @var741_0 var741)\r\n; cardinality of var919 is 1\r\n; rep: (as @var919_0 var919)\r\n; cardinality of var684 is 1\r\n; rep: (as @var684_0 var684)\r\n; cardinality of var1938 is 1\r\n; rep: (as @var1938_0 var1938)\r\n; cardinality of var128 is 1\r\n; rep: (as @var128_0 var128)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var919_bootstrap$/-1963771018 ((BOUND_VARIABLE_749 String) (BOUND_VARIABLE_750 var1997)) var741 (as @var741_0 var741))\r\n(define-fun var1938_doPrivileged/1828555841 ((BOUND_VARIABLE_753 var741)) var684 (as @var684_0 var684))\r\n(define-fun var128_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun var128_objectId/1952731062 ((BOUND_VARIABLE_756 var684)) String \"\")\r\n(define-fun cast-from-var1997-to-var684 ((BOUND_VARIABLE_759 var1997)) var684 (as @var684_0 var684))\r\n(define-fun var128_logDiagnostic/1268238408 ((BOUND_VARIABLE_762 String)) void (as @void_0 void))\r\n(define-fun cast-from-var684-to-var128 ((BOUND_VARIABLE_765 var684)) var128 (as @var128_0 var128))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1997 () var1997 (as @var1997_0 var1997))\r\n(define-fun var1456 () String \"\")\r\n(define-fun var1936 () var1997 (as @var1997_1 var1997))\r\n(define-fun var908 () var1997 (as @var1997_2 var1997))\r\n(define-fun var2558!1 () String \"\")\r\n(define-fun var2558!2 () String \"Created object \")\r\n(define-fun var1492!1 () String \"Created object \")\r\n(define-fun var1709!1 () String \"Created object  to manage class loader \")\r\n(define-fun var562!1 () String \"Created object  to manage class loader \")\r\n(define-fun var2075!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36700160,
            "run_time": 0.18944692611694336,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1997:\n  ;;   var1997!val!0 var1997!val!2 var1997!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1997!val!0 () var1997)\n  (declare-fun var1997!val!2 () var1997)\n  (declare-fun var1997!val!1 () var1997)\n  ;; cardinality constraint:\n  (forall ((x var1997))\n          (or (= x var1997!val!0) (= x var1997!val!2) (= x var1997!val!1)))\n  ;; -----------\n  (define-fun var2558!1 () String\n    \"\")\n  (define-fun var562!1 () String\n    \"Created object  to manage class loader \")\n  (define-fun var1936 () var1997\n    var1997!val!0)\n  (define-fun var128_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var1456 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1492!1 () String\n    \"Created object \")\n  (define-fun var908 () var1997\n    var1997!val!2)\n  (define-fun var1709!1 () String\n    \"Created object  to manage class loader \")\n  (define-fun var2558!2 () String\n    \"Created object \")\n  (define-fun var3789 () var741\n    (var919_bootstrap$/-1963771018 var1456 var1936))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3103 () Bool\n    var128_isDiagnosticsEnabled/-1004161365)\n  (define-fun var2075 () String\n    (str.++ var2558!1\n        \"Created object \"\n        (var128_objectId/1952731062\n          (var1938_doPrivileged/1828555841\n            (var919_bootstrap$/-1963771018 var1456 var1936)))\n        \" to manage class loader \"\n        (var128_objectId/1952731062 (cast-from-var1997-to-var684 var908))))\n  (define-fun var3087 () var128\n    (cast-from-var684-to-var128\n  (var1938_doPrivileged/1828555841\n    (var919_bootstrap$/-1963771018 var1456 var1936))))\n  (define-fun var3217 () String\n    (var128_objectId/1952731062\n  (var1938_doPrivileged/1828555841\n    (var919_bootstrap$/-1963771018 var1456 var1936))))\n  (define-fun var1166 () String\n    (var128_objectId/1952731062 (cast-from-var1997-to-var684 var908)))\n  (define-fun var90 () var684\n    (var1938_doPrivileged/1828555841\n  (var919_bootstrap$/-1963771018 var1456 var1936)))\n  (define-fun var1709 () String\n    (str.++ var2558!1\n        \"Created object \"\n        (var128_objectId/1952731062\n          (var1938_doPrivileged/1828555841\n            (var919_bootstrap$/-1963771018 var1456 var1936)))))\n  (define-fun var562 () String\n    (str.++ var2558!1\n        \"Created object \"\n        (var128_objectId/1952731062\n          (var1938_doPrivileged/1828555841\n            (var919_bootstrap$/-1963771018 var1456 var1936)))\n        \" to manage class loader \"))\n  (define-fun var2558 () String\n    String-init)\n  (define-fun null-String () String\n    \"\\u{0}\")\n  (define-fun var1492 () String\n    (str.++ var2558!1 \"Created object \"))\n  (define-fun var2601 () String\n    (str.++ var2558!1\n        \"Created object \"\n        (var128_objectId/1952731062\n          (var1938_doPrivileged/1828555841\n            (var919_bootstrap$/-1963771018 var1456 var1936)))\n        \" to manage class loader \"\n        (var128_objectId/1952731062 (cast-from-var1997-to-var684 var908))))\n  (define-fun var3791 () Bool\n    false)\n  (define-fun null-var1997 () var1997\n    var1997!val!1)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2075!1 () String\n    \"\")\n  (define-fun var919_bootstrap$/-1963771018 ((x!0 String) (x!1 var1997)) var741\n    var741!val!0)\n  (define-fun var1938_doPrivileged/1828555841 ((x!0 var741)) var684\n    var684!val!0)\n  (define-fun var128_objectId/1952731062 ((x!0 var684)) String\n    \"\")\n  (define-fun cast-from-var1997-to-var684 ((x!0 var1997)) var684\n    var684!val!0)\n  (define-fun cast-from-var684-to-var128 ((x!0 var684)) var128\n    var128!val!0)\n  (define-fun var128_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 74 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 171479040,
            "run_time": 2.3712034225463867,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1997/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__newFactory__-1005559516\\496.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1709!1 =\r\n     concat(all_33_4, \" to manage class loader \")\r\n   var562!1 =\r\n     concat(all_27_4, all_27_2)\r\n   var1492!1 =\r\n     concat(\"Created object \", all_30_3)\r\n   all_27_4 =\r\n     concat(all_36_5, \" to manage class loader \")\r\n   all_33_4 =\r\n     concat(\"Created object \", all_30_3)\r\n   all_36_5 =\r\n     concat(\"Created object \", all_30_3)\r\n\r\n1808ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.ClassLoader",
            "r9 := @parameter2: java.lang.ClassLoader",
            "$r2 = staticinvoke <org.apache.commons.logging.LogFactory$lambda_newFactory_3__5: java.security.PrivilegedAction bootstrap$(java.lang.String,java.lang.ClassLoader)>(r0, r1)",
            "r3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>($r2)",
            "$z0 = r3 instanceof org.apache.commons.logging.LogConfigurationException",
            "if $z0 == 0 goto $z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "$z1 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z1 == 0 goto $r4 = (org.apache.commons.logging.LogFactory) r3",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Created object \")",
            "$r6 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r3)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" to manage class loader \")",
            "$r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r9)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r13)",
            "$r4 = (org.apache.commons.logging.LogFactory) r3",
            "return $r4"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__logHierarchy__-997178389\\478.smt2",
        "z3": {
            "memory": 31789056,
            "run_time": 0.10396432876586914,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3529:\r\n  ;;   var3529!val!0 var3529!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3529!val!0 () var3529)\r\n  (declare-fun var3529!val!1 () var3529)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3529)) (or (= x var3529!val!0) (= x var3529!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1130:\r\n  ;;   var1130!val!0 var1130!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1130!val!0 () var1130)\r\n  (declare-fun var1130!val!1 () var1130)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1130)) (or (= x var1130!val!0) (= x var1130!val!1)))\r\n  ;; -----------\r\n  (define-fun var1661 () String\r\n    (str.++ var1519!1\r\n        var2808\r\n        (var2161_objectId/1952731062 (cast-from-var3529-to-var3803 var836))))\r\n  (define-fun var2351 () Bool\r\n    var2161_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var2415!2 () String\r\n    \"\")\r\n  (define-fun var3288 () String\r\n    (str.++ var1519!1\r\n        var2808\r\n        (var2161_objectId/1952731062 (cast-from-var3529-to-var3803 var836))\r\n        \" == '\"))\r\n  (define-fun var649 () var1130\r\n    var1130!val!0)\r\n  (define-fun var812 () String\r\n    (str.++ var1519!1\r\n        var2808\r\n        (var2161_objectId/1952731062 (cast-from-var3529-to-var3803 var836))\r\n        \" == '\"\r\n        (toString/-522406933 (cast-from-var3529-to-var3803 var836))))\r\n  (define-fun var2904 () var3529\r\n    var3529_getSystemClassLoader/-483392723)\r\n  (define-fun var2669 () String\r\n    (str.++ var2415!1 var2808))\r\n  (define-fun var45 () String\r\n    (toString/-522406933 (cast-from-var3529-to-var3803 var836)))\r\n  (define-fun var836 () var3529\r\n    var3529!val!0)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun null-String () String\r\n    \"A\")\r\n  (define-fun var1519 () String\r\n    String-init)\r\n  (define-fun var2859 () String\r\n    (str.++ var1519!1\r\n        var2808\r\n        (var2161_objectId/1952731062 (cast-from-var3529-to-var3803 var836))\r\n        \" == '\"\r\n        (toString/-522406933 (cast-from-var3529-to-var3803 var836))\r\n        \"'\"))\r\n  (define-fun var519 () String\r\n    (str.++ var1519!1 var2808))\r\n  (define-fun var2415 () String\r\n    String-init)\r\n  (define-fun null-var1130 () var1130\r\n    var1130!val!1)\r\n  (define-fun var2935 () String\r\n    (str.++ var2415!1\r\n        var2808\r\n        \"Security forbids determining the system class loader.\"))\r\n  (define-fun null-var3529 () var3529\r\n    var3529!val!1)\r\n  (define-fun var2236 () String\r\n    (str.++ var1519!1\r\n        var2808\r\n        (var2161_objectId/1952731062 (cast-from-var3529-to-var3803 var836))\r\n        \" == '\"\r\n        (toString/-522406933 (cast-from-var3529-to-var3803 var836))\r\n        \"'\"))\r\n  (define-fun var621 () String\r\n    (str.++ var2415!1\r\n        var2808\r\n        \"Security forbids determining the system class loader.\"))\r\n  (define-fun var3286 () String\r\n    (var2161_objectId/1952731062 (cast-from-var3529-to-var3803 var836)))\r\n  (define-fun var1519!2 () String\r\n    \"\")\r\n  (define-fun var2161_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var2415!1 () String\r\n    \"\")\r\n  (define-fun var1519!1 () String\r\n    \"\")\r\n  (define-fun var812!1 () String\r\n    \" == ''\")\r\n  (define-fun var2808 () String\r\n    \"\")\r\n  (define-fun var3288!1 () String\r\n    \" == '\")\r\n  (define-fun var519!1 () String\r\n    \"\")\r\n  (define-fun var1661!1 () String\r\n    \" == '\")\r\n  (define-fun var2669!1 () String\r\n    \"Security forbids determining the system class loader.\")\r\n  (define-fun var2236!1 () String\r\n    \"\")\r\n  (define-fun var3529_getSystemClassLoader/-483392723 () var3529\r\n    var3529!val!0)\r\n  (define-fun var621!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var3529-to-var3803 ((x!0 var3529)) var3803\r\n    var3803!val!0)\r\n  (define-fun var2161_objectId/1952731062 ((x!0 var3803)) String\r\n    \"\")\r\n  (define-fun toString/-522406933 ((x!0 var3803)) String\r\n    \"\")\r\n  (define-fun var2161_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 93 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1708032,
            "run_time": 0.029886245727539062,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2126 is 1\r\n; rep: (as @var2126_0 var2126)\r\n; cardinality of var3529 is 2\r\n; rep: (as @var3529_0 var3529)\r\n; rep: (as @var3529_1 var3529)\r\n; cardinality of var2161 is 1\r\n; rep: (as @var2161_0 var2161)\r\n; cardinality of var3803 is 1\r\n; rep: (as @var3803_0 var3803)\r\n; cardinality of var1130 is 2\r\n; rep: (as @var1130_0 var1130)\r\n; rep: (as @var1130_1 var1130)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2161_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun toString/-522406933 ((BOUND_VARIABLE_815 var3803)) String \"\")\r\n(define-fun cast-from-var3529-to-var3803 ((BOUND_VARIABLE_818 var3529)) var3803 (as @var3803_0 var3803))\r\n(define-fun String-init () String \"\")\r\n(define-fun var2161_objectId/1952731062 ((BOUND_VARIABLE_821 var3803)) String \"\")\r\n(define-fun var2161_logDiagnostic/1268238408 ((BOUND_VARIABLE_824 String)) void (as @void_0 void))\r\n(define-fun var3529_getSystemClassLoader/-483392723 () var3529 (as @var3529_0 var3529))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3529 () var3529 (as @var3529_0 var3529))\r\n(define-fun null-var1130 () var1130 (as @var1130_0 var1130))\r\n(define-fun var2808 () String \"\")\r\n(define-fun var836 () var3529 (as @var3529_1 var3529))\r\n(define-fun var1519!1 () String \"\")\r\n(define-fun var1519!2 () String \"\")\r\n(define-fun var519!1 () String \"\")\r\n(define-fun var1661!1 () String \" == '\")\r\n(define-fun var3288!1 () String \" == '\")\r\n(define-fun var812!1 () String \" == ''\")\r\n(define-fun var2236!1 () String \"\")\r\n(define-fun var649 () var1130 (as @var1130_1 var1130))\r\n(define-fun var2415!1 () String \"\")\r\n(define-fun var2415!2 () String \"\")\r\n(define-fun var2669!1 () String \"Security forbids determining the system class loader.\")\r\n(define-fun var621!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37404672,
            "run_time": 0.10882091522216797,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3529:\n  ;;   var3529!val!0 var3529!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3529!val!0 () var3529)\n  (declare-fun var3529!val!1 () var3529)\n  ;; cardinality constraint:\n  (forall ((x var3529)) (or (= x var3529!val!0) (= x var3529!val!1)))\n  ;; -----------\n  ;; universe for var1130:\n  ;;   var1130!val!0 var1130!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1130!val!0 () var1130)\n  (declare-fun var1130!val!1 () var1130)\n  ;; cardinality constraint:\n  (forall ((x var1130)) (or (= x var1130!val!0) (= x var1130!val!1)))\n  ;; -----------\n  (define-fun var3288!1 () String\n    \"\\u{0} == '\")\n  (define-fun var2808 () String\n    \"\\u{0}\")\n  (define-fun var1661!1 () String\n    \"\\u{0} == '\")\n  (define-fun var519!1 () String\n    \"\\u{0}\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2161_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var812!1 () String\n    \"\\u{0} == ''\")\n  (define-fun var1519 () String\n    String-init)\n  (define-fun var519 () String\n    (str.++ var1519!1 var2808))\n  (define-fun var1519!1 () String\n    \"\")\n  (define-fun var812 () String\n    (str.++ var1519!1\n        var2808\n        (var2161_objectId/1952731062 (cast-from-var3529-to-var3803 var836))\n        \" == '\"\n        (toString/-522406933 (cast-from-var3529-to-var3803 var836))))\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var2236 () String\n    (str.++ var1519!1\n        var2808\n        (var2161_objectId/1952731062 (cast-from-var3529-to-var3803 var836))\n        \" == '\"\n        (toString/-522406933 (cast-from-var3529-to-var3803 var836))\n        \"'\"))\n  (define-fun var621 () String\n    (str.++ var2415!1\n        var2808\n        \"Security forbids determining the system class loader.\"))\n  (define-fun var2351 () Bool\n    var2161_isDiagnosticsEnabled/-1004161365)\n  (define-fun null-var3529 () var3529\n    var3529!val!1)\n  (define-fun var1661 () String\n    (str.++ var1519!1\n        var2808\n        (var2161_objectId/1952731062 (cast-from-var3529-to-var3803 var836))))\n  (define-fun var3288 () String\n    (str.++ var1519!1\n        var2808\n        (var2161_objectId/1952731062 (cast-from-var3529-to-var3803 var836))\n        \" == '\"))\n  (define-fun null-var1130 () var1130\n    var1130!val!1)\n  (define-fun var2669 () String\n    (str.++ var2415!1 var2808))\n  (define-fun var2415!1 () String\n    \"\")\n  (define-fun var3286 () String\n    (var2161_objectId/1952731062 (cast-from-var3529-to-var3803 var836)))\n  (define-fun var45 () String\n    (toString/-522406933 (cast-from-var3529-to-var3803 var836)))\n  (define-fun var1519!2 () String\n    \"\\u{0}\")\n  (define-fun var649 () var1130\n    var1130!val!0)\n  (define-fun var2669!1 () String\n    \"\\u{0}Security forbids determining the system class loader.\")\n  (define-fun var2859 () String\n    (str.++ var1519!1\n        var2808\n        (var2161_objectId/1952731062 (cast-from-var3529-to-var3803 var836))\n        \" == '\"\n        (toString/-522406933 (cast-from-var3529-to-var3803 var836))\n        \"'\"))\n  (define-fun var836 () var3529\n    var3529!val!0)\n  (define-fun var2415!2 () String\n    \"\\u{0}\")\n  (define-fun var2904 () var3529\n    var3529_getSystemClassLoader/-483392723)\n  (define-fun var2415 () String\n    String-init)\n  (define-fun var2935 () String\n    (str.++ var2415!1\n        var2808\n        \"Security forbids determining the system class loader.\"))\n  (define-fun var2236!1 () String\n    \"\")\n  (define-fun var3529_getSystemClassLoader/-483392723 () var3529\n    var3529!val!0)\n  (define-fun var621!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun cast-from-var3529-to-var3803 ((x!0 var3529)) var3803\n    var3803!val!0)\n  (define-fun var2161_objectId/1952731062 ((x!0 var3803)) String\n    \"\")\n  (define-fun toString/-522406933 ((x!0 var3803)) String\n    \"\")\n  (define-fun var2161_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 93 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 173457408,
            "run_time": 2.5585973262786865,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1130/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__logHierarchy__-997178389\\478.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var812!1 =\r\n     concat(all_42_6, \"\\u{0}27\")\r\n   var3288!1 =\r\n     concat(all_39_6, all_39_5)\r\n   var1661!1 =\r\n     concat(all_36_4, \" == \\u{0}27\")\r\n   var519!1 =\r\n     concat(var2808, all_33_3)\r\n   all_29_3 =\r\n     concat(var2808, \"Security forbids determining the system class loader.\")\r\n   var2669!1 =\r\n     concat(var2808, \"Security forbids determining the system class loader.\")\r\n   all_42_6 =\r\n     concat(all_42_8, all_39_5)\r\n   all_39_6 =\r\n     concat(all_39_7, \" == \\u{0}27\")\r\n   all_36_4 =\r\n     concat(var2808, all_33_3)\r\n   all_42_8 =\r\n     concat(all_42_9, \" == \\u{0}27\")\r\n   all_39_7 =\r\n     concat(var2808, all_33_3)\r\n   all_42_9 =\r\n     concat(var2808, all_33_3)\r\n\r\n1945ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 28,
        "api_sequence": [
            "<java.lang.Object: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r2 := @parameter0: java.lang.String",
            "r24 := @parameter1: java.lang.ClassLoader",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 != 0 goto (branch)",
            "if r24 == null goto $r17 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>()",
            "r25 = virtualinvoke r24.<java.lang.Object: java.lang.String toString()>()",
            "$r9 = new java.lang.StringBuilder",
            "specialinvoke $r9.<java.lang.StringBuilder: void <init>()>()",
            "$r11 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r24)",
            "$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10)",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" == \\'\")",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r25)",
            "$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\'\")",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r16)",
            "$r17 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>()",
            "$r19 := @caughtexception",
            "$r20 = new java.lang.StringBuilder",
            "specialinvoke $r20.<java.lang.StringBuilder: void <init>()>()",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2)",
            "$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Security forbids determining the system class loader.\")",
            "$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r23)",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__release__-1355242150\\511.smt2",
        "z3": {
            "memory": 31703040,
            "run_time": 0.2124783992767334,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 60 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1634304,
            "run_time": 0.04541945457458496,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34942976,
            "run_time": 0.19216251373291016,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 60 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 159256576,
            "run_time": 2.0195014476776123,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 5,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.ClassLoader",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Releasing factory for class loader \")",
            "$r6 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)",
            "$r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "entermonitor $r10",
            "if r0 != null goto $r1 = virtualinvoke $r10.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0)",
            "$r11 := @caughtexception",
            "exitmonitor $r10",
            "throw $r11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__release__-1355242150\\515.smt2",
        "z3": {
            "memory": 31641600,
            "run_time": 0.23754620552062988,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 35 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 4993024,
            "run_time": 0.0893106460571289,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34942976,
            "run_time": 0.20422577857971191,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 35 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 152039424,
            "run_time": 1.4734199047088623,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 8,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.ClassLoader",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "$r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "entermonitor $r10",
            "if r0 != null goto $r1 = virtualinvoke $r10.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0)",
            "$r3 = <org.apache.commons.logging.LogFactory: org.apache.commons.logging.LogFactory nullClassLoaderFactory>",
            "$r11 := @caughtexception",
            "exitmonitor $r10",
            "throw $r11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__release__-1355242150\\535.smt2",
        "z3": {
            "memory": 31719424,
            "run_time": 0.1481015682220459,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 35 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 5791744,
            "run_time": 0.03936123847961426,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35491840,
            "run_time": 0.13718962669372559,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 35 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 135520256,
            "run_time": 1.4169549942016602,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 9,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.ClassLoader",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "$r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "entermonitor $r10",
            "if r0 != null goto $r1 = virtualinvoke $r10.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0)",
            "$r11 := @caughtexception",
            "$r11 := @caughtexception",
            "exitmonitor $r10",
            "throw $r11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__release__-1355242150\\537.smt2",
        "z3": {
            "memory": 32026624,
            "run_time": 0.1502842903137207,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var16:\r\n  ;;   var16!val!0 var16!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var16!val!0 () var16)\r\n  (declare-fun var16!val!1 () var16)\r\n  ;; cardinality constraint:\r\n  (forall ((x var16)) (or (= x var16!val!0) (= x var16!val!1)))\r\n  ;; -----------\r\n  ;; universe for var1333:\r\n  ;;   var1333!val!2 var1333!val!3 var1333!val!0 var1333!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1333!val!2 () var1333)\r\n  (declare-fun var1333!val!3 () var1333)\r\n  (declare-fun var1333!val!0 () var1333)\r\n  (declare-fun var1333!val!1 () var1333)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1333))\r\n          (or (= x var1333!val!2)\r\n              (= x var1333!val!3)\r\n              (= x var1333!val!0)\r\n              (= x var1333!val!1)))\r\n  ;; -----------\r\n  (define-fun var1617 () var1333\r\n    var1333!val!0)\r\n  (define-fun var1617!2 () var1333\r\n    var1333!val!3)\r\n  (define-fun var544 () var16\r\n    var16!val!0)\r\n  (define-fun var3935 () var3765\r\n    var2600-factories)\r\n  (define-fun null-var16 () var16\r\n    var16!val!1)\r\n  (define-fun var1617!1 () var1333\r\n    var1333!val!2)\r\n  (define-fun null-var1333 () var1333\r\n    var1333!val!1)\r\n  (define-fun var2139 () Bool\r\n    var2600_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var2600_isDiagnosticsEnabled/-1004161365 () Bool\r\n    false)\r\n  (define-fun var2600-factories () var3765\r\n    var3765!val!0)\r\n)\r\n(error \"line 37 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1642496,
            "run_time": 0.10181927680969238,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var16 is 2\r\n; rep: (as @var16_0 var16)\r\n; rep: (as @var16_1 var16)\r\n; cardinality of var2600 is 1\r\n; rep: (as @var2600_0 var2600)\r\n; cardinality of var3765 is 1\r\n; rep: (as @var3765_0 var3765)\r\n; cardinality of var1333 is 4\r\n; rep: (as @var1333_0 var1333)\r\n; rep: (as @var1333_1 var1333)\r\n; rep: (as @var1333_2 var1333)\r\n; rep: (as @var1333_3 var1333)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2600_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n(define-fun null-var16 () var16 (as @var16_0 var16))\r\n(define-fun var2600-factories () var3765 (as @var3765_0 var3765))\r\n(define-fun null-var1333 () var1333 (as @var1333_0 var1333))\r\n(define-fun var544 () var16 (as @var16_1 var16))\r\n(define-fun var1617 () var1333 (as @var1333_1 var1333))\r\n(define-fun var1617!1 () var1333 (as @var1333_2 var1333))\r\n(define-fun var1617!2 () var1333 (as @var1333_3 var1333))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36204544,
            "run_time": 0.12192487716674805,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var16:\n  ;;   var16!val!0 var16!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var16!val!0 () var16)\n  (declare-fun var16!val!1 () var16)\n  ;; cardinality constraint:\n  (forall ((x var16)) (or (= x var16!val!0) (= x var16!val!1)))\n  ;; -----------\n  ;; universe for var1333:\n  ;;   var1333!val!2 var1333!val!3 var1333!val!0 var1333!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1333!val!2 () var1333)\n  (declare-fun var1333!val!3 () var1333)\n  (declare-fun var1333!val!0 () var1333)\n  (declare-fun var1333!val!1 () var1333)\n  ;; cardinality constraint:\n  (forall ((x var1333))\n          (or (= x var1333!val!2)\n              (= x var1333!val!3)\n              (= x var1333!val!0)\n              (= x var1333!val!1)))\n  ;; -----------\n  (define-fun var1617 () var1333\n    var1333!val!0)\n  (define-fun var1617!2 () var1333\n    var1333!val!3)\n  (define-fun var544 () var16\n    var16!val!0)\n  (define-fun var2139 () Bool\n    var2600_isDiagnosticsEnabled/-1004161365)\n  (define-fun null-var16 () var16\n    var16!val!1)\n  (define-fun var1617!1 () var1333\n    var1333!val!2)\n  (define-fun var3935 () var3765\n    var2600-factories)\n  (define-fun null-var1333 () var1333\n    var1333!val!1)\n  (define-fun var2600_isDiagnosticsEnabled/-1004161365 () Bool\n    false)\n  (define-fun var2600-factories () var3765\n    var3765!val!0)\n)\n(error \"line 37 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 137891840,
            "run_time": 1.4949467182159424,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1617!2 () var1333 var1333!12)\r\n  (define-fun var1617!1 () var1333 var1333!10)\r\n  (define-fun var1617 () var1333 var1333!8)\r\n  (define-fun var544 () var16 var16!6)\r\n  (define-fun null-var1333 () var1333 var1333!4)\r\n  (define-fun null-var16 () var16 var16!2)\r\n  (define-fun var2600_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 10,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.ClassLoader",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "$r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "entermonitor $r10",
            "$r11 := @caughtexception",
            "$r11 := @caughtexception",
            "$r11 := @caughtexception",
            "exitmonitor $r10",
            "throw $r11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__release__-1355242150\\505.smt2",
        "z3": {
            "memory": 32051200,
            "run_time": 0.15093636512756348,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var981:\r\n  ;;   var981!val!1 var981!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var981!val!1 () var981)\r\n  (declare-fun var981!val!0 () var981)\r\n  ;; cardinality constraint:\r\n  (forall ((x var981)) (or (= x var981!val!1) (= x var981!val!0)))\r\n  ;; -----------\r\n  ;; universe for var365:\r\n  ;;   var365!val!1 var365!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var365!val!1 () var365)\r\n  (declare-fun var365!val!0 () var365)\r\n  ;; cardinality constraint:\r\n  (forall ((x var365)) (or (= x var365!val!1) (= x var365!val!0)))\r\n  ;; -----------\r\n  (define-fun var343 () String\r\n    String-init)\r\n  (define-fun var1590 () String\r\n    (var163_objectId/1952731062 (cast-from-var981-to-var3036 var505)))\r\n  (define-fun var1513 () String\r\n    (str.++ var343!1\r\n        \"Releasing factory for class loader \"\r\n        (var163_objectId/1952731062 (cast-from-var981-to-var3036 var505))))\r\n  (define-fun null-var365 () var365\r\n    var365!val!1)\r\n  (define-fun null-var981 () var981\r\n    var981!val!1)\r\n  (define-fun var1327 () var365\r\n    var365!val!0)\r\n  (define-fun var505 () var981\r\n    var981!val!0)\r\n  (define-fun var1830 () var1449\r\n    var163-factories)\r\n  (define-fun var1434 () Bool\r\n    var163_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2576 () String\r\n    (str.++ var343!1 \"Releasing factory for class loader \"))\r\n  (define-fun var3191 () String\r\n    (str.++ var343!1\r\n        \"Releasing factory for class loader \"\r\n        (var163_objectId/1952731062 (cast-from-var981-to-var3036 var505))))\r\n  (define-fun var343!2 () String\r\n    \"Releasing factory for class loader \")\r\n  (define-fun var2576!1 () String\r\n    \"Releasing factory for class loader \")\r\n  (define-fun var343!1 () String\r\n    \"\")\r\n  (define-fun var163_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var3191!1 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var163-factories () var1449\r\n    var1449!val!0)\r\n  (define-fun cast-from-var981-to-var3036 ((x!0 var981)) var3036\r\n    var3036!val!0)\r\n  (define-fun var163_objectId/1952731062 ((x!0 var3036)) String\r\n    \"\")\r\n  (define-fun var163_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 59 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1658880,
            "run_time": 0.062108755111694336,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var981 is 2\r\n; rep: (as @var981_0 var981)\r\n; rep: (as @var981_1 var981)\r\n; cardinality of var163 is 1\r\n; rep: (as @var163_0 var163)\r\n; cardinality of var3036 is 1\r\n; rep: (as @var3036_0 var3036)\r\n; cardinality of var1449 is 1\r\n; rep: (as @var1449_0 var1449)\r\n; cardinality of var365 is 2\r\n; rep: (as @var365_0 var365)\r\n; rep: (as @var365_1 var365)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var163_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun var163_objectId/1952731062 ((BOUND_VARIABLE_571 var3036)) String \"\")\r\n(define-fun cast-from-var981-to-var3036 ((BOUND_VARIABLE_574 var981)) var3036 (as @var3036_0 var3036))\r\n(define-fun var163_logDiagnostic/1268238408 ((BOUND_VARIABLE_577 String)) void (as @void_0 void))\r\n(define-fun null-var981 () var981 (as @var981_0 var981))\r\n(define-fun var163-factories () var1449 (as @var1449_0 var1449))\r\n(define-fun null-var365 () var365 (as @var365_0 var365))\r\n(define-fun var505 () var981 (as @var981_1 var981))\r\n(define-fun var343!1 () String \"\")\r\n(define-fun var343!2 () String \"Releasing factory for class loader \")\r\n(define-fun var2576!1 () String \"Releasing factory for class loader \")\r\n(define-fun var3191!1 () String \"\")\r\n(define-fun var1327 () var365 (as @var365_1 var365))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36290560,
            "run_time": 0.10039424896240234,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var981:\n  ;;   var981!val!1 var981!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var981!val!1 () var981)\n  (declare-fun var981!val!0 () var981)\n  ;; cardinality constraint:\n  (forall ((x var981)) (or (= x var981!val!1) (= x var981!val!0)))\n  ;; -----------\n  ;; universe for var365:\n  ;;   var365!val!1 var365!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var365!val!1 () var365)\n  (declare-fun var365!val!0 () var365)\n  ;; cardinality constraint:\n  (forall ((x var365)) (or (= x var365!val!1) (= x var365!val!0)))\n  ;; -----------\n  (define-fun var1513 () String\n    (str.++ var343!1\n        \"Releasing factory for class loader \"\n        (var163_objectId/1952731062 (cast-from-var981-to-var3036 var505))))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun null-var365 () var365\n    var365!val!1)\n  (define-fun null-var981 () var981\n    var981!val!1)\n  (define-fun var2576 () String\n    (str.++ var343!1 \"Releasing factory for class loader \"))\n  (define-fun var1327 () var365\n    var365!val!0)\n  (define-fun var505 () var981\n    var981!val!0)\n  (define-fun var3191 () String\n    (str.++ var343!1\n        \"Releasing factory for class loader \"\n        (var163_objectId/1952731062 (cast-from-var981-to-var3036 var505))))\n  (define-fun var1434 () Bool\n    var163_isDiagnosticsEnabled/-1004161365)\n  (define-fun var1830 () var1449\n    var163-factories)\n  (define-fun var343 () String\n    String-init)\n  (define-fun var1590 () String\n    (var163_objectId/1952731062 (cast-from-var981-to-var3036 var505)))\n  (define-fun var343!2 () String\n    \"Releasing factory for class loader \")\n  (define-fun var2576!1 () String\n    \"Releasing factory for class loader \")\n  (define-fun var343!1 () String\n    \"\")\n  (define-fun var163_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var3191!1 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun var163-factories () var1449\n    var1449!val!0)\n  (define-fun cast-from-var981-to-var3036 ((x!0 var981)) var3036\n    var3036!val!0)\n  (define-fun var163_objectId/1952731062 ((x!0 var3036)) String\n    \"\")\n  (define-fun var163_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 59 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180322304,
            "run_time": 2.039310932159424,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var981/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__release__-1355242150\\505.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2576!1 =\r\n     concat(\"Releasing factory for class loader \", all_27_2)\r\n\r\n1489ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.ClassLoader",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Releasing factory for class loader \")",
            "$r6 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)",
            "$r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "entermonitor $r10",
            "$r11 := @caughtexception",
            "exitmonitor $r10",
            "throw $r11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__\u300aclinit\u300b__684435395\\587.smt2",
        "z3": {
            "memory": 32120832,
            "run_time": 0.1218869686126709,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3798:\r\n  ;;   var3798!val!0 var3798!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3798!val!0 () var3798)\r\n  (declare-fun var3798!val!1 () var3798)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3798)) (or (= x var3798!val!0) (= x var3798!val!1)))\r\n  ;; -----------\r\n  (define-fun var1871 () var2928\r\n    var2333_createFactoryStore/465410863)\r\n  (define-fun var1229 () var3798\r\n    var3798!val!0)\r\n  (define-fun var3865 () String\r\n    String-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1094 () String\r\n    (str.++ var3865!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\r\n  (define-fun var1018 () String\r\n    (str.++ var3865!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\r\n  (define-fun var3439 () var1335\r\n    var1335-init)\r\n  (define-fun var565 () String\r\n    (str.++ var3865!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\r\n  (define-fun var184 () String\r\n    (str.++ var3865!1 \"[LogFactory from \"))\r\n  (define-fun var2174 () String\r\n    (str.++ var3865!1 \"[LogFactory from \" \"UNKNOWN\"))\r\n  (define-fun var1883 () var454\r\n    var2333_initDiagnostics/351455467)\r\n  (define-fun null-var3798 () var3798\r\n    var3798!val!1)\r\n  (define-fun var2336 () var2928\r\n    var2333_createFactoryStore/465410863)\r\n  (define-fun var2568 () Bool\r\n    var2333_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var653 () var3873\r\n    (var2333_getClassLoader/1794181642 var2333!class))\r\n  (define-fun var2757 () var1335\r\n    var3439!1)\r\n  (define-fun var2334 () String\r\n    \"UNKNOWN\")\r\n  (define-fun var2429 () var454\r\n    var2333_initDiagnostics/351455467)\r\n  (define-fun var3865!1 () String\r\n    \"\")\r\n  (define-fun null-var3873 () var3873\r\n    var3873!val!0)\r\n  (define-fun var653!1 () var3873\r\n    var3873!val!0)\r\n  (define-fun var2333_isDiagnosticsEnabled/-1004161365 () Bool\r\n    false)\r\n  (define-fun var2174!1 () String\r\n    \"[LogFactory from UNKNOWN] \")\r\n  (define-fun var184!1 () String\r\n    \"[LogFactory from UNKNOWN\")\r\n  (define-fun var3865!2 () String\r\n    \"[LogFactory from \")\r\n  (define-fun var3439!1 () var1335\r\n    var1335!val!0)\r\n  (define-fun var1966 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var2333_createFactoryStore/465410863 () var2928\r\n    var2928!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var2333_initDiagnostics/351455467 () var454\r\n    var454!val!0)\r\n  (define-fun var1335-init () var1335\r\n    var1335!val!0)\r\n  (define-fun var2333!class () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun cast-from-var3873-to-var1653 ((x!0 var3873)) var1653\r\n    var1653!val!0)\r\n  (define-fun var2333_logClassLoaderEnvironment/-1123412948 ((x!0 ClassObject)) void\r\n    void!val!0)\r\n  (define-fun <init>/1544051104 ((x!0 var1335) (x!1 var1653)) void\r\n    void!val!0)\r\n  (define-fun var2333_getClassLoader/1794181642 ((x!0 ClassObject)) var3873\r\n    var3873!val!0)\r\n)\r\n(error \"line 76 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8265728,
            "run_time": 0.04561114311218262,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3873 is 1\r\n; rep: (as @var3873_0 var3873)\r\n; cardinality of var2333 is 1\r\n; rep: (as @var2333_0 var2333)\r\n; cardinality of var1335 is 1\r\n; rep: (as @var1335_0 var1335)\r\n; cardinality of var1653 is 1\r\n; rep: (as @var1653_0 var1653)\r\n; cardinality of var3798 is 2\r\n; rep: (as @var3798_0 var3798)\r\n; rep: (as @var3798_1 var3798)\r\n; cardinality of var454 is 1\r\n; rep: (as @var454_0 var454)\r\n; cardinality of var2928 is 1\r\n; rep: (as @var2928_0 var2928)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2333!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var2333_getClassLoader/1794181642 ((BOUND_VARIABLE_627 ClassObject)) var3873 (as @var3873_0 var3873))\r\n(define-fun var1335-init () var1335 (as @var1335_0 var1335))\r\n(define-fun <init>/1544051104 ((BOUND_VARIABLE_630 var1335) (BOUND_VARIABLE_631 var1653)) void (as @void_0 void))\r\n(define-fun cast-from-var3873-to-var1653 ((BOUND_VARIABLE_634 var3873)) var1653 (as @var1653_0 var1653))\r\n(define-fun String-init () String \"\")\r\n(define-fun var2333_initDiagnostics/351455467 () var454 (as @var454_0 var454))\r\n(define-fun var2333_logClassLoaderEnvironment/-1123412948 ((BOUND_VARIABLE_637 ClassObject)) void (as @void_0 void))\r\n(define-fun var2333_createFactoryStore/465410863 () var2928 (as @var2928_0 var2928))\r\n(define-fun var2333_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n(define-fun null-var3873 () var3873 (as @var3873_0 var3873))\r\n(define-fun null-var3798 () var3798 (as @var3798_0 var3798))\r\n(define-fun var3439!1 () var1335 (as @var1335_0 var1335))\r\n(define-fun var653!1 () var3873 (as @var3873_0 var3873))\r\n(define-fun var1229 () var3798 (as @var3798_1 var3798))\r\n(define-fun var3865!1 () String \"\")\r\n(define-fun var3865!2 () String \"[LogFactory from \")\r\n(define-fun var184!1 () String \"[LogFactory from UNKNOWN\")\r\n(define-fun var2174!1 () String \"[LogFactory from UNKNOWN] \")\r\n(define-fun var1966 () ClassObject (as @ClassObject_0 ClassObject))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35753984,
            "run_time": 0.12445783615112305,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3798:\n  ;;   var3798!val!0 var3798!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3798!val!0 () var3798)\n  (declare-fun var3798!val!1 () var3798)\n  ;; cardinality constraint:\n  (forall ((x var3798)) (or (= x var3798!val!0) (= x var3798!val!1)))\n  ;; -----------\n  ;; universe for var3873:\n  ;;   var3873!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3873!val!0 () var3873)\n  ;; cardinality constraint:\n  (forall ((x var3873)) (= x var3873!val!0))\n  ;; -----------\n  (define-fun var3439 () var1335\n    var1335-init)\n  (define-fun var3865 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1094 () String\n    (str.++ var3865!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\n  (define-fun var1018 () String\n    (str.++ var3865!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\n  (define-fun var1229 () var3798\n    var3798!val!0)\n  (define-fun var1883 () var454\n    var2333_initDiagnostics/351455467)\n  (define-fun var2336 () var2928\n    var2333_createFactoryStore/465410863)\n  (define-fun var2568 () Bool\n    var2333_isDiagnosticsEnabled/-1004161365)\n  (define-fun var653 () var3873\n    (var2333_getClassLoader/1794181642 var2333!class))\n  (define-fun var565 () String\n    (str.++ var3865!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\n  (define-fun var2757 () var1335\n    var3439!1)\n  (define-fun var184 () String\n    (str.++ var3865!1 \"[LogFactory from \"))\n  (define-fun var2174 () String\n    (str.++ var3865!1 \"[LogFactory from \" \"UNKNOWN\"))\n  (define-fun var2429 () var454\n    var2333_initDiagnostics/351455467)\n  (define-fun null-var3798 () var3798\n    var3798!val!1)\n  (define-fun var1871 () var2928\n    var2333_createFactoryStore/465410863)\n  (define-fun var2334 () String\n    \"UNKNOWN\")\n  (define-fun var3865!1 () String\n    \"\")\n  (define-fun null-var3873 () var3873\n    var3873!val!0)\n  (define-fun var653!1 () var3873\n    var3873!val!0)\n  (define-fun var2333_isDiagnosticsEnabled/-1004161365 () Bool\n    false)\n  (define-fun var2174!1 () String\n    \"[LogFactory from UNKNOWN] \")\n  (define-fun var184!1 () String\n    \"[LogFactory from UNKNOWN\")\n  (define-fun var3865!2 () String\n    \"[LogFactory from \")\n  (define-fun var3439!1 () var1335\n    var1335!val!0)\n  (define-fun var1966 () ClassObject\n    ClassObject!val!0)\n  (define-fun var2333_createFactoryStore/465410863 () var2928\n    var2928!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var2333_initDiagnostics/351455467 () var454\n    var454!val!0)\n  (define-fun var1335-init () var1335\n    var1335!val!0)\n  (define-fun var2333!class () ClassObject\n    ClassObject!val!0)\n  (define-fun cast-from-var3873-to-var1653 ((x!0 var3873)) var1653\n    var1653!val!0)\n  (define-fun var2333_logClassLoaderEnvironment/-1123412948 ((x!0 ClassObject)) void\n    void!val!0)\n  (define-fun <init>/1544051104 ((x!0 var1335) (x!1 var1653)) void\n    void!val!0)\n  (define-fun var2333_getClassLoader/1794181642 ((x!0 ClassObject)) var3873\n    var3873!val!0)\n)\n(error \"line 76 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181661696,
            "run_time": 2.0651497840881348,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2174!1 () String \"[LogFactory from UNKNOWN] \")\r\n  (define-fun var184!1 () String \"[LogFactory from UNKNOWN\")\r\n  (define-fun var3865!2 () String \"[LogFactory from \")\r\n  (define-fun var3865!1 () String \"\")\r\n  (define-fun var1229 () var3798 var3798!90)\r\n  (define-fun var653!1 () var3873 var3873!86)\r\n  (define-fun null-var3798 () var3798 var3798!88)\r\n  (define-fun null-var3873 () var3873 var3873!86)\r\n  (define-fun var2333_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n  (define-fun abbrev_115 ((x!0 Int)) String (ite (= x!0 0) \"[LogFactory from UNKNOWN\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>(class \"Lorg/apache/commons/logging/LogFactory;\")",
            "$r1 = new java.lang.ref.WeakReference",
            "specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0)",
            "<org.apache.commons.logging.LogFactory: java.lang.ref.WeakReference thisClassLoaderRef> = $r1",
            "if r0 != null goto r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)",
            "$r9 := @caughtexception",
            "r10 = \"UNKNOWN\"",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[LogFactory from \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "<org.apache.commons.logging.LogFactory: java.lang.String diagnosticPrefix> = $r6",
            "$r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.io.PrintStream initDiagnostics()>()",
            "<org.apache.commons.logging.LogFactory: java.io.PrintStream DIAGNOSTICS_STREAM> = $r7",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)>(class \"Lorg/apache/commons/logging/LogFactory;\")",
            "$r8 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()>()",
            "<org.apache.commons.logging.LogFactory: java.util.Hashtable factories> = $r8",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__\u300aclinit\u300b__684435395\\589.smt2",
        "z3": {
            "memory": 31719424,
            "run_time": 0.1313183307647705,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3181:\r\n  ;;   var3181!val!0 var3181!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3181!val!0 () var3181)\r\n  (declare-fun var3181!val!1 () var3181)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3181)) (or (= x var3181!val!0) (= x var3181!val!1)))\r\n  ;; -----------\r\n  (define-fun var2779 () var387\r\n    var694_initDiagnostics/351455467)\r\n  (define-fun var2255 () var387\r\n    var694_initDiagnostics/351455467)\r\n  (define-fun var2176 () var2026\r\n    var2026-init)\r\n  (define-fun var966 () String\r\n    String-init)\r\n  (define-fun var3671 () Bool\r\n    var694_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun null-var3181 () var3181\r\n    var3181!val!1)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2829 () String\r\n    (str.++ var966!1\r\n        \"[LogFactory from \"\r\n        (var694_objectId/1952731062 (cast-from-var3181-to-var724 var1360!1))\r\n        \"] \"))\r\n  (define-fun var1360 () var3181\r\n    (var694_getClassLoader/1794181642 var694!class))\r\n  (define-fun var715 () String\r\n    (var694_objectId/1952731062 (cast-from-var3181-to-var724 var1360!1)))\r\n  (define-fun var3160 () String\r\n    (str.++ var966!1\r\n        \"[LogFactory from \"\r\n        (var694_objectId/1952731062 (cast-from-var3181-to-var724 var1360!1))))\r\n  (define-fun var1613 () String\r\n    (str.++ var966!1 \"[LogFactory from \"))\r\n  (define-fun var338 () var2026\r\n    var2176!1)\r\n  (define-fun var1360!1 () var3181\r\n    var3181!val!0)\r\n  (define-fun var2798 () var3012\r\n    var694_createFactoryStore/465410863)\r\n  (define-fun var1376 () String\r\n    (str.++ var966!1\r\n        \"[LogFactory from \"\r\n        (var694_objectId/1952731062 (cast-from-var3181-to-var724 var1360!1))\r\n        \"] \"))\r\n  (define-fun var569 () var3012\r\n    var694_createFactoryStore/465410863)\r\n  (define-fun var1316 () String\r\n    (str.++ var966!1\r\n        \"[LogFactory from \"\r\n        (var694_objectId/1952731062 (cast-from-var3181-to-var724 var1360!1))\r\n        \"] \"))\r\n  (define-fun var966!2 () String\r\n    \"[LogFactory from \")\r\n  (define-fun var1613!1 () String\r\n    \"[LogFactory from \")\r\n  (define-fun var966!1 () String\r\n    \"\")\r\n  (define-fun var694_isDiagnosticsEnabled/-1004161365 () Bool\r\n    false)\r\n  (define-fun var3160!1 () String\r\n    \"[LogFactory from ] \")\r\n  (define-fun var694!class () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var694_initDiagnostics/351455467 () var387\r\n    var387!val!0)\r\n  (define-fun var2176!1 () var2026\r\n    var2026!val!0)\r\n  (define-fun var2396 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var2026-init () var2026\r\n    var2026!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var694_createFactoryStore/465410863 () var3012\r\n    var3012!val!0)\r\n  (define-fun cast-from-var3181-to-var724 ((x!0 var3181)) var724\r\n    var724!val!0)\r\n  (define-fun var694_objectId/1952731062 ((x!0 var724)) String\r\n    \"\")\r\n  (define-fun <init>/1544051104 ((x!0 var2026) (x!1 var724)) void\r\n    void!val!0)\r\n  (define-fun var694_getClassLoader/1794181642 ((x!0 ClassObject)) var3181\r\n    var3181!val!0)\r\n  (define-fun var694_logClassLoaderEnvironment/-1123412948 ((x!0 ClassObject)) void\r\n    void!val!0)\r\n)\r\n(error \"line 75 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 6987776,
            "run_time": 0.062439918518066406,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3181 is 2\r\n; rep: (as @var3181_0 var3181)\r\n; rep: (as @var3181_1 var3181)\r\n; cardinality of var694 is 1\r\n; rep: (as @var694_0 var694)\r\n; cardinality of var2026 is 1\r\n; rep: (as @var2026_0 var2026)\r\n; cardinality of var724 is 1\r\n; rep: (as @var724_0 var724)\r\n; cardinality of var387 is 1\r\n; rep: (as @var387_0 var387)\r\n; cardinality of var3012 is 1\r\n; rep: (as @var3012_0 var3012)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var694!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var694_getClassLoader/1794181642 ((BOUND_VARIABLE_619 ClassObject)) var3181 (as @var3181_0 var3181))\r\n(define-fun var2026-init () var2026 (as @var2026_0 var2026))\r\n(define-fun <init>/1544051104 ((BOUND_VARIABLE_622 var2026) (BOUND_VARIABLE_623 var724)) void (as @void_0 void))\r\n(define-fun cast-from-var3181-to-var724 ((BOUND_VARIABLE_626 var3181)) var724 (as @var724_0 var724))\r\n(define-fun var694_objectId/1952731062 ((BOUND_VARIABLE_629 var724)) String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun var694_initDiagnostics/351455467 () var387 (as @var387_0 var387))\r\n(define-fun var694_logClassLoaderEnvironment/-1123412948 ((BOUND_VARIABLE_632 ClassObject)) void (as @void_0 void))\r\n(define-fun var694_createFactoryStore/465410863 () var3012 (as @var3012_0 var3012))\r\n(define-fun var694_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n(define-fun null-var3181 () var3181 (as @var3181_0 var3181))\r\n(define-fun var2176!1 () var2026 (as @var2026_0 var2026))\r\n(define-fun var1360!1 () var3181 (as @var3181_1 var3181))\r\n(define-fun var966!1 () String \"\")\r\n(define-fun var966!2 () String \"[LogFactory from \")\r\n(define-fun var1613!1 () String \"[LogFactory from \")\r\n(define-fun var3160!1 () String \"[LogFactory from ] \")\r\n(define-fun var2396 () ClassObject (as @ClassObject_0 ClassObject))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35749888,
            "run_time": 0.12175440788269043,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3181:\n  ;;   var3181!val!0 var3181!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3181!val!0 () var3181)\n  (declare-fun var3181!val!1 () var3181)\n  ;; cardinality constraint:\n  (forall ((x var3181)) (or (= x var3181!val!0) (= x var3181!val!1)))\n  ;; -----------\n  (define-fun var1360 () var3181\n    (var694_getClassLoader/1794181642 var694!class))\n  (define-fun var966 () String\n    String-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2829 () String\n    (str.++ var966!1\n        \"[LogFactory from \"\n        (var694_objectId/1952731062 (cast-from-var3181-to-var724 var1360!1))\n        \"] \"))\n  (define-fun null-var3181 () var3181\n    var3181!val!1)\n  (define-fun var715 () String\n    (var694_objectId/1952731062 (cast-from-var3181-to-var724 var1360!1)))\n  (define-fun var338 () var2026\n    var2176!1)\n  (define-fun var3160 () String\n    (str.++ var966!1\n        \"[LogFactory from \"\n        (var694_objectId/1952731062 (cast-from-var3181-to-var724 var1360!1))))\n  (define-fun var2798 () var3012\n    var694_createFactoryStore/465410863)\n  (define-fun var569 () var3012\n    var694_createFactoryStore/465410863)\n  (define-fun var1613 () String\n    (str.++ var966!1 \"[LogFactory from \"))\n  (define-fun var2779 () var387\n    var694_initDiagnostics/351455467)\n  (define-fun var2255 () var387\n    var694_initDiagnostics/351455467)\n  (define-fun var2176 () var2026\n    var2026-init)\n  (define-fun var1376 () String\n    (str.++ var966!1\n        \"[LogFactory from \"\n        (var694_objectId/1952731062 (cast-from-var3181-to-var724 var1360!1))\n        \"] \"))\n  (define-fun var1360!1 () var3181\n    var3181!val!0)\n  (define-fun var1316 () String\n    (str.++ var966!1\n        \"[LogFactory from \"\n        (var694_objectId/1952731062 (cast-from-var3181-to-var724 var1360!1))\n        \"] \"))\n  (define-fun var3671 () Bool\n    var694_isDiagnosticsEnabled/-1004161365)\n  (define-fun var966!2 () String\n    \"[LogFactory from \")\n  (define-fun var1613!1 () String\n    \"[LogFactory from \")\n  (define-fun var966!1 () String\n    \"\")\n  (define-fun var694_isDiagnosticsEnabled/-1004161365 () Bool\n    false)\n  (define-fun var3160!1 () String\n    \"[LogFactory from ] \")\n  (define-fun var694!class () ClassObject\n    ClassObject!val!0)\n  (define-fun var694_initDiagnostics/351455467 () var387\n    var387!val!0)\n  (define-fun var2176!1 () var2026\n    var2026!val!0)\n  (define-fun var2396 () ClassObject\n    ClassObject!val!0)\n  (define-fun var2026-init () var2026\n    var2026!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var694_createFactoryStore/465410863 () var3012\n    var3012!val!0)\n  (define-fun cast-from-var3181-to-var724 ((x!0 var3181)) var724\n    var724!val!0)\n  (define-fun var694_objectId/1952731062 ((x!0 var724)) String\n    \"\")\n  (define-fun <init>/1544051104 ((x!0 var2026) (x!1 var724)) void\n    void!val!0)\n  (define-fun var694_getClassLoader/1794181642 ((x!0 ClassObject)) var3181\n    var3181!val!0)\n  (define-fun var694_logClassLoaderEnvironment/-1123412948 ((x!0 ClassObject)) void\n    void!val!0)\n)\n(error \"line 75 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 181239808,
            "run_time": 1.9885540008544922,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3181/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__clinit__684435395\\589.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_31_4 =\r\n     concat(all_31_5, \"] \")\r\n   var3160!1 =\r\n     concat(all_28_4, \"] \")\r\n   var1613!1 =\r\n     concat(\"[LogFactory from \", all_25_3)\r\n   all_31_5 =\r\n     concat(\"[LogFactory from \", all_25_3)\r\n   all_28_4 =\r\n     concat(\"[LogFactory from \", all_25_3)\r\n\r\n1440ms\r\n"
        },
        "undefined_function_count": 10,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>(class \"Lorg/apache/commons/logging/LogFactory;\")",
            "$r1 = new java.lang.ref.WeakReference",
            "specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0)",
            "<org.apache.commons.logging.LogFactory: java.lang.ref.WeakReference thisClassLoaderRef> = $r1",
            "if r0 != null goto r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)",
            "r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)",
            "goto [?= $r2 = new java.lang.StringBuilder]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[LogFactory from \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "<org.apache.commons.logging.LogFactory: java.lang.String diagnosticPrefix> = $r6",
            "$r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.io.PrintStream initDiagnostics()>()",
            "<org.apache.commons.logging.LogFactory: java.io.PrintStream DIAGNOSTICS_STREAM> = $r7",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)>(class \"Lorg/apache/commons/logging/LogFactory;\")",
            "$r8 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()>()",
            "<org.apache.commons.logging.LogFactory: java.util.Hashtable factories> = $r8",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__\u300aclinit\u300b__684435395\\591.smt2",
        "z3": {
            "memory": 31629312,
            "run_time": 0.10892438888549805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var529:\r\n  ;;   var529!val!0 var529!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var529!val!0 () var529)\r\n  (declare-fun var529!val!1 () var529)\r\n  ;; cardinality constraint:\r\n  (forall ((x var529)) (or (= x var529!val!0) (= x var529!val!1)))\r\n  ;; -----------\r\n  (define-fun var2784 () String\r\n    \"UNKNOWN\")\r\n  (define-fun var2523 () var972\r\n    var956_initDiagnostics/351455467)\r\n  (define-fun var2122 () String\r\n    (str.++ var2190!1 \"[LogFactory from \" \"UNKNOWN\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3867 () String\r\n    (str.++ var2190!1 \"[LogFactory from \"))\r\n  (define-fun var2171 () String\r\n    (str.++ var2190!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\r\n  (define-fun var2190 () String\r\n    String-init)\r\n  (define-fun null-var529 () var529\r\n    var529!val!1)\r\n  (define-fun var1290 () var166\r\n    var956_createFactoryStore/465410863)\r\n  (define-fun var2625 () var2062\r\n    var2062-init)\r\n  (define-fun var3933 () String\r\n    (str.++ var2190!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\r\n  (define-fun var2511 () var3630\r\n    (var956_getClassLoader/1794181642 var956!class))\r\n  (define-fun var2036 () var2062\r\n    var2625!1)\r\n  (define-fun var1136 () String\r\n    (str.++ var2190!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\r\n  (define-fun var926 () var972\r\n    var956_initDiagnostics/351455467)\r\n  (define-fun var62 () var166\r\n    var956_createFactoryStore/465410863)\r\n  (define-fun var3890 () Bool\r\n    var956_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var755 () var529\r\n    var529!val!0)\r\n  (define-fun null-var3630 () var3630\r\n    var3630!val!0)\r\n  (define-fun var2511!1 () var3630\r\n    var3630!val!0)\r\n  (define-fun var956_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var2190!2 () String\r\n    \"[LogFactory from \")\r\n  (define-fun var2122!1 () String\r\n    \"[LogFactory from UNKNOWN] \")\r\n  (define-fun var2190!1 () String\r\n    \"\")\r\n  (define-fun var3867!1 () String\r\n    \"[LogFactory from UNKNOWN\")\r\n  (define-fun var2062-init () var2062\r\n    var2062!val!0)\r\n  (define-fun var956_createFactoryStore/465410863 () var166\r\n    var166!val!0)\r\n  (define-fun var3889 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var1263 () String\r\n    \"\")\r\n  (define-fun var956_initDiagnostics/351455467 () var972\r\n    var972!val!0)\r\n  (define-fun var2625!1 () var2062\r\n    var2062!val!0)\r\n  (define-fun var956!class () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun <init>/1544051104 ((x!0 var2062) (x!1 var148)) void\r\n    void!val!0)\r\n  (define-fun var956_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n  (define-fun var956_getClassLoader/1794181642 ((x!0 ClassObject)) var3630\r\n    var3630!val!0)\r\n  (define-fun cast-from-var3630-to-var148 ((x!0 var3630)) var148\r\n    var148!val!0)\r\n  (define-fun var956_logClassLoaderEnvironment/-1123412948 ((x!0 ClassObject)) void\r\n    void!val!0)\r\n)\r\n(error \"line 81 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.13899469375610352,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3630 is 1\r\n; rep: (as @var3630_0 var3630)\r\n; cardinality of var956 is 1\r\n; rep: (as @var956_0 var956)\r\n; cardinality of var2062 is 1\r\n; rep: (as @var2062_0 var2062)\r\n; cardinality of var148 is 1\r\n; rep: (as @var148_0 var148)\r\n; cardinality of var529 is 2\r\n; rep: (as @var529_0 var529)\r\n; rep: (as @var529_1 var529)\r\n; cardinality of var972 is 1\r\n; rep: (as @var972_0 var972)\r\n; cardinality of var166 is 1\r\n; rep: (as @var166_0 var166)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var956!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var956_getClassLoader/1794181642 ((BOUND_VARIABLE_643 ClassObject)) var3630 (as @var3630_0 var3630))\r\n(define-fun var2062-init () var2062 (as @var2062_0 var2062))\r\n(define-fun <init>/1544051104 ((BOUND_VARIABLE_646 var2062) (BOUND_VARIABLE_647 var148)) void (as @void_0 void))\r\n(define-fun cast-from-var3630-to-var148 ((BOUND_VARIABLE_650 var3630)) var148 (as @var148_0 var148))\r\n(define-fun String-init () String \"\")\r\n(define-fun var956_initDiagnostics/351455467 () var972 (as @var972_0 var972))\r\n(define-fun var956_logClassLoaderEnvironment/-1123412948 ((BOUND_VARIABLE_653 ClassObject)) void (as @void_0 void))\r\n(define-fun var956_createFactoryStore/465410863 () var166 (as @var166_0 var166))\r\n(define-fun var956_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun var956_logDiagnostic/1268238408 ((BOUND_VARIABLE_656 String)) void (as @void_0 void))\r\n(define-fun null-var3630 () var3630 (as @var3630_0 var3630))\r\n(define-fun null-var529 () var529 (as @var529_0 var529))\r\n(define-fun var2625!1 () var2062 (as @var2062_0 var2062))\r\n(define-fun var2511!1 () var3630 (as @var3630_0 var3630))\r\n(define-fun var755 () var529 (as @var529_1 var529))\r\n(define-fun var2190!1 () String \"\")\r\n(define-fun var2190!2 () String \"[LogFactory from \")\r\n(define-fun var3867!1 () String \"[LogFactory from UNKNOWN\")\r\n(define-fun var2122!1 () String \"[LogFactory from UNKNOWN] \")\r\n(define-fun var3889 () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var1263 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36364288,
            "run_time": 0.1537165641784668,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var529:\n  ;;   var529!val!0 var529!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var529!val!0 () var529)\n  (declare-fun var529!val!1 () var529)\n  ;; cardinality constraint:\n  (forall ((x var529)) (or (= x var529!val!0) (= x var529!val!1)))\n  ;; -----------\n  ;; universe for var3630:\n  ;;   var3630!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3630!val!0 () var3630)\n  ;; cardinality constraint:\n  (forall ((x var3630)) (= x var3630!val!0))\n  ;; -----------\n  (define-fun var2122 () String\n    (str.++ var2190!1 \"[LogFactory from \" \"UNKNOWN\"))\n  (define-fun var2625 () var2062\n    var2062-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3867 () String\n    (str.++ var2190!1 \"[LogFactory from \"))\n  (define-fun var2036 () var2062\n    var2625!1)\n  (define-fun var2511 () var3630\n    (var956_getClassLoader/1794181642 var956!class))\n  (define-fun var2190 () String\n    String-init)\n  (define-fun var2171 () String\n    (str.++ var2190!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\n  (define-fun var926 () var972\n    var956_initDiagnostics/351455467)\n  (define-fun var62 () var166\n    var956_createFactoryStore/465410863)\n  (define-fun null-var529 () var529\n    var529!val!1)\n  (define-fun var3933 () String\n    (str.++ var2190!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\n  (define-fun var1136 () String\n    (str.++ var2190!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\n  (define-fun var3890 () Bool\n    var956_isDiagnosticsEnabled/-1004161365)\n  (define-fun var2523 () var972\n    var956_initDiagnostics/351455467)\n  (define-fun var755 () var529\n    var529!val!0)\n  (define-fun var1290 () var166\n    var956_createFactoryStore/465410863)\n  (define-fun var2784 () String\n    \"UNKNOWN\")\n  (define-fun null-var3630 () var3630\n    var3630!val!0)\n  (define-fun var2511!1 () var3630\n    var3630!val!0)\n  (define-fun var956_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var2190!2 () String\n    \"[LogFactory from \")\n  (define-fun var2122!1 () String\n    \"[LogFactory from UNKNOWN] \")\n  (define-fun var2190!1 () String\n    \"\")\n  (define-fun var3867!1 () String\n    \"[LogFactory from UNKNOWN\")\n  (define-fun var2062-init () var2062\n    var2062!val!0)\n  (define-fun var956_createFactoryStore/465410863 () var166\n    var166!val!0)\n  (define-fun var3889 () ClassObject\n    ClassObject!val!0)\n  (define-fun var1263 () String\n    \"\")\n  (define-fun var956_initDiagnostics/351455467 () var972\n    var972!val!0)\n  (define-fun var2625!1 () var2062\n    var2062!val!0)\n  (define-fun var956!class () ClassObject\n    ClassObject!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun <init>/1544051104 ((x!0 var2062) (x!1 var148)) void\n    void!val!0)\n  (define-fun var956_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n  (define-fun var956_getClassLoader/1794181642 ((x!0 ClassObject)) var3630\n    var3630!val!0)\n  (define-fun cast-from-var3630-to-var148 ((x!0 var3630)) var148\n    var148!val!0)\n  (define-fun var956_logClassLoaderEnvironment/-1123412948 ((x!0 ClassObject)) void\n    void!val!0)\n)\n(error \"line 81 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182796288,
            "run_time": 1.940239667892456,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2122!1 () String \"[LogFactory from UNKNOWN] \")\r\n  (define-fun var3867!1 () String \"[LogFactory from UNKNOWN\")\r\n  (define-fun var2190!2 () String \"[LogFactory from \")\r\n  (define-fun var2190!1 () String \"\")\r\n  (define-fun var755 () var529 var529!90)\r\n  (define-fun var2511!1 () var3630 var3630!86)\r\n  (define-fun null-var529 () var529 var529!88)\r\n  (define-fun null-var3630 () var3630 var3630!86)\r\n  (define-fun var956_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n  (define-fun abbrev_116 ((x!0 Int)) String (ite (= x!0 0) \"[LogFactory from UNKNOWN\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 10,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>(class \"Lorg/apache/commons/logging/LogFactory;\")",
            "$r1 = new java.lang.ref.WeakReference",
            "specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0)",
            "<org.apache.commons.logging.LogFactory: java.lang.ref.WeakReference thisClassLoaderRef> = $r1",
            "if r0 != null goto r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)",
            "$r9 := @caughtexception",
            "r10 = \"UNKNOWN\"",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[LogFactory from \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "<org.apache.commons.logging.LogFactory: java.lang.String diagnosticPrefix> = $r6",
            "$r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.io.PrintStream initDiagnostics()>()",
            "<org.apache.commons.logging.LogFactory: java.io.PrintStream DIAGNOSTICS_STREAM> = $r7",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)>(class \"Lorg/apache/commons/logging/LogFactory;\")",
            "$r8 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()>()",
            "<org.apache.commons.logging.LogFactory: java.util.Hashtable factories> = $r8",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>(\"BOOTSTRAP COMPLETED\")",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__release__-1355242150\\516.smt2",
        "z3": {
            "memory": 31281152,
            "run_time": 0.10398697853088379,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1886:\r\n  ;;   var1886!val!1 var1886!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1886!val!1 () var1886)\r\n  (declare-fun var1886!val!0 () var1886)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1886)) (or (= x var1886!val!1) (= x var1886!val!0)))\r\n  ;; -----------\r\n  ;; universe for var379:\r\n  ;;   var379!val!0 var379!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var379!val!0 () var379)\r\n  (declare-fun var379!val!1 () var379)\r\n  ;; cardinality constraint:\r\n  (forall ((x var379)) (or (= x var379!val!0) (= x var379!val!1)))\r\n  ;; -----------\r\n  (define-fun var1124 () var379\r\n    var379!val!0)\r\n  (define-fun null-var1886 () var1886\r\n    var1886!val!1)\r\n  (define-fun var2461 () var3706\r\n    var164-factories)\r\n  (define-fun var309 () var1624\r\n    (get/-1721276195 var164-factories (cast-from-var379-to-var1624 var1124)))\r\n  (define-fun var2478 () Bool\r\n    var164_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var2060 () var1886\r\n    var1886!val!0)\r\n  (define-fun null-var379 () var379\r\n    var379!val!1)\r\n  (define-fun var164_isDiagnosticsEnabled/-1004161365 () Bool\r\n    false)\r\n  (define-fun var164-factories () var3706\r\n    var3706!val!0)\r\n  (define-fun get/-1721276195 ((x!0 var3706) (x!1 var1624)) var1624\r\n    var1624!val!0)\r\n  (define-fun cast-from-var379-to-var1624 ((x!0 var379)) var1624\r\n    var1624!val!0)\r\n)\r\n(error \"line 39 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.03206205368041992,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var379 is 2\r\n; rep: (as @var379_0 var379)\r\n; rep: (as @var379_1 var379)\r\n; cardinality of var164 is 1\r\n; rep: (as @var164_0 var164)\r\n; cardinality of var3706 is 1\r\n; rep: (as @var3706_0 var3706)\r\n; cardinality of var1624 is 1\r\n; rep: (as @var1624_0 var1624)\r\n; cardinality of var1886 is 2\r\n; rep: (as @var1886_0 var1886)\r\n; rep: (as @var1886_1 var1886)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var164_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n(define-fun get/-1721276195 ((BOUND_VARIABLE_465 var3706) (BOUND_VARIABLE_466 var1624)) var1624 (as @var1624_0 var1624))\r\n(define-fun cast-from-var379-to-var1624 ((BOUND_VARIABLE_469 var379)) var1624 (as @var1624_0 var1624))\r\n(define-fun null-var379 () var379 (as @var379_0 var379))\r\n(define-fun var164-factories () var3706 (as @var3706_0 var3706))\r\n(define-fun null-var1886 () var1886 (as @var1886_0 var1886))\r\n(define-fun var1124 () var379 (as @var379_1 var379))\r\n(define-fun var2060 () var1886 (as @var1886_1 var1886))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35598336,
            "run_time": 0.09112262725830078,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1886:\n  ;;   var1886!val!1 var1886!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1886!val!1 () var1886)\n  (declare-fun var1886!val!0 () var1886)\n  ;; cardinality constraint:\n  (forall ((x var1886)) (or (= x var1886!val!1) (= x var1886!val!0)))\n  ;; -----------\n  ;; universe for var379:\n  ;;   var379!val!0 var379!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var379!val!0 () var379)\n  (declare-fun var379!val!1 () var379)\n  ;; cardinality constraint:\n  (forall ((x var379)) (or (= x var379!val!0) (= x var379!val!1)))\n  ;; -----------\n  (define-fun var1124 () var379\n    var379!val!0)\n  (define-fun null-var1886 () var1886\n    var1886!val!1)\n  (define-fun var309 () var1624\n    (get/-1721276195 var164-factories (cast-from-var379-to-var1624 var1124)))\n  (define-fun var2478 () Bool\n    var164_isDiagnosticsEnabled/-1004161365)\n  (define-fun var2461 () var3706\n    var164-factories)\n  (define-fun var2060 () var1886\n    var1886!val!0)\n  (define-fun null-var379 () var379\n    var379!val!1)\n  (define-fun var164_isDiagnosticsEnabled/-1004161365 () Bool\n    false)\n  (define-fun var164-factories () var3706\n    var3706!val!0)\n  (define-fun get/-1721276195 ((x!0 var3706) (x!1 var1624)) var1624\n    var1624!val!0)\n  (define-fun cast-from-var379-to-var1624 ((x!0 var379)) var1624\n    var1624!val!0)\n)\n(error \"line 39 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 153825280,
            "run_time": 1.3587779998779297,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2060 () var1886 var1886!8)\r\n  (define-fun var1124 () var379 var379!6)\r\n  (define-fun null-var1886 () var1886 var1886!4)\r\n  (define-fun null-var379 () var379 var379!2)\r\n  (define-fun var164_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 9,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.ClassLoader",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "$r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "entermonitor $r10",
            "if r0 != null goto $r1 = virtualinvoke $r10.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0)",
            "$r1 = virtualinvoke $r10.<java.util.Hashtable: java.lang.Object get(java.lang.Object)>(r0)",
            "$r11 := @caughtexception",
            "exitmonitor $r10",
            "throw $r11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__release__-1355242150\\536.smt2",
        "z3": {
            "memory": 32010240,
            "run_time": 0.08966374397277832,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2574:\r\n  ;;   var2574!val!0 var2574!val!2 var2574!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2574!val!0 () var2574)\r\n  (declare-fun var2574!val!2 () var2574)\r\n  (declare-fun var2574!val!1 () var2574)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2574))\r\n          (or (= x var2574!val!0) (= x var2574!val!2) (= x var2574!val!1)))\r\n  ;; -----------\r\n  ;; universe for var600:\r\n  ;;   var600!val!1 var600!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var600!val!1 () var600)\r\n  (declare-fun var600!val!0 () var600)\r\n  ;; cardinality constraint:\r\n  (forall ((x var600)) (or (= x var600!val!1) (= x var600!val!0)))\r\n  ;; -----------\r\n  (define-fun var2404 () var3440\r\n    var1477-factories)\r\n  (define-fun var434 () var600\r\n    var600!val!0)\r\n  (define-fun var1015 () Bool\r\n    var1477_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun null-var600 () var600\r\n    var600!val!1)\r\n  (define-fun var1673 () var2574\r\n    var2574!val!0)\r\n  (define-fun null-var2574 () var2574\r\n    var2574!val!1)\r\n  (define-fun var1673!1 () var2574\r\n    var2574!val!2)\r\n  (define-fun var1477_isDiagnosticsEnabled/-1004161365 () Bool\r\n    false)\r\n  (define-fun var1477-factories () var3440\r\n    var3440!val!0)\r\n)\r\n(error \"line 36 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1654784,
            "run_time": 0.030601978302001953,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var600 is 2\r\n; rep: (as @var600_0 var600)\r\n; rep: (as @var600_1 var600)\r\n; cardinality of var1477 is 1\r\n; rep: (as @var1477_0 var1477)\r\n; cardinality of var3440 is 1\r\n; rep: (as @var3440_0 var3440)\r\n; cardinality of var2574 is 3\r\n; rep: (as @var2574_0 var2574)\r\n; rep: (as @var2574_1 var2574)\r\n; rep: (as @var2574_2 var2574)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1477_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n(define-fun null-var600 () var600 (as @var600_0 var600))\r\n(define-fun var1477-factories () var3440 (as @var3440_0 var3440))\r\n(define-fun null-var2574 () var2574 (as @var2574_0 var2574))\r\n(define-fun var434 () var600 (as @var600_1 var600))\r\n(define-fun var1673 () var2574 (as @var2574_1 var2574))\r\n(define-fun var1673!1 () var2574 (as @var2574_2 var2574))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35635200,
            "run_time": 0.09322094917297363,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2574:\n  ;;   var2574!val!0 var2574!val!2 var2574!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2574!val!0 () var2574)\n  (declare-fun var2574!val!2 () var2574)\n  (declare-fun var2574!val!1 () var2574)\n  ;; cardinality constraint:\n  (forall ((x var2574))\n          (or (= x var2574!val!0) (= x var2574!val!2) (= x var2574!val!1)))\n  ;; -----------\n  ;; universe for var600:\n  ;;   var600!val!1 var600!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var600!val!1 () var600)\n  (declare-fun var600!val!0 () var600)\n  ;; cardinality constraint:\n  (forall ((x var600)) (or (= x var600!val!1) (= x var600!val!0)))\n  ;; -----------\n  (define-fun var1015 () Bool\n    var1477_isDiagnosticsEnabled/-1004161365)\n  (define-fun var434 () var600\n    var600!val!0)\n  (define-fun var2404 () var3440\n    var1477-factories)\n  (define-fun null-var600 () var600\n    var600!val!1)\n  (define-fun var1673 () var2574\n    var2574!val!0)\n  (define-fun null-var2574 () var2574\n    var2574!val!1)\n  (define-fun var1673!1 () var2574\n    var2574!val!2)\n  (define-fun var1477_isDiagnosticsEnabled/-1004161365 () Bool\n    false)\n  (define-fun var1477-factories () var3440\n    var3440!val!0)\n)\n(error \"line 36 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 137580544,
            "run_time": 1.279707670211792,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1673!1 () var2574 var2574!10)\r\n  (define-fun var1673 () var2574 var2574!8)\r\n  (define-fun var434 () var600 var600!6)\r\n  (define-fun null-var2574 () var2574 var2574!4)\r\n  (define-fun null-var600 () var600 var600!2)\r\n  (define-fun var1477_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 9,
        "api_sequence": [
            ""
        ],
        "api_count": {},
        "jimple_statements": [
            "r0 := @parameter0: java.lang.ClassLoader",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "$r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "entermonitor $r10",
            "$r11 := @caughtexception",
            "exitmonitor $r10",
            "$r11 := @caughtexception",
            "exitmonitor $r10",
            "throw $r11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__\u300aclinit\u300b__684435395\\593.smt2",
        "z3": {
            "memory": 32116736,
            "run_time": 0.10344982147216797,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1137:\r\n  ;;   var1137!val!0 var1137!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1137!val!0 () var1137)\r\n  (declare-fun var1137!val!1 () var1137)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1137)) (or (= x var1137!val!0) (= x var1137!val!1)))\r\n  ;; -----------\r\n  (define-fun var1258 () var498\r\n    var482_initDiagnostics/351455467)\r\n  (define-fun var3801 () var3352\r\n    var482_createFactoryStore/465410863)\r\n  (define-fun var2316 () var3735\r\n    var3735-init)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2250 () String\r\n    (str.++ var241!1\r\n        \"[LogFactory from \"\r\n        (var482_objectId/1952731062 (cast-from-var1137-to-var3863 var3406!1))))\r\n  (define-fun var3406!1 () var1137\r\n    var1137!val!0)\r\n  (define-fun var2772 () var3735\r\n    var2316!1)\r\n  (define-fun var241 () String\r\n    String-init)\r\n  (define-fun var1152 () String\r\n    (str.++ var241!1\r\n        \"[LogFactory from \"\r\n        (var482_objectId/1952731062 (cast-from-var1137-to-var3863 var3406!1))\r\n        \"] \"))\r\n  (define-fun var2174 () var3352\r\n    var482_createFactoryStore/465410863)\r\n  (define-fun var2549 () String\r\n    (str.++ var241!1 \"[LogFactory from \"))\r\n  (define-fun null-var1137 () var1137\r\n    var1137!val!1)\r\n  (define-fun var2299 () String\r\n    (str.++ var241!1\r\n        \"[LogFactory from \"\r\n        (var482_objectId/1952731062 (cast-from-var1137-to-var3863 var3406!1))\r\n        \"] \"))\r\n  (define-fun var3066 () String\r\n    (str.++ var241!1\r\n        \"[LogFactory from \"\r\n        (var482_objectId/1952731062 (cast-from-var1137-to-var3863 var3406!1))\r\n        \"] \"))\r\n  (define-fun var1615 () String\r\n    (var482_objectId/1952731062 (cast-from-var1137-to-var3863 var3406!1)))\r\n  (define-fun var3406 () var1137\r\n    (var482_getClassLoader/1794181642 var482!class))\r\n  (define-fun var1886 () Bool\r\n    var482_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var199 () var498\r\n    var482_initDiagnostics/351455467)\r\n  (define-fun var482_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var241!2 () String\r\n    \"[LogFactory from \")\r\n  (define-fun var2549!1 () String\r\n    \"[LogFactory from \")\r\n  (define-fun var2250!1 () String\r\n    \"[LogFactory from ] \")\r\n  (define-fun var241!1 () String\r\n    \"\")\r\n  (define-fun var3735-init () var3735\r\n    var3735!val!0)\r\n  (define-fun var482_initDiagnostics/351455467 () var498\r\n    var498!val!0)\r\n  (define-fun var482!class () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var2851 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var482_createFactoryStore/465410863 () var3352\r\n    var3352!val!0)\r\n  (define-fun var2316!1 () var3735\r\n    var3735!val!0)\r\n  (define-fun var3141 () String\r\n    \"\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var1137-to-var3863 ((x!0 var1137)) var3863\r\n    var3863!val!0)\r\n  (define-fun var482_objectId/1952731062 ((x!0 var3863)) String\r\n    \"\")\r\n  (define-fun var482_getClassLoader/1794181642 ((x!0 ClassObject)) var1137\r\n    var1137!val!0)\r\n  (define-fun var482_logClassLoaderEnvironment/-1123412948 ((x!0 ClassObject)) void\r\n    void!val!0)\r\n  (define-fun <init>/1544051104 ((x!0 var3735) (x!1 var3863)) void\r\n    void!val!0)\r\n  (define-fun var482_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 80 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 8929280,
            "run_time": 0.03168535232543945,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1137 is 2\r\n; rep: (as @var1137_0 var1137)\r\n; rep: (as @var1137_1 var1137)\r\n; cardinality of var482 is 1\r\n; rep: (as @var482_0 var482)\r\n; cardinality of var3735 is 1\r\n; rep: (as @var3735_0 var3735)\r\n; cardinality of var3863 is 1\r\n; rep: (as @var3863_0 var3863)\r\n; cardinality of var498 is 1\r\n; rep: (as @var498_0 var498)\r\n; cardinality of var3352 is 1\r\n; rep: (as @var3352_0 var3352)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var482!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var482_getClassLoader/1794181642 ((BOUND_VARIABLE_635 ClassObject)) var1137 (as @var1137_0 var1137))\r\n(define-fun var3735-init () var3735 (as @var3735_0 var3735))\r\n(define-fun <init>/1544051104 ((BOUND_VARIABLE_638 var3735) (BOUND_VARIABLE_639 var3863)) void (as @void_0 void))\r\n(define-fun cast-from-var1137-to-var3863 ((BOUND_VARIABLE_642 var1137)) var3863 (as @var3863_0 var3863))\r\n(define-fun var482_objectId/1952731062 ((BOUND_VARIABLE_645 var3863)) String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun var482_initDiagnostics/351455467 () var498 (as @var498_0 var498))\r\n(define-fun var482_logClassLoaderEnvironment/-1123412948 ((BOUND_VARIABLE_648 ClassObject)) void (as @void_0 void))\r\n(define-fun var482_createFactoryStore/465410863 () var3352 (as @var3352_0 var3352))\r\n(define-fun var482_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun var482_logDiagnostic/1268238408 ((BOUND_VARIABLE_651 String)) void (as @void_0 void))\r\n(define-fun null-var1137 () var1137 (as @var1137_0 var1137))\r\n(define-fun var2316!1 () var3735 (as @var3735_0 var3735))\r\n(define-fun var3406!1 () var1137 (as @var1137_1 var1137))\r\n(define-fun var241!1 () String \"\")\r\n(define-fun var241!2 () String \"[LogFactory from \")\r\n(define-fun var2549!1 () String \"[LogFactory from \")\r\n(define-fun var2250!1 () String \"[LogFactory from ] \")\r\n(define-fun var2851 () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var3141 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36335616,
            "run_time": 0.09224224090576172,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1137:\n  ;;   var1137!val!0 var1137!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1137!val!0 () var1137)\n  (declare-fun var1137!val!1 () var1137)\n  ;; cardinality constraint:\n  (forall ((x var1137)) (or (= x var1137!val!0) (= x var1137!val!1)))\n  ;; -----------\n  (define-fun var2174 () var3352\n    var482_createFactoryStore/465410863)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var241 () String\n    String-init)\n  (define-fun var1152 () String\n    (str.++ var241!1\n        \"[LogFactory from \"\n        (var482_objectId/1952731062 (cast-from-var1137-to-var3863 var3406!1))\n        \"] \"))\n  (define-fun var2250 () String\n    (str.++ var241!1\n        \"[LogFactory from \"\n        (var482_objectId/1952731062 (cast-from-var1137-to-var3863 var3406!1))))\n  (define-fun var3406!1 () var1137\n    var1137!val!0)\n  (define-fun var1886 () Bool\n    var482_isDiagnosticsEnabled/-1004161365)\n  (define-fun var3406 () var1137\n    (var482_getClassLoader/1794181642 var482!class))\n  (define-fun var2549 () String\n    (str.++ var241!1 \"[LogFactory from \"))\n  (define-fun var2299 () String\n    (str.++ var241!1\n        \"[LogFactory from \"\n        (var482_objectId/1952731062 (cast-from-var1137-to-var3863 var3406!1))\n        \"] \"))\n  (define-fun var3066 () String\n    (str.++ var241!1\n        \"[LogFactory from \"\n        (var482_objectId/1952731062 (cast-from-var1137-to-var3863 var3406!1))\n        \"] \"))\n  (define-fun var1615 () String\n    (var482_objectId/1952731062 (cast-from-var1137-to-var3863 var3406!1)))\n  (define-fun null-var1137 () var1137\n    var1137!val!1)\n  (define-fun var199 () var498\n    var482_initDiagnostics/351455467)\n  (define-fun var1258 () var498\n    var482_initDiagnostics/351455467)\n  (define-fun var3801 () var3352\n    var482_createFactoryStore/465410863)\n  (define-fun var2316 () var3735\n    var3735-init)\n  (define-fun var2772 () var3735\n    var2316!1)\n  (define-fun var482_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var241!2 () String\n    \"[LogFactory from \")\n  (define-fun var2549!1 () String\n    \"[LogFactory from \")\n  (define-fun var2250!1 () String\n    \"[LogFactory from ] \")\n  (define-fun var241!1 () String\n    \"\")\n  (define-fun var3735-init () var3735\n    var3735!val!0)\n  (define-fun var482_initDiagnostics/351455467 () var498\n    var498!val!0)\n  (define-fun var482!class () ClassObject\n    ClassObject!val!0)\n  (define-fun var2851 () ClassObject\n    ClassObject!val!0)\n  (define-fun var482_createFactoryStore/465410863 () var3352\n    var3352!val!0)\n  (define-fun var2316!1 () var3735\n    var3735!val!0)\n  (define-fun var3141 () String\n    \"\")\n  (define-fun String-init () String\n    \"\")\n  (define-fun cast-from-var1137-to-var3863 ((x!0 var1137)) var3863\n    var3863!val!0)\n  (define-fun var482_objectId/1952731062 ((x!0 var3863)) String\n    \"\")\n  (define-fun var482_getClassLoader/1794181642 ((x!0 ClassObject)) var1137\n    var1137!val!0)\n  (define-fun var482_logClassLoaderEnvironment/-1123412948 ((x!0 ClassObject)) void\n    void!val!0)\n  (define-fun <init>/1544051104 ((x!0 var3735) (x!1 var3863)) void\n    void!val!0)\n  (define-fun var482_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 80 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 183545856,
            "run_time": 1.8546063899993896,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1137/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__clinit__684435395\\593.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_31_4 =\r\n     concat(all_31_5, \"] \")\r\n   var2250!1 =\r\n     concat(all_28_4, \"] \")\r\n   var2549!1 =\r\n     concat(\"[LogFactory from \", all_25_3)\r\n   all_31_5 =\r\n     concat(\"[LogFactory from \", all_25_3)\r\n   all_28_4 =\r\n     concat(\"[LogFactory from \", all_25_3)\r\n\r\n1430ms\r\n"
        },
        "undefined_function_count": 11,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>(class \"Lorg/apache/commons/logging/LogFactory;\")",
            "$r1 = new java.lang.ref.WeakReference",
            "specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0)",
            "<org.apache.commons.logging.LogFactory: java.lang.ref.WeakReference thisClassLoaderRef> = $r1",
            "if r0 != null goto r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)",
            "r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)",
            "goto [?= $r2 = new java.lang.StringBuilder]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[LogFactory from \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "<org.apache.commons.logging.LogFactory: java.lang.String diagnosticPrefix> = $r6",
            "$r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.io.PrintStream initDiagnostics()>()",
            "<org.apache.commons.logging.LogFactory: java.io.PrintStream DIAGNOSTICS_STREAM> = $r7",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)>(class \"Lorg/apache/commons/logging/LogFactory;\")",
            "$r8 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()>()",
            "<org.apache.commons.logging.LogFactory: java.util.Hashtable factories> = $r8",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>(\"BOOTSTRAP COMPLETED\")",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__release__-1355242150\\513.smt2",
        "z3": {
            "memory": 32067584,
            "run_time": 0.07488656044006348,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var225:\r\n  ;;   var225!val!0 var225!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var225!val!0 () var225)\r\n  (declare-fun var225!val!1 () var225)\r\n  ;; cardinality constraint:\r\n  (forall ((x var225)) (or (= x var225!val!0) (= x var225!val!1)))\r\n  ;; -----------\r\n  ;; universe for var3714:\r\n  ;;   var3714!val!0 var3714!val!2 var3714!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3714!val!0 () var3714)\r\n  (declare-fun var3714!val!2 () var3714)\r\n  (declare-fun var3714!val!1 () var3714)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3714))\r\n          (or (= x var3714!val!0) (= x var3714!val!2) (= x var3714!val!1)))\r\n  ;; -----------\r\n  (define-fun var1364 () Bool\r\n    var2559_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var2782 () String\r\n    String-init)\r\n  (define-fun null-var3714 () var3714\r\n    var3714!val!1)\r\n  (define-fun var389 () String\r\n    (str.++ var2782!1\r\n        \"Releasing factory for class loader \"\r\n        (var2559_objectId/1952731062 (cast-from-var225-to-var3484 var1878))))\r\n  (define-fun var1128 () String\r\n    (var2559_objectId/1952731062 (cast-from-var225-to-var3484 var1878)))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2092 () var3714\r\n    var3714!val!0)\r\n  (define-fun var1878 () var225\r\n    var225!val!0)\r\n  (define-fun null-var225 () var225\r\n    var225!val!1)\r\n  (define-fun var2092!1 () var3714\r\n    var3714!val!2)\r\n  (define-fun var3399 () String\r\n    (str.++ var2782!1\r\n        \"Releasing factory for class loader \"\r\n        (var2559_objectId/1952731062 (cast-from-var225-to-var3484 var1878))))\r\n  (define-fun var569 () var373\r\n    var2559-factories)\r\n  (define-fun var3226 () String\r\n    (str.++ var2782!1 \"Releasing factory for class loader \"))\r\n  (define-fun var2559_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var3226!1 () String\r\n    \"Releasing factory for class loader \")\r\n  (define-fun var2782!1 () String\r\n    \"\")\r\n  (define-fun var2782!2 () String\r\n    \"Releasing factory for class loader \")\r\n  (define-fun var389!1 () String\r\n    \"\")\r\n  (define-fun var2559-factories () var373\r\n    var373!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun cast-from-var225-to-var3484 ((x!0 var225)) var3484\r\n    var3484!val!0)\r\n  (define-fun var2559_objectId/1952731062 ((x!0 var3484)) String\r\n    \"\")\r\n  (define-fun var2559_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 62 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.03161311149597168,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var225 is 2\r\n; rep: (as @var225_0 var225)\r\n; rep: (as @var225_1 var225)\r\n; cardinality of var2559 is 1\r\n; rep: (as @var2559_0 var2559)\r\n; cardinality of var3484 is 1\r\n; rep: (as @var3484_0 var3484)\r\n; cardinality of var373 is 1\r\n; rep: (as @var373_0 var373)\r\n; cardinality of var3714 is 3\r\n; rep: (as @var3714_0 var3714)\r\n; rep: (as @var3714_1 var3714)\r\n; rep: (as @var3714_2 var3714)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2559_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun var2559_objectId/1952731062 ((BOUND_VARIABLE_579 var3484)) String \"\")\r\n(define-fun cast-from-var225-to-var3484 ((BOUND_VARIABLE_582 var225)) var3484 (as @var3484_0 var3484))\r\n(define-fun var2559_logDiagnostic/1268238408 ((BOUND_VARIABLE_585 String)) void (as @void_0 void))\r\n(define-fun null-var225 () var225 (as @var225_0 var225))\r\n(define-fun var2559-factories () var373 (as @var373_0 var373))\r\n(define-fun null-var3714 () var3714 (as @var3714_0 var3714))\r\n(define-fun var1878 () var225 (as @var225_1 var225))\r\n(define-fun var2782!1 () String \"\")\r\n(define-fun var2782!2 () String \"Releasing factory for class loader \")\r\n(define-fun var3226!1 () String \"Releasing factory for class loader \")\r\n(define-fun var389!1 () String \"\")\r\n(define-fun var2092 () var3714 (as @var3714_1 var3714))\r\n(define-fun var2092!1 () var3714 (as @var3714_2 var3714))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36335616,
            "run_time": 0.0924530029296875,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var225:\n  ;;   var225!val!0 var225!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var225!val!0 () var225)\n  (declare-fun var225!val!1 () var225)\n  ;; cardinality constraint:\n  (forall ((x var225)) (or (= x var225!val!0) (= x var225!val!1)))\n  ;; -----------\n  ;; universe for var3714:\n  ;;   var3714!val!0 var3714!val!2 var3714!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3714!val!0 () var3714)\n  (declare-fun var3714!val!2 () var3714)\n  (declare-fun var3714!val!1 () var3714)\n  ;; cardinality constraint:\n  (forall ((x var3714))\n          (or (= x var3714!val!0) (= x var3714!val!2) (= x var3714!val!1)))\n  ;; -----------\n  (define-fun var389 () String\n    (str.++ var2782!1\n        \"Releasing factory for class loader \"\n        (var2559_objectId/1952731062 (cast-from-var225-to-var3484 var1878))))\n  (define-fun null-var3714 () var3714\n    var3714!val!1)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1364 () Bool\n    var2559_isDiagnosticsEnabled/-1004161365)\n  (define-fun var3399 () String\n    (str.++ var2782!1\n        \"Releasing factory for class loader \"\n        (var2559_objectId/1952731062 (cast-from-var225-to-var3484 var1878))))\n  (define-fun var3226 () String\n    (str.++ var2782!1 \"Releasing factory for class loader \"))\n  (define-fun var2092 () var3714\n    var3714!val!0)\n  (define-fun var1878 () var225\n    var225!val!0)\n  (define-fun null-var225 () var225\n    var225!val!1)\n  (define-fun var2092!1 () var3714\n    var3714!val!2)\n  (define-fun var2782 () String\n    String-init)\n  (define-fun var1128 () String\n    (var2559_objectId/1952731062 (cast-from-var225-to-var3484 var1878)))\n  (define-fun var569 () var373\n    var2559-factories)\n  (define-fun var2559_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var3226!1 () String\n    \"Releasing factory for class loader \")\n  (define-fun var2782!1 () String\n    \"\")\n  (define-fun var2782!2 () String\n    \"Releasing factory for class loader \")\n  (define-fun var389!1 () String\n    \"\")\n  (define-fun var2559-factories () var373\n    var373!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun cast-from-var225-to-var3484 ((x!0 var225)) var3484\n    var3484!val!0)\n  (define-fun var2559_objectId/1952731062 ((x!0 var3484)) String\n    \"\")\n  (define-fun var2559_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 62 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 176488448,
            "run_time": 1.713292121887207,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3714/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__release__-1355242150\\513.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var3226!1 =\r\n     concat(\"Releasing factory for class loader \", all_27_2)\r\n\r\n1267ms\r\n"
        },
        "undefined_function_count": 5,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 2,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.ClassLoader",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "$r5 = new java.lang.StringBuilder",
            "specialinvoke $r5.<java.lang.StringBuilder: void <init>()>()",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Releasing factory for class loader \")",
            "$r6 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)",
            "$r10 = <org.apache.commons.logging.LogFactory: java.util.Hashtable factories>",
            "entermonitor $r10",
            "$r11 := @caughtexception",
            "$r11 := @caughtexception",
            "exitmonitor $r10",
            "throw $r11"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__trim__1628961696\\556.smt2",
        "z3": {
            "memory": 32219136,
            "run_time": 0.13607549667358398,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var1221 () String\r\n    (trim-right (trim-left var3731)))\r\n  (define-fun var3731 () String\r\n    \"A\")\r\n  (define-fun null-String () String\r\n    \"\")\r\n)\r\n(error \"line 22 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 20951040,
            "run_time": 0.6761279106140137,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(\r\n; cardinality of var1507 is 1\r\n; rep: (as @var1507_0 var1507)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun null-String () String \"!\")\r\n(define-fun var3731 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36704256,
            "run_time": 0.12515616416931152,
            "is_sat": "sat",
            "stdout": "sat\n(\n  (define-fun var3731 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1221 () String\n    (trim-right (trim-left var3731)))\n  (define-fun null-String () String\n    \"\\u{0}\")\n)\n(error \"line 22 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 192401408,
            "run_time": 1.5778424739837646,
            "is_sat": "unknown",
            "stdout": "unknown\r\n(model\r\n  (define-fun var3731 () String \"\\u{0}\")\r\n  (define-fun null-String () String \"\")\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 0,
        "assertion_count": 3,
        "api_sequence": [
            "<java.lang.String: java.lang.String trim()>"
        ],
        "api_count": {
            "<java.lang.String: java.lang.String trim()>": 1
        },
        "jimple_statements": [
            "r0 := @parameter0: java.lang.String",
            "if r0 != null goto $r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()",
            "$r1 = virtualinvoke r0.<java.lang.String: java.lang.String trim()>()",
            "return $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__\u300aclinit\u300b__684435395\\588.smt2",
        "z3": {
            "memory": 31805440,
            "run_time": 0.08805632591247559,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var3145_isDiagnosticsEnabled/-1004161365 () Bool\r\n    false)\r\n  (define-fun null-var3426 () var3426\r\n    var3426!val!0)\r\n  (define-fun var3915!1 () var3426\r\n    var3426!val!0)\r\n  (define-fun var1358!1 () String\r\n    \"[LogFactory from BOOTLOADER] \")\r\n  (define-fun var700!1 () String\r\n    \"\")\r\n  (define-fun var700!2 () String\r\n    \"[LogFactory from \")\r\n  (define-fun var1544!1 () String\r\n    \"[LogFactory from BOOTLOADER\")\r\n  (define-fun var3145_createFactoryStore/465410863 () var2165\r\n    var2165!val!0)\r\n  (define-fun var3145_initDiagnostics/351455467 () var2813\r\n    var2813!val!0)\r\n  (define-fun var3145!class () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var36 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var467-init () var467\r\n    var467!val!0)\r\n  (define-fun var40!1 () var467\r\n    var467!val!0)\r\n  (define-fun var40 () var467\r\n    var467-init)\r\n  (define-fun var251 () var467\r\n    var40!1)\r\n  (define-fun var3100 () var2813\r\n    var3145_initDiagnostics/351455467)\r\n  (define-fun var1358 () String\r\n    (str.++ var700!1 \"[LogFactory from \" \"BOOTLOADER\"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1259 () String\r\n    \"BOOTLOADER\")\r\n  (define-fun var2529 () var2165\r\n    var3145_createFactoryStore/465410863)\r\n  (define-fun var1544 () String\r\n    (str.++ var700!1 \"[LogFactory from \"))\r\n  (define-fun var700 () String\r\n    String-init)\r\n  (define-fun var2764 () String\r\n    (str.++ var700!1 \"[LogFactory from \" \"BOOTLOADER\" \"] \"))\r\n  (define-fun var3915 () var3426\r\n    (var3145_getClassLoader/1794181642 var3145!class))\r\n  (define-fun var1504 () String\r\n    (str.++ var700!1 \"[LogFactory from \" \"BOOTLOADER\" \"] \"))\r\n  (define-fun var407 () String\r\n    (str.++ var700!1 \"[LogFactory from \" \"BOOTLOADER\" \"] \"))\r\n  (define-fun var2081 () var2165\r\n    var3145_createFactoryStore/465410863)\r\n  (define-fun var3620 () var2813\r\n    var3145_initDiagnostics/351455467)\r\n  (define-fun var1745 () Bool\r\n    var3145_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun cast-from-var3426-to-var3778 ((x!0 var3426)) var3778\r\n    var3778!val!0)\r\n  (define-fun var3145_getClassLoader/1794181642 ((x!0 ClassObject)) var3426\r\n    var3426!val!0)\r\n  (define-fun <init>/1544051104 ((x!0 var467) (x!1 var3778)) void\r\n    void!val!0)\r\n  (define-fun var3145_logClassLoaderEnvironment/-1123412948 ((x!0 ClassObject)) void\r\n    void!val!0)\r\n)\r\n(error \"line 75 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1683456,
            "run_time": 0.029203414916992188,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3426 is 1\r\n; rep: (as @var3426_0 var3426)\r\n; cardinality of var3145 is 1\r\n; rep: (as @var3145_0 var3145)\r\n; cardinality of var467 is 1\r\n; rep: (as @var467_0 var467)\r\n; cardinality of var3778 is 1\r\n; rep: (as @var3778_0 var3778)\r\n; cardinality of var2813 is 1\r\n; rep: (as @var2813_0 var2813)\r\n; cardinality of var2165 is 1\r\n; rep: (as @var2165_0 var2165)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3145!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var3145_getClassLoader/1794181642 ((BOUND_VARIABLE_616 ClassObject)) var3426 (as @var3426_0 var3426))\r\n(define-fun var467-init () var467 (as @var467_0 var467))\r\n(define-fun <init>/1544051104 ((BOUND_VARIABLE_619 var467) (BOUND_VARIABLE_620 var3778)) void (as @void_0 void))\r\n(define-fun cast-from-var3426-to-var3778 ((BOUND_VARIABLE_623 var3426)) var3778 (as @var3778_0 var3778))\r\n(define-fun String-init () String \"\")\r\n(define-fun var3145_initDiagnostics/351455467 () var2813 (as @var2813_0 var2813))\r\n(define-fun var3145_logClassLoaderEnvironment/-1123412948 ((BOUND_VARIABLE_626 ClassObject)) void (as @void_0 void))\r\n(define-fun var3145_createFactoryStore/465410863 () var2165 (as @var2165_0 var2165))\r\n(define-fun var3145_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n(define-fun null-var3426 () var3426 (as @var3426_0 var3426))\r\n(define-fun var40!1 () var467 (as @var467_0 var467))\r\n(define-fun var3915!1 () var3426 (as @var3426_0 var3426))\r\n(define-fun var700!1 () String \"\")\r\n(define-fun var700!2 () String \"[LogFactory from \")\r\n(define-fun var1544!1 () String \"[LogFactory from BOOTLOADER\")\r\n(define-fun var1358!1 () String \"[LogFactory from BOOTLOADER] \")\r\n(define-fun var36 () ClassObject (as @ClassObject_0 ClassObject))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35147776,
            "run_time": 0.09208869934082031,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3426:\n  ;;   var3426!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3426!val!0 () var3426)\n  ;; cardinality constraint:\n  (forall ((x var3426)) (= x var3426!val!0))\n  ;; -----------\n  (define-fun var3145_isDiagnosticsEnabled/-1004161365 () Bool\n    false)\n  (define-fun null-var3426 () var3426\n    var3426!val!0)\n  (define-fun var3915!1 () var3426\n    var3426!val!0)\n  (define-fun var1358!1 () String\n    \"[LogFactory from BOOTLOADER] \")\n  (define-fun var700!1 () String\n    \"\")\n  (define-fun var700!2 () String\n    \"[LogFactory from \")\n  (define-fun var1544!1 () String\n    \"[LogFactory from BOOTLOADER\")\n  (define-fun var3145_createFactoryStore/465410863 () var2165\n    var2165!val!0)\n  (define-fun var3145_initDiagnostics/351455467 () var2813\n    var2813!val!0)\n  (define-fun var3145!class () ClassObject\n    ClassObject!val!0)\n  (define-fun var36 () ClassObject\n    ClassObject!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var467-init () var467\n    var467!val!0)\n  (define-fun var40!1 () var467\n    var467!val!0)\n  (define-fun var1358 () String\n    (str.++ var700!1 \"[LogFactory from \" \"BOOTLOADER\"))\n  (define-fun var1259 () String\n    \"BOOTLOADER\")\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3915 () var3426\n    (var3145_getClassLoader/1794181642 var3145!class))\n  (define-fun var1544 () String\n    (str.++ var700!1 \"[LogFactory from \"))\n  (define-fun var700 () String\n    String-init)\n  (define-fun var2081 () var2165\n    var3145_createFactoryStore/465410863)\n  (define-fun var2764 () String\n    (str.++ var700!1 \"[LogFactory from \" \"BOOTLOADER\" \"] \"))\n  (define-fun var3620 () var2813\n    var3145_initDiagnostics/351455467)\n  (define-fun var1504 () String\n    (str.++ var700!1 \"[LogFactory from \" \"BOOTLOADER\" \"] \"))\n  (define-fun var407 () String\n    (str.++ var700!1 \"[LogFactory from \" \"BOOTLOADER\" \"] \"))\n  (define-fun var1745 () Bool\n    var3145_isDiagnosticsEnabled/-1004161365)\n  (define-fun var251 () var467\n    var40!1)\n  (define-fun var40 () var467\n    var467-init)\n  (define-fun var3100 () var2813\n    var3145_initDiagnostics/351455467)\n  (define-fun var2529 () var2165\n    var3145_createFactoryStore/465410863)\n  (define-fun cast-from-var3426-to-var3778 ((x!0 var3426)) var3778\n    var3778!val!0)\n  (define-fun var3145_getClassLoader/1794181642 ((x!0 ClassObject)) var3426\n    var3426!val!0)\n  (define-fun <init>/1544051104 ((x!0 var467) (x!1 var3778)) void\n    void!val!0)\n  (define-fun var3145_logClassLoaderEnvironment/-1123412948 ((x!0 ClassObject)) void\n    void!val!0)\n)\n(error \"line 75 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 172519424,
            "run_time": 1.4733004570007324,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1358!1 () String \"[LogFactory from BOOTLOADER] \")\r\n  (define-fun var1544!1 () String \"[LogFactory from BOOTLOADER\")\r\n  (define-fun var700!2 () String \"[LogFactory from \")\r\n  (define-fun var700!1 () String \"\")\r\n  (define-fun var3915!1 () var3426 var3426!92)\r\n  (define-fun null-var3426 () var3426 var3426!92)\r\n  (define-fun var3145_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n  (define-fun abbrev_114 ((x!0 Int)) String (ite (= x!0 0) \"[LogFactory from BOOTLOADER\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 9,
        "assertion_count": 14,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>(class \"Lorg/apache/commons/logging/LogFactory;\")",
            "$r1 = new java.lang.ref.WeakReference",
            "specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0)",
            "<org.apache.commons.logging.LogFactory: java.lang.ref.WeakReference thisClassLoaderRef> = $r1",
            "if r0 != null goto r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)",
            "r10 = \"BOOTLOADER\"",
            "goto [?= (branch)]",
            "goto [?= $r2 = new java.lang.StringBuilder]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[LogFactory from \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "<org.apache.commons.logging.LogFactory: java.lang.String diagnosticPrefix> = $r6",
            "$r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.io.PrintStream initDiagnostics()>()",
            "<org.apache.commons.logging.LogFactory: java.io.PrintStream DIAGNOSTICS_STREAM> = $r7",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)>(class \"Lorg/apache/commons/logging/LogFactory;\")",
            "$r8 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()>()",
            "<org.apache.commons.logging.LogFactory: java.util.Hashtable factories> = $r8",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__\u300aclinit\u300b__684435395\\590.smt2",
        "z3": {
            "memory": 31678464,
            "run_time": 0.10141634941101074,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var85:\r\n  ;;   var85!val!0 var85!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var85!val!0 () var85)\r\n  (declare-fun var85!val!1 () var85)\r\n  ;; cardinality constraint:\r\n  (forall ((x var85)) (or (= x var85!val!0) (= x var85!val!1)))\r\n  ;; -----------\r\n  ;; universe for var469:\r\n  ;;   var469!val!0 var469!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var469!val!0 () var469)\r\n  (declare-fun var469!val!1 () var469)\r\n  ;; cardinality constraint:\r\n  (forall ((x var469)) (or (= x var469!val!0) (= x var469!val!1)))\r\n  ;; -----------\r\n  (define-fun var103!1 () var85\r\n    var85!val!0)\r\n  (define-fun var1501 () var469\r\n    var469!val!0)\r\n  (define-fun null-var85 () var85\r\n    var85!val!1)\r\n  (define-fun var424 () String\r\n    (str.++ var3486!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\r\n  (define-fun var2127 () Bool\r\n    var1292_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var103 () var85\r\n    (var1292_getClassLoader/1794181642 var1292!class))\r\n  (define-fun var1021 () String\r\n    (str.++ var3486!1 \"[LogFactory from \" \"UNKNOWN\"))\r\n  (define-fun var3289 () String\r\n    (str.++ var3486!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\r\n  (define-fun null-var469 () var469\r\n    var469!val!1)\r\n  (define-fun var1064 () var3797\r\n    var3797-init)\r\n  (define-fun var792 () var3785\r\n    var1292_createFactoryStore/465410863)\r\n  (define-fun var1076 () var175\r\n    var1292_initDiagnostics/351455467)\r\n  (define-fun var2256 () String\r\n    (var1292_objectId/1952731062 (cast-from-var85-to-var397 var103!1)))\r\n  (define-fun var1112 () var3797\r\n    var1064!1)\r\n  (define-fun var3486 () String\r\n    String-init)\r\n  (define-fun var3937 () String\r\n    (str.++ var3486!1 \"[LogFactory from \"))\r\n  (define-fun var2256!1 () String\r\n    \"UNKNOWN\")\r\n  (define-fun var2931 () String\r\n    (str.++ var3486!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\r\n  (define-fun var1800 () var3785\r\n    var1292_createFactoryStore/465410863)\r\n  (define-fun var1748 () var175\r\n    var1292_initDiagnostics/351455467)\r\n  (define-fun var3937!1 () String\r\n    \"[LogFactory from UNKNOWN\")\r\n  (define-fun var1292_isDiagnosticsEnabled/-1004161365 () Bool\r\n    false)\r\n  (define-fun var3486!1 () String\r\n    \"\")\r\n  (define-fun var1021!1 () String\r\n    \"[LogFactory from UNKNOWN] \")\r\n  (define-fun var3486!2 () String\r\n    \"[LogFactory from \")\r\n  (define-fun var3797-init () var3797\r\n    var3797!val!0)\r\n  (define-fun var1292_initDiagnostics/351455467 () var175\r\n    var175!val!0)\r\n  (define-fun var2991 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var1292!class () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var1292_createFactoryStore/465410863 () var3785\r\n    var3785!val!0)\r\n  (define-fun var1064!1 () var3797\r\n    var3797!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1292_logClassLoaderEnvironment/-1123412948 ((x!0 ClassObject)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var85-to-var397 ((x!0 var85)) var397\r\n    var397!val!0)\r\n  (define-fun <init>/1544051104 ((x!0 var3797) (x!1 var397)) void\r\n    void!val!0)\r\n  (define-fun var1292_objectId/1952731062 ((x!0 var397)) String\r\n    \"\")\r\n  (define-fun var1292_getClassLoader/1794181642 ((x!0 ClassObject)) var85\r\n    var85!val!0)\r\n)\r\n(error \"line 79 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1675264,
            "run_time": 0.029778003692626953,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var85 is 2\r\n; rep: (as @var85_0 var85)\r\n; rep: (as @var85_1 var85)\r\n; cardinality of var1292 is 1\r\n; rep: (as @var1292_0 var1292)\r\n; cardinality of var3797 is 1\r\n; rep: (as @var3797_0 var3797)\r\n; cardinality of var397 is 1\r\n; rep: (as @var397_0 var397)\r\n; cardinality of var469 is 2\r\n; rep: (as @var469_0 var469)\r\n; rep: (as @var469_1 var469)\r\n; cardinality of var175 is 1\r\n; rep: (as @var175_0 var175)\r\n; cardinality of var3785 is 1\r\n; rep: (as @var3785_0 var3785)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1292!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var1292_getClassLoader/1794181642 ((BOUND_VARIABLE_636 ClassObject)) var85 (as @var85_0 var85))\r\n(define-fun var3797-init () var3797 (as @var3797_0 var3797))\r\n(define-fun <init>/1544051104 ((BOUND_VARIABLE_639 var3797) (BOUND_VARIABLE_640 var397)) void (as @void_0 void))\r\n(define-fun cast-from-var85-to-var397 ((BOUND_VARIABLE_643 var85)) var397 (as @var397_0 var397))\r\n(define-fun var1292_objectId/1952731062 ((BOUND_VARIABLE_646 var397)) String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun var1292_initDiagnostics/351455467 () var175 (as @var175_0 var175))\r\n(define-fun var1292_logClassLoaderEnvironment/-1123412948 ((BOUND_VARIABLE_649 ClassObject)) void (as @void_0 void))\r\n(define-fun var1292_createFactoryStore/465410863 () var3785 (as @var3785_0 var3785))\r\n(define-fun var1292_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n(define-fun null-var85 () var85 (as @var85_0 var85))\r\n(define-fun null-var469 () var469 (as @var469_0 var469))\r\n(define-fun var1064!1 () var3797 (as @var3797_0 var3797))\r\n(define-fun var103!1 () var85 (as @var85_1 var85))\r\n(define-fun var1501 () var469 (as @var469_1 var469))\r\n(define-fun var3486!1 () String \"\")\r\n(define-fun var3486!2 () String \"[LogFactory from \")\r\n(define-fun var3937!1 () String \"[LogFactory from UNKNOWN\")\r\n(define-fun var1021!1 () String \"[LogFactory from UNKNOWN] \")\r\n(define-fun var2991 () ClassObject (as @ClassObject_0 ClassObject))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35745792,
            "run_time": 0.09230160713195801,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var85:\n  ;;   var85!val!0 var85!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var85!val!0 () var85)\n  (declare-fun var85!val!1 () var85)\n  ;; cardinality constraint:\n  (forall ((x var85)) (or (= x var85!val!0) (= x var85!val!1)))\n  ;; -----------\n  ;; universe for var469:\n  ;;   var469!val!0 var469!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var469!val!0 () var469)\n  (declare-fun var469!val!1 () var469)\n  ;; cardinality constraint:\n  (forall ((x var469)) (or (= x var469!val!0) (= x var469!val!1)))\n  ;; -----------\n  (define-fun var1064 () var3797\n    var3797-init)\n  (define-fun var103!1 () var85\n    var85!val!0)\n  (define-fun var1501 () var469\n    var469!val!0)\n  (define-fun null-var85 () var85\n    var85!val!1)\n  (define-fun var424 () String\n    (str.++ var3486!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var1076 () var175\n    var1292_initDiagnostics/351455467)\n  (define-fun var1021 () String\n    (str.++ var3486!1 \"[LogFactory from \" \"UNKNOWN\"))\n  (define-fun var3289 () String\n    (str.++ var3486!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\n  (define-fun var1112 () var3797\n    var1064!1)\n  (define-fun var1800 () var3785\n    var1292_createFactoryStore/465410863)\n  (define-fun null-var469 () var469\n    var469!val!1)\n  (define-fun var2256 () String\n    (var1292_objectId/1952731062 (cast-from-var85-to-var397 var103!1)))\n  (define-fun var3486 () String\n    String-init)\n  (define-fun var3937 () String\n    (str.++ var3486!1 \"[LogFactory from \"))\n  (define-fun var2256!1 () String\n    \"UNKNOWN\")\n  (define-fun var2931 () String\n    (str.++ var3486!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\n  (define-fun var1748 () var175\n    var1292_initDiagnostics/351455467)\n  (define-fun var2127 () Bool\n    var1292_isDiagnosticsEnabled/-1004161365)\n  (define-fun var103 () var85\n    (var1292_getClassLoader/1794181642 var1292!class))\n  (define-fun var792 () var3785\n    var1292_createFactoryStore/465410863)\n  (define-fun var3937!1 () String\n    \"[LogFactory from UNKNOWN\")\n  (define-fun var1292_isDiagnosticsEnabled/-1004161365 () Bool\n    false)\n  (define-fun var3486!1 () String\n    \"\")\n  (define-fun var1021!1 () String\n    \"[LogFactory from UNKNOWN] \")\n  (define-fun var3486!2 () String\n    \"[LogFactory from \")\n  (define-fun var3797-init () var3797\n    var3797!val!0)\n  (define-fun var1292_initDiagnostics/351455467 () var175\n    var175!val!0)\n  (define-fun var2991 () ClassObject\n    ClassObject!val!0)\n  (define-fun var1292!class () ClassObject\n    ClassObject!val!0)\n  (define-fun var1292_createFactoryStore/465410863 () var3785\n    var3785!val!0)\n  (define-fun var1064!1 () var3797\n    var3797!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1292_logClassLoaderEnvironment/-1123412948 ((x!0 ClassObject)) void\n    void!val!0)\n  (define-fun cast-from-var85-to-var397 ((x!0 var85)) var397\n    var397!val!0)\n  (define-fun <init>/1544051104 ((x!0 var3797) (x!1 var397)) void\n    void!val!0)\n  (define-fun var1292_objectId/1952731062 ((x!0 var397)) String\n    \"\")\n  (define-fun var1292_getClassLoader/1794181642 ((x!0 ClassObject)) var85\n    var85!val!0)\n)\n(error \"line 79 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182132736,
            "run_time": 1.4720592498779297,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var1021!1 () String \"[LogFactory from UNKNOWN] \")\r\n  (define-fun var3937!1 () String \"[LogFactory from UNKNOWN\")\r\n  (define-fun var3486!2 () String \"[LogFactory from \")\r\n  (define-fun var3486!1 () String \"\")\r\n  (define-fun var1501 () var469 var469!92)\r\n  (define-fun var103!1 () var85 var85!90)\r\n  (define-fun null-var469 () var469 var469!88)\r\n  (define-fun null-var85 () var85 var85!86)\r\n  (define-fun var1292_isDiagnosticsEnabled/-1004161365 () Bool false)\r\n  (define-fun abbrev_116 ((x!0 Int)) String (ite (= x!0 0) \"[LogFactory from UNKNOWN\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 10,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>(class \"Lorg/apache/commons/logging/LogFactory;\")",
            "$r1 = new java.lang.ref.WeakReference",
            "specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0)",
            "<org.apache.commons.logging.LogFactory: java.lang.ref.WeakReference thisClassLoaderRef> = $r1",
            "if r0 != null goto r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)",
            "r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)",
            "$r9 := @caughtexception",
            "r10 = \"UNKNOWN\"",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[LogFactory from \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "<org.apache.commons.logging.LogFactory: java.lang.String diagnosticPrefix> = $r6",
            "$r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.io.PrintStream initDiagnostics()>()",
            "<org.apache.commons.logging.LogFactory: java.io.PrintStream DIAGNOSTICS_STREAM> = $r7",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)>(class \"Lorg/apache/commons/logging/LogFactory;\")",
            "$r8 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()>()",
            "<org.apache.commons.logging.LogFactory: java.util.Hashtable factories> = $r8",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__\u300aclinit\u300b__684435395\\592.smt2",
        "z3": {
            "memory": 31793152,
            "run_time": 0.07346296310424805,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  (define-fun var2004_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var2664!1 () String\r\n    \"[LogFactory from BOOTLOADER\")\r\n  (define-fun null-var3577 () var3577\r\n    var3577!val!0)\r\n  (define-fun var1632!1 () var3577\r\n    var3577!val!0)\r\n  (define-fun var3945!2 () String\r\n    \"[LogFactory from \")\r\n  (define-fun var2613!1 () String\r\n    \"[LogFactory from BOOTLOADER] \")\r\n  (define-fun var3945!1 () String\r\n    \"\")\r\n  (define-fun var2004!class () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var3016 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var2004_createFactoryStore/465410863 () var2745\r\n    var2745!val!0)\r\n  (define-fun var2004_initDiagnostics/351455467 () var3066\r\n    var3066!val!0)\r\n  (define-fun var3870 () String\r\n    \"\")\r\n  (define-fun var1278!1 () var1270\r\n    var1270!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var1270-init () var1270\r\n    var1270!val!0)\r\n  (define-fun var1632 () var3577\r\n    (var2004_getClassLoader/1794181642 var2004!class))\r\n  (define-fun var2799 () Bool\r\n    var2004_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var1650 () var3066\r\n    var2004_initDiagnostics/351455467)\r\n  (define-fun var3219 () var2745\r\n    var2004_createFactoryStore/465410863)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var3792 () String\r\n    (str.++ var3945!1 \"[LogFactory from \" \"BOOTLOADER\" \"] \"))\r\n  (define-fun var2613 () String\r\n    (str.++ var3945!1 \"[LogFactory from \" \"BOOTLOADER\"))\r\n  (define-fun var2017 () var2745\r\n    var2004_createFactoryStore/465410863)\r\n  (define-fun var2664 () String\r\n    (str.++ var3945!1 \"[LogFactory from \"))\r\n  (define-fun var2073 () var3066\r\n    var2004_initDiagnostics/351455467)\r\n  (define-fun var1278 () var1270\r\n    var1270-init)\r\n  (define-fun var1046 () String\r\n    \"BOOTLOADER\")\r\n  (define-fun var3606 () String\r\n    (str.++ var3945!1 \"[LogFactory from \" \"BOOTLOADER\" \"] \"))\r\n  (define-fun var2461 () String\r\n    (str.++ var3945!1 \"[LogFactory from \" \"BOOTLOADER\" \"] \"))\r\n  (define-fun var3945 () String\r\n    String-init)\r\n  (define-fun var3797 () var1270\r\n    var1278!1)\r\n  (define-fun var2004_getClassLoader/1794181642 ((x!0 ClassObject)) var3577\r\n    var3577!val!0)\r\n  (define-fun var2004_logClassLoaderEnvironment/-1123412948 ((x!0 ClassObject)) void\r\n    void!val!0)\r\n  (define-fun <init>/1544051104 ((x!0 var1270) (x!1 var94)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var3577-to-var94 ((x!0 var3577)) var94\r\n    var94!val!0)\r\n  (define-fun var2004_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n)\r\n(error \"line 80 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 9707520,
            "run_time": 0.03159499168395996,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3577 is 1\r\n; rep: (as @var3577_0 var3577)\r\n; cardinality of var2004 is 1\r\n; rep: (as @var2004_0 var2004)\r\n; cardinality of var1270 is 1\r\n; rep: (as @var1270_0 var1270)\r\n; cardinality of var94 is 1\r\n; rep: (as @var94_0 var94)\r\n; cardinality of var3066 is 1\r\n; rep: (as @var3066_0 var3066)\r\n; cardinality of var2745 is 1\r\n; rep: (as @var2745_0 var2745)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2004!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var2004_getClassLoader/1794181642 ((BOUND_VARIABLE_632 ClassObject)) var3577 (as @var3577_0 var3577))\r\n(define-fun var1270-init () var1270 (as @var1270_0 var1270))\r\n(define-fun <init>/1544051104 ((BOUND_VARIABLE_635 var1270) (BOUND_VARIABLE_636 var94)) void (as @void_0 void))\r\n(define-fun cast-from-var3577-to-var94 ((BOUND_VARIABLE_639 var3577)) var94 (as @var94_0 var94))\r\n(define-fun String-init () String \"\")\r\n(define-fun var2004_initDiagnostics/351455467 () var3066 (as @var3066_0 var3066))\r\n(define-fun var2004_logClassLoaderEnvironment/-1123412948 ((BOUND_VARIABLE_642 ClassObject)) void (as @void_0 void))\r\n(define-fun var2004_createFactoryStore/465410863 () var2745 (as @var2745_0 var2745))\r\n(define-fun var2004_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun var2004_logDiagnostic/1268238408 ((BOUND_VARIABLE_645 String)) void (as @void_0 void))\r\n(define-fun null-var3577 () var3577 (as @var3577_0 var3577))\r\n(define-fun var1278!1 () var1270 (as @var1270_0 var1270))\r\n(define-fun var1632!1 () var3577 (as @var3577_0 var3577))\r\n(define-fun var3945!1 () String \"\")\r\n(define-fun var3945!2 () String \"[LogFactory from \")\r\n(define-fun var2664!1 () String \"[LogFactory from BOOTLOADER\")\r\n(define-fun var2613!1 () String \"[LogFactory from BOOTLOADER] \")\r\n(define-fun var3016 () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var3870 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35291136,
            "run_time": 0.15314912796020508,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3577:\n  ;;   var3577!val!0 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3577!val!0 () var3577)\n  ;; cardinality constraint:\n  (forall ((x var3577)) (= x var3577!val!0))\n  ;; -----------\n  (define-fun var2004_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var2664!1 () String\n    \"[LogFactory from BOOTLOADER\")\n  (define-fun null-var3577 () var3577\n    var3577!val!0)\n  (define-fun var1632!1 () var3577\n    var3577!val!0)\n  (define-fun var3945!2 () String\n    \"[LogFactory from \")\n  (define-fun var2613!1 () String\n    \"[LogFactory from BOOTLOADER] \")\n  (define-fun var3945!1 () String\n    \"\")\n  (define-fun var2004!class () ClassObject\n    ClassObject!val!0)\n  (define-fun var3016 () ClassObject\n    ClassObject!val!0)\n  (define-fun var2004_createFactoryStore/465410863 () var2745\n    var2745!val!0)\n  (define-fun var2004_initDiagnostics/351455467 () var3066\n    var3066!val!0)\n  (define-fun var3870 () String\n    \"\")\n  (define-fun var1278!1 () var1270\n    var1270!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var1270-init () var1270\n    var1270!val!0)\n  (define-fun var2073 () var3066\n    var2004_initDiagnostics/351455467)\n  (define-fun var1278 () var1270\n    var1270-init)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var3792 () String\n    (str.++ var3945!1 \"[LogFactory from \" \"BOOTLOADER\" \"] \"))\n  (define-fun var2613 () String\n    (str.++ var3945!1 \"[LogFactory from \" \"BOOTLOADER\"))\n  (define-fun var2664 () String\n    (str.++ var3945!1 \"[LogFactory from \"))\n  (define-fun var1046 () String\n    \"BOOTLOADER\")\n  (define-fun var3606 () String\n    (str.++ var3945!1 \"[LogFactory from \" \"BOOTLOADER\" \"] \"))\n  (define-fun var3797 () var1270\n    var1278!1)\n  (define-fun var2461 () String\n    (str.++ var3945!1 \"[LogFactory from \" \"BOOTLOADER\" \"] \"))\n  (define-fun var3945 () String\n    String-init)\n  (define-fun var1632 () var3577\n    (var2004_getClassLoader/1794181642 var2004!class))\n  (define-fun var2799 () Bool\n    var2004_isDiagnosticsEnabled/-1004161365)\n  (define-fun var1650 () var3066\n    var2004_initDiagnostics/351455467)\n  (define-fun var3219 () var2745\n    var2004_createFactoryStore/465410863)\n  (define-fun var2017 () var2745\n    var2004_createFactoryStore/465410863)\n  (define-fun var2004_getClassLoader/1794181642 ((x!0 ClassObject)) var3577\n    var3577!val!0)\n  (define-fun var2004_logClassLoaderEnvironment/-1123412948 ((x!0 ClassObject)) void\n    void!val!0)\n  (define-fun <init>/1544051104 ((x!0 var1270) (x!1 var94)) void\n    void!val!0)\n  (define-fun cast-from-var3577-to-var94 ((x!0 var3577)) var94\n    var94!val!0)\n  (define-fun var2004_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n)\n(error \"line 80 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 184934400,
            "run_time": 1.426304578781128,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2613!1 () String \"[LogFactory from BOOTLOADER] \")\r\n  (define-fun var2664!1 () String \"[LogFactory from BOOTLOADER\")\r\n  (define-fun var3945!2 () String \"[LogFactory from \")\r\n  (define-fun var3945!1 () String \"\")\r\n  (define-fun var1632!1 () var3577 var3577!92)\r\n  (define-fun null-var3577 () var3577 var3577!92)\r\n  (define-fun var2004_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n  (define-fun abbrev_115 ((x!0 Int)) String (ite (= x!0 0) \"[LogFactory from BOOTLOADER\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 10,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>(class \"Lorg/apache/commons/logging/LogFactory;\")",
            "$r1 = new java.lang.ref.WeakReference",
            "specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0)",
            "<org.apache.commons.logging.LogFactory: java.lang.ref.WeakReference thisClassLoaderRef> = $r1",
            "if r0 != null goto r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)",
            "r10 = \"BOOTLOADER\"",
            "goto [?= (branch)]",
            "goto [?= $r2 = new java.lang.StringBuilder]",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[LogFactory from \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "<org.apache.commons.logging.LogFactory: java.lang.String diagnosticPrefix> = $r6",
            "$r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.io.PrintStream initDiagnostics()>()",
            "<org.apache.commons.logging.LogFactory: java.io.PrintStream DIAGNOSTICS_STREAM> = $r7",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)>(class \"Lorg/apache/commons/logging/LogFactory;\")",
            "$r8 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()>()",
            "<org.apache.commons.logging.LogFactory: java.util.Hashtable factories> = $r8",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>(\"BOOTSTRAP COMPLETED\")",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__\u300aclinit\u300b__684435395\\594.smt2",
        "z3": {
            "memory": 31768576,
            "run_time": 0.1053016185760498,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var2961:\r\n  ;;   var2961!val!0 var2961!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2961!val!0 () var2961)\r\n  (declare-fun var2961!val!1 () var2961)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2961)) (or (= x var2961!val!0) (= x var2961!val!1)))\r\n  ;; -----------\r\n  ;; universe for var2643:\r\n  ;;   var2643!val!0 var2643!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2643!val!0 () var2643)\r\n  (declare-fun var2643!val!1 () var2643)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2643)) (or (= x var2643!val!0) (= x var2643!val!1)))\r\n  ;; -----------\r\n  (define-fun null-var2961 () var2961\r\n    var2961!val!1)\r\n  (define-fun var1890 () String\r\n    (str.++ var1439!1 \"[LogFactory from \"))\r\n  (define-fun var3943 () String\r\n    (str.++ var1439!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\r\n  (define-fun var1383!1 () String\r\n    \"UNKNOWN\")\r\n  (define-fun var820 () var1503\r\n    var2228_initDiagnostics/351455467)\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var2029 () Bool\r\n    var2228_isDiagnosticsEnabled/-1004161365)\r\n  (define-fun var436 () var2643\r\n    (var2228_getClassLoader/1794181642 var2228!class))\r\n  (define-fun var1287 () String\r\n    (str.++ var1439!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\r\n  (define-fun var3914 () String\r\n    (str.++ var1439!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\r\n  (define-fun var1421 () var1081\r\n    var2228_createFactoryStore/465410863)\r\n  (define-fun var2412 () var1503\r\n    var2228_initDiagnostics/351455467)\r\n  (define-fun var436!1 () var2643\r\n    var2643!val!0)\r\n  (define-fun null-var2643 () var2643\r\n    var2643!val!1)\r\n  (define-fun var151 () var2719\r\n    var37!1)\r\n  (define-fun var1439 () String\r\n    String-init)\r\n  (define-fun var37 () var2719\r\n    var2719-init)\r\n  (define-fun var3666 () String\r\n    (str.++ var1439!1 \"[LogFactory from \" \"UNKNOWN\"))\r\n  (define-fun var484 () var1081\r\n    var2228_createFactoryStore/465410863)\r\n  (define-fun var3421 () var2961\r\n    var2961!val!0)\r\n  (define-fun var1383 () String\r\n    (var2228_objectId/1952731062 (cast-from-var2643-to-var2520 var436!1)))\r\n  (define-fun var1439!2 () String\r\n    \"[LogFactory from \")\r\n  (define-fun var1439!1 () String\r\n    \"\")\r\n  (define-fun var1890!1 () String\r\n    \"[LogFactory from UNKNOWN\")\r\n  (define-fun var2228_isDiagnosticsEnabled/-1004161365 () Bool\r\n    true)\r\n  (define-fun var3666!1 () String\r\n    \"[LogFactory from UNKNOWN] \")\r\n  (define-fun var2719-init () var2719\r\n    var2719!val!0)\r\n  (define-fun var829 () String\r\n    \"\")\r\n  (define-fun var2228!class () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var2228_initDiagnostics/351455467 () var1503\r\n    var1503!val!0)\r\n  (define-fun var37!1 () var2719\r\n    var2719!val!0)\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun var3793 () ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var2228_createFactoryStore/465410863 () var1081\r\n    var1081!val!0)\r\n  (define-fun var2228_logClassLoaderEnvironment/-1123412948 ((x!0 ClassObject)) void\r\n    void!val!0)\r\n  (define-fun cast-from-var2643-to-var2520 ((x!0 var2643)) var2520\r\n    var2520!val!0)\r\n  (define-fun <init>/1544051104 ((x!0 var2719) (x!1 var2520)) void\r\n    void!val!0)\r\n  (define-fun var2228_objectId/1952731062 ((x!0 var2520)) String\r\n    \"\")\r\n  (define-fun var2228_logDiagnostic/1268238408 ((x!0 String)) void\r\n    void!val!0)\r\n  (define-fun var2228_getClassLoader/1794181642 ((x!0 ClassObject)) var2643\r\n    var2643!val!0)\r\n)\r\n(error \"line 84 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1695744,
            "run_time": 0.04491448402404785,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2643 is 2\r\n; rep: (as @var2643_0 var2643)\r\n; rep: (as @var2643_1 var2643)\r\n; cardinality of var2228 is 1\r\n; rep: (as @var2228_0 var2228)\r\n; cardinality of var2719 is 1\r\n; rep: (as @var2719_0 var2719)\r\n; cardinality of var2520 is 1\r\n; rep: (as @var2520_0 var2520)\r\n; cardinality of var2961 is 2\r\n; rep: (as @var2961_0 var2961)\r\n; rep: (as @var2961_1 var2961)\r\n; cardinality of var1503 is 1\r\n; rep: (as @var1503_0 var1503)\r\n; cardinality of var1081 is 1\r\n; rep: (as @var1081_0 var1081)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2228!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var2228_getClassLoader/1794181642 ((BOUND_VARIABLE_652 ClassObject)) var2643 (as @var2643_0 var2643))\r\n(define-fun var2719-init () var2719 (as @var2719_0 var2719))\r\n(define-fun <init>/1544051104 ((BOUND_VARIABLE_655 var2719) (BOUND_VARIABLE_656 var2520)) void (as @void_0 void))\r\n(define-fun cast-from-var2643-to-var2520 ((BOUND_VARIABLE_659 var2643)) var2520 (as @var2520_0 var2520))\r\n(define-fun var2228_objectId/1952731062 ((BOUND_VARIABLE_662 var2520)) String \"\")\r\n(define-fun String-init () String \"\")\r\n(define-fun var2228_initDiagnostics/351455467 () var1503 (as @var1503_0 var1503))\r\n(define-fun var2228_logClassLoaderEnvironment/-1123412948 ((BOUND_VARIABLE_665 ClassObject)) void (as @void_0 void))\r\n(define-fun var2228_createFactoryStore/465410863 () var1081 (as @var1081_0 var1081))\r\n(define-fun var2228_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n(define-fun var2228_logDiagnostic/1268238408 ((BOUND_VARIABLE_668 String)) void (as @void_0 void))\r\n(define-fun null-var2643 () var2643 (as @var2643_0 var2643))\r\n(define-fun null-var2961 () var2961 (as @var2961_0 var2961))\r\n(define-fun var37!1 () var2719 (as @var2719_0 var2719))\r\n(define-fun var436!1 () var2643 (as @var2643_1 var2643))\r\n(define-fun var3421 () var2961 (as @var2961_1 var2961))\r\n(define-fun var1439!1 () String \"\")\r\n(define-fun var1439!2 () String \"[LogFactory from \")\r\n(define-fun var1890!1 () String \"[LogFactory from UNKNOWN\")\r\n(define-fun var3666!1 () String \"[LogFactory from UNKNOWN] \")\r\n(define-fun var3793 () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun var829 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34869248,
            "run_time": 0.07775282859802246,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var2961:\n  ;;   var2961!val!0 var2961!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2961!val!0 () var2961)\n  (declare-fun var2961!val!1 () var2961)\n  ;; cardinality constraint:\n  (forall ((x var2961)) (or (= x var2961!val!0) (= x var2961!val!1)))\n  ;; -----------\n  ;; universe for var2643:\n  ;;   var2643!val!0 var2643!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var2643!val!0 () var2643)\n  (declare-fun var2643!val!1 () var2643)\n  ;; cardinality constraint:\n  (forall ((x var2643)) (or (= x var2643!val!0) (= x var2643!val!1)))\n  ;; -----------\n  (define-fun null-var2961 () var2961\n    var2961!val!1)\n  (define-fun var3943 () String\n    (str.++ var1439!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\n  (define-fun var436 () var2643\n    (var2228_getClassLoader/1794181642 var2228!class))\n  (define-fun var1421 () var1081\n    var2228_createFactoryStore/465410863)\n  (define-fun <init>/1968657023 () String\n    \"\")\n  (define-fun var2412 () var1503\n    var2228_initDiagnostics/351455467)\n  (define-fun var1287 () String\n    (str.++ var1439!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\n  (define-fun var151 () var2719\n    var37!1)\n  (define-fun var3914 () String\n    (str.++ var1439!1 \"[LogFactory from \" \"UNKNOWN\" \"] \"))\n  (define-fun var37 () var2719\n    var2719-init)\n  (define-fun var484 () var1081\n    var2228_createFactoryStore/465410863)\n  (define-fun var436!1 () var2643\n    var2643!val!0)\n  (define-fun null-var2643 () var2643\n    var2643!val!1)\n  (define-fun var1439 () String\n    String-init)\n  (define-fun var3666 () String\n    (str.++ var1439!1 \"[LogFactory from \" \"UNKNOWN\"))\n  (define-fun var820 () var1503\n    var2228_initDiagnostics/351455467)\n  (define-fun var1383 () String\n    (var2228_objectId/1952731062 (cast-from-var2643-to-var2520 var436!1)))\n  (define-fun var1383!1 () String\n    \"UNKNOWN\")\n  (define-fun var1890 () String\n    (str.++ var1439!1 \"[LogFactory from \"))\n  (define-fun var3421 () var2961\n    var2961!val!0)\n  (define-fun var2029 () Bool\n    var2228_isDiagnosticsEnabled/-1004161365)\n  (define-fun var1439!2 () String\n    \"[LogFactory from \")\n  (define-fun var1439!1 () String\n    \"\")\n  (define-fun var1890!1 () String\n    \"[LogFactory from UNKNOWN\")\n  (define-fun var2228_isDiagnosticsEnabled/-1004161365 () Bool\n    true)\n  (define-fun var3666!1 () String\n    \"[LogFactory from UNKNOWN] \")\n  (define-fun var2719-init () var2719\n    var2719!val!0)\n  (define-fun var829 () String\n    \"\")\n  (define-fun var2228!class () ClassObject\n    ClassObject!val!0)\n  (define-fun var2228_initDiagnostics/351455467 () var1503\n    var1503!val!0)\n  (define-fun var37!1 () var2719\n    var2719!val!0)\n  (define-fun String-init () String\n    \"\")\n  (define-fun var3793 () ClassObject\n    ClassObject!val!0)\n  (define-fun var2228_createFactoryStore/465410863 () var1081\n    var1081!val!0)\n  (define-fun var2228_logClassLoaderEnvironment/-1123412948 ((x!0 ClassObject)) void\n    void!val!0)\n  (define-fun cast-from-var2643-to-var2520 ((x!0 var2643)) var2520\n    var2520!val!0)\n  (define-fun <init>/1544051104 ((x!0 var2719) (x!1 var2520)) void\n    void!val!0)\n  (define-fun var2228_objectId/1952731062 ((x!0 var2520)) String\n    \"\")\n  (define-fun var2228_logDiagnostic/1268238408 ((x!0 String)) void\n    void!val!0)\n  (define-fun var2228_getClassLoader/1794181642 ((x!0 ClassObject)) var2643\n    var2643!val!0)\n)\n(error \"line 84 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 180858880,
            "run_time": 1.3473572731018066,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var3666!1 () String \"[LogFactory from UNKNOWN] \")\r\n  (define-fun var1890!1 () String \"[LogFactory from UNKNOWN\")\r\n  (define-fun var1439!2 () String \"[LogFactory from \")\r\n  (define-fun var1439!1 () String \"\")\r\n  (define-fun var3421 () var2961 var2961!92)\r\n  (define-fun var436!1 () var2643 var2643!90)\r\n  (define-fun null-var2961 () var2961 var2961!88)\r\n  (define-fun null-var2643 () var2643 var2643!86)\r\n  (define-fun var2228_isDiagnosticsEnabled/-1004161365 () Bool true)\r\n  (define-fun abbrev_117 ((x!0 Int)) String (ite (= x!0 0) \"[LogFactory from UNKNOWN\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 11,
        "assertion_count": 16,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.ClassLoader getClassLoader(java.lang.Class)>(class \"Lorg/apache/commons/logging/LogFactory;\")",
            "$r1 = new java.lang.ref.WeakReference",
            "specialinvoke $r1.<java.lang.ref.WeakReference: void <init>(java.lang.Object)>(r0)",
            "<org.apache.commons.logging.LogFactory: java.lang.ref.WeakReference thisClassLoaderRef> = $r1",
            "if r0 != null goto r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)",
            "r10 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r0)",
            "$r9 := @caughtexception",
            "r10 = \"UNKNOWN\"",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r3 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[LogFactory from \")",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r10)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] \")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.String toString()>()",
            "<org.apache.commons.logging.LogFactory: java.lang.String diagnosticPrefix> = $r6",
            "$r7 = staticinvoke <org.apache.commons.logging.LogFactory: java.io.PrintStream initDiagnostics()>()",
            "<org.apache.commons.logging.LogFactory: java.io.PrintStream DIAGNOSTICS_STREAM> = $r7",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logClassLoaderEnvironment(java.lang.Class)>(class \"Lorg/apache/commons/logging/LogFactory;\")",
            "$r8 = staticinvoke <org.apache.commons.logging.LogFactory: java.util.Hashtable createFactoryStore()>()",
            "<org.apache.commons.logging.LogFactory: java.util.Hashtable factories> = $r8",
            "$z0 = staticinvoke <org.apache.commons.logging.LogFactory: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto return",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>(\"BOOTSTRAP COMPLETED\")",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__informUponSimilarName__738058869\\477.smt2",
        "z3": {
            "memory": 32006144,
            "run_time": 0.19518494606018066,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var1468:\r\n  ;;   var1468!val!0 var1468!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var1468!val!0 () var1468)\r\n  (declare-fun var1468!val!1 () var1468)\r\n  ;; cardinality constraint:\r\n  (forall ((x var1468)) (or (= x var1468!val!0) (= x var1468!val!1)))\r\n  ;; -----------\r\n  (define-fun var1925 () Int\r\n    var1468-PKG_LEN)\r\n  (define-fun null-var1468 () var1468\r\n    var1468!val!1)\r\n  (define-fun var442 () String\r\n    \"B\")\r\n  (define-fun var1468-PKG_LEN () Int\r\n    (- 3))\r\n  (define-fun var2103 () String\r\n    \"A\")\r\n  (define-fun var3514 () Bool\r\n    (= var2584 var442))\r\n  (define-fun var2204 () Int\r\n    (+ var1468-PKG_LEN 5))\r\n  (define-fun var1117 () Bool\r\n    (regionMatches/-1964120983\r\n  var2584\r\n  (ite (= 1 1) true false)\r\n  0\r\n  var442\r\n  0\r\n  (+ var1468-PKG_LEN 5)))\r\n  (define-fun null-String () String\r\n    \"\")\r\n  (define-fun var2584 () String\r\n    \"A\")\r\n  (define-fun var2046 () var1468\r\n    var1468!val!0)\r\n  (define-fun var2103!3 () String\r\n    \"A Did you mean 'B'?\")\r\n  (define-fun var2103!1 () String\r\n    \"A Did you mean '\")\r\n  (define-fun var2103!2 () String\r\n    \"A Did you mean 'B\")\r\n  (define-fun regionMatches/-1964120983 ((x!0 String)\r\n   (x!1 Bool)\r\n   (x!2 Int)\r\n   (x!3 String)\r\n   (x!4 Int)\r\n   (x!5 Int)) Bool\r\n    true)\r\n)\r\n(error \"line 48 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 10973184,
            "run_time": 0.12470197677612305,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1468 is 2\r\n; rep: (as @var1468_0 var1468)\r\n; rep: (as @var1468_1 var1468)\r\n; cardinality of var1210 is 1\r\n; rep: (as @var1210_0 var1210)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun regionMatches/-1964120983 ((_arg_1 String) (_arg_2 Bool) (_arg_3 Int) (_arg_4 String) (_arg_5 Int) (_arg_6 Int)) Bool true)\r\n(define-fun null-var1468 () var1468 (as @var1468_0 var1468))\r\n(define-fun null-String () String \"B\")\r\n(define-fun var1468-PKG_LEN () Int 0)\r\n(define-fun var2046 () var1468 (as @var1468_1 var1468))\r\n(define-fun var2103 () String \"\")\r\n(define-fun var2584 () String \"\")\r\n(define-fun var442 () String \"A\")\r\n(define-fun var2103!1 () String \" Did you mean '\")\r\n(define-fun var2103!2 () String \" Did you mean 'A\")\r\n(define-fun var2103!3 () String \" Did you mean 'A'?\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 59973632,
            "run_time": 21.61582350730896,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var1468:\n  ;;   var1468!val!0 var1468!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var1468!val!0 () var1468)\n  (declare-fun var1468!val!1 () var1468)\n  ;; cardinality constraint:\n  (forall ((x var1468)) (or (= x var1468!val!0) (= x var1468!val!1)))\n  ;; -----------\n  (define-fun var2103!2 () String\n    \"\\u{0} Did you mean '\\u{0}\\u{0}\")\n  (define-fun var2103!1 () String\n    \"\\u{0} Did you mean '\")\n  (define-fun var2103!3 () String\n    \"\\u{0} Did you mean '\\u{0}\\u{0}'?\")\n  (define-fun null-var1468 () var1468\n    var1468!val!1)\n  (define-fun var1468-PKG_LEN () Int\n    0)\n  (define-fun var3514 () Bool\n    (= var2584 var442))\n  (define-fun var2103 () String\n    \"\\u{0}\")\n  (define-fun var1925 () Int\n    var1468-PKG_LEN)\n  (define-fun var442 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun var1117 () Bool\n    (regionMatches/-1964120983\n  var2584\n  (ite (= 1 1) true false)\n  0\n  var442\n  0\n  (+ var1468-PKG_LEN 5)))\n  (define-fun var2046 () var1468\n    var1468!val!0)\n  (define-fun var2204 () Int\n    (+ var1468-PKG_LEN 5))\n  (define-fun var2584 () String\n    \"\\u{0}\\u{0}\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun regionMatches/-1964120983 ((x!0 String)\n   (x!1 Bool)\n   (x!2 Int)\n   (x!3 String)\n   (x!4 Int)\n   (x!5 Int)) Bool\n    true)\n)\n(error \"line 48 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164605952,
            "run_time": 0.7414531707763672,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.lang.Exception: Cannot handle negative string equation var442 + -1*var2584 != 0\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__informUponSimilarName__738058869\\477.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\n517ms\r\n"
        },
        "undefined_function_count": 1,
        "assertion_count": 15,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1,
            "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3
        },
        "jimple_statements": [
            "r3 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r2 := @parameter0: java.lang.StringBuilder",
            "r0 := @parameter1: java.lang.String",
            "r1 := @parameter2: java.lang.String",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1)",
            "if $z0 == 0 goto $i0 = <org.apache.commons.logging.impl.LogFactoryImpl: int PKG_LEN>",
            "$i0 = <org.apache.commons.logging.impl.LogFactoryImpl: int PKG_LEN>",
            "$i1 = $i0 + 5",
            "$z1 = virtualinvoke r0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, r1, 0, $i1)",
            "if $z1 == 0 goto return",
            "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" Did you mean \\'\")",
            "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r1)",
            "virtualinvoke r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\'?\")",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__initDiagnostics__-1205227710\\481.smt2",
        "z3": {
            "memory": 31985664,
            "run_time": 0.05988740921020508,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var909:\r\n  ;;   var909!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var909!val!0 () var909)\r\n  ;; cardinality constraint:\r\n  (forall ((x var909)) (= x var909!val!0))\r\n  ;; -----------\r\n  ;; universe for var2828:\r\n  ;;   var2828!val!2 var2828!val!0 var2828!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var2828!val!2 () var2828)\r\n  (declare-fun var2828!val!0 () var2828)\r\n  (declare-fun var2828!val!1 () var2828)\r\n  ;; cardinality constraint:\r\n  (forall ((x var2828))\r\n          (or (= x var2828!val!2) (= x var2828!val!0) (= x var2828!val!1)))\r\n  ;; -----------\r\n  ;; universe for var134:\r\n  ;;   var134!val!1 var134!val!0 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var134!val!1 () var134)\r\n  (declare-fun var134!val!0 () var134)\r\n  ;; cardinality constraint:\r\n  (forall ((x var134)) (or (= x var134!val!1) (= x var134!val!0)))\r\n  ;; -----------\r\n  (define-fun var1189 () var3657\r\n    (var2828_getClassLoader/1612937626\r\n  (getClass/1258963082 (cast-from-var2828-to-var909 var2284))))\r\n  (define-fun var1243 () String\r\n    (str.++ var1337!1 \"[LogFactoryImpl@\"))\r\n  (define-fun null-var2828 () var2828\r\n    var2828!val!1)\r\n  (define-fun var3555 () String\r\n    (str.++ var1337!1\r\n        \"[LogFactoryImpl@\"\r\n        (str.from_int (var2788_identityHashCode/1096208673\r\n                        (cast-from-var2828-to-var909 var2284)))\r\n        \" from \"\r\n        \"UNKNOWN\"\r\n        \"] \"))\r\n  (define-fun <init>/1968657023 () String\r\n    \"\")\r\n  (define-fun var1243!1 () String\r\n    \"[LogFactoryImpl@\")\r\n  (define-fun var1337 () String\r\n    String-init)\r\n  (define-fun var1588 () Int\r\n    (var2788_identityHashCode/1096208673 (cast-from-var2828-to-var909 var2284)))\r\n  (define-fun var3517 () String\r\n    (str.++ var1337!1\r\n        \"[LogFactoryImpl@\"\r\n        (str.from_int (var2788_identityHashCode/1096208673\r\n                        (cast-from-var2828-to-var909 var2284)))\r\n        \" from \"\r\n        \"UNKNOWN\"\r\n        \"] \"))\r\n  (define-fun var2954 () String\r\n    (str.++ var1337!1\r\n        \"[LogFactoryImpl@\"\r\n        (str.from_int (var2788_identityHashCode/1096208673\r\n                        (cast-from-var2828-to-var909 var2284)))\r\n        \" from \"))\r\n  (define-fun var3753 () var134\r\n    var134!val!0)\r\n  (define-fun var3914 () ClassObject\r\n    (getClass/1258963082 (cast-from-var2828-to-var909 var2284)))\r\n  (define-fun null-var134 () var134\r\n    var134!val!1)\r\n  (define-fun var2379 () String\r\n    (str.++ var1337!1\r\n        \"[LogFactoryImpl@\"\r\n        (str.from_int (var2788_identityHashCode/1096208673\r\n                        (cast-from-var2828-to-var909 var2284)))))\r\n  (define-fun var2462 () String\r\n    (str.++ var1337!1\r\n        \"[LogFactoryImpl@\"\r\n        (str.from_int (var2788_identityHashCode/1096208673\r\n                        (cast-from-var2828-to-var909 var2284)))\r\n        \" from \"\r\n        \"UNKNOWN\"))\r\n  (define-fun var1920 () String\r\n    \"UNKNOWN\")\r\n  (define-fun var2284!1 () var2828\r\n    var2828!val!2)\r\n  (define-fun var2284 () var2828\r\n    var2828!val!0)\r\n  (define-fun var2462!1 () String\r\n    \"[LogFactoryImpl@ from UNKNOWN] \")\r\n  (define-fun var2954!1 () String\r\n    \"[LogFactoryImpl@ from UNKNOWN\")\r\n  (define-fun var2379!1 () String\r\n    \"[LogFactoryImpl@ from \")\r\n  (define-fun var1337!1 () String\r\n    \"\")\r\n  (define-fun null-var3657 () var3657\r\n    var3657!val!0)\r\n  (define-fun var1337!2 () String\r\n    \"[LogFactoryImpl@\")\r\n  (define-fun String-init () String\r\n    \"\")\r\n  (define-fun diagnosticPrefix/1199358121 ((x!0 var2828)) String\r\n    \"[LogFactoryImpl@ from UNKNOWN] \")\r\n  (define-fun cast-from-var2828-to-var909 ((x!0 var2828)) var909\r\n    var909!val!0)\r\n  (define-fun var2788_identityHashCode/1096208673 ((x!0 var909)) Int\r\n    (- 2))\r\n  (define-fun getClass/1258963082 ((x!0 var909)) ClassObject\r\n    ClassObject!val!0)\r\n  (define-fun var2828_getClassLoader/1612937626 ((x!0 ClassObject)) var3657\r\n    var3657!val!0)\r\n)\r\n(error \"line 70 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13262848,
            "run_time": 0.031026124954223633,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2828 is 3\r\n; rep: (as @var2828_0 var2828)\r\n; rep: (as @var2828_1 var2828)\r\n; rep: (as @var2828_2 var2828)\r\n; cardinality of var909 is 1\r\n; rep: (as @var909_0 var909)\r\n; cardinality of var3657 is 1\r\n; rep: (as @var3657_0 var3657)\r\n; cardinality of var134 is 2\r\n; rep: (as @var134_0 var134)\r\n; rep: (as @var134_1 var134)\r\n; cardinality of var2788 is 1\r\n; rep: (as @var2788_0 var2788)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_1390 var909)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var2828-to-var909 ((_arg_1 var2828)) var909 (as @var909_0 var909))\r\n(define-fun var2828_getClassLoader/1612937626 ((BOUND_VARIABLE_1393 ClassObject)) var3657 (as @var3657_0 var3657))\r\n(define-fun String-init () String \"\")\r\n(define-fun var2788_identityHashCode/1096208673 ((_arg_1 var909)) Int (- 1))\r\n(define-fun diagnosticPrefix/1199358121 ((_arg_1 var2828)) String \"[LogFactoryImpl@ from UNKNOWN] \")\r\n(define-fun null-var2828 () var2828 (as @var2828_0 var2828))\r\n(define-fun null-var3657 () var3657 (as @var3657_0 var3657))\r\n(define-fun null-var134 () var134 (as @var134_0 var134))\r\n(define-fun var2284 () var2828 (as @var2828_1 var2828))\r\n(define-fun var3753 () var134 (as @var134_1 var134))\r\n(define-fun var1337!1 () String \"\")\r\n(define-fun var1337!2 () String \"[LogFactoryImpl@\")\r\n(define-fun var1243!1 () String \"[LogFactoryImpl@\")\r\n(define-fun var2379!1 () String \"[LogFactoryImpl@ from \")\r\n(define-fun var2954!1 () String \"[LogFactoryImpl@ from UNKNOWN\")\r\n(define-fun var2462!1 () String \"[LogFactoryImpl@ from UNKNOWN] \")\r\n(define-fun var2284!1 () var2828 (as @var2828_2 var2828))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 34787328,
            "run_time": 0.06152701377868652,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 69 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 70 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 210423808,
            "run_time": 1.0390920639038086,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2284!1 () var2828 var2828!206)\r\n  (define-fun var2462!1 () String \"[LogFactoryImpl@ from UNKNOWN] \")\r\n  (define-fun var2954!1 () String \"[LogFactoryImpl@ from UNKNOWN\")\r\n  (define-fun var2379!1 () String \"[LogFactoryImpl@ from \")\r\n  (define-fun var1243!1 () String \"[LogFactoryImpl@\")\r\n  (define-fun var1337!2 () String \"[LogFactoryImpl@\")\r\n  (define-fun var1337!1 () String \"\")\r\n  (define-fun var3753 () var134 var134!204)\r\n  (define-fun var2284 () var2828 var2828!202)\r\n  (define-fun null-var134 () var134 var134!200)\r\n  (define-fun null-var3657 () var3657 var3657!198)\r\n  (define-fun null-var2828 () var2828 var2828!196)\r\n  (define-fun var3657!198 () var3657 (var2828_getClassLoader/1612937626 ClassObject!226))\r\n  (define-fun var909!224 () var909 (cast-from-var2828-to-var909 var2828!202))\r\n  (define-fun ClassObject!226 () ClassObject (getClass/1258963082 var909!224))\r\n  (define-fun abbrev_113 ((x!0 Int)) String (ite (= x!0 0) \"[LogFactoryImpl@ from \" \"\"))\r\n  (define-fun diagnosticPrefix/1199358121 ((x!0 var2828)) String (ite (= x!0 var2828!206) \"[LogFactoryImpl@ from UNKNOWN] \" \"\"))\r\n  (define-fun var2788_identityHashCode/1096208673 ((x!0 var909)) Int (ite (= x!0 var909!224) (- 6) 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 6,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "r2 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getClassLoader(java.lang.Class)>(r1)",
            "if r2 != null goto r11 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String objectId(java.lang.Object)>(r2)",
            "$r10 := @caughtexception",
            "r11 = \"UNKNOWN\"",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[LogFactoryImpl@\")",
            "$i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" from \")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] \")",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String diagnosticPrefix> = $r9",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__informUponSimilarName__738058869\\475.smt2",
        "z3": {
            "memory": 31551488,
            "run_time": 0.1537466049194336,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n  ;; universe for var3698:\r\n  ;;   var3698!val!0 var3698!val!1 \r\n  ;; -----------\r\n  ;; definitions for universe elements:\r\n  (declare-fun var3698!val!0 () var3698)\r\n  (declare-fun var3698!val!1 () var3698)\r\n  ;; cardinality constraint:\r\n  (forall ((x var3698)) (or (= x var3698!val!0) (= x var3698!val!1)))\r\n  ;; -----------\r\n  (define-fun var3234 () var3698\r\n    var3698!val!0)\r\n  (define-fun var3338 () Bool\r\n    (regionMatches/-1964120983\r\n  var1377\r\n  (ite (= 1 1) true false)\r\n  0\r\n  var505\r\n  0\r\n  (+ var3698-PKG_LEN 5)))\r\n  (define-fun var3698-PKG_LEN () Int\r\n    (- 3))\r\n  (define-fun var505 () String\r\n    \"!3!\")\r\n  (define-fun var1377 () String\r\n    \"!2!\")\r\n  (define-fun var189 () Bool\r\n    (= var1377 var505))\r\n  (define-fun var1728 () Int\r\n    (+ var3698-PKG_LEN 5))\r\n  (define-fun null-String () String\r\n    \"!1!\")\r\n  (define-fun var1369 () String\r\n    \"!0!\")\r\n  (define-fun var3231 () Int\r\n    var3698-PKG_LEN)\r\n  (define-fun null-var3698 () var3698\r\n    var3698!val!1)\r\n  (define-fun regionMatches/-1964120983 ((x!0 String)\r\n   (x!1 Bool)\r\n   (x!2 Int)\r\n   (x!3 String)\r\n   (x!4 Int)\r\n   (x!5 Int)) Bool\r\n    false)\r\n)\r\n(error \"line 34 column 15: unsat core is not available\")\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 11423744,
            "run_time": 0.0912628173828125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3698 is 2\r\n; rep: (as @var3698_0 var3698)\r\n; rep: (as @var3698_1 var3698)\r\n; cardinality of var1794 is 1\r\n; rep: (as @var1794_0 var1794)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun regionMatches/-1964120983 ((_arg_1 String) (_arg_2 Bool) (_arg_3 Int) (_arg_4 String) (_arg_5 Int) (_arg_6 Int)) Bool false)\r\n(define-fun null-var3698 () var3698 (as @var3698_0 var3698))\r\n(define-fun null-String () String \"B\")\r\n(define-fun var3698-PKG_LEN () Int 0)\r\n(define-fun var3234 () var3698 (as @var3698_1 var3698))\r\n(define-fun var1369 () String \"\")\r\n(define-fun var1377 () String \"\")\r\n(define-fun var505 () String \"A\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 63094784,
            "run_time": 32.790618896484375,
            "is_sat": "sat",
            "stdout": "sat\n(\n  ;; universe for var3698:\n  ;;   var3698!val!0 var3698!val!1 \n  ;; -----------\n  ;; definitions for universe elements:\n  (declare-fun var3698!val!0 () var3698)\n  (declare-fun var3698!val!1 () var3698)\n  ;; cardinality constraint:\n  (forall ((x var3698)) (or (= x var3698!val!0) (= x var3698!val!1)))\n  ;; -----------\n  (define-fun var1377 () String\n    \"\\u{0}\\u{0}\\u{0}\\u{0}\")\n  (define-fun var1728 () Int\n    (+ var3698-PKG_LEN 5))\n  (define-fun var189 () Bool\n    (= var1377 var505))\n  (define-fun var3338 () Bool\n    (regionMatches/-1964120983\n  var1377\n  (ite (= 1 1) true false)\n  0\n  var505\n  0\n  (+ var3698-PKG_LEN 5)))\n  (define-fun var505 () String\n    \"\\u{0}\\u{0}\")\n  (define-fun null-String () String\n    \"\\u{0}\\u{0}\\u{0}\")\n  (define-fun var3231 () Int\n    var3698-PKG_LEN)\n  (define-fun var3234 () var3698\n    var3698!val!0)\n  (define-fun null-var3698 () var3698\n    var3698!val!1)\n  (define-fun var1369 () String\n    \"\\u{0}\")\n  (define-fun var3698-PKG_LEN () Int\n    0)\n  (define-fun regionMatches/-1964120983 ((x!0 String)\n   (x!1 Bool)\n   (x!2 Int)\n   (x!3 String)\n   (x!4 Int)\n   (x!5 Int)) Bool\n    false)\n)\n(error \"line 34 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 164384768,
            "run_time": 0.6836867332458496,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var505 () String \"\\u{0}\")\r\n  (define-fun var1377 () String \"\\u{1}\")\r\n  (define-fun var1369 () String \"\\u{2}\")\r\n  (define-fun var3234 () var3698 var3698!16)\r\n  (define-fun var3698-PKG_LEN () Int 2)\r\n  (define-fun null-String () String \"\")\r\n  (define-fun null-var3698 () var3698 var3698!12)\r\n  (define-fun regionMatches/-1964120983 ((x!0 String) (x!1 Bool) (x!2 Int) (x!3 String) (x!4 Int) (x!5 Int)) Bool (ite (and (and (and (and (and (= x!0 \"\\u{1}\") x!1) (= x!2 0)) (= x!3 \"\\u{0}\")) (= x!4 0)) (= x!5 7)) false true))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 8,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1,
            "<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>": 1
        },
        "jimple_statements": [
            "r3 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r2 := @parameter0: java.lang.StringBuilder",
            "r0 := @parameter1: java.lang.String",
            "r1 := @parameter2: java.lang.String",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(r1)",
            "if $z0 == 0 goto $i0 = <org.apache.commons.logging.impl.LogFactoryImpl: int PKG_LEN>",
            "$i0 = <org.apache.commons.logging.impl.LogFactoryImpl: int PKG_LEN>",
            "$i1 = $i0 + 5",
            "$z1 = virtualinvoke r0.<java.lang.String: boolean regionMatches(boolean,int,java.lang.String,int,int)>(1, 0, r1, 0, $i1)",
            "if $z1 == 0 goto return",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__initDiagnostics__-1205227710\\486.smt2",
        "z3": {
            "memory": 32645120,
            "run_time": 60.00891637802124,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 13025280,
            "run_time": 0.029237985610961914,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3030 is 3\r\n; rep: (as @var3030_0 var3030)\r\n; rep: (as @var3030_1 var3030)\r\n; rep: (as @var3030_2 var3030)\r\n; cardinality of var3901 is 1\r\n; rep: (as @var3901_0 var3901)\r\n; cardinality of var89 is 2\r\n; rep: (as @var89_0 var89)\r\n; rep: (as @var89_1 var89)\r\n; cardinality of var2307 is 1\r\n; rep: (as @var2307_0 var2307)\r\n; cardinality of var1564 is 2\r\n; rep: (as @var1564_0 var1564)\r\n; rep: (as @var1564_1 var1564)\r\n; cardinality of var1441 is 1\r\n; rep: (as @var1441_0 var1441)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getClass/1258963082 ((_arg_1 var3901)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var3030-to-var3901 ((_arg_1 var3030)) var3901 (as @var3901_0 var3901))\r\n(define-fun var3030_getClassLoader/1612937626 ((_arg_1 ClassObject)) var89 (as @var89_1 var89))\r\n(define-fun var2307_objectId/1952731062 ((BOUND_VARIABLE_1413 var3901)) String \"\")\r\n(define-fun cast-from-var89-to-var3901 ((BOUND_VARIABLE_1416 var89)) var3901 (as @var3901_0 var3901))\r\n(define-fun String-init () String \"\")\r\n(define-fun var1441_identityHashCode/1096208673 ((_arg_1 var3901)) Int (- 1))\r\n(define-fun diagnosticPrefix/1199358121 ((_arg_1 var3030)) String \"[LogFactoryImpl@ from UNKNOWN] \")\r\n(define-fun null-var3030 () var3030 (as @var3030_0 var3030))\r\n(define-fun null-var89 () var89 (as @var89_0 var89))\r\n(define-fun null-var1564 () var1564 (as @var1564_0 var1564))\r\n(define-fun var2210 () var3030 (as @var3030_1 var3030))\r\n(define-fun var1617 () var1564 (as @var1564_1 var1564))\r\n(define-fun var2447!1 () String \"\")\r\n(define-fun var2447!2 () String \"[LogFactoryImpl@\")\r\n(define-fun var3533!1 () String \"[LogFactoryImpl@\")\r\n(define-fun var532!1 () String \"[LogFactoryImpl@ from \")\r\n(define-fun var2830!1 () String \"[LogFactoryImpl@ from UNKNOWN\")\r\n(define-fun var2867!1 () String \"[LogFactoryImpl@ from UNKNOWN] \")\r\n(define-fun var2210!1 () var3030 (as @var3030_2 var3030))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35688448,
            "run_time": 0.04566621780395508,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 74 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 75 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 201916416,
            "run_time": 1.0173723697662354,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun var2210!1 () var3030 var3030!206)\r\n  (define-fun var2867!1 () String \"[LogFactoryImpl@ from UNKNOWN] \")\r\n  (define-fun var2830!1 () String \"[LogFactoryImpl@ from UNKNOWN\")\r\n  (define-fun var532!1 () String \"[LogFactoryImpl@ from \")\r\n  (define-fun var3533!1 () String \"[LogFactoryImpl@\")\r\n  (define-fun var2447!2 () String \"[LogFactoryImpl@\")\r\n  (define-fun var2447!1 () String \"\")\r\n  (define-fun var1617 () var1564 var1564!204)\r\n  (define-fun var2210 () var3030 var3030!202)\r\n  (define-fun null-var1564 () var1564 var1564!200)\r\n  (define-fun null-var89 () var89 var89!198)\r\n  (define-fun null-var3030 () var3030 var3030!196)\r\n  (define-fun var89!230 () var89 (var3030_getClassLoader/1612937626 ClassObject!228))\r\n  (define-fun var3901!226 () var3901 (cast-from-var3030-to-var3901 var3030!202))\r\n  (define-fun ClassObject!228 () ClassObject (getClass/1258963082 var3901!226))\r\n  (define-fun abbrev_116 ((x!0 Int)) String (ite (= x!0 0) \"[LogFactoryImpl@ from \" \"\"))\r\n  (define-fun diagnosticPrefix/1199358121 ((x!0 var3030)) String (ite (= x!0 var3030!206) \"[LogFactoryImpl@ from UNKNOWN] \" \"\"))\r\n  (define-fun var1441_identityHashCode/1096208673 ((x!0 var3901)) Int (ite (= x!0 var3901!226) (- 6) 0))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 8,
        "assertion_count": 21,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "r2 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getClassLoader(java.lang.Class)>(r1)",
            "if r2 != null goto r11 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String objectId(java.lang.Object)>(r2)",
            "r11 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String objectId(java.lang.Object)>(r2)",
            "$r10 := @caughtexception",
            "r11 = \"UNKNOWN\"",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[LogFactoryImpl@\")",
            "$i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" from \")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] \")",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String diagnosticPrefix> = $r9",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__isLogLibraryAvailable__1913245598\\497.smt2",
        "z3": {
            "memory": 19750912,
            "run_time": 0.04393482208251953,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"line 60 column 10: model is not available\")\r\n()\r\n",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1646592,
            "run_time": 0.0156862735748291,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"Cannot get model unless after a SAT or UNKNOWN response.\")\r\n(\r\n)\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 35614720,
            "run_time": 0.04662656784057617,
            "is_sat": "unsat",
            "stdout": "unsat\n(error \"line 60 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n()\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 166383616,
            "run_time": 0.7136290073394775,
            "is_sat": "unsat",
            "stdout": "unsat\r\n(error \"no model available\")\r\n()\r\n",
            "stderr": ""
        },
        "undefined_function_count": 3,
        "assertion_count": 17,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 3,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r5 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "$z0 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r2 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "$r15 = new java.lang.StringBuilder",
            "specialinvoke $r15.<java.lang.StringBuilder: void <init>()>()",
            "$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Checking for \\'\")",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r5)",
            "$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\'.\")",
            "$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void logDiagnostic(java.lang.String)>($r19)",
            "$r21 := @caughtexception",
            "$z3 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z3 == 0 goto return 0",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__initDiagnostics__-1205227710\\485.smt2",
        "z3": {
            "memory": 32600064,
            "run_time": 60.00761795043945,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1626112,
            "run_time": 0.04511547088623047,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1327 is 3\r\n; rep: (as @var1327_0 var1327)\r\n; rep: (as @var1327_1 var1327)\r\n; rep: (as @var1327_2 var1327)\r\n; cardinality of var3079 is 2\r\n; rep: (as @var3079_0 var3079)\r\n; rep: (as @var3079_1 var3079)\r\n; cardinality of var345 is 2\r\n; rep: (as @var345_0 var345)\r\n; rep: (as @var345_1 var345)\r\n; cardinality of var736 is 1\r\n; rep: (as @var736_0 var736)\r\n; cardinality of var2221 is 1\r\n; rep: (as @var2221_0 var2221)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun getClass/1258963082 ((_arg_1 var3079)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var1327-to-var3079 ((_arg_1 var1327)) var3079 (as @var3079_0 var3079))\r\n(define-fun var1327_getClassLoader/1612937626 ((_arg_1 ClassObject)) var345 (as @var345_1 var345))\r\n(define-fun var736_objectId/1952731062 ((_arg_1 var3079)) String \"\")\r\n(define-fun cast-from-var345-to-var3079 ((_arg_1 var345)) var3079 (as @var3079_1 var3079))\r\n(define-fun String-init () String \"\")\r\n(define-fun var2221_identityHashCode/1096208673 ((_arg_1 var3079)) Int (- 1))\r\n(define-fun diagnosticPrefix/1199358121 ((_arg_1 var1327)) String \"[LogFactoryImpl@ from ] \")\r\n(define-fun null-var1327 () var1327 (as @var1327_0 var1327))\r\n(define-fun null-var345 () var345 (as @var345_0 var345))\r\n(define-fun var1274 () var1327 (as @var1327_1 var1327))\r\n(define-fun var2306!1 () String \"\")\r\n(define-fun var2306!2 () String \"[LogFactoryImpl@\")\r\n(define-fun var1645!1 () String \"[LogFactoryImpl@\")\r\n(define-fun var369!1 () String \"[LogFactoryImpl@ from \")\r\n(define-fun var1634!1 () String \"[LogFactoryImpl@ from \")\r\n(define-fun var3823!1 () String \"[LogFactoryImpl@ from ] \")\r\n(define-fun var1274!1 () var1327 (as @var1327_2 var1327))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36380672,
            "run_time": 0.04532170295715332,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 70 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 71 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 192335872,
            "run_time": 0.9170591831207275,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1327/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__initDiagnostics__-1205227710\\485.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   all_37_10 =\r\n     concat(all_37_3, \"] \")\r\n   var3823!1 =\r\n     concat(all_34_3, \"] \")\r\n   var1634!1 =\r\n     concat(\"[LogFactoryImpl@ from \", all_28_2)\r\n   all_37_3 =\r\n     concat(\"[LogFactoryImpl@ from \", all_28_2)\r\n   all_34_3 =\r\n     concat(\"[LogFactoryImpl@ from \", all_28_2)\r\n\r\n677ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 20,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(int)>": 1,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r1 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>()",
            "r2 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getClassLoader(java.lang.Class)>(r1)",
            "if r2 != null goto r11 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String objectId(java.lang.Object)>(r2)",
            "r11 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String objectId(java.lang.Object)>(r2)",
            "goto [?= $r3 = new java.lang.StringBuilder]",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"[LogFactoryImpl@\")",
            "$i0 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(r0)",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>($i0)",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\" from \")",
            "$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r11)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"] \")",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "r0.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String diagnosticPrefix> = $r9",
            "return"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__initDiagnostics__351455467\\433.smt2",
        "z3": {
            "memory": 32305152,
            "run_time": 60.01228094100952,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1658880,
            "run_time": 0.014240264892578125,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var567 is 1\r\n; rep: (as @var567_0 var567)\r\n; cardinality of var2488 is 1\r\n; rep: (as @var2488_0 var2488)\r\n; cardinality of var1585 is 1\r\n; rep: (as @var1585_0 var1585)\r\n; cardinality of var3182 is 1\r\n; rep: (as @var3182_0 var3182)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var567_getSystemProperty/-1097177229 ((_arg_1 String) (_arg_2 String)) String \"STDERR\")\r\n(define-fun null-String () String \"\")\r\n(define-fun var3182-err () var1585 (as @var1585_0 var1585))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 28262400,
            "run_time": 0.047824859619140625,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 31 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 32 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 177586176,
            "run_time": 0.7584235668182373,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun abbrev_8 ((x!0 Int)) String (ite (= x!0 0) \"STDERR\" \"\"))\r\n  (define-fun var567_getSystemProperty/-1097177229 ((x!0 String) (x!1 String)) String (ite (and (= x!0 \"org.apache.commons.logging.diagnostics.dest\") (= x!1 \"\\u{0}\")) \"STDERR\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 7,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>",
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 2
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>(\"org.apache.commons.logging.diagnostics.dest\", null)",
            "if r0 != null goto (branch)",
            "goto [?= $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"STDOUT\")]",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"STDOUT\")",
            "if $z0 == 0 goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"STDERR\")",
            "$z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"STDERR\")",
            "if $z1 == 0 goto $r1 = new java.io.FileOutputStream",
            "$r5 = <java.lang.System: java.io.PrintStream err>",
            "return $r5"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__initDiagnostics__351455467\\428.smt2",
        "z3": {
            "memory": 32153600,
            "run_time": 60.00009799003601,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1658880,
            "run_time": 0.014787673950195312,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1117 is 1\r\n; rep: (as @var1117_0 var1117)\r\n; cardinality of var2219 is 1\r\n; rep: (as @var2219_0 var2219)\r\n; cardinality of var2708 is 1\r\n; rep: (as @var2708_0 var2708)\r\n; cardinality of var1242 is 1\r\n; rep: (as @var1242_0 var1242)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1117_getSystemProperty/-1097177229 ((_arg_1 String) (_arg_2 String)) String \"STDOUT\")\r\n(define-fun null-String () String \"\")\r\n(define-fun var1242-out () var2708 (as @var2708_0 var2708))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 36454400,
            "run_time": 0.04714345932006836,
            "is_sat": "unknown",
            "stdout": "unknown\n(error \"line 27 column 10: model is not available, did you forget to enable model generation with ''model=true'?\")\n(error \"line 28 column 15: unsat core is not available\")\n",
            "stderr": ""
        },
        "ostrich": {
            "memory": 150859776,
            "run_time": 0.699925422668457,
            "is_sat": "sat",
            "stdout": "sat\r\n(model\r\n  (define-fun null-String () String \"\\u{0}\")\r\n  (define-fun abbrev_8 ((x!0 Int)) String (ite (= x!0 0) \"STDOUT\" \"\"))\r\n  (define-fun var1117_getSystemProperty/-1097177229 ((x!0 String) (x!1 String)) String (ite (and (= x!0 \"org.apache.commons.logging.diagnostics.dest\") (= x!1 \"\\u{0}\")) \"STDOUT\" \"\"))\r\n)\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": ""
        },
        "undefined_function_count": 1,
        "assertion_count": 5,
        "api_sequence": [
            "<java.lang.String: boolean equals(java.lang.Object)>"
        ],
        "api_count": {
            "<java.lang.String: boolean equals(java.lang.Object)>": 1
        },
        "jimple_statements": [
            "r0 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String getSystemProperty(java.lang.String,java.lang.String)>(\"org.apache.commons.logging.diagnostics.dest\", null)",
            "if r0 != null goto (branch)",
            "goto [?= $z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"STDOUT\")]",
            "$z0 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"STDOUT\")",
            "if $z0 == 0 goto $z1 = virtualinvoke r0.<java.lang.String: boolean equals(java.lang.Object)>(\"STDERR\")",
            "$r6 = <java.lang.System: java.io.PrintStream out>",
            "return $r6"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__handleFlawedDiscovery__1560251702\\431.smt2",
        "z3": {
            "memory": 31621120,
            "run_time": 60.0080201625824,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1658880,
            "run_time": 0.014509439468383789,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var3107 is 3\r\n; rep: (as @var3107_0 var3107)\r\n; rep: (as @var3107_1 var3107)\r\n; rep: (as @var3107_2 var3107)\r\n; cardinality of var643 is 1\r\n; rep: (as @var643_0 var643)\r\n; cardinality of var1586 is 2\r\n; rep: (as @var1586_0 var1586)\r\n; rep: (as @var1586_1 var1586)\r\n; cardinality of var1783 is 1\r\n; rep: (as @var1783_0 var1783)\r\n; cardinality of var491 is 1\r\n; rep: (as @var491_0 var491)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3107_isDiagnosticsEnabled/-1107982053 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_834 var1783)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var1586-to-var1783 ((BOUND_VARIABLE_837 var1586)) var1783 (as @var1783_0 var1783))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_840 ClassObject)) String \"\")\r\n(define-fun getLocalizedMessage/361048096 ((BOUND_VARIABLE_843 var1586)) String \"\")\r\n(define-fun logDiagnostic/1870399160 ((BOUND_VARIABLE_846 var3107) (BOUND_VARIABLE_847 String)) void (as @void_0 void))\r\n(define-fun allowFlawedDiscovery/1199358121 ((_arg_1 var3107)) Bool false)\r\n(define-fun var491-init () var491 (as @var491_0 var491))\r\n(define-fun <init>/-1922439421 ((BOUND_VARIABLE_850 var491) (BOUND_VARIABLE_851 var1586)) void (as @void_0 void))\r\n(define-fun null-var3107 () var3107 (as @var3107_0 var3107))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1586 () var1586 (as @var1586_0 var1586))\r\n(define-fun var946 () var3107 (as @var3107_1 var3107))\r\n(define-fun var2647 () String \"\")\r\n(define-fun var932 () var1586 (as @var1586_1 var1586))\r\n(define-fun var1747!1 () String \"\")\r\n(define-fun var1747!2 () String \"Could not instantiate Log '\")\r\n(define-fun var195!1 () String \"Could not instantiate Log '\")\r\n(define-fun var898!1 () String \"Could not instantiate Log '' -- \")\r\n(define-fun var2613!1 () String \"Could not instantiate Log '' -- \")\r\n(define-fun var3886!1 () String \"Could not instantiate Log '' -- : \")\r\n(define-fun var2630!1 () String \"Could not instantiate Log '' -- : \")\r\n(define-fun var946!1 () var3107 (as @var3107_2 var3107))\r\n(define-fun var1972!1 () String \"\")\r\n(define-fun var3831!1 () var491 (as @var491_0 var491))\r\n(define-fun var932!1 () var1586 (as @var1586_0 var1586))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37900288,
            "run_time": 60.00708723068237,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 192344064,
            "run_time": 0.8549070358276367,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3107/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__handleFlawedDiscovery__1560251702\\431.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2630!1 =\r\n     concat(all_41_7, all_41_6)\r\n   var3886!1 =\r\n     concat(all_38_5, \": \")\r\n   var2613!1 =\r\n     concat(all_35_7, all_35_4)\r\n   var898!1 =\r\n     concat(all_32_3, \"\\u{0}27 -- \")\r\n   var195!1 =\r\n     concat(\"Could not instantiate Log \\u{0}27\", var2647)\r\n   all_41_7 =\r\n     concat(all_41_8, \": \")\r\n   all_38_5 =\r\n     concat(all_38_9, all_35_4)\r\n   all_35_7 =\r\n     concat(all_35_8, \"\\u{0}27 -- \")\r\n   all_32_3 =\r\n     concat(\"Could not instantiate Log \\u{0}27\", var2647)\r\n   all_41_8 =\r\n     concat(all_41_12, all_35_4)\r\n   all_38_9 =\r\n     concat(all_38_10, \"\\u{0}27 -- \")\r\n   all_35_8 =\r\n     concat(\"Could not instantiate Log \\u{0}27\", var2647)\r\n   all_41_12 =\r\n     concat(all_41_13, \"\\u{0}27 -- \")\r\n   all_38_10 =\r\n     concat(\"Could not instantiate Log \\u{0}27\", var2647)\r\n   all_41_13 =\r\n     concat(\"Could not instantiate Log \\u{0}27\", var2647)\r\n\r\n625ms\r\n"
        },
        "undefined_function_count": 10,
        "assertion_count": 26,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r4 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.Throwable",
            "$z0 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $z3 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedDiscovery>",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not instantiate Log \\'\")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)",
            "$r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' -- \")",
            "$r7 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>()",
            "$r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>()",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)",
            "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")",
            "$r11 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getLocalizedMessage()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void logDiagnostic(java.lang.String)>($r14)",
            "$z1 = r2 instanceof java.lang.reflect.InvocationTargetException",
            "if $z1 == 0 goto $z3 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedDiscovery>",
            "$z3 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedDiscovery>",
            "if $z3 != 0 goto return",
            "$r1 = new org.apache.commons.logging.LogConfigurationException",
            "specialinvoke $r1.<org.apache.commons.logging.LogConfigurationException: void <init>(java.lang.Throwable)>(r2)",
            "throw $r1"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__createLogFromClass__1434645975\\149.smt2",
        "z3": {
            "memory": 31981568,
            "run_time": 60.0115532875061,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1658880,
            "run_time": 0.014579296112060547,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var2542 is 2\r\n; rep: (as @var2542_0 var2542)\r\n; rep: (as @var2542_1 var2542)\r\n; cardinality of var2495 is 1\r\n; rep: (as @var2495_0 var2495)\r\n; cardinality of var2304 is 2\r\n; rep: (as @var2304_0 var2304)\r\n; rep: (as @var2304_1 var2304)\r\n; cardinality of var1606 is 1\r\n; rep: (as @var1606_0 var1606)\r\n; cardinality of var1245 is 1\r\n; rep: (as @var1245_0 var1245)\r\n; cardinality of var1241 is 1\r\n; rep: (as @var1241_0 var1241)\r\n; cardinality of var1213 is 1\r\n; rep: (as @var1213_0 var1213)\r\n; cardinality of var246 is 2\r\n; rep: (as @var246_0 var246)\r\n; rep: (as @var246_1 var246)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2542_isDiagnosticsEnabled/-1107982053 () Bool false)\r\n(define-fun arr-var2304-init () (Array Int var2304) ((as const (Array Int var2304)) (as @var2304_0 var2304)))\r\n(define-fun cast-from-String-to-var2304 ((_arg_1 String)) var2304 (as @var2304_1 var2304))\r\n(define-fun getBaseClassLoader/1550304965 ((BOUND_VARIABLE_839 var2542)) var1241 (as @var1241_0 var1241))\r\n(define-fun String-init () String \"\")\r\n(define-fun var1213_objectId/1952731062 ((BOUND_VARIABLE_842 var2304)) String \"\")\r\n(define-fun cast-from-var1241-to-var2304 ((BOUND_VARIABLE_845 var1241)) var2304 (as @var2304_0 var2304))\r\n(define-fun logDiagnostic/1870399160 ((BOUND_VARIABLE_848 var2542) (BOUND_VARIABLE_849 String)) void (as @void_0 void))\r\n(define-fun null-var2542 () var2542 (as @var2542_0 var2542))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-Bool () Bool true)\r\n(define-fun null-__Array__Int__var2304__ () (Array Int var2304) (store ((as const (Array Int var2304)) (as @var2304_1 var2304)) 0 (as @var2304_0 var2304)))\r\n(define-fun null-var1606 () var1606 (as @var1606_0 var1606))\r\n(define-fun null-var1245 () var1245 (as @var1245_0 var1245))\r\n(define-fun null-ClassObject () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun null-var246 () var246 (as @var246_0 var246))\r\n(define-fun var2566 () var2542 (as @var2542_1 var2542))\r\n(define-fun var1918 () String \"\")\r\n(define-fun var1832 () String \"\")\r\n(define-fun var2219 () Bool false)\r\n(define-fun var3087!1 () (Array Int var2304) (store ((as const (Array Int var2304)) (as @var2304_0 var2304)) 0 (as @var2304_1 var2304)))\r\n(define-fun var3243!1 () String \"\")\r\n(define-fun var3243!2 () String \"Trying to load '\")\r\n(define-fun var2088!1 () String \"Trying to load '\")\r\n(define-fun var1729!1 () String \"Trying to load '' from class loader \")\r\n(define-fun var3764!1 () String \"Trying to load '' from class loader \")\r\n(define-fun var2566!1 () var2542 (as @var2542_0 var2542))\r\n(define-fun var2818!1 () String \"\")\r\n(define-fun var2927 () var246 (as @var246_1 var246))\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37351424,
            "run_time": 60.00880408287048,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 182931456,
            "run_time": 0.8624463081359863,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var2542/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__createLogFromClass__1434645975\\149.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var1729!1 =\r\n     concat(all_38_4, \"\\u{0}27 from class loader \")\r\n   var3764!1 =\r\n     concat(all_35_5, all_35_2)\r\n   var2088!1 =\r\n     concat(\"Trying to load \\u{0}27\", var1918)\r\n   all_35_5 =\r\n     concat(all_41_5, \"\\u{0}27 from class loader \")\r\n   all_38_4 =\r\n     concat(\"Trying to load \\u{0}27\", var1918)\r\n   all_41_5 =\r\n     concat(\"Trying to load \\u{0}27\", var1918)\r\n\r\n643ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 23,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 4,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r2 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r3 := @parameter0: java.lang.String",
            "r1 := @parameter1: java.lang.String",
            "z2 := @parameter2: boolean",
            "$z0 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $r0 = newarray (java.lang.Object)[1]",
            "$r0 = newarray (java.lang.Object)[1]",
            "$r0[0] = r1",
            "r102 = null",
            "r103 = null",
            "r104 = null",
            "r105 = specialinvoke r2.<org.apache.commons.logging.impl.LogFactoryImpl: java.lang.ClassLoader getBaseClassLoader()>()",
            "$r106 = new java.lang.StringBuilder",
            "specialinvoke $r106.<java.lang.StringBuilder: void <init>()>()",
            "$r107 = virtualinvoke $r106.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Trying to load \\'\")",
            "$r108 = virtualinvoke $r107.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r109 = virtualinvoke $r108.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' from class loader \")",
            "$r110 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: java.lang.String objectId(java.lang.Object)>(r105)",
            "$r111 = virtualinvoke $r109.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r110)",
            "$r112 = virtualinvoke $r111.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r2.<org.apache.commons.logging.impl.LogFactoryImpl: void logDiagnostic(java.lang.String)>($r112)",
            "$r58 := @caughtexception",
            "throw $r58"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__isClassAvailable__-2047104833\\447.smt2",
        "z3": {
            "memory": 32120832,
            "run_time": 60.0147020816803,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1630208,
            "run_time": 0.015597105026245117,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var121 is 1\r\n; rep: (as @var121_0 var121)\r\n; cardinality of var3256 is 2\r\n; rep: (as @var3256_0 var3256)\r\n; rep: (as @var3256_1 var3256)\r\n; cardinality of var2964 is 1\r\n; rep: (as @var2964_0 var2964)\r\n; cardinality of var2534 is 1\r\n; rep: (as @var2534_0 var2534)\r\n; cardinality of var2854 is 2\r\n; rep: (as @var2854_0 var2854)\r\n; rep: (as @var2854_1 var2854)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var2964!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getClassLoader/-563698447 ((BOUND_VARIABLE_864 ClassObject)) var3256 (as @var3256_0 var3256))\r\n(define-fun String-init () String \"\")\r\n(define-fun var2964_objectId/1952731062 ((BOUND_VARIABLE_867 var2534)) String \"\")\r\n(define-fun cast-from-var3256-to-var2534 ((BOUND_VARIABLE_870 var3256)) var2534 (as @var2534_0 var2534))\r\n(define-fun var2964_logDiagnostic/1268238408 ((BOUND_VARIABLE_873 String)) void (as @void_0 void))\r\n(define-fun ClassObject_forName/696536127 ((BOUND_VARIABLE_876 String) (BOUND_VARIABLE_877 Bool) (BOUND_VARIABLE_878 var3256)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getMessage/849299655 ((BOUND_VARIABLE_881 var2854)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var3256 () var3256 (as @var3256_0 var3256))\r\n(define-fun null-var2854 () var2854 (as @var2854_0 var2854))\r\n(define-fun var2157 () String \"\")\r\n(define-fun var882 () var3256 (as @var3256_1 var3256))\r\n(define-fun var3039!1 () String \"\")\r\n(define-fun var3039!2 () String \"Checking if class '\")\r\n(define-fun var872!1 () String \"Checking if class '\")\r\n(define-fun var660!1 () String \"Checking if class '' is available in class loader \")\r\n(define-fun var76!1 () String \"Checking if class '' is available in class loader \")\r\n(define-fun var754!1 () String \"\")\r\n(define-fun var2157!1 () String \"\")\r\n(define-fun var3521 () Int 0)\r\n(define-fun var882!1 () var3256 (as @var3256_0 var3256))\r\n(define-fun var2978 () var2854 (as @var2854_1 var2854))\r\n(define-fun var172!1 () String \"\")\r\n(define-fun var172!2 () String \"Failed to load class '\")\r\n(define-fun var339!1 () String \"Failed to load class '\")\r\n(define-fun var2007!1 () String \"Failed to load class '' from class loader \")\r\n(define-fun var781!1 () String \"Failed to load class '' from class loader \")\r\n(define-fun var1697!1 () String \"Failed to load class '' from class loader : \")\r\n(define-fun var2814!1 () String \"Failed to load class '' from class loader : \")\r\n(define-fun var3053!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37064704,
            "run_time": 60.00718402862549,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 199319552,
            "run_time": 0.9611999988555908,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var3256/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__isClassAvailable__-2047104833\\447.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2814!1 =\r\n     concat(all_57_5, all_57_4)\r\n   var1697!1 =\r\n     concat(all_54_3, \": \")\r\n   var2007!1 =\r\n     concat(all_51_3, \"\\u{0}27 from class loader \")\r\n   var781!1 =\r\n     concat(all_48_5, all_42_2)\r\n   var660!1 =\r\n     concat(all_45_3, \"\\u{0}27 is available in class loader \")\r\n   var76!1 =\r\n     concat(all_42_5, all_42_2)\r\n   var339!1 =\r\n     concat(\"Failed to load class \\u{0}27\", var2157!1)\r\n   var872!1 =\r\n     concat(\"Checking if class \\u{0}27\", var2157)\r\n   all_42_5 =\r\n     concat(all_88_3, \"\\u{0}27 is available in class loader \")\r\n   all_48_5 =\r\n     concat(all_85_3, \"\\u{0}27 from class loader \")\r\n   all_57_5 =\r\n     concat(all_57_6, \": \")\r\n   all_54_3 =\r\n     concat(all_54_7, all_42_2)\r\n   all_51_3 =\r\n     concat(\"Failed to load class \\u{0}27\", var2157!1)\r\n   all_45_3 =\r\n     concat(\"Checking if class \\u{0}27\", var2157)\r\n   all_54_7 =\r\n     concat(all_91_3, \"\\u{0}27 from class loader \")\r\n   all_57_6 =\r\n     concat(all_57_10, all_42_2)\r\n   all_85_3 =\r\n     concat(\"Failed to load class \\u{0}27\", var2157!1)\r\n   all_88_3 =\r\n     concat(\"Checking if class \\u{0}27\", var2157)\r\n   all_57_10 =\r\n     concat(all_82_3, \"\\u{0}27 from class loader \")\r\n   all_91_3 =\r\n     concat(\"Failed to load class \\u{0}27\", var2157!1)\r\n   all_82_3 =\r\n     concat(\"Failed to load class \\u{0}27\", var2157!1)\r\n\r\n733ms\r\n"
        },
        "undefined_function_count": 7,
        "assertion_count": 33,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 10,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r3 := @parameter0: java.lang.String",
            "r10 := @parameter1: java.lang.ClassLoader",
            "$r0 = class \"Lorg/apache/commons/logging/LogFactory;\"",
            "r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Checking if class \\'\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is available in class loader \")",
            "$r6 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r1)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)",
            "staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(r3, 1, r10)",
            "$r11 := @caughtexception",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to load class \\'\")",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' from class loader \")",
            "$r15 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r1)",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)",
            "$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")",
            "$r18 = virtualinvoke $r11.<java.lang.Throwable: java.lang.String getMessage()>()",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r21)",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.LogFactory__isClassAvailable__-2047104833\\437.smt2",
        "z3": {
            "memory": 31961088,
            "run_time": 60.007529973983765,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1622016,
            "run_time": 0.015119075775146484,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var523 is 1\r\n; rep: (as @var523_0 var523)\r\n; cardinality of var1041 is 2\r\n; rep: (as @var1041_0 var1041)\r\n; rep: (as @var1041_1 var1041)\r\n; cardinality of var3828 is 1\r\n; rep: (as @var3828_0 var3828)\r\n; cardinality of var693 is 1\r\n; rep: (as @var693_0 var693)\r\n; cardinality of var3070 is 2\r\n; rep: (as @var3070_0 var3070)\r\n; rep: (as @var3070_1 var3070)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var3828!class () ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun getClassLoader/-563698447 ((BOUND_VARIABLE_859 ClassObject)) var1041 (as @var1041_0 var1041))\r\n(define-fun String-init () String \"\")\r\n(define-fun var3828_objectId/1952731062 ((BOUND_VARIABLE_862 var693)) String \"\")\r\n(define-fun cast-from-var1041-to-var693 ((BOUND_VARIABLE_865 var1041)) var693 (as @var693_0 var693))\r\n(define-fun var3828_logDiagnostic/1268238408 ((BOUND_VARIABLE_868 String)) void (as @void_0 void))\r\n(define-fun getMessage/849299655 ((BOUND_VARIABLE_871 var3070)) String \"\")\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1041 () var1041 (as @var1041_0 var1041))\r\n(define-fun null-var3070 () var3070 (as @var3070_0 var3070))\r\n(define-fun var1315 () String \"\")\r\n(define-fun var1196 () var1041 (as @var1041_1 var1041))\r\n(define-fun var1205!1 () String \"\")\r\n(define-fun var1205!2 () String \"Checking if class '\")\r\n(define-fun var88!1 () String \"Checking if class '\")\r\n(define-fun var2908!1 () String \"Checking if class '' is available in class loader \")\r\n(define-fun var3232!1 () String \"Checking if class '' is available in class loader \")\r\n(define-fun var2451!1 () String \"\")\r\n(define-fun var3960 () var3070 (as @var3070_1 var3070))\r\n(define-fun var2666!1 () String \"\")\r\n(define-fun var2666!2 () String \"Failed to load class '\")\r\n(define-fun var3789!1 () String \"Failed to load class '\")\r\n(define-fun var2867!1 () String \"Failed to load class '' from class loader \")\r\n(define-fun var1317!1 () String \"Failed to load class '' from class loader \")\r\n(define-fun var495!1 () String \"Failed to load class '' from class loader : \")\r\n(define-fun var2373!1 () String \"Failed to load class '' from class loader : \")\r\n(define-fun var1619!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37126144,
            "run_time": 60.01258635520935,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 199331840,
            "run_time": 0.9118239879608154,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1041/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.LogFactory__isClassAvailable__-2047104833\\437.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2373!1 =\r\n     concat(all_57_5, all_57_4)\r\n   var495!1 =\r\n     concat(all_54_3, \": \")\r\n   var2867!1 =\r\n     concat(all_51_3, \"\\u{0}27 from class loader \")\r\n   var1317!1 =\r\n     concat(all_48_5, all_42_2)\r\n   var2908!1 =\r\n     concat(all_45_3, \"\\u{0}27 is available in class loader \")\r\n   var3232!1 =\r\n     concat(all_42_5, all_42_2)\r\n   var3789!1 =\r\n     concat(\"Failed to load class \\u{0}27\", var1315)\r\n   var88!1 =\r\n     concat(\"Checking if class \\u{0}27\", var1315)\r\n   all_42_5 =\r\n     concat(all_88_3, \"\\u{0}27 is available in class loader \")\r\n   all_48_5 =\r\n     concat(all_85_3, \"\\u{0}27 from class loader \")\r\n   all_57_5 =\r\n     concat(all_57_6, \": \")\r\n   all_54_3 =\r\n     concat(all_54_7, all_42_2)\r\n   all_51_3 =\r\n     concat(\"Failed to load class \\u{0}27\", var1315)\r\n   all_45_3 =\r\n     concat(\"Checking if class \\u{0}27\", var1315)\r\n   all_54_7 =\r\n     concat(all_91_3, \"\\u{0}27 from class loader \")\r\n   all_57_6 =\r\n     concat(all_57_10, all_42_2)\r\n   all_85_3 =\r\n     concat(\"Failed to load class \\u{0}27\", var1315)\r\n   all_88_3 =\r\n     concat(\"Checking if class \\u{0}27\", var1315)\r\n   all_57_10 =\r\n     concat(all_82_3, \"\\u{0}27 from class loader \")\r\n   all_91_3 =\r\n     concat(\"Failed to load class \\u{0}27\", var1315)\r\n   all_82_3 =\r\n     concat(\"Failed to load class \\u{0}27\", var1315)\r\n\r\n691ms\r\n"
        },
        "undefined_function_count": 6,
        "assertion_count": 32,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>",
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 2,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 10,
            "<java.lang.StringBuilder: java.lang.String toString()>": 2
        },
        "jimple_statements": [
            "r3 := @parameter0: java.lang.String",
            "r10 := @parameter1: java.lang.ClassLoader",
            "$r0 = class \"Lorg/apache/commons/logging/LogFactory;\"",
            "r1 = virtualinvoke $r0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>()",
            "$r2 = new java.lang.StringBuilder",
            "specialinvoke $r2.<java.lang.StringBuilder: void <init>()>()",
            "$r4 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Checking if class \\'\")",
            "$r5 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r7 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' is available in class loader \")",
            "$r6 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r1)",
            "$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6)",
            "$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r9)",
            "$r11 := @caughtexception",
            "$r12 = new java.lang.StringBuilder",
            "specialinvoke $r12.<java.lang.StringBuilder: void <init>()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Failed to load class \\'\")",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3)",
            "$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' from class loader \")",
            "$r15 = staticinvoke <org.apache.commons.logging.LogFactory: java.lang.String objectId(java.lang.Object)>(r1)",
            "$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15)",
            "$r19 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")",
            "$r18 = virtualinvoke $r11.<java.lang.Throwable: java.lang.String getMessage()>()",
            "$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r18)",
            "$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.String toString()>()",
            "staticinvoke <org.apache.commons.logging.LogFactory: void logDiagnostic(java.lang.String)>($r21)",
            "return 0"
        ]
    },
    {
        "filename": "smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__handleFlawedDiscovery__1560251702\\440.smt2",
        "z3": {
            "memory": 31911936,
            "run_time": 60.00196433067322,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "cvc5": {
            "memory": 1679360,
            "run_time": 0.04539132118225098,
            "is_sat": "sat",
            "stdout": "sat\r\n(\r\n; cardinality of var1211 is 3\r\n; rep: (as @var1211_0 var1211)\r\n; rep: (as @var1211_1 var1211)\r\n; rep: (as @var1211_2 var1211)\r\n; cardinality of var2110 is 1\r\n; rep: (as @var2110_0 var2110)\r\n; cardinality of var1280 is 2\r\n; rep: (as @var1280_0 var1280)\r\n; rep: (as @var1280_1 var1280)\r\n; cardinality of var367 is 1\r\n; rep: (as @var367_0 var367)\r\n; cardinality of void is 1\r\n; rep: (as @void_0 void)\r\n; cardinality of Iterator is 1\r\n; rep: (as @Iterator_0 Iterator)\r\n; cardinality of ClassObject is 1\r\n; rep: (as @ClassObject_0 ClassObject)\r\n(define-fun var1211_isDiagnosticsEnabled/-1107982053 () Bool true)\r\n(define-fun String-init () String \"\")\r\n(define-fun getClass/1258963082 ((BOUND_VARIABLE_831 var367)) ClassObject (as @ClassObject_0 ClassObject))\r\n(define-fun cast-from-var1280-to-var367 ((BOUND_VARIABLE_834 var1280)) var367 (as @var367_0 var367))\r\n(define-fun getName/-1958580599 ((BOUND_VARIABLE_837 ClassObject)) String \"\")\r\n(define-fun getLocalizedMessage/361048096 ((BOUND_VARIABLE_840 var1280)) String \"\")\r\n(define-fun logDiagnostic/1870399160 ((BOUND_VARIABLE_843 var1211) (BOUND_VARIABLE_844 String)) void (as @void_0 void))\r\n(define-fun allowFlawedDiscovery/1199358121 ((_arg_1 var1211)) Bool true)\r\n(define-fun null-var1211 () var1211 (as @var1211_0 var1211))\r\n(define-fun null-String () String \"A\")\r\n(define-fun null-var1280 () var1280 (as @var1280_0 var1280))\r\n(define-fun var3359 () var1211 (as @var1211_1 var1211))\r\n(define-fun var3069 () String \"\")\r\n(define-fun var830 () var1280 (as @var1280_1 var1280))\r\n(define-fun var29!1 () String \"\")\r\n(define-fun var29!2 () String \"Could not instantiate Log '\")\r\n(define-fun var171!1 () String \"Could not instantiate Log '\")\r\n(define-fun var1362!1 () String \"Could not instantiate Log '' -- \")\r\n(define-fun var1288!1 () String \"Could not instantiate Log '' -- \")\r\n(define-fun var3513!1 () String \"Could not instantiate Log '' -- : \")\r\n(define-fun var2179!1 () String \"Could not instantiate Log '' -- : \")\r\n(define-fun var3359!1 () var1211 (as @var1211_2 var1211))\r\n(define-fun var580!1 () String \"\")\r\n)\r\n(error \"Cannot get unsat core unless in unsat mode.\")\r\n",
            "stderr": ""
        },
        "z3-noodler": {
            "memory": 37052416,
            "run_time": 60.00695300102234,
            "is_sat": "timeout",
            "stdout": "",
            "stderr": ""
        },
        "ostrich": {
            "memory": 192163840,
            "run_time": 0.8587310314178467,
            "is_sat": "error",
            "stdout": "(error \"Internal exception: java.util.NoSuchElementException: key not found: var1211/1\")\r\n(error \"no model available\")\r\n(error \"no unsatisfiable core available\")\r\n",
            "stderr": "Loading C:\\Users\\yyzha\\Desktop\\jars\\dataset_w\\commons-logging\\smt\\method-org.apache.commons.logging.impl.LogFactoryImpl__handleFlawedDiscovery__1560251702\\440.smt2 ...\r\n\r\nLoading OSTRICH 1.3.5, a solver for string constraints\r\n(c) Matthew Hague, Denghang Hu, Philipp Rmmer, 2018-2024\r\nWith contributions by Riccardo De Masellis, Zhilei Han, Oliver Markgraf.\r\nFor more information, see https://github.com/uuverifiers/ostrich\r\n\r\nWarning: assuming -length=on to handle length constraints\r\n\r\nRunning backward propagation\r\n   Considered function applications:\r\n   var2179!1 =\r\n     concat(all_37_7, all_37_6)\r\n   var3513!1 =\r\n     concat(all_34_5, \": \")\r\n   var1288!1 =\r\n     concat(all_31_7, all_31_4)\r\n   var1362!1 =\r\n     concat(all_28_3, \"\\u{0}27 -- \")\r\n   var171!1 =\r\n     concat(\"Could not instantiate Log \\u{0}27\", var3069)\r\n   all_37_7 =\r\n     concat(all_37_8, \": \")\r\n   all_34_5 =\r\n     concat(all_34_9, all_31_4)\r\n   all_31_7 =\r\n     concat(all_31_8, \"\\u{0}27 -- \")\r\n   all_28_3 =\r\n     concat(\"Could not instantiate Log \\u{0}27\", var3069)\r\n   all_37_8 =\r\n     concat(all_37_12, all_31_4)\r\n   all_34_9 =\r\n     concat(all_34_10, \"\\u{0}27 -- \")\r\n   all_31_8 =\r\n     concat(\"Could not instantiate Log \\u{0}27\", var3069)\r\n   all_37_12 =\r\n     concat(all_37_13, \"\\u{0}27 -- \")\r\n   all_34_10 =\r\n     concat(\"Could not instantiate Log \\u{0}27\", var3069)\r\n   all_37_13 =\r\n     concat(\"Could not instantiate Log \\u{0}27\", var3069)\r\n\r\n613ms\r\n"
        },
        "undefined_function_count": 8,
        "assertion_count": 25,
        "api_sequence": [
            "<java.lang.StringBuilder: void <init>()>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>",
            "<java.lang.StringBuilder: java.lang.String toString()>"
        ],
        "api_count": {
            "<java.lang.StringBuilder: void <init>()>": 1,
            "<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,
            "<java.lang.StringBuilder: java.lang.String toString()>": 1
        },
        "jimple_statements": [
            "r0 := @this: org.apache.commons.logging.impl.LogFactoryImpl",
            "r4 := @parameter0: java.lang.String",
            "r2 := @parameter1: java.lang.Throwable",
            "$z0 = staticinvoke <org.apache.commons.logging.impl.LogFactoryImpl: boolean isDiagnosticsEnabled()>()",
            "if $z0 == 0 goto $z3 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedDiscovery>",
            "$r3 = new java.lang.StringBuilder",
            "specialinvoke $r3.<java.lang.StringBuilder: void <init>()>()",
            "$r5 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"Could not instantiate Log \\'\")",
            "$r6 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r4)",
            "$r9 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\"\\' -- \")",
            "$r7 = virtualinvoke r2.<java.lang.Object: java.lang.Class getClass()>()",
            "$r8 = virtualinvoke $r7.<java.lang.Class: java.lang.String getName()>()",
            "$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8)",
            "$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(\": \")",
            "$r11 = virtualinvoke r2.<java.lang.Throwable: java.lang.String getLocalizedMessage()>()",
            "$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11)",
            "$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.String toString()>()",
            "virtualinvoke r0.<org.apache.commons.logging.impl.LogFactoryImpl: void logDiagnostic(java.lang.String)>($r14)",
            "$z1 = r2 instanceof java.lang.reflect.InvocationTargetException",
            "if $z1 == 0 goto $z3 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedDiscovery>",
            "$z3 = r0.<org.apache.commons.logging.impl.LogFactoryImpl: boolean allowFlawedDiscovery>",
            "if $z3 != 0 goto return",
            "return"
        ]
    }
]