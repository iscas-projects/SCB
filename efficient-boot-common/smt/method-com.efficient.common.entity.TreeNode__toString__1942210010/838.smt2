(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var2095 0)
(declare-sort var2346 0)
(declare-sort var1720 0)
(declare-sort var3735 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun getId/-1980942621 (var2095) String)
(declare-fun getParentId/1008104345 (var2095) String)
(declare-fun getCode/-1673301871 (var2095) String)
(declare-fun getName/-893192397 (var2095) String)
(declare-fun getOrder/1094141721 (var2095) Int)
(declare-fun append/-1031950772 (String var2346) String)
(declare-fun cast-from-Int-to-var2346 (Int) var2346)
(declare-fun getIsLeaf/-653459217 (var2095) var1720)
(declare-fun cast-from-var1720-to-var2346 (var1720) var2346)
(declare-fun getIsRoot/676233451 (var2095) var1720)
(declare-fun getChildren/2082502822 (var2095) var3735)
(declare-fun cast-from-var3735-to-var2346 (var3735) var2346)
(declare-fun getInfo/-2026026430 (var2095) var2346)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-const null-var2095 var2095)
(declare-const var607 var2095) ; Statement: r1 := @this: com.efficient.common.entity.TreeNode 
(assert (not (= var607 null-var2095)))
(define-const var3901 String String-init) ; Statement: $r0 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var3901)) ; Statement: specialinvoke $r0.<java.lang.StringBuilder: void <init>()>() 
(declare-const var3901!1 String)
(assert (= var3901!1 ""))
(assert true)
(define-const var1228 String (append/672562846 var3901!1 "TreeNode(id=")) ; Statement: $r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TreeNode(id=") 
(declare-const var3901!2 String)
(assert (= var3901!2 (str.++ var3901!1 "TreeNode(id=")))
(assert true)
(define-const var2760 String (getId/-1980942621 var607)) ; Statement: $r2 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.lang.String getId()>() 
(assert true)
(define-const var2134 String (append/672562846 var1228 var2760)) ; Statement: $r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2) 
(declare-const var1228!1 String)
(assert (= var1228!1 (str.++ var1228 var2760)))
(assert true)
(define-const var3008 String (append/672562846 var2134 ", parentId=")) ; Statement: $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", parentId=") 
(declare-const var2134!1 String)
(assert (= var2134!1 (str.++ var2134 ", parentId=")))
(assert true)
(define-const var508 String (getParentId/1008104345 var607)) ; Statement: $r5 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.lang.String getParentId()>() 
(assert true)
(define-const var1467 String (append/672562846 var3008 var508)) ; Statement: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) 
(declare-const var3008!1 String)
(assert (= var3008!1 (str.++ var3008 var508)))
(assert true)
(define-const var779 String (append/672562846 var1467 ", code=")) ; Statement: $r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", code=") 
(declare-const var1467!1 String)
(assert (= var1467!1 (str.++ var1467 ", code=")))
(assert true)
(define-const var1939 String (getCode/-1673301871 var607)) ; Statement: $r8 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.lang.String getCode()>() 
(assert true)
(define-const var1291 String (append/672562846 var779 var1939)) ; Statement: $r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8) 
(declare-const var779!1 String)
(assert (= var779!1 (str.++ var779 var1939)))
(assert true)
(define-const var1928 String (append/672562846 var1291 ", name=")) ; Statement: $r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", name=") 
(declare-const var1291!1 String)
(assert (= var1291!1 (str.++ var1291 ", name=")))
(assert true)
(define-const var2337 String (getName/-893192397 var607)) ; Statement: $r11 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.lang.String getName()>() 
(assert true)
(define-const var1761 String (append/672562846 var1928 var2337)) ; Statement: $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11) 
(declare-const var1928!1 String)
(assert (= var1928!1 (str.++ var1928 var2337)))
(assert true)
(define-const var103 String (append/672562846 var1761 ", order=")) ; Statement: $r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", order=") 
(declare-const var1761!1 String)
(assert (= var1761!1 (str.++ var1761 ", order=")))
(assert true)
(define-const var2192 Int (getOrder/1094141721 var607)) ; Statement: $r14 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.lang.Long getOrder()>() 
(assert true)
(define-const var604 String (append/-1031950772 var103 (cast-from-Int-to-var2346 var2192))) ; Statement: $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14) 
(declare-const var103!1 String)
(assert (str.prefixof var103 var103!1))
(assert true)
(define-const var672 String (append/672562846 var604 ", isLeaf=")) ; Statement: $r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isLeaf=") 
(declare-const var604!1 String)
(assert (= var604!1 (str.++ var604 ", isLeaf=")))
(assert true)
(define-const var2950 var1720 (getIsLeaf/-653459217 var607)) ; Statement: $r17 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.lang.Boolean getIsLeaf()>() 
(assert true)
(define-const var370 String (append/-1031950772 var672 (cast-from-var1720-to-var2346 var2950))) ; Statement: $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17) 
(declare-const var672!1 String)
(assert (str.prefixof var672 var672!1))
(assert true)
(define-const var343 String (append/672562846 var370 ", isRoot=")) ; Statement: $r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isRoot=") 
(declare-const var370!1 String)
(assert (= var370!1 (str.++ var370 ", isRoot=")))
(assert true)
(define-const var3160 var1720 (getIsRoot/676233451 var607)) ; Statement: $r20 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.lang.Boolean getIsRoot()>() 
(assert true)
(define-const var1738 String (append/-1031950772 var343 (cast-from-var1720-to-var2346 var3160))) ; Statement: $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20) 
(declare-const var343!1 String)
(assert (str.prefixof var343 var343!1))
(assert true)
(define-const var3077 String (append/672562846 var1738 ", children=")) ; Statement: $r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", children=") 
(declare-const var1738!1 String)
(assert (= var1738!1 (str.++ var1738 ", children=")))
(assert true)
(define-const var3964 var3735 (getChildren/2082502822 var607)) ; Statement: $r23 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.util.List getChildren()>() 
(assert true)
(define-const var1047 String (append/-1031950772 var3077 (cast-from-var3735-to-var2346 var3964))) ; Statement: $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23) 
(declare-const var3077!1 String)
(assert (str.prefixof var3077 var3077!1))
(assert true)
(define-const var932 String (append/672562846 var1047 ", info=")) ; Statement: $r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", info=") 
(declare-const var1047!1 String)
(assert (= var1047!1 (str.++ var1047 ", info=")))
(assert true)
(define-const var3016 var2346 (getInfo/-2026026430 var607)) ; Statement: $r26 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.lang.Object getInfo()>() 
(assert true)
(define-const var1946 String (append/-1031950772 var932 var3016)) ; Statement: $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26) 
(declare-const var932!1 String)
(assert (str.prefixof var932 var932!1))
(assert true)
(define-const var2266 String (append/672562846 var1946 ")")) ; Statement: $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") 
(declare-const var1946!1 String)
(assert (= var1946!1 (str.++ var1946 ")")))
(assert true)
(define-const var3756 String (toString/-2075883882 var2266)) ; Statement: $r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>() 
 ; Statement: return $r30 
(check-sat)
(get-model)
(get-unsat-core)
; {String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), getId/-1980942621=([com.efficient.common.entity.TreeNode], java.lang.String), getParentId/1008104345=([com.efficient.common.entity.TreeNode], java.lang.String), getCode/-1673301871=([com.efficient.common.entity.TreeNode], java.lang.String), getName/-893192397=([com.efficient.common.entity.TreeNode], java.lang.String), getOrder/1094141721=([com.efficient.common.entity.TreeNode], java.lang.Long), append/-1031950772=([java.lang.StringBuilder, java.lang.Object], java.lang.StringBuilder), cast-from-Int-to-var2346=([java.lang.Long], java.lang.Object), getIsLeaf/-653459217=([com.efficient.common.entity.TreeNode], java.lang.Boolean), cast-from-var1720-to-var2346=([java.lang.Boolean], java.lang.Object), getIsRoot/676233451=([com.efficient.common.entity.TreeNode], java.lang.Boolean), getChildren/2082502822=([com.efficient.common.entity.TreeNode], java.util.List), cast-from-var3735-to-var2346=([java.util.List], java.lang.Object), getInfo/-2026026430=([com.efficient.common.entity.TreeNode], java.lang.Object), toString/-2075883882=([java.lang.StringBuilder], java.lang.String)}
; {var2095=com.efficient.common.entity.TreeNode, var607=r1, var3901=$r0, var1228=$r3, var2760=$r2, var2134=$r4, var3008=$r6, var508=$r5, var1467=$r7, var779=$r9, var1939=$r8, var1291=$r10, var1928=$r12, var2337=$r11, var1761=$r13, var103=$r15, var2192=$r14, var2346=java.lang.Object, var604=$r16, var672=$r18, var1720=java.lang.Boolean, var2950=$r17, var370=$r19, var343=$r21, var3160=$r20, var1738=$r22, var3077=$r24, var3735=java.util.List, var3964=$r23, var1047=$r25, var932=$r27, var3016=$r26, var1946=$r28, var2266=$r29, var3756=$r30}
; {com.efficient.common.entity.TreeNode=var2095, r1=var607, $r0=var3901, $r3=var1228, $r2=var2760, $r4=var2134, $r6=var3008, $r5=var508, $r7=var1467, $r9=var779, $r8=var1939, $r10=var1291, $r12=var1928, $r11=var2337, $r13=var1761, $r15=var103, $r14=var2192, java.lang.Object=var2346, $r16=var604, $r18=var672, java.lang.Boolean=var1720, $r17=var2950, $r19=var370, $r21=var343, $r20=var3160, $r22=var1738, $r24=var3077, java.util.List=var3735, $r23=var3964, $r25=var1047, $r27=var932, $r26=var3016, $r28=var1946, $r29=var2266, $r30=var3756}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 14,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 5,"<java.lang.StringBuilder: java.lang.String toString()>": 1}
;stmts r1 := @this: com.efficient.common.entity.TreeNode;	$r0 = new java.lang.StringBuilder;	specialinvoke $r0.<java.lang.StringBuilder: void <init>()>();	$r3 = virtualinvoke $r0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("TreeNode(id=");	$r2 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.lang.String getId()>();	$r4 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r2);	$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", parentId=");	$r5 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.lang.String getParentId()>();	$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);	$r9 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", code=");	$r8 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.lang.String getCode()>();	$r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r8);	$r12 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", name=");	$r11 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.lang.String getName()>();	$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r11);	$r15 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", order=");	$r14 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.lang.Long getOrder()>();	$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r14);	$r18 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isLeaf=");	$r17 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.lang.Boolean getIsLeaf()>();	$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r17);	$r21 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", isRoot=");	$r20 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.lang.Boolean getIsRoot()>();	$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r20);	$r24 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", children=");	$r23 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.util.List getChildren()>();	$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r23);	$r27 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", info=");	$r26 = virtualinvoke r1.<com.efficient.common.entity.TreeNode: java.lang.Object getInfo()>();	$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r26);	$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");	$r30 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.String toString()>();	return $r30
;block_num 1