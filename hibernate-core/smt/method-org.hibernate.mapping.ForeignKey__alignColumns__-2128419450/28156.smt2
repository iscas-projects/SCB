(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var1498 0)
(declare-sort var1161 0)
(declare-sort var1948 0)
(declare-sort var2723 0)
(declare-sort var2791 0)
(declare-sort var403 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun getPrimaryKey/-445770027 (var1161) var1948)
(declare-fun getColumnSpan/2014111773 (var2723) Int)
(declare-fun cast-from-var1948-to-var2723 (var1948) var2723)
(declare-fun cast-from-var1498-to-var2723 (var1498) var2723)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun getName/-2142322286 (var2723) String)
(declare-fun getTable/2028539592 (var2723) var1161)
(declare-fun getName/-1669825851 (var1161) String)
(declare-fun getColumnIterator/336238768 (var2723) Iterator)
(declare-fun appendColumns/1074642807 (var1498 String Iterator) void)
(declare-fun var2791-init () var2791)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-fun <init>/-1350304819 (var2791 String) void)
(declare-fun cast-from-var2791-to-var403 (var2791) var403)
(declare-const null-var1498 var1498)
(declare-const null-var1161 var1161)
(declare-const var3241 var1498) ; Statement: r2 := @this: org.hibernate.mapping.ForeignKey 
(assert (not (= var3241 null-var1498)))
(declare-const var14 var1161) ; Statement: r0 := @parameter0: org.hibernate.mapping.Table 
(assert (not (= var14 null-var1161)))
(assert true)
(define-const var1592 var1948 (getPrimaryKey/-445770027 var14)) ; Statement: $r1 = virtualinvoke r0.<org.hibernate.mapping.Table: org.hibernate.mapping.PrimaryKey getPrimaryKey()>() 
(assert true)
(define-const var2769 Int (getColumnSpan/2014111773 (cast-from-var1948-to-var2723 var1592))) ; Statement: i0 = virtualinvoke $r1.<org.hibernate.mapping.PrimaryKey: int getColumnSpan()>() 
(assert true)
(define-const var1078 Int (getColumnSpan/2014111773 (cast-from-var1498-to-var2723 var3241))) ; Statement: $i1 = virtualinvoke r2.<org.hibernate.mapping.ForeignKey: int getColumnSpan()>() 
 ; Statement: if i0 == $i1 goto r26 = virtualinvoke r2.<org.hibernate.mapping.ForeignKey: java.util.Iterator getColumnIterator()>() 
(assert (not (= var2769 var1078))) ; Negate: Cond: i0 == $i1  
(define-const var941 String String-init) ; Statement: $r27 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var941)) ; Statement: specialinvoke $r27.<java.lang.StringBuilder: void <init>()>() 
(declare-const var941!1 String)
(assert (= var941!1 ""))
(assert true)
(define-const var3320 String (append/672562846 var941!1 "Foreign key (")) ; Statement: $r11 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Foreign key (") 
(declare-const var941!2 String)
(assert (= var941!2 (str.++ var941!1 "Foreign key (")))
(assert true)
(define-const var802 String (getName/-2142322286 (cast-from-var1498-to-var2723 var3241))) ; Statement: $r10 = virtualinvoke r2.<org.hibernate.mapping.ForeignKey: java.lang.String getName()>() 
(assert true)
(define-const var2776 String (append/672562846 var3320 var802)) ; Statement: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) 
(declare-const var3320!1 String)
(assert (= var3320!1 (str.++ var3320 var802)))
(assert true)
(define-const var406 String (append/672562846 var2776 ":")) ; Statement: $r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":") 
(declare-const var2776!1 String)
(assert (= var2776!1 (str.++ var2776 ":")))
(assert true)
(define-const var167 var1161 (getTable/2028539592 (cast-from-var1498-to-var2723 var3241))) ; Statement: $r13 = virtualinvoke r2.<org.hibernate.mapping.ForeignKey: org.hibernate.mapping.Table getTable()>() 
(assert true)
(define-const var446 String (getName/-1669825851 var167)) ; Statement: $r14 = virtualinvoke $r13.<org.hibernate.mapping.Table: java.lang.String getName()>() 
(assert true)
(define-const var1813 String (append/672562846 var406 var446)) ; Statement: $r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14) 
(declare-const var406!1 String)
(assert (= var406!1 (str.++ var406 var446)))
(assert true)
;(assert (append/672562846 var1813 " [")) ; Statement: virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [") 
(declare-const var1813!1 String)
(assert (= var1813!1 (str.++ var1813 " [")))
(assert true)
(define-const var1408 Iterator (getColumnIterator/336238768 (cast-from-var1498-to-var2723 var3241))) ; Statement: $r17 = virtualinvoke r2.<org.hibernate.mapping.ForeignKey: java.util.Iterator getColumnIterator()>() 
(assert true)
;(assert (appendColumns/1074642807 var3241 var941!2 var1408)) ; Statement: specialinvoke r2.<org.hibernate.mapping.ForeignKey: void appendColumns(java.lang.StringBuilder,java.util.Iterator)>($r27, $r17) 

(declare-const var3241!1 var1498)
(declare-const var941!3 String)
(declare-const var1408!1 Iterator)
(assert true)
(define-const var3329 String (append/672562846 var941!3 "])")) ; Statement: $r18 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("])") 
(declare-const var941!4 String)
(assert (= var941!4 (str.++ var941!3 "])")))
(assert true)
(define-const var2502 String (append/672562846 var3329 ") must have same number of columns as the referenced primary key (")) ; Statement: $r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must have same number of columns as the referenced primary key (") 
(declare-const var3329!1 String)
(assert (= var3329!1 (str.++ var3329 ") must have same number of columns as the referenced primary key (")))
(assert true)
(define-const var3930 String (getName/-1669825851 var14)) ; Statement: $r19 = virtualinvoke r0.<org.hibernate.mapping.Table: java.lang.String getName()>() 
(assert true)
(define-const var3198 String (append/672562846 var2502 var3930)) ; Statement: $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19) 
(declare-const var2502!1 String)
(assert (= var2502!1 (str.++ var2502 var3930)))
(assert true)
;(assert (append/672562846 var3198 " [")) ; Statement: virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [") 
(declare-const var3198!1 String)
(assert (= var3198!1 (str.++ var3198 " [")))
(assert true)
(define-const var193 var1948 (getPrimaryKey/-445770027 var14)) ; Statement: $r22 = virtualinvoke r0.<org.hibernate.mapping.Table: org.hibernate.mapping.PrimaryKey getPrimaryKey()>() 
(assert true)
(define-const var2801 Iterator (getColumnIterator/336238768 (cast-from-var1948-to-var2723 var193))) ; Statement: $r23 = virtualinvoke $r22.<org.hibernate.mapping.PrimaryKey: java.util.Iterator getColumnIterator()>() 
(assert true)
;(assert (appendColumns/1074642807 var3241!1 var941!4 var2801)) ; Statement: specialinvoke r2.<org.hibernate.mapping.ForeignKey: void appendColumns(java.lang.StringBuilder,java.util.Iterator)>($r27, $r23) 

(declare-const var3241!2 var1498)
(declare-const var941!5 String)
(declare-const var2801!1 Iterator)
(assert true)
;(assert (append/672562846 var941!5 "])")) ; Statement: virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("])") 
(declare-const var941!6 String)
(assert (= var941!6 (str.++ var941!5 "])")))
(define-const var233 var2791 var2791-init) ; Statement: $r28 = new org.hibernate.MappingException 
(assert true)
(define-const var1913 String (toString/-2075883882 var941!6)) ; Statement: $r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (<init>/-1350304819 var233 var1913)) ; Statement: specialinvoke $r28.<org.hibernate.MappingException: void <init>(java.lang.String)>($r25) 

(declare-const var233!1 var2791)
(declare-const var1913!1 String)
(define-const var2558 var403 (cast-from-var2791-to-var403 var233!1)) ; Statement: $r29 = (java.lang.Throwable) $r28 
 ; Statement: throw $r29 
(check-sat)
(get-model)
(get-unsat-core)
; {getPrimaryKey/-445770027=([org.hibernate.mapping.Table], org.hibernate.mapping.PrimaryKey), getColumnSpan/2014111773=([org.hibernate.mapping.Constraint], int), cast-from-var1948-to-var2723=([org.hibernate.mapping.PrimaryKey], org.hibernate.mapping.Constraint), cast-from-var1498-to-var2723=([org.hibernate.mapping.ForeignKey], org.hibernate.mapping.Constraint), String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), getName/-2142322286=([org.hibernate.mapping.Constraint], java.lang.String), getTable/2028539592=([org.hibernate.mapping.Constraint], org.hibernate.mapping.Table), getName/-1669825851=([org.hibernate.mapping.Table], java.lang.String), getColumnIterator/336238768=([org.hibernate.mapping.Constraint], java.util.Iterator), appendColumns/1074642807=([org.hibernate.mapping.ForeignKey, java.lang.StringBuilder, java.util.Iterator], void), var2791-init=([], org.hibernate.MappingException), toString/-2075883882=([java.lang.StringBuilder], java.lang.String), <init>/-1350304819=([org.hibernate.MappingException, java.lang.String], void), cast-from-var2791-to-var403=([org.hibernate.MappingException], java.lang.Throwable)}
; {var1498=org.hibernate.mapping.ForeignKey, var3241=r2, var1161=org.hibernate.mapping.Table, var14=r0, var1948=org.hibernate.mapping.PrimaryKey, var1592=$r1, var2723=org.hibernate.mapping.Constraint, var2769=i0, var1078=$i1, var941=$r27, var3320=$r11, var802=$r10, var2776=$r12, var406=$r15, var167=$r13, var446=$r14, var1813=$r16, var1408=$r17, var3329=$r18, var2502=$r20, var3930=$r19, var3198=$r21, var193=$r22, var2801=$r23, var2791=org.hibernate.MappingException, var233=$r28, var1913=$r25, var403=java.lang.Throwable, var2558=$r29}
; {org.hibernate.mapping.ForeignKey=var1498, r2=var3241, org.hibernate.mapping.Table=var1161, r0=var14, org.hibernate.mapping.PrimaryKey=var1948, $r1=var1592, org.hibernate.mapping.Constraint=var2723, i0=var2769, $i1=var1078, $r27=var941, $r11=var3320, $r10=var802, $r12=var2776, $r15=var406, $r13=var167, $r14=var446, $r16=var1813, $r17=var1408, $r18=var3329, $r20=var2502, $r19=var3930, $r21=var3198, $r22=var193, $r23=var2801, org.hibernate.MappingException=var2791, $r28=var233, $r25=var1913, java.lang.Throwable=var403, $r29=var2558}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 10,"<java.lang.StringBuilder: java.lang.String toString()>": 1}
;stmts r2 := @this: org.hibernate.mapping.ForeignKey;	r0 := @parameter0: org.hibernate.mapping.Table;	$r1 = virtualinvoke r0.<org.hibernate.mapping.Table: org.hibernate.mapping.PrimaryKey getPrimaryKey()>();	i0 = virtualinvoke $r1.<org.hibernate.mapping.PrimaryKey: int getColumnSpan()>();	$i1 = virtualinvoke r2.<org.hibernate.mapping.ForeignKey: int getColumnSpan()>();	if i0 == $i1 goto r26 = virtualinvoke r2.<org.hibernate.mapping.ForeignKey: java.util.Iterator getColumnIterator()>();	$r27 = new java.lang.StringBuilder;	specialinvoke $r27.<java.lang.StringBuilder: void <init>()>();	$r11 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Foreign key (");	$r10 = virtualinvoke r2.<org.hibernate.mapping.ForeignKey: java.lang.String getName()>();	$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);	$r15 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");	$r13 = virtualinvoke r2.<org.hibernate.mapping.ForeignKey: org.hibernate.mapping.Table getTable()>();	$r14 = virtualinvoke $r13.<org.hibernate.mapping.Table: java.lang.String getName()>();	$r16 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r14);	virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");	$r17 = virtualinvoke r2.<org.hibernate.mapping.ForeignKey: java.util.Iterator getColumnIterator()>();	specialinvoke r2.<org.hibernate.mapping.ForeignKey: void appendColumns(java.lang.StringBuilder,java.util.Iterator)>($r27, $r17);	$r18 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("])");	$r20 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") must have same number of columns as the referenced primary key (");	$r19 = virtualinvoke r0.<org.hibernate.mapping.Table: java.lang.String getName()>();	$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r19);	virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" [");	$r22 = virtualinvoke r0.<org.hibernate.mapping.Table: org.hibernate.mapping.PrimaryKey getPrimaryKey()>();	$r23 = virtualinvoke $r22.<org.hibernate.mapping.PrimaryKey: java.util.Iterator getColumnIterator()>();	specialinvoke r2.<org.hibernate.mapping.ForeignKey: void appendColumns(java.lang.StringBuilder,java.util.Iterator)>($r27, $r23);	virtualinvoke $r27.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("])");	$r28 = new org.hibernate.MappingException;	$r25 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();	specialinvoke $r28.<org.hibernate.MappingException: void <init>(java.lang.String)>($r25);	$r29 = (java.lang.Throwable) $r28;	throw $r29
;block_num 2