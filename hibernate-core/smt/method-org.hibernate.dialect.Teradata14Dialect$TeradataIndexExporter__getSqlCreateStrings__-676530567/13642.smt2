(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var1060 0)
(declare-sort var609 0)
(declare-sort var1664 0)
(declare-sort var502 0)
(declare-sort var1557 0)
(declare-sort var922 0)
(declare-sort var2133 0)
(declare-sort var2606 0)
(declare-sort var7 0)
(declare-sort var3592 0)
(declare-sort var1207 0)
(declare-sort var1418 0)
(declare-sort var1133 0)
(declare-sort var2124 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun var1664_getDatabase/193995574 (var1664) var1557)
(declare-fun getJdbcEnvironment/-2057911686 (var1557) var922)
(declare-fun getTable/-2097669385 (var609) var2133)
(declare-fun getQualifiedTableName/-853736433 (var2133) var2606)
(declare-fun var502_format/1204537082 (var502 var2606) String)
(declare-fun var7_getDialect/1656342179 () var7)
(declare-fun qualifyIndexName/1384883955 (var7) Bool)
(declare-fun var3592-init () var3592)
(declare-fun getCatalogName/1959036760 (var1418) var1207)
(declare-fun cast-from-var2606-to-var1418 (var2606) var1418)
(declare-fun getSchemaName/569056114 (var1418) var1207)
(declare-fun var922_getIdentifierHelper/-1421270953 (var922) var1133)
(declare-fun getName/-354198463 (var609) String)
(declare-fun var1133_toIdentifier/169392155 (var1133 String) var1207)
(declare-fun <init>/-438001224 (var3592 var1207 var1207 var1207) void)
(declare-fun var502_format/543602932 (var502 var2124) String)
(declare-fun cast-from-var3592-to-var2124 (var3592) var2124)
(declare-fun String-init () String)
(define-fun <init>/-1061048412 ((s String)) String s)
(declare-fun getColumnIterator/504997087 (var609) Iterator)
(declare-fun Iterator_hasNext/-1669924200 (Iterator) Bool)
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(define-fun <init>/1968657023 () String "")
(declare-fun append/-1166366385 (String Int) String)
(define-fun append/-13659068 ((s String) (tail String)) String (str.++ s tail))
(define-fun cast-from-String-to-String ((arg String)) String arg)
(declare-fun arr-String-init () (Array Int String))
(define-fun toString/-2075883882 ((s String)) String s)
(declare-const null-var1060 var1060)
(declare-const null-var609 var609)
(declare-const null-var1664 var1664)
(declare-const null-var502 var502)
(declare-const null-__Array__Int__String__ (Array Int String))
(declare-const var3694 var1060) ; Statement: r32 := @this: org.hibernate.dialect.Teradata14Dialect$TeradataIndexExporter 
(assert (not (= var3694 null-var1060)))
(declare-const var689 var609) ; Statement: r4 := @parameter0: org.hibernate.mapping.Index 
(assert (not (= var689 null-var609)))
(declare-const var2696 var1664) ; Statement: r0 := @parameter1: org.hibernate.boot.Metadata 
(assert (not (= var2696 null-var1664)))
(declare-const var544 var502) ; Statement: r3 := @parameter2: org.hibernate.boot.model.relational.SqlStringGenerationContext 
(assert (not (= var544 null-var502)))
(define-const var2022 var1557 (var1664_getDatabase/193995574 var2696)) ; Statement: $r1 = interfaceinvoke r0.<org.hibernate.boot.Metadata: org.hibernate.boot.model.relational.Database getDatabase()>() 
(assert true)
(define-const var3286 var922 (getJdbcEnvironment/-2057911686 var2022)) ; Statement: r2 = virtualinvoke $r1.<org.hibernate.boot.model.relational.Database: org.hibernate.engine.jdbc.env.spi.JdbcEnvironment getJdbcEnvironment()>() 
(assert true)
(define-const var1378 var2133 (getTable/-2097669385 var689)) ; Statement: $r5 = virtualinvoke r4.<org.hibernate.mapping.Index: org.hibernate.mapping.Table getTable()>() 
(assert true)
(define-const var3588 var2606 (getQualifiedTableName/-853736433 var1378)) ; Statement: $r6 = virtualinvoke $r5.<org.hibernate.mapping.Table: org.hibernate.boot.model.relational.QualifiedTableName getQualifiedTableName()>() 
(define-const var3659 String (var502_format/1204537082 var544 var3588)) ; Statement: r7 = interfaceinvoke r3.<org.hibernate.boot.model.relational.SqlStringGenerationContext: java.lang.String format(org.hibernate.boot.model.relational.QualifiedTableName)>($r6) 
(define-const var1084 var7 var7_getDialect/1656342179) ; Statement: $r8 = staticinvoke <org.hibernate.dialect.Dialect: org.hibernate.dialect.Dialect getDialect()>() 
(assert true)
(define-const var3730 Bool (qualifyIndexName/1384883955 var1084)) ; Statement: $z0 = virtualinvoke $r8.<org.hibernate.dialect.Dialect: boolean qualifyIndexName()>() 
 ; Statement: if $z0 == 0 goto r33 = virtualinvoke r4.<org.hibernate.mapping.Index: java.lang.String getName()>() 
(assert (not (= (ite var3730 1 0) 0))) ; Negate: Cond: $z0 == 0  
(define-const var1812 var3592 var3592-init) ; Statement: $r21 = new org.hibernate.boot.model.relational.QualifiedNameImpl 
(assert true)
(define-const var2246 var2133 (getTable/-2097669385 var689)) ; Statement: $r22 = virtualinvoke r4.<org.hibernate.mapping.Index: org.hibernate.mapping.Table getTable()>() 
(assert true)
(define-const var480 var2606 (getQualifiedTableName/-853736433 var2246)) ; Statement: $r23 = virtualinvoke $r22.<org.hibernate.mapping.Table: org.hibernate.boot.model.relational.QualifiedTableName getQualifiedTableName()>() 
(assert true)
(define-const var919 var1207 (getCatalogName/1959036760 (cast-from-var2606-to-var1418 var480))) ; Statement: $r30 = virtualinvoke $r23.<org.hibernate.boot.model.relational.QualifiedTableName: org.hibernate.boot.model.naming.Identifier getCatalogName()>() 
(assert true)
(define-const var1498 var2133 (getTable/-2097669385 var689)) ; Statement: $r24 = virtualinvoke r4.<org.hibernate.mapping.Index: org.hibernate.mapping.Table getTable()>() 
(assert true)
(define-const var2431 var2606 (getQualifiedTableName/-853736433 var1498)) ; Statement: $r25 = virtualinvoke $r24.<org.hibernate.mapping.Table: org.hibernate.boot.model.relational.QualifiedTableName getQualifiedTableName()>() 
(assert true)
(define-const var3454 var1207 (getSchemaName/569056114 (cast-from-var2606-to-var1418 var2431))) ; Statement: $r29 = virtualinvoke $r25.<org.hibernate.boot.model.relational.QualifiedTableName: org.hibernate.boot.model.naming.Identifier getSchemaName()>() 
(define-const var1145 var1133 (var922_getIdentifierHelper/-1421270953 var3286)) ; Statement: $r27 = interfaceinvoke r2.<org.hibernate.engine.jdbc.env.spi.JdbcEnvironment: org.hibernate.engine.jdbc.env.spi.IdentifierHelper getIdentifierHelper()>() 
(assert true)
(define-const var129 String (getName/-354198463 var689)) ; Statement: $r26 = virtualinvoke r4.<org.hibernate.mapping.Index: java.lang.String getName()>() 
(define-const var3560 var1207 (var1133_toIdentifier/169392155 var1145 var129)) ; Statement: $r28 = interfaceinvoke $r27.<org.hibernate.engine.jdbc.env.spi.IdentifierHelper: org.hibernate.boot.model.naming.Identifier toIdentifier(java.lang.String)>($r26) 
(assert true)
;(assert (<init>/-438001224 var1812 var919 var3454 var3560)) ; Statement: specialinvoke $r21.<org.hibernate.boot.model.relational.QualifiedNameImpl: void <init>(org.hibernate.boot.model.naming.Identifier,org.hibernate.boot.model.naming.Identifier,org.hibernate.boot.model.naming.Identifier)>($r30, $r29, $r28) 

(declare-const var1812!1 var3592)
(declare-const var919!1 var1207)
(declare-const var3454!1 var1207)
(declare-const var3560!1 var1207)
(define-const var380 String (var502_format/543602932 var544 (cast-from-var3592-to-var2124 var1812!1))) ; Statement: r33 = interfaceinvoke r3.<org.hibernate.boot.model.relational.SqlStringGenerationContext: java.lang.String format(org.hibernate.boot.model.relational.QualifiedName)>($r21) 
 ; Statement: goto [?= $r9 = new java.lang.StringBuilder] 
(assert true) ; Non Conditional
(define-const var3485 String String-init) ; Statement: $r9 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/-1061048412 var3485 "")) ; Statement: specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("") 
(declare-const var3485!1 String)
(assert (= var3485!1 ""))
(define-const var1988 Bool (ite (= 1 1) true false)) ; Statement: z1 = 1 
(assert true)
(define-const var2649 Iterator (getColumnIterator/504997087 var689)) ; Statement: $r31 = virtualinvoke r4.<org.hibernate.mapping.Index: java.util.Iterator getColumnIterator()>() 
(assert true) ; Non Conditional
(define-const var2302 Bool (Iterator_hasNext/-1669924200 var2649)) ; Statement: $z2 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>() 
 ; Statement: if $z2 == 0 goto virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") 
(assert (= (ite var2302 1 0) 0)) ; Cond: $z2 == 0 
(assert true)
;(assert (append/672562846 var3485!1 ")")) ; Statement: virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") 
(declare-const var3485!2 String)
(assert (= var3485!2 (str.++ var3485!1 ")")))
(define-const var1737 String String-init) ; Statement: $r10 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var1737)) ; Statement: specialinvoke $r10.<java.lang.StringBuilder: void <init>()>() 
(declare-const var1737!1 String)
(assert (= var1737!1 ""))
(assert true)
(define-const var1131 String (append/672562846 var1737!1 "create index ")) ; Statement: $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("create index ") 
(declare-const var1737!2 String)
(assert (= var1737!2 (str.++ var1737!1 "create index ")))
(assert true)
(define-const var3786 String (append/672562846 var1131 var380)) ; Statement: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33) 
(declare-const var1131!1 String)
(assert (= var1131!1 (str.++ var1131 var380)))
(assert true)
(define-const var1979 String (append/-1166366385 var3786 40)) ; Statement: $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40) 
(declare-const var3786!1 String)
(assert (str.prefixof var3786 var3786!1))
(assert true)
(define-const var171 String (append/-13659068 var1979 (cast-from-String-to-String var3485!2))) ; Statement: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r9) 
(declare-const var1979!1 String)
(assert (str.prefixof var1979 var1979!1))
(assert true)
(define-const var895 String (append/672562846 var171 " on ")) ; Statement: $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ") 
(declare-const var171!1 String)
(assert (= var171!1 (str.++ var171 " on ")))
(assert true)
(define-const var1161 String (append/672562846 var895 var3659)) ; Statement: r35 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7) 
(declare-const var895!1 String)
(assert (= var895!1 (str.++ var895 var3659)))
(define-const var319 (Array Int String) arr-String-init) ; Statement: $r16 = newarray (java.lang.String)[1] 
(assert true)
(define-const var124 String (toString/-2075883882 var1161)) ; Statement: $r17 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>() 
(declare-const var319!1 (Array Int String))
(assert (not (= var319!1 null-__Array__Int__String__)))
(assert (= (select var319!1 0) var124)) ; Statement: $r16[0] = $r17 
 ; Statement: return $r16 
(check-sat)
(get-model)
(get-unsat-core)
; {var1664_getDatabase/193995574=([org.hibernate.boot.Metadata], org.hibernate.boot.model.relational.Database), getJdbcEnvironment/-2057911686=([org.hibernate.boot.model.relational.Database], org.hibernate.engine.jdbc.env.spi.JdbcEnvironment), getTable/-2097669385=([org.hibernate.mapping.Index], org.hibernate.mapping.Table), getQualifiedTableName/-853736433=([org.hibernate.mapping.Table], org.hibernate.boot.model.relational.QualifiedTableName), var502_format/1204537082=([org.hibernate.boot.model.relational.SqlStringGenerationContext, org.hibernate.boot.model.relational.QualifiedTableName], java.lang.String), var7_getDialect/1656342179=([], org.hibernate.dialect.Dialect), qualifyIndexName/1384883955=([org.hibernate.dialect.Dialect], boolean), var3592-init=([], org.hibernate.boot.model.relational.QualifiedNameImpl), getCatalogName/1959036760=([org.hibernate.boot.model.relational.QualifiedNameParser$NameParts], org.hibernate.boot.model.naming.Identifier), cast-from-var2606-to-var1418=([org.hibernate.boot.model.relational.QualifiedTableName], org.hibernate.boot.model.relational.QualifiedNameParser$NameParts), getSchemaName/569056114=([org.hibernate.boot.model.relational.QualifiedNameParser$NameParts], org.hibernate.boot.model.naming.Identifier), var922_getIdentifierHelper/-1421270953=([org.hibernate.engine.jdbc.env.spi.JdbcEnvironment], org.hibernate.engine.jdbc.env.spi.IdentifierHelper), getName/-354198463=([org.hibernate.mapping.Index], java.lang.String), var1133_toIdentifier/169392155=([org.hibernate.engine.jdbc.env.spi.IdentifierHelper, java.lang.String], org.hibernate.boot.model.naming.Identifier), <init>/-438001224=([org.hibernate.boot.model.relational.QualifiedNameImpl, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier, org.hibernate.boot.model.naming.Identifier], void), var502_format/543602932=([org.hibernate.boot.model.relational.SqlStringGenerationContext, org.hibernate.boot.model.relational.QualifiedName], java.lang.String), cast-from-var3592-to-var2124=([org.hibernate.boot.model.relational.QualifiedNameImpl], org.hibernate.boot.model.relational.QualifiedName), String-init=([], java.lang.StringBuilder), <init>/-1061048412=([java.lang.StringBuilder, java.lang.String], void), getColumnIterator/504997087=([org.hibernate.mapping.Index], java.util.Iterator), Iterator_hasNext/-1669924200=([java.util.Iterator], boolean), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/-1166366385=([java.lang.StringBuilder, char], java.lang.StringBuilder), append/-13659068=([java.lang.StringBuilder, java.lang.CharSequence], java.lang.StringBuilder), cast-from-String-to-String=([java.lang.StringBuilder], java.lang.CharSequence), arr-String-init=([], java.lang.String[]), toString/-2075883882=([java.lang.StringBuilder], java.lang.String)}
; {var1060=org.hibernate.dialect.Teradata14Dialect$TeradataIndexExporter, var3694=r32, var609=org.hibernate.mapping.Index, var689=r4, var1664=org.hibernate.boot.Metadata, var2696=r0, var502=org.hibernate.boot.model.relational.SqlStringGenerationContext, var544=r3, var1557=org.hibernate.boot.model.relational.Database, var2022=$r1, var922=org.hibernate.engine.jdbc.env.spi.JdbcEnvironment, var3286=r2, var2133=org.hibernate.mapping.Table, var1378=$r5, var2606=org.hibernate.boot.model.relational.QualifiedTableName, var3588=$r6, var3659=r7, var7=org.hibernate.dialect.Dialect, var1084=$r8, var3730=$z0, var3592=org.hibernate.boot.model.relational.QualifiedNameImpl, var1812=$r21, var2246=$r22, var480=$r23, var1207=org.hibernate.boot.model.naming.Identifier, var1418=org.hibernate.boot.model.relational.QualifiedNameParser$NameParts, var919=$r30, var1498=$r24, var2431=$r25, var3454=$r29, var1133=org.hibernate.engine.jdbc.env.spi.IdentifierHelper, var1145=$r27, var129=$r26, var3560=$r28, var2124=org.hibernate.boot.model.relational.QualifiedName, var380=r33, var3485=$r9, var1988=z1, var2649=$r31, var2302=$z2, var1737=$r10, var1131=$r11, var3786=$r12, var1979=$r13, var171=$r14, var895=$r15, var1161=r35, var319=$r16, var124=$r17}
; {org.hibernate.dialect.Teradata14Dialect$TeradataIndexExporter=var1060, r32=var3694, org.hibernate.mapping.Index=var609, r4=var689, org.hibernate.boot.Metadata=var1664, r0=var2696, org.hibernate.boot.model.relational.SqlStringGenerationContext=var502, r3=var544, org.hibernate.boot.model.relational.Database=var1557, $r1=var2022, org.hibernate.engine.jdbc.env.spi.JdbcEnvironment=var922, r2=var3286, org.hibernate.mapping.Table=var2133, $r5=var1378, org.hibernate.boot.model.relational.QualifiedTableName=var2606, $r6=var3588, r7=var3659, org.hibernate.dialect.Dialect=var7, $r8=var1084, $z0=var3730, org.hibernate.boot.model.relational.QualifiedNameImpl=var3592, $r21=var1812, $r22=var2246, $r23=var480, org.hibernate.boot.model.naming.Identifier=var1207, org.hibernate.boot.model.relational.QualifiedNameParser$NameParts=var1418, $r30=var919, $r24=var1498, $r25=var2431, $r29=var3454, org.hibernate.engine.jdbc.env.spi.IdentifierHelper=var1133, $r27=var1145, $r26=var129, $r28=var3560, org.hibernate.boot.model.relational.QualifiedName=var2124, r33=var380, $r9=var3485, z1=var1988, $r31=var2649, $z2=var2302, $r10=var1737, $r11=var1131, $r12=var3786, $r13=var1979, $r14=var171, $r15=var895, r35=var1161, $r16=var319, $r17=var124}
;seq <java.lang.StringBuilder: void <init>(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>(java.lang.String)>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 5,"<java.lang.StringBuilder: void <init>()>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>": 1,"<java.lang.StringBuilder: java.lang.String toString()>": 1}
;stmts r32 := @this: org.hibernate.dialect.Teradata14Dialect$TeradataIndexExporter;	r4 := @parameter0: org.hibernate.mapping.Index;	r0 := @parameter1: org.hibernate.boot.Metadata;	r3 := @parameter2: org.hibernate.boot.model.relational.SqlStringGenerationContext;	$r1 = interfaceinvoke r0.<org.hibernate.boot.Metadata: org.hibernate.boot.model.relational.Database getDatabase()>();	r2 = virtualinvoke $r1.<org.hibernate.boot.model.relational.Database: org.hibernate.engine.jdbc.env.spi.JdbcEnvironment getJdbcEnvironment()>();	$r5 = virtualinvoke r4.<org.hibernate.mapping.Index: org.hibernate.mapping.Table getTable()>();	$r6 = virtualinvoke $r5.<org.hibernate.mapping.Table: org.hibernate.boot.model.relational.QualifiedTableName getQualifiedTableName()>();	r7 = interfaceinvoke r3.<org.hibernate.boot.model.relational.SqlStringGenerationContext: java.lang.String format(org.hibernate.boot.model.relational.QualifiedTableName)>($r6);	$r8 = staticinvoke <org.hibernate.dialect.Dialect: org.hibernate.dialect.Dialect getDialect()>();	$z0 = virtualinvoke $r8.<org.hibernate.dialect.Dialect: boolean qualifyIndexName()>();	if $z0 == 0 goto r33 = virtualinvoke r4.<org.hibernate.mapping.Index: java.lang.String getName()>();	$r21 = new org.hibernate.boot.model.relational.QualifiedNameImpl;	$r22 = virtualinvoke r4.<org.hibernate.mapping.Index: org.hibernate.mapping.Table getTable()>();	$r23 = virtualinvoke $r22.<org.hibernate.mapping.Table: org.hibernate.boot.model.relational.QualifiedTableName getQualifiedTableName()>();	$r30 = virtualinvoke $r23.<org.hibernate.boot.model.relational.QualifiedTableName: org.hibernate.boot.model.naming.Identifier getCatalogName()>();	$r24 = virtualinvoke r4.<org.hibernate.mapping.Index: org.hibernate.mapping.Table getTable()>();	$r25 = virtualinvoke $r24.<org.hibernate.mapping.Table: org.hibernate.boot.model.relational.QualifiedTableName getQualifiedTableName()>();	$r29 = virtualinvoke $r25.<org.hibernate.boot.model.relational.QualifiedTableName: org.hibernate.boot.model.naming.Identifier getSchemaName()>();	$r27 = interfaceinvoke r2.<org.hibernate.engine.jdbc.env.spi.JdbcEnvironment: org.hibernate.engine.jdbc.env.spi.IdentifierHelper getIdentifierHelper()>();	$r26 = virtualinvoke r4.<org.hibernate.mapping.Index: java.lang.String getName()>();	$r28 = interfaceinvoke $r27.<org.hibernate.engine.jdbc.env.spi.IdentifierHelper: org.hibernate.boot.model.naming.Identifier toIdentifier(java.lang.String)>($r26);	specialinvoke $r21.<org.hibernate.boot.model.relational.QualifiedNameImpl: void <init>(org.hibernate.boot.model.naming.Identifier,org.hibernate.boot.model.naming.Identifier,org.hibernate.boot.model.naming.Identifier)>($r30, $r29, $r28);	r33 = interfaceinvoke r3.<org.hibernate.boot.model.relational.SqlStringGenerationContext: java.lang.String format(org.hibernate.boot.model.relational.QualifiedName)>($r21);	goto [?= $r9 = new java.lang.StringBuilder];	$r9 = new java.lang.StringBuilder;	specialinvoke $r9.<java.lang.StringBuilder: void <init>(java.lang.String)>("");	z1 = 1;	$r31 = virtualinvoke r4.<org.hibernate.mapping.Index: java.util.Iterator getColumnIterator()>();	$z2 = interfaceinvoke $r31.<java.util.Iterator: boolean hasNext()>();	if $z2 == 0 goto virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");	virtualinvoke $r9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");	$r10 = new java.lang.StringBuilder;	specialinvoke $r10.<java.lang.StringBuilder: void <init>()>();	$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("create index ");	$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r33);	$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);	$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>($r9);	$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" on ");	r35 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r7);	$r16 = newarray (java.lang.String)[1];	$r17 = virtualinvoke r35.<java.lang.StringBuilder: java.lang.String toString()>();	$r16[0] = $r17;	return $r16
;block_num 5