(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var1756 0)
(declare-sort var2353 0)
(declare-sort var592 0)
(declare-sort var880 0)
(declare-sort var3682 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun isReferenceToPrimaryKey/2098061679 (var1756) Bool)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(declare-fun getClass/1258963082 (var2353) ClassObject)
(declare-fun cast-from-var1756-to-var2353 (var1756) var2353)
(declare-fun getName/-1958580599 (ClassObject) String)
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun append/-1166366385 (String Int) String)
(declare-fun getTable/2028539592 (var880) var592)
(declare-fun cast-from-var1756-to-var880 (var1756) var880)
(declare-fun getName/-1669825851 (var592) String)
(declare-fun getColumns/401315641 (var880) var3682)
(declare-fun append/-1031950772 (String var2353) String)
(declare-fun cast-from-var3682-to-var2353 (var3682) var2353)
(declare-fun getReferencedColumns/1151133792 (var1756) var3682)
(declare-fun getName/-2142322286 (var880) String)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-const null-var1756 var1756)
(declare-const var780 var1756) ; Statement: r0 := @this: org.hibernate.mapping.ForeignKey 
(assert (not (= var780 null-var1756)))
(assert true)
(define-const var1275 Bool (isReferenceToPrimaryKey/2098061679 var780)) ; Statement: $z0 = virtualinvoke r0.<org.hibernate.mapping.ForeignKey: boolean isReferenceToPrimaryKey()>() 
 ; Statement: if $z0 != 0 goto $r1 = specialinvoke r0.<org.hibernate.mapping.Constraint: java.lang.String toString()>() 
(assert (not (not (= (ite var1275 1 0) 0)))) ; Negate: Cond: $z0 != 0  
(define-const var3962 String String-init) ; Statement: $r2 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var3962)) ; Statement: specialinvoke $r2.<java.lang.StringBuilder: void <init>()>() 
(declare-const var3962!1 String)
(assert (= var3962!1 ""))
(assert true)
(define-const var2620 ClassObject (getClass/1258963082 (cast-from-var1756-to-var2353 var780))) ; Statement: $r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>() 
(assert true)
(define-const var756 String (getName/-1958580599 var2620)) ; Statement: $r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>() 
(assert true)
(define-const var1122 String (append/672562846 var3962!1 var756)) ; Statement: $r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4) 
(declare-const var3962!2 String)
(assert (= var3962!2 (str.++ var3962!1 var756)))
(assert true)
(define-const var3245 String (append/-1166366385 var1122 40)) ; Statement: $r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40) 
(declare-const var1122!1 String)
(assert (str.prefixof var1122 var1122!1))
(assert true)
(define-const var2240 var592 (getTable/2028539592 (cast-from-var1756-to-var880 var780))) ; Statement: $r6 = virtualinvoke r0.<org.hibernate.mapping.ForeignKey: org.hibernate.mapping.Table getTable()>() 
(assert true)
(define-const var854 String (getName/-1669825851 var2240)) ; Statement: $r7 = virtualinvoke $r6.<org.hibernate.mapping.Table: java.lang.String getName()>() 
(assert true)
(define-const var3139 String (append/672562846 var3245 var854)) ; Statement: $r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7) 
(declare-const var3245!1 String)
(assert (= var3245!1 (str.++ var3245 var854)))
(assert true)
(define-const var1813 var3682 (getColumns/401315641 (cast-from-var1756-to-var880 var780))) ; Statement: $r9 = virtualinvoke r0.<org.hibernate.mapping.ForeignKey: java.util.List getColumns()>() 
(assert true)
(define-const var1849 String (append/-1031950772 var3139 (cast-from-var3682-to-var2353 var1813))) ; Statement: $r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9) 
(declare-const var3139!1 String)
(assert (str.prefixof var3139 var3139!1))
(assert true)
(define-const var3254 String (append/672562846 var1849 " ref-columns:")) ; Statement: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ref-columns:") 
(declare-const var1849!1 String)
(assert (= var1849!1 (str.++ var1849 " ref-columns:")))
(assert true)
(define-const var1531 String (append/-1166366385 var3254 40)) ; Statement: $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40) 
(declare-const var3254!1 String)
(assert (str.prefixof var3254 var3254!1))
(assert true)
(define-const var485 var3682 (getReferencedColumns/1151133792 var780)) ; Statement: $r13 = virtualinvoke r0.<org.hibernate.mapping.ForeignKey: java.util.List getReferencedColumns()>() 
(assert true)
(define-const var2138 String (append/-1031950772 var1531 (cast-from-var3682-to-var2353 var485))) ; Statement: $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13) 
(declare-const var1531!1 String)
(assert (str.prefixof var1531 var1531!1))
(assert true)
(define-const var2071 String (append/672562846 var2138 ") as ")) ; Statement: $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") as ") 
(declare-const var2138!1 String)
(assert (= var2138!1 (str.++ var2138 ") as ")))
(assert true)
(define-const var980 String (getName/-2142322286 (cast-from-var1756-to-var880 var780))) ; Statement: $r16 = virtualinvoke r0.<org.hibernate.mapping.ForeignKey: java.lang.String getName()>() 
(assert true)
(define-const var641 String (append/672562846 var2071 var980)) ; Statement: $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) 
(declare-const var2071!1 String)
(assert (= var2071!1 (str.++ var2071 var980)))
(assert true)
(define-const var12 String (append/672562846 var641 ")")) ; Statement: $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")") 
(declare-const var641!1 String)
(assert (= var641!1 (str.++ var641 ")")))
(assert true)
(define-const var1129 String (toString/-2075883882 var12)) ; Statement: $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>() 
 ; Statement: return $r20 
(check-sat)
(get-model)
(get-unsat-core)
; {isReferenceToPrimaryKey/2098061679=([org.hibernate.mapping.ForeignKey], boolean), String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), getClass/1258963082=([java.lang.Object], java.lang.Class), cast-from-var1756-to-var2353=([org.hibernate.mapping.ForeignKey], java.lang.Object), getName/-1958580599=([java.lang.Class], java.lang.String), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), append/-1166366385=([java.lang.StringBuilder, char], java.lang.StringBuilder), getTable/2028539592=([org.hibernate.mapping.Constraint], org.hibernate.mapping.Table), cast-from-var1756-to-var880=([org.hibernate.mapping.ForeignKey], org.hibernate.mapping.Constraint), getName/-1669825851=([org.hibernate.mapping.Table], java.lang.String), getColumns/401315641=([org.hibernate.mapping.Constraint], java.util.List), append/-1031950772=([java.lang.StringBuilder, java.lang.Object], java.lang.StringBuilder), cast-from-var3682-to-var2353=([java.util.List], java.lang.Object), getReferencedColumns/1151133792=([org.hibernate.mapping.ForeignKey], java.util.List), getName/-2142322286=([org.hibernate.mapping.Constraint], java.lang.String), toString/-2075883882=([java.lang.StringBuilder], java.lang.String)}
; {var1756=org.hibernate.mapping.ForeignKey, var780=r0, var1275=$z0, var3962=$r2, var2353=java.lang.Object, var2620=$r3, var756=$r4, var1122=$r5, var3245=$r8, var592=org.hibernate.mapping.Table, var880=org.hibernate.mapping.Constraint, var2240=$r6, var854=$r7, var3139=$r10, var3682=java.util.List, var1813=$r9, var1849=$r11, var3254=$r12, var1531=$r14, var485=$r13, var2138=$r15, var2071=$r17, var980=$r16, var641=$r18, var12=$r19, var1129=$r20}
; {org.hibernate.mapping.ForeignKey=var1756, r0=var780, $z0=var1275, $r2=var3962, java.lang.Object=var2353, $r3=var2620, $r4=var756, $r5=var1122, $r8=var3245, org.hibernate.mapping.Table=var592, org.hibernate.mapping.Constraint=var880, $r6=var2240, $r7=var854, $r10=var3139, java.util.List=var3682, $r9=var1813, $r11=var1849, $r12=var3254, $r14=var1531, $r13=var485, $r15=var2138, $r17=var2071, $r16=var980, $r18=var641, $r19=var12, $r20=var1129}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 6,"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 2,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>": 2,"<java.lang.StringBuilder: java.lang.String toString()>": 1}
;stmts r0 := @this: org.hibernate.mapping.ForeignKey;	$z0 = virtualinvoke r0.<org.hibernate.mapping.ForeignKey: boolean isReferenceToPrimaryKey()>();	if $z0 != 0 goto $r1 = specialinvoke r0.<org.hibernate.mapping.Constraint: java.lang.String toString()>();	$r2 = new java.lang.StringBuilder;	specialinvoke $r2.<java.lang.StringBuilder: void <init>()>();	$r3 = virtualinvoke r0.<java.lang.Object: java.lang.Class getClass()>();	$r4 = virtualinvoke $r3.<java.lang.Class: java.lang.String getName()>();	$r5 = virtualinvoke $r2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r4);	$r8 = virtualinvoke $r5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);	$r6 = virtualinvoke r0.<org.hibernate.mapping.ForeignKey: org.hibernate.mapping.Table getTable()>();	$r7 = virtualinvoke $r6.<org.hibernate.mapping.Table: java.lang.String getName()>();	$r10 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r7);	$r9 = virtualinvoke r0.<org.hibernate.mapping.ForeignKey: java.util.List getColumns()>();	$r11 = virtualinvoke $r10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r9);	$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ref-columns:");	$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);	$r13 = virtualinvoke r0.<org.hibernate.mapping.ForeignKey: java.util.List getReferencedColumns()>();	$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>($r13);	$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") as ");	$r16 = virtualinvoke r0.<org.hibernate.mapping.ForeignKey: java.lang.String getName()>();	$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);	$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");	$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.String toString()>();	return $r20
;block_num 2