(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var1542 0)
(declare-sort var2305 0)
(declare-sort var315 0)
(declare-sort var377 0)
(declare-sort var3581 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun physicalTableName/427671713 (var1542) var315)
(declare-fun var2305_format/543602932 (var2305 var315) String)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun valueColumnName/427671713 (var1542) String)
(declare-fun var2305_getDialect/-253498657 (var2305) var377)
(declare-fun appendLockHint/277008783 (var377 var3581 String) String)
(declare-fun segmentColumnName/427671713 (var1542) String)
(declare-fun segmentName/427671713 (var1542) String)
(declare-fun getForUpdateString/-1674222761 (var377) String)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-fun query/427671713 (var1542) String)
(declare-fun update/427671713 (var1542) String)
(declare-fun insert/427671713 (var1542) String)
(declare-const null-var1542 var1542)
(declare-const null-var2305 var2305)
(declare-const var3581-PESSIMISTIC_WRITE var3581)
(declare-const var1262 var1542) ; Statement: r1 := @this: org.hibernate.id.MultipleHiLoPerTableGenerator 
(assert (not (= var1262 null-var1542)))
(declare-const var2547 var2305) ; Statement: r0 := @parameter0: org.hibernate.boot.model.relational.SqlStringGenerationContext 
(assert (not (= var2547 null-var2305)))
(define-const var2913 var315 (physicalTableName/427671713 var1262)) ; Statement: $r2 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: org.hibernate.boot.model.relational.QualifiedName physicalTableName> 
(define-const var2237 String (var2305_format/543602932 var2547 var2913)) ; Statement: r3 = interfaceinvoke r0.<org.hibernate.boot.model.relational.SqlStringGenerationContext: java.lang.String format(org.hibernate.boot.model.relational.QualifiedName)>($r2) 
(define-const var2714 String String-init) ; Statement: $r4 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var2714)) ; Statement: specialinvoke $r4.<java.lang.StringBuilder: void <init>()>() 
(declare-const var2714!1 String)
(assert (= var2714!1 ""))
(assert true)
(define-const var590 String (append/672562846 var2714!1 "select ")) ; Statement: $r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("select ") 
(declare-const var2714!2 String)
(assert (= var2714!2 (str.++ var2714!1 "select ")))
(define-const var489 String (valueColumnName/427671713 var1262)) ; Statement: $r5 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String valueColumnName> 
(assert true)
(define-const var1750 String (append/672562846 var590 var489)) ; Statement: $r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5) 
(declare-const var590!1 String)
(assert (= var590!1 (str.++ var590 var489)))
(assert true)
(define-const var40 String (append/672562846 var1750 " from ")) ; Statement: $r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ") 
(declare-const var1750!1 String)
(assert (= var1750!1 (str.++ var1750 " from ")))
(define-const var1251 var377 (var2305_getDialect/-253498657 var2547)) ; Statement: $r9 = interfaceinvoke r0.<org.hibernate.boot.model.relational.SqlStringGenerationContext: org.hibernate.dialect.Dialect getDialect()>() 
(define-const var1056 var3581 var3581-PESSIMISTIC_WRITE) ; Statement: $r8 = <org.hibernate.LockMode: org.hibernate.LockMode PESSIMISTIC_WRITE> 
(assert true)
(define-const var3173 String (appendLockHint/277008783 var1251 var1056 var2237)) ; Statement: $r10 = virtualinvoke $r9.<org.hibernate.dialect.Dialect: java.lang.String appendLockHint(org.hibernate.LockMode,java.lang.String)>($r8, r3) 
(assert true)
(define-const var2267 String (append/672562846 var40 var3173)) ; Statement: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) 
(declare-const var40!1 String)
(assert (= var40!1 (str.++ var40 var3173)))
(assert true)
(define-const var1071 String (append/672562846 var2267 " where ")) ; Statement: $r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" where ") 
(declare-const var2267!1 String)
(assert (= var2267!1 (str.++ var2267 " where ")))
(define-const var2436 String (segmentColumnName/427671713 var1262)) ; Statement: $r13 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String segmentColumnName> 
(assert true)
(define-const var1510 String (append/672562846 var1071 var2436)) ; Statement: $r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13) 
(declare-const var1071!1 String)
(assert (= var1071!1 (str.++ var1071 var2436)))
(assert true)
(define-const var1875 String (append/672562846 var1510 " = \u0027")) ; Statement: $r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = \'") 
(declare-const var1510!1 String)
(assert (= var1510!1 (str.++ var1510 " = \u0027")))
(define-const var1279 String (segmentName/427671713 var1262)) ; Statement: $r16 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String segmentName> 
(assert true)
(define-const var2703 String (append/672562846 var1875 var1279)) ; Statement: $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16) 
(declare-const var1875!1 String)
(assert (= var1875!1 (str.++ var1875 var1279)))
(assert true)
(define-const var1072 String (append/672562846 var2703 "\u0027")) ; Statement: $r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") 
(declare-const var2703!1 String)
(assert (= var2703!1 (str.++ var2703 "\u0027")))
(define-const var2838 var377 (var2305_getDialect/-253498657 var2547)) ; Statement: $r19 = interfaceinvoke r0.<org.hibernate.boot.model.relational.SqlStringGenerationContext: org.hibernate.dialect.Dialect getDialect()>() 
(assert true)
(define-const var3478 String (getForUpdateString/-1674222761 var2838)) ; Statement: $r20 = virtualinvoke $r19.<org.hibernate.dialect.Dialect: java.lang.String getForUpdateString()>() 
(assert true)
(define-const var3524 String (append/672562846 var1072 var3478)) ; Statement: $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20) 
(declare-const var1072!1 String)
(assert (= var1072!1 (str.++ var1072 var3478)))
(assert true)
(define-const var563 String (toString/-2075883882 var3524)) ; Statement: $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>() 
(declare-const var1262!1 var1542)
(assert (not (= var1262!1 null-var1542)))
(assert (= (query/427671713 var1262!1) var563)) ; Statement: r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String query> = $r23 
(define-const var3985 String String-init) ; Statement: $r24 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var3985)) ; Statement: specialinvoke $r24.<java.lang.StringBuilder: void <init>()>() 
(declare-const var3985!1 String)
(assert (= var3985!1 ""))
(assert true)
(define-const var3820 String (append/672562846 var3985!1 "update ")) ; Statement: $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update ") 
(declare-const var3985!2 String)
(assert (= var3985!2 (str.++ var3985!1 "update ")))
(assert true)
(define-const var1565 String (append/672562846 var3820 var2237)) ; Statement: $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) 
(declare-const var3820!1 String)
(assert (= var3820!1 (str.++ var3820 var2237)))
(assert true)
(define-const var2996 String (append/672562846 var1565 " set ")) ; Statement: $r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" set ") 
(declare-const var1565!1 String)
(assert (= var1565!1 (str.++ var1565 " set ")))
(define-const var50 String (valueColumnName/427671713 var1262!1)) ; Statement: $r27 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String valueColumnName> 
(assert true)
(define-const var539 String (append/672562846 var2996 var50)) ; Statement: $r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27) 
(declare-const var2996!1 String)
(assert (= var2996!1 (str.++ var2996 var50)))
(assert true)
(define-const var368 String (append/672562846 var539 " = ? where ")) ; Statement: $r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ? where ") 
(declare-const var539!1 String)
(assert (= var539!1 (str.++ var539 " = ? where ")))
(define-const var1735 String (valueColumnName/427671713 var1262!1)) ; Statement: $r30 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String valueColumnName> 
(assert true)
(define-const var440 String (append/672562846 var368 var1735)) ; Statement: $r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30) 
(declare-const var368!1 String)
(assert (= var368!1 (str.++ var368 var1735)))
(assert true)
(define-const var2733 String (append/672562846 var440 " = ? and ")) ; Statement: $r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ? and ") 
(declare-const var440!1 String)
(assert (= var440!1 (str.++ var440 " = ? and ")))
(define-const var2300 String (segmentColumnName/427671713 var1262!1)) ; Statement: $r33 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String segmentColumnName> 
(assert true)
(define-const var3350 String (append/672562846 var2733 var2300)) ; Statement: $r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33) 
(declare-const var2733!1 String)
(assert (= var2733!1 (str.++ var2733 var2300)))
(assert true)
(define-const var840 String (append/672562846 var3350 " = \u0027")) ; Statement: $r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = \'") 
(declare-const var3350!1 String)
(assert (= var3350!1 (str.++ var3350 " = \u0027")))
(define-const var3602 String (segmentName/427671713 var1262!1)) ; Statement: $r36 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String segmentName> 
(assert true)
(define-const var1357 String (append/672562846 var840 var3602)) ; Statement: $r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36) 
(declare-const var840!1 String)
(assert (= var840!1 (str.++ var840 var3602)))
(assert true)
(define-const var3224 String (append/672562846 var1357 "\u0027")) ; Statement: $r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'") 
(declare-const var1357!1 String)
(assert (= var1357!1 (str.++ var1357 "\u0027")))
(assert true)
(define-const var844 String (toString/-2075883882 var3224)) ; Statement: $r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>() 
(declare-const var1262!2 var1542)
(assert (not (= var1262!2 null-var1542)))
(assert (= (update/427671713 var1262!2) var844)) ; Statement: r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String update> = $r40 
(define-const var1930 String String-init) ; Statement: $r41 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var1930)) ; Statement: specialinvoke $r41.<java.lang.StringBuilder: void <init>()>() 
(declare-const var1930!1 String)
(assert (= var1930!1 ""))
(assert true)
(define-const var451 String (append/672562846 var1930!1 "insert into ")) ; Statement: $r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("insert into ") 
(declare-const var1930!2 String)
(assert (= var1930!2 (str.++ var1930!1 "insert into ")))
(assert true)
(define-const var2875 String (append/672562846 var451 var2237)) ; Statement: $r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3) 
(declare-const var451!1 String)
(assert (= var451!1 (str.++ var451 var2237)))
(assert true)
(define-const var191 String (append/672562846 var2875 "(")) ; Statement: $r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") 
(declare-const var2875!1 String)
(assert (= var2875!1 (str.++ var2875 "(")))
(define-const var3716 String (segmentColumnName/427671713 var1262!2)) ; Statement: $r44 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String segmentColumnName> 
(assert true)
(define-const var1759 String (append/672562846 var191 var3716)) ; Statement: $r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44) 
(declare-const var191!1 String)
(assert (= var191!1 (str.++ var191 var3716)))
(assert true)
(define-const var2062 String (append/672562846 var1759 ", ")) ; Statement: $r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ") 
(declare-const var1759!1 String)
(assert (= var1759!1 (str.++ var1759 ", ")))
(define-const var1757 String (valueColumnName/427671713 var1262!2)) ; Statement: $r47 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String valueColumnName> 
(assert true)
(define-const var979 String (append/672562846 var2062 var1757)) ; Statement: $r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47) 
(declare-const var2062!1 String)
(assert (= var2062!1 (str.++ var2062 var1757)))
(assert true)
(define-const var1861 String (append/672562846 var979 ") values(\u0027")) ; Statement: $r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") values(\'") 
(declare-const var979!1 String)
(assert (= var979!1 (str.++ var979 ") values(\u0027")))
(define-const var2020 String (segmentName/427671713 var1262!2)) ; Statement: $r50 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String segmentName> 
(assert true)
(define-const var1081 String (append/672562846 var1861 var2020)) ; Statement: $r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50) 
(declare-const var1861!1 String)
(assert (= var1861!1 (str.++ var1861 var2020)))
(assert true)
(define-const var3167 String (append/672562846 var1081 "\u0027, ?)")) ; Statement: $r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ?)") 
(declare-const var1081!1 String)
(assert (= var1081!1 (str.++ var1081 "\u0027, ?)")))
(assert true)
(define-const var552 String (toString/-2075883882 var3167)) ; Statement: $r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>() 
(declare-const var1262!3 var1542)
(assert (not (= var1262!3 null-var1542)))
(assert (= (insert/427671713 var1262!3) var552)) ; Statement: r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String insert> = $r54 
 ; Statement: return 
(check-sat)
(get-model)
(get-unsat-core)
; {physicalTableName/427671713=([org.hibernate.id.MultipleHiLoPerTableGenerator], org.hibernate.boot.model.relational.QualifiedName), var2305_format/543602932=([org.hibernate.boot.model.relational.SqlStringGenerationContext, org.hibernate.boot.model.relational.QualifiedName], java.lang.String), String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), valueColumnName/427671713=([org.hibernate.id.MultipleHiLoPerTableGenerator], java.lang.String), var2305_getDialect/-253498657=([org.hibernate.boot.model.relational.SqlStringGenerationContext], org.hibernate.dialect.Dialect), appendLockHint/277008783=([org.hibernate.dialect.Dialect, org.hibernate.LockMode, java.lang.String], java.lang.String), segmentColumnName/427671713=([org.hibernate.id.MultipleHiLoPerTableGenerator], java.lang.String), segmentName/427671713=([org.hibernate.id.MultipleHiLoPerTableGenerator], java.lang.String), getForUpdateString/-1674222761=([org.hibernate.dialect.Dialect], java.lang.String), toString/-2075883882=([java.lang.StringBuilder], java.lang.String), query/427671713=([org.hibernate.id.MultipleHiLoPerTableGenerator], java.lang.String), update/427671713=([org.hibernate.id.MultipleHiLoPerTableGenerator], java.lang.String), insert/427671713=([org.hibernate.id.MultipleHiLoPerTableGenerator], java.lang.String)}
; {var1542=org.hibernate.id.MultipleHiLoPerTableGenerator, var1262=r1, var2305=org.hibernate.boot.model.relational.SqlStringGenerationContext, var2547=r0, var315=org.hibernate.boot.model.relational.QualifiedName, var2913=$r2, var2237=r3, var2714=$r4, var590=$r6, var489=$r5, var1750=$r7, var40=$r11, var377=org.hibernate.dialect.Dialect, var1251=$r9, var3581=org.hibernate.LockMode, var1056=$r8, var3173=$r10, var2267=$r12, var1071=$r14, var2436=$r13, var1510=$r15, var1875=$r17, var1279=$r16, var2703=$r18, var1072=$r21, var2838=$r19, var3478=$r20, var3524=$r22, var563=$r23, var3985=$r24, var3820=$r25, var1565=$r26, var2996=$r28, var50=$r27, var539=$r29, var368=$r31, var1735=$r30, var440=$r32, var2733=$r34, var2300=$r33, var3350=$r35, var840=$r37, var3602=$r36, var1357=$r38, var3224=$r39, var844=$r40, var1930=$r41, var451=$r42, var2875=$r43, var191=$r45, var3716=$r44, var1759=$r46, var2062=$r48, var1757=$r47, var979=$r49, var1861=$r51, var2020=$r50, var1081=$r52, var3167=$r53, var552=$r54}
; {org.hibernate.id.MultipleHiLoPerTableGenerator=var1542, r1=var1262, org.hibernate.boot.model.relational.SqlStringGenerationContext=var2305, r0=var2547, org.hibernate.boot.model.relational.QualifiedName=var315, $r2=var2913, r3=var2237, $r4=var2714, $r6=var590, $r5=var489, $r7=var1750, $r11=var40, org.hibernate.dialect.Dialect=var377, $r9=var1251, org.hibernate.LockMode=var3581, $r8=var1056, $r10=var3173, $r12=var2267, $r14=var1071, $r13=var2436, $r15=var1510, $r17=var1875, $r16=var1279, $r18=var2703, $r21=var1072, $r19=var2838, $r20=var3478, $r22=var3524, $r23=var563, $r24=var3985, $r25=var3820, $r26=var1565, $r28=var2996, $r27=var50, $r29=var539, $r31=var368, $r30=var1735, $r32=var440, $r34=var2733, $r33=var2300, $r35=var3350, $r37=var840, $r36=var3602, $r38=var1357, $r39=var3224, $r40=var844, $r41=var1930, $r42=var451, $r43=var2875, $r45=var191, $r44=var3716, $r46=var1759, $r48=var2062, $r47=var1757, $r49=var979, $r51=var1861, $r50=var2020, $r52=var1081, $r53=var3167, $r54=var552}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 3,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 30,"<java.lang.StringBuilder: java.lang.String toString()>": 3}
;stmts r1 := @this: org.hibernate.id.MultipleHiLoPerTableGenerator;	r0 := @parameter0: org.hibernate.boot.model.relational.SqlStringGenerationContext;	$r2 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: org.hibernate.boot.model.relational.QualifiedName physicalTableName>;	r3 = interfaceinvoke r0.<org.hibernate.boot.model.relational.SqlStringGenerationContext: java.lang.String format(org.hibernate.boot.model.relational.QualifiedName)>($r2);	$r4 = new java.lang.StringBuilder;	specialinvoke $r4.<java.lang.StringBuilder: void <init>()>();	$r6 = virtualinvoke $r4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("select ");	$r5 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String valueColumnName>;	$r7 = virtualinvoke $r6.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r5);	$r11 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ");	$r9 = interfaceinvoke r0.<org.hibernate.boot.model.relational.SqlStringGenerationContext: org.hibernate.dialect.Dialect getDialect()>();	$r8 = <org.hibernate.LockMode: org.hibernate.LockMode PESSIMISTIC_WRITE>;	$r10 = virtualinvoke $r9.<org.hibernate.dialect.Dialect: java.lang.String appendLockHint(org.hibernate.LockMode,java.lang.String)>($r8, r3);	$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);	$r14 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" where ");	$r13 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String segmentColumnName>;	$r15 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r13);	$r17 = virtualinvoke $r15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = \'");	$r16 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String segmentName>;	$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r16);	$r21 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");	$r19 = interfaceinvoke r0.<org.hibernate.boot.model.relational.SqlStringGenerationContext: org.hibernate.dialect.Dialect getDialect()>();	$r20 = virtualinvoke $r19.<org.hibernate.dialect.Dialect: java.lang.String getForUpdateString()>();	$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r20);	$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.String toString()>();	r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String query> = $r23;	$r24 = new java.lang.StringBuilder;	specialinvoke $r24.<java.lang.StringBuilder: void <init>()>();	$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("update ");	$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);	$r28 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" set ");	$r27 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String valueColumnName>;	$r29 = virtualinvoke $r28.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r27);	$r31 = virtualinvoke $r29.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ? where ");	$r30 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String valueColumnName>;	$r32 = virtualinvoke $r31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r30);	$r34 = virtualinvoke $r32.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = ? and ");	$r33 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String segmentColumnName>;	$r35 = virtualinvoke $r34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r33);	$r37 = virtualinvoke $r35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" = \'");	$r36 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String segmentName>;	$r38 = virtualinvoke $r37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r36);	$r39 = virtualinvoke $r38.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\'");	$r40 = virtualinvoke $r39.<java.lang.StringBuilder: java.lang.String toString()>();	r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String update> = $r40;	$r41 = new java.lang.StringBuilder;	specialinvoke $r41.<java.lang.StringBuilder: void <init>()>();	$r42 = virtualinvoke $r41.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("insert into ");	$r43 = virtualinvoke $r42.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r3);	$r45 = virtualinvoke $r43.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");	$r44 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String segmentColumnName>;	$r46 = virtualinvoke $r45.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r44);	$r48 = virtualinvoke $r46.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");	$r47 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String valueColumnName>;	$r49 = virtualinvoke $r48.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r47);	$r51 = virtualinvoke $r49.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") values(\'");	$r50 = r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String segmentName>;	$r52 = virtualinvoke $r51.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r50);	$r53 = virtualinvoke $r52.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("\', ?)");	$r54 = virtualinvoke $r53.<java.lang.StringBuilder: java.lang.String toString()>();	r1.<org.hibernate.id.MultipleHiLoPerTableGenerator: java.lang.String insert> = $r54;	return
;block_num 1