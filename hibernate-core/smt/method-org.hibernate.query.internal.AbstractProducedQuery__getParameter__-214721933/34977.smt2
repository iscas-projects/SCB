(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var1835 0)
(declare-sort var860 0)
(declare-sort var1498 0)
(declare-sort var3637 0)
(declare-sort var3532 0)
(declare-sort var1890 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun getProducer/-1443624759 (var1835) var1498)
(declare-fun var1498_checkOpen/1415919888 (var1498 Bool) void)
(declare-fun getParameterMetadata/-437200728 (var1835) var3637)
(declare-fun var3637_getQueryParameter/286389064 (var3637 String) var3532)
(declare-fun var3532_getParameterType/1551337797 (var3532) ClassObject)
(declare-fun isAssignableFrom/-1028998700 (ClassObject ClassObject) Bool)
(declare-fun var1890-init () var1890)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(declare-fun getName/-1958580599 (ClassObject) String)
(define-fun toString/-2075883882 ((s String)) String s)
(declare-fun <init>/875830710 (var1890 String) void)
(declare-const null-var1835 var1835)
(declare-const null-String String)
(declare-const null-ClassObject ClassObject)
(declare-const var1655 var1835) ; Statement: r0 := @this: org.hibernate.query.internal.AbstractProducedQuery 
(assert (not (= var1655 null-var1835)))
(declare-const var2556 String) ; Statement: r2 := @parameter0: java.lang.String 
(assert (not (= var2556 null-String)))
(declare-const var2242 ClassObject) ; Statement: r5 := @parameter1: java.lang.Class 
(assert (not (= var2242 null-ClassObject)))
(assert true)
(define-const var181 var1498 (getProducer/-1443624759 var1655)) ; Statement: $r1 = virtualinvoke r0.<org.hibernate.query.internal.AbstractProducedQuery: org.hibernate.engine.spi.SharedSessionContractImplementor getProducer()>() 
;(assert (var1498_checkOpen/1415919888 var181 (ite (= 1 0) true false))) ; Statement: interfaceinvoke $r1.<org.hibernate.engine.spi.SharedSessionContractImplementor: void checkOpen(boolean)>(0) 

(declare-const var181!1 var1498)
(declare-const var858 Int)
(assert true)
(define-const var953 var3637 (getParameterMetadata/-437200728 var1655)) ; Statement: $r3 = virtualinvoke r0.<org.hibernate.query.internal.AbstractProducedQuery: org.hibernate.query.ParameterMetadata getParameterMetadata()>() 
(define-const var2593 var3532 (var3637_getQueryParameter/286389064 var953 var2556)) ; Statement: r4 = interfaceinvoke $r3.<org.hibernate.query.ParameterMetadata: org.hibernate.query.QueryParameter getQueryParameter(java.lang.String)>(r2) 
(define-const var1192 ClassObject (var3532_getParameterType/1551337797 var2593)) ; Statement: $r6 = interfaceinvoke r4.<org.hibernate.query.QueryParameter: java.lang.Class getParameterType()>() 
(assert true)
(define-const var3949 Bool (isAssignableFrom/-1028998700 var1192 var2242)) ; Statement: $z0 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r5) 
 ; Statement: if $z0 != 0 goto return r4 
(assert (not (not (= (ite var3949 1 0) 0)))) ; Negate: Cond: $z0 != 0  
(define-const var3967 var1890 var1890-init) ; Statement: $r7 = new java.lang.IllegalArgumentException 
(define-const var3916 String String-init) ; Statement: $r8 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var3916)) ; Statement: specialinvoke $r8.<java.lang.StringBuilder: void <init>()>() 
(declare-const var3916!1 String)
(assert (= var3916!1 ""))
(assert true)
(define-const var2130 String (append/672562846 var3916!1 "The type [")) ; Statement: $r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The type [") 
(declare-const var3916!2 String)
(assert (= var3916!2 (str.++ var3916!1 "The type [")))
(define-const var2057 ClassObject (var3532_getParameterType/1551337797 var2593)) ; Statement: $r9 = interfaceinvoke r4.<org.hibernate.query.QueryParameter: java.lang.Class getParameterType()>() 
(assert true)
(define-const var3506 String (getName/-1958580599 var2057)) ; Statement: $r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>() 
(assert true)
(define-const var1454 String (append/672562846 var2130 var3506)) ; Statement: $r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10) 
(declare-const var2130!1 String)
(assert (= var2130!1 (str.++ var2130 var3506)))
(assert true)
(define-const var2054 String (append/672562846 var1454 "] associated with the parameter corresponding to name [")) ; Statement: $r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] associated with the parameter corresponding to name [") 
(declare-const var1454!1 String)
(assert (= var1454!1 (str.++ var1454 "] associated with the parameter corresponding to name [")))
(assert true)
(define-const var407 String (append/672562846 var2054 var2556)) ; Statement: $r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) 
(declare-const var2054!1 String)
(assert (= var2054!1 (str.++ var2054 var2556)))
(assert true)
(define-const var590 String (append/672562846 var407 "] is not assignable to requested Java type [")) ; Statement: $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not assignable to requested Java type [") 
(declare-const var407!1 String)
(assert (= var407!1 (str.++ var407 "] is not assignable to requested Java type [")))
(assert true)
(define-const var566 String (getName/-1958580599 var2242)) ; Statement: $r15 = virtualinvoke r5.<java.lang.Class: java.lang.String getName()>() 
(assert true)
(define-const var3929 String (append/672562846 var590 var566)) ; Statement: $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) 
(declare-const var590!1 String)
(assert (= var590!1 (str.++ var590 var566)))
(assert true)
(define-const var2830 String (append/672562846 var3929 "]")) ; Statement: $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]") 
(declare-const var3929!1 String)
(assert (= var3929!1 (str.++ var3929 "]")))
(assert true)
(define-const var705 String (toString/-2075883882 var2830)) ; Statement: $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>() 
(assert true)
;(assert (<init>/875830710 var3967 var705)) ; Statement: specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19) 

(declare-const var3967!1 var1890)
(declare-const var705!1 String)
 ; Statement: throw $r7 
(check-sat)
(get-model)
(get-unsat-core)
; {getProducer/-1443624759=([org.hibernate.query.internal.AbstractProducedQuery], org.hibernate.engine.spi.SharedSessionContractImplementor), var1498_checkOpen/1415919888=([org.hibernate.engine.spi.SharedSessionContractImplementor, boolean], void), getParameterMetadata/-437200728=([org.hibernate.query.internal.AbstractProducedQuery], org.hibernate.query.ParameterMetadata), var3637_getQueryParameter/286389064=([org.hibernate.query.ParameterMetadata, java.lang.String], org.hibernate.query.QueryParameter), var3532_getParameterType/1551337797=([org.hibernate.query.QueryParameter], java.lang.Class), isAssignableFrom/-1028998700=([java.lang.Class, java.lang.Class], boolean), var1890-init=([], java.lang.IllegalArgumentException), String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), getName/-1958580599=([java.lang.Class], java.lang.String), toString/-2075883882=([java.lang.StringBuilder], java.lang.String), <init>/875830710=([java.lang.IllegalArgumentException, java.lang.String], void)}
; {var1835=org.hibernate.query.internal.AbstractProducedQuery, var1655=r0, var2556=r2, var860=null_type, var2242=r5, var1498=org.hibernate.engine.spi.SharedSessionContractImplementor, var181=$r1, var858=0, var3637=org.hibernate.query.ParameterMetadata, var953=$r3, var3532=org.hibernate.query.QueryParameter, var2593=r4, var1192=$r6, var3949=$z0, var1890=java.lang.IllegalArgumentException, var3967=$r7, var3916=$r8, var2130=$r11, var2057=$r9, var3506=$r10, var1454=$r12, var2054=$r13, var407=$r14, var590=$r16, var566=$r15, var3929=$r17, var2830=$r18, var705=$r19}
; {org.hibernate.query.internal.AbstractProducedQuery=var1835, r0=var1655, r2=var2556, null_type=var860, r5=var2242, org.hibernate.engine.spi.SharedSessionContractImplementor=var1498, $r1=var181, 0=var858, org.hibernate.query.ParameterMetadata=var3637, $r3=var953, org.hibernate.query.QueryParameter=var3532, r4=var2593, $r6=var1192, $z0=var3949, java.lang.IllegalArgumentException=var1890, $r7=var3967, $r8=var3916, $r11=var2130, $r9=var2057, $r10=var3506, $r12=var1454, $r13=var2054, $r14=var407, $r16=var590, $r15=var566, $r17=var3929, $r18=var2830, $r19=var705}
;seq <java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.StringBuilder: void <init>()>": 1,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 7,"<java.lang.StringBuilder: java.lang.String toString()>": 1}
;stmts r0 := @this: org.hibernate.query.internal.AbstractProducedQuery;	r2 := @parameter0: java.lang.String;	r5 := @parameter1: java.lang.Class;	$r1 = virtualinvoke r0.<org.hibernate.query.internal.AbstractProducedQuery: org.hibernate.engine.spi.SharedSessionContractImplementor getProducer()>();	interfaceinvoke $r1.<org.hibernate.engine.spi.SharedSessionContractImplementor: void checkOpen(boolean)>(0);	$r3 = virtualinvoke r0.<org.hibernate.query.internal.AbstractProducedQuery: org.hibernate.query.ParameterMetadata getParameterMetadata()>();	r4 = interfaceinvoke $r3.<org.hibernate.query.ParameterMetadata: org.hibernate.query.QueryParameter getQueryParameter(java.lang.String)>(r2);	$r6 = interfaceinvoke r4.<org.hibernate.query.QueryParameter: java.lang.Class getParameterType()>();	$z0 = virtualinvoke $r6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(r5);	if $z0 != 0 goto return r4;	$r7 = new java.lang.IllegalArgumentException;	$r8 = new java.lang.StringBuilder;	specialinvoke $r8.<java.lang.StringBuilder: void <init>()>();	$r11 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("The type [");	$r9 = interfaceinvoke r4.<org.hibernate.query.QueryParameter: java.lang.Class getParameterType()>();	$r10 = virtualinvoke $r9.<java.lang.Class: java.lang.String getName()>();	$r12 = virtualinvoke $r11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r10);	$r13 = virtualinvoke $r12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] associated with the parameter corresponding to name [");	$r14 = virtualinvoke $r13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);	$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("] is not assignable to requested Java type [");	$r15 = virtualinvoke r5.<java.lang.Class: java.lang.String getName()>();	$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);	$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");	$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.String toString()>();	specialinvoke $r7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>($r19);	throw $r7
;block_num 2