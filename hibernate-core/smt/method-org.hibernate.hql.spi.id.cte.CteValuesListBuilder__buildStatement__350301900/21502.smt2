(set-option :produce-unsat-cores true) ; enable generation of unsat cores
(set-option :produce-models true) ; enable model generation
(set-logic ALL)
(declare-sort var3066 0)
(declare-sort var3894 0)
(declare-sort var2695 0)
(declare-sort var3506 0)
(declare-sort var3259 0)
(declare-sort void 0)
(declare-sort Iterator 0)
(declare-sort ClassObject 0)
(declare-fun columns/1280731201 (var3066) (Array Int String))
(declare-fun String_join/-1520935655 (String (Array Int String)) String)
(define-fun cast-from-String-to-String ((arg String)) String arg)
(define-fun cast-from-__Array__Int__String__-to-__Array__Int__String__ ((arg (Array Int String))) (Array Int String) arg)
(declare-fun String-init () String)
(define-fun <init>/1968657023 () String "")
(declare-fun append/-1166366385 (String Int) String)
(declare-fun getLength-Arr-String-1 ((Array Int String)) Int)
(declare-fun var2695_nCopies/1709586799 (Int var3506) var3894)
(declare-fun cast-from-String-to-var3506 (String) var3506)
(declare-fun String_join/1594745010 (String var3259) String)
(declare-fun cast-from-var3894-to-var3259 (var3894) var3259)
(define-fun append/672562846 ((s String) (tail String)) String (str.++ s tail))
(define-fun toString/-2075883882 ((s String)) String s)
(declare-fun ids/1280731201 (var3066) var3894)
(declare-fun var3894_size/-959786421 (var3894) Int)
(declare-fun tableName/1280731201 (var3066) String)
(declare-const null-var3066 var3066)
(declare-const var1047 var3066) ; Statement: r0 := @this: org.hibernate.hql.spi.id.cte.CteValuesListBuilder 
(assert (not (= var1047 null-var3066)))
(define-const var1060 (Array Int String) (columns/1280731201 var1047)) ; Statement: $r1 = r0.<org.hibernate.hql.spi.id.cte.CteValuesListBuilder: java.lang.String[] columns> 
(define-const var2375 String (String_join/-1520935655 (cast-from-String-to-String ",") (cast-from-__Array__Int__String__-to-__Array__Int__String__ var1060))) ; Statement: r2 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.CharSequence[])>(",", $r1) 
(define-const var451 String String-init) ; Statement: $r3 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var451)) ; Statement: specialinvoke $r3.<java.lang.StringBuilder: void <init>()>() 
(declare-const var451!1 String)
(assert (= var451!1 ""))
(assert true)
(define-const var1180 String (append/-1166366385 var451!1 40)) ; Statement: $r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40) 
(declare-const var451!2 String)
(assert (str.prefixof var451!1 var451!2))
(define-const var2885 (Array Int String) (columns/1280731201 var1047)) ; Statement: $r4 = r0.<org.hibernate.hql.spi.id.cte.CteValuesListBuilder: java.lang.String[] columns> 
(define-const var2010 Int (getLength-Arr-String-1 var2885)) ; Statement: $i0 = lengthof $r4 
(define-const var1827 var3894 (var2695_nCopies/1709586799 var2010 (cast-from-String-to-var3506 "?"))) ; Statement: $r5 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>($i0, "?") 
(define-const var89 String (String_join/1594745010 (cast-from-String-to-String ",") (cast-from-var3894-to-var3259 var1827))) ; Statement: $r6 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",", $r5) 
(assert true)
(define-const var1581 String (append/672562846 var1180 var89)) ; Statement: $r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6) 
(declare-const var1180!1 String)
(assert (= var1180!1 (str.++ var1180 var89)))
(assert true)
(define-const var995 String (append/-1166366385 var1581 41)) ; Statement: $r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41) 
(declare-const var1581!1 String)
(assert (str.prefixof var1581 var1581!1))
(assert true)
(define-const var3906 String (toString/-2075883882 var995)) ; Statement: r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>() 
(define-const var1617 var3894 (ids/1280731201 var1047)) ; Statement: $r11 = r0.<org.hibernate.hql.spi.id.cte.CteValuesListBuilder: java.util.List ids> 
(define-const var2461 Int (var3894_size/-959786421 var1617)) ; Statement: $i1 = interfaceinvoke $r11.<java.util.List: int size()>() 
(define-const var2268 var3894 (var2695_nCopies/1709586799 var2461 (cast-from-String-to-var3506 var3906))) ; Statement: $r12 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>($i1, r10) 
(define-const var987 String (String_join/1594745010 (cast-from-String-to-String ",") (cast-from-var3894-to-var3259 var2268))) ; Statement: r13 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",", $r12) 
(define-const var2436 String String-init) ; Statement: $r14 = new java.lang.StringBuilder 
(assert true)
;(assert (<init>/1968657023 var2436)) ; Statement: specialinvoke $r14.<java.lang.StringBuilder: void <init>()>() 
(declare-const var2436!1 String)
(assert (= var2436!1 ""))
(assert true)
(define-const var2485 String (append/672562846 var2436!1 "with ")) ; Statement: $r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with ") 
(declare-const var2436!2 String)
(assert (= var2436!2 (str.++ var2436!1 "with ")))
(define-const var935 String (tableName/1280731201 var1047)) ; Statement: $r15 = r0.<org.hibernate.hql.spi.id.cte.CteValuesListBuilder: java.lang.String tableName> 
(assert true)
(define-const var2720 String (append/672562846 var2485 var935)) ; Statement: $r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15) 
(declare-const var2485!1 String)
(assert (= var2485!1 (str.++ var2485 var935)))
(assert true)
(define-const var2319 String (append/672562846 var2720 " (")) ; Statement: $r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (") 
(declare-const var2720!1 String)
(assert (= var2720!1 (str.++ var2720 " (")))
(assert true)
(define-const var2075 String (append/672562846 var2319 var2375)) ; Statement: $r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) 
(declare-const var2319!1 String)
(assert (= var2319!1 (str.++ var2319 var2375)))
(assert true)
(define-const var1943 String (append/672562846 var2075 " ) as ( select ")) ; Statement: $r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ) as ( select ") 
(declare-const var2075!1 String)
(assert (= var2075!1 (str.++ var2075 " ) as ( select ")))
(assert true)
(define-const var2538 String (append/672562846 var1943 var2375)) ; Statement: $r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) 
(declare-const var1943!1 String)
(assert (= var1943!1 (str.++ var1943 var2375)))
(assert true)
(define-const var3822 String (append/672562846 var2538 " from ( values  ")) ; Statement: $r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ( values  ") 
(declare-const var2538!1 String)
(assert (= var2538!1 (str.++ var2538 " from ( values  ")))
(assert true)
(define-const var3469 String (append/672562846 var3822 var987)) ; Statement: $r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13) 
(declare-const var3822!1 String)
(assert (= var3822!1 (str.++ var3822 var987)))
(assert true)
(define-const var1424 String (append/672562846 var3469 ") as HT ")) ; Statement: $r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") as HT ") 
(declare-const var3469!1 String)
(assert (= var3469!1 (str.++ var3469 ") as HT ")))
(assert true)
(define-const var575 String (append/672562846 var1424 "(")) ; Statement: $r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(") 
(declare-const var1424!1 String)
(assert (= var1424!1 (str.++ var1424 "(")))
(assert true)
(define-const var3485 String (append/672562846 var575 var2375)) ; Statement: $r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2) 
(declare-const var575!1 String)
(assert (= var575!1 (str.++ var575 var2375)))
(assert true)
(define-const var266 String (append/672562846 var3485 ") ) ")) ; Statement: $r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ) ") 
(declare-const var3485!1 String)
(assert (= var3485!1 (str.++ var3485 ") ) ")))
(assert true)
(define-const var3617 String (toString/-2075883882 var266)) ; Statement: $r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>() 
 ; Statement: return $r28 
(check-sat)
(get-model)
(get-unsat-core)
; {columns/1280731201=([org.hibernate.hql.spi.id.cte.CteValuesListBuilder], java.lang.String[]), String_join/-1520935655=([java.lang.CharSequence, java.lang.CharSequence[]], java.lang.String), cast-from-String-to-String=([java.lang.String], java.lang.CharSequence), cast-from-__Array__Int__String__-to-__Array__Int__String__=([java.lang.String[]], java.lang.CharSequence[]), String-init=([], java.lang.StringBuilder), <init>/1968657023=([java.lang.StringBuilder], void), append/-1166366385=([java.lang.StringBuilder, char], java.lang.StringBuilder), getLength-Arr-String-1=([java.lang.String[]], int), var2695_nCopies/1709586799=([int, java.lang.Object], java.util.List), cast-from-String-to-var3506=([java.lang.String], java.lang.Object), String_join/1594745010=([java.lang.CharSequence, java.lang.Iterable], java.lang.String), cast-from-var3894-to-var3259=([java.util.List], java.lang.Iterable), append/672562846=([java.lang.StringBuilder, java.lang.String], java.lang.StringBuilder), toString/-2075883882=([java.lang.StringBuilder], java.lang.String), ids/1280731201=([org.hibernate.hql.spi.id.cte.CteValuesListBuilder], java.util.List), var3894_size/-959786421=([java.util.List], int), tableName/1280731201=([org.hibernate.hql.spi.id.cte.CteValuesListBuilder], java.lang.String)}
; {var3066=org.hibernate.hql.spi.id.cte.CteValuesListBuilder, var1047=r0, var1060=$r1, var2375=r2, var451=$r3, var1180=$r7, var2885=$r4, var2010=$i0, var3894=java.util.List, var2695=java.util.Collections, var3506=java.lang.Object, var1827=$r5, var3259=java.lang.Iterable, var89=$r6, var1581=$r8, var995=$r9, var3906=r10, var1617=$r11, var2461=$i1, var2268=$r12, var987=r13, var2436=$r14, var2485=$r16, var935=$r15, var2720=$r17, var2319=$r18, var2075=$r19, var1943=$r20, var2538=$r21, var3822=$r22, var3469=$r23, var1424=$r24, var575=$r25, var3485=$r26, var266=$r27, var3617=$r28}
; {org.hibernate.hql.spi.id.cte.CteValuesListBuilder=var3066, r0=var1047, $r1=var1060, r2=var2375, $r3=var451, $r7=var1180, $r4=var2885, $i0=var2010, java.util.List=var3894, java.util.Collections=var2695, java.lang.Object=var3506, $r5=var1827, java.lang.Iterable=var3259, $r6=var89, $r8=var1581, $r9=var995, r10=var3906, $r11=var1617, $i1=var2461, $r12=var2268, r13=var987, $r14=var2436, $r16=var2485, $r15=var935, $r17=var2720, $r18=var2319, $r19=var2075, $r20=var1943, $r21=var2538, $r22=var3822, $r23=var3469, $r24=var1424, $r25=var575, $r26=var3485, $r27=var266, $r28=var3617}
;seq <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.CharSequence[])>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(char)>;	<java.lang.StringBuilder: java.lang.String toString()>;	<java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>;	<java.lang.StringBuilder: void <init>()>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>;	<java.lang.StringBuilder: java.lang.String toString()>
;cnt {"<java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.CharSequence[])>": 1,"<java.lang.StringBuilder: void <init>()>": 2,"<java.lang.StringBuilder: java.lang.StringBuilder append(char)>": 2,"<java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>": 2,"<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>": 13,"<java.lang.StringBuilder: java.lang.String toString()>": 2}
;stmts r0 := @this: org.hibernate.hql.spi.id.cte.CteValuesListBuilder;	$r1 = r0.<org.hibernate.hql.spi.id.cte.CteValuesListBuilder: java.lang.String[] columns>;	r2 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.CharSequence[])>(",", $r1);	$r3 = new java.lang.StringBuilder;	specialinvoke $r3.<java.lang.StringBuilder: void <init>()>();	$r7 = virtualinvoke $r3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);	$r4 = r0.<org.hibernate.hql.spi.id.cte.CteValuesListBuilder: java.lang.String[] columns>;	$i0 = lengthof $r4;	$r5 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>($i0, "?");	$r6 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",", $r5);	$r8 = virtualinvoke $r7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r6);	$r9 = virtualinvoke $r8.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);	r10 = virtualinvoke $r9.<java.lang.StringBuilder: java.lang.String toString()>();	$r11 = r0.<org.hibernate.hql.spi.id.cte.CteValuesListBuilder: java.util.List ids>;	$i1 = interfaceinvoke $r11.<java.util.List: int size()>();	$r12 = staticinvoke <java.util.Collections: java.util.List nCopies(int,java.lang.Object)>($i1, r10);	r13 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(",", $r12);	$r14 = new java.lang.StringBuilder;	specialinvoke $r14.<java.lang.StringBuilder: void <init>()>();	$r16 = virtualinvoke $r14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("with ");	$r15 = r0.<org.hibernate.hql.spi.id.cte.CteValuesListBuilder: java.lang.String tableName>;	$r17 = virtualinvoke $r16.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>($r15);	$r18 = virtualinvoke $r17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" (");	$r19 = virtualinvoke $r18.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);	$r20 = virtualinvoke $r19.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ) as ( select ");	$r21 = virtualinvoke $r20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);	$r22 = virtualinvoke $r21.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" from ( values  ");	$r23 = virtualinvoke $r22.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r13);	$r24 = virtualinvoke $r23.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") as HT ");	$r25 = virtualinvoke $r24.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");	$r26 = virtualinvoke $r25.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(r2);	$r27 = virtualinvoke $r26.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(") ) ");	$r28 = virtualinvoke $r27.<java.lang.StringBuilder: java.lang.String toString()>();	return $r28
;block_num 1